library(gdata)
library(Biostrings)
library(seqinr)
GenLength <- read.xls("../../Body/1Raw/GenerationLengthForMammals.xlsx")
CHOR = read.table('../../Body/2Derived/MitGenomics.txt', header = TRUE, sep='\t')
GenLength$Species = gsub(' ','_',GenLength$Scientific_name)
GenLength = GenLength[,c(14,16)]
dupl = GenLength[GenLength$Species == "Neophocaena_phocaenoides",]
gl = c(mean(dupl$GenerationLength_d), 'Neophocaena_phocaenoides')
GenLength = GenLength[GenLength$Species != 'Neophocaena_phocaenoides',]
GenLength = rbind(GenLength, gl)
fastaFile <- readDNAStringSet("../../Body/2Derived/mammalia_genomes.fa")
Species = names(fastaFile)
Sequence = paste(fastaFile)
Mamm <- data.frame(Species, Sequence)
data = merge(Mamm, GenLength, by='Species')
data = merge(data, CHOR[, c('Species', 'REP.DirRepLength', 'GenomeLength', 'A', 'T', 'G', 'C', by='Species')])
data = data[, -10]
View(data)
write.table(data, '../../Body/2Derived/MammalsGenomesEcology.txt', sep='\t', quote = F, row.names = F)
rm(list=ls(all=TRUE))  # remove everything from R memory (old variables, datasets...)
Rep = read.table('../../Body/3Results/ecoreps.csv', sep = ';', header = TRUE)
VecOfP = c(); VecOfRho = c();
for (i in 8:ncol(Rep))
{ # i = 8
p = as.numeric(cor.test(Rep[,i],Rep$generlen, method = 'spearman')[3])
rho = as.numeric(cor.test(Rep[,i],Rep$generlen, method = 'spearman')[4])
VecOfP = c(VecOfP,p)
VecOfRho = c(VecOfRho,rho)
}
summary(VecOfP)
summary(VecOfRho)
plot(VecOfRho[2:101],-log10(VecOfP[2:101]), ylim=c(min(-log10(VecOfP)),max(-log10(VecOfP))), xlim = c(min(VecOfRho),max(VecOfRho)), pch = 16, col = rgb(0.1,0.1,0.1,0.5), xlab = '', ylab = ''); par(new=TRUE)
plot(VecOfRho[1],-log10(VecOfP[1]), ylim=c(min(-log10(VecOfP)),max(-log10(VecOfP))), xlim = c(min(VecOfRho),max(VecOfRho)), pch = 16, col = rgb(1,0,0,1), xlab = 'rho', ylab = '-log10(p value)');
hist(VecOfRho[2:101], breaks = 15, xlim = c(min(VecOfRho),max(VecOfRho)), col = 'grey')
abline(v = VecOfRho[1], col = 'red', lwd = 3)
### do the same with PICs and probably plot it (should look better):
par(mfrow=c(1,2))
plot(log2(Rep$generlen),log2(Rep$TLOfADRRreal))
plot(log2(Rep$generlen),log2(Rep$TLOfADRR1))
library(ape) # install.packages('ape')
tree <- read.tree("../../Body/1Raw/mtalign.aln.treefile.rooted")
data = Rep[which(as.character(Rep$spece) %in% tree$tip.label),]
row.names(data) = data$spece
df_vec <- as.character(Rep$spece)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
TempData = data[, c('generlen', 'TLOfADRRreal', 'TLOfADRR1')]
contrasts <- as.data.frame(apply(TempData, 2, pic, tree2))
names(contrasts) = names(TempData)
View(contrasts)
par(mfrow=c(2,1))
plot(log(contrasts$generlen), log(contrasts$TLOfADRRreal))
cor.test(log(contrasts$generlen), log(contrasts$TLOfADRRreal))
log(contrasts$TLOfADRRreal)
log(contrasts$generlen)
plot(log(contrasts$generlen), log(contrasts$TLOfADRR1))
log(contrasts$TLOfADRR1)
log(contrasts$generlen)
View(contrasts)
plot(contrasts$generlen, contrasts$TLOfADRRreal);
plot(contrasts$generlen, contrasts$TLOfADRR1)
cor.test(contrasts$generlen, contrasts$TLOfADRRreal, method = 'spearman')
cor.test(contrasts$generlen, contrasts$TLOfADRR1, method = 'spearman')
cor.test(contrasts$generlen, contrasts$TLOfADRR1, method = 'spearman', alternative = 'less')
cor.test(contrasts$generlen, contrasts$TLOfADRRreal, method = 'spearman', alternative = 'less')
rm(list=ls(all=TRUE))  # remove everything from R memory (old variables, datasets...)
Rep = read.table('../../Body/3Results/ecoreps.csv', sep = ';', header = TRUE)
pdf("../../Body/4Figures/RealAndSimulatedRepeatsVsLongevity.R.01.pdf")
VecOfP = c(); VecOfRho = c();
for (i in 8:ncol(Rep))
{ # i = 8
p = as.numeric(cor.test(Rep[,i],Rep$generlen, method = 'spearman')[3])
rho = as.numeric(cor.test(Rep[,i],Rep$generlen, method = 'spearman')[4])
VecOfP = c(VecOfP,p)
VecOfRho = c(VecOfRho,rho)
}
summary(VecOfP)
summary(VecOfRho)
plot(VecOfRho[2:101],-log10(VecOfP[2:101]), ylim=c(min(-log10(VecOfP)),max(-log10(VecOfP))), xlim = c(min(VecOfRho),max(VecOfRho)), pch = 16, col = rgb(0.1,0.1,0.1,0.5), xlab = '', ylab = ''); par(new=TRUE)
plot(VecOfRho[1],-log10(VecOfP[1]), ylim=c(min(-log10(VecOfP)),max(-log10(VecOfP))), xlim = c(min(VecOfRho),max(VecOfRho)), pch = 16, col = rgb(1,0,0,1), xlab = 'rho', ylab = '-log10(p value)');
hist(VecOfRho[2:101], breaks = 15, xlim = c(min(VecOfRho),max(VecOfRho)), col = 'grey')
abline(v = VecOfRho[1], col = 'red', lwd = 3)
### do the same with PICs and probably plot it (should look better):
par(mfrow=c(1,2))
plot(log2(Rep$generlen),log2(Rep$TLOfADRRreal))
plot(log2(Rep$generlen),log2(Rep$TLOfADRR1))
library(ape) # install.packages('ape')
tree <- read.tree("../../Body/1Raw/mtalign.aln.treefile.rooted")
data = Rep[which(as.character(Rep$spece) %in% tree$tip.label),]
row.names(data) = data$spece
df_vec <- as.character(Rep$spece)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
TempData = data[, c('generlen', 'TLOfADRRreal', 'TLOfADRR1')]
View(TempData)
TempData[,1] = log2(TempData[,1])
TempData[,1] = log2(TempData[,1]); TempData[,2] = log2(TempData[,2]);  TempData[,3] = log2(TempData[,3]);
TempData = data[, c('generlen', 'TLOfADRRreal', 'TLOfADRR1')]
TempData[,1] = log2(TempData[,1]); TempData[,2] = log2(TempData[,2]);  TempData[,3] = log2(TempData[,3]);
contrasts <- as.data.frame(apply(TempData, 2, pic, tree2))
names(contrasts) = names(TempData)
par(mfrow=c(2,1))
plot(contrasts$generlen, contrasts$TLOfADRRreal); cor.test(contrasts$generlen, contrasts$TLOfADRRreal, method = 'spearman', alternative = 'less') # nonsignificant
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
par(mfrow=c(2,1))
plot(contrasts$generlen, contrasts$TLOfADRRreal); cor.test(contrasts$generlen, contrasts$TLOfADRRreal, method = 'spearman', alternative = 'less') # nonsignificant
plot(contrasts$generlen, contrasts$TLOfADRR1); cor.test(contrasts$generlen, contrasts$TLOfADRR1, method = 'spearman', alternative = 'less')       # marginally
rm(list=ls(all=TRUE))  # remove everything from R memory (old variables, datasets...)
Rep = read.table('../../Body/3Results/ecoreps.csv', sep = ';', header = TRUE)
pdf("../../Body/4Figures/RealAndSimulatedRepeatsVsLongevity.R.01.pdf")
VecOfP = c(); VecOfRho = c();
for (i in 8:ncol(Rep))
{ # i = 8
p = as.numeric(cor.test(Rep[,i],Rep$generlen, method = 'spearman')[3])
rho = as.numeric(cor.test(Rep[,i],Rep$generlen, method = 'spearman')[4])
VecOfP = c(VecOfP,p)
VecOfRho = c(VecOfRho,rho)
}
summary(VecOfP)
summary(VecOfRho)
plot(VecOfRho[2:101],-log10(VecOfP[2:101]), ylim=c(min(-log10(VecOfP)),max(-log10(VecOfP))), xlim = c(min(VecOfRho),max(VecOfRho)), pch = 16, col = rgb(0.1,0.1,0.1,0.5), xlab = '', ylab = ''); par(new=TRUE)
plot(VecOfRho[1],-log10(VecOfP[1]), ylim=c(min(-log10(VecOfP)),max(-log10(VecOfP))), xlim = c(min(VecOfRho),max(VecOfRho)), pch = 16, col = rgb(1,0,0,1), xlab = 'rho', ylab = '-log10(p value)');
hist(VecOfRho[2:101], breaks = 15, xlim = c(min(VecOfRho),max(VecOfRho)), col = 'grey')
abline(v = VecOfRho[1], col = 'red', lwd = 3)
### do the same with PICs and probably plot it (should look better):
par(mfrow=c(1,2))
plot(log2(Rep$generlen),log2(Rep$TLOfADRRreal))
plot(log2(Rep$generlen),log2(Rep$TLOfADRR1))
# dev.off()
#########################################################################################
######################### PICs
library(ape) # install.packages('ape')
tree <- read.tree("../../Body/1Raw/mtalign.aln.treefile.rooted")
data = Rep[which(as.character(Rep$spece) %in% tree$tip.label),]
row.names(data) = data$spece
df_vec <- as.character(Rep$spece)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
TempData = data[, c('generlen', 'TLOfADRRreal', 'TLOfADRR1')]
TempData[,1] = log2(TempData[,1]); TempData[,2] = log2(TempData[,2]);  TempData[,3] = log2(TempData[,3]);
contrasts <- as.data.frame(apply(TempData, 2, pic, tree2))
names(contrasts) = names(TempData)
par(mfrow=c(2,1))
plot(contrasts$generlen, contrasts$TLOfADRRreal); cor.test(contrasts$generlen, contrasts$TLOfADRRreal, method = 'spearman', alternative = 'less') # nonsignificant
plot(contrasts$generlen, contrasts$TLOfADRR1); cor.test(contrasts$generlen, contrasts$TLOfADRR1, method = 'spearman', alternative = 'less')       # marginally
dev.off()
rm(list=ls(all=TRUE))  # remove everything from R memory (old variables, datasets...)
Rep = read.table('../../Body/3Results/ecoreps.csv', sep = ';', header = TRUE)
pdf("../../Body/4Figures/RealAndSimulatedRepeatsVsLongevity.R.01.pdf")
VecOfP = c(); VecOfRho = c();
for (i in 8:ncol(Rep))
{ # i = 8
p = as.numeric(cor.test(Rep[,i],Rep$generlen, method = 'spearman')[3])
rho = as.numeric(cor.test(Rep[,i],Rep$generlen, method = 'spearman')[4])
VecOfP = c(VecOfP,p)
VecOfRho = c(VecOfRho,rho)
}
summary(VecOfP)
summary(VecOfRho)
plot(VecOfRho[2:101],-log10(VecOfP[2:101]), ylim=c(min(-log10(VecOfP)),max(-log10(VecOfP))), xlim = c(min(VecOfRho),max(VecOfRho)), pch = 16, col = rgb(0.1,0.1,0.1,0.5), xlab = '', ylab = ''); par(new=TRUE)
plot(VecOfRho[1],-log10(VecOfP[1]), ylim=c(min(-log10(VecOfP)),max(-log10(VecOfP))), xlim = c(min(VecOfRho),max(VecOfRho)), pch = 16, col = rgb(1,0,0,1), xlab = 'rho', ylab = '-log10(p value)');
hist(VecOfRho[2:101], breaks = 15, xlim = c(min(VecOfRho),max(VecOfRho)), col = 'grey')
abline(v = VecOfRho[1], col = 'red', lwd = 3)
### do the same with PICs and probably plot it (should look better):
par(mfrow=c(1,2))
plot(log2(Rep$generlen),log2(Rep$TLOfADRRreal))
plot(log2(Rep$generlen),log2(Rep$TLOfADRR1))
# dev.off()
#########################################################################################
######################### PICs
library(ape) # install.packages('ape')
tree <- read.tree("../../Body/1Raw/mtalign.aln.treefile.rooted")
data = Rep[which(as.character(Rep$spece) %in% tree$tip.label),]
row.names(data) = data$spece
df_vec <- as.character(Rep$spece)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
TempData = data[, c('generlen', 'TLOfADRRreal', 'TLOfADRR1')]
TempData[,1] = log2(TempData[,1]); TempData[,2] = log2(TempData[,2]);  TempData[,3] = log2(TempData[,3]);
contrasts <- as.data.frame(apply(TempData, 2, pic, tree2))
names(contrasts) = names(TempData)
par(mfrow=c(2,1))
plot(contrasts$generlen, contrasts$TLOfADRRreal); cor.test(contrasts$generlen, contrasts$TLOfADRRreal, method = 'spearman', alternative = 'less') # nonsignificant
plot(contrasts$generlen, contrasts$TLOfADRR1); cor.test(contrasts$generlen, contrasts$TLOfADRR1, method = 'spearman', alternative = 'less')       # marginally
dev.off()
rm(list=ls(all=TRUE))  # remove everything from R memory (old variables, datasets...)
Rep = read.table('../../Body/3Results/ecoreps.csv', sep = ';', header = TRUE)
pdf("../../Body/4Figures/RealAndSimulatedRepeatsVsLongevity.R.01.pdf")
VecOfP = c(); VecOfRho = c();
for (i in 8:ncol(Rep))
{ # i = 8
p = as.numeric(cor.test(Rep[,i],Rep$generlen, method = 'spearman')[3])
rho = as.numeric(cor.test(Rep[,i],Rep$generlen, method = 'spearman')[4])
VecOfP = c(VecOfP,p)
VecOfRho = c(VecOfRho,rho)
}
summary(VecOfP)
summary(VecOfRho)
plot(VecOfRho[2:101],-log10(VecOfP[2:101]), ylim=c(min(-log10(VecOfP)),max(-log10(VecOfP))), xlim = c(min(VecOfRho),max(VecOfRho)), pch = 16, col = rgb(0.1,0.1,0.1,0.5), xlab = '', ylab = ''); par(new=TRUE)
plot(VecOfRho[1],-log10(VecOfP[1]), ylim=c(min(-log10(VecOfP)),max(-log10(VecOfP))), xlim = c(min(VecOfRho),max(VecOfRho)), pch = 16, col = rgb(1,0,0,1), xlab = 'rho', ylab = '-log10(p value)');
hist(VecOfRho[2:101], breaks = 15, xlim = c(min(VecOfRho),max(VecOfRho)), col = 'grey')
abline(v = VecOfRho[1], col = 'red', lwd = 3)
### do the same with PICs and probably plot it (should look better):
par(mfrow=c(1,2))
plot(log2(Rep$generlen),log2(Rep$TLOfADRRreal))
plot(log2(Rep$generlen),log2(Rep$TLOfADRR1))
# dev.off()
#########################################################################################
######################### PICs
library(ape) # install.packages('ape')
tree <- read.tree("../../Body/1Raw/mtalign.aln.treefile.rooted")
data = Rep[which(as.character(Rep$spece) %in% tree$tip.label),]
row.names(data) = data$spece
df_vec <- as.character(Rep$spece)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
TempData = data[, c('generlen', 'TLOfADRRreal', 'TLOfADRR1')]
TempData[,1] = log2(TempData[,1]); TempData[,2] = log2(TempData[,2]);  TempData[,3] = log2(TempData[,3]);
contrasts <- as.data.frame(apply(TempData, 2, pic, tree2))
names(contrasts) = names(TempData)
par(mfrow=c(2,2))
plot(contrasts$generlen, contrasts$TLOfADRRreal); cor.test(contrasts$generlen, contrasts$TLOfADRRreal, method = 'spearman', alternative = 'less') # nonsignificant
plot(contrasts$generlen, contrasts$TLOfADRR1); cor.test(contrasts$generlen, contrasts$TLOfADRR1, method = 'spearman', alternative = 'less')       # marginally
dev.off()
