# taxon = "Actinopterygii"
temp_data = a[a$TAXON == taxon,]
ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop))
rgb(0.1,0.1,0.1,0.1)
ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 2, colour=rgb(0.1,0.1,0.1,0.1)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop))
ggplot(temp_data, aes(Length, GenomeLength), colour=rgb(0.1,0.1,0.1,0.1)) +
geom_point(size = 2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop))
ggplot(temp_data, aes(Length, GenomeLength, colour=rgb(0.1,0.1,0.1,0.1))) +
geom_point(size = 2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop))
ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop))
ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop), legend_title = FALSE)
ggplot(temp_data, aes(Length, GenomeLength, alpha = 0.1)) +
geom_point(size = 2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop))
ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 2, alpha = 0.1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop, alpha = 0.1))
ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = MultipleDloop, alpha = 0.1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength))
ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(aes(size = MultipleDloop), alpha = 0.1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength))
ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 2, alpha = 0.1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop, alpha = 0.1))
ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 2, alpha = 0.1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop), alpha = 0.1)
ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 3, alpha = 0.1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop), alpha = 0.1)
ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 3, alpha = 0.1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop), alpha = 0.3)
for(taxon in unique(data$TAXON)){
# taxon = "Actinopterygii"
temp_data = a[a$TAXON == taxon,]
# a = cor.test(temp_data$GenomeLength, temp_data$Length)
ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 3, alpha = 0.1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop), alpha = 0.3)
# print(c(taxon, cor.test(temp_data$GenomeLength, temp_data$Length)))
}
for(taxon in unique(data$TAXON)){
# taxon = "Actinopterygii"
temp_data = a[a$TAXON == taxon,]
# a = cor.test(temp_data$GenomeLength, temp_data$Length)
ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 3, alpha = 0.1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop), alpha = 0.3)
# print(c(taxon, cor.test(temp_data$GenomeLength, temp_data$Length)))
}
for(taxon in unique(data$TAXON)){
# taxon = "Actinopterygii"
temp_data = a[a$TAXON == taxon,]
# a = cor.test(temp_data$GenomeLength, temp_data$Length)
ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 3, alpha = 0.1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop), alpha = 0.3)
# print(c(taxon, cor.test(temp_data$GenomeLength, temp_data$Length)))
}
for(taxon in unique(data$TAXON)){
# taxon = "Actinopterygii"
temp_data = a[a$TAXON == taxon,]
# a = cor.test(temp_data$GenomeLength, temp_data$Length)
ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 3, alpha = 0.1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop), alpha = 0.3)
# print(c(taxon, cor.test(temp_data$GenomeLength, temp_data$Length)))
}
for(taxon in unique(data$TAXON)){
# taxon = "Actinopterygii"
temp_data = a[a$TAXON == taxon,]
ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 3, alpha = 0.1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop), alpha = 0.3)
for(taxon in unique(data$TAXON)){
# taxon = "Actinopterygii"
temp_data = a[a$TAXON == taxon,]
# a = cor.test(temp_data$GenomeLength, temp_data$Length)
ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 3, alpha = 0.1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop), alpha = 0.3)
# print(c(taxon, cor.test(temp_data$GenomeLength, temp_data$Length)))
}
ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 3, alpha = 0.1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop), alpha = 0.3)
\
for(taxon in unique(data$TAXON)){
# taxon = "Actinopterygii"
temp_data = a[a$TAXON == taxon,]
# a = cor.test(temp_data$GenomeLength, temp_data$Length)
ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 3, alpha = 0.1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop), alpha = 0.3)
}
taxon = "Actinopterygii"
# taxon = "Actinopterygii"
temp_data = a[a$TAXON == taxon,]
ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 3, alpha = 0.1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop), alpha = 0.3)
for(taxon in unique(data$TAXON)){
# taxon = "Actinopterygii"
temp_data = a[a$TAXON == taxon,]
# a = cor.test(temp_data$GenomeLength, temp_data$Length)
ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 3, alpha = 0.1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop), alpha = 0.3)
}
for(taxon in unique(data$TAXON)){
# taxon = "Actinopterygii"
temp_data = a[a$TAXON == taxon,]
# a = cor.test(temp_data$GenomeLength, temp_data$Length)
print(ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 3, alpha = 0.1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop), alpha = 0.3))
}
for(taxon in unique(data$TAXON)){
# taxon = "Actinopterygii"
temp_data = a[a$TAXON == taxon,]
# a = cor.test(temp_data$GenomeLength, temp_data$Length)
print(ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 3, alpha = 0.1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop), alpha = 0.3)) + title(taxon)
}
for(taxon in unique(data$TAXON)){
# taxon = "Actinopterygii"
temp_data = a[a$TAXON == taxon,]
# a = cor.test(temp_data$GenomeLength, temp_data$Length)
print(ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 3, alpha = 0.1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop), alpha = 0.3) + title(taxon))
}
print(ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 3, alpha = 0.1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop), alpha = 0.3) + title("ololo"))
for(taxon in unique(data$TAXON)){
# taxon = "Actinopterygii"
temp_data = a[a$TAXON == taxon,]
# a = cor.test(temp_data$GenomeLength, temp_data$Length)
print(ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 3, alpha = 0.1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop), alpha = 0.3) + title("ololo"))
}
for(taxon in unique(data$TAXON)){
# taxon = "Actinopterygii"
temp_data = a[a$TAXON == taxon,]
# a = cor.test(temp_data$GenomeLength, temp_data$Length)
print(ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 3, alpha = 0.1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop), alpha = 0.3) + main('ololo'))
}
for(taxon in unique(data$TAXON)){
# taxon = "Actinopterygii"
temp_data = a[a$TAXON == taxon,]
# a = cor.test(temp_data$GenomeLength, temp_data$Length)
print(ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 3, alpha = 0.1) +
title(taxon) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop), alpha = 0.3))
}
for(taxon in unique(data$TAXON)){
# taxon = "Actinopterygii"
temp_data = a[a$TAXON == taxon,]
# a = cor.test(temp_data$GenomeLength, temp_data$Length)
print(ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 3, alpha = 0.1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop), alpha = 0.3))
}
taxon = "Actinopterygii"
ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 3, alpha = 0.1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop), alpha = 0.3)
ggplot(temp_data, aes(Length, GenomeLength)) +
title(taxon)
ggplot(temp_data, aes(Length, GenomeLength)) +
title(taxon)
ggplot(temp_data, aes(Length, GenomeLength)) +
title(taxon) +
geom_point(size = 3, alpha = 0.1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop), alpha = 0.3)
ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 3, alpha = 0.1) +
title(taxon) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop), alpha = 0.3)
ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 3, alpha = 0.1) +
ggtitle(taxon) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop), alpha = 0.3)
for(taxon in unique(data$TAXON)){
# taxon = "Actinopterygii"
temp_data = a[a$TAXON == taxon,]
# a = cor.test(temp_data$GenomeLength, temp_data$Length)
print(ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 3, alpha = 0.1) +
ggtitle(taxon) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop), alpha = 0.3))
}
pdf('../../Body/4Figures/Figure1.pdf')
for(taxon in unique(data$TAXON)){
# taxon = "Actinopterygii"
temp_data = a[a$TAXON == taxon,]
# a = cor.test(temp_data$GenomeLength, temp_data$Length)
print(ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 3, alpha = 0.1) +
ggtitle(taxon) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop), alpha = 0.3))
}
dev.off()
library(ggplot2)
Dloops = read.table('../../Body/2Derived/dloops_control_regions.txt', header=TRUE, sep = '\t',
row.names = NULL)
names(Dloops) = c('Species', 'Feature_name', 'Feature_location', 'Strand', 'Sequence', 'Notes')
CHOR = read.table('../../Body/2Derived/MitGenomics.txt', header=TRUE, sep='\t')
CHOR = CHOR[CHOR$TAXON != "AncientFish", ]
Dloops$Length = as.numeric(lapply(as.character(Dloops$Sequence), nchar))
data = merge(CHOR, Dloops[, c('Species', 'Length')])
########### number of dloops
summary(Dloops$Feature_name)
length(unique(Dloops$Species))
not_unique = data.frame()
for(sp in unique(Dloops$Species)){
if(nrow(Dloops[Dloops$Species == sp,]) > 1){
not_unique = rbind(not_unique, Dloops[Dloops$Species == sp,])
}
}
summary(not_unique$Length)
not_unique = merge(not_unique, CHOR[, c('Species', 'TAXON')])
summary(not_unique$TAXON)
not_unique$MultipleDloop = 1
a = merge(data, not_unique, all.x = TRUE)
a = a[, c('Species', 'TAXON', 'Length', 'GenomeLength', 'MultipleDloop')]
pdf('../../Body/4Figures/DloopLength.R.Figure1.pdf')
for(taxon in unique(data$TAXON)){
# taxon = "Actinopterygii"
temp_data = a[a$TAXON == taxon,]
# a = cor.test(temp_data$GenomeLength, temp_data$Length)
print(ggplot(temp_data, aes(Length, GenomeLength)) +
geom_point(size = 3, alpha = 0.1) +
ggtitle(taxon) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
xlim(min(data$Length), max(data$Length)) + ylim(min(data$GenomeLength), max(data$GenomeLength)) +
geom_point(aes(Length, GenomeLength, size = MultipleDloop), alpha = 0.3))
}
dev.off()
library(ggplot2)
Dloops = read.table('../../Body/2Derived/dloops_control_regions.txt', header=TRUE, sep = '\t',
row.names = NULL)
names(Dloops) = c('Species', 'Feature_name', 'Feature_location', 'Strand', 'Sequence', 'Notes')
CHOR = read.table('../../Body/2Derived/MitGenomics.txt', header=TRUE, sep='\t')
CHOR = CHOR[CHOR$TAXON != "AncientFish", ]
Dloops$Length = as.numeric(lapply(as.character(Dloops$Sequence), nchar))
summary(Dloops$Length)
hist(Dloops$Length, breaks = 50)
data = merge(CHOR, Dloops[, c('Species', 'Length')])
not_unique = data.frame()
for(sp in unique(Dloops$Species)){
if(nrow(Dloops[Dloops$Species == sp,]) > 1){
not_unique = rbind(not_unique, Dloops[Dloops$Species == sp,])
}
}
summary(not_unique$Length)
not_unique = merge(not_unique, CHOR[, c('Species', 'TAXON')])
summary(not_unique$TAXON)
not_unique$MultipleDloop = 1
multDl = merge(Dloops, not_unique, all.x = TRUE)
multDl[is.na(multDl$MultipleDloop),]$MultipleDloop = 0
multDl = merge(multDl, data[, c('Species', 'GenomeLength')], by='Species', all.x = TRUE)
AGG = aggregate(data$Length, by=list(data$Species), sum)
names(AGG) = c('Species', 'DloopsLength')
oneSpOneCr = merge(data[, c('Species', 'TAXON', 'GenomeLength', 'ECO.Maximum.longevity..yrs.')], AGG, by='Species')
ggplot(one_sp_one_cr, aes(DloopsLength, GenomeLength, col=TAXON)) +
geom_point() + xlab('Sum of multiple dloops')
ggplot(oneSpOneCr, aes(DloopsLength, GenomeLength, col=TAXON)) +
geom_point() + xlab('Sum of multiple dloops')
for(taxon in unique(oneSpOneCr$TAXON)){
TempData = oneSpOneCr[oneSpOneCr$TAXON == taxon, ]
summary(lm(TempData$GenomeLength ~ TempData$DloopsLength))
}
for(taxon in unique(oneSpOneCr$TAXON)){
TempData = oneSpOneCr[oneSpOneCr$TAXON == taxon, ]
print(summary(lm(TempData$GenomeLength ~ TempData$DloopsLength)))
}
for(taxon in unique(oneSpOneCr$TAXON)){
TempData = oneSpOneCr[oneSpOneCr$TAXON == taxon, ]
print(taxon)
print(summary(lm(TempData$GenomeLength ~ TempData$DloopsLength)))
}
library(ape) # install.packages('ape')
tree <- read.tree("../../Body/1Raw/mtalign.aln.treefile.rooted")
tree <- read.tree("../../Body/1Raw/mtalign.aln.treefile.rooted")
data = oneSpOneCr[which(as.character(oneSpOneCr$Species) %in% tree$tip.label),]
row.names(data) = data$spece
df_vec <- as.character(oneSpOneCr$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
?pic
for(taxon in unique(oneSpOneCr$TAXON)){
TempData = oneSpOneCr[oneSpOneCr$TAXON == taxon, ]
print(taxon)
print(summary(lm(pic(TempData$GenomeLength, tree2) ~ pic(TempData$DloopsLength, tree2))))
}
for(taxon in unique(data$TAXON)){
TempData = data[data$TAXON == taxon, ]
df_vec <- as.character(TempData$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
print(taxon)
print(summary(lm(pic(TempData$GenomeLength, tree2) ~ pic(TempData$DloopsLength, tree2))))
}
df_vec <- as.character(TempData$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
print(taxon)
nrow(TempData)
length(tree2$tip.label)
data = oneSpOneCr[which(as.character(oneSpOneCr$Species) %in% tree$tip.label),]
row.names(data) = data$spece
row.names(data) = data$Species
View(oneSpOneCr)
AGG = aggregate(data$Length, by=list(data$Species), sum)
data = merge(CHOR, Dloops[, c('Species', 'Length')])
AGG = aggregate(data$Length, by=list(data$Species), sum)
names(AGG) = c('Species', 'DloopsLength')
oneSpOneCr = merge(data[, c('Species', 'TAXON', 'GenomeLength', 'ECO.Maximum.longevity..yrs.')], AGG, by='Species', all.y = TRUE)
View(AGG)
View(data)
View(oneSpOneCr)
oneSpOneCr = merge(data[, c('Species', 'TAXON', 'GenomeLength', 'ECO.Maximum.longevity..yrs.')], AGG, by='Species', all.y = TRUE)
oneSpOneCr = merge(AGG, data[, c('Species', 'TAXON', 'GenomeLength', 'ECO.Maximum.longevity..yrs.')], by='Species')
oneSpOneCr = merge(AGG, data[, c('Species', 'TAXON', 'GenomeLength', 'ECO.Maximum.longevity..yrs.')], by='Species', all.y = FALSE)
oneSpOneCr = merge(AGG, data[, c('Species', 'TAXON', 'GenomeLength', 'ECO.Maximum.longevity..yrs.')], by='Species', all.x = TRUE, all.y = FALSE)
ggplot(oneSpOneCr, aes(DloopsLength, GenomeLength, col=TAXON)) +
geom_point() + xlab('Sum of multiple dloops')
View(data)
View(AGG)
oneSpOneCr = merge(AGG, data[, c('Species', 'TAXON', 'GenomeLength', 'ECO.Maximum.longevity..yrs.')], by='Species', all.x = TRUE, all.y = FALSE)
?merge
oneSpOneCr = merge(AGG, data[, c('Species', 'TAXON', 'GenomeLength', 'ECO.Maximum.longevity..yrs.')], by='Species', all.y = FALSE)
oneSpOneCr = merge(AGG, CHOR[, c('Species', 'TAXON', 'GenomeLength', 'ECO.Maximum.longevity..yrs.')], by='Species', all.y = FALSE)
ggplot(oneSpOneCr, aes(DloopsLength, GenomeLength, col=TAXON)) +
geom_point() + xlab('Sum of multiple dloops')
data = oneSpOneCr[which(as.character(oneSpOneCr$Species) %in% tree$tip.label),]
row.names(data) = data$Species
df_vec <- as.character(data$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
for(taxon in unique(data$TAXON)){
TempData = data[data$TAXON == taxon, ]
df_vec <- as.character(TempData$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
print(taxon)
print(summary(lm(pic(TempData$GenomeLength, tree2) ~ pic(TempData$DloopsLength, tree2))))
}
pic(TempData$GenomeLength, tree2)
pic(TempData$DloopsLength, tree2)
print(summary(lm(pic(TempData$GenomeLength, tree2) ~ pic(TempData$DloopsLength, tree2))))
print(summary(lm(pic(TempData$GenomeLength, tree2) ~ pic(TempData$DloopsLength, tree2), na.action=na.exclude)))
summary(pic(TempData$GenomeLength, tree2))
hist(pic(TempData$GenomeLength, tree2))
print(summary(lm(pic(log2(TempData$GenomeLength), tree2) ~ pic(log2(TempData$DloopsLength), tree2), na.action=na.exclude)))
summary(pic(log2(TempData$GenomeLength, tree2)))
summary(pic(log2(TempData$GenomeLength), tree2))
?pic
print(summary(lm(pic(log2(TempData$GenomeLength), tree2, scaled = FALSE) ~ pic(log2(TempData$DloopsLength), tree2, scaled = FALSE), na.action=na.exclude)))
for(taxon in unique(data$TAXON)){
TempData = data[data$TAXON == taxon, ]
df_vec <- as.character(TempData$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
print(taxon)
print(summary(lm(pic(log2(TempData$GenomeLength), tree2, scaled = FALSE) ~ pic(log2(TempData$DloopsLength), tree2, scaled = FALSE), na.action=na.exclude)))
}
