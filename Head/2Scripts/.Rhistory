VecOfP = c(); VecOfRho = c();
for (i in 8:ncol(Rep))
{ # i = 8
p = as.numeric(cor.test(pic(Rep[,i], tree2), pic(Rep$generlen, tree2), method = 'spearman')[3])
rho = as.numeric(cor.test(pic(Rep[,i], tree2), pic(Rep$generlen, tree2), method = 'spearman')[4])
VecOfP = c(VecOfP,p)
VecOfRho = c(VecOfRho,rho)
}
summary(VecOfP)
summary(VecOfRho)
par(mfrow=c(1,1))
plot(VecOfRho[2:101],-log10(VecOfP[2:101]), ylim=c(min(-log10(VecOfP)),max(-log10(VecOfP))), xlim = c(min(VecOfRho),max(VecOfRho)), pch = 16, col = rgb(0.1,0.1,0.1,0.5), xlab = '', ylab = ''); par(new=TRUE)
plot(VecOfRho[1],-log10(VecOfP[1]), ylim=c(min(-log10(VecOfP)),max(-log10(VecOfP))), xlim = c(min(VecOfRho),max(VecOfRho)), pch = 16, col = rgb(1,0,0,1), xlab = 'rho', ylab = '-log10(p value)');
par(mfrow=c(1,1))
hist(VecOfRho[2:101], breaks = 15, xlim = c(min(VecOfRho),max(VecOfRho)), col = 'grey')
abline(v = VecOfRho[1], col = 'red', lwd = 3)
##############
TempData = data[, c('generlen', 'TLOfADRRreal', 'TLOfADRR1')]
TempData[,1] = log2(TempData[,1]); TempData[,2] = log2(TempData[,2]);  TempData[,3] = log2(TempData[,3]);
contrasts <- as.data.frame(apply(TempData, 2, pic, tree2))
names(contrasts) = names(TempData)
newdata <- subset(contrasts, !(contrasts$generlen > quantile(contrasts$generlen, probs=c(.01, .99))[2] | contrasts$generlen < quantile(contrasts$generlen, probs=c(.01, .99))[1]) )
newdata <- subset(newdata, !(newdata$TLOfADRRreal > quantile(newdata$TLOfADRRreal, probs=c(.01, .99))[2] | newdata$TLOfADRRreal < quantile(newdata$TLOfADRRreal, probs=c(.01, .99))[1]) )
newdata <- subset(newdata, !(newdata$TLOfADRR1 > quantile(newdata$TLOfADRR1, probs=c(.01, .99))[2] | newdata$TLOfADRR1 < quantile(newdata$TLOfADRR1, probs=c(.01, .99))[1]) )
par(mfrow=c(2,2))
# plot(contrasts$generlen, contrasts$TLOfADRRreal, col = rgb(0.1,0.1,0.1,0.5)); # cor.test(contrasts$generlen, contrasts$TLOfADRRreal, method = 'spearman', alternative = 'less') # nonsignificant
# plot(contrasts$generlen, contrasts$TLOfADRR1, col = rgb(0.1,0.1,0.1,0.5)); # cor.test(contrasts$generlen, contrasts$TLOfADRR1, method = 'spearman', alternative = 'less')       # marginally
plot(newdata$generlen, newdata$TLOfADRRreal, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2); # cor.test(newdata$generlen, newdata$TLOfADRRreal, method = 'spearman', alternative = 'less') # nonsignificant
plot(newdata$generlen, newdata$TLOfADRR1, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2,
ylim = c(min(newdata$TLOfADRRreal), max(newdata$TLOfADRRreal))); # cor.test(newdata$generlen, newdata$TLOfADRR1, method = 'spearman', alternative = 'less') # nonsignificant
dev.off()
min(VecOfRho)
match(min(VecOfRho), VecOfRho)
maxRho = match(min(VecOfRho), VecOfRho)
plot(newdata$generlen, newdata$TLOfADRR76, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2,
ylim = c(min(newdata$TLOfADRRreal), max(newdata$TLOfADRRreal))); # cor.test(newdata$generlen, newdata$TLOfADRR1, method = 'spearman', alternative = 'less') # nonsignificant
plot(newdata$generlen, newdata$TLOfADRR1, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2,
ylim = c(min(newdata$TLOfADRRreal), max(newdata$TLOfADRRreal))); # cor.test(newdata$generlen, newdata$TLOfADRR1, method = 'spearman', alternative = 'less') # nonsignificant
View(newdata)
maxRho = match(min(VecOfRho), VecOfRho)
TempData = data[, c('generlen', 'TLOfADRRreal', 'TLOfADRR76')]
TempData[,1] = log2(TempData[,1]); TempData[,2] = log2(TempData[,2]);  TempData[,3] = log2(TempData[,3]);
contrasts <- as.data.frame(apply(TempData, 2, pic, tree2))
names(contrasts) = names(TempData)
newdata <- subset(contrasts, !(contrasts$generlen > quantile(contrasts$generlen, probs=c(.01, .99))[2] | contrasts$generlen < quantile(contrasts$generlen, probs=c(.01, .99))[1]) )
newdata <- subset(newdata, !(newdata$TLOfADRRreal > quantile(newdata$TLOfADRRreal, probs=c(.01, .99))[2] | newdata$TLOfADRRreal < quantile(newdata$TLOfADRRreal, probs=c(.01, .99))[1]) )
newdata <- subset(newdata, !(newdata$TLOfADRR1 > quantile(newdata$TLOfADRR1, probs=c(.01, .99))[2] | newdata$TLOfADRR1 < quantile(newdata$TLOfADRR1, probs=c(.01, .99))[1]) )
plot(newdata$generlen, newdata$TLOfADRRreal, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2); # cor.test(newdata$generlen, newdata$TLOfADRRreal, method = 'spearman', alternative = 'less') # nonsignificant
plot(newdata$generlen, newdata$TLOfADRR1, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2,
ylim = c(min(newdata$TLOfADRRreal), max(newdata$TLOfADRRreal))); # cor.test(newdata$generlen, newdata$TLOfADRR1, method = 'spearman', alternative = 'less') # nonsignificant
TempData = data[, c('generlen', 'TLOfADRRreal', 'TLOfADRR76')]
View(TempData)
TempData[,1] = log2(TempData[,1]); TempData[,2] = log2(TempData[,2]);  TempData[,3] = log2(TempData[,3]);
contrasts <- as.data.frame(apply(TempData, 2, pic, tree2))
View(contrasts)
names(contrasts) = names(TempData)
newdata <- subset(contrasts, !(contrasts$generlen > quantile(contrasts$generlen, probs=c(.01, .99))[2] | contrasts$generlen < quantile(contrasts$generlen, probs=c(.01, .99))[1]) )
newdata <- subset(newdata, !(newdata$TLOfADRRreal > quantile(newdata$TLOfADRRreal, probs=c(.01, .99))[2] | newdata$TLOfADRRreal < quantile(newdata$TLOfADRRreal, probs=c(.01, .99))[1]) )
newdata <- subset(newdata, !(newdata$TLOfADRR1 > quantile(newdata$TLOfADRR1, probs=c(.01, .99))[2] | newdata$TLOfADRR1 < quantile(newdata$TLOfADRR1, probs=c(.01, .99))[1]) )
newdata <- subset(contrasts, !(contrasts$generlen > quantile(contrasts$generlen, probs=c(.01, .99))[2] | contrasts$generlen < quantile(contrasts$generlen, probs=c(.01, .99))[1]) )
newdata <- subset(newdata, !(newdata$TLOfADRRreal > quantile(newdata$TLOfADRRreal, probs=c(.01, .99))[2] | newdata$TLOfADRRreal < quantile(newdata$TLOfADRRreal, probs=c(.01, .99))[1]) )
newdata <- subset(newdata, !(newdata$TLOfADRR76 > quantile(newdata$TLOfADRR76, probs=c(.01, .99))[2] | newdata$TLOfADRR76 < quantile(newdata$TLOfADRR76, probs=c(.01, .99))[1]) )
plot(newdata$generlen, newdata$TLOfADRRreal, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2); # cor.test(newdata$generlen, newdata$TLOfADRRreal, method = 'spearman', alternative = 'less') # nonsignificant
plot(newdata$generlen, newdata$TLOfADRR1, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2,
ylim = c(min(newdata$TLOfADRRreal), max(newdata$TLOfADRRreal))); # cor.test(newdata$generlen, newdata$TLOfADRR1, method = 'spearman', alternative = 'less') # nonsignificant
plot(newdata$generlen, newdata$TLOfADRR76, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2,
ylim = c(min(newdata$TLOfADRRreal), max(newdata$TLOfADRRreal))); # cor.test(newdata$generlen, newdata$TLOfADRR1, method = 'spearman', alternative = 'less') # nonsignificant
plot(newdata$generlen, newdata$TLOfADRR76, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2,
ylim = c(min(newdata$TLOfADRRreal), max(newdata$TLOfADRRreal))); cor.test(newdata$generlen, newdata$TLOfADRR1, method = 'spearman', alternative = 'less') # nonsignificant
plot(newdata$generlen, newdata$TLOfADRR76, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2,
ylim = c(min(newdata$TLOfADRRreal), max(newdata$TLOfADRRreal))); cor.test(newdata$generlen, newdata$TLOfADRR76, method = 'spearman', alternative = 'less') # nonsignificant
TempData = data[, c('generlen', 'TLOfADRRreal', 'TLOfADRR75')]
TempData[,1] = log2(TempData[,1]); TempData[,2] = log2(TempData[,2]);  TempData[,3] = log2(TempData[,3]);
contrasts <- as.data.frame(apply(TempData, 2, pic, tree2))
names(contrasts) = names(TempData)
newdata <- subset(contrasts, !(contrasts$generlen > quantile(contrasts$generlen, probs=c(.01, .99))[2] | contrasts$generlen < quantile(contrasts$generlen, probs=c(.01, .99))[1]) )
newdata <- subset(newdata, !(newdata$TLOfADRRreal > quantile(newdata$TLOfADRRreal, probs=c(.01, .99))[2] | newdata$TLOfADRRreal < quantile(newdata$TLOfADRRreal, probs=c(.01, .99))[1]) )
newdata <- subset(newdata, !(newdata$TLOfADRR75 > quantile(newdata$TLOfADRR75, probs=c(.01, .99))[2] | newdata$TLOfADRR75 < quantile(newdata$TLOfADRR75, probs=c(.01, .99))[1]) )
plot(newdata$generlen, newdata$TLOfADRRreal, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2); # cor.test(newdata$generlen, newdata$TLOfADRRreal, method = 'spearman', alternative = 'less') # nonsignificant
plot(newdata$generlen, newdata$TLOfADRR76, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2,
ylim = c(min(newdata$TLOfADRRreal), max(newdata$TLOfADRRreal))); # cor.test(newdata$generlen, newdata$TLOfADRR76, method = 'spearman', alternative = 'less') # nonsignificant
plot(newdata$generlen, newdata$TLOfADRR75, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2,
ylim = c(min(newdata$TLOfADRRreal), max(newdata$TLOfADRRreal))); # cor.test(newdata$generlen, newdata$TLOfADRR76, method = 'spearman', alternative = 'less') # nonsignificant
plot(newdata$generlen, newdata$TLOfADRR75, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2,
ylim = c(min(newdata$TLOfADRRreal), max(newdata$TLOfADRRreal)));  cor.test(newdata$generlen, newdata$TLOfADRR75, method = 'spearman', alternative = 'less') # nonsignificant
cor.test(Rep$TLOfADRR75, Rep$generlen, method = 'spearman')
VecOfP = c(); VecOfRho = c();
for (i in 8:ncol(Rep))
{ # i = 8
p = as.numeric(cor.test(pic(Rep[,i], tree2), pic(Rep$generlen, tree2), method = 'spearman')[3])
rho = as.numeric(cor.test(pic(Rep[,i], tree2), pic(Rep$generlen, tree2), method = 'spearman')[4])
VecOfP = c(VecOfP,p)
VecOfRho = c(VecOfRho,rho)
}
summary(VecOfP)
summary(VecOfRho)
maxRho = match(min(VecOfRho), VecOfRho)
VecOfP = c(); VecOfRho = c();
for (i in 8:ncol(Rep))
{ # i = 8
p = as.numeric(cor.test(Rep[,i],Rep$generlen, method = 'spearman')[3])
rho = as.numeric(cor.test(Rep[,i],Rep$generlen, method = 'spearman')[4])
VecOfP = c(VecOfP,p)
VecOfRho = c(VecOfRho,rho)
}
summary(VecOfP)
summary(VecOfRho)
maxRho = match(min(VecOfRho), VecOfRho)
pic(Rep[,i], tree2)
VecOfP = c(); VecOfRho = c();
for (i in 8:ncol(Rep))
{ # i = 8
p = as.numeric(cor.test(pic(Rep[,i], tree2), pic(Rep$generlen, tree2), method = 'spearman')[3])
rho = as.numeric(cor.test(pic(Rep[,i], tree2), pic(Rep$generlen, tree2), method = 'spearman')[4])
VecOfP = c(VecOfP,p)
VecOfRho = c(VecOfRho,rho)
}
summary(VecOfP)
summary(VecOfRho)
plot(VecOfRho[2:101],-log10(VecOfP[2:101]), ylim=c(min(-log10(VecOfP)),max(-log10(VecOfP))), xlim = c(min(VecOfRho),max(VecOfRho)), pch = 16, col = rgb(0.1,0.1,0.1,0.5), xlab = '', ylab = ''); par(new=TRUE)
plot(VecOfRho[1],-log10(VecOfP[1]), ylim=c(min(-log10(VecOfP)),max(-log10(VecOfP))), xlim = c(min(VecOfRho),max(VecOfRho)), pch = 16, col = rgb(1,0,0,1), xlab = 'rho', ylab = '-log10(p value)');
maxRho = match(min(VecOfRho), VecOfRho)
maxRho = match(min(VecOfRho), VecOfRho)
TempData = data[, c('generlen', 'TLOfADRRreal', 'TLOfADRR75')]
TempData[,1] = log2(TempData[,1]); # TempData[,2] = log2(TempData[,2]);  TempData[,3] = log2(TempData[,3]);
contrasts <- as.data.frame(apply(TempData, 2, pic, tree2))
names(contrasts) = names(TempData)
newdata <- subset(contrasts, !(contrasts$generlen > quantile(contrasts$generlen, probs=c(.01, .99))[2] | contrasts$generlen < quantile(contrasts$generlen, probs=c(.01, .99))[1]) )
newdata <- subset(newdata, !(newdata$TLOfADRRreal > quantile(newdata$TLOfADRRreal, probs=c(.01, .99))[2] | newdata$TLOfADRRreal < quantile(newdata$TLOfADRRreal, probs=c(.01, .99))[1]) )
newdata <- subset(newdata, !(newdata$TLOfADRR75 > quantile(newdata$TLOfADRR75, probs=c(.01, .99))[2] | newdata$TLOfADRR75 < quantile(newdata$TLOfADRR75, probs=c(.01, .99))[1]) )
plot(newdata$generlen, newdata$TLOfADRRreal, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2); # cor.test(newdata$generlen, newdata$TLOfADRRreal, method = 'spearman', alternative = 'less') # nonsignificant
plot(newdata$generlen, newdata$TLOfADRR75, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2,
ylim = c(min(newdata$TLOfADRRreal), max(newdata$TLOfADRRreal))); # cor.test(newdata$generlen, newdata$TLOfADRR75, method = 'spearman', alternative = 'less') # nonsignificant
plot(newdata$generlen, newdata$TLOfADRRreal, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2); # cor.test(newdata$generlen, newdata$TLOfADRRreal, method = 'spearman', alternative = 'less') # nonsignificant
View(TempData)
View(contrasts)
plot(newdata$generlen, newdata$TLOfADRRreal, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2); # cor.test(newdata$generlen, newdata$TLOfADRRreal, method = 'spearman', alternative = 'less') # nonsignificant
plot(newdata$generlen, newdata$TLOfADRR75, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2,
ylim = c(min(newdata$TLOfADRRreal), max(newdata$TLOfADRRreal))); # cor.test(newdata$generlen, newdata$TLOfADRR75, method = 'spearman', alternative = 'less') # nonsignificant
View(newdata)
maxRho = match(min(VecOfRho), VecOfRho)
TempData = data[, c('generlen', 'TLOfADRRreal', 'TLOfADRR75')]
TempData[,1] = log2(TempData[,1]); TempData[,2] = log2(TempData[,2]); TempData[,3] = log2(TempData[,3]);
contrasts <- as.data.frame(apply(TempData, 2, pic, tree2))
names(contrasts) = names(TempData)
View(contrasts)
newdata <- subset(contrasts, !(contrasts$generlen > quantile(contrasts$generlen, probs=c(.01, .99))[2] | contrasts$generlen < quantile(contrasts$generlen, probs=c(.01, .99))[1]) )
newdata <- subset(newdata, !(newdata$TLOfADRRreal > quantile(newdata$TLOfADRRreal, probs=c(.01, .99))[2] | newdata$TLOfADRRreal < quantile(newdata$TLOfADRRreal, probs=c(.01, .99))[1]) )
newdata <- subset(newdata, !(newdata$TLOfADRR75 > quantile(newdata$TLOfADRR75, probs=c(.01, .99))[2] | newdata$TLOfADRR75 < quantile(newdata$TLOfADRR75, probs=c(.01, .99))[1]) )
plot(newdata$generlen, newdata$TLOfADRRreal, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2); # cor.test(newdata$generlen, newdata$TLOfADRRreal, method = 'spearman', alternative = 'less') # nonsignificant
plot(newdata$generlen, newdata$TLOfADRR75, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2,
ylim = c(min(newdata$TLOfADRRreal), max(newdata$TLOfADRRreal))); # cor.test(newdata$generlen, newdata$TLOfADRR75, method = 'spearman', alternative = 'less') # nonsignificant
plot(newdata$generlen, newdata$TLOfADRR75, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2,
ylim = c(min(newdata$TLOfADRRreal), max(newdata$TLOfADRRreal))); cor.test(newdata$generlen, newdata$TLOfADRR75, method = 'spearman', alternative = 'less') # nonsignificant
VecOfP = c(); VecOfRho = c();
for (i in 8:ncol(Rep))
{ # i = 8
p = as.numeric(cor.test(pic(log2(Rep[,i]), tree2), pic(log2(Rep$generlen), tree2), method = 'spearman')[3])
rho = as.numeric(cor.test(log2(pic(Rep[,i]), tree2), pic(log2(Rep$generlen), tree2), method = 'spearman')[4])
VecOfP = c(VecOfP,p)
VecOfRho = c(VecOfRho,rho)
}
VecOfP = c(); VecOfRho = c();
for (i in 8:ncol(Rep))
{ # i = 8
p = as.numeric(cor.test(pic(log2(Rep[,i]), tree2), pic(log2(Rep$generlen), tree2), method = 'spearman')[3])
rho = as.numeric(cor.test(pic(log2(Rep[,i]), tree2), pic(log2(Rep$generlen), tree2), method = 'spearman')[4])
VecOfP = c(VecOfP,p)
VecOfRho = c(VecOfRho,rho)
}
summary(VecOfP)
summary(VecOfRho)
par(mfrow=c(1,1))
plot(VecOfRho[2:101],-log10(VecOfP[2:101]), ylim=c(min(-log10(VecOfP)),max(-log10(VecOfP))), xlim = c(min(VecOfRho),max(VecOfRho)), pch = 16, col = rgb(0.1,0.1,0.1,0.5), xlab = '', ylab = ''); par(new=TRUE)
plot(VecOfRho[1],-log10(VecOfP[1]), ylim=c(min(-log10(VecOfP)),max(-log10(VecOfP))), xlim = c(min(VecOfRho),max(VecOfRho)), pch = 16, col = rgb(1,0,0,1), xlab = 'rho', ylab = '-log10(p value)');
hist(VecOfRho[2:101], breaks = 15, xlim = c(min(VecOfRho),max(VecOfRho)), col = 'grey')
abline(v = VecOfRho[1], col = 'red', lwd = 3)
maxRho = match(min(VecOfRho), VecOfRho)
TempData = data[, c('generlen', 'TLOfADRRreal', 'TLOfADRR14')]
TempData[,1] = log2(TempData[,1]); TempData[,2] = log2(TempData[,2]); TempData[,3] = log2(TempData[,3]);
contrasts <- as.data.frame(apply(TempData, 2, pic, tree2))
names(contrasts) = names(TempData)
newdata <- subset(contrasts, !(contrasts$generlen > quantile(contrasts$generlen, probs=c(.01, .99))[2] | contrasts$generlen < quantile(contrasts$generlen, probs=c(.01, .99))[1]) )
newdata <- subset(newdata, !(newdata$TLOfADRRreal > quantile(newdata$TLOfADRRreal, probs=c(.01, .99))[2] | newdata$TLOfADRRreal < quantile(newdata$TLOfADRRreal, probs=c(.01, .99))[1]) )
newdata <- subset(newdata, !(newdata$TLOfADRR14 > quantile(newdata$TLOfADRR14, probs=c(.01, .99))[2] | newdata$TLOfADRR75 < quantile(newdata$TLOfADRR75, probs=c(.01, .99))[1]) )
plot(newdata$generlen, newdata$TLOfADRRreal, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2); # cor.test(newdata$generlen, newdata$TLOfADRRreal, method = 'spearman', alternative = 'less') # nonsignificant
newdata <- subset(contrasts, !(contrasts$generlen > quantile(contrasts$generlen, probs=c(.01, .99))[2] | contrasts$generlen < quantile(contrasts$generlen, probs=c(.01, .99))[1]) )
newdata <- subset(newdata, !(newdata$TLOfADRRreal > quantile(newdata$TLOfADRRreal, probs=c(.01, .99))[2] | newdata$TLOfADRRreal < quantile(newdata$TLOfADRRreal, probs=c(.01, .99))[1]) )
newdata <- subset(newdata, !(newdata$TLOfADRR14 > quantile(newdata$TLOfADRR14, probs=c(.01, .99))[2] | newdata$TLOfADRR75 < quantile(newdata$TLOfADRR75, probs=c(.01, .99))[1]) )
newdata <- subset(newdata, !(newdata$TLOfADRR14 > quantile(newdata$TLOfADRR14, probs=c(.01, .99))[2] | newdata$TLOfADRR14 < quantile(newdata$TLOfADRR14, probs=c(.01, .99))[1]) )
newdata <- subset(contrasts, !(contrasts$generlen > quantile(contrasts$generlen, probs=c(.01, .99))[2] | contrasts$generlen < quantile(contrasts$generlen, probs=c(.01, .99))[1]) )
newdata <- subset(newdata, !(newdata$TLOfADRRreal > quantile(newdata$TLOfADRRreal, probs=c(.01, .99))[2] | newdata$TLOfADRRreal < quantile(newdata$TLOfADRRreal, probs=c(.01, .99))[1]) )
newdata <- subset(newdata, !(newdata$TLOfADRR14 > quantile(newdata$TLOfADRR14, probs=c(.01, .99))[2] | newdata$TLOfADRR14 < quantile(newdata$TLOfADRR14, probs=c(.01, .99))[1]) )
plot(newdata$generlen, newdata$TLOfADRRreal, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2); # cor.test(newdata$generlen, newdata$TLOfADRRreal, method = 'spearman', alternative = 'less') # nonsignificant
plot(newdata$generlen, newdata$TLOfADRR14, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2,
ylim = c(min(newdata$TLOfADRRreal), max(newdata$TLOfADRRreal))); cor.test(newdata$generlen, newdata$TLOfADRR14, method = 'spearman', alternative = 'less') # nonsignificant
cor.test(contrasts$generlen, contrasts$TLOfADRR14, method='spearman')
maxRho = match(min(VecOfRho), VecOfRho)
TempData = data[, c('generlen', 'TLOfADRRreal', 'TLOfADRR1')]
TempData[,1] = log2(TempData[,1]); TempData[,2] = log2(TempData[,2]); TempData[,3] = log2(TempData[,3]);
contrasts <- as.data.frame(apply(TempData, 2, pic, tree2))
names(contrasts) = names(TempData)
cor.test(contrasts$generlen, contrasts$TLOfADRR14, method='spearman')
newdata <- subset(contrasts, !(contrasts$generlen > quantile(contrasts$generlen, probs=c(.01, .99))[2] | contrasts$generlen < quantile(contrasts$generlen, probs=c(.01, .99))[1]) )
newdata <- subset(newdata, !(newdata$TLOfADRRreal > quantile(newdata$TLOfADRRreal, probs=c(.01, .99))[2] | newdata$TLOfADRRreal < quantile(newdata$TLOfADRRreal, probs=c(.01, .99))[1]) )
newdata <- subset(newdata, !(newdata$TLOfADRR1 > quantile(newdata$TLOfADRR1, probs=c(.01, .99))[2] | newdata$TLOfADRR1 < quantile(newdata$TLOfADRR1, probs=c(.01, .99))[1]) )
cor.test(contrasts$generlen, contrasts$TLOfADRR1, method='spearman')
VecOfP = c(); VecOfRho = c();
for (i in 8:ncol(Rep))
{ # i = 8
p = as.numeric(cor.test(Rep[,i],Rep$generlen, method = 'spearman')[3])
rho = as.numeric(cor.test(Rep[,i],Rep$generlen, method = 'spearman')[4])
VecOfP = c(VecOfP,p)
VecOfRho = c(VecOfRho,rho)
}
VecOfP = c(); VecOfRho = c();
for (i in 8:ncol(Rep))
{ # i = 8
p = as.numeric(cor.test(pic(log2(Rep[,i]), tree2), pic(log2(Rep$generlen), tree2), method = 'spearman')[3])
rho = as.numeric(cor.test(pic(log2(Rep[,i]), tree2), pic(log2(Rep$generlen), tree2), method = 'spearman')[4])
VecOfP = c(VecOfP,p)
VecOfRho = c(VecOfRho,rho)
}
summary(VecOfP)
summary(VecOfRho)
TempData = data[, c('generlen', 'TLOfADRRreal', 'TLOfADRR1')]
TempData[,1] = log2(TempData[,1]); TempData[,2] = log2(TempData[,2]); TempData[,3] = log2(TempData[,3]);
contrasts <- as.data.frame(apply(TempData, 2, pic, tree2))
names(contrasts) = names(TempData)
cor.test(contrasts$generlen, contrasts$TLOfADRR1, method='spearman')
cor.test(contrasts$generlen, contrasts$TLOfADRRreal, method='spearman')
TempData = data[, c('generlen', 'TLOfADRRreal', 'TLOfADRR1')]
cor.test(TempData$generlen, TempData$TLOfADRRreal, method='spearman')
VecOfP = c(); VecOfRho = c();
for (i in 8:ncol(Rep))
{ # i = 8
p = as.numeric(cor.test(Rep[,i],Rep$generlen, method = 'spearman')[3])
rho = as.numeric(cor.test(Rep[,i],Rep$generlen, method = 'spearman')[4])
VecOfP = c(VecOfP,p)
VecOfRho = c(VecOfRho,rho)
}
cor.test(TempData$generlen, TempData$TLOfADRR1, method='spearman')
cor.test(TempData$generlen, TempData$TLOfADRR2, method='spearman')
TempData = data[, c('generlen', 'TLOfADRRreal', 'TLOfADRR2')]
cor.test(TempData$generlen, TempData$TLOfADRR2, method='spearman')
TempData = data[, c('generlen', 'TLOfADRRreal', 'TLOfADRR1')]
cor.test(TempData$generlen, TempData$TLOfADRR1, method='spearman')
TempData[,1] = log2(TempData[,1]); TempData[,2] = log2(TempData[,2]); TempData[,3] = log2(TempData[,3]);
cor.test(TempData$generlen, TempData$TLOfADRR1, method='spearman')
contrasts <- as.data.frame(apply(TempData, 2, pic, tree2))
names(contrasts) = names(TempData)
cor.test(contrasts$generlen, contrasts$TLOfADRRreal, method='spearman')
VecOfP = c(); VecOfRho = c();
for (i in 8:ncol(Rep))
{ # i = 8
p = as.numeric(cor.test(pic(log2(Rep[,i]), tree2), pic(log2(Rep$generlen), tree2), method = 'spearman')[3])
rho = as.numeric(cor.test(pic(log2(Rep[,i]), tree2), pic(log2(Rep$generlen), tree2), method = 'spearman')[4])
VecOfP = c(VecOfP,p)
VecOfRho = c(VecOfRho,rho)
}
pic(log2(TempData$generlen))
pic(log2(TempData$generlen), tree2)
View(contrasts)
pic(log2(TempData$generlen), tree2)[1]
View(contrasts)
View(TempData)
View(contrasts)
pic(log2(TempData$generlen), tree2)[1327]
pic(log2(TempData$generlen), tree2)[1301]
summary(contrasts$generlen)
summary(pic(log2(TempData$generlen), tree2))
View(TempData)
log2(TempData$generlen)[1]
View(TempData)
summary(contrasts$generlen)
summary(pic(log2(Rep$generlen), tree2))
View(Rep)
VecOfP = c(); VecOfRho = c();
for (i in 8:ncol(Rep))
{ # i = 8
p = as.numeric(cor.test(pic(log2(data[,i]), tree2), pic(log2(data$generlen), tree2), method = 'spearman')[3])
rho = as.numeric(cor.test(pic(log2(data[,i]), tree2), pic(log2(data$generlen), tree2), method = 'spearman')[4])
VecOfP = c(VecOfP,p)
VecOfRho = c(VecOfRho,rho)
}
TempData = data[, c('generlen', 'TLOfADRRreal', 'TLOfADRR1')]
cor.test(TempData$generlen, TempData$TLOfADRR1, method='spearman')
cor.test(Rep$generlen, Rep$TLOfADRR1, method='spearman')
# cor.test(Rep$generlen, Rep$TLOfADRR1, method='spearman')
TempData[,1] = log2(TempData[,1]); TempData[,2] = log2(TempData[,2]); TempData[,3] = log2(TempData[,3]);
contrasts <- as.data.frame(apply(TempData, 2, pic, tree2))
names(contrasts) = names(TempData)
cor.test(contrasts$generlen, contrasts$TLOfADRR1, method='spearman')
cor.test(contrasts$generlen, contrasts$TLOfADRRreal, method='spearman')
summary(contrasts$generlen)
summary(pic(log2(data$generlen), tree2))
summary(pic(log2(TempData$generlen), tree2))
summary(pic((TempData$generlen), tree2))
View(contrasts)
summary(contrasts$generlen)
summary(pic((TempData$generlen), tree2))
skim(contrasts$generlen)
??skim
TempData = data[, c('generlen', 'TLOfADRRreal', 'TLOfADRR1')]
cor.test(Rep$generlen, Rep$TLOfADRR1, method='spearman')
# cor.test(Rep$generlen, Rep$TLOfADRR1, method='spearman')
TempData[,1] = log2(TempData[,1]); TempData[,2] = log2(TempData[,2]); TempData[,3] = log2(TempData[,3]);
cor.test(Rep$generlen, Rep$TLOfADRR1, method='spearman')
contrasts <- as.data.frame(apply(TempData, 2, pic, tree2))
names(contrasts) = names(TempData)
summary(contrasts$generlen)
summary(pic(TempData$generlen, tree2))
length(pic(TempData$generlen, tree2))
View(contrasts)
?aggregate
install.packages("pacman")
install.packages("pacman")
install.packages("pacman")
library(pacman)
p_load(tibble, dplyr, magrittr, purrr)
Rep = read.table('../../Body/3Results/ecoreps.csv', sep = ';', header = TRUE)
library(ape) # install.packages('ape')
tree <- read.tree("../../Body/1Raw/mtalign.aln.treefile.rooted")
data = Rep[which(as.character(Rep$spece) %in% tree$tip.label),]
row.names(data) = data$spece
df_vec <- as.character(Rep$spece)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
install.packages("ape")
library(ape) # install.packages('ape')
tree <- read.tree("../../Body/1Raw/mtalign.aln.treefile.rooted")
data = Rep[which(as.character(Rep$spece) %in% tree$tip.label),]
row.names(data) = data$spece
df_vec <- as.character(Rep$spece)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
contrasts <- data %>%
select(generlen, TLOfADRRreal, TLOfADRR1) %>%
mutate_if(is.numeric, log2) %>%
map(pic, tree2)
summary(contrasts$generlen)
summary(pic(TempData$generlen, tree2))
summary(pic(log2(data$generlen), tree2))
newdata <- subset(contrasts, !(contrasts$generlen > quantile(contrasts$generlen, probs=c(.01, .99))[2] | contrasts$generlen < quantile(contrasts$generlen, probs=c(.01, .99))[1]) )
newdata <- subset(newdata, !(newdata$TLOfADRRreal > quantile(newdata$TLOfADRRreal, probs=c(.01, .99))[2] | newdata$TLOfADRRreal < quantile(newdata$TLOfADRRreal, probs=c(.01, .99))[1]) )
newdata <- subset(newdata, !(newdata$TLOfADRR1 > quantile(newdata$TLOfADRR1, probs=c(.01, .99))[2] | newdata$TLOfADRR1 < quantile(newdata$TLOfADRR1, probs=c(.01, .99))[1]) )
plot(newdata$generlen, newdata$TLOfADRRreal, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2); # cor.test(newdata$generlen, newdata$TLOfADRRreal, method = 'spearman', alternative = 'less') # nonsignificant
plot(newdata$generlen, newdata$TLOfADRR1, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2,
ylim = c(min(newdata$TLOfADRRreal), max(newdata$TLOfADRRreal))); cor.test(newdata$generlen, newdata$TLOfADRR1, method = 'spearman', alternative = 'less') # nonsignificant
plot(newdata$generlen, newdata$TLOfADRRreal, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2); # cor.test(newdata$generlen, newdata$TLOfADRRreal, method = 'spearman', alternative = 'less') # nonsignificant
plot(newdata$generlen, newdata$TLOfADRR1, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2,
ylim = c(min(newdata$TLOfADRRreal), max(newdata$TLOfADRRreal))); cor.test(newdata$generlen, newdata$TLOfADRR1, method = 'spearman', alternative = 'less') # nonsignificant
pdf("../../Body/4Figures/RealAndSimulatedRepeatsVsLongevity.R.01.pdf")
VecOfP = c(); VecOfRho = c();
for (i in 8:ncol(Rep))
{ # i = 8
p = as.numeric(cor.test(Rep[,i],Rep$generlen, method = 'spearman')[3])
rho = as.numeric(cor.test(Rep[,i],Rep$generlen, method = 'spearman')[4])
VecOfP = c(VecOfP,p)
VecOfRho = c(VecOfRho,rho)
}
summary(VecOfP)
summary(VecOfRho)
plot(VecOfRho[2:101],-log10(VecOfP[2:101]), ylim=c(min(-log10(VecOfP)),max(-log10(VecOfP))), xlim = c(min(VecOfRho),max(VecOfRho)), pch = 16, col = rgb(0.1,0.1,0.1,0.5), xlab = '', ylab = ''); par(new=TRUE)
plot(VecOfRho[1],-log10(VecOfP[1]), ylim=c(min(-log10(VecOfP)),max(-log10(VecOfP))), xlim = c(min(VecOfRho),max(VecOfRho)), pch = 16, col = rgb(1,0,0,1), xlab = 'rho', ylab = '-log10(p value)');
hist(VecOfRho[2:101], breaks = 15, xlim = c(min(VecOfRho),max(VecOfRho)), col = 'grey')
abline(v = VecOfRho[1], col = 'red', lwd = 3)
par(mfrow=c(1,2))
plot(log2(Rep$generlen),log2(Rep$TLOfADRRreal))
plot(log2(Rep$generlen),log2(Rep$TLOfADRR1))
VecOfP = c(); VecOfRho = c();
for (i in 8:ncol(Rep))
{ # i = 8
p = as.numeric(cor.test(pic(log2(data[,i]), tree2), pic(log2(data$generlen), tree2), method = 'spearman')[3])
rho = as.numeric(cor.test(pic(log2(data[,i]), tree2), pic(log2(data$generlen), tree2), method = 'spearman')[4])
VecOfP = c(VecOfP,p)
VecOfRho = c(VecOfRho,rho)
}
summary(VecOfP)
summary(VecOfRho)
par(mfrow=c(1,1))
plot(VecOfRho[2:101],-log10(VecOfP[2:101]), ylim=c(min(-log10(VecOfP)),max(-log10(VecOfP))), xlim = c(min(VecOfRho),max(VecOfRho)), pch = 16, col = rgb(0.1,0.1,0.1,0.5), xlab = '', ylab = ''); par(new=TRUE)
plot(VecOfRho[1],-log10(VecOfP[1]), ylim=c(min(-log10(VecOfP)),max(-log10(VecOfP))), xlim = c(min(VecOfRho),max(VecOfRho)), pch = 16, col = rgb(1,0,0,1), xlab = 'rho', ylab = '-log10(p value)');
par(mfrow=c(1,1))
hist(VecOfRho[2:101], breaks = 15, xlim = c(min(VecOfRho),max(VecOfRho)), col = 'grey')
abline(v = VecOfRho[1], col = 'red', lwd = 3)
plot(newdata$generlen, newdata$TLOfADRRreal, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2); # cor.test(newdata$generlen, newdata$TLOfADRRreal, method = 'spearman', alternative = 'less') # nonsignificant
plot(newdata$generlen, newdata$TLOfADRR1, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2,
ylim = c(min(newdata$TLOfADRRreal), max(newdata$TLOfADRRreal))); cor.test(newdata$generlen, newdata$TLOfADRR1, method = 'spearman', alternative = 'less') # nonsignificant
dev.off()
plot(log2(newdata$generlen), log2(newdata$TLOfADRRreal), col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2); # cor.test(newdata$generlen, newdata$TLOfADRRreal, method = 'spearman', alternative = 'less') # nonsignificant
plot(log2(newdata$generlen), log2(newdata$TLOfADRR1), col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2,
ylim = c(min(newdata$TLOfADRRreal), max(newdata$TLOfADRRreal))); cor.test(newdata$generlen, newdata$TLOfADRR1, method = 'spearman', alternative = 'less') # nonsignificant
View(data)
View(contrasts)
contrasts <- data %>%
select(generlen, TLOfADRRreal, TLOfADRR1) %>%
mutate(log2) %>%
map(pic, tree2)
contrasts <- data %>%
select(generlen, TLOfADRRreal, TLOfADRR1) %>%
mutate(log) %>%
map(pic, tree2)
contrasts <- data %>%
select(generlen, TLOfADRRreal, TLOfADRR1) %>%
mutate_if(log2) %>%
map(pic, tree2)
contrasts <- data %>%
select(generlen, TLOfADRRreal, TLOfADRR1) %>%
mutate_if(is.numeric | is.integer(), log2) %>%
map(pic, tree2)
str(data$TLOfADRRreal)
contrasts <- data %>%
select(generlen, TLOfADRRreal, TLOfADRR1) %>%
mutate_if(is.numeric | is.integer, log2) %>%
map(pic, tree2)
contrasts <- data %>%
select(generlen, TLOfADRRreal, TLOfADRR1) %>%
mutate_if(is.numeric, log2) %>%
map(pic, tree2)
contrasts <- data %>%
select(generlen, TLOfADRRreal, TLOfADRR1) %>%
mutate_all(log2) %>%
map(pic, tree2)
summary(contrasts$generlen)
summary(pic(log2(data$generlen), tree2))
newdata <- subset(contrasts, !(contrasts$generlen > quantile(contrasts$generlen, probs=c(.01, .99))[2] | contrasts$generlen < quantile(contrasts$generlen, probs=c(.01, .99))[1]) )
newdata <- subset(newdata, !(newdata$TLOfADRRreal > quantile(newdata$TLOfADRRreal, probs=c(.01, .99))[2] | newdata$TLOfADRRreal < quantile(newdata$TLOfADRRreal, probs=c(.01, .99))[1]) )
newdata <- subset(newdata, !(newdata$TLOfADRR1 > quantile(newdata$TLOfADRR1, probs=c(.01, .99))[2] | newdata$TLOfADRR1 < quantile(newdata$TLOfADRR1, probs=c(.01, .99))[1]) )
plot(newdata$generlen, newdata$TLOfADRRreal, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2); # cor.test(newdata$generlen, newdata$TLOfADRRreal, method = 'spearman', alternative = 'less') # nonsignificant
plot(newdata$generlen, newdata$TLOfADRR1, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2,
ylim = c(min(newdata$TLOfADRRreal), max(newdata$TLOfADRRreal))); cor.test(newdata$generlen, newdata$TLOfADRR1, method = 'spearman', alternative = 'less') # nonsignificant
View(contrasts)
pdf("../../Body/4Figures/RealAndSimulatedRepeatsVsLongevity.R.01.pdf")
VecOfP = c(); VecOfRho = c();
for (i in 8:ncol(Rep))
{ # i = 8
p = as.numeric(cor.test(Rep[,i],Rep$generlen, method = 'spearman')[3])
rho = as.numeric(cor.test(Rep[,i],Rep$generlen, method = 'spearman')[4])
VecOfP = c(VecOfP,p)
VecOfRho = c(VecOfRho,rho)
}
summary(VecOfP)
summary(VecOfRho)
plot(VecOfRho[2:101],-log10(VecOfP[2:101]), ylim=c(min(-log10(VecOfP)),max(-log10(VecOfP))), xlim = c(min(VecOfRho),max(VecOfRho)), pch = 16, col = rgb(0.1,0.1,0.1,0.5), xlab = '', ylab = ''); par(new=TRUE)
plot(VecOfRho[1],-log10(VecOfP[1]), ylim=c(min(-log10(VecOfP)),max(-log10(VecOfP))), xlim = c(min(VecOfRho),max(VecOfRho)), pch = 16, col = rgb(1,0,0,1), xlab = 'rho', ylab = '-log10(p value)');
hist(VecOfRho[2:101], breaks = 15, xlim = c(min(VecOfRho),max(VecOfRho)), col = 'grey')
abline(v = VecOfRho[1], col = 'red', lwd = 3)
### do the same with PICs and probably plot it (should look better):
par(mfrow=c(1,2))
plot(log2(Rep$generlen),log2(Rep$TLOfADRRreal))
plot(log2(Rep$generlen),log2(Rep$TLOfADRR1))
# dev.off()
#########################################################################################
######################### PICs
library(ape) # install.packages('ape')
tree <- read.tree("../../Body/1Raw/mtalign.aln.treefile.rooted")
data = Rep[which(as.character(Rep$spece) %in% tree$tip.label),]
row.names(data) = data$spece
df_vec <- as.character(Rep$spece)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
### rho vs p
VecOfP = c(); VecOfRho = c();
for (i in 8:ncol(Rep))
{ # i = 8
p = as.numeric(cor.test(pic(log2(data[,i]), tree2), pic(log2(data$generlen), tree2), method = 'spearman')[3])
rho = as.numeric(cor.test(pic(log2(data[,i]), tree2), pic(log2(data$generlen), tree2), method = 'spearman')[4])
VecOfP = c(VecOfP,p)
VecOfRho = c(VecOfRho,rho)
}
summary(VecOfP)
summary(VecOfRho)
par(mfrow=c(1,1))
plot(VecOfRho[2:101],-log10(VecOfP[2:101]), ylim=c(min(-log10(VecOfP)),max(-log10(VecOfP))), xlim = c(min(VecOfRho),max(VecOfRho)), pch = 16, col = rgb(0.1,0.1,0.1,0.5), xlab = '', ylab = ''); par(new=TRUE)
plot(VecOfRho[1],-log10(VecOfP[1]), ylim=c(min(-log10(VecOfP)),max(-log10(VecOfP))), xlim = c(min(VecOfRho),max(VecOfRho)), pch = 16, col = rgb(1,0,0,1), xlab = 'rho', ylab = '-log10(p value)');
par(mfrow=c(1,1))
hist(VecOfRho[2:101], breaks = 15, xlim = c(min(VecOfRho),max(VecOfRho)), col = 'grey')
abline(v = VecOfRho[1], col = 'red', lwd = 3)
##############
maxRho = match(min(VecOfRho), VecOfRho)
TempData = data[, c('generlen', 'TLOfADRRreal', 'TLOfADRR1')]
# cor.test(Rep$generlen, Rep$TLOfADRR1, method='spearman')
TempData[,1] = log2(TempData[,1]); TempData[,2] = log2(TempData[,2]); TempData[,3] = log2(TempData[,3]);
contrasts <- as.data.frame(apply(TempData, 2, pic, tree2))
names(contrasts) = names(TempData)
cor.test(contrasts$generlen, contrasts$TLOfADRR1, method='spearman')
cor.test(contrasts$generlen, contrasts$TLOfADRRreal, method='spearman')
library(pacman)
p_load(tibble, dplyr, magrittr, purrr)
contrasts <- data %>%
select(generlen, TLOfADRRreal, TLOfADRR1) %>%
mutate_if(is.numeric, log2) %>%
map(pic, tree2)
summary(contrasts$generlen)
summary(pic(log2(data$generlen), tree2))
newdata <- subset(contrasts, !(contrasts$generlen > quantile(contrasts$generlen, probs=c(.01, .99))[2] | contrasts$generlen < quantile(contrasts$generlen, probs=c(.01, .99))[1]) )
newdata <- subset(newdata, !(newdata$TLOfADRRreal > quantile(newdata$TLOfADRRreal, probs=c(.01, .99))[2] | newdata$TLOfADRRreal < quantile(newdata$TLOfADRRreal, probs=c(.01, .99))[1]) )
newdata <- subset(newdata, !(newdata$TLOfADRR1 > quantile(newdata$TLOfADRR1, probs=c(.01, .99))[2] | newdata$TLOfADRR1 < quantile(newdata$TLOfADRR1, probs=c(.01, .99))[1]) )
par(mfrow=c(2,2))
# plot(contrasts$generlen, contrasts$TLOfADRRreal, col = rgb(0.1,0.1,0.1,0.5)); # cor.test(contrasts$generlen, contrasts$TLOfADRRreal, method = 'spearman', alternative = 'less') # nonsignificant
# plot(contrasts$generlen, contrasts$TLOfADRR1, col = rgb(0.1,0.1,0.1,0.5)); # cor.test(contrasts$generlen, contrasts$TLOfADRR1, method = 'spearman', alternative = 'less')       # marginally
plot(newdata$generlen, newdata$TLOfADRRreal, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2); # cor.test(newdata$generlen, newdata$TLOfADRRreal, method = 'spearman', alternative = 'less') # nonsignificant
plot(newdata$generlen, newdata$TLOfADRR1, col = rgb(0.1,0.1,0.1,0.1), pch = 16, cex = 2,
ylim = c(min(newdata$TLOfADRRreal), max(newdata$TLOfADRRreal))); cor.test(newdata$generlen, newdata$TLOfADRR1, method = 'spearman', alternative = 'less') # nonsignificant
dev.off()
