tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
print(c(taxon, nrow(TempData)))
print(summary(lm(pic(log2(TempData$GenomeLength), tree2) ~ pic(log2(TempData$DloopsLength), tree2, scaled = FALSE), na.action=na.exclude)))
}
taxon = 'Aves'
TempData = data[data$TAXON == taxon, ]
df_vec <- as.character(TempData$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
print(c(taxon, nrow(TempData)))
print(summary(lm(pic(log2(TempData$GenomeLength), tree2) ~ pic(log2(TempData$DloopsLength), tree2, scaled = FALSE), na.action=na.exclude)))
taxon = 'Aves'
TempData = data[data$TAXON == taxon, ]
df_vec <- as.character(TempData$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
print(c(taxon, nrow(TempData)))
print(summary(lm(pic(log2(TempData$GenomeLength), tree2) ~ pic(log2(TempData$DloopsLength), tree2), na.action=na.exclude)))
taxon = 'Mammalia'
TempData = data[data$TAXON == taxon, ]
df_vec <- as.character(TempData$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
print(c(taxon, nrow(TempData)))
print(summary(lm(pic(log2(TempData$GenomeLength), tree2) ~ pic(log2(TempData$DloopsLength), tree2), na.action=na.exclude)))
taxon = 'Reptilia'
TempData = data[data$TAXON == taxon, ]
df_vec <- as.character(TempData$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
print(c(taxon, nrow(TempData)))
print(summary(lm(pic(log2(TempData$GenomeLength), tree2) ~ pic(log2(TempData$DloopsLength), tree2), na.action=na.exclude)))
taxon = 'Amphibia'
TempData = data[data$TAXON == taxon, ]
df_vec <- as.character(TempData$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
print(c(taxon, nrow(TempData)))
print(summary(lm(pic(log2(TempData$GenomeLength), tree2) ~ pic(log2(TempData$DloopsLength), tree2), na.action=na.exclude)))
for(taxon in unique(data$TAXON)){
# taxon = 'Amphibia'
TempData = data[data$TAXON == taxon, ]
df_vec <- as.character(TempData$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
print(c(taxon, nrow(TempData)))
print(summary(lm(pic(log2(TempData$GenomeLength), tree2) ~ pic(log2(TempData$DloopsLength), tree2), na.action=na.exclude)))
}
tree2$edge
library(ggplot2)
Dloops = read.table('../../Body/2Derived/dloops_control_regions.txt', header=TRUE, sep = '\t',
row.names = NULL)
names(Dloops) = c('Species', 'Feature_name', 'Feature_location', 'Strand', 'Sequence', 'Notes')
CHOR = read.table('../../Body/2Derived/MitGenomics.txt', header=TRUE, sep='\t')
CHOR = CHOR[CHOR$TAXON != "AncientFish", ]
Dloops$Length = as.numeric(lapply(as.character(Dloops$Sequence), nchar))
summary(Dloops$Length)
hist(Dloops$Length, breaks = 50)
data = merge(CHOR, Dloops[, c('Species', 'Length')])
for(taxon in unique(data$TAXON)){
temp_data = data[data$TAXON == taxon,]
a = cor.test(temp_data$GenomeLength, temp_data$Length)
plot(temp_data$GenomeLength, temp_data$Length, main = c(taxon, a$estimate))
print(c(taxon, cor.test(temp_data$GenomeLength, temp_data$Length)))
}
ggplot(data, aes(Length, GenomeLength, col=TAXON)) +
geom_point() + xlab('D-loops length')
not_unique = data.frame()
for(sp in unique(Dloops$Species)){
if(nrow(Dloops[Dloops$Species == sp,]) > 1){
not_unique = rbind(not_unique, Dloops[Dloops$Species == sp,])
}
}
summary(not_unique$Length)
not_unique = merge(not_unique, CHOR[, c('Species', 'TAXON')])
summary(not_unique$TAXON)
not_unique$MultipleDloop = 1
multDl = merge(Dloops, not_unique, all.x = TRUE)
multDl[is.na(multDl$MultipleDloop),]$MultipleDloop = 0
multDl = merge(multDl, data[, c('Species', 'GenomeLength')], by='Species', all.x = TRUE)
AGG = aggregate(data$Length, by=list(data$Species), sum)
names(AGG) = c('Species', 'DloopsLength')
oneSpOneCr = merge(AGG, CHOR[, c('Species', 'TAXON', 'GenomeLength', 'ECO.Maximum.longevity..yrs.')], by='Species', all.y = FALSE)
for(taxon in unique(oneSpOneCr$TAXON)){
TempData = oneSpOneCr[oneSpOneCr$TAXON == taxon, ]
print(c(taxon, nrow(TempData)))
print(summary(lm(TempData$GenomeLength ~ TempData$DloopsLength)))
}
library(ape) # install.packages('ape')
tree <- read.tree("../../Body/1Raw/mtalign.aln.treefile.rooted")
data = oneSpOneCr[which(as.character(oneSpOneCr$Species) %in% tree$tip.label),]
row.names(data) = data$Species
df_vec <- as.character(data$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
for(taxon in unique(data$TAXON)){
# taxon = 'Amphibia'
TempData = data[data$TAXON == taxon, ]
df_vec <- as.character(TempData$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
print(c(taxon, nrow(TempData)))
print(summary(lm(pic(log2(TempData$GenomeLength), tree2) ~ pic(log2(TempData$DloopsLength), tree2), na.action=na.exclude)))
}
for(taxon in unique(data$TAXON)){
# taxon = 'Amphibia'
TempData = data[data$TAXON == taxon, ]
df_vec <- as.character(TempData$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
print(c(taxon, nrow(TempData)))
print(summary(lm(pic(log2(TempData$GenomeLength), tree2) ~ pic(log2(TempData$DloopsLength, scaled = FALSE), tree2), na.action=na.exclude)))
}
for(taxon in unique(data$TAXON)){
# taxon = 'Amphibia'
TempData = data[data$TAXON == taxon, ]
df_vec <- as.character(TempData$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
print(c(taxon, nrow(TempData)))
print(summary(lm(pic(log2(TempData$GenomeLength, scaled = FALSE), tree2) ~ pic(log2(TempData$DloopsLength), tree2), na.action=na.exclude)))
}
for(taxon in unique(data$TAXON)){
# taxon = 'Amphibia'
TempData = data[data$TAXON == taxon, ]
df_vec <- as.character(TempData$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
print(c(taxon, nrow(TempData)))
print(summary(lm(pic(log2(TempData$GenomeLength), tree2, scaled = FALSE) ~ pic(log2(TempData$DloopsLength), tree2, scaled = FALSE), na.action=na.exclude)))
}
for(taxon in unique(data$TAXON)){
# taxon = 'Amphibia'
TempData = data[data$TAXON == taxon, ]
df_vec <- as.character(TempData$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
print(c(taxon, nrow(TempData)))
print(summary(lm(pic(log2(TempData$GenomeLength), tree2) ~ pic(log2(TempData$DloopsLength), tree2))))
}
taxon = 'Amphibia'
TempData = data[data$TAXON == taxon, ]
df_vec <- as.character(TempData$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
print(c(taxon, nrow(TempData)))
print(summary(lm(pic(log2(TempData$GenomeLength), tree2) ~ pic(log2(TempData$DloopsLength), tree2))))
taxon = 'Aves'
TempData = data[data$TAXON == taxon, ]
df_vec <- as.character(TempData$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
print(c(taxon, nrow(TempData)))
print(summary(lm(pic(log2(TempData$GenomeLength), tree2) ~ pic(log2(TempData$DloopsLength), tree2))))
TempData = data[data$TAXON == taxon, ]
df_vec <- as.character(TempData$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
print(c(taxon, nrow(TempData)))
print(summary(lm(pic(log2(TempData$GenomeLength), tree2, scaled = FALSE) ~ pic(log2(TempData$DloopsLength), tree2, scaled = FALSE))))
taxon = 'Mammalia'
TempData = data[data$TAXON == taxon, ]
df_vec <- as.character(TempData$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
print(c(taxon, nrow(TempData)))
print(summary(lm(pic(log2(TempData$GenomeLength), tree2) ~ pic(log2(TempData$DloopsLength), tree2))))
taxon = 'Reptilia'
TempData = data[data$TAXON == taxon, ]
df_vec <- as.character(TempData$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
print(c(taxon, nrow(TempData)))
print(summary(lm(pic(log2(TempData$GenomeLength), tree2) ~ pic(log2(TempData$DloopsLength), tree2))))
summary(pic(log2(TempData$GenomeLength), tree2)
)
summary(pic(log2(TempData$GenomeLength), tree2, scaled = FALSE))
taxon = 'Actinopterygii'
# taxon = 'Reptilia'
TempData = data[data$TAXON == taxon, ]
df_vec <- as.character(TempData$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
summary(pic(log2(TempData$GenomeLength), tree2))
summary(pic(log2(TempData$GenomeLength), tree2, scaled = FALSE))
tree2$edge.length
summary(tree2$edge.length)
taxon = 'Reptilia'
TempData = data[data$TAXON == taxon, ]
df_vec <- as.character(TempData$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
summary(tree2$edge.length)
min(tree2$edge.length)
taxon = 'Actinopterygii'
TempData = data[data$TAXON == taxon, ]
df_vec <- as.character(TempData$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
min(tree2$edge.length)
if(min(tree2$edge.length) == 0)
)
min(tree2$edge.length) == 0)
min(tree2$edge.length) == 0
summary(tree2$edge.length)
tree2$edge.length == 0
tree2$tip.label[tree2$edge.length == 0]
tree2$tip.label[which(tree2$edge.length == 0)]
is.binary.tree(tree2)
tree2$edge
tree2$edge.length == 0
which(tree2$edge.length == 0)
nrow(tree2$edge)
drop.tip(which(tree2$edge.length == 0), tree2)
drop.tip(tree2, which(tree2$edge.length == 0))
tree2$Nnode
tree2$tip.label
install.packages('phytools')
which(tree2$edge.length == 0)
library(phytools) #install.packages('phytools')
install.packages('phytools')
install.packages("igraph")
install.packages("igraph", INSTALL_opts = "--no-clean-on-error")
install.packages("igraph", INSTALL_opts = "--no-clean-on-error")
library(igraph)
library(phytools) #install.packages('phytools')
install.packages('phytools')
install.packages('animation')
install.packages('curl')
install.packages('curl')
install.packages('animation')
install.packages('animation')
install.packages('magick')
install.packages('magick')
install.packages('animation')
install.packages('phytools')
library(phytools) #install.packages('phytools')
which(tree2$edge.length == 0)
getDescendants(2252)
getDescendants(tree2, 2252)
a = drop.tip(tree2, getDescendants(tree2, 2252))
summary(lm(pic(log2(TempData$GenomeLength), a) ~ pic(log2(TempData$DloopsLength), a)))
TempData = TempData[TempData$Species in a$tip.label, ]
TempData = TempData[TempData$Species %in% a$tip.label, ]
summary(lm(pic(log2(TempData$GenomeLength), a) ~ pic(log2(TempData$DloopsLength), a)))
summary(pic(log2(TempData$GenomeLength), a))
min(a$edge.length)
which(a$edge.length == 0)
getDescendants(tree2, 2166)
a = drop.tip(a, getDescendants(tree2, 2166))
which(a$edge.length == 0)
getDescendants(tree2, 2252)
which(tree2$edge.length == 0)
which(tree2$edge.length == 0.0)
length(tree2$tip.label)
nrow(tree2$edge)
length(tree2$edge.length)
summary(lm(pic(log2(data$GenomeLength), tree2) ~ pic(log2(data$DloopsLength), tree2)))
df_vec <- as.character(data$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
summary(lm(pic(log2(data$GenomeLength), tree2) ~ pic(log2(data$DloopsLength), tree2)))
tree <- read.tree("../../Body/1Raw/mtalign.aln.treefile.rooted")
data = oneSpOneCr[which(as.character(oneSpOneCr$Species) %in% tree$tip.label),]
row.names(data) = data$Species
df_vec <- as.character(data$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
summary(lm(pic(log2(data$GenomeLength), tree2) ~ pic(log2(data$DloopsLength), tree2)))
which(tree2$edge.length == 0)
tree2$edge.length = tree2$edge.length + 0.000001
summary(lm(pic(log2(data$GenomeLength), tree2) ~ pic(log2(data$DloopsLength), tree2)))
for(taxon in unique(data$TAXON)){
# taxon = 'Reptilia'
TempData = data[data$TAXON == taxon, ]
df_vec <- as.character(TempData$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
print(c(taxon, nrow(TempData)))
print(summary(lm(pic(log2(TempData$GenomeLength), tree2) ~ pic(log2(TempData$DloopsLength), tree2))))
}
min(tree2$edge.length) == 0
for(taxon in unique(data$TAXON)){
# taxon = 'Reptilia'
TempData = data[data$TAXON == taxon, ]
df_vec <- as.character(TempData$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
if(min(tree2$edge.length) == 0){
tree2$edge.length = tree2$edge.length + 0.000001
}
print(c(taxon, nrow(TempData)))
print(summary(lm(pic(log2(TempData$GenomeLength), tree2) ~ pic(log2(TempData$DloopsLength), tree2))))
}
for(taxon in unique(data$TAXON)){
# taxon = 'Reptilia'
TempData = data[data$TAXON == taxon, ]
df_vec <- as.character(TempData$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
if(min(tree2$edge.length) == 0){
tree2$edge.length = tree2$edge.length + 0.000000000001
}
print(c(taxon, nrow(TempData)))
print(summary(lm(pic(log2(TempData$GenomeLength), tree2) ~ pic(log2(TempData$DloopsLength), tree2))))
}
for(taxon in unique(data$TAXON)){
# taxon = 'Reptilia'
TempData = data[data$TAXON == taxon, ]
df_vec <- as.character(TempData$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
if(min(tree2$edge.length) == 0){
tree2$edge.length = tree2$edge.length + 0.00000000000000001
}
print(c(taxon, nrow(TempData)))
print(summary(lm(pic(log2(TempData$GenomeLength), tree2) ~ pic(log2(TempData$DloopsLength), tree2))))
}
for(taxon in unique(data$TAXON)){
# taxon = 'Reptilia'
TempData = data[data$TAXON == taxon, ]
df_vec <- as.character(TempData$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
if(min(tree2$edge.length) == 0){
tree2$edge.length = tree2$edge.length + 0.0000000000000000000000001
}
print(c(taxon, nrow(TempData)))
print(summary(lm(pic(log2(TempData$GenomeLength), tree2) ~ pic(log2(TempData$DloopsLength), tree2))))
}
for(taxon in unique(data$TAXON)){
# taxon = 'Reptilia'
TempData = data[data$TAXON == taxon, ]
df_vec <- as.character(TempData$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
if(min(tree2$edge.length) == 0){
tree2$edge.length = tree2$edge.length + 0.0000001
}
print(c(taxon, nrow(TempData)))
print(summary(lm(pic(log2(TempData$GenomeLength), tree2) ~ pic(log2(TempData$DloopsLength), tree2))))
}
summary(lm(pic(log2(data$GenomeLength), tree2) ~ pic(log2(data$DloopsLength), tree2)))
CHOR = read.table('../../Body/2Derived/MitGenomics.txt', header=TRUE, sep='\t')
CHOR = CHOR[CHOR$TAXON != "AncientFish", ]
summary(CHOR$GenomeLength)
CHOR[CHOR$GenomeLength == min(CHOR$GenomeLength),]
CHOR[CHOR$GenomeLength == min(CHOR$GenomeLength), 'Species']
CHOR[CHOR$GenomeLength == max(CHOR$GenomeLength), 'Species']
CHOR[CHOR$GenomeLength == max(CHOR$GenomeLength)]
CHOR[CHOR$GenomeLength == max(CHOR$GenomeLength),]
library(ggplot2)
install.packages("ggplot2")
Dloops = read.table('../../Body/2Derived/dloops_control_regions.txt', header=TRUE, sep = '\t',
row.names = NULL)
names(Dloops) = c('Species', 'Feature_name', 'Feature_location', 'Strand', 'Sequence', 'Notes')
CHOR = read.table('../../Body/2Derived/MitGenomics.txt', header=TRUE, sep='\t')
CHOR = CHOR[CHOR$TAXON != "AncientFish", ]
Dloops$Length = as.numeric(lapply(as.character(Dloops$Sequence), nchar))
summary(Dloops$Length)
hist(Dloops$Length, breaks = 50)
data = merge(CHOR, Dloops[, c('Species', 'Length')])
for(taxon in unique(data$TAXON)){
temp_data = data[data$TAXON == taxon,]
a = cor.test(temp_data$GenomeLength, temp_data$Length)
plot(temp_data$GenomeLength, temp_data$Length, main = c(taxon, a$estimate))
print(c(taxon, cor.test(temp_data$GenomeLength, temp_data$Length)))
}
ggplot(data, aes(Length, GenomeLength, col=TAXON)) +
geom_point() + xlab('D-loops length')
library(ggplot2)
ggplot(data, aes(Length, GenomeLength, col=TAXON)) +
geom_point() + xlab('D-loops length')
########### number of dloops
summary(Dloops$Feature_name)
length(unique(Dloops$Species))
not_unique = data.frame()
for(sp in unique(Dloops$Species)){
if(nrow(Dloops[Dloops$Species == sp,]) > 1){
not_unique = rbind(not_unique, Dloops[Dloops$Species == sp,])
}
}
summary(not_unique$Length)
not_unique = merge(not_unique, CHOR[, c('Species', 'TAXON')])
summary(not_unique$TAXON)
not_unique$MultipleDloop = 1
multDl = merge(Dloops, not_unique, all.x = TRUE)
multDl[is.na(multDl$MultipleDloop),]$MultipleDloop = 0
multDl = merge(multDl, data[, c('Species', 'GenomeLength')], by='Species', all.x = TRUE)
legend_title <- "Presence of multiple d-loops"
ggplot(multDl, aes(Length, GenomeLength, col=as.factor(MultipleDloop))) +
geom_point() + xlab('Dloops Length') +
labs(colour=legend_title)
AGG = aggregate(data$Length, by=list(data$Species), sum)
names(AGG) = c('Species', 'DloopsLength')
oneSpOneCr = merge(AGG, CHOR[, c('Species', 'TAXON', 'GenomeLength', 'ECO.Maximum.longevity..yrs.')], by='Species', all.y = FALSE)
ggplot(oneSpOneCr, aes(DloopsLength, GenomeLength, col=TAXON)) +
geom_point() + xlab('Sum of multiple dloops')
View(not_unique)
View(CHOR)
library(ape) # install.packages('ape')
install.packages("ape")
library(ape) # install.packages('ape')
tree <- read.tree("../../Body/1Raw/mtalign.aln.treefile.rooted")
data = oneSpOneCr[which(as.character(oneSpOneCr$Species) %in% tree$tip.label),]
row.names(data) = data$Species
df_vec <- as.character(data$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
which(tree2$edge.length == 0)
tree2 = tree2$edge.length + 0.0001 # num from Konstantin
summary(tree2$edge.length)
which(tree2$edge.length == 0)
tree2 <- drop.tip(tree, b)
tree2$edge.length = tree2$edge.length + 0.0001 # num from Konstantin
summary(tree2$edge.length)
for(taxon in unique(data$TAXON)){
# taxon = 'Reptilia'
TempData = data[data$TAXON == taxon, ]
df_vec <- as.character(TempData$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
TempTree <- drop.tip(tree2, b)
print(c(taxon, nrow(TempData)))
print(summary(lm(pic(log2(TempData$GenomeLength), TempTree) ~ pic(log2(TempData$DloopsLength), TempTree))))
}
for(taxon in unique(data$TAXON)){
# taxon = 'Reptilia'
TempData = data[data$TAXON == taxon, ]
print(c(taxon, nrow(TempData)))
print(summary(lm(TempData$GenomeLength ~ TempData$DloopsLength)))
}
for(taxon in unique(oneSpOneCr$TAXON)){
# taxon = 'Reptilia'
TempData = oneSpOneCr[oneSpOneCr$TAXON == taxon, ]
print(c(taxon, nrow(TempData)))
print(summary(lm(TempData$GenomeLength ~ TempData$DloopsLength)))
}
for(taxon in unique(oneSpOneCr$TAXON)){
TempData = oneSpOneCr[oneSpOneCr$TAXON == taxon, ]
print(c(taxon, nrow(TempData)))
print(summary(lm(TempData$GenomeLength ~ TempData$DloopsLength)))
}
withUniqueDloop = oneSpOneCr[!which(not_unique$Species %in% oneSpOneCr$Species),]
View(not_unique)
not_unique$Species
not_unique$Species %in% oneSpOneCr$Species
which(not_unique$Species %in% oneSpOneCr$Species)
withUniqueDloop = oneSpOneCr[!which(oneSpOneCr$Species %in% oneSpOneCr$Species),]
oneSpOneCr$Species %in% oneSpOneCr$Species
