%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[96.53495026 860.87390137]
[81.58606720 859.60864258]
[66.70546722 857.70135498]
[51.92069626 855.15570068]
[37.25913620 851.97631836]
[22.74793434 848.16906738]
[8.41396523 843.74108887]
[-5.71622944 838.70050049]
[-19.61648369 833.05664062]
[-33.26105881 826.82000732]
[-46.62468338 820.00213623]
[-59.68261719 812.61566162]
[-72.41067505 804.67419434]
[-84.78529358 796.19250488]
[-96.78354645 787.18634033]
[-108.38322449 777.67224121]
[-119.56285095 767.66796875]
[-130.30171204 757.19195557]
[-140.57994080 746.26367188]
[-150.37847900 734.90325928]
[-159.67919922 723.13183594]
[-168.46487427 710.97119141]
[-176.71923828 698.44378662]
[-184.42700195 685.57287598]
[-191.57388306 672.38226318]
[-198.14666748 658.89642334]
[-204.13317871 645.14025879]
[-209.52230835 631.13928223]
[-214.30410767 616.91943359]
[-218.46971130 602.50701904]
[-222.01139832 587.92871094]
[-224.92262268 573.21154785]
[-227.19796753 558.38281250]
[-228.83325195 543.46984863]
[-229.82543945 528.50036621]
[-230.17266846 513.50207520]
[-229.87432861 498.50268555]
[-228.93095398 483.53005981]
[-227.34429932 468.61187744]
[-225.11729431 453.77575684]
[-222.25407410 439.04916382]
[-218.75991821 424.45941162]
[-214.64132690 410.03350830]
[-209.90591431 395.79812622]
[-204.56243896 381.77966309]
[-198.62081909 368.00408936]
[-192.09202576 354.49685669]
[-184.98817444 341.28305054]
[-177.32241821 328.38708496]
[-169.10893250 315.83285522]
[-160.36294556 303.64361572]
[-151.10064697 291.84191895]
[-141.33918762 280.44964600]
[-131.09664917 269.48788452]
[-120.39199829 258.97692871]
[-109.24504852 248.93623352]
[-97.67644501 239.38441467]
[-85.70761108 230.33914185]
[-73.36071014 221.81716919]
[-60.65860748 213.83427429]
[-47.62482452 206.40525818]
[-34.28349304 199.54385376]
[-20.65932465 193.26277161]
[-6.77754164 187.57366943]
[7.33614588 182.48704529]
[21.65560341 178.01232910]
[36.15431595 174.15782166]
[50.80543518 170.93064880]
[65.58182526 168.33677673]
[80.45613098 166.38102722]
[95.40081024 165.06701660]
[94.73102570 150.08198547]
[94.06124115 135.09693909]
[93.39144897 120.11190796]
[83.08666229 112.73187256]
[78.84483337 100.78781891]
[82.18655396 88.56134796]
[91.91390228 80.43531799]
[91.46729279 65.44197083]
[91.02069092 50.44861984]
[90.57408142 35.45527267]
[90.12747955 20.46192169]
[89.68087006 5.46857119]
[89.23426819 -9.52477932]
[88.78765869 -24.51812935]
[88.34105682 -39.51147842]
[87.89444733 -54.50482941]
[73.01228333 -56.67101288]
[58.73242950 -61.38872528]
[45.48882675 -68.51460266]
[33.68394089 -77.83209991]
[23.67650414 -89.05806732]
[15.77063179 -101.85135651]
[10.20657635 -115.82320404]
[7.15342140 -130.54901123]
[6.70394993 -145.58128357]
[8.87182045 -160.46319580]
[13.59115410 -174.74252319]
[20.71853447 -187.98530579]
[30.03737068 -199.78913879]
[41.26447296 -209.79530334]
[54.05866241 -217.69972229]
[68.03113556 -223.26219177]
[82.75728607 -226.31367493]
[97.78960419 -226.76144409]
[112.67127991 -224.59188843]
[126.95006561 -219.87094116]
[140.19204712 -212.74205017]
[151.99482727 -203.42187500]
[161.99971008 -192.19364929]
[169.90267944 -179.39855957]
[175.46356201 -165.42544556]
[178.51338196 -150.69895935]
[178.95944214 -135.66658020]
[176.78819275 -120.78515625]
[172.06562805 -106.50691223]
[164.93524170 -93.26573181]
[155.61372375 -81.46401978]
[144.38435364 -71.46039581]
[131.58837891 -63.55887985]
[117.61463928 -57.99958038]
[102.88779449 -54.95143509]
[103.33440399 -39.95808411]
[103.78101349 -24.96473503]
[104.22761536 -9.97138500]
[104.67422485 5.02196503]
[105.12082672 20.01531601]
[105.56743622 35.00866699]
[106.01403809 50.00201416]
[106.46064758 64.99536133]
[106.90724945 79.98871613]
[119.17478943 91.02842712]
[119.78895569 107.52056885]
[108.37648773 119.44212341]
[109.04627991 134.42715454]
[109.71606445 149.41220093]
[110.38584900 164.39723206]
[125.38815308 164.37271118]
[140.37762451 164.99363708]
[155.32650757 166.25886536]
[170.20712280 168.16606140]
[184.99189758 170.71170044]
[199.65347290 173.89105225]
[214.16468811 177.69822693]
[228.49867249 182.12617493]
[242.62887573 187.16671753]
[256.52914429 192.81050110]
[270.17373657 199.04708862]
[283.53738403 205.86491394]
[296.59536743 213.25137329]
[309.32345581 221.19276428]
[321.69808960 229.67440796]
[333.69638062 238.68057251]
[345.29608154 248.19459534]
[356.47573853 258.19885254]
[367.21463013 268.67480469]
[377.49288940 279.60308838]
[387.29147339 290.96347046]
[396.59222412 302.73486328]
[405.37796021 314.89547729]
[413.63235474 327.42285156]
[421.34014893 340.29373169]
[428.48709106 353.48431396]
[435.05993652 366.97015381]
[441.04647827 380.72628784]
[446.43566895 394.72723389]
[451.21749878 408.94708252]
[455.38314819 423.35946655]
[458.92489624 437.93774414]
[461.83615112 452.65487671]
[464.11157227 467.48367310]
[465.74688721 482.39660645]
[466.73913574 497.36608887]
[467.08642578 512.36437988]
[466.78811646 527.36376953]
[465.84478760 542.33642578]
[464.25817871 557.25457764]
[462.03121948 572.09069824]
[459.16806030 586.81732178]
[455.67395020 601.40704346]
[451.55541992 615.83300781]
[446.82003784 630.06835938]
[441.47662354 644.08685303]
[435.53503418 657.86248779]
[429.00628662 671.36968994]
[421.90249634 684.58355713]
[414.23678589 697.47955322]
[406.02334595 710.03381348]
[397.27740479 722.22308350]
[388.01513672 734.02478027]
[378.25372314 745.41711426]
[368.01119995 756.37890625]
[357.30657959 766.88989258]
[346.15966797 776.93060303]
[334.59109497 786.48248291]
[322.62228394 795.52777100]
[310.27542114 804.04980469]
[297.57336426 812.03271484]
[284.53958130 819.46179199]
[271.19827271 826.32324219]
[257.57412720 832.60437012]
[243.69236755 838.29351807]
[229.57870483 843.38018799]
[215.25926208 847.85498047]
[200.76055908 851.70953369]
[186.10945129 854.93676758]
[171.33306885 857.53063965]
[156.45877075 859.48645020]
[141.51409912 860.80053711]
[126.52673340 861.47039795]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[71 137]
[72 136]
[73 135]
[74 134]
[78 131]
[79 130]
[80 129]
[81 128]
[82 127]
[83 126]
[84 125]
[85 124]
[86 123]
[87 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
