%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[49.02297592 565.81427002]
[34.82005692 571.40356445]
[19.59921646 570.26831055]
[6.38255692 562.63403320]
[-2.20574212 550.01641846]
[-4.46046829 534.92077637]
[0.06605650 520.34429932]
[10.47508717 509.18118286]
[24.69990349 503.64788818]
[25.81555176 488.68945312]
[26.93120003 473.73098755]
[28.04684830 458.77255249]
[16.73821449 468.62722778]
[1.74370551 469.03302002]
[-10.08139229 459.80444336]
[-13.33080292 445.16061401]
[-6.51893854 431.79653931]
[7.23990679 425.82208252]
[21.65537453 429.96868896]
[30.13737679 442.34234619]
[32.80317307 427.58114624]
[27.45092773 413.68139648]
[37.51762390 401.47598267]
[40.18341827 386.71475220]
[42.84921265 371.95355225]
[31.39082336 362.43667603]
[26.19997025 348.36859131]
[28.76468086 333.49282837]
[38.49484634 321.82147217]
[52.85422897 316.55313110]
[55.52002335 301.79190063]
[50.16778183 287.89215088]
[60.23447418 275.68673706]
[62.90026855 260.92553711]
[49.70217514 253.89906311]
[39.30800629 243.12263489]
[32.74476242 229.64286804]
[30.66651344 214.77438354]
[33.28924942 199.97155762]
[40.36851120 186.68624878]
[51.22210693 176.22547913]
[64.79584503 169.62274170]
[79.76591492 167.53599548]
[82.43170929 152.77478027]
[85.09750366 138.01354980]
[87.76329803 123.25234222]
[90.42909241 108.49111938]
[81.46635437 120.51897430]
[69.82614899 129.97972107]
[56.22028732 136.29483032]
[41.48077774 139.07812500]
[26.50893593 138.15942383]
[12.22030449 133.59487915]
[-0.51136535 125.66364288]
[-10.90752602 114.85070038]
[-18.33244896 101.81726074]
[-22.33209610 87.36032867]
[-22.66188812 72.36395264]
[-19.30165863 57.74517059]
[-12.45688725 44.39791870]
[-2.54613233 33.13839340]
[9.82455826 24.65511322]
[23.89871216 19.46683884]
[38.81568909 17.89083099]
[53.66331100 20.02346611]
[67.53363800 25.73433304]
[79.57849884 34.67420959]
[89.06134033 46.29641342]
[95.40228271 59.89025116]
[98.21358490 74.62445068]
[97.32331848 89.59803772]
[104.79106140 76.58908081]
[112.16175079 63.52489853]
[119.43497467 50.40620422]
[126.70820618 37.28750992]
[126.63277435 21.46648407]
[139.57089233 14.08714867]
[146.84411621 0.96845502]
[154.11734009 -12.15023899]
[153.37031555 -30.54924583]
[168.75459290 -38.99264145]
[175.83169556 -52.21817017]
[182.90879822 -65.44369507]
[189.98590088 -78.66921997]
[197.06301880 -91.89475250]
[204.14012146 -105.12027740]
[208.11221313 -119.58480072]
[196.14863586 -129.28938293]
[192.23910522 -144.00567627]
[197.68034363 -158.03623962]
[210.19023132 -166.07617188]
[210.86001587 -181.06121826]
[211.52980042 -196.04624939]
[204.41642761 -210.17814636]
[212.71432495 -222.54724121]
[213.38410950 -237.53227234]
[214.05389404 -252.51731873]
[214.72367859 -267.50234985]
[200.62821960 -273.03378296]
[189.09416199 -282.84420776]
[181.37263489 -295.86944580]
[178.30120850 -310.69662476]
[180.21305847 -325.71737671]
[186.90078735 -339.30242920]
[197.63897705 -349.97808838]
[211.26280212 -356.58642578]
[226.29447937 -358.41055298]
[241.10346985 -355.25262451]
[254.08341980 -347.45520020]
[263.82632446 -335.86407471]
[269.27539062 -321.73657227]
[269.83953857 -306.60513306]
[265.45755005 -292.11111450]
[256.60476685 -279.82669067]
[244.24145508 -271.08441162]
[229.70870972 -266.83258057]
[229.03892517 -251.84753418]
[228.36914062 -236.86248779]
[227.69935608 -221.87745667]
[234.86064148 -208.81738281]
[226.51484680 -195.37646484]
[225.84506226 -180.39143372]
[225.17527771 -165.40638733]
[236.91799927 -156.28244019]
[241.08578491 -141.82237244]
[235.87892151 -127.51356506]
[223.09725952 -118.91501617]
[230.35160828 -132.04415894]
[239.99702454 -143.53179932]
[251.67292786 -152.94845581]
[264.94277954 -159.94207764]
[279.31051636 -164.25120544]
[294.23892212 -165.71475220]
[309.16998291 -164.27798462]
[323.54537964 -159.99462891]
[336.82778931 -153.02481079]
[348.52053833 -143.62911987]
[358.18655396 -132.15879822]
[365.46444702 -119.04267883]
[370.08209229 -104.77113342]
[371.86691284 -89.87769318]
[370.75216675 -74.91917419]
[366.77947998 -60.45480728]
[360.09744263 -47.02535248]
[350.95584106 -35.13288116]
[339.69641113 -25.22199821]
[326.74014282 -17.66323471]
[312.57138062 -12.73917770]
[297.71984863 -10.63391685]
[282.74078369 -11.42615986]
[268.19418335 -15.08628654]
[254.62390137 -21.47746277]
[242.53724670 -30.36074638]
[232.38609314 -41.40402985]
[224.54995728 -54.19445801]
[219.32179260 -68.25384521]
[216.89706421 -83.05657196]
[217.36564636 -98.04317474]
[210.28854370 -84.81764221]
[203.21144104 -71.59211731]
[196.13432312 -58.36658859]
[189.05722046 -45.14106369]
[181.98011780 -31.91553497]
[185.18489075 -20.25123215]
[179.39707947 -9.17490673]
[167.23603821 -4.87700939]
[159.96281433 8.24168491]
[152.68957520 21.36037827]
[153.28524780 36.24306870]
[139.82690430 44.56074142]
[132.55366516 57.67943573]
[125.28044128 70.79812622]
[124.78639984 78.17225647]
[117.80001068 84.05682373]
[110.33226776 97.06578064]
[105.19030762 111.15692139]
[102.52451324 125.91813660]
[99.85871887 140.67935181]
[97.19292450 155.44056702]
[94.52713013 170.20178223]
[107.82164764 177.39297485]
[118.22843933 188.32646179]
[124.73744965 201.92282104]
[126.72257996 216.84510803]
[124.00188446 231.63024902]
[116.85420227 244.83258057]
[105.99057770 255.16514587]
[92.48360443 261.62515259]
[77.66148376 263.59130859]
[74.99568939 278.35253906]
[80.15725708 293.30810547]
[70.28124237 304.45770264]
[67.61544800 319.21890259]
[79.22499847 329.17709351]
[84.25810242 343.51461792]
[81.45754242 358.34780884]
[71.67383575 369.71157837]
[57.61043167 374.61935425]
[54.94463348 389.38055420]
[52.27883911 404.14178467]
[57.44040680 419.09735107]
[47.56438828 430.24694824]
[44.89859390 445.00814819]
[43.00530243 459.88818359]
[41.88965225 474.84664917]
[40.77400589 489.80508423]
[39.65835571 504.76354980]
[52.90497589 512.34576416]
[61.54289627 524.92944336]
[63.85705185 540.01611328]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 207]
[10 206]
[11 205]
[12 204]
[20 203]
[21 202]
[23 200]
[24 199]
[25 198]
[30 193]
[31 192]
[33 190]
[34 189]
[43 180]
[44 179]
[45 178]
[46 177]
[47 176]
[71 175]
[72 174]
[73 172]
[74 171]
[75 170]
[77 168]
[78 167]
[79 166]
[81 163]
[82 162]
[83 161]
[84 160]
[85 159]
[86 158]
[87 127]
[91 123]
[92 122]
[93 121]
[95 119]
[96 118]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
