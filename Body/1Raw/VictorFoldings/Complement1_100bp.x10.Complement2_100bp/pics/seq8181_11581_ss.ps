%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[139.75186157 981.42224121]
[124.86706543 979.54870605]
[110.07448578 977.04937744]
[95.40041351 973.92864990]
[80.87094879 970.19213867]
[66.51192474 965.84637451]
[52.34885788 960.89916992]
[38.40694427 955.35931396]
[24.71096420 949.23663330]
[11.28527260 942.54205322]
[-1.84626174 935.28735352]
[-14.66029167 927.48559570]
[-27.13403320 919.15057373]
[-39.24531174 910.29705811]
[-50.97258759 900.94091797]
[-62.29501343 891.09863281]
[-73.19245911 880.78784180]
[-83.64555359 870.02679443]
[-93.63570404 858.83465576]
[-103.14514923 847.23132324]
[-112.15698242 835.23742676]
[-120.65518188 822.87426758]
[-128.62464905 810.16381836]
[-136.05119324 797.12872314]
[-142.92161560 783.79217529]
[-149.22370911 770.17779541]
[-154.94627380 756.30987549]
[-160.07911682 742.21301270]
[-164.61312866 727.91235352]
[-168.54023743 713.43322754]
[-171.85346985 698.80139160]
[-174.54693604 684.04296875]
[-176.61582947 669.18402100]
[-178.05648804 654.25115967]
[-178.86634827 639.27081299]
[-179.04396057 624.26959229]
[-178.58901978 609.27429199]
[-177.50233459 594.31146240]
[-175.78582764 579.40771484]
[-173.44256592 564.58959961]
[-170.47669983 549.88348389]
[-166.89350891 535.31542969]
[-162.69937134 520.91137695]
[-157.90173340 506.69696045]
[-152.50912476 492.69741821]
[-146.53114319 478.93768311]
[-139.97840881 465.44216919]
[-132.86257935 452.23489380]
[-125.19629669 439.33932495]
[-116.99319458 426.77844238]
[-108.26786804 414.57452393]
[-99.03582001 402.74926758]
[-89.31346893 391.32373047]
[-79.11809540 380.31820679]
[-68.46783447 369.75225830]
[-57.38161469 359.64471436]
[-45.87915039 350.01348877]
[-33.98089218 340.87573242]
[-21.70799637 332.24768066]
[-9.08228111 324.14468384]
[3.87380433 316.58114624]
[17.13722420 309.57052612]
[30.68439674 303.12530518]
[44.49123764 297.25686646]
[58.53319550 291.97573853]
[72.78530121 287.29122925]
[87.22222900 283.21173096]
[101.81829071 279.74444580]
[116.54754639 276.89556885]
[114.32243347 262.06152344]
[112.09731293 247.22749329]
[109.87220001 232.39344788]
[107.64707947 217.55940247]
[105.42196655 202.72535706]
[103.19684601 187.89131165]
[99.95682526 184.38256836]
[98.88658142 178.80120850]
[101.13316345 172.58312988]
[99.35069275 157.68942261]
[97.56822968 142.79570007]
[95.78575897 127.90198517]
[94.00329590 113.00826263]
[85.77754974 101.70213318]
[91.10298920 88.77420044]
[89.32051849 73.88048553]
[79.68191528 65.30960083]
[78.50391388 52.86789322]
[85.87503815 43.27658844]
[84.31451416 28.35798454]
[82.75399017 13.43937969]
[67.83401489 11.23819733]
[53.93051529 5.39496279]
[41.91746521 -3.72301245]
[32.55002213 -15.54256535]
[26.41703033 -29.32070732]
[23.90401268 -44.19133377]
[25.16894341 -59.21966934]
[30.13230515 -73.46101379]
[38.48209763 -86.02014160]
[49.69344711 -96.10758209]
[63.06159592 -103.08923340]
[77.74621582 -106.52621460]
[92.82421112 -106.20247650]
[107.34777069 -102.13836670]
[120.40393829 -94.58937073]
[131.17198181 -84.03001404]
[138.97502136 -71.12406158]
[143.32254028 -56.68280792]
[143.94125366 -41.61403275]
[140.79228210 -26.86497307]
[134.07356262 -13.36276817]
[124.20742798 -1.95617652]
[111.81408691 6.63777256]
[97.67259979 11.87885666]
[99.23311615 26.79746246]
[100.79364014 41.71606827]
[111.85196686 55.34252548]
[104.21424103 72.09801483]
[105.99670410 86.99173737]
[114.22245026 98.29786682]
[108.89701080 111.22579956]
[110.67948151 126.11951447]
[112.46194458 141.01322937]
[114.24440765 155.90695190]
[116.02687836 170.80067444]
[118.03089142 185.66619873]
[120.25600433 200.50024414]
[122.48112488 215.33428955]
[124.70624542 230.16831970]
[126.93135834 245.00236511]
[129.15647888 259.83642578]
[131.38159180 274.67047119]
[146.29847717 273.07238770]
[161.26945496 272.10458374]
[176.26794434 271.76876831]
[191.26724243 272.06552124]
[206.24069214 272.99435425]
[221.16168213 274.55355835]
[236.00367737 276.74041748]
[250.74029541 279.55102539]
[265.34530640 282.98034668]
[279.79278564 287.02233887]
[294.05700684 291.66979980]
[308.11264038 296.91445923]
[321.93469238 302.74697876]
[335.49856567 309.15701294]
[348.78015137 316.13314819]
[361.75582886 323.66299438]
[374.40255737 331.73318481]
[386.69781494 340.32931519]
[398.61978149 349.43612671]
[410.14721680 359.03741455]
[421.25967407 369.11614990]
[431.93734741 379.65438843]
[442.16125488 390.63339233]
[451.91326904 402.03363037]
[461.17599487 413.83486938]
[469.93301392 426.01608276]
[478.16870117 438.55563354]
[485.86846924 451.43121338]
[493.01858521 464.61996460]
[499.60635376 478.09841919]
[505.62005615 491.84259033]
[511.04901123 505.82806396]
[515.88354492 520.02996826]
[520.11511230 534.42309570]
[523.73614502 548.98175049]
[526.74017334 563.68017578]
[529.12194824 578.49212646]
[530.87713623 593.39129639]
[532.00268555 608.35125732]
[532.49658203 623.34539795]
[532.35797119 638.34698486]
[531.58703613 653.32940674]
[530.18518066 668.26599121]
[528.15484619 683.13018799]
[525.49975586 697.89562988]
[522.22454834 712.53601074]
[518.33508301 727.02526855]
[513.83819580 741.33770752]
[508.74200439 755.44781494]
[503.05548096 769.33056641]
[496.78878784 782.96124268]
[489.95303345 796.31561279]
[482.56036377 809.36993408]
[474.62396240 822.10107422]
[466.15789795 834.48626709]
[457.17724609 846.50354004]
[447.69796753 858.13153076]
[437.73693848 869.34960938]
[427.31182861 880.13775635]
[416.44122314 890.47680664]
[405.14440918 900.34844971]
[393.44146729 909.73504639]
[381.35324097 918.61999512]
[368.90118408 926.98736572]
[356.10745239 934.82244873]
[342.99481201 942.11114502]
[329.58654785 948.84063721]
[315.90652466 954.99890137]
[301.97906494 960.57495117]
[287.82888794 965.55889893]
[273.48120117 969.94195557]
[258.96148682 973.71624756]
[244.29557800 976.87506104]
[229.50953674 979.41278076]
[214.62966919 981.32495117]
[199.68240356 982.60815430]
[184.69433594 983.26007080]
[169.69210815 983.27954102]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 132]
[70 131]
[71 130]
[72 129]
[73 128]
[74 127]
[75 126]
[78 125]
[79 124]
[80 123]
[81 122]
[82 121]
[84 119]
[85 118]
[88 116]
[89 115]
[90 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
