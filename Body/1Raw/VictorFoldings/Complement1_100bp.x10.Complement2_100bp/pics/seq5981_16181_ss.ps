%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[135.43110657 274.68817139]
[132.26031494 289.37249756]
[127.16053009 303.50317383]
[120.22274780 316.82797241]
[111.57079315 329.10916138]
[101.35906982 340.12750244]
[89.76981354 349.68640137]
[77.00985718 357.61526489]
[63.30690765 363.77261353]
[48.90551376 368.04849243]
[34.06268311 370.36666870]
[19.04330826 370.68572998]
[4.11542463 368.99996948]
[-10.45456219 365.33953857]
[-24.40663338 359.76968384]
[-37.49179840 352.38986206]
[-49.47653580 343.33172607]
[-60.14696503 332.75698853]
[-69.31266022 320.85430908]
[-76.81004333 307.83615112]
[-82.50532532 293.93481445]
[-86.29685974 279.39837646]
[-88.11698151 264.48629761]
[-87.93321228 249.46464539]
[-85.74883270 234.60154724]
[-81.60281372 220.16221619]
[-75.56916046 206.40437317]
[-67.75554657 193.57351685]
[-58.30141449 181.89863586]
[-47.37548065 171.58808899]
[-35.17273712 162.82586670]
[-21.91094971 155.76835632]
[-7.82679558 150.54150391]
[6.82837915 147.23857117]
[21.79303551 145.91853333]
[36.80010986 146.60491943]
[51.58178711 149.28550720]
[65.87426758 153.91242981]
[72.35375977 140.38407898]
[70.87332153 125.56323242]
[83.81272888 116.45925903]
[90.29222107 102.93090820]
[90.65715027 94.87862396]
[96.97022247 89.25048065]
[103.65041351 75.82009888]
[110.33060455 62.38972473]
[117.01080322 48.95935059]
[123.69099426 35.52897263]
[122.90919495 19.72709465]
[135.50489807 11.77740383]
[142.18508911 -1.65297234]
[134.15734863 -16.54093170]
[136.56149292 -33.11565399]
[148.25401306 -44.87348938]
[164.48640442 -47.32032013]
[170.96589661 -60.84866333]
[177.44538879 -74.37700653]
[164.24856567 -81.51388550]
[151.41783142 -89.28970337]
[138.98410034 -97.68572235]
[126.97731781 -106.68173218]
[115.42640686 -116.25605011]
[104.35919952 -126.38561249]
[93.80236053 -137.04602051]
[83.78131866 -148.21157837]
[74.32022095 -159.85539246]
[65.44184875 -171.94943237]
[57.16760254 -184.46453857]
[49.51741028 -197.37055969]
[42.50970078 -210.63642883]
[36.16136169 -224.23016357]
[30.48768234 -238.11901855]
[25.50233078 -252.26954651]
[21.21731949 -266.64764404]
[17.64297104 -281.21868896]
[14.78789616 -295.94754028]
[12.65897274 -310.79876709]
[11.26132965 -325.73657227]
[10.59833431 -340.72494507]
[10.67158318 -355.72778320]
[11.48089981 -370.70898438]
[13.02433586 -385.63241577]
[15.29817104 -400.46212769]
[18.29693031 -415.16244507]
[22.01338577 -429.69787598]
[26.43858528 -444.03344727]
[31.56187057 -458.13461304]
[37.37089539 -471.96740723]
[43.85166931 -485.49850464]
[50.98857880 -498.69531250]
[58.76442337 -511.52603149]
[67.16048431 -523.95971680]
[76.15651703 -535.96649170]
[85.73086548 -547.51739502]
[95.86045074 -558.58459473]
[106.52088165 -569.14135742]
[117.68647003 -579.16241455]
[129.33032227 -588.62347412]
[141.42436218 -597.50183105]
[153.93949890 -605.77600098]
[166.84555054 -613.42620850]
[180.11141968 -620.43383789]
[193.70516968 -626.78216553]
[207.59403992 -632.45581055]
[221.74458313 -637.44110107]
[236.12269592 -641.72607422]
[250.69374084 -645.30041504]
[265.42260742 -648.15545654]
[280.27383423 -650.28436279]
[295.21163940 -651.68194580]
[310.20001221 -652.34490967]
[325.20288086 -652.27160645]
[340.18405151 -651.46228027]
[355.10748291 -649.91876221]
[369.93719482 -647.64489746]
[384.63748169 -644.64611816]
[399.17291260 -640.92962646]
[413.50848389 -636.50439453]
[427.60964966 -631.38110352]
[441.44241333 -625.57202148]
[454.97351074 -619.09118652]
[468.17028809 -611.95428467]
[481.00097656 -604.17840576]
[493.43466187 -595.78228760]
[505.44140625 -586.78625488]
[516.99224854 -577.21185303]
[528.05944824 -567.08227539]
[538.61621094 -556.42181396]
[548.63720703 -545.25616455]
[558.09826660 -533.61230469]
[566.97656250 -521.51824951]
[575.25073242 -509.00308228]
[582.90087891 -496.09701538]
[589.90850830 -482.83111572]
[596.25677490 -469.23736572]
[601.93041992 -455.34848022]
[606.91564941 -441.19790649]
[611.20062256 -426.81979370]
[614.77490234 -412.24874878]
[617.62988281 -397.51986694]
[619.75872803 -382.66864014]
[621.15631104 -367.73083496]
[621.81921387 -352.74246216]
[621.74591064 -337.73959351]
[620.93652344 -322.75842285]
[619.39300537 -307.83499146]
[617.11907959 -293.00527954]
[614.12030029 -278.30499268]
[610.40374756 -263.76956177]
[605.97845459 -249.43402100]
[600.85510254 -235.33288574]
[595.04602051 -221.50010681]
[588.56518555 -207.96903992]
[581.42822266 -194.77227783]
[573.65228271 -181.94160461]
[565.25616455 -169.50793457]
[556.26007080 -157.50120544]
[546.68566895 -145.95037842]
[536.55603027 -134.88323975]
[525.89556885 -124.32648468]
[514.72991943 -114.30552673]
[503.08602905 -104.84451294]
[490.99191284 -95.96623230]
[478.47674561 -87.69207764]
[465.57067871 -80.04198456]
[452.30474854 -73.03437042]
[438.71096802 -66.68613434]
[424.82208252 -61.01255798]
[410.67150879 -56.02731323]
[396.29339600 -51.74240875]
[381.72232056 -48.16816711]
[366.99343872 -45.31320190]
[352.14218140 -43.18439102]
[337.20440674 -41.78685760]
[322.21600342 -41.12397385]
[307.21316528 -41.19733429]
[292.23196411 -42.00676346]
[277.30856323 -43.55030823]
[262.47885132 -45.82425690]
[247.77857971 -48.82312393]
[233.24316406 -52.53968811]
[218.90762329 -56.96499634]
[204.80648804 -62.08838272]
[190.97373962 -67.89751434]
[184.49424744 -54.36916733]
[178.01473999 -40.84082413]
[185.42848206 -29.73773003]
[186.39556885 -16.31353951]
[180.55671692 -4.06700802]
[169.34053040 3.75702858]
[155.61546326 5.02722216]
[148.93527222 18.45759773]
[150.19488525 33.29884720]
[137.12136841 42.20916748]
[130.44117737 55.63954544]
[123.76098633 69.06992340]
[117.08078766 82.50029755]
[110.40059662 95.93067169]
[103.82056427 109.41040802]
[97.34107208 122.93875122]
[98.35805511 138.72723389]
[85.88211060 146.86358643]
[79.40261078 160.39192200]
[91.96645355 168.62802124]
[103.32038879 178.46527100]
[113.26179504 189.72813416]
[121.61325073 202.21559143]
[128.22570801 215.70480347]
[132.98118591 229.95503235]
[135.79478455 244.71195984]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 203]
[39 202]
[41 200]
[42 199]
[44 198]
[45 197]
[46 196]
[47 195]
[48 194]
[50 192]
[51 191]
[55 186]
[56 185]
[57 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
