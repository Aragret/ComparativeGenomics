%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[69.35098267 521.00244141]
[54.38727951 522.50537109]
[39.38994980 521.38684082]
[24.81473923 517.68078613]
[11.10457993 511.50000000]
[-1.32389688 503.03216553]
[-12.09300137 492.53466797]
[-20.87547493 480.32650757]
[-27.40442467 466.77865601]
[-31.48144531 452.30285645]
[-32.98264313 437.33895874]
[-31.86239243 422.34176636]
[-28.15474129 407.76696777]
[-21.97235870 394.05752563]
[-13.50312328 381.63000488]
[-3.00440168 370.86209106]
[9.20475960 362.08099365]
[22.75333786 355.55358887]
[37.22961044 351.47821045]
[52.19365311 349.97869873]
[53.30930328 335.02026367]
[54.42494965 320.06179810]
[55.54059982 305.10336304]
[48.77133942 291.83584595]
[57.51361847 278.64938354]
[58.62926865 263.69091797]
[59.74491882 248.73246765]
[50.01926041 260.15225220]
[35.92013168 265.27227783]
[21.13300705 262.75415039]
[9.52320576 253.25613403]
[4.12550259 239.26095581]
[6.35084391 224.42694092]
[15.61753082 212.63166809]
[29.50327492 206.95838928]
[44.37837219 208.89007568]
[56.35451126 217.92181396]
[62.30102921 231.69181824]
[65.62328339 217.06436157]
[60.89703751 202.93949890]
[71.49868774 191.19575500]
[74.82095337 176.56828308]
[78.14321136 161.94082642]
[81.46546936 147.31336975]
[84.78772736 132.68591309]
[80.06147766 118.56104279]
[90.66313171 106.81729889]
[79.67152405 117.02438354]
[65.21992493 121.04325104]
[50.53686142 117.97607422]
[38.90256119 108.50807190]
[32.91616058 94.75441742]
[33.91503525 79.78771210]
[41.67603683 66.95156097]
[54.46533585 59.11358643]
[69.42576599 58.02481461]
[83.21514130 63.92847824]
[92.75286865 75.50569153]
[95.90819550 90.17008209]
[101.57098389 76.28005981]
[107.23376465 62.39003372]
[112.89655304 48.50000381]
[110.94162750 32.80004120]
[122.91117096 23.93554306]
[128.57395935 10.04551697]
[134.23674011 -3.84450984]
[139.89953613 -17.73453712]
[145.56231689 -31.62456322]
[148.99337769 -46.22688675]
[150.10902405 -61.18534088]
[151.22467041 -76.14379120]
[152.34031677 -91.10224915]
[153.45597839 -106.06069946]
[139.07083130 -110.51866913]
[126.04473114 -118.06249237]
[115.02936554 -128.31103516]
[106.57498932 -140.74795532]
[101.10295105 -154.74771118]
[98.88469696 -169.60699463]
[100.02828979 -184.58010864]
[104.47316742 -198.91636658]
[111.99334717 -211.89770508]
[122.20887756 -222.87469482]
[134.60508728 -231.29901123]
[148.55844116 -236.75080872]
[163.36799622 -238.95964050]
[164.48364258 -253.91810608]
[165.59928894 -268.87655640]
[166.71493530 -283.83502197]
[164.44686890 -288.53637695]
[164.23057556 -293.17388916]
[165.69816589 -296.97668457]
[168.22909546 -299.43164062]
[170.01156616 -314.32534790]
[171.79402161 -329.21905518]
[173.57649231 -344.11279297]
[175.35896301 -359.00650024]
[177.14143372 -373.90020752]
[163.13043213 -379.49969482]
[151.04667664 -388.53549194]
[141.71406555 -400.39147949]
[135.76889038 -414.25933838]
[133.61654663 -429.19351196]
[135.40373230 -444.17578125]
[141.00863647 -458.18463135]
[150.04907227 -470.26489258]
[161.90867615 -479.59292603]
[175.77883911 -485.53274536]
[190.71383667 -487.67932129]
[205.69541931 -485.88635254]
[219.70208740 -480.27603149]
[231.77886963 -471.23092651]
[241.10232544 -459.36773682]
[247.03677368 -445.49530029]
[249.17759705 -430.55944824]
[247.37882996 -415.57855225]
[241.76312256 -401.57406616]
[232.71334839 -389.50079346]
[220.84654236 -380.18191528]
[206.97180176 -374.25280762]
[192.03514099 -372.11776733]
[190.25268555 -357.22402954]
[188.47021484 -342.33032227]
[186.68774414 -327.43661499]
[184.90527344 -312.54287720]
[183.12281799 -297.64916992]
[181.67340088 -282.71936035]
[180.55775452 -267.76089478]
[179.44209290 -252.80245972]
[178.32644653 -237.84399414]
[192.64448547 -233.46272278]
[205.63475037 -226.00138855]
[216.64413452 -215.83142090]
[225.11830139 -203.46049500]
[230.62960815 -189.50721741]
[232.89866638 -174.67022705]
[231.80847168 -159.69311523]
[227.41050720 -145.32728577]
[219.92227173 -132.29415894]
[209.71653748 -121.24896240]
[197.30274963 -112.74784088]
[183.30172729 -107.21978760]
[168.41442871 -104.94505310]
[167.29878235 -89.98659515]
[166.18313599 -75.02814484]
[165.06747437 -60.06969070]
[163.95182800 -45.11123657]
[171.69767761 -57.95654297]
[182.58396912 -68.27587891]
[195.82481384 -75.32427979]
[210.46435547 -78.59291077]
[225.44573975 -77.84581757]
[239.68745422 -73.13693237]
[252.16136169 -64.80618286]
[261.96697998 -53.45498276]
[268.39645386 -39.90277863]
[270.98556519 -25.12792397]
[269.54745483 -10.19701958]
[264.18594360 3.81205416]
[255.28807068 15.88797188]
[243.49618530 25.15896416]
[229.66154480 30.95574760]
[214.78288269 32.85984802]
[199.93432617 30.73380661]
[186.18777466 24.73110580]
[174.53561401 15.28508568]
[165.81904602 3.07765985]
[160.66729736 -11.00990486]
[159.45234680 -25.96177673]
[153.78955078 -12.07175064]
[148.12677002 1.81827676]
[142.46398926 15.70830345]
[136.80119324 29.59833145]
[139.16116333 44.30478668]
[126.78658295 54.16279221]
[121.12379456 68.05281830]
[115.46100616 81.94284821]
[109.79821777 95.83287048]
[105.29059601 110.13955688]
[109.77921295 125.31067657]
[99.41519165 136.00816345]
[96.09292603 150.63563538]
[92.77066803 165.26309204]
[89.44841003 179.89054871]
[86.12615204 194.51800537]
[90.61476898 209.68913269]
[80.25074768 220.38661194]
[76.92848969 235.01408386]
[74.70336914 249.84812927]
[73.58772278 264.80657959]
[72.47207642 279.76501465]
[79.16152954 294.10244751]
[70.49905396 306.21899414]
[69.38340759 321.17745972]
[68.26775360 336.13589478]
[67.15210724 351.09436035]
[81.72815704 354.79705811]
[95.43972015 360.97476196]
[107.87011719 369.43978882]
[118.64160156 379.93484497]
[127.42684174 392.14099121]
[133.95886230 405.68734741]
[138.03916931 420.16223145]
[139.54376221 435.12579346]
[138.42691040 450.12322998]
[134.72256470 464.69885254]
[128.54328918 478.40972900]
[120.07687378 490.83917236]
[109.58059692 501.60946655]
[97.37342834 510.39331055]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 196]
[21 195]
[22 194]
[23 193]
[25 191]
[26 190]
[27 189]
[38 188]
[39 187]
[41 185]
[42 184]
[43 183]
[44 182]
[45 181]
[47 179]
[59 178]
[60 177]
[61 176]
[62 175]
[64 173]
[65 172]
[66 171]
[67 170]
[68 169]
[69 147]
[70 146]
[71 145]
[72 144]
[73 143]
[86 130]
[87 129]
[88 128]
[89 127]
[93 126]
[94 125]
[95 124]
[96 123]
[97 122]
[98 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
