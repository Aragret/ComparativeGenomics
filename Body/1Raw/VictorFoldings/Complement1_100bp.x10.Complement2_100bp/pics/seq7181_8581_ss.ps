%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxGGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[107.46414948 979.74584961]
[92.50137329 978.66473389]
[77.58985901 977.02160645]
[62.75069809 974.81866455]
[48.00490189 972.05920410]
[33.37334061 968.74694824]
[18.87672234 964.88671875]
[4.53556728 960.48388672]
[-9.62982750 955.54479980]
[-23.59941101 950.07629395]
[-37.35341263 944.08624268]
[-50.87236404 937.58306885]
[-64.13713074 930.57598877]
[-77.12893677 923.07489014]
[-89.82939911 915.09045410]
[-102.22053528 906.63391113]
[-114.28480530 897.71722412]
[-126.00514221 888.35308838]
[-137.36495972 878.55474854]
[-148.34815979 868.33599854]
[-158.93920898 857.71136475]
[-169.12312317 846.69586182]
[-178.88548279 835.30505371]
[-188.21246338 823.55511475]
[-197.09088135 811.46270752]
[-205.50814819 799.04486084]
[-213.45236206 786.31915283]
[-220.91227722 773.30364990]
[-227.87733459 760.01678467]
[-234.33767700 746.47729492]
[-240.28414917 732.70440674]
[-245.70835876 718.71759033]
[-250.60261536 704.53662109]
[-254.95999146 690.18157959]
[-258.77432251 675.67285156]
[-262.04019165 661.03088379]
[-264.75299072 646.27636719]
[-266.90890503 631.43035889]
[-268.50485229 616.51367188]
[-269.53857422 601.54754639]
[-270.00860596 586.55316162]
[-269.91427612 571.55169678]
[-269.25576782 556.56433105]
[-268.03396606 541.61242676]
[-266.25057983 526.71697998]
[-263.90820312 511.89923096]
[-261.01010132 497.18002319]
[-257.56039429 482.58029175]
[-253.56394958 468.12060547]
[-249.02642822 453.82150269]
[-243.95426941 439.70321655]
[-238.35462952 425.78567505]
[-232.23545837 412.08865356]
[-225.60539246 398.63146973]
[-218.47383118 385.43319702]
[-210.85086060 372.51254272]
[-202.74726868 359.88772583]
[-194.17454529 347.57669067]
[-185.14479065 335.59683228]
[-175.67082214 323.96511841]
[-165.76600647 312.69796753]
[-155.44441223 301.81137085]
[-144.72061157 291.32073975]
[-133.60978699 281.24090576]
[-122.12768555 271.58612061]
[-110.29054260 262.37008667]
[-98.11511230 253.60583496]
[-85.61862946 245.30575562]
[-72.81878662 237.48159790]
[-59.73369217 230.14443970]
[-46.38187408 223.30468750]
[-32.78222656 216.97200012]
[-18.95400047 211.15533447]
[-4.91676569 205.86294556]
[9.30960846 201.10231018]
[23.70498657 196.88015747]
[38.24899292 193.20248413]
[52.92104340 190.07449341]
[67.70037079 187.50059509]
[82.56604767 185.48445129]
[97.49705505 184.02890015]
[96.60423279 169.05549622]
[88.12311554 156.81132507]
[95.02529144 142.57508850]
[94.13247681 127.60167694]
[93.23966217 112.62827301]
[85.70145416 100.85257721]
[91.78693390 88.26454163]
[90.89411926 73.29113770]
[90.00129700 58.31773376]
[79.50737000 43.18634415]
[87.96797180 27.81151962]
[86.85232544 12.85306644]
[72.11306000 9.49964905]
[59.01788330 1.94929779]
[48.73121262 -9.12661648]
[42.16773605 -22.74323082]
[39.91106796 -37.68976212]
[42.16187286 -52.63718033]
[48.72000885 -66.25637054]
[59.00233078 -77.33631897]
[72.09454346 -84.89180756]
[86.83249664 -88.25099945]
[101.90569305 -87.11521149]
[115.97384644 -81.58543396]
[127.78601837 -72.15335846]
[136.29188538 -59.65769577]
[140.73510742 -45.20953751]
[140.72059631 -30.09361267]
[136.24963379 -15.65401649]
[127.71978760 -3.17470717]
[115.88952637 6.23466253]
[101.81077576 11.73741817]
[102.92642975 26.69587135]
[111.88477325 34.82449722]
[112.93666077 47.27750015]
[104.97470856 57.42491913]
[105.86752319 72.39832306]
[106.76033783 87.37172699]
[114.29854584 99.14742279]
[108.21306610 111.73545837]
[109.10588074 126.70886230]
[109.99870300 141.68226624]
[118.54368591 154.99743652]
[111.57764435 168.16267395]
[112.47045898 183.13607788]
[127.46862793 182.80705261]
[142.46856689 183.04240417]
[157.44902039 183.84182739]
[172.38882446 185.20416260]
[187.26679993 187.12750244]
[202.06190491 189.60910034]
[216.75318909 192.64547729]
[231.31985474 196.23231506]
[245.74130249 200.36453247]
[259.99710083 205.03630066]
[274.06710815 210.24098206]
[287.93136597 215.97122192]
[301.57025146 222.21891785]
[314.96450806 228.97521973]
[328.09512329 236.23057556]
[340.94357300 243.97468567]
[353.49160767 252.19662476]
[365.72149658 260.88473511]
[377.61590576 270.02673340]
[389.15805054 279.60964966]
[400.33154297 289.61993408]
[411.12060547 300.04345703]
[421.50994873 310.86541748]
[431.48489380 322.07052612]
[441.03128052 333.64291382]
[450.13562012 345.56616211]
[458.78500366 357.82348633]
[466.96722412 370.39743042]
[474.67068481 383.27029419]
[481.88446045 396.42379761]
[488.59838867 409.83932495]
[494.80291748 423.49792480]
[500.48931885 437.38021851]
[505.64947510 451.46661377]
[510.27615356 465.73712158]
[514.36273193 480.17153931]
[517.90350342 494.74948120]
[520.89343262 509.45028687]
[523.32824707 524.25317383]
[525.20452881 539.13714600]
[526.51959229 554.08117676]
[527.27166748 569.06408691]
[527.45959473 584.06469727]
[527.08312988 599.06176758]
[526.14282227 614.03405762]
[524.64001465 628.96038818]
[522.57684326 643.81958008]
[519.95611572 658.59069824]
[516.78173828 673.25274658]
[513.05798340 687.78503418]
[508.79031372 702.16699219]
[503.98464966 716.37823486]
[498.64782715 730.39862061]
[492.78741455 744.20837402]
[486.41171265 757.78790283]
[479.52969360 771.11798096]
[472.15115356 784.17980957]
[464.28649902 796.95477295]
[455.94689941 809.42492676]
[447.14413452 821.57257080]
[437.89065552 833.38043213]
[428.19958496 844.83190918]
[418.08462524 855.91076660]
[407.56008911 866.60131836]
[396.64086914 876.88836670]
[385.34240723 886.75744629]
[373.68075562 896.19458008]
[361.67236328 905.18634033]
[349.33422852 913.72003174]
[336.68386841 921.78363037]
[323.73910522 929.36566162]
[310.51834106 936.45538330]
[297.04022217 943.04278564]
[283.32388306 949.11859131]
[269.38870239 954.67413330]
[255.25440979 959.70153809]
[240.94100952 964.19378662]
[226.46876526 968.14440918]
[211.85815430 971.54791260]
[197.12986755 974.39935303]
[182.30474854 976.69482422]
[167.40377808 978.43103027]
[152.44804382 979.60546875]
[137.45870972 980.21655273]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[81 126]
[82 125]
[84 123]
[85 122]
[86 121]
[88 119]
[89 118]
[90 117]
[92 114]
[93 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
