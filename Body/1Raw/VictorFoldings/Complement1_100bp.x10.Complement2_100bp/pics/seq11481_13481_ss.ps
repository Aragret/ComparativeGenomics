%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[65.85314178 473.25119019]
[50.94685364 471.58612061]
[36.11912537 469.32598877]
[21.39369202 466.47442627]
[6.79414129 463.03598022]
[-7.65614891 459.01617432]
[-21.93403816 454.42141724]
[-36.01665878 449.25909424]
[-49.88146591 443.53747559]
[-63.50624847 437.26571655]
[-76.86918640 430.45385742]
[-89.94889069 423.11279297]
[-102.72441101 415.25430298]
[-115.17528534 406.89093018]
[-127.28157043 398.03613281]
[-139.02389526 388.70407104]
[-150.38343811 378.90963745]
[-161.34201050 368.66857910]
[-171.88208008 357.99728394]
[-181.98674011 346.91281128]
[-191.63983154 335.43292236]
[-200.82589722 323.57601929]
[-209.53019714 311.36108398]
[-217.73883057 298.80767822]
[-225.43862915 285.93588257]
[-232.61726379 272.76632690]
[-239.26324463 259.32012939]
[-245.36593628 245.61877441]
[-250.91554260 231.68421936]
[-255.90319824 217.53880310]
[-260.32089233 203.20513916]
[-264.16159058 188.70622253]
[-267.41909790 174.06523132]
[-270.08822632 159.30564880]
[-272.16470337 144.45108032]
[-273.64517212 129.52532959]
[-274.52728271 114.55229950]
[-274.80963135 99.55596161]
[-274.49176025 84.56034088]
[-273.57415771 69.58943939]
[-272.05831909 54.66724396]
[-269.94665527 39.81763840]
[-267.24258423 25.06441307]
[-263.95037842 10.43118954]
[-260.07534790 -4.05859756]
[-255.62370300 -18.38174438]
[-250.60255432 -32.51531219]
[-245.01992798 -46.43667221]
[-238.88481140 -60.12352753]
[-232.20698547 -73.55395508]
[-224.99716187 -86.70645905]
[-217.26689148 -99.55995941]
[-209.02853394 -112.09389496]
[-200.29530334 -124.28816986]
[-191.08117676 -136.12327576]
[-181.40090942 -147.58024597]
[-171.27000427 -158.64074707]
[-160.70469666 -169.28704834]
[-149.72187805 -179.50212097]
[-138.33915710 -189.26959229]
[-126.57476807 -198.57382202]
[-114.44753265 -207.39991760]
[-101.97687531 -215.73373413]
[-89.18277740 -223.56195068]
[-76.08571625 -230.87199402]
[-62.70667267 -237.65217590]
[-49.06706619 -243.89164734]
[-35.18874359 -249.58039856]
[-21.09393120 -254.70933533]
[-6.80519533 -259.27023315]
[7.65457869 -263.25579834]
[22.26223564 -266.65963745]
[36.99438095 -269.47631836]
[34.76926422 -284.31036377]
[32.54414749 -299.14440918]
[30.31903076 -313.97845459]
[28.09391403 -328.81250000]
[25.86879730 -343.64654541]
[23.64367867 -358.48059082]
[21.41856194 -373.31460571]
[19.19344521 -388.14865112]
[4.16241312 -388.26940918]
[-10.66465378 -390.74014282]
[-24.92262650 -395.50006104]
[-38.26039124 -402.43188477]
[-50.34948730 -411.36499023]
[-60.89221954 -422.07934570]
[-69.62895203 -434.31109619]
[-76.34455109 -447.75906372]
[-80.87361908 -462.09201050]
[-83.10463715 -476.95706177]
[-82.98266602 -491.98806763]
[-80.51069641 -506.81494141]
[-75.74961853 -521.07250977]
[-68.81666565 -534.40972900]
[-59.88257217 -546.49804688]
[-49.16735077 -557.03991699]
[-36.93487167 -565.77563477]
[-23.48637009 -572.49011230]
[-9.15302658 -577.01800537]
[5.71218443 -579.24780273]
[20.74319649 -579.12457275]
[35.56985474 -576.65142822]
[49.82704163 -571.88916016]
[63.16366196 -564.95507812]
[75.25128937 -556.02001953]
[85.79225159 -545.30389404]
[94.52696228 -533.07067871]
[101.24034119 -519.62164307]
[105.76704407 -505.28793335]
[107.99561310 -490.42254639]
[107.87115479 -475.39154053]
[105.39674377 -460.56509399]
[100.63330841 -446.30828857]
[93.69815826 -432.97222900]
[84.76206970 -420.88534546]
[74.04511261 -410.34527588]
[61.81118774 -401.61157227]
[48.36157990 -394.89929199]
[34.02748871 -390.37377930]
[36.25260544 -375.53973389]
[38.47772217 -360.70568848]
[40.70283890 -345.87164307]
[42.92795563 -331.03759766]
[45.15307617 -316.20355225]
[47.37819290 -301.36950684]
[49.60330963 -286.53546143]
[51.82842636 -271.70141602]
[66.73861694 -273.33114624]
[81.70207977 -274.36297607]
[96.69483948 -274.79531860]
[111.69289398 -274.62744141]
[126.67221832 -273.85964966]
[141.60884094 -272.49316406]
[156.47882080 -270.53015137]
[171.25834656 -267.97378540]
[185.92378235 -264.82812500]
[200.45159912 -261.09823608]
[214.81855774 -256.79006958]
[229.00164795 -251.91053772]
[242.97814941 -246.46746826]
[256.72567749 -240.46954346]
[270.22225952 -233.92640686]
[283.44619751 -226.84849548]
[296.37640381 -219.24719238]
[308.99209595 -211.13462830]
[321.27313232 -202.52380371]
[333.19979858 -193.42852783]
[344.75305176 -183.86335754]
[355.91433716 -173.84359741]
[366.66577148 -163.38529968]
[376.99020386 -152.50521851]
[386.87103271 -141.22076416]
[396.29248047 -129.55003357]
[405.23944092 -117.51168823]
[413.69760132 -105.12502289]
[421.65338135 -92.40986633]
[429.09408569 -79.38658142]
[436.00775146 -66.07602692]
[442.38333130 -52.49951935]
[448.21063232 -38.67879486]
[453.48031616 -24.63599014]
[458.18389893 -10.39359093]
[462.31390381 4.02559280]
[465.86370850 18.59847069]
[468.82760620 33.30170441]
[471.20083618 48.11175156]
[472.97964478 63.00489044]
[474.16116333 77.95727539]
[474.74349976 92.94496155]
[474.72570801 107.94393921]
[474.10781860 122.93020630]
[472.89083862 137.87974548]
[471.07672119 152.76861572]
[468.66833496 167.57299805]
[465.66958618 182.26916504]
[462.08523560 196.83357239]
[457.92102051 211.24291992]
[453.18365479 225.47412109]
[447.88070679 239.50439453]
[442.02062988 253.31124878]
[435.61285400 266.87258911]
[428.66763306 280.16671753]
[421.19607544 293.17230225]
[413.21014404 305.86856079]
[404.72262573 318.23513794]
[395.74713135 330.25222778]
[386.29803467 341.90057373]
[376.39044189 353.16156006]
[366.04025269 364.01712036]
[355.26403809 374.44985962]
[344.07901001 384.44311523]
[332.50311279 393.98086548]
[320.55490112 403.04785156]
[308.25347900 411.62948608]
[295.61856079 419.71209717]
[282.67037964 427.28274536]
[269.42965698 434.32925415]
[255.91763306 440.84036255]
[242.15589905 446.80563354]
[228.16651917 452.21554565]
[213.97189331 457.06143188]
[199.59475708 461.33547974]
[185.05813599 465.03091431]
[170.38528442 468.14178467]
[155.59973145 470.66308594]
[140.72512817 472.59082031]
[125.78531647 473.92187500]
[110.80420685 474.65414429]
[95.80580139 474.78643799]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 128]
[74 127]
[75 126]
[76 125]
[77 124]
[78 123]
[79 122]
[80 121]
[81 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
