%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAUxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[141.10462952 795.48046875]
[127.66399384 788.80645752]
[114.73372650 781.19061279]
[102.37970734 772.67169189]
[90.66490173 763.29315186]
[79.64900970 753.10284424]
[69.38815308 742.15258789]
[59.93462753 730.49822998]
[51.33660507 718.19915771]
[43.63790131 705.31799316]
[36.87774277 691.92047119]
[31.09058571 678.07482910]
[26.30591393 663.85162354]
[22.54811096 649.32330322]
[19.83632660 634.56390381]
[18.18438148 619.64868164]
[17.60068893 604.65356445]
[18.08822632 589.65509033]
[19.64451027 574.72955322]
[22.26160812 559.95306396]
[25.92618370 545.40093994]
[30.61956215 531.14733887]
[36.31782913 517.26489258]
[42.99194717 503.82427979]
[50.60790634 490.89407349]
[59.12689590 478.54010010]
[68.50550079 466.82537842]
[78.69593811 455.80957031]
[89.64627838 445.54879761]
[101.30070496 436.09536743]
[113.59985352 427.49743652]
[126.48102570 419.79882812]
[139.87860107 413.03875732]
[153.72428894 407.25170898]
[167.94755554 402.46716309]
[164.19125366 387.94509888]
[160.43495178 373.42303467]
[156.67866516 358.90097046]
[152.92236328 344.37890625]
[149.16606140 329.85684204]
[145.19395447 315.39233398]
[141.00694275 300.98855591]
[136.81993103 286.58477783]
[132.63291931 272.18099976]
[123.23100281 283.86874390]
[108.23126984 283.95797729]
[98.69097137 272.38290405]
[101.64285278 257.67620850]
[114.91091156 250.67916870]
[128.71331787 256.54846191]
[125.60920715 241.87315369]
[115.40560150 231.02255249]
[120.11959839 215.91993713]
[117.01548767 201.24464417]
[113.91138458 186.56933594]
[110.80727386 171.89404297]
[107.37621307 157.29171753]
[103.61991119 142.76965332]
[99.86360931 128.24758911]
[95.99930573 113.75389862]
[86.18740082 103.79307556]
[89.53617096 90.21819305]
[85.56407928 75.75366974]
[81.59197998 61.28914642]
[77.61988068 46.82462311]
[66.50441742 35.56598282]
[70.59524536 21.24416542]
[66.62315369 6.77964211]
[62.19537354 1.86982393]
[61.07935333 -3.70256543]
[62.75499725 -8.17484093]
[59.21532440 -22.75121689]
[46.00127792 -30.99904633]
[42.61919403 -45.83198929]
[50.56367493 -58.37873459]
[39.78834915 -69.96333313]
[44.30377579 -84.15699768]
[40.76410294 -98.73337555]
[37.22443008 -113.30975342]
[33.68475723 -127.88612366]
[22.90943336 -139.47071838]
[27.42486000 -153.66439819]
[23.88518906 -168.24076843]
[20.34551620 -182.81713867]
[5.28226614 -182.60209656]
[-9.45106125 -185.74482727]
[-23.11544800 -192.08772278]
[-35.02549362 -201.31260681]
[-44.58379745 -212.95677185]
[-51.31092072 -226.43614197]
[-54.86942673 -241.07461548]
[-55.08082581 -256.13790894]
[-51.93451691 -270.87048340]
[-45.58831787 -284.53332520]
[-36.36054611 -296.44113159]
[-24.71406555 -305.99664307]
[-11.23305893 -312.72048950]
[3.40627193 -316.27545166]
[18.46962357 -316.48318481]
[33.20142746 -313.33331299]
[46.86273956 -306.98379517]
[58.76831436 -297.75314331]
[68.32097626 -286.10433960]
[75.04155731 -272.62170410]
[78.59297180 -257.98153687]
[78.79707336 -242.91812134]
[75.64362335 -228.18708801]
[69.29080200 -214.52731323]
[60.05726242 -202.62397766]
[48.40615463 -193.07414246]
[34.92189026 -186.35681152]
[38.46156311 -171.78044128]
[42.00123596 -157.20407104]
[52.52338028 -146.66206360]
[48.26113510 -131.42579651]
[51.80080795 -116.84942627]
[55.34047699 -102.27304840]
[58.88014984 -87.69667053]
[69.40229797 -77.15467072]
[65.14004517 -61.91840744]
[77.95402527 -54.41256714]
[81.75140381 -39.68047333]
[73.79170227 -26.29088974]
[77.33137512 -11.71451378]
[81.08767700 2.80754566]
[85.05976868 17.27206993]
[95.89112854 27.49611092]
[92.08441162 42.85252762]
[96.05650330 57.31705093]
[100.02860260 71.78157043]
[104.00069427 86.24610138]
[113.81259918 96.20692444]
[110.46382904 109.78180695]
[115.75399780 117.22840881]
[114.38566589 124.49129486]
[118.14196777 139.01335144]
[121.89826965 153.53541565]
[125.55834198 157.25709534]
[127.25516510 161.57846069]
[127.08908844 165.65122986]
[125.48257446 168.78993225]
[128.58668518 183.46522522]
[131.69079590 198.14053345]
[134.79490662 212.81582642]
[145.22053528 224.71611023]
[140.28451538 238.76905823]
[143.38862610 253.44435120]
[147.03671265 267.99398804]
[151.22372437 282.39776611]
[155.41073608 296.80154419]
[159.59774780 311.20532227]
[164.09812927 316.04867554]
[165.29699707 321.60382080]
[163.68811035 326.10055542]
[167.44441223 340.62261963]
[171.20071411 355.14468384]
[174.95701599 369.66671753]
[178.71331787 384.18878174]
[182.46961975 398.71084595]
[197.22894287 395.99871826]
[212.14414978 394.34643555]
[227.13922119 393.76239014]
[242.13774109 394.24960327]
[257.06329346 395.80554199]
[271.83984375 398.42230225]
[286.39202881 402.08654785]
[300.64575195 406.77957153]
[314.52835083 412.47753906]
[327.96908569 419.15133667]
[340.89947510 426.76699829]
[353.25363159 435.28570557]
[364.96859741 444.66406250]
[375.98464966 454.85421753]
[386.24566650 465.80432129]
[395.69937134 477.45855713]
[404.29757690 489.75747681]
[411.99649048 502.63848877]
[418.75683594 516.03588867]
[424.54421997 529.88146973]
[429.32910156 544.10461426]
[433.08712769 558.63287354]
[435.79913330 573.39221191]
[437.45132446 588.30743408]
[438.03521729 603.30255127]
[437.54791260 618.30102539]
[435.99188232 633.22662354]
[433.37500000 648.00311279]
[429.71063232 662.55529785]
[425.01748657 676.80895996]
[419.31942749 690.69152832]
[412.64550781 704.13220215]
[405.02975464 717.06256104]
[396.51095581 729.41662598]
[387.13253784 741.13153076]
[376.94226074 752.14746094]
[365.99209595 762.40844727]
[354.33779907 771.86206055]
[342.03878784 780.46014404]
[329.15771484 788.15893555]
[315.76025391 794.91918945]
[301.91464233 800.70648193]
[287.69146729 805.49127197]
[273.16317749 809.24914551]
[258.40380859 811.96105957]
[243.48857117 813.61309814]
[228.49349976 814.19696045]
[213.49496460 813.70953369]
[198.56944275 812.15332031]
[183.79295349 809.53637695]
[169.24079895 805.87188721]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 159]
[36 158]
[37 157]
[38 156]
[39 155]
[40 154]
[41 151]
[42 150]
[43 149]
[44 148]
[50 147]
[51 146]
[53 144]
[54 143]
[55 142]
[56 141]
[57 137]
[58 136]
[59 135]
[60 133]
[62 131]
[63 130]
[64 129]
[65 128]
[67 126]
[68 125]
[71 124]
[72 123]
[75 120]
[77 118]
[78 117]
[79 116]
[80 115]
[82 113]
[83 112]
[84 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
