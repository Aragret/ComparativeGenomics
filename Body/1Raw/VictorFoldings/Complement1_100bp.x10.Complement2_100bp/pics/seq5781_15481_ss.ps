%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[66.74669647 530.14587402]
[56.31056976 541.05413818]
[43.31784821 548.74127197]
[28.73267174 552.63677979]
[13.63736439 552.45166016]
[-0.84790456 548.19970703]
[-13.64823151 540.19628906]
[-23.81374550 529.03540039]
[-30.59010124 515.54528809]
[-33.47444534 500.72695923]
[-32.25274277 485.68002319]
[-27.01564789 471.52108765]
[-18.15179253 459.30084229]
[-6.31893110 449.92608643]
[7.60485888 444.09249878]
[22.58633995 442.23300171]
[24.81145668 427.39895630]
[27.03657532 412.56491089]
[25.48073959 410.23306274]
[24.75483894 407.14440918]
[25.15174484 403.61203003]
[26.84571838 400.04901123]
[29.86111069 396.92471313]
[32.96522141 382.24938965]
[36.06933212 367.57409668]
[39.17344284 352.89880371]
[34.23741531 338.84585571]
[44.66304779 326.94558716]
[47.76715851 312.27026367]
[50.87126923 297.59497070]
[53.97537994 282.91967773]
[56.97015381 268.22164917]
[59.85542679 253.50177002]
[62.74069977 238.78187561]
[65.62596893 224.06198120]
[59.13993454 213.85131836]
[61.42323303 201.56431580]
[71.78806305 193.88752747]
[74.89217377 179.21221924]
[77.99627686 164.53691101]
[81.10038757 149.86161804]
[79.40912628 142.66706848]
[84.36150360 134.99168396]
[87.68376923 120.36421967]
[91.00602722 105.73675537]
[92.89931488 90.85671997]
[93.34592438 75.86337280]
[93.79252625 60.87002182]
[94.23913574 45.87667465]
[82.01206207 33.36595917]
[82.60448456 16.22058487]
[95.16168976 5.03330421]
[95.38501740 -9.96503353]
[95.60834503 -24.96337128]
[95.83167267 -39.96170807]
[96.05500031 -54.96004486]
[96.27832794 -69.95838165]
[96.50165558 -84.95671844]
[96.38999176 -99.95630646]
[95.94338226 -114.94965363]
[95.49678040 -129.94300842]
[95.05017090 -144.93635559]
[92.71468353 -159.75341797]
[81.43283081 -170.84532166]
[85.30997467 -185.22645569]
[81.12296295 -199.63023376]
[76.93595123 -214.03402710]
[72.21581268 -228.27200317]
[66.96909332 -242.32447815]
[61.72237778 -256.37695312]
[56.47566223 -270.42941284]
[41.81679153 -267.13833618]
[26.84631157 -265.87399292]
[11.84311390 -266.66000366]
[-2.91330242 -269.48168945]
[-17.14803505 -274.28649902]
[-30.59589767 -280.98492432]
[-43.00636673 -289.45214844]
[-54.14824295 -299.53045654]
[-63.81395721 -311.03210449]
[-71.82344818 -323.74279785]
[-78.02749634 -337.42575073]
[-82.31053162 -351.82608032]
[-84.59275818 -366.67550659]
[-84.83165741 -381.69738770]
[-83.02278900 -396.61187744]
[-79.19984436 -411.14111328]
[-73.43404388 -425.01443481]
[-65.83280182 -437.97338867]
[-56.53772354 -449.77658081]
[-45.72196960 -460.20410156]
[-33.58703232 -469.06170654]
[-20.35897446 -476.18435669]
[-6.28423262 -481.43939209]
[8.37499332 -484.72891235]
[23.34560966 -485.99160767]
[38.34872055 -485.20397949]
[53.10483170 -482.38070679]
[67.33904266 -477.57434082]
[80.78618622 -470.87448120]
[93.19573212 -462.40591431]
[104.33651733 -452.32638550]
[114.00099182 -440.82369995]
[122.00910187 -428.11215210]
[128.21166992 -414.42849731]
[132.49314880 -400.02770996]
[134.77377319 -385.17803955]
[135.01104736 -370.15615845]
[133.20056152 -355.24185181]
[129.37603760 -340.71304321]
[123.60874176 -326.84033203]
[116.00609589 -313.88220215]
[106.70973969 -302.08001709]
[95.89285278 -291.65365601]
[83.75695801 -282.79736328]
[70.52812958 -275.67614746]
[75.77484894 -261.62365723]
[81.02156830 -247.57119751]
[86.26828766 -233.51872253]
[94.77487183 -245.87339783]
[109.72642517 -247.07801819]
[120.10121918 -236.24456787]
[118.25133514 -221.35906982]
[105.54045105 -213.39456177]
[91.33972931 -218.22103882]
[95.52674103 -203.81724548]
[99.71375275 -189.41346741]
[110.69612885 -179.35182190]
[107.11846924 -163.94042969]
[110.26998901 -178.60562134]
[117.95603943 -191.48680115]
[129.36550903 -201.22456360]
[143.29431152 -206.79127502]
[158.27253723 -207.59945679]
[172.71945190 -203.56382751]
[185.11048889 -195.11027527]
[194.13795471 -183.13093567]
[198.84916687 -168.88998413]
[198.74696350 -153.89033508]
[193.84210205 -139.71492004]
[184.65220642 -127.85971832]
[172.14712524 -119.57582092]
[157.64654541 -115.73744965]
[142.68074036 -116.74969482]
[128.82908630 -122.50570679]
[117.55338287 -132.39805603]
[110.04352570 -145.38296509]
[110.49012756 -130.38961792]
[110.93673706 -115.39626312]
[111.38333893 -100.40290833]
[113.68515015 -97.73195648]
[114.80762482 -93.81339264]
[114.17845917 -89.21366882]
[111.49999237 -84.73339081]
[111.27666473 -69.73505402]
[111.05333710 -54.73671722]
[110.83000946 -39.73838043]
[110.60668182 -24.74004364]
[110.38335419 -9.74170589]
[110.16002655 5.25663185]
[120.33995056 13.15591335]
[124.16858673 25.66285706]
[120.03392029 38.27693176]
[109.23248291 46.32328033]
[108.78588104 61.31662750]
[108.33927155 76.30998230]
[107.89266968 91.30332947]
[116.12204742 78.76230621]
[128.69662476 70.58427429]
[143.49734497 68.14738464]
[158.03004456 71.86229706]
[169.84571838 81.10297394]
[176.95318604 94.31220245]
[178.15473938 109.26400757]
[173.24787903 123.43872833]
[163.05950928 134.44769287]
[149.30654907 140.43568420]
[134.30661011 140.39361572]
[120.58744812 134.32859802]
[110.46097565 123.26268005]
[105.63348389 109.05902100]
[102.31122589 123.68647766]
[98.98896790 138.31393433]
[95.77569580 152.96572876]
[92.67158508 167.64102173]
[89.56747437 182.31632996]
[86.46336365 196.99163818]
[92.57578278 214.36170959]
[80.34586334 226.94726562]
[77.46058655 241.66714478]
[74.57531738 256.38705444]
[71.69004822 271.10693359]
[73.11032104 280.13027954]
[68.65068054 286.02377319]
[65.54656982 300.69906616]
[62.44246292 315.37438965]
[59.33835220 330.04968262]
[64.05234528 345.15228271]
[53.84874344 356.00289917]
[50.74463272 370.67819214]
[47.64052200 385.35351562]
[44.53641510 400.02880859]
[41.87061691 414.79003906]
[39.64550018 429.62408447]
[37.42038345 444.45809937]
[51.19694519 450.63134766]
[62.79637527 460.29342651]
[71.35791779 472.72735596]
[76.24625397 487.01046753]
[77.09863281 502.08282471]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 205]
[17 204]
[18 203]
[23 202]
[24 201]
[25 200]
[26 199]
[28 197]
[29 196]
[30 195]
[31 194]
[32 192]
[33 191]
[34 190]
[35 189]
[38 187]
[39 186]
[40 185]
[41 184]
[43 183]
[44 182]
[45 181]
[46 167]
[47 166]
[48 165]
[49 164]
[52 160]
[53 159]
[54 158]
[55 157]
[56 156]
[57 155]
[58 154]
[59 150]
[60 149]
[61 148]
[62 147]
[63 129]
[65 127]
[66 126]
[67 125]
[68 119]
[69 118]
[70 117]
[71 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
