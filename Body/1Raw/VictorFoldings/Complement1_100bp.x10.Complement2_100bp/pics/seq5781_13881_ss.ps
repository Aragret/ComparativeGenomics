%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[23.68966293 513.11676025]
[17.97029686 527.00152588]
[10.70543861 540.14379883]
[1.98979843 552.37225342]
[-8.06299591 563.52746582]
[-19.32188797 573.46405029]
[-31.64009094 582.05236816]
[-44.85701370 589.18054199]
[-58.80035019 594.75555420]
[-73.28831482 598.70483398]
[-88.13203430 600.97680664]
[-103.13797760 601.54187012]
[-118.11052704 600.39270020]
[-132.85447693 597.54425049]
[-147.17759705 593.03363037]
[-160.89318848 586.91961670]
[-173.82240295 579.28204346]
[-185.79670715 570.22033691]
[-196.65998840 559.85278320]
[-206.27059937 548.31439209]
[-214.50328064 535.75573730]
[-221.25068665 522.34039307]
[-226.42483521 508.24340820]
[-229.95829773 493.64846802]
[-231.80499268 478.74584961]
[-231.94084167 463.72988892]
[-230.36408997 448.79632568]
[-227.09527588 434.13983154]
[-222.17701721 419.95150757]
[-215.67344666 406.41632080]
[-207.66934204 393.71072388]
[-198.26905823 382.00036621]
[-187.59513855 371.43792725]
[-175.78674316 362.16110229]
[-162.99783325 354.29080200]
[-149.39511108 347.92968750]
[-135.15592957 343.16064453]
[-120.46594238 340.04586792]
[-105.51663971 338.62597656]
[-90.50292206 338.91946411]
[-75.62052917 340.92248535]
[-61.06348419 344.60897827]
[-47.02156067 349.93084717]
[-40.14214706 336.60140991]
[-33.26273727 323.27197266]
[-34.30124664 308.41363525]
[-21.09652138 299.69894409]
[-14.21710873 286.36950684]
[-7.33769560 273.04006958]
[-0.45828319 259.71066284]
[6.42112923 246.38122559]
[13.30054188 233.05178833]
[12.72757721 228.31040955]
[15.12704182 223.15873718]
[20.58838272 219.43244934]
[27.86161232 206.31375122]
[35.13484192 193.19505310]
[42.40806961 180.07637024]
[49.68130112 166.95767212]
[56.95452881 153.83897400]
[64.22776031 140.72027588]
[49.54767227 143.80168152]
[36.91353989 135.71597290]
[33.56276321 121.09501648]
[41.41482544 108.31436157]
[55.97170639 104.69535065]
[68.89456177 112.31111145]
[72.78071594 126.79804993]
[64.60275269 114.35478973]
[61.80376816 99.73016357]
[64.80908966 85.14655304]
[73.16203308 72.82006836]
[85.59328461 64.62385559]
[100.21378326 61.80341339]
[114.80178833 64.78733063]
[123.21640778 52.36983490]
[131.63102722 39.95233917]
[140.04565430 27.53484535]
[148.36758423 15.05505180]
[156.59640503 2.51365113]
[164.82521057 -10.02774906]
[173.05401611 -22.56914902]
[181.28282166 -35.11054993]
[189.51162720 -47.65195084]
[190.61312866 -63.43476486]
[204.06423950 -69.83136749]
[212.10542297 -82.49389648]
[219.95716858 -95.27473450]
[227.80892944 -108.05558014]
[235.66069031 -120.83642578]
[243.51243591 -133.61726379]
[251.36419678 -146.39810181]
[239.39103699 -155.45344543]
[228.34776306 -165.62208557]
[218.33746338 -176.80911255]
[209.45361328 -188.91004944]
[201.77915955 -201.81192017]
[195.38575745 -215.39425659]
[190.33309937 -229.53024292]
[186.66836548 -244.08790588]
[184.42578125 -258.93130493]
[183.62628174 -273.92184448]
[184.27732849 -288.91955566]
[186.37283325 -303.78442383]
[189.89323425 -318.37765503]
[194.80567932 -332.56298828]
[201.06428528 -346.20794678]
[208.61062622 -359.18518066]
[217.37422180 -371.37347412]
[227.27326965 -382.65905762]
[238.21533203 -392.93655396]
[250.09823608 -402.10998535]
[262.81103516 -410.09371948]
[276.23504639 -416.81320190]
[290.24493408 -422.20571899]
[304.70986938 -426.22085571]
[319.49478149 -428.82119751]
[334.46163940 -429.98239136]
[349.47070312 -429.69366455]
[364.38183594 -427.95767212]
[379.05581665 -424.79064941]
[393.35562134 -420.22213745]
[407.14773560 -414.29483032]
[420.30337524 -407.06402588]
[432.69973755 -398.59725952]
[444.22103882 -388.97360229]
[454.75973511 -378.28286743]
[464.21740723 -366.62490845]
[472.50576782 -354.10858154]
[479.54739380 -340.85073853]
[485.27658081 -326.97512817]
[489.63983154 -312.61138916]
[492.59637451 -297.89355469]
[494.11862183 -282.95907593]
[494.19238281 -267.94741821]
[492.81692505 -252.99871826]
[490.00512695 -238.25256348]
[485.78320312 -223.84661865]
[480.19061279 -209.91542053]
[473.27957153 -196.58901978]
[465.11459351 -183.99185181]
[455.77191162 -172.24154663]
[445.33877563 -161.44779968]
[433.91256714 -151.71139526]
[421.60000610 -143.12326050]
[408.51602173 -135.76354980]
[394.78280640 -129.70100403]
[380.52859497 -124.99223328]
[365.88644409 -121.68118286]
[350.99307251 -119.79878235]
[335.98757935 -119.36260223]
[321.01004028 -120.37671661]
[306.20028687 -122.83165741]
[291.69659424 -126.70449829]
[277.63442993 -131.95909119]
[264.14505005 -138.54635620]
[256.29327393 -125.76551056]
[248.44152832 -112.98466492]
[240.58976746 -100.20382690]
[232.73802185 -87.42298126]
[224.88626099 -74.64213562]
[225.10499573 -69.87126923]
[222.32901001 -64.91234589]
[216.60565186 -61.60256195]
[216.09272766 -46.71678925]
[202.05302429 -39.42314148]
[193.82421875 -26.88174248]
[185.59541321 -14.34034157]
[177.36660767 -1.79894137]
[169.13780212 10.74245930]
[160.90899658 23.28385925]
[159.86785889 30.60081482]
[152.46315002 35.94946289]
[144.04852295 48.36695862]
[135.63391113 60.78445435]
[127.21928406 73.20195007]
[135.39724731 85.64521027]
[138.19622803 100.26983643]
[135.19090271 114.85344696]
[126.83796692 127.17993164]
[114.40671539 135.37614441]
[99.78621674 138.19659424]
[85.19821167 135.21266174]
[77.34645081 147.99351501]
[70.07322693 161.11219788]
[62.79999542 174.23089600]
[55.52676392 187.34959412]
[48.25353622 200.46829224]
[40.98030472 213.58697510]
[33.70707703 226.70567322]
[26.62997055 239.93119812]
[19.75055885 253.26063538]
[12.87114620 266.59005737]
[5.99173355 279.91949463]
[-0.88767904 293.24893188]
[-7.76709175 306.57833862]
[-7.22064352 322.39010620]
[-19.93330765 330.15139771]
[-26.81271935 343.48083496]
[-33.69213104 356.81024170]
[-21.21949959 365.17272949]
[-9.78144073 374.90252686]
[0.47292474 385.87274170]
[9.40991116 397.94039917]
[16.91300583 410.94812012]
[22.88439178 424.72637939]
[27.24621964 439.09552002]
[29.94162178 453.86822510]
[30.93546104 468.85186768]
[30.21477890 483.85116577]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 200]
[44 199]
[45 198]
[47 196]
[48 195]
[49 194]
[50 193]
[51 192]
[52 191]
[55 190]
[56 189]
[57 188]
[58 187]
[59 186]
[60 185]
[61 184]
[68 183]
[75 176]
[76 175]
[77 174]
[78 173]
[79 171]
[80 170]
[81 169]
[82 168]
[83 167]
[84 166]
[86 164]
[87 161]
[88 160]
[89 159]
[90 158]
[91 157]
[92 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
