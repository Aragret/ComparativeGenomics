%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[200.10127258 410.66128540]
[201.89651489 395.75598145]
[205.19050598 381.10879517]
[209.94946289 366.86996460]
[216.12452698 353.18569946]
[223.65234375 340.19635010]
[232.45565796 328.03524780]
[242.44415283 316.82717896]
[253.51531982 306.68713379]
[244.55461121 294.65774536]
[235.59391785 282.62835693]
[226.63322449 270.59899902]
[217.67253113 258.56961060]
[208.71183777 246.54023743]
[199.75114441 234.51086426]
[190.52403259 222.68458557]
[176.48043823 217.72207642]
[173.74296570 202.13951111]
[164.25405884 190.52224731]
[150.21046448 185.55973816]
[147.47297668 169.97715759]
[132.67391968 168.74291992]
[122.88533020 157.09654236]
[124.28025055 141.58229065]
[114.79135132 129.96502686]
[105.30245209 118.34775543]
[90.89695740 116.78960419]
[81.73097992 105.56770325]
[83.08028412 91.14114380]
[73.59138489 79.52388000]
[58.86907196 73.73042297]
[56.81030273 58.97879028]
[47.32140350 47.36152649]
[37.83250427 35.74426270]
[28.34360695 24.12699890]
[13.62129402 18.33354759]
[11.56252575 3.58191252]
[2.07362700 -8.03535080]
[-7.41527128 -19.65261459]
[-16.90416908 -31.26987839]
[-31.62648201 -37.06332779]
[-33.68525314 -51.81496429]
[-43.17414856 -63.43222809]
[-60.53976059 -69.55734253]
[-62.68022919 -86.97530365]
[-72.34104156 -98.45000458]
[-82.00184631 -109.92470551]
[-80.10129547 -95.04559326]
[-84.76256561 -80.78822327]
[-95.08562469 -69.90546417]
[-109.07726288 -64.49861145]
[-124.03591156 -65.61164093]
[-137.07328796 -73.02964783]
[-145.67208862 -85.32032776]
[-148.17199707 -100.11054230]
[-144.09034729 -114.54453278]
[-134.21522522 -125.83531952]
[-120.45336914 -131.80284119]
[-105.46197510 -131.29484558]
[-92.13466644 -124.40860748]
[-99.60240936 -137.41755676]
[-107.07014465 -150.42651367]
[-114.53788757 -163.43547058]
[-122.00563049 -176.44441223]
[-135.88157654 -170.69233704]
[-150.37916565 -166.76193237]
[-165.26036072 -164.71777344]
[-180.28077698 -164.59342957]
[-195.19377136 -166.39091492]
[-209.75445557 -170.08071899]
[-223.72373962 -175.60227966]
[-236.87222290 -182.86489868]
[-248.98400879 -191.74931335]
[-259.86019897 -202.10966492]
[-269.32220459 -213.77580261]
[-277.21463013 -226.55616760]
[-283.40792847 -240.24089050]
[-287.80032349 -254.60525513]
[-290.31976318 -269.41339111]
[-290.92483521 -284.42211914]
[-289.60559082 -299.38500977]
[-286.38372803 -314.05633545]
[-281.31213379 -328.19519043]
[-274.47409058 -341.56939697]
[-265.98187256 -353.95935059]
[-255.97496033 -365.16159058]
[-244.61766052 -374.99215698]
[-232.09646606 -383.28961182]
[-218.61698914 -389.91775513]
[-204.40057373 -394.76766968]
[-189.68066406 -397.75979614]
[-174.69898987 -398.84494019]
[-159.70153809 -398.00531006]
[-144.93460083 -395.25469971]
[-130.64065552 -390.63824463]
[-117.05443573 -384.23178101]
[-104.39901733 -376.14050293]
[-92.88222504 -366.49728394]
[-82.69318390 -355.46044922]
[-73.99919128 -343.21124268]
[-66.94301605 -329.95083618]
[-61.64052582 -315.89694214]
[-58.17879868 -301.28033447]
[-56.61467361 -286.34106445]
[-56.97383499 -271.32443237]
[-59.25038910 -256.47702026]
[-63.40695190 -242.04264832]
[-69.37526703 -228.25831604]
[-77.05732727 -215.35040283]
[-86.32698822 -203.53085327]
[-97.03203583 -192.99377441]
[-108.99668121 -183.91215515]
[-101.52893829 -170.90321350]
[-94.06119537 -157.89425659]
[-86.59345245 -144.88529968]
[-79.12570953 -131.87635803]
[-70.52714539 -119.58551025]
[-60.86633682 -108.11081696]
[-51.20552826 -96.63611603]
[-39.18414307 -95.28969574]
[-31.04165077 -85.80899811]
[-31.55688667 -72.92112732]
[-22.06798744 -61.30386353]
[-8.02438450 -56.34135437]
[-5.28690624 -40.75877762]
[4.20199203 -29.14151192]
[13.69089031 -17.52425003]
[23.17978859 -5.90698576]
[37.22339249 -0.94447821]
[39.96086884 14.63810158]
[49.44976807 26.25536537]
[58.93866730 37.87262726]
[68.42756653 49.48989105]
[82.47116852 54.45240021]
[85.20864868 70.03498077]
[94.69754791 81.65224457]
[109.10304260 83.21039581]
[118.26902008 94.43229675]
[116.91971588 108.85885620]
[126.40861511 120.47612000]
[135.89752197 132.09338379]
[151.37791443 133.82398987]
[160.83551025 145.74072266]
[159.09024048 160.48825073]
[173.81256104 166.28170776]
[175.87132263 181.03334045]
[185.36022949 192.65060425]
[200.08253479 198.44406128]
[202.14129639 213.19569397]
[207.02294922 215.04409790]
[210.37248230 218.25874329]
[211.92607117 222.02722168]
[211.78051758 225.55017090]
[220.74121094 237.57954407]
[229.70190430 249.60891724]
[238.66259766 261.63830566]
[247.62330627 273.66766357]
[256.58398438 285.69705200]
[265.54467773 297.72644043]
[278.42974854 290.02145386]
[292.02819824 283.65960693]
[306.20050049 278.70614624]
[320.80123901 275.21191406]
[335.68054199 273.21276855]
[350.68579102 272.72918701]
[365.66296387 273.76617432]
[380.45837402 276.31311035]
[394.92019653 280.34378052]
[408.90005493 285.81689453]
[422.25445557 292.67626953]
[434.84637451 300.85150146]
[446.54660034 310.25869751]
[457.23507690 320.80136108]
[466.80212402 332.37127686]
[475.14956665 344.84970093]
[482.19171143 358.10864258]
[487.85632324 372.01199341]
[492.08529663 386.41708374]
[494.83520508 401.17611694]
[496.07781982 416.13763428]
[495.80041504 431.14810181]
[494.00582886 446.05346680]
[490.71249390 460.70083618]
[485.95416260 474.93981934]
[479.77969360 488.62438965]
[472.25247192 501.61407471]
[463.44967651 513.77557373]
[453.46166992 524.98406982]
[442.39096069 535.12463379]
[430.35113525 544.09307861]
[417.46575928 551.79748535]
[403.86700439 558.15875244]
[389.69448853 563.11157227]
[375.09359741 566.60516357]
[360.21420288 568.60369873]
[345.20892334 569.08654785]
[330.23181152 568.04888916]
[315.43652344 565.50134277]
[300.97485352 561.47003174]
[286.99523926 555.99627686]
[273.64114380 549.13635254]
[261.04959106 540.96057129]
[249.34976196 531.55285645]
[238.66175842 521.00970459]
[229.09523010 509.43939209]
[220.74835205 496.96057129]
[213.70677185 483.70135498]
[208.04277039 469.79776001]
[203.81443787 455.39245605]
[201.06518555 440.63330078]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 159]
[10 158]
[11 157]
[12 156]
[13 155]
[14 154]
[15 153]
[16 149]
[18 147]
[19 146]
[21 144]
[24 141]
[25 140]
[26 139]
[29 136]
[30 135]
[32 133]
[33 132]
[34 131]
[35 130]
[37 128]
[38 127]
[39 126]
[40 125]
[42 123]
[43 122]
[45 119]
[46 118]
[47 117]
[60 116]
[61 115]
[62 114]
[63 113]
[64 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
