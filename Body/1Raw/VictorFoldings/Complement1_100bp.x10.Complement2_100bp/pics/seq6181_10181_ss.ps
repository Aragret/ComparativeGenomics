%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[55.69423294 924.58105469]
[40.69244766 924.44207764]
[25.71124649 923.64422607]
[10.77954865 922.18914795]
[-4.07382393 920.07958984]
[-18.82019997 917.31964111]
[-33.43111420 913.91461182]
[-47.87836838 909.87115479]
[-62.13406754 905.19696045]
[-76.17070007 899.90112305]
[-89.96117401 893.99389648]
[-103.47885895 887.48657227]
[-116.69766998 880.39178467]
[-129.59208679 872.72326660]
[-142.13723755 864.49572754]
[-154.30888367 855.72509766]
[-166.08352661 846.42828369]
[-177.43846130 836.62322998]
[-188.35176086 826.32891846]
[-198.80235291 815.56518555]
[-208.77008057 804.35284424]
[-218.23568726 792.71343994]
[-227.18089294 780.66955566]
[-235.58845520 768.24432373]
[-243.44213867 755.46179199]
[-250.72677612 742.34667969]
[-257.42831421 728.92419434]
[-263.53381348 715.22033691]
[-269.03146362 701.26153564]
[-273.91070557 687.07470703]
[-278.16207886 672.68725586]
[-281.77740479 658.12695312]
[-284.74966431 643.42193604]
[-287.07318115 628.60052490]
[-288.74340820 613.69134521]
[-289.75717163 598.72320557]
[-290.11245728 583.72497559]
[-289.80865479 568.72564697]
[-288.84628296 553.75408936]
[-287.22723389 538.83929443]
[-284.95462036 524.00994873]
[-282.03283691 509.29479980]
[-278.46752930 494.72219849]
[-274.26556396 480.32022095]
[-269.43505859 466.11672974]
[-263.98535156 452.13912964]
[-257.92691040 438.41439819]
[-251.27149963 424.96902466]
[-244.03192139 411.82894897]
[-236.22216797 399.01956177]
[-227.85731506 386.56555176]
[-218.95349121 374.49099731]
[-209.52789307 362.81918335]
[-199.59872437 351.57266235]
[-189.18513489 340.77313232]
[-178.30723572 330.44140625]
[-166.98602295 320.59747314]
[-155.24336243 311.26031494]
[-143.10189819 302.44796753]
[-130.58506775 294.17739868]
[-117.71704865 286.46463013]
[-104.52266693 279.32452393]
[-91.02739716 272.77084351]
[-77.25728607 266.81628418]
[-63.23891068 261.47229004]
[-48.99934006 256.74920654]
[-34.56605148 252.65615845]
[-19.96691132 249.20101929]
[-5.23009586 246.39047241]
[9.61594772 244.22994995]
[24.54256248 242.72360229]
[39.52093506 241.87435913]
[54.52215576 241.68383789]
[69.51726532 242.15243530]
[84.47731781 243.27922058]
[86.25978851 228.38549805]
[88.04225159 213.49179077]
[89.82471466 198.59806824]
[91.60718536 183.70434570]
[92.50000000 168.73094177]
[92.50000000 153.73094177]
[84.76270294 141.00367737]
[92.50000000 127.20349884]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[84.76270294 73.99633026]
[92.50000000 61.26905823]
[92.50000000 46.26905823]
[92.50000000 31.26905632]
[92.50000000 16.26905632]
[92.38833618 1.26947200]
[92.16500854 -13.72886562]
[91.94168091 -28.72720337]
[91.71835327 -43.72554016]
[91.49502563 -58.72387695]
[77.09532166 -63.40653229]
[64.99778748 -72.51303864]
[56.51467514 -85.05558777]
[52.56616592 -99.67366028]
[53.58057022 -114.78159332]
[59.44784927 -128.74060059]
[69.53156281 -140.03649902]
[82.73790741 -147.44400024]
[97.63436127 -150.15960693]
[112.60505676 -147.88873291]
[126.02610016 -140.87771606]
[136.44166565 -129.88703918]
[142.72195435 -116.10892487]
[144.18572998 -101.03788757]
[140.67420959 -86.30873871]
[132.56829834 -73.51917267]
[120.74726105 -64.05651855]
[106.49336243 -58.94720459]
[106.71669006 -43.94886780]
[106.94001770 -28.95053101]
[107.16334534 -13.95219326]
[107.38667297 1.04614437]
[110.62940979 7.68741226]
[107.50000000 16.26905632]
[107.50000000 31.26905632]
[107.50000000 46.26905823]
[107.50000000 61.26905823]
[115.23729706 73.99633026]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[107.50000000 127.20349884]
[115.23729706 141.00367737]
[107.50000000 153.73094177]
[107.50000000 168.73094177]
[117.37503815 157.44007874]
[131.97468567 153.99763489]
[145.85362244 159.68754578]
[153.83535767 172.38761902]
[152.94288635 187.36103821]
[143.50910950 199.02310181]
[129.05256653 203.02413940]
[114.96518707 197.87185669]
[106.50090027 185.48681641]
[104.71843719 200.38053894]
[102.93596649 215.27424622]
[101.15350342 230.16796875]
[99.37104034 245.06169128]
[114.17449188 247.49696350]
[128.85668945 250.58012390]
[143.38929749 254.30522156]
[157.74424744 258.66506958]
[171.89384460 263.65121460]
[185.81077576 269.25405884]
[199.46817017 275.46279907]
[212.83967590 282.26544189]
[225.89947510 289.64883423]
[238.62236023 297.59875488]
[250.98376465 306.09985352]
[262.95983887 315.13571167]
[274.52743530 324.68887329]
[285.66427612 334.74093628]
[296.34884644 345.27246094]
[306.56051636 356.26312256]
[316.27957153 367.69171143]
[325.48724365 379.53619385]
[334.16577148 391.77368164]
[342.29840088 404.38055420]
[349.86941528 417.33248901]
[356.86422729 430.60446167]
[363.26934814 444.17086792]
[369.07238770 458.00552368]
[374.26211548 472.08172607]
[378.82858276 486.37228394]
[382.76293945 500.84963989]
[386.05758667 515.48583984]
[388.70614624 530.25262451]
[390.70355225 545.12152100]
[392.04592896 560.06378174]
[392.73068237 575.05053711]
[392.75646973 590.05297852]
[392.12329102 605.04199219]
[390.83233643 619.98883057]
[388.88607788 634.86444092]
[386.28829956 649.64025879]
[383.04403687 664.28771973]
[379.15951538 678.77850342]
[374.64224243 693.08471680]
[369.50091553 707.17864990]
[363.74551392 721.03320312]
[357.38711548 734.62158203]
[350.43798828 747.91754150]
[342.91156006 760.89538574]
[334.82232666 773.53021240]
[326.18594360 785.79742432]
[317.01907349 797.67352295]
[307.33938599 809.13549805]
[297.16561890 820.16125488]
[286.51733398 830.72943115]
[275.41513062 840.81976318]
[263.88043213 850.41265869]
[251.93553162 859.48962402]
[239.60343933 868.03320312]
[226.90797424 876.02685547]
[213.87365723 883.45513916]
[200.52563477 890.30371094]
[186.88967896 896.55938721]
[172.99209595 902.21008301]
[158.85974121 907.24487305]
[144.51986694 911.65405273]
[130.00015259 915.42913818]
[115.32865143 918.56274414]
[100.53366089 921.04895020]
[85.64374542 922.88287354]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[75 144]
[76 143]
[77 142]
[78 141]
[79 140]
[80 131]
[81 130]
[83 128]
[84 127]
[86 125]
[88 123]
[89 122]
[90 121]
[91 120]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
