%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[51.69861603 575.34167480]
[53.78462601 590.42706299]
[49.54828262 605.05487061]
[39.72355270 616.69079590]
[26.01263618 623.31884766]
[10.79102898 623.79058838]
[-3.30403233 618.02441406]
[-13.83049393 607.01922607]
[-18.96458054 592.68182373]
[-17.81678391 577.49621582]
[-10.58596516 564.09344482]
[1.47509301 554.79553223]
[16.27673912 551.21350098]
[18.94253540 536.45227051]
[21.60832977 521.69104004]
[24.27412605 506.92984009]
[26.93992043 492.16860962]
[21.58767700 478.26885986]
[31.65437126 466.06344604]
[34.32016754 451.30224609]
[28.96792221 437.40249634]
[39.03461456 425.19708252]
[23.59805298 419.13693237]
[9.73055267 410.03329468]
[-1.97568464 398.27239990]
[-11.02023697 384.35400391]
[-17.01584816 368.87014771]
[-19.70501137 352.48001099]
[-18.97102165 335.88180542]
[-14.84305191 319.78305054]
[-7.49498510 304.87039185]
[2.76189899 291.78033447]
[15.49211407 281.07211304]
[30.15445709 273.20373535]
[46.12501526 268.51239014]
[62.72371292 267.20007324]
[64.50617981 252.30635071]
[66.28864288 237.41262817]
[68.07111359 222.51892090]
[69.85357666 207.62519836]
[71.63603973 192.73147583]
[65.46595764 179.17495728]
[74.78833008 166.39199829]
[76.57079315 151.49827576]
[67.47006226 163.42205811]
[54.53781128 171.02186584]
[39.69246674 173.17028809]
[25.13624382 169.54862976]
[13.02847385 160.69413757]
[5.16527224 147.92033386]
[2.71309829 133.12213135]
[6.03571653 118.49475098]
[14.64023685 106.20808411]
[27.25023079 98.08477783]
[41.99507904 95.32988739]
[56.68746948 98.35206604]
[69.14788055 106.70301056]
[77.52787781 119.14389801]
[80.58431244 133.82728577]
[85.41030884 119.62483215]
[90.23631287 105.42237854]
[94.95644379 91.18438721]
[99.57044983 76.91165161]
[104.18446350 62.63891983]
[108.79846954 48.36618805]
[98.89714813 38.48556519]
[94.24114227 25.36544037]
[95.68534088 11.58528996]
[102.89121246 -0.17160170]
[114.40390778 -7.64063692]
[127.94567108 -9.41203785]
[132.77166748 -23.61449242]
[137.59767151 -37.81694794]
[142.42366028 -52.01940536]
[147.24966431 -66.22186279]
[152.07565308 -80.42431641]
[156.90165710 -94.62677002]
[161.40928650 -108.93345642]
[165.59629822 -123.33724213]
[169.78330994 -137.74102783]
[166.20564270 -153.15240479]
[177.18801880 -163.21405029]
[181.37503052 -177.61784363]
[185.45469666 -192.05239868]
[189.42678833 -206.51692200]
[193.39889526 -220.98144531]
[197.37098694 -235.44596863]
[189.81347656 -249.06660461]
[194.04780579 -263.67910767]
[207.07957458 -270.80010986]
[211.05166626 -285.26461792]
[215.02375793 -299.72915649]
[218.99586487 -314.19366455]
[221.33134460 -329.01074219]
[222.00112915 -343.99578857]
[222.67091370 -358.98080444]
[208.32687378 -363.68731689]
[195.78520203 -372.09020996]
[185.97654724 -383.56597900]
[179.62879944 -397.26300049]
[177.21299744 -412.16491699]
[178.90840149 -427.16583252]
[184.58921814 -441.15264893]
[193.83387756 -453.08743286]
[205.95637512 -462.08453369]
[220.05712891 -467.47628784]
[235.08978271 -468.86264038]
[249.93881226 -466.14068604]
[263.50231934 -459.51239014]
[274.77377319 -449.46966553]
[282.91680908 -436.75772095]
[287.32711792 -422.31985474]
[287.67745972 -407.22747803]
[283.94180298 -392.60052490]
[276.39736938 -379.52444458]
[265.60403442 -368.96954346]
[252.36268616 -361.71905518]
[237.65596008 -358.31103516]
[236.98617554 -343.32598877]
[236.31639099 -328.34094238]
[244.31396484 -341.03103638]
[256.31210327 -350.03353882]
[270.73217773 -354.16403198]
[285.67706299 -352.87902832]
[299.18041992 -346.34765625]
[309.46569824 -335.42916870]
[315.17968750 -321.56011963]
[315.57058716 -306.56521606]
[310.58700562 -292.41729736]
[300.88458252 -280.97775269]
[287.73986816 -273.75164795]
[272.88226318 -271.68972778]
[258.26654053 -275.06323242]
[245.81565857 -283.42837524]
[237.16772461 -295.68450928]
[233.46038818 -310.22155762]
[229.48828125 -295.75704956]
[225.51618958 -281.29251099]
[221.54409790 -266.82800293]
[229.11148071 -254.05027771]
[225.28927612 -239.32461548]
[211.83551025 -231.47386169]
[207.86341858 -217.00933838]
[203.89131165 -202.54481506]
[199.91921997 -188.08029175]
[201.17926025 -180.79785156]
[195.77880859 -173.43083191]
[191.59179688 -159.02703857]
[195.46894836 -144.64590454]
[184.18708801 -133.55401611]
[180.00007629 -119.15023041]
[175.81306458 -104.74644470]
[177.18168640 -101.49695587]
[177.04438782 -97.42311096]
[175.03085327 -93.23992920]
[171.10411072 -89.80077362]
[166.27810669 -75.59832001]
[161.45211792 -61.39586258]
[156.62611389 -47.19340515]
[151.80012512 -32.99095154]
[146.97412109 -18.78849602]
[142.14813232 -4.58604002]
[153.09259033 7.30223703]
[156.56834412 23.17910576]
[151.53422546 38.73142242]
[139.27413940 49.68521881]
[123.07120514 52.98019409]
[118.45719910 67.25292969]
[113.84318542 81.52566528]
[109.22917938 95.79839325]
[109.94331360 103.82725525]
[104.43876648 110.24837494]
[99.61277008 124.45082855]
[94.78677368 138.65328979]
[91.46450806 153.28074646]
[89.68204498 168.17446899]
[95.72463226 182.79627991]
[86.52976227 194.51394653]
[84.74729156 209.40766907]
[82.96482849 224.30137634]
[81.18236542 239.19509888]
[79.39989471 254.08882141]
[77.61743164 268.98254395]
[90.51706696 272.93606567]
[102.57430267 278.98309326]
[113.45223236 286.95343018]
[122.84712219 296.62316895]
[130.49685669 307.72103882]
[136.18826294 319.93582153]
[139.76307678 332.92529297]
[141.12229919 346.32568359]
[140.22898865 359.76193237]
[137.10922241 372.85812378]
[131.85133362 385.24804688]
[124.60345459 396.58544922]
[115.56931305 406.55368042]
[105.00250244 414.87451172]
[93.19936371 421.31594849]
[80.49069214 425.69873047]
[67.23246002 427.90121460]
[53.79583359 427.86288452]
[58.95740128 442.81842041]
[49.08138275 453.96801758]
[46.41558838 468.72924805]
[51.57715607 483.68481445]
[41.70113754 494.83441162]
[39.03534317 509.59561157]
[36.36954880 524.35681152]
[33.70375061 539.11804199]
[31.03795624 553.87927246]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 210]
[14 209]
[15 208]
[16 207]
[17 206]
[19 204]
[20 203]
[22 201]
[36 183]
[37 182]
[38 181]
[39 180]
[40 179]
[41 178]
[43 176]
[44 175]
[59 174]
[60 173]
[61 172]
[62 170]
[63 169]
[64 168]
[65 167]
[71 162]
[72 161]
[73 160]
[74 159]
[75 158]
[76 157]
[77 156]
[78 152]
[79 151]
[80 150]
[82 148]
[83 147]
[84 145]
[85 144]
[86 143]
[87 142]
[90 139]
[91 138]
[92 137]
[93 136]
[94 120]
[95 119]
[96 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
