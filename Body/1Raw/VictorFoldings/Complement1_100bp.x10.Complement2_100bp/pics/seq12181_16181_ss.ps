%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUGxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[153.30406189 763.09924316]
[139.40885925 757.43865967]
[125.85291290 751.00781250]
[112.67887878 743.82702637]
[99.92819977 735.91888428]
[87.64099121 727.30822754]
[75.85592651 718.02215576]
[64.61006927 708.08984375]
[53.93881607 697.54266357]
[43.87573624 686.41369629]
[34.45249176 674.73803711]
[25.69873810 662.55236816]
[17.64201355 649.89501953]
[10.30766678 636.80584717]
[3.71877670 623.32604980]
[-2.10392690 609.49798584]
[-7.14212275 595.36517334]
[-11.37995911 580.97216797]
[-14.80410290 566.36413574]
[-17.40377808 551.58709717]
[-19.17080879 536.68756104]
[-20.09963036 521.71234131]
[-20.18732643 506.70861816]
[-19.43361473 491.72360229]
[-17.84087181 476.80441284]
[-15.41410542 461.99801636]
[-12.16095352 447.35095215]
[-8.09165096 432.90936279]
[-3.21900105 418.71862793]
[2.44166470 404.82345581]
[8.87253571 391.26754761]
[16.05337715 378.09353638]
[23.96159744 365.34289551]
[32.57231140 353.05572510]
[41.85842896 341.27069092]
[51.79073334 330.02487183]
[62.33797073 319.35363770]
[73.46695709 309.29061890]
[85.14266968 299.86740112]
[97.32838440 291.11370850]
[109.98575592 283.05700684]
[123.07495117 275.72271729]
[136.55479431 269.13388062]
[150.38287354 263.31121826]
[145.34596252 249.18220520]
[140.30903625 235.05316162]
[135.27212524 220.92413330]
[121.31056213 210.29203796]
[124.77865601 192.20741272]
[119.53193665 178.15493774]
[114.28522491 164.10246277]
[110.38922882 161.34016418]
[108.18714142 156.10110474]
[109.09832001 149.55271912]
[104.27232361 135.35026550]
[99.44632721 121.14780426]
[94.62033081 106.94535065]
[92.01038361 105.37128448]
[89.91548920 102.81277466]
[88.70137787 99.45877075]
[88.65884399 95.63065338]
[89.95726013 91.75160217]
[85.98516846 77.28707886]
[82.01306915 62.82255554]
[77.58528900 57.91273499]
[76.46926880 52.34034729]
[78.14492035 47.86807251]
[74.60524750 33.29169464]
[70.32561493 28.25222206]
[69.37599945 22.64907646]
[71.18405914 18.22867203]
[68.07994843 3.55337048]
[64.97583771 -11.12193203]
[61.87172699 -25.79723358]
[58.76761627 -40.47253799]
[55.66350555 -55.14783859]
[40.67861557 -54.06766891]
[25.68621445 -55.03807449]
[10.96560478 -58.04097366]
[-3.20897770 -63.02042770]
[-16.57346916 -69.88366699]
[-28.87889862 -78.50284576]
[-39.89602280 -88.71737671]
[-49.41959763 -100.33699036]
[-57.27220917 -113.14519501]
[-63.30756378 -126.90340424]
[-67.41322327 -141.35530090]
[-69.51271057 -156.23165894]
[-69.56690979 -171.25532532]
[-67.57480621 -186.14643860]
[-63.57352066 -200.62759399]
[-57.63758850 -214.42898560]
[-49.87759399 -227.29351807]
[-40.43810272 -238.98153687]
[-29.49496078 -249.27528381]
[-17.25203896 -257.98303223]
[-3.93741274 -264.94250488]
[10.20087528 -270.02410889]
[24.89943504 -273.13311768]
[39.88444519 -274.21166992]
[54.87673950 -273.23965454]
[69.59702301 -270.23516846]
[83.77106476 -265.25418091]
[97.13481903 -258.38949585]
[109.43931580 -249.76898193]
[120.45532990 -239.55325317]
[129.97764587 -227.93260193]
[137.82887268 -215.12355042]
[143.86273193 -201.36468506]
[147.96684265 -186.91235352]
[150.06471252 -172.03576660]
[150.11727905 -157.01208496]
[148.12356567 -142.12118530]
[144.12071228 -127.64048004]
[138.18328857 -113.83972931]
[130.42190552 -100.97603607]
[120.98114777 -89.28903961]
[110.03688812 -78.99646759]
[97.79302979 -70.29006195]
[84.47764587 -63.33201218]
[70.33880615 -58.25194931]
[73.44291687 -43.57664871]
[76.54702759 -28.90134430]
[79.65113831 -14.22604179]
[82.75524902 0.44926026]
[85.85935974 15.12456226]
[89.18161774 29.75202370]
[92.72129059 44.32839966]
[96.47759247 58.85045624]
[100.44969177 73.31497955]
[104.42178345 87.77950287]
[108.82278442 102.11935425]
[113.64878082 116.32180786]
[118.47477722 130.52426147]
[123.30077362 144.72671509]
[128.33769226 158.85574341]
[133.58441162 172.90821838]
[138.83113098 186.96069336]
[150.22006226 193.01501465]
[154.30076599 204.82737732]
[149.40115356 215.88722229]
[154.43807983 230.01625061]
[159.47499084 244.14527893]
[164.51190186 258.27432251]
[178.90490723 254.03631592]
[193.51289368 250.61201477]
[208.28988647 248.01216125]
[223.18942261 246.24497986]
[238.16461182 245.31597900]
[253.16831970 245.22811890]
[268.15335083 245.98165894]
[283.07254028 247.57424927]
[297.87899780 250.00083923]
[312.52609253 253.25382996]
[326.96771240 257.32296753]
[341.15847778 262.19546509]
[355.05374146 267.85598755]
[368.60971069 274.28671265]
[381.78381348 281.46740723]
[394.53454590 289.37545776]
[406.82180786 297.98605347]
[418.60696411 307.27203369]
[429.85287476 317.20422363]
[440.52423096 327.75134277]
[450.58737183 338.88021851]
[460.01071167 350.55581665]
[468.76455688 362.74142456]
[476.82138062 375.39871216]
[484.15582275 388.48782349]
[490.74481201 401.96759033]
[496.56762695 415.79562378]
[501.60592651 429.92837524]
[505.84387207 444.32138062]
[509.26809692 458.92938232]
[511.86788940 473.70639038]
[513.63500977 488.60592651]
[514.56396484 503.58111572]
[514.65179443 518.58483887]
[513.89819336 533.56982422]
[512.30554199 548.48907471]
[509.87887573 563.29547119]
[506.62585449 577.94256592]
[502.55664062 592.38421631]
[497.68411255 606.57495117]
[492.02352905 620.47015381]
[485.59277344 634.02612305]
[478.41201782 647.20019531]
[470.50390625 659.95086670]
[461.89328003 672.23815918]
[452.60723877 684.02325439]
[442.67501831 695.26910400]
[432.12786865 705.94042969]
[420.99896240 716.00354004]
[409.32330322 725.42681885]
[397.13766479 734.18060303]
[384.48034668 742.23742676]
[371.39120483 749.57177734]
[357.91140747 756.16070557]
[344.08337402 761.98345947]
[329.95062256 767.02172852]
[315.55758667 771.25964355]
[300.94958496 774.68383789]
[286.17254639 777.28356934]
[271.27301025 779.05065918]
[256.29782104 779.97949219]
[241.29411316 780.06726074]
[226.30908203 779.31359863]
[211.38987732 777.72094727]
[196.58346558 775.29418945]
[181.93640137 772.04113770]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 144]
[45 143]
[46 142]
[47 141]
[49 138]
[50 137]
[51 136]
[54 135]
[55 134]
[56 133]
[57 132]
[62 131]
[63 130]
[64 129]
[67 128]
[68 127]
[71 126]
[72 125]
[73 124]
[74 123]
[75 122]
[76 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
