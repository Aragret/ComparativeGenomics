%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCGxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[40.47028732 444.68881226]
[44.29835510 459.37588501]
[42.55845642 474.45358276]
[35.48588943 487.88278198]
[24.03716660 497.84729004]
[9.76063061 502.99945068]
[-5.41293335 502.64251709]
[-19.43142509 496.82476807]
[-30.39896011 486.33297729]
[-36.83226776 472.58609009]
[-37.86129379 457.44326782]
[-33.34687805 442.95242310]
[-23.89955139 431.07333374]
[-10.79698944 423.41256714]
[4.18879318 421.00616455]
[7.29290295 406.33087158]
[10.39701366 391.65557861]
[13.50112343 376.98025513]
[16.60523415 362.30496216]
[5.44107151 372.32302856]
[-9.21570110 375.51348877]
[-23.53383827 371.04235840]
[-33.77061462 360.07839966]
[-37.25016022 345.48754883]
[-33.06293106 331.08383179]
[-22.30345917 320.63235474]
[-7.78424406 316.86505127]
[6.69942713 320.76675415]
[17.36155701 331.31753540]
[21.41507530 345.75857544]
[26.66179466 331.70611572]
[31.90851212 317.65362549]
[37.15523148 303.60116577]
[42.40194702 289.54867554]
[39.60516357 274.91900635]
[51.68075180 264.69696045]
[56.29475784 250.42420959]
[60.26685715 235.95968628]
[64.23895264 221.49516296]
[68.21104431 207.03063965]
[64.12022400 192.70883179]
[75.23568726 181.45018005]
[79.20777893 166.98565674]
[83.17987823 152.52113342]
[79.08905029 138.19932556]
[90.20451355 126.94068146]
[92.31913757 112.09048462]
[85.67764282 99.78673553]
[92.68252563 87.68618774]
[83.34307861 71.81620789]
[92.92377472 57.11323929]
[92.92377472 42.11323929]
[92.92377472 27.11323929]
[92.92377472 12.11323929]
[85.18647766 -1.68693292]
[92.92377472 -14.41420460]
[92.92377472 -29.41420555]
[82.02922058 -40.54732895]
[82.24290466 -55.75946426]
[92.92377472 -66.07714081]
[92.92377472 -81.07714081]
[92.92377472 -96.07714081]
[92.92377472 -111.07714081]
[91.91951752 -126.04348755]
[89.91550446 -140.90901184]
[75.05354309 -143.66213989]
[61.78816986 -150.86437988]
[51.41249847 -161.79936218]
[44.93351746 -175.38751221]
[42.97438049 -190.29269409]
[45.71446991 -205.05355835]
[52.87307358 -218.22680664]
[63.73806381 -228.52836609]
[77.23674011 -234.95849609]
[67.72509003 -247.60124207]
[73.69264984 -261.24813843]
[71.68863678 -276.11364746]
[69.68462372 -290.97918701]
[59.75257111 -279.73843384]
[44.79027939 -278.67547607]
[33.36883545 -288.39916992]
[32.03096008 -303.33938599]
[41.54304886 -314.93768311]
[56.45614243 -316.55001831]
[68.22688293 -307.25360107]
[67.55709839 -322.23864746]
[66.88731384 -337.22366333]
[66.21752167 -352.20870972]
[65.54773712 -367.19375610]
[64.87795258 -382.17880249]
[64.20816803 -397.16381836]
[63.53838348 -412.14886475]
[62.86859894 -427.13391113]
[62.19881439 -442.11895752]
[47.56592560 -445.90972900]
[34.70135880 -453.84661865]
[24.74902153 -465.22387695]
[18.59387207 -479.02987671]
[16.78321838 -494.03698730]
[19.47806549 -508.91076660]
[26.43878746 -522.32867432]
[37.04644394 -533.09753418]
[50.35780716 -540.25988770]
[65.18923950 -543.17877197]
[80.22193909 -541.59472656]
[94.11921692 -535.64849854]
[105.64532471 -525.86895752]
[113.77537537 -513.12554932]
[117.78644562 -498.55151367]
[117.32188416 -483.44271851]
[112.42298889 -469.14263916]
[103.52536774 -456.92285156]
[91.42019653 -447.86987305]
[77.18385315 -442.78872681]
[77.85363770 -427.80368042]
[78.52342224 -412.81866455]
[79.19320679 -397.83361816]
[79.86299133 -382.84857178]
[80.53277588 -367.86352539]
[81.20256042 -352.87850952]
[81.87235260 -337.89346313]
[82.54213715 -322.90841675]
[83.21192169 -307.92337036]
[84.55015564 -292.98318481]
[86.55416870 -278.11767578]
[88.55818176 -263.25213623]
[97.92649078 -251.67266846]
[92.10227203 -236.96250916]
[106.82180786 -234.33645630]
[120.02685547 -227.27976990]
[130.41827393 -216.47242737]
[136.96931458 -202.96409607]
[139.02709961 -188.07221985]
[136.37763977 -173.25346375]
[129.26802063 -159.96130371]
[118.38339233 -149.50341797]
[104.78102875 -142.91302490]
[106.78504181 -128.04750061]
[114.44726562 -140.94287109]
[127.81696320 -147.74368286]
[142.75138855 -146.34266663]
[154.62295532 -137.17390442]
[159.75311279 -123.07846832]
[156.55224609 -108.42396545]
[146.01216125 -97.75125885]
[131.39883423 -94.36740112]
[117.24034882 -99.32091522]
[107.92377472 -111.07714081]
[107.92377472 -96.07714081]
[107.92377472 -81.07714081]
[107.92377472 -66.07714081]
[118.60464478 -55.75946426]
[118.81832886 -40.54732895]
[107.92377472 -29.41420555]
[107.92377472 -14.41420460]
[115.66107941 -1.68693292]
[107.92377472 12.11323929]
[107.92377472 27.11323929]
[107.92377472 42.11323929]
[107.92377472 57.11323929]
[116.25273132 65.88564301]
[116.37549591 78.38238525]
[107.68086243 87.90951538]
[114.32235718 100.21326447]
[107.31747437 112.31381226]
[114.63306427 99.21868896]
[125.76018524 89.15950775]
[139.52458191 83.19784546]
[154.47364807 81.96283722]
[169.02978516 85.58482361]
[181.65686035 93.68156433]
[191.02227783 105.39859772]
[196.13771057 119.49939728]
[196.46328735 134.49586487]
[191.96467590 148.80538940]
[183.11662292 160.91784668]
[170.85285950 169.55499268]
[156.46763611 173.80532837]
[141.47904968 173.22030640]
[127.46888733 167.86164856]
[115.91566467 158.29487610]
[108.03862000 145.52960205]
[104.66903687 130.91278076]
[108.47575378 146.26919556]
[97.64440155 156.49324036]
[93.67230225 170.95776367]
[89.70021057 185.42228699]
[93.50692749 200.77870178]
[82.67557526 211.00273132]
[78.70347595 225.46725464]
[74.73137665 239.93179321]
[70.75928497 254.39631653]
[84.29763794 247.93775940]
[98.48301697 252.81373596]
[105.18938446 266.23104858]
[100.57502747 280.50369263]
[87.28327179 287.45559692]
[72.92822266 283.10443115]
[65.73322296 269.94366455]
[68.15472412 285.57846069]
[56.45441818 294.79541016]
[51.20770264 308.84786987]
[45.96098328 322.90036011]
[40.71426392 336.95281982]
[35.46754837 351.00527954]
[31.28053665 365.40908813]
[28.17642593 380.08438110]
[25.07231522 394.75967407]
[21.96820641 409.43499756]
[18.86409569 424.11029053]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 210]
[16 209]
[17 208]
[18 207]
[19 206]
[30 205]
[31 204]
[32 203]
[33 202]
[34 201]
[36 199]
[37 192]
[38 191]
[39 190]
[40 189]
[42 187]
[43 186]
[44 185]
[46 183]
[47 165]
[49 163]
[51 160]
[52 159]
[53 158]
[54 157]
[56 155]
[57 154]
[60 151]
[61 150]
[62 149]
[63 148]
[64 138]
[65 137]
[74 128]
[76 126]
[77 125]
[78 124]
[85 123]
[86 122]
[87 121]
[88 120]
[89 119]
[90 118]
[91 117]
[92 116]
[93 115]
[94 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
