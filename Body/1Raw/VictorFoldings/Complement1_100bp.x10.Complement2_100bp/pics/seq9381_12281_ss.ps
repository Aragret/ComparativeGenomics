%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[149.96499634 818.06689453]
[135.51275635 814.03680420]
[121.29768372 809.23675537]
[107.36074829 803.68060303]
[93.74214172 797.38433838]
[80.48113251 790.36621094]
[67.61594391 782.64636230]
[55.18368912 774.24707031]
[43.22019577 765.19256592]
[31.75996971 755.50897217]
[20.83604813 745.22412109]
[10.47992897 734.36779785]
[0.72147185 722.97125244]
[-8.41118717 711.06732178]
[-16.89171600 698.69036865]
[-24.69566154 685.87597656]
[-31.80052567 672.66125488]
[-38.18582153 659.08416748]
[-43.83313751 645.18389893]
[-48.72619629 631.00061035]
[-52.85087967 616.57507324]
[-56.19530487 601.94891357]
[-58.74982452 587.16436768]
[-60.50707626 572.26397705]
[-61.46199036 557.29077148]
[-61.61181259 542.28784180]
[-60.95611191 527.29858398]
[-59.49678421 512.36608887]
[-57.23802948 497.53344727]
[-54.18636322 482.84341431]
[-50.35058594 468.33840942]
[-45.74175262 454.06018066]
[-40.37315750 440.04992676]
[-34.26027679 426.34802246]
[-27.42073822 412.99401855]
[-19.87425613 400.02636719]
[-11.64259529 387.48251343]
[-2.74948573 375.39855957]
[6.77942944 363.80938721]
[16.91667557 352.74841309]
[27.63302612 342.24749756]
[38.89757919 332.33697510]
[50.67786026 323.04534912]
[62.93990326 314.39947510]
[75.64835358 306.42422485]
[88.76656342 299.14263916]
[102.25671387 292.57568359]
[116.07991028 286.74230957]
[130.19628906 281.65933228]
[144.56517029 277.34140015]
[141.02549744 262.76501465]
[137.48582458 248.18864441]
[133.94615173 233.61225891]
[130.40647888 219.03588867]
[126.86680603 204.45951843]
[122.67979431 190.05574036]
[117.85379791 175.85327148]
[113.02780151 161.65081787]
[108.20179749 147.44836426]
[103.37580109 133.24591064]
[98.54980469 119.04345703]
[85.59929657 112.54496002]
[80.93753052 98.82583618]
[87.24774170 85.78253937]
[82.42174530 71.58008575]
[66.17154694 68.52671051]
[53.74972916 57.75666428]
[48.48461533 42.28102112]
[51.72360611 26.35416412]
[62.48986053 14.30425835]
[57.45294571 0.17522874]
[52.41602707 -13.95380116]
[47.37911224 -28.08283043]
[42.34219360 -42.21186066]
[27.58083344 -39.38296890]
[12.56063557 -38.84065628]
[-2.36630225 -40.59763336]
[-16.85007095 -44.61271667]
[-30.55115128 -50.79178238]
[-43.14836884 -58.98998260]
[-54.34642792 -69.01514435]
[-63.88283157 -80.63227081]
[-71.53402710 -93.56902313]
[-77.12066650 -107.52215576]
[-80.51178741 -122.16458130]
[-81.62789154 -137.15307617]
[-80.44283295 -152.13626099]
[-76.98436737 -166.76293945]
[-71.33358765 -180.69021606]
[-63.62294388 -193.59162903]
[-54.03319168 -205.16473389]
[-42.78911972 -215.13827515]
[-30.15431213 -223.27842712]
[-16.42494583 -229.39437866]
[-1.92285502 -233.34277344]
[13.01200867 -235.03105164]
[28.02955246 -234.41963196]
[42.77774048 -231.52284241]
[56.91085815 -226.40859985]
[70.09760284 -219.19679260]
[82.02885437 -210.05647278]
[92.42493439 -199.20188904]
[101.04214478 -186.88749695]
[107.67847443 -173.40196228]
[112.17836761 -159.06141663]
[114.43634033 -144.20201111]
[114.39945984 -129.17207336]
[112.06858826 -114.32392120]
[107.49837494 -100.00562286]
[100.79593658 -86.55282593]
[92.11840057 -74.28087616]
[81.66917419 -63.47744751]
[69.69320679 -54.39578247]
[56.47122574 -47.24877548]
[61.50814056 -33.11974716]
[66.54505920 -18.99071693]
[71.58197021 -4.86168766]
[76.61888885 9.26734161]
[90.18552399 10.83692932]
[101.80814362 18.13372993]
[109.18826294 29.78203392]
[110.83747101 43.53915405]
[106.37731171 56.72714615]
[96.62419891 66.75408936]
[101.45019531 80.95654297]
[114.40070343 87.45503998]
[119.06246948 101.17416382]
[112.75225830 114.21746063]
[117.57825470 128.41990662]
[122.40425873 142.62237549]
[127.23025513 156.82482910]
[132.05624390 171.02728271]
[136.88224792 185.22973633]
[144.46665955 172.28845215]
[158.94508362 168.36730957]
[172.02360535 175.71252441]
[176.21028137 190.11640930]
[169.10676575 203.32775879]
[154.78228760 207.77853394]
[141.44317627 200.91984558]
[144.98284912 215.49621582]
[148.52252197 230.07260132]
[152.06219482 244.64897156]
[155.60186768 259.22534180]
[159.14154053 273.80172729]
[173.89045715 271.04879761]
[188.76586914 269.09152222]
[203.72491455 267.93551636]
[218.72442627 267.58416748]
[233.72119141 268.03842163]
[248.67193604 269.29699707]
[263.53356934 271.35626221]
[278.26327515 274.21029663]
[292.81851196 277.85086060]
[307.15737915 282.26745605]
[321.23849487 287.44732666]
[335.02127075 293.37557983]
[348.46597290 300.03509521]
[361.53381348 307.40667725]
[374.18716431 315.46905518]
[386.38949585 324.19900513]
[398.10562134 333.57138062]
[409.30181885 343.55908203]
[419.94573975 354.13339233]
[430.00671387 365.26379395]
[439.45574951 376.91818237]
[448.26562500 389.06295776]
[456.41085815 401.66311646]
[463.86804199 414.68231201]
[470.61563110 428.08300781]
[476.63421631 441.82659912]
[481.90640259 455.87341309]
[486.41699219 470.18298340]
[490.15298462 484.71401978]
[493.10360718 499.42465210]
[495.26037598 514.27246094]
[496.61703491 529.21466064]
[497.16970825 544.20806885]
[496.91677856 559.20959473]
[495.85897827 574.17590332]
[493.99935913 589.06384277]
[491.34329224 603.83050537]
[487.89840698 618.43328857]
[483.67468262 632.83013916]
[478.68426514 646.97955322]
[472.94152832 660.84063721]
[466.46307373 674.37347412]
[459.26757812 687.53912354]
[451.37573242 700.29949951]
[442.81033325 712.61791992]
[433.59606934 724.45880127]
[423.75952148 735.78802490]
[413.32904053 746.57293701]
[402.33468628 756.78240967]
[390.80816650 766.38702393]
[378.78274536 775.35906982]
[366.29306030 783.67272949]
[353.37512207 791.30395508]
[340.06619263 798.23083496]
[326.40463257 804.43328857]
[312.42984009 809.89355469]
[298.18209839 814.59582520]
[283.70251465 818.52648926]
[269.03280640 821.67431641]
[254.21527100 824.03015137]
[239.29264832 825.58728027]
[224.30796814 826.34112549]
[209.30442810 826.28955078]
[194.32527161 825.43273926]
[179.41371155 823.77313232]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 145]
[51 144]
[52 143]
[53 142]
[54 141]
[55 140]
[56 133]
[57 132]
[58 131]
[59 130]
[60 129]
[61 128]
[64 125]
[65 124]
[70 118]
[71 117]
[72 116]
[73 115]
[74 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
