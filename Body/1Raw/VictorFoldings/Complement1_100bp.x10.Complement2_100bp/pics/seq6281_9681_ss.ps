%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[102.35659790 576.79675293]
[87.56521606 574.10137939]
[73.41925812 569.00811768]
[60.30464172 561.65576172]
[48.57913589 552.24499512]
[38.56262589 541.03253174]
[30.52836800 528.32427979]
[24.69554329 514.46685791]
[21.22327423 499.83834839]
[20.20628738 484.83779907]
[21.67232704 469.87451172]
[25.58139992 455.35662842]
[31.82686043 441.68020630]
[40.23833084 429.21838379]
[50.58633804 418.31112671]
[62.58858490 409.25595093]
[75.91763306 402.29992676]
[90.20986176 397.63281250]
[105.07537079 395.38192749]
[97.52841949 382.54086304]
[105.47032928 368.85742188]
[105.69365692 353.85906982]
[105.91698456 338.86074829]
[106.14031219 323.86239624]
[106.36363983 308.86407471]
[106.47530365 293.86447144]
[106.47530365 278.86447144]
[106.47530365 263.86447144]
[105.80551910 248.87944031]
[104.46728516 233.93925476]
[103.12905121 218.99908447]
[101.79081726 204.05889893]
[100.45258331 189.11871338]
[91.61066437 177.13247681]
[98.08592224 162.69705200]
[86.52714539 153.37341309]
[84.95715332 138.24099731]
[94.81501770 126.18030548]
[93.47678375 111.24011993]
[91.69431305 96.34640503]
[89.46920013 81.51235962]
[87.24407959 66.67831421]
[85.01896667 51.84427261]
[68.02709198 48.73534393]
[53.14472198 40.01453018]
[42.15855789 26.74836922]
[36.38084030 10.54789162]
[36.49262238 -6.62699986]
[42.46354675 -22.70463943]
[53.55752563 -35.75149155]
[68.42346191 -44.20467377]
[65.53818512 -58.92456436]
[62.65291595 -73.64445496]
[59.76764297 -88.36434937]
[56.88237000 -103.08423615]
[53.91382980 -106.25310516]
[52.27309036 -109.84093475]
[51.92882156 -113.37885284]
[52.70062637 -116.45634460]
[54.29100418 -118.76477051]
[52.28699112 -133.63029480]
[38.04161072 -134.30934143]
[24.13760376 -137.46662903]
[11.00262070 -143.00379944]
[-0.95956749 -150.74925232]
[-11.38147640 -160.46356201]
[-19.94320107 -171.84683228]
[-26.38223457 -184.54797363]
[-30.50151634 -198.17550659]
[-32.17546082 -212.30966187]
[-31.35379791 -226.51528931]
[-28.06305695 -240.35522461]
[-22.40573692 -253.40380859]
[-14.55710125 -265.25994873]
[-4.75975275 -275.55944824]
[6.68386841 -283.98617554]
[19.42081642 -290.28173828]
[33.05853271 -294.25357056]
[31.49800873 -309.17218018]
[29.93748665 -324.09078979]
[28.37696266 -339.00936890]
[26.81644058 -353.92797852]
[22.81122208 -362.13748169]
[25.34543991 -369.08007812]
[24.00720596 -384.02026367]
[20.12466049 -392.28851318]
[22.76196289 -399.19259644]
[21.64631462 -414.15103149]
[6.71653795 -416.07110596]
[-7.52100468 -420.95755005]
[-20.48329544 -428.61026001]
[-31.63953781 -438.71585083]
[-40.53289032 -450.86053467]
[-46.79917145 -464.54696655]
[-50.18178940 -479.21472168]
[-50.54222107 -494.26312256]
[-47.86570740 -509.07601929]
[-42.26185226 -523.04675293]
[-33.96013260 -535.60327148]
[-23.30049324 -546.23138428]
[-10.71944332 -554.49591064]
[3.26783347 -560.05834961]
[18.08856583 -562.69097900]
[33.13585281 -562.28601074]
[47.79352188 -558.85998535]
[61.46134186 -552.55322266]
[73.57963562 -543.62396240]
[83.65216064 -532.43780518]
[91.26644897 -519.45294189]
[96.11070251 -505.20098877]
[97.98656464 -490.26556396]
[96.81719971 -475.25833130]
[92.65050507 -460.79376221]
[85.65710449 -447.46420288]
[76.12336731 -435.81549072]
[64.43970490 -426.32461548]
[51.08453751 -419.38021851]
[36.60476685 -415.26669312]
[37.72041702 -400.30822754]
[38.94739151 -385.35848999]
[40.28562546 -370.41830444]
[41.73504639 -355.48849487]
[43.29556656 -340.56991577]
[44.85609055 -325.65130615]
[46.41661453 -310.73269653]
[47.97713852 -295.81408691]
[63.69334793 -294.48052979]
[78.85714722 -290.12405396]
[92.89262390 -282.90829468]
[105.26635742 -273.10549927]
[115.50771332 -261.08633423]
[123.22673035 -247.30570984]
[128.12895203 -232.28576660]
[130.02670288 -216.59591675]
[128.84623718 -200.83134460]
[124.63060760 -185.59042358]
[117.53810120 -171.45195007]
[107.83629608 -158.95326233]
[95.89199066 -148.56968689]
[82.15728760 -140.69662476]
[67.15251923 -135.63430786]
[69.15653229 -120.76878357]
[71.60226440 -105.96951294]
[74.48753357 -91.24961853]
[77.37281036 -76.52973175]
[80.25807953 -61.80983734]
[83.14334869 -47.08994675]
[95.95640564 -45.97905731]
[108.05714417 -41.58270645]
[118.61727142 -34.19438934]
[126.91201782 -24.31264687]
[132.36988831 -12.60744381]
[134.61203003 0.12525971]
[133.47851562 13.01763153]
[129.03974915 25.18911743]
[121.59213257 35.80658340]
[111.63825226 44.14133835]
[99.85300446 49.61915588]
[102.07812500 64.45320129]
[104.30324554 79.28723907]
[106.52835846 94.12128448]
[108.81701660 96.13413239]
[110.42386627 99.02421570]
[111.02257538 102.54060364]
[110.38410187 106.31533813]
[108.41696930 109.90188599]
[109.75520325 124.84207153]
[121.59955597 134.95883179]
[122.74388885 150.12937927]
[113.02610779 161.35881042]
[121.96374512 174.41366577]
[115.39276886 187.78047180]
[116.73100281 202.72065735]
[118.06923676 217.66084290]
[119.40747070 232.60102844]
[120.74570465 247.54121399]
[131.16978455 236.75517273]
[146.16461182 236.36135864]
[157.14047241 246.58537292]
[157.80990601 261.57043457]
[147.78941345 272.73239136]
[132.81919861 273.67721558]
[121.47530365 263.86447144]
[121.47530365 278.86447144]
[121.47530365 293.86447144]
[124.60471344 302.44613647]
[121.36197662 309.08740234]
[121.13864899 324.08572388]
[120.91532135 339.08407593]
[120.69199371 354.08239746]
[120.46866608 369.08074951]
[127.99964142 382.99459839]
[120.07371521 395.60525513]
[134.86561584 398.29776001]
[149.01255798 403.38833618]
[162.12858582 410.73812866]
[173.85589600 420.14663696]
[183.87457275 431.35714722]
[191.91128540 444.06390381]
[197.74678040 457.92019653]
[201.22186279 472.54803467]
[202.24174500 487.54833984]
[200.77857971 502.51193237]
[196.87229919 517.03057861]
[190.62948608 530.70819092]
[182.22041321 543.17163086]
[171.87449646 554.08087158]
[159.87400818 563.13836670]
[146.54629517 570.09698486]
[132.25495911 574.76684570]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 193]
[21 191]
[22 190]
[23 189]
[24 188]
[25 187]
[26 185]
[27 184]
[28 183]
[29 176]
[30 175]
[31 174]
[32 173]
[33 172]
[35 170]
[38 167]
[39 166]
[40 161]
[41 160]
[42 159]
[43 158]
[51 147]
[52 146]
[53 145]
[54 144]
[55 143]
[60 142]
[61 141]
[78 126]
[79 125]
[80 124]
[81 123]
[82 122]
[84 121]
[85 120]
[87 119]
[88 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
