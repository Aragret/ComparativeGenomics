%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUGxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[44.82045746 446.83538818]
[48.81654739 461.37780762]
[49.06971741 476.45715332]
[45.56404877 491.12551880]
[38.51991653 504.46084595]
[28.38011551 515.62487793]
[15.78204346 523.91577148]
[1.51762807 528.81243896]
[-13.51645947 530.00701904]
[-28.37516403 527.42443848]
[-42.12445450 521.22705078]
[-53.90003586 511.80438232]
[-62.96168900 499.74877930]
[-68.73979187 485.81808472]
[-70.87112427 470.88796997]
[-69.22171021 455.89697266]
[-63.89523697 441.78741455]
[-55.22652435 429.44625854]
[-43.76049805 419.64926147]
[-30.21792412 413.01229858]
[-15.45009708 409.95251465]
[-0.38533714 410.66232300]
[4.01566076 396.32247925]
[8.41665936 381.98263550]
[12.81765747 367.64279175]
[16.78975296 353.17825317]
[20.32942581 338.60189819]
[23.86909866 324.02551270]
[18.02855873 307.47695923]
[30.84920883 294.25906372]
[34.17146683 279.63159180]
[37.49372864 265.00415039]
[40.81598663 250.37667847]
[30.09672356 260.86941528]
[15.91432953 265.75405884]
[1.00720227 264.08746338]
[-11.74632549 256.19140625]
[-19.88374710 243.59051514]
[-21.83385468 228.71781921]
[-17.22011185 214.44500732]
[-6.93336058 203.52792358]
[7.04018831 198.07449341]
[22.00246239 199.13768005]
[35.06447983 206.51220703]
[43.70417023 218.77416992]
[46.25328064 233.55725098]
[52.12223816 219.75306702]
[57.99119949 205.94889832]
[63.23791885 191.89642334]
[67.85192871 177.62368774]
[72.46593475 163.35095215]
[67.87239838 146.41383362]
[81.64064026 134.18611145]
[86.04164124 119.84626007]
[90.44263458 105.50641632]
[76.16999817 110.12070465]
[63.57986832 101.96664429]
[61.95322800 87.05510712]
[72.48917389 76.37831879]
[87.42099762 77.80680847]
[95.74127960 90.28591919]
[93.55281830 74.61680603]
[105.38906097 65.57508087]
[103.20059967 49.90596390]
[115.03683472 40.86423874]
[120.49219513 26.89144135]
[125.94754791 12.91864395]
[131.29873657 -1.09437847]
[136.54545593 -15.14684963]
[141.79217529 -29.19932175]
[147.03889465 -43.25179291]
[135.95657349 -51.41435242]
[127.37673950 -62.16053772]
[121.88067627 -74.75167847]
[119.83800507 -88.32447052]
[121.38182068 -101.95017242]
[126.40001678 -114.69815826]
[134.54342651 -125.69947052]
[145.25010681 -134.20605469]
[157.78408813 -139.64164734]
[171.28599548 -141.64076233]
[184.83193970 -140.07327271]
[190.49472046 -153.96330261]
[196.15751648 -167.85333252]
[201.71673584 -181.78512573]
[207.17210388 -195.75791931]
[212.41880798 -209.81039429]
[217.45573425 -223.93942261]
[222.49264526 -238.06845093]
[227.52955627 -252.19747925]
[232.56648254 -266.32650757]
[237.60339355 -280.45553589]
[224.18266296 -287.19821167]
[211.69229126 -295.53909302]
[200.32159424 -305.35168457]
[190.24298096 -316.48727417]
[181.60923767 -328.77700806]
[174.55122375 -342.03460693]
[169.17596436 -356.05911255]
[165.56492615 -370.63784790]
[163.77287292 -385.54986572]
[163.82696533 -400.56909180]
[165.72636414 -415.46780396]
[169.44230652 -430.02017212]
[174.91842651 -444.00558472]
[182.07173157 -457.21200562]
[190.79377747 -469.43927002]
[200.95233154 -480.50195312]
[212.39340210 -490.23242188]
[224.94352722 -498.48309326]
[238.41246033 -505.12893677]
[252.59603882 -510.06921387]
[267.27920532 -513.22894287]
[282.23937988 -514.56036377]
[297.24978638 -514.04315186]
[312.08285522 -511.68527222]
[326.51370239 -507.52236938]
[340.32360840 -501.61758423]
[353.30319214 -494.06045532]
[365.25567627 -484.96554565]
[375.99987793 -474.47067261]
[385.37292480 -462.73501587]
[393.23269653 -449.93643188]
[399.46005249 -436.26898193]
[403.96060181 -421.93981934]
[406.66610718 -407.16619873]
[407.53555298 -392.17208862]
[406.55575562 -377.18478394]
[403.74157715 -362.43145752]
[399.13568115 -348.13583374]
[392.80789185 -334.51455688]
[384.85412598 -321.77420044]
[375.39495850 -310.10784912]
[364.57379150 -299.69235229]
[352.55468750 -290.68566895]
[339.51983643 -283.22427368]
[325.66687012 -277.42129517]
[311.20574951 -273.36474609]
[296.35571289 -271.11608887]
[281.34191895 -270.70938110]
[266.39193726 -272.15084839]
[251.73242188 -275.41864014]
[246.69551086 -261.28958130]
[241.65859985 -247.16056824]
[236.62167358 -233.03153992]
[231.58476257 -218.90251160]
[226.54785156 -204.77348328]
[227.74913025 -200.15113831]
[226.05943298 -194.72509766]
[221.14489746 -190.30256653]
[215.68954468 -176.32977295]
[216.18511963 -168.95574951]
[210.04754639 -162.19053650]
[204.38475037 -148.30050659]
[198.72196960 -134.41049194]
[211.35025024 -124.09812927]
[220.18815613 -110.37524414]
[224.36260986 -94.57622528]
[223.45469666 -78.24159241]
[217.54158020 -62.96775818]
[207.19023132 -50.25102615]
[193.40296936 -41.34099197]
[177.52046204 -37.11777496]
[161.09136963 -38.00507355]
[155.84465027 -23.95260239]
[150.59793091 -9.90013123]
[145.35121155 4.15233994]
[145.95651245 11.51816559]
[139.92034912 18.37400055]
[134.46499634 32.34679794]
[129.00962830 46.31959534]
[131.58830261 60.98928452]
[119.36185455 71.03044128]
[121.94052124 85.70012665]
[109.71408081 95.74127960]
[104.78248596 109.90741730]
[100.38148499 124.24726105]
[95.98049164 138.58711243]
[101.32301331 150.32679749]
[97.36219788 162.17988586]
[86.73867035 167.96496582]
[82.12466431 182.23770142]
[77.51065063 196.51043701]
[91.32389069 190.66284180]
[105.27739716 196.16735840]
[111.37796021 209.87075806]
[106.13090515 223.92311096]
[92.54198456 230.27458191]
[78.39554596 225.28675842]
[71.79537964 211.81785583]
[65.92641449 225.62203979]
[60.05745697 239.42620850]
[55.44344711 253.69894409]
[52.12118912 268.32641602]
[48.79892731 282.95385742]
[45.47666931 297.58132935]
[51.67755508 308.89114380]
[48.60930252 321.00598145]
[38.44547272 327.56518555]
[34.90579987 342.14157104]
[31.36612892 356.71792603]
[32.73608017 360.83828735]
[32.72475815 364.78344727]
[31.55684471 368.14074707]
[29.56797600 370.61279297]
[27.15750504 372.04379272]
[22.75650597 386.38363647]
[18.35550880 400.72348022]
[13.95450974 415.06332397]
[26.82379723 422.92666626]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 209]
[23 208]
[24 207]
[25 206]
[26 201]
[27 200]
[28 199]
[30 196]
[31 195]
[32 194]
[33 193]
[46 192]
[47 191]
[48 190]
[49 183]
[50 182]
[51 181]
[53 178]
[54 177]
[55 176]
[61 175]
[63 173]
[65 171]
[66 170]
[67 169]
[68 167]
[69 166]
[70 165]
[71 164]
[82 155]
[83 154]
[84 153]
[85 151]
[86 150]
[87 147]
[88 146]
[89 145]
[90 144]
[91 143]
[92 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
