%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[-20.50328636 360.71188354]
[-16.11242104 375.07424927]
[-13.48480415 389.86114502]
[-12.65875435 404.85699463]
[-13.64631844 419.84304810]
[-16.43309593 434.60079956]
[-20.97844505 448.91503906]
[-27.21608162 462.57699585]
[-35.05504608 475.38745117]
[-44.38101578 487.15960693]
[-55.05799866 497.72177124]
[-66.93029022 506.91995239]
[-79.82475281 514.61993408]
[-93.55335999 520.70953369]
[-107.91589355 525.09985352]
[-122.70291138 527.72692871]
[-137.69877625 528.55242920]
[-152.68479919 527.56427002]
[-167.44244385 524.77697754]
[-181.75650024 520.23107910]
[-195.41822815 513.99291992]
[-208.22840881 506.15347290]
[-220.00021362 496.82705688]
[-230.56198120 486.14968872]
[-239.75968933 474.27703857]
[-247.45921326 461.38229370]
[-253.54827881 447.65347290]
[-257.93807983 433.29077148]
[-260.56457520 418.50366211]
[-261.38949585 403.50775146]
[-260.40081787 388.52175903]
[-257.61294556 373.76422119]
[-253.06652832 359.45034790]
[-246.82786560 345.78884888]
[-238.98794556 332.97897339]
[-229.66108704 321.20751953]
[-218.98332214 310.64614868]
[-207.11033630 301.44885254]
[-194.21530151 293.74981689]
[-180.48623657 287.66128540]
[-166.12338257 283.27203369]
[-151.33616638 280.64605713]
[-136.34024048 279.82168579]
[-121.35428619 280.81094360]
[-106.59684753 283.59936523]
[-92.28312683 288.14633179]
[-78.62186432 294.38549805]
[-65.81227875 302.22589111]
[-56.49739838 290.46865845]
[-47.18251419 278.71139526]
[-37.86763000 266.95413208]
[-28.64053345 255.12788391]
[-19.50172997 243.23324585]
[-10.36292839 231.33860779]
[-16.68837357 213.75219727]
[-11.09160233 195.76318359]
[4.33863592 184.69442749]
[23.47272491 185.16572571]
[32.07128906 172.87489319]
[40.66985321 160.58404541]
[49.26841736 148.29321289]
[34.51290894 150.99043274]
[21.41405678 143.68153381]
[15.96047401 129.70803833]
[20.64546776 115.45845032]
[33.32712173 107.44748688]
[48.20755768 109.33764648]
[58.48363495 120.26477814]
[59.45676041 135.23492432]
[69.28733826 123.90533447]
[79.11791992 112.57573700]
[88.94850159 101.24614716]
[73.94852448 101.22293854]
[63.26113510 90.69773865]
[63.00856400 75.69986725]
[73.33549500 64.82077789]
[88.32618713 64.29251099]
[99.39329529 74.41768646]
[100.19739532 89.39523315]
[110.99954987 78.98786163]
[121.80170441 68.58049011]
[132.60386658 58.17311478]
[143.40602112 47.76574326]
[154.13040161 37.27824020]
[164.77641296 26.71119308]
[165.60475159 13.83964920]
[174.68939209 5.25750065]
[186.78561401 5.16903591]
[197.58776855 -5.23833752]
[208.38992310 -15.64571095]
[219.19207764 -26.05308342]
[229.99423218 -36.46045685]
[240.79640198 -46.86782837]
[251.59855652 -57.27520370]
[262.32293701 -67.76270294]
[272.96893311 -78.32975006]
[277.31268311 -93.54298401]
[291.79635620 -97.01753998]
[302.44238281 -107.58458710]
[292.91119385 -119.18161774]
[284.50787354 -131.62020874]
[277.30627441 -144.79106140]
[271.36965942 -158.57841492]
[266.75021362 -172.86109924]
[263.48852539 -187.51361084]
[261.61328125 -202.40716553]
[261.14093018 -217.41087341]
[262.07565308 -232.39288330]
[264.40921021 -247.22154236]
[268.12112427 -261.76651001]
[273.17874146 -275.89999390]
[279.53762817 -289.49774170]
[287.14190674 -302.44027710]
[295.92474365 -314.61386108]
[305.80892944 -325.91152954]
[316.70767212 -336.23394775]
[328.52511597 -345.49041748]
[341.15740967 -353.59960938]
[354.49359131 -360.49026489]
[368.41644287 -366.10177612]
[382.80355835 -370.38488770]
[397.52856445 -373.30191040]
[412.46200562 -374.82723999]
[427.47265625 -374.94747925]
[442.42861938 -373.66152954]
[457.19845581 -370.98071289]
[471.65234375 -366.92861938]
[485.66326904 -361.54080200]
[499.10809326 -354.86465454]
[511.86868286 -346.95883179]
[523.83288574 -337.89282227]
[534.89550781 -327.74630737]
[544.95941162 -316.60842896]
[553.93609619 -304.57705688]
[561.74670410 -291.75796509]
[568.32257080 -278.26382446]
[573.60595703 -264.21316528]
[577.55035400 -249.72952271]
[580.12109375 -234.94013977]
[581.29571533 -219.97502136]
[581.06372070 -204.96566772]
[579.42724609 -190.04399109]
[576.40069580 -175.34112549]
[572.01062012 -160.98628235]
[566.29559326 -147.10560608]
[559.30584717 -133.82110596]
[551.10284424 -121.24950409]
[541.75866699 -109.50129700]
[531.35534668 -98.67972565]
[519.98443604 -88.87989807]
[507.74581909 -80.18792725]
[494.74700928 -72.68021393]
[481.10229492 -66.42272186]
[466.93157959 -61.47046280]
[452.35937500 -57.86693954]
[437.51376343 -55.64383316]
[422.52520752 -54.82067108]
[407.52542114 -55.40469742]
[392.64624023 -57.39077377]
[378.01843262 -60.76144409]
[363.77050781 -65.48709106]
[350.02774048 -71.52618408]
[336.91088867 -78.82564545]
[324.53518677 -87.32132721]
[313.00942993 -96.93857574]
[302.36340332 -86.37152863]
[298.78112793 -71.91412354]
[283.53598022 -67.68374634]
[272.88998413 -57.11669540]
[270.35720825 -50.17358017]
[262.00592041 -46.47304535]
[251.20376587 -36.06567383]
[240.40161133 -25.65830040]
[229.59945679 -15.25092697]
[218.79730225 -4.84355402]
[207.99514771 5.56381893]
[197.19299316 15.97119236]
[193.25205994 33.07195282]
[175.34346008 37.35720062]
[164.69744873 47.92425156]
[162.16467285 54.86736298]
[153.81338501 58.56789780]
[143.01123047 68.97527313]
[132.20907593 79.38264465]
[121.40692139 89.79001617]
[110.60476685 100.19738770]
[100.27809906 111.07672882]
[90.44751740 122.40631866]
[80.61693573 133.73591614]
[70.78635406 145.06550598]
[61.55925751 156.89176941]
[52.96069336 169.18261719]
[44.36212921 181.47344971]
[35.76356506 193.76428223]
[41.32859802 203.78649902]
[42.74535751 215.11050415]
[39.84716034 226.09561157]
[33.08972168 235.16456604]
[23.47999382 241.03004456]
[12.42623901 242.87736511]
[1.53170431 240.47741699]
[-7.60709810 252.37203979]
[-16.74590111 264.26669312]
[-19.49275208 272.97830200]
[-26.11038017 276.26904297]
[-35.42526245 288.02627563]
[-44.74014664 299.78353882]
[-54.05502701 311.54077148]
[-43.49246216 322.21737671]
[-34.29386139 334.08932495]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 208]
[49 207]
[50 206]
[51 205]
[52 203]
[53 202]
[54 201]
[58 194]
[59 193]
[60 192]
[61 191]
[69 190]
[70 189]
[71 188]
[72 187]
[79 186]
[80 185]
[81 184]
[82 183]
[83 182]
[84 180]
[85 179]
[88 177]
[89 176]
[90 175]
[91 174]
[92 173]
[93 172]
[94 171]
[95 169]
[96 168]
[98 166]
[99 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
