%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[65.92092896 367.49844360]
[66.51547241 382.51818848]
[64.75296021 397.44601440]
[60.67680740 411.91430664]
[54.38738251 425.56677246]
[46.03957367 438.06719971]
[35.83895493 449.10772705]
[24.03671837 458.41653442]
[10.92351151 465.76434326]
[-3.17774367 470.97021484]
[-17.91979027 473.90594482]
[-32.93959427 474.49926758]
[-47.86727524 472.73550415]
[-62.33523178 468.65817261]
[-75.98717499 462.36761475]
[-88.48690796 454.01876831]
[-99.52661896 443.81723022]
[-108.83444214 432.01425171]
[-116.18116760 418.90042114]
[-121.38587952 404.79873657]
[-124.32039642 390.05645752]
[-124.91245270 375.03659058]
[-123.14748383 360.10906982]
[-119.06893921 345.64144897]
[-112.77725983 331.99002075]
[-104.42739105 319.49096680]
[-94.22495270 308.45211792]
[-82.42118073 299.14526367]
[-69.30675507 291.79962158]
[-55.20464325 286.59606934]
[-40.46211243 283.66278076]
[-25.44221115 283.07192993]
[-10.51482105 284.83813477]
[3.95246077 288.91787720]
[10.22982121 275.29455566]
[16.50718307 261.67126465]
[22.78454208 248.04794312]
[29.06190300 234.42462158]
[19.48522377 222.98991394]
[15.80783176 208.47142029]
[18.81103897 193.73570251]
[27.95166016 181.71615601]
[41.45933914 174.82925415]
[56.67924118 174.48864746]
[62.95660019 160.86534119]
[69.23396301 147.24201965]
[75.51132202 133.61869812]
[81.78868103 119.99538422]
[88.06604004 106.37207031]
[76.40380096 115.80563354]
[63.10050964 122.73545837]
[48.68605042 126.88555145]
[33.73453140 128.09060669]
[18.84147644 126.30263519]
[4.60006285 121.59284210]
[-8.42247581 114.14881897]
[-19.70745659 104.26705933]
[-28.80540657 92.34114838]
[-35.35395432 78.84609222]
[-39.09227371 64.31939697]
[-39.87147141 49.33964539]
[-37.66051102 34.50348663]
[-32.54745102 20.40183067]
[-24.73595047 7.59634733]
[-14.53713131 -3.40292978]
[-2.35721135 -12.15790272]
[11.31868839 -18.31986427]
[25.94586182 -21.64338493]
[40.94171524 -21.99609184]
[55.70896912 -19.36393547]
[69.65944672 -13.85175514]
[82.23751068 -5.67909765]
[92.94217682 4.82852316]
[101.34708405 17.25259209]
[107.11746979 31.09826469]
[110.02350616 45.81407166]
[109.94943237 60.81388855]
[106.89821625 75.50028229]
[100.99339294 89.28462982]
[112.39585876 79.53866577]
[123.79831696 69.79270172]
[135.20077515 60.04673386]
[146.60324097 50.30076981]
[158.00570679 40.55480576]
[169.40817261 30.80883789]
[180.81063843 21.06287193]
[182.59402466 8.28858948]
[192.29180908 0.40589538]
[204.36111450 1.21735168]
[215.90740967 -8.35776806]
[227.45372009 -17.93288803]
[239.00001526 -27.50800705]
[250.54631042 -37.08312607]
[262.09262085 -46.65824509]
[273.63891602 -56.23336792]
[279.63458252 -73.64409637]
[297.03613281 -75.91416931]
[308.43859863 -85.66013336]
[319.84106445 -95.40610504]
[331.24353027 -105.15206909]
[322.55261230 -117.39031219]
[314.99374390 -130.35833740]
[308.62777710 -143.95173645]
[303.50595093 -158.06106567]
[299.66949463 -172.57270813]
[297.14929199 -187.36982727]
[295.96566772 -202.33329773]
[296.12814331 -217.34262085]
[297.63540649 -232.27696228]
[300.47531128 -247.01606750]
[304.62500000 -261.44125366]
[310.05105591 -275.43640137]
[316.70977783 -288.88882446]
[324.54760742 -301.69018555]
[333.50137329 -313.73742676]
[343.49902344 -324.93356323]
[354.46005249 -335.18841553]
[366.29617310 -344.41946411]
[378.91213989 -352.55233765]
[392.20635986 -359.52157593]
[406.07177734 -365.27105713]
[420.39672852 -369.75451660]
[435.06594849 -372.93582153]
[449.96127319 -374.78936768]
[464.96276855 -375.30023193]
[479.94967651 -374.46429443]
[494.80133057 -372.28829956]
[509.39813232 -368.78973389]
[523.62255859 -363.99682617]
[537.36004639 -357.94812012]
[550.50006104 -350.69235229]
[562.93676758 -342.28790283]
[574.57006836 -332.80245972]
[585.30621338 -322.31240845]
[595.05877686 -310.90219116]
[603.74932861 -298.66366577]
[611.30780029 -285.69540405]
[617.67333984 -272.10180664]
[622.79473877 -257.99234009]
[626.63073730 -243.48057556]
[629.15051270 -228.68338013]
[630.33367920 -213.71987915]
[630.17071533 -198.71055603]
[628.66302490 -183.77626038]
[625.82269287 -169.03724670]
[621.67254639 -154.61216736]
[616.24603271 -140.61718750]
[609.58691406 -127.16498566]
[601.74871826 -114.36386108]
[592.79455566 -102.31688690]
[582.79656982 -91.12106323]
[571.83526611 -80.86653137]
[559.99884033 -71.63585663]
[547.38262939 -63.50336456]
[534.08819580 -56.53453064]
[520.22259521 -50.78546906]
[505.89749146 -46.30245972]
[491.22817993 -43.12160873]
[476.33279419 -41.26852036]
[461.33126831 -40.75811768]
[446.34439087 -41.59450531]
[431.49282837 -43.77095795]
[416.89611816 -47.26994324]
[402.67184448 -52.06329346]
[388.93450928 -58.11241150]
[375.79473877 -65.36859894]
[363.35827637 -73.77342224]
[351.72531128 -83.25921631]
[340.98947144 -93.74960327]
[329.58700562 -84.00363922]
[318.18457031 -74.25767517]
[306.78210449 -64.51171112]
[305.52520752 -52.48063278]
[296.10540771 -44.26778793]
[283.21405029 -44.68706512]
[271.66772461 -35.11194611]
[260.12142944 -25.53682518]
[248.57513428 -15.96170616]
[237.02883911 -6.38658619]
[225.48252869 3.18853354]
[213.93623352 12.76365376]
[208.73432922 29.52393723]
[190.55659485 32.46533585]
[179.15412903 42.21129990]
[167.75167847 51.95726776]
[156.34921265 61.70323181]
[144.94674683 71.44919586]
[133.54428101 81.19515991]
[122.14182281 90.94113159]
[110.73935699 100.68709564]
[101.68936157 112.64942932]
[95.41199493 126.27275085]
[89.13463593 139.89605713]
[82.85727692 153.51937866]
[76.57991791 167.14270020]
[70.30255890 180.76600647]
[79.93248749 192.55693054]
[83.47366333 207.29962158]
[80.27578735 222.05746460]
[71.02548981 233.91465759]
[57.59974670 240.55233765]
[42.68521881 240.70198059]
[36.40785980 254.32530212]
[30.13049889 267.94860840]
[23.85313797 281.57192993]
[17.57577705 295.19525146]
[30.07688904 303.54202271]
[41.11828232 313.74172974]
[50.42805862 325.54321289]
[57.77694702 338.65579224]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 206]
[35 205]
[36 204]
[37 203]
[38 202]
[44 196]
[45 195]
[46 194]
[47 193]
[48 192]
[49 191]
[79 190]
[80 189]
[81 188]
[82 187]
[83 186]
[84 185]
[85 184]
[86 183]
[89 181]
[90 180]
[91 179]
[92 178]
[93 177]
[94 176]
[95 175]
[97 172]
[98 171]
[99 170]
[100 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
