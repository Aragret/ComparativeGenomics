%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[112.70730591 864.62438965]
[98.17113495 860.90209961]
[83.90332031 856.25610352]
[69.96249390 850.70550537]
[56.40594101 844.27313232]
[43.28936386 836.98541260]
[30.66666412 828.87225342]
[18.58971214 819.96704102]
[7.10813665 810.30633545]
[-3.73088431 799.92987061]
[-13.88280964 788.88024902]
[-23.30592346 777.20288086]
[-31.96150208 764.94580078]
[-39.81397629 752.15930176]
[-46.83108521 738.89599609]
[-52.98398590 725.21032715]
[-58.24739838 711.15856934]
[-62.59969711 696.79840088]
[-66.02298737 682.18896484]
[-68.50321198 667.39013672]
[-70.03017426 652.46289062]
[-70.59760284 637.46838379]
[-70.20317078 622.46838379]
[-68.84848022 607.52447510]
[-66.53911591 592.69805908]
[-63.28456116 578.05010986]
[-59.09819031 563.64074707]
[-53.99720764 549.52917480]
[-48.00256729 535.77343750]
[-41.13891220 522.43005371]
[-33.43444443 509.55386353]
[-24.92081833 497.19772339]
[-15.63302326 485.41247559]
[-5.60922384 474.24649048]
[5.10939026 463.74566650]
[16.47877312 453.95318604]
[28.45220375 444.90927124]
[40.98048401 436.65106201]
[54.01212692 429.21252441]
[67.49359131 422.62420654]
[81.36946869 416.91320801]
[95.58274078 412.10293579]
[110.07501221 408.21322632]
[124.78671265 405.26004028]
[122.78269958 390.39450073]
[120.77868652 375.52899170]
[118.77467346 360.66345215]
[107.31553650 347.37228394]
[114.45101166 330.39682007]
[112.22589111 315.56277466]
[110.00077820 300.72872925]
[107.77565765 285.89468384]
[105.55054474 271.06063843]
[103.37901306 269.28790283]
[101.77885437 266.54818726]
[101.12188721 263.05477905]
[101.69592285 259.15158081]
[103.66193390 255.28004456]
[94.82001495 243.29380798]
[101.29527283 228.85838318]
[99.95703888 213.91819763]
[98.61880493 198.97801208]
[95.59336853 195.28263855]
[94.85723114 189.64746094]
[97.46993256 183.57414246]
[96.57711792 168.60073853]
[95.68430328 153.62731934]
[94.79148865 138.65391541]
[93.89867401 123.68051147]
[93.00585938 108.70710754]
[92.00159454 93.74076843]
[90.88594818 78.78231049]
[89.77030182 63.82386017]
[88.65464783 48.86540604]
[87.53900146 33.90695190]
[86.42335510 18.94849777]
[77.41544342 30.94256020]
[63.11227417 35.46134567]
[48.84858322 30.81946564]
[39.94436646 18.74821854]
[39.72068405 3.74988723]
[48.26095581 -8.58152485]
[62.37987900 -13.64670372]
[76.81143951 -9.55646515]
[86.17343903 2.16472697]
[86.84322357 -12.82031155]
[87.51300812 -27.80535126]
[80.39963531 -41.93724823]
[88.69752502 -54.30633545]
[85.95442200 -63.01915741]
[89.49047852 -69.50900269]
[90.38329315 -84.48240662]
[91.27610779 -99.45581818]
[82.65461731 -115.72699738]
[92.88227081 -129.98750305]
[93.55206299 -144.97253418]
[84.68927002 -161.11355591]
[94.70347595 -175.52474976]
[95.15007782 -190.51809692]
[95.59668732 -205.51144409]
[82.02471924 -212.49459839]
[72.83351898 -224.68002319]
[69.84802246 -239.64831543]
[73.66098785 -254.42749023]
[83.51535034 -266.08312988]
[97.45452881 -272.30102539]
[112.71087646 -271.84658813]
[126.25524139 -264.81005859]
[135.39837646 -252.58851624]
[138.32492065 -237.60859680]
[134.45378113 -222.84454346]
[124.55358887 -211.22779846]
[110.59003448 -205.06484985]
[110.14343262 -190.07150269]
[109.69682312 -175.07814026]
[117.76090240 -166.06164551]
[117.51153564 -153.56678772]
[108.53710175 -144.30274963]
[107.86730957 -129.31771851]
[115.79625702 -120.18215179]
[115.36088562 -107.69239044]
[106.24951172 -98.56300354]
[105.35669708 -83.58959198]
[104.46388245 -68.61618805]
[103.68256378 -53.63655090]
[110.84384155 -40.57648468]
[102.49804688 -27.13556480]
[101.82826233 -12.15052700]
[101.15847778 2.83451200]
[101.38180542 17.83284950]
[102.49745178 32.79130173]
[103.61310577 47.74975586]
[104.72875214 62.70820999]
[105.84439850 77.66666412]
[106.96005249 92.62511444]
[110.65238953 99.79025269]
[107.97926331 107.81429291]
[108.87207794 122.78769684]
[109.76489258 137.76110840]
[110.65770721 152.73451233]
[111.55052185 167.70791626]
[112.44334412 182.68132019]
[113.55899048 197.63977051]
[114.89722443 212.57995605]
[116.23545837 227.52014160]
[125.17309570 240.57499695]
[118.60211945 253.94180298]
[120.38458252 268.83551025]
[122.60970306 283.66955566]
[124.83482361 298.50360107]
[127.05993652 313.33764648]
[129.28504944 328.17169189]
[139.17457581 336.45181274]
[140.72248840 348.85293579]
[133.64019775 358.65945435]
[135.64421082 373.52496338]
[137.64822388 388.39050293]
[139.65223694 403.25601196]
[154.62078857 402.20803833]
[169.62573242 402.12124634]
[184.60539246 402.99600220]
[199.49824524 404.82873535]
[214.24305725 407.61187744]
[228.77926636 411.33401489]
[243.04713440 415.97982788]
[256.98803711 421.53027344]
[270.54464722 427.96249390]
[283.66131592 435.25009155]
[296.28408813 443.36309814]
[308.36114502 452.26818848]
[319.84283447 461.92874146]
[330.68197632 472.30511475]
[340.83401489 483.35461426]
[350.25726318 495.03186035]
[358.91296387 507.28887939]
[366.76559448 520.07525635]
[373.78283691 533.33850098]
[379.93591309 547.02410889]
[385.19946289 561.07580566]
[389.55191040 575.43591309]
[392.97537231 590.04534912]
[395.45578003 604.84411621]
[396.98291016 619.77136230]
[397.55050659 634.76580811]
[397.15621948 649.76580811]
[395.80169678 664.70977783]
[393.49249268 679.53619385]
[390.23809814 694.18420410]
[386.05187988 708.59362793]
[380.95108032 722.70526123]
[374.95657349 736.46105957]
[368.09307861 749.80450439]
[360.38873291 762.68078613]
[351.87524414 775.03698730]
[342.58758545 786.82238770]
[332.56390381 797.98846436]
[321.84542847 808.48937988]
[310.47613525 818.28204346]
[298.50280762 827.32604980]
[285.97463989 835.58441162]
[272.94305420 843.02307129]
[259.46166992 849.61157227]
[245.58586121 855.32275391]
[231.37263489 860.13311768]
[216.88041687 864.02301025]
[202.16874695 866.97637939]
[187.29808044 868.98107910]
[172.32951355 870.02886963]
[157.32458496 870.11553955]
[142.34492493 869.24060059]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 158]
[45 157]
[46 156]
[47 155]
[49 152]
[50 151]
[51 150]
[52 149]
[53 148]
[58 147]
[60 145]
[61 144]
[62 143]
[65 142]
[66 141]
[67 140]
[68 139]
[69 138]
[70 137]
[71 135]
[72 134]
[73 133]
[74 132]
[75 131]
[76 130]
[85 129]
[86 128]
[87 127]
[89 125]
[91 124]
[92 123]
[93 122]
[95 119]
[96 118]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
