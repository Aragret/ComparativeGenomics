%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[122.50060272 831.86169434]
[107.82447815 828.70465088]
[93.52157593 824.14587402]
[79.72544098 818.22790527]
[66.56487274 811.00604248]
[54.16276932 802.54772949]
[42.63491821 792.93188477]
[32.08895874 782.24835205]
[22.62335777 770.59680176]
[14.32649231 758.08612061]
[7.27583170 744.83306885]
[1.53720772 730.96136475]
[-2.83579826 716.60058594]
[-5.80235624 701.88476562]
[-7.33476686 686.95135498]
[-7.41872215 671.93975830]
[-6.05343914 656.99011230]
[-3.25166440 642.24206543]
[0.96044165 627.83325195]
[6.54355049 613.89825439]
[13.44553375 600.56713867]
[21.60194588 587.96441650]
[30.93663406 576.20776367]
[41.36243820 565.40692139]
[52.78201294 555.66271973]
[65.08873749 547.06622314]
[78.16770172 539.69763184]
[91.89678192 533.62573242]
[106.14780426 528.90728760]
[120.78769684 525.58624268]
[135.67976379 523.69372559]
[135.23315430 508.70037842]
[134.67495728 493.71078491]
[134.00515747 478.72573853]
[133.33537292 463.74069214]
[132.66558838 448.75564575]
[131.99580383 433.77062988]
[130.88015747 418.81216431]
[129.31964111 403.89355469]
[127.75911713 388.97494507]
[126.19859314 374.05636597]
[124.63806915 359.13775635]
[111.36556244 355.09933472]
[100.60076904 346.27938843]
[93.98986053 333.98406982]
[92.56004333 320.05401611]
[96.56002045 306.58905029]
[105.41753387 295.63146973]
[117.82096863 288.85638428]
[116.48273468 273.91619873]
[115.14450073 258.97601318]
[113.80626678 244.03582764]
[112.46803284 229.09564209]
[103.62611389 217.10942078]
[110.10136414 202.67398071]
[107.87625122 187.83995056]
[104.77214050 173.16464233]
[101.66802979 158.48933411]
[99.39483643 156.84898376]
[97.63444519 154.20936584]
[96.77071381 150.76127625]
[97.11140442 146.83081055]
[98.84349060 142.84913635]
[96.61837769 128.01509094]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[88.54757690 74.21002960]
[86.32246399 59.37598801]
[76.62363434 46.87625885]
[82.38735199 33.14203644]
[80.16223145 18.30799294]
[77.93711853 3.47394943]
[75.71199799 -11.36009407]
[73.48688507 -26.19413757]
[67.31777954 -12.52145672]
[55.88309860 -2.81331730]
[41.39068604 1.05579138]
[26.63880539 -1.66119516]
[14.47581291 -10.43966961]
[7.25019121 -23.58464622]
[6.35709572 -38.55803299]
[11.96896839 -52.46870804]
[23.00224495 -62.63073730]
[37.32657242 -67.08199310]
[52.17614746 -64.96299744]
[64.68374634 -56.68291092]
[72.43476105 -43.83926773]
[72.88136292 -58.83261490]
[73.32797241 -73.82596588]
[73.43963623 -88.82555389]
[65.49773407 -102.50899506]
[73.04468536 -115.35005188]
[72.82135773 -130.34838867]
[64.87944794 -144.03184509]
[72.42640686 -156.87289429]
[72.20307159 -171.87123108]
[64.26116943 -185.55467224]
[71.80812073 -198.39573669]
[58.12269211 -205.24902344]
[49.19914627 -217.68402100]
[47.08805466 -232.84323120]
[52.27452469 -247.24320984]
[63.56674957 -257.57492065]
[78.36985016 -261.46423340]
[93.28219604 -258.01739502]
[104.87702179 -248.02645874]
[110.48993683 -233.78729248]
[108.83112335 -218.57194519]
[100.28177643 -205.87678528]
[86.80645752 -198.61906433]
[94.73239136 -186.00840759]
[87.20141602 -172.09455872]
[87.42474365 -157.09622192]
[95.35066986 -144.48556519]
[87.81969452 -130.57171631]
[88.04302216 -115.57337952]
[95.96895599 -102.96271515]
[88.43797302 -89.04888153]
[90.69976807 -86.34394836]
[91.76377106 -82.40911102]
[91.06619263 -77.81926727]
[88.32131958 -73.37936401]
[87.87471771 -58.38600922]
[87.42810822 -43.39266205]
[88.32092285 -28.41925430]
[90.54604340 -13.58521175]
[92.77116394 1.24883235]
[94.99627686 16.08287621]
[97.22139740 30.91691971]
[106.76107025 42.35562134]
[101.15650940 57.15087128]
[103.38162231 71.98491669]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[111.45242310 125.78997040]
[113.67753601 140.62400818]
[116.34333038 155.38522339]
[119.44744110 170.06053162]
[122.55155182 184.73583984]
[129.87629700 171.64582825]
[143.44752502 165.25663757]
[158.20350647 167.95126343]
[168.64062500 178.72468567]
[170.86608887 193.55867004]
[164.04986572 206.92053223]
[150.73423767 213.82659912]
[135.88558960 211.70109558]
[125.04154968 201.33575439]
[133.97918701 214.39060974]
[127.40821838 227.75741577]
[128.74644470 242.69760132]
[130.08468628 257.63778687]
[131.42291260 272.57797241]
[132.76115417 287.51815796]
[148.03736877 293.11917114]
[159.30139160 304.77957153]
[164.33467102 320.12969971]
[162.17773438 336.08059692]
[153.31269836 349.44567871]
[139.55667114 357.57723999]
[141.11720276 372.49581909]
[142.67771912 387.41442871]
[144.23823547 402.33303833]
[145.79876709 417.25164795]
[148.47276306 420.67272949]
[149.78686523 424.39260864]
[149.81411743 427.94714355]
[148.77082825 430.94351196]
[146.98085022 433.10083008]
[147.65063477 448.08587646]
[148.32041931 463.07092285]
[148.99020386 478.05593872]
[149.65998840 493.04098511]
[153.16946411 501.47433472]
[150.22651672 508.25378418]
[150.67311096 523.24713135]
[165.65142822 524.24993896]
[180.46304321 526.69366455]
[194.96963501 530.55554199]
[209.03578186 535.79943848]
[222.53015137 542.37652588]
[235.32672119 550.22528076]
[247.30604553 559.27246094]
[258.35623169 569.43359375]
[268.37414551 580.61383057]
[277.26623535 592.70874023]
[284.94943237 605.60534668]
[291.35208130 619.18334961]
[296.41433716 633.31591797]
[300.08898926 647.87109375]
[302.34164429 662.71295166]
[303.15136719 677.70294189]
[302.51052856 692.70111084]
[300.42510986 707.56738281]
[296.91464233 722.16296387]
[292.01184082 736.35168457]
[285.76251221 750.00091553]
[278.22500610 762.98321533]
[269.46969604 775.17749023]
[259.57833862 786.46984863]
[248.64328003 796.75476074]
[236.76660156 805.93627930]
[224.05921936 813.92864990]
[210.63978577 820.65722656]
[196.63359070 826.05926514]
[182.17140198 830.08428955]
[167.38824463 832.69464111]
[152.42218018 833.86602783]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 178]
[32 177]
[33 175]
[34 174]
[35 173]
[36 172]
[37 171]
[38 166]
[39 165]
[40 164]
[41 163]
[42 162]
[49 156]
[50 155]
[51 154]
[52 153]
[53 152]
[55 150]
[56 141]
[57 140]
[58 139]
[63 138]
[64 137]
[65 136]
[67 134]
[68 133]
[69 132]
[71 130]
[72 129]
[73 128]
[74 127]
[75 126]
[88 125]
[89 124]
[90 123]
[91 119]
[93 117]
[94 116]
[96 114]
[97 113]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
