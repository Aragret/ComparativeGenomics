%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAUxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[62.29769516 441.13052368]
[49.30578995 433.61090088]
[37.07513046 424.90771484]
[25.71319962 415.09744263]
[15.31985378 404.26635742]
[5.98642969 392.50958252]
[-2.20504928 379.93045044]
[-9.18259335 366.63955688]
[-14.88488293 352.75363159]
[-19.26180458 338.39477539]
[-22.27489471 323.68914795]
[-23.89766884 308.76596069]
[-24.11587143 293.75640869]
[-22.92758179 278.79235840]
[-20.34324265 264.00537109]
[-16.38556671 249.52532959]
[-11.08933353 235.47953796]
[-4.50109005 221.99140930]
[3.32126617 209.17948914]
[12.30899048 197.15637207]
[22.38309669 186.02772522]
[33.45505142 175.89134216]
[45.42755127 166.83630371]
[58.19537735 158.94218445]
[71.64632416 152.27838135]
[85.66218567 146.90342712]
[100.11978149 142.86456299]
[97.45398712 128.10334778]
[94.78819275 113.34213257]
[85.90407562 102.54564667]
[90.45059204 89.32366180]
[87.78479004 74.56244659]
[85.11899567 59.80123138]
[82.45320129 45.04001236]
[79.78740692 30.27879524]
[77.12161255 15.51757812]
[62.24436951 17.45632935]
[47.28992081 18.66275024]
[32.29428864 19.13393974]
[17.29359627 18.86875725]
[2.32398605 17.86784554]
[-12.57847977 16.13361359]
[-27.37789917 13.67024040]
[-42.03862000 10.48366070]
[-56.52532578 6.58155012]
[-70.80310822 1.97330976]
[-84.83758545 -3.32995844]
[-98.59493256 -9.31547832]
[-112.04200745 -15.96883106]
[-125.14642334 -23.27398682]
[-137.87661743 -31.21334839]
[-150.20188904 -39.76778793]
[-162.09259033 -48.91669464]
[-173.52003479 -58.63803482]
[-184.45671082 -68.90837860]
[-194.87628174 -79.70299530]
[-204.75363159 -90.99587250]
[-214.06495667 -102.75980377]
[-222.78785706 -114.96645355]
[-230.90127563 -127.58641052]
[-238.38569641 -140.58927917]
[-245.22308350 -153.94372559]
[-251.39695740 -167.61758423]
[-256.89245605 -181.57789612]
[-261.69631958 -195.79106140]
[-265.79699707 -210.22280884]
[-269.18460083 -224.83839417]
[-271.85098267 -239.60258484]
[-273.78970337 -254.47982788]
[-274.99609375 -269.43429565]
[-275.46722412 -284.42993164]
[-275.20202637 -299.43060303]
[-274.20104980 -314.40020752]
[-272.46679688 -329.30267334]
[-270.00338745 -344.10208130]
[-266.81677246 -358.76281738]
[-262.91461182 -373.24951172]
[-258.30633545 -387.52728271]
[-253.00303650 -401.56173706]
[-247.01748657 -415.31906128]
[-240.36410522 -428.76614380]
[-233.05891418 -441.87051392]
[-225.11952209 -454.60070801]
[-216.56504822 -466.92596436]
[-207.41610718 -478.81661987]
[-197.69474792 -490.24404907]
[-187.42437744 -501.18069458]
[-176.62973022 -511.60025024]
[-165.33683777 -521.47753906]
[-153.57287598 -530.78887939]
[-141.36621094 -539.51171875]
[-128.74623108 -547.62512207]
[-115.74333954 -555.10949707]
[-102.38887787 -561.94683838]
[-88.71501160 -568.12072754]
[-74.75467682 -573.61614990]
[-60.54150391 -578.41998291]
[-46.10974121 -582.52062988]
[-31.49415398 -585.90820312]
[-16.72994995 -588.57452393]
[-1.85270047 -590.51324463]
[13.10175610 -591.71954346]
[28.09739113 -592.19067383]
[43.09807968 -591.92541504]
[58.06768799 -590.92443848]
[72.97014618 -589.19012451]
[87.76955414 -586.72668457]
[102.43025970 -583.54003906]
[116.91693878 -579.63787842]
[131.19470215 -575.02954102]
[145.22915649 -569.72619629]
[158.98646545 -563.74060059]
[172.43351746 -557.08721924]
[185.53788757 -549.78198242]
[198.26803589 -541.84252930]
[210.59327698 -533.28802490]
[222.48393250 -524.13909912]
[233.91133118 -514.41766357]
[244.84796143 -504.14727783]
[255.26747131 -493.35263062]
[265.14477539 -482.05969238]
[274.45602417 -470.29571533]
[283.17886353 -458.08901978]
[291.29223633 -445.46902466]
[298.77658081 -432.46612549]
[305.61389160 -419.11163330]
[311.78771973 -405.43777466]
[317.28314209 -391.47741699]
[322.08694458 -377.26422119]
[326.18753052 -362.83245850]
[329.57507324 -348.21685791]
[332.24136353 -333.45263672]
[334.18002319 -318.57540894]
[335.38632202 -303.62094116]
[335.85739136 -288.62530518]
[335.59210205 -273.62460327]
[334.59109497 -258.65499878]
[332.85675049 -243.75254822]
[330.39324951 -228.95315552]
[327.20657349 -214.29244995]
[323.30435181 -199.80578613]
[318.69601440 -185.52803040]
[313.39263916 -171.49359131]
[307.40701294 -157.73629761]
[300.75357056 -144.28926086]
[293.44830322 -131.18490601]
[285.50885010 -118.45477295]
[276.95431519 -106.12955475]
[267.80532837 -94.23893738]
[258.08389282 -82.81155396]
[247.81346130 -71.87494659]
[237.01878357 -61.45546341]
[225.72583008 -51.57820129]
[213.96182251 -42.26695633]
[201.75511169 -33.54415894]
[189.13508606 -25.43082619]
[176.13217163 -17.94650269]
[162.77767944 -11.10921764]
[149.10377502 -4.93544292]
[135.14341736 0.55994725]
[120.93021393 5.36371422]
[106.49843597 9.46428585]
[91.88282776 12.85178280]
[94.54862213 27.61299896]
[97.21441650 42.37421799]
[99.88021851 57.13543320]
[102.54601288 71.89665222]
[105.21180725 86.65786743]
[114.09592438 97.45435333]
[109.54940796 110.67633820]
[112.21520996 125.43755341]
[114.88100433 140.19877625]
[129.83804321 138.92550659]
[144.84860229 139.05844116]
[159.78076172 140.59642029]
[174.50326538 143.52593994]
[188.88676453 147.82122803]
[202.80484009 153.44454956]
[216.13516235 160.34648132]
[228.76060486 168.46636963]
[240.57020569 177.73286438]
[251.46017456 188.06452942]
[261.33480835 199.37054443]
[270.10733032 211.55157471]
[277.70062256 224.50054932]
[284.04800415 238.10369873]
[289.09365845 252.24143982]
[292.79321289 266.78955078]
[295.11422729 281.62017822]
[296.03625488 296.60299683]
[295.55117798 311.60629272]
[293.66333008 326.49826050]
[290.38922119 341.14797974]
[285.75765991 355.42675781]
[279.80938721 369.20907593]
[272.59661865 382.37380981]
[264.18273926 394.80526733]
[254.64175415 406.39422607]
[244.05746460 417.03881836]
[232.52288818 426.64547729]
[220.13940430 435.12982178]
[207.01585388 442.41726685]
[193.26754761 448.44375610]
[179.01531982 453.15631104]
[164.38441467 456.51358032]
[149.50341797 458.48602295]
[134.50311279 459.05627441]
[119.51531219 458.21939087]
[104.67174530 455.98266602]
[90.10285187 452.36578369]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 172]
[28 171]
[29 170]
[31 168]
[32 167]
[33 166]
[34 165]
[35 164]
[36 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
