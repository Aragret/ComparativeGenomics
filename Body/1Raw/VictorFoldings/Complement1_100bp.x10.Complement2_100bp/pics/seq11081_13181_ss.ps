%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[-0.10021727 834.08020020]
[-14.09848404 839.48217773]
[-28.39218521 844.04541016]
[-42.93111038 847.75384521]
[-57.66419601 850.59448242]
[-72.53968048 852.55737305]
[-87.50532532 853.63549805]
[-102.50856018 853.82519531]
[-117.49668121 853.12579346]
[-132.41703796 851.53967285]
[-147.21723938 849.07244873]
[-161.84527588 845.73278809]
[-176.24978638 841.53234863]
[-190.38015747 836.48602295]
[-204.18675232 830.61145020]
[-217.62110901 823.92932129]
[-230.63600159 816.46301270]
[-243.18571472 808.23883057]
[-255.22619629 799.28558350]
[-266.71514893 789.63482666]
[-277.61218262 779.32043457]
[-287.87902832 768.37854004]
[-297.47967529 756.84765625]
[-306.38034058 744.76831055]
[-314.54977417 732.18286133]
[-321.95932007 719.13555908]
[-328.58288574 705.67224121]
[-334.39727783 691.84020996]
[-339.38198853 677.68798828]
[-343.51959229 663.26531982]
[-346.79550171 648.62286377]
[-349.19824219 633.81207275]
[-350.71936035 618.88494873]
[-351.35351562 603.89392090]
[-351.09844971 588.89166260]
[-349.95510864 573.93084717]
[-347.92745972 559.06402588]
[-345.02267456 544.34344482]
[-341.25094604 529.82080078]
[-336.62548828 515.54711914]
[-331.16256714 501.57254028]
[-324.88137817 487.94610596]
[-317.80398560 474.71569824]
[-309.95523071 461.92782593]
[-301.36270142 449.62734985]
[-292.05657959 437.85751343]
[-282.06954956 426.65966797]
[-271.43667603 416.07312012]
[-260.19534302 406.13504028]
[-248.38499451 396.88037109]
[-236.04713440 388.34161377]
[-223.22511292 380.54876709]
[-209.96394348 373.52920532]
[-196.31022644 367.30755615]
[-182.31192017 361.90567017]
[-168.01817322 357.34255981]
[-153.47921753 353.63424683]
[-138.74610901 350.79373169]
[-123.87059784 348.83102417]
[-108.90494537 347.75299072]
[-93.90171051 347.56341553]
[-78.91359711 348.26300049]
[-63.99325180 349.84924316]
[-49.19308090 352.31661987]
[-34.56506729 355.65640259]
[-20.16060066 359.85690308]
[-6.03027248 364.90338135]
[7.77628231 370.77807617]
[14.45647717 357.34768677]
[21.13667107 343.91732788]
[27.81686592 330.48693848]
[34.49706268 317.05654907]
[39.74377823 303.00408936]
[43.50008011 288.48202515]
[47.25638199 273.95996094]
[51.01268005 259.43792725]
[37.96940994 252.10153198]
[27.26144600 241.63079834]
[19.62291718 228.73515320]
[15.57968140 214.29061890]
[15.41313839 199.28019714]
[19.14064598 184.72703552]
[26.51392937 171.62464905]
[37.03561020 160.86915588]
[49.99275970 153.19789124]
[64.50518799 149.13896179]
[79.58525085 148.97483826]
[83.34155273 134.45277405]
[87.09784698 119.93072510]
[90.85414886 105.40866089]
[93.62976074 90.66770172]
[95.41222382 75.77398682]
[89.36963654 61.15216064]
[98.56451416 49.43449783]
[91.22065735 38.83116913]
[93.01189423 26.46285248]
[102.43818665 18.88184929]
[104.44219971 4.01632166]
[106.44621277 -10.84920692]
[108.45022583 -25.71473503]
[94.72396851 -32.04571533]
[83.47473907 -42.14255142]
[75.70279694 -55.10744095]
[72.09922791 -69.78755188]
[72.98445129 -84.87754059]
[78.27976227 -99.03562164]
[87.51430511 -111.00285339]
[99.86694336 -119.71512604]
[114.23928833 -124.39775848]
[129.35336304 -124.63436127]
[143.86524963 -120.40390015]
[156.48454285 -112.08254242]
[166.08914185 -100.41022491]
[171.82502747 -86.42483521]
[173.18214417 -71.36994934]
[170.03984070 -56.58423233]
[162.67753601 -43.38242722]
[151.74984741 -32.93842316]
[138.22848511 -26.18089676]
[123.31575775 -23.71072197]
[121.31174469 -8.84519291]
[119.30772400 6.02033520]
[117.30371094 20.88586426]
[124.83419037 36.73701096]
[113.45822906 51.21696472]
[119.62831116 64.77349091]
[110.30594635 77.55644989]
[108.52347565 92.45016479]
[119.17082214 81.88446045]
[133.81758118 78.64836884]
[147.92530823 83.74463654]
[157.12257385 95.59412384]
[158.55949402 110.52513885]
[151.79083252 123.91114807]
[138.91394043 131.60433960]
[123.91883087 131.22091675]
[111.45193481 122.87966156]
[105.37621307 109.16496277]
[101.61991119 123.68701935]
[97.86360931 138.20907593]
[94.10730743 152.73114014]
[107.21644592 160.18673706]
[117.94061279 170.77339172]
[125.55301666 183.76521301]
[129.53991699 198.27352905]
[129.63533020 213.30778503]
[125.83876801 227.84307861]
[118.41482544 240.89013672]
[107.87480164 251.56254578]
[94.94143677 259.13702393]
[80.49939728 263.10241699]
[65.53473663 263.19421387]
[61.77843857 277.71627808]
[58.02214050 292.23834229]
[54.26583862 306.76040649]
[64.87801361 296.15936279]
[78.70967102 290.35546875]
[93.70896149 290.20965576]
[107.65083313 295.74356079]
[118.46708679 306.13629150]
[124.55320740 319.84609985]
[125.00634766 334.83926392]
[119.75928497 348.89160156]
[109.59039307 359.91854858]
[96.00816345 366.28433228]
[81.02744293 367.04458618]
[66.87052917 362.08657837]
[55.63751984 352.14578247]
[48.99476242 338.69686890]
[47.92743683 323.73675537]
[41.24724197 337.16714478]
[34.56704712 350.59750366]
[27.88685226 364.02789307]
[21.20665932 377.45825195]
[34.22161484 384.92443848]
[46.77141190 393.14852905]
[58.81196976 402.10162354]
[70.30098724 411.75228882]
[81.19812012 422.06661987]
[91.46508026 433.00839233]
[101.06581116 444.53918457]
[109.96658325 456.61846924]
[118.13613892 469.20382690]
[125.54578400 482.25106812]
[132.16947937 495.71432495]
[137.98397827 509.54635620]
[142.96884155 523.69854736]
[147.10655212 538.12115479]
[150.38259888 552.76354980]
[152.78546143 567.57434082]
[154.30670166 582.50146484]
[154.94097900 597.49249268]
[154.68606567 612.49475098]
[153.54284668 627.45556641]
[151.51535034 642.32238770]
[148.61068726 657.04296875]
[144.83906555 671.56567383]
[140.21372986 685.83935547]
[134.75094604 699.81402588]
[128.46987915 713.44049072]
[121.39259338 726.67095947]
[113.54396057 739.45892334]
[104.95153809 751.75946045]
[95.64551544 763.52935791]
[85.65858459 774.72735596]
[75.02581024 785.31396484]
[63.78454971 795.25213623]
[51.97428894 804.50689697]
[39.63650894 813.04577637]
[26.81454849 820.83874512]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 174]
[69 173]
[70 172]
[71 171]
[72 170]
[73 155]
[74 154]
[75 153]
[76 152]
[87 141]
[88 140]
[89 139]
[90 138]
[91 128]
[92 127]
[94 125]
[97 123]
[98 122]
[99 121]
[100 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
