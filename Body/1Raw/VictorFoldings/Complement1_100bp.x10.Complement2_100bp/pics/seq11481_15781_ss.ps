%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[154.24763489 854.14788818]
[139.94920349 849.60101318]
[125.92821503 844.25958252]
[112.22878265 838.14038086]
[98.89401245 831.26263428]
[85.96585846 823.64807129]
[73.48499298 815.32055664]
[61.49068832 806.30639648]
[50.02068710 796.63385010]
[39.11107635 786.33337402]
[28.79617882 775.43743896]
[19.10845184 763.98022461]
[10.07837582 751.99786377]
[1.73436415 739.52807617]
[-5.89733076 726.60998535]
[-12.79269600 713.28436279]
[-18.93003654 699.59301758]
[-24.29004288 685.57916260]
[-28.85584831 671.28674316]
[-32.61309052 656.76080322]
[-35.54994202 642.04711914]
[-37.65716934 627.19183350]
[-38.92813492 612.24182129]
[-39.35884476 597.24401855]
[-38.94794464 582.24566650]
[-37.69672394 567.29394531]
[-35.60911942 552.43597412]
[-32.69170380 537.71832275]
[-28.95365143 523.18750000]
[-24.40672684 508.88906860]
[-19.06523514 494.86810303]
[-12.94598198 481.16870117]
[-6.06822252 467.83395386]
[1.54640400 454.90582275]
[9.87393856 442.42498779]
[18.88817978 430.43072510]
[28.56076622 418.96075439]
[38.86126328 408.05117798]
[49.75726318 397.73632812]
[61.21447754 388.04864502]
[73.19686127 379.01861572]
[85.66671753 370.67465210]
[98.58480835 363.04299927]
[111.91048431 356.14767456]
[125.60182190 350.01037598]
[139.61573792 344.65042114]
[153.90815735 340.08468628]
[150.15185547 325.56262207]
[146.39555359 311.04055786]
[142.63925171 296.51849365]
[139.05177307 293.36587524]
[137.40667725 287.92614746]
[138.99417114 281.50808716]
[135.67192078 266.88061523]
[132.34965515 252.25317383]
[128.70156860 237.70355225]
[117.87021637 227.47950745]
[121.67693329 212.12309265]
[117.70483398 197.65856934]
[107.35021973 191.40489197]
[103.92262268 179.38676453]
[109.78402710 167.89733887]
[106.02772522 153.37527466]
[102.27142334 138.85322571]
[98.51512146 124.33116150]
[94.75881958 109.80910492]
[86.23288727 122.15043640]
[71.50292969 124.98386383]
[59.00693512 116.68626404]
[55.90317535 102.01088715]
[63.96962738 89.36445618]
[78.58546448 85.99140930]
[91.37750244 93.82322693]
[88.93177032 79.02395630]
[79.04791260 66.67001343]
[84.60651398 52.85150146]
[82.16078949 38.05223083]
[79.71505737 23.25296021]
[77.26933289 8.45368862]
[74.71350098 -6.32696438]
[72.04770660 -21.08818245]
[64.33647156 -8.22206688]
[50.58103180 -2.23977208]
[35.91181946 -5.37254477]
[25.80009270 -16.45193863]
[24.01727295 -31.34561348]
[31.22830772 -44.49859619]
[44.74365997 -51.00514984]
[59.52243805 -48.43849182]
[70.05304718 -37.75487900]
[69.16023254 -52.72828293]
[68.26741791 -67.70169067]
[64.63276672 -76.08185577]
[67.47446442 -82.90435791]
[66.80467987 -97.88939667]
[66.13489532 -112.87443542]
[51.74200821 -117.69203949]
[40.06386185 -127.38664246]
[32.67982101 -140.64712524]
[30.58852577 -155.68011475]
[34.07279968 -170.45252991]
[42.66143036 -182.96652222]
[55.19286728 -191.52967834]
[69.97234344 -194.98388672]
[85.00104523 -192.86201477]
[98.24648285 -185.45100403]
[107.91730499 -173.75315857]
[112.70561218 -159.35049438]
[111.96383667 -144.19087219]
[105.79228210 -130.32449341]
[95.02561188 -119.62668610]
[81.11993408 -113.54421997]
[81.78971863 -98.55918121]
[82.45950317 -83.57414246]
[83.24082184 -68.59450531]
[84.13363647 -53.62110138]
[85.02645111 -38.64769363]
[86.80892181 -23.75397682]
[89.47471619 -8.99275970]
[93.75691223 -2.96908879]
[92.06860352 6.00796175]
[94.51432800 20.80723190]
[96.96006012 35.60650253]
[99.40578461 50.40577316]
[109.11470795 61.70117569]
[103.73104095 76.57823181]
[106.17677307 91.37750244]
[109.28088379 106.05280304]
[113.03718567 120.57485962]
[116.79347992 135.09692383]
[120.54978180 149.61898804]
[124.30608368 164.14103699]
[137.51460266 176.97134399]
[132.16935730 193.68646240]
[136.14144897 208.15100098]
[147.25691223 219.40963745]
[143.16609192 233.73144531]
[146.88116455 237.39823914]
[148.64215088 241.69384766]
[148.53672791 245.76863098]
[146.97711182 248.93090820]
[150.29937744 263.55838013]
[153.62162781 278.18582153]
[157.16130066 292.76220703]
[160.91760254 307.28427124]
[164.67390442 321.80633545]
[168.43020630 336.32836914]
[183.14390564 333.39135742]
[197.99914551 331.28396606]
[212.94917297 330.01284790]
[227.94694519 329.58197021]
[242.94529724 329.99270630]
[257.89700317 331.24374390]
[272.75506592 333.33117676]
[287.47268677 336.24844360]
[302.00360107 339.98632812]
[316.30206299 344.53311157]
[330.32308960 349.87442017]
[344.02255249 355.99353027]
[357.35739136 362.87115479]
[370.28558350 370.48562622]
[382.76651001 378.81301880]
[394.76089478 387.82711792]
[406.23095703 397.49960327]
[417.14065552 407.79995728]
[427.45562744 418.69586182]
[437.14343262 430.15295410]
[446.17361450 442.13525391]
[454.51770020 454.60501099]
[462.14950562 467.52301025]
[469.04498291 480.84860229]
[475.18240356 494.53988647]
[480.54251099 508.55374146]
[485.10842896 522.84606934]
[488.86578369 537.37200928]
[491.80273438 552.08569336]
[493.91006470 566.94091797]
[495.18115234 581.89099121]
[495.61196899 596.88873291]
[495.20120239 611.88708496]
[493.95007324 626.83880615]
[491.86257935 641.69683838]
[488.94528198 656.41448975]
[485.20733643 670.94537354]
[480.66052246 685.24377441]
[475.31912231 699.26483154]
[469.19998169 712.96423340]
[462.32232666 726.29907227]
[454.70779419 739.22723389]
[446.38034058 751.70812988]
[437.36618042 763.70245361]
[427.69369507 775.17248535]
[417.39328003 786.08215332]
[406.49734497 796.39709473]
[395.04022217 806.08489990]
[383.05789185 815.11499023]
[370.58810425 823.45904541]
[357.67007446 831.09082031]
[344.34445190 837.98620605]
[330.65313721 844.12359619]
[316.63925171 849.48364258]
[302.34689331 854.04949951]
[287.82098389 857.80682373]
[273.10726929 860.74371338]
[258.25201416 862.85101318]
[243.30198669 864.12200928]
[228.30419922 864.55279541]
[213.30586243 864.14196777]
[198.35415649 862.89074707]
[183.49612427 860.80322266]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 147]
[48 146]
[49 145]
[50 144]
[53 143]
[54 142]
[55 141]
[56 137]
[58 135]
[59 134]
[62 132]
[63 131]
[64 130]
[65 129]
[66 128]
[73 127]
[74 126]
[76 124]
[77 123]
[78 122]
[79 121]
[80 119]
[81 118]
[90 117]
[91 116]
[92 115]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
