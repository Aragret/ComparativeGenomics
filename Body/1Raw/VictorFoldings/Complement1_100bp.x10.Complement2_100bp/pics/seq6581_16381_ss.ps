%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[95.03140259 323.28857422]
[93.68988037 338.24948120]
[90.44615173 352.91598511]
[85.35349274 367.04727173]
[78.49552917 380.41128540]
[69.98487091 392.78857422]
[59.96127701 403.97586060]
[48.58933640 413.78948975]
[36.05578995 422.06829834]
[22.56645203 428.67633057]
[8.34282684 433.50506592]
[-6.38152075 436.47525024]
[-21.36480331 437.53808594]
[-36.36098099 436.67608643]
[-51.12380219 433.90347290]
[-65.41085052 429.26574707]
[-78.98751831 422.83905029]
[-91.63085938 414.72891235]
[-103.13327026 405.06854248]
[-113.30586243 394.01654053]
[-121.98159027 381.75439453]
[-129.01799011 368.48348999]
[-134.29953003 354.42169189]
[-137.73948669 339.79995728]
[-139.28134155 324.85836792]
[-138.89981079 309.84228516]
[-136.60113525 294.99829102]
[-132.42306519 280.57012939]
[-126.43421936 266.79470825]
[-118.73293304 253.89825439]
[-109.44567108 242.09252930]
[-98.72493744 231.57141113]
[-86.74677277 222.50762939]
[-73.70787048 215.05006409]
[-59.82234573 209.32113647]
[-45.31820679 205.41494751]
[-30.43362999 203.39562988]
[-15.41302872 203.29634094]
[-0.50305563 205.11871338]
[14.05145264 208.83282471]
[28.01149940 214.37768555]
[35.28472900 201.25898743]
[42.55795670 188.14028931]
[49.83118820 175.02160645]
[45.49277115 160.81900024]
[52.68198013 147.41117859]
[67.60838318 142.95693970]
[74.88161469 129.83824158]
[82.15484619 116.71955109]
[89.42807007 103.60086060]
[96.60343933 90.42838287]
[103.68054199 77.20285797]
[110.75765228 63.97732544]
[117.83475494 50.75180054]
[124.91186523 37.52627182]
[112.09777832 45.32366562]
[97.28716278 47.69969177]
[82.67706299 44.30187988]
[70.43481445 35.63427353]
[62.37648392 22.98266411]
[59.69746399 8.22384071]
[62.79518127 -6.45281267]
[71.21010590 -18.87010193]
[83.69393158 -27.18599510]
[98.39476013 -30.16688156]
[113.13180542 -27.37055969]
[125.71892548 -19.21185303]
[134.28887939 -6.90105295]
[137.57038879 7.73560524]
[135.07730103 22.52507210]
[144.73811340 11.05037117]
[154.39892578 -0.42432868]
[154.07563782 -13.31844711]
[162.35836792 -22.67686272]
[174.39846802 -23.84414864]
[184.22904968 -35.17374039]
[194.05963135 -46.50333405]
[203.89021301 -57.83292770]
[193.17146301 -68.33276367]
[183.10623169 -79.46062469]
[173.73124695 -91.17590332]
[165.08073425 -103.43586731]
[157.18623352 -116.19576263]
[150.07655334 -129.40904236]
[143.77766418 -143.02748108]
[138.31251526 -157.00140381]
[133.70106506 -171.27980042]
[129.96014404 -185.81059265]
[127.10339355 -200.54072571]
[125.14125061 -215.41648865]
[124.08085632 -230.38357544]
[123.92609406 -245.38737488]
[124.67752075 -260.37316895]
[126.33239746 -275.28622437]
[128.88468933 -290.07217407]
[132.32508850 -304.67703247]
[136.64102173 -319.04751587]
[141.81674194 -333.13119507]
[147.83338928 -346.87664795]
[154.66899109 -360.23379517]
[162.29859924 -373.15380859]
[170.69439697 -385.58959961]
[179.82571411 -397.49578857]
[189.65925598 -408.82888794]
[200.15914917 -419.54760742]
[211.28704834 -429.61276245]
[223.00238037 -438.98770142]
[235.26237488 -447.63815308]
[248.02230835 -455.53262329]
[261.23562622 -462.64221191]
[274.85409546 -468.94107056]
[288.82803345 -474.40612793]
[303.10647583 -479.01751709]
[317.63726807 -482.75836182]
[332.36743164 -485.61505127]
[347.24319458 -487.57711792]
[362.21026611 -488.63745117]
[377.21408081 -488.79214478]
[392.19985962 -488.04064941]
[407.11291504 -486.38571167]
[421.89883423 -483.83334351]
[436.50369263 -480.39288330]
[450.87414551 -476.07687378]
[464.95779419 -470.90109253]
[478.70324707 -464.88436890]
[492.06033325 -458.04870605]
[504.98034668 -450.41903687]
[517.41607666 -442.02319336]
[529.32220459 -432.89181519]
[540.65527344 -423.05822754]
[551.37396240 -412.55828857]
[561.43908691 -401.43032837]
[570.81396484 -389.71496582]
[579.46435547 -377.45492554]
[587.35876465 -364.69494629]
[594.46826172 -351.48159790]
[600.76708984 -337.86309814]
[606.23205566 -323.88912964]
[610.84338379 -309.61068726]
[614.58416748 -295.07986450]
[617.44079590 -280.34970093]
[619.40283203 -265.47393799]
[620.46307373 -250.50683594]
[620.61767578 -235.50302124]
[619.86608887 -220.51725769]
[618.21112061 -205.60420227]
[615.65869141 -190.81829834]
[612.21813965 -176.21347046]
[607.90209961 -161.84301758]
[602.72619629 -147.75939941]
[596.70941162 -134.01397705]
[589.87371826 -120.65691376]
[582.24395752 -107.73695374]
[573.84808350 -95.30123901]
[564.71667480 -83.39514923]
[554.88299561 -72.06212616]
[544.38299561 -61.34351730]
[533.25500488 -51.27844238]
[521.53961182 -41.90362549]
[509.27951050 -33.25327301]
[496.51950073 -25.35894775]
[483.30612183 -18.24946022]
[469.68759155 -11.95074940]
[455.71359253 -6.48579979]
[441.43515015 -1.87455142]
[426.90429688 1.86616921]
[412.17413330 4.72271252]
[397.29833984 6.68465471]
[382.33123779 7.74483776]
[367.32742310 7.89939308]
[352.34167480 7.14775562]
[337.42861938 5.49266911]
[322.64273071 2.94017267]
[308.03790283 -0.50042033]
[293.66748047 -4.81655502]
[279.58389282 -9.99248219]
[265.83847046 -16.00931549]
[252.48146057 -22.84510040]
[239.56153870 -30.47489357]
[227.12585449 -38.87085342]
[215.21980286 -48.00234604]
[205.38922119 -36.67275238]
[195.55865479 -25.34316063]
[185.72807312 -14.01356697]
[183.32850647 3.37059402]
[165.87362671 9.23648167]
[156.21281433 20.71118164]
[146.55200195 32.18588257]
[138.13739014 44.60337830]
[131.06028748 57.82890320]
[123.98317719 71.05443573]
[116.90607452 84.27996063]
[109.82896423 97.50548553]
[109.10485077 105.53344727]
[102.54676819 110.87408447]
[95.27353668 123.99278259]
[88.00030518 137.11148071]
[80.72708130 150.23016357]
[84.85697937 165.24954224]
[77.29401398 178.45014954]
[62.94988251 182.29483032]
[55.67665100 195.41352844]
[48.40342331 208.53221130]
[41.13019180 221.65090942]
[53.22872162 230.55337524]
[64.08946228 240.92991638]
[73.53407288 252.61013794]
[81.40746307 265.40225220]
[87.58034515 279.09619141]
[91.95134735 293.46707153]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 204]
[42 203]
[43 202]
[44 201]
[47 198]
[48 197]
[49 196]
[50 195]
[51 193]
[52 192]
[53 191]
[54 190]
[55 189]
[70 188]
[71 187]
[72 186]
[75 184]
[76 183]
[77 182]
[78 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
