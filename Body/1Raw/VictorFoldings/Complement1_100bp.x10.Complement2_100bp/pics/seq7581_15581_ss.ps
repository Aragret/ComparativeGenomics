%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[124.42675781 466.10711670]
[119.72150421 451.85406494]
[116.27639771 437.24514771]
[114.11766815 422.39154053]
[113.26174164 407.40631104]
[113.71513367 392.40353394]
[115.47438812 377.49734497]
[118.52612305 362.80120850]
[122.84710693 348.42697144]
[128.40444946 334.48406982]
[135.15586853 321.07855225]
[143.04997253 308.31246948]
[152.02668762 296.28302002]
[162.01768494 285.08169556]
[172.94692993 274.79379272]
[184.73124695 265.49758911]
[176.50242615 252.95619202]
[163.05131531 246.55958557]
[161.94981384 230.77677917]
[153.72100830 218.23538208]
[145.49220276 205.69396973]
[137.26339722 193.15257263]
[129.03459167 180.61117554]
[128.75889587 195.60864258]
[121.62618256 208.80426025]
[109.22990417 217.25009155]
[94.33940887 219.05932617]
[80.28128815 213.82777405]
[70.19615936 202.72416687]
[66.33705139 188.22908020]
[69.56611633 173.58076477]
[79.16197205 162.05169678]
[92.98086548 156.21746826]
[107.93563080 157.38150024]
[120.68534851 165.28372192]
[114.61151886 151.56846619]
[108.53768158 137.85319519]
[102.46385193 124.13792419]
[96.39001465 110.42266083]
[88.63388062 123.26174927]
[73.78053284 125.35415649]
[62.77931595 115.15743256]
[63.73991394 100.18822479]
[75.95420837 91.48126984]
[90.41703033 95.45394135]
[85.38011169 81.32491302]
[80.34319305 67.19588470]
[75.30628204 53.06685257]
[70.26936340 38.93782425]
[65.23244476 24.80879593]
[58.55224991 11.37841892]
[50.32344437 -1.16298091]
[42.09463501 -13.70438099]
[28.05493164 -20.99802971]
[27.54201889 -35.88380051]
[19.31321144 -48.42520142]
[11.08440399 -60.96660233]
[2.85559607 -73.50800323]
[-10.52830601 -66.70106506]
[-24.57980537 -61.40781403]
[-39.12833023 -57.69249725]
[-53.99727631 -55.60021210]
[-69.00614929 -55.15636826]
[-83.97274780 -56.36634445]
[-98.71540070 -59.21545410]
[-113.05513763 -63.66911316]
[-126.81789398 -69.67326355]
[-139.83659363 -77.15500641]
[-151.95321655 -86.02353668]
[-163.02066040 -96.17118073]
[-172.90458679 -107.47477722]
[-181.48501587 -119.79708862]
[-188.65779114 -132.98855591]
[-194.33581543 -146.88902283]
[-198.45019531 -161.32975769]
[-200.95097351 -176.13548279]
[-201.80780029 -191.12644958]
[-201.01026917 -206.12068176]
[-198.56803894 -220.93617249]
[-194.51078796 -235.39306641]
[-188.88777161 -249.31588745]
[-181.76721191 -262.53561401]
[-173.23558044 -274.89175415]
[-163.39642334 -286.23434448]
[-152.36918640 -296.42565918]
[-140.28771973 -305.34204102]
[-127.29870605 -312.87518311]
[-113.55979919 -318.93371582]
[-99.23777771 -323.44403076]
[-84.50650787 -326.35140991]
[-69.54480743 -327.62054443]
[-54.53430176 -327.23605347]
[-39.65719986 -325.20257568]
[-25.09409523 -321.54483032]
[-11.02177620 -316.30715942]
[2.38893557 -309.55319214]
[14.97524548 -301.36492920]
[26.58436775 -291.84170532]
[37.07537842 -281.09918213]
[46.32092667 -269.26776123]
[54.20877838 -256.49099731]
[60.64318466 -242.92407227]
[65.54603577 -228.73164368]
[68.85781097 -214.08598328]
[70.53832245 -199.16488647]
[70.56715393 -184.14949036]
[68.94396210 -169.22204590]
[65.68845367 -154.56378174]
[60.84014893 -140.35261536]
[54.45789719 -126.76107025]
[46.61917496 -113.95413208]
[37.41913605 -102.08727264]
[26.96945763 -91.30453491]
[15.39699650 -81.73680878]
[23.62580490 -69.19541168]
[31.85461235 -56.65401077]
[40.08341980 -44.11260986]
[53.53454208 -37.71600342]
[54.63603592 -21.93318939]
[62.86484528 -9.39178848]
[71.09365082 3.14961147]
[69.96064758 -11.80753708]
[73.94494629 -26.26870537]
[82.57846832 -38.53500748]
[94.84696960 -47.16541290]
[109.30915070 -51.14603043]
[124.26601410 -50.00922012]
[137.96043396 -43.88853455]
[148.78361511 -33.50302124]
[155.46405029 -20.07276535]
[157.21693420 -5.17553711]
[153.83633423 9.43855095]
[145.71940613 22.05265045]
[133.81971741 31.18486977]
[119.53523254 35.76236725]
[104.54407501 35.24737549]
[90.60739136 29.70040512]
[79.36147308 19.77187920]
[84.39839172 33.90090942]
[89.43531036 48.02993774]
[94.47222137 62.15896606]
[99.50914001 76.28799438]
[104.54605865 90.41703033]
[110.10528564 104.34882355]
[116.17911530 118.06409454]
[122.25295258 131.77935791]
[128.32678223 145.49462891]
[134.40061951 159.20988464]
[141.57598877 172.38237000]
[149.80479431 184.92376709]
[158.03359985 197.46516418]
[166.26240540 210.00656128]
[174.49121094 222.54797363]
[188.53091431 229.84161377]
[189.04383850 244.72738647]
[197.27264404 257.26879883]
[210.49180603 250.15942383]
[224.28028870 244.22924805]
[238.53315735 239.52339172]
[253.14193726 236.07766724]
[267.99545288 233.91831970]
[282.98062134 233.06176758]
[297.98342896 233.51452637]
[312.88970947 235.27314758]
[327.58596802 238.32426453]
[341.96035767 242.64465332]
[355.90353394 248.20140076]
[369.30932617 254.95225525]
[382.07571411 262.84582520]
[394.10556030 271.82202148]
[405.30731201 281.81256104]
[415.59567261 292.74136353]
[424.89236450 304.52529907]
[433.12661743 317.07464600]
[440.23580933 330.29388428]
[446.16580200 344.08245850]
[450.87145996 358.33541870]
[454.31695557 372.94424438]
[456.47610474 387.79776001]
[457.33245850 402.78295898]
[456.87948608 417.78576660]
[455.12063599 432.69198608]
[452.06933594 447.38821411]
[447.74874878 461.76257324]
[442.19180298 475.70565796]
[435.44073486 489.11135864]
[427.54699707 501.87765503]
[418.57061768 513.90734863]
[408.57995605 525.10894775]
[397.65100098 535.39715576]
[385.86694336 544.69366455]
[373.31747437 552.92779541]
[360.09811401 560.03680420]
[346.30944824 565.96655273]
[332.05645752 570.67205811]
[317.44757080 574.11730957]
[302.59402466 576.27624512]
[287.60882568 577.13238525]
[272.60601807 576.67919922]
[257.69979858 574.92016602]
[243.00363159 571.86865234]
[228.62934875 567.54785156]
[214.68634033 561.99072266]
[201.28073120 555.23950195]
[188.51455688 547.34558105]
[176.48495483 538.36901855]
[165.28350830 528.37817383]
[154.99545288 517.44909668]
[145.69908142 505.66491699]
[137.46516418 493.11532593]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 156]
[17 155]
[19 153]
[20 152]
[21 151]
[22 150]
[23 149]
[35 148]
[36 147]
[37 146]
[38 145]
[39 144]
[45 143]
[46 142]
[47 141]
[48 140]
[49 139]
[50 138]
[51 121]
[52 120]
[53 119]
[55 117]
[56 116]
[57 115]
[58 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
