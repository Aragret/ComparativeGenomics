%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUGxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[86.45610809 536.74926758]
[72.14357758 532.22198486]
[58.32621384 526.35467529]
[45.12914658 519.20050049]
[32.67189026 510.82424927]
[21.06726837 501.30178833]
[10.42037106 490.71932983]
[0.82762265 479.17272949]
[-7.62410116 466.76654053]
[-14.85825825 453.61315918]
[-20.80933380 439.83166504]
[-25.42343330 425.54690552]
[-28.65876961 410.88818359]
[-30.48604202 395.98834229]
[-30.88870239 380.98223877]
[-29.86310196 366.00582886]
[-27.41853333 351.19473267]
[-23.57713127 336.68307495]
[-18.37368584 322.60226440]
[-11.85532284 309.07986450]
[-4.08107424 296.23828125]
[4.87865400 284.19387817]
[14.94271946 273.05566406]
[26.01997757 262.92459106]
[38.01010895 253.89233398]
[50.80452728 246.04072571]
[64.28736115 239.44088745]
[78.33650208 234.15255737]
[92.82472229 230.22366333]
[107.62080383 227.68975830]
[106.50514984 212.73130798]
[105.38950348 197.77284241]
[104.27385712 182.81439209]
[102.60231781 167.90782166]
[100.37719727 153.07377625]
[98.15208435 138.23973083]
[95.92696381 123.40568542]
[93.70184326 108.57164764]
[90.37958527 93.94418335]
[85.97859192 79.60433960]
[81.57759094 65.26448822]
[76.96358490 50.99175644]
[65.19770050 40.41468048]
[68.42882538 25.87476730]
[63.60282516 11.67231178]
[58.77682877 -2.53014374]
[53.95082855 -16.73259926]
[39.45796967 -12.84425068]
[24.74182892 -9.91211033]
[9.86542416 -7.94873190]
[-5.10753965 -6.96252489]
[-20.11294556 -6.95771217]
[-35.08654022 -7.93431330]
[-49.96419907 -9.88814735]
[-64.68222046 -12.81084728]
[-79.17757416 -16.68989754]
[-93.38818359 -21.50868797]
[-107.25320435 -27.24658203]
[-120.71326447 -33.87900925]
[-133.71072388 -41.37757111]
[-146.18991089 -49.71015167]
[-158.09741211 -58.84107590]
[-169.38221741 -68.73123932]
[-179.99601746 -79.33829498]
[-189.89335632 -90.61681366]
[-199.03184509 -102.51850128]
[-207.37236023 -114.99240112]
[-214.87918091 -127.98508453]
[-221.52015686 -141.44093323]
[-227.26686096 -155.30229187]
[-232.09468079 -169.50984192]
[-235.98294067 -184.00273132]
[-238.91500854 -198.71888733]
[-240.87829590 -213.59530640]
[-241.86441040 -228.56826782]
[-241.86914062 -243.57368469]
[-240.89244080 -258.54727173]
[-238.93852234 -273.42492676]
[-236.01573181 -288.14291382]
[-232.13659668 -302.63824463]
[-227.31773376 -316.84884644]
[-221.57975769 -330.71380615]
[-214.94725037 -344.17382812]
[-207.44860840 -357.17123413]
[-199.11595154 -369.65039062]
[-189.98495483 -381.55783081]
[-180.09472656 -392.84259033]
[-169.48760986 -403.45632935]
[-158.20903015 -413.35357666]
[-146.30728149 -422.49200439]
[-133.83334351 -430.83245850]
[-120.84061432 -438.33920288]
[-107.38473511 -444.98010254]
[-93.52333069 -450.72671509]
[-79.31575012 -455.55447388]
[-64.82284546 -459.44262695]
[-50.10667038 -462.37460327]
[-35.23024368 -464.33779907]
[-20.25726700 -465.32382202]
[-5.25186014 -465.32846069]
[9.72172165 -464.35168457]
[24.59935951 -462.39767456]
[39.31734467 -459.47482300]
[53.81264877 -455.59558105]
[68.02320862 -450.77664185]
[81.88816071 -445.03857422]
[95.34813690 -438.40597534]
[108.34550476 -430.90728760]
[120.82460022 -422.57455444]
[132.73199463 -413.44348145]
[144.01667786 -403.55319214]
[154.63035583 -392.94601440]
[164.52755737 -381.66735840]
[173.66590881 -369.76556396]
[182.00627136 -357.29156494]
[189.51293945 -344.29879761]
[196.15376282 -330.84289551]
[201.90031433 -316.98144531]
[206.72796631 -302.77383423]
[210.61605835 -288.28091431]
[213.54792786 -273.56472778]
[215.51104736 -258.68826294]
[216.49699402 -243.71530151]
[216.50154114 -228.70988464]
[215.52467346 -213.73631287]
[213.57057190 -198.85868835]
[210.64761353 -184.14071655]
[206.76831055 -169.64543152]
[201.94926453 -155.43490601]
[196.21112061 -141.56999207]
[189.57846069 -128.11004639]
[182.07966614 -115.11272430]
[173.74687195 -102.63368225]
[164.61573792 -90.72634125]
[154.72537231 -79.44171143]
[144.11813354 -68.82810211]
[132.83943176 -58.93096542]
[120.93757629 -49.79268646]
[108.46353149 -41.45239258]
[95.47071838 -33.94580078]
[82.01475525 -27.30505753]
[68.15328217 -21.55859756]
[72.97928619 -7.35614157]
[77.80528259 6.84631443]
[82.63127899 21.04876900]
[94.05197144 30.60999107]
[91.16603851 46.16576004]
[94.97805786 49.04283524]
[97.02318573 54.34514618]
[95.91743469 60.86349106]
[100.31843567 75.20333862]
[104.71943665 89.54319000]
[109.62580872 75.36829376]
[120.89732361 65.47118378]
[135.58764648 62.43892670]
[149.85675049 67.06415558]
[159.97471619 78.13784027]
[163.29676819 92.76535034]
[158.95448303 107.12309265]
[148.08296204 117.45797729]
[133.52397156 121.06850433]
[119.08320618 117.01087952]
[108.53588867 106.34652710]
[110.76100922 121.18057251]
[112.98612213 136.01461792]
[115.21124268 150.84866333]
[117.43635559 165.68270874]
[128.31549072 155.35581970]
[143.19267273 157.27137756]
[151.10101318 170.01728821]
[146.21075439 184.19773865]
[132.12684631 189.35945129]
[119.23230743 181.69874573]
[120.34796143 196.65719604]
[121.46360779 211.61564636]
[122.57925415 226.57411194]
[137.58752441 226.88510132]
[152.49826050 228.62133789]
[167.17645264 231.76708984]
[181.48913574 236.29386902]
[195.30671692 242.16065979]
[208.50404358 249.31434631]
[220.96160889 257.69012451]
[232.56657410 267.21218872]
[243.21385193 277.79425049]
[252.80702209 289.34051514]
[261.25921631 301.74636841]
[268.49383545 314.89950562]
[274.44540405 328.68075562]
[279.06002808 342.96536255]
[282.29589844 357.62396240]
[284.12371826 372.52374268]
[284.52691650 387.52981567]
[283.50189209 402.50625610]
[281.05786133 417.31747437]
[277.21697998 431.82925415]
[272.01403809 445.91024780]
[265.49618530 459.43289185]
[257.72238159 472.27474976]
[248.76310730 484.31948853]
[238.69944763 495.45806885]
[227.62255859 505.58956909]
[215.63275146 514.62225342]
[202.83862305 522.47430420]
[189.35603333 529.07464600]
[175.30708313 534.36346436]
[160.81900024 538.29290771]
[146.02301025 540.82739258]
[131.05310059 541.94384766]
[116.04485321 541.63232422]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 176]
[31 175]
[32 174]
[33 173]
[34 167]
[35 166]
[36 165]
[37 164]
[38 163]
[39 152]
[40 151]
[41 150]
[42 147]
[44 145]
[45 144]
[46 143]
[47 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
