%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGGxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[167.26478577 247.96665955]
[168.53970337 233.01400757]
[170.91542053 218.19633484]
[174.37899780 203.59460449]
[178.91148376 189.28852844]
[184.48814392 175.35624695]
[191.07850647 161.87388611]
[178.12550354 154.30950928]
[165.17251587 146.74513245]
[152.21951294 139.18074036]
[139.26651001 131.61636353]
[126.31351471 124.05198669]
[113.21682739 133.10913086]
[97.48327637 135.56072998]
[82.25183105 130.91766357]
[70.56129456 120.10626221]
[64.74402618 105.28350067]
[65.96061707 89.40663147]
[52.89643097 82.03594208]
[39.83224487 74.66525269]
[26.76805878 67.29456329]
[13.70387363 59.92387390]
[0.58517975 52.65064240]
[-12.58729649 45.47527695]
[-25.75977135 38.29991150]
[-38.93224716 31.12454414]
[-47.03233337 43.75711441]
[-56.01298141 55.77964401]
[-65.82843018 67.13086700]
[-76.42865753 77.75293732]
[-87.75965881 87.59172821]
[-99.76367950 96.59709930]
[-112.37954712 104.72316742]
[-125.54299164 111.92852783]
[-139.18692017 118.17644501]
[-153.24180603 123.43509674]
[-167.63603210 127.67768097]
[-182.29624939 130.88256836]
[-197.14775085 133.03344727]
[-212.11483765 134.11935425]
[-227.12127686 134.13473511]
[-242.09057617 133.07952881]
[-256.94644165 130.95910645]
[-271.61318970 127.78428650]
[-286.01611328 123.57122803]
[-300.08172607 118.34140778]
[-313.73846436 112.12147522]
[-326.91662598 104.94313049]
[-339.54913330 96.84294891]
[-351.57159424 87.86220551]
[-362.92276001 78.04666901]
[-373.54473877 67.44635773]
[-383.38345337 56.11528778]
[-392.38873291 44.11119843]
[-400.51470947 31.49526215]
[-407.71994019 18.33176804]
[-413.96777344 4.68779278]
[-419.22631836 -9.36713505]
[-423.46878052 -23.76139450]
[-426.67358398 -38.42163467]
[-428.82434082 -53.27314758]
[-429.91012573 -68.24025726]
[-429.92538452 -83.24668884]
[-428.87005615 -98.21597290]
[-426.74954224 -113.07183838]
[-423.57458496 -127.73857117]
[-419.36141968 -142.14143372]
[-414.13150024 -156.20703125]
[-407.91146851 -169.86369324]
[-400.73300171 -183.04182434]
[-392.63275146 -195.67427063]
[-383.65191650 -207.69667053]
[-373.83627319 -219.04774475]
[-363.23590088 -229.66964722]
[-351.90475464 -239.50827026]
[-339.90057373 -248.51345825]
[-327.28457642 -256.63934326]
[-314.12103271 -263.84448242]
[-300.47702026 -270.09219360]
[-286.42205811 -275.35061646]
[-272.02774048 -279.59298706]
[-257.36749268 -282.79766846]
[-242.51596069 -284.94830322]
[-227.54884338 -286.03396606]
[-212.54240417 -286.04913330]
[-197.57313538 -284.99371338]
[-182.71728516 -282.87304688]
[-168.05058289 -279.69799805]
[-153.64775085 -275.48471069]
[-139.58218384 -270.25469971]
[-125.92556763 -264.03454590]
[-112.74749756 -256.85598755]
[-100.11510468 -248.75561523]
[-88.09278870 -239.77470398]
[-76.74179077 -229.95898438]
[-66.11996460 -219.35850525]
[-56.28143311 -208.02729797]
[-47.27633286 -196.02307129]
[-39.15055466 -183.40699768]
[-31.94550514 -170.24339294]
[-25.69789696 -156.59931946]
[-20.43956947 -142.54431152]
[-16.19731712 -128.14999390]
[-12.99275875 -113.48970795]
[-10.84222221 -98.63816071]
[-9.75666809 -83.67103577]
[-9.74162769 -68.66460419]
[-10.79717731 -53.69532776]
[-12.91793823 -38.83950043]
[-16.09310341 -24.17281723]
[-20.30649376 -9.77001953]
[-25.53663635 4.29550123]
[-31.75688171 17.95206833]
[-18.58440590 25.12743378]
[-5.41192961 32.30279922]
[7.76054621 39.47816849]
[15.13814449 39.91730118]
[21.07456398 46.85968781]
[34.13874817 54.23037720]
[47.20293427 61.60106659]
[60.26712036 68.97175598]
[73.33130646 76.34244537]
[84.33988953 67.97406769]
[97.70468903 64.42429352]
[111.41483307 66.22721863]
[123.40750885 73.11157227]
[131.87831116 84.04154205]
[135.55271912 97.37260437]
[133.87789917 111.09899139]
[146.83088684 118.66336823]
[159.78388977 126.22775269]
[172.73689270 133.79212952]
[185.68988037 141.35650635]
[198.64288330 148.92088318]
[207.14692688 136.55607605]
[216.54092407 124.85308075]
[226.77355957 113.87582397]
[237.78897095 103.68424988]
[249.52696228 94.33403015]
[261.92346191 85.87622833]
[274.91070557 78.35704041]
[288.41781616 71.81752777]
[302.37100220 66.29341888]
[316.69406128 61.81488037]
[331.30874634 58.40637207]
[346.13528442 56.08650970]
[361.09262085 54.86796188]
[376.09912109 54.75738525]
[391.07281494 55.75538635]
[405.93188477 57.85651398]
[420.59521484 61.04928589]
[434.98272705 65.31627655]
[449.01580811 70.63416290]
[462.61782837 76.97392273]
[475.71447754 84.30091095]
[488.23425293 92.57511139]
[500.10876465 101.75135040]
[511.27313232 111.77948761]
[521.66644287 122.60476685]
[531.23187256 134.16806030]
[539.91717529 146.40620422]
[547.67498779 159.25238037]
[554.46289062 172.63639832]
[560.24377441 186.48516846]
[564.98608398 200.72305298]
[568.66394043 215.27230835]
[571.25726318 230.05343628]
[572.75189209 244.98573303]
[573.13958740 259.98760986]
[572.41833496 274.97717285]
[570.59204102 289.87255859]
[567.67065430 304.59234619]
[563.67016602 319.05621338]
[558.61236572 333.18511963]
[552.52490234 346.90191650]
[545.44110107 360.13165283]
[537.39953613 372.80212402]
[528.44421387 384.84411621]
[518.62396240 396.19180298]
[507.99252319 406.78329468]
[496.60787964 416.56066895]
[484.53222656 425.47055054]
[471.83154297 433.46429443]
[458.57519531 440.49822998]
[444.83554077 446.53390503]
[430.68768311 451.53842163]
[416.20886230 455.48440552]
[401.47814941 458.35028076]
[386.57598877 460.12045288]
[371.58383179 460.78521729]
[356.58349609 460.34094238]
[341.65695190 458.79006958]
[326.88568115 456.14105225]
[312.35040283 452.40838623]
[298.13049316 447.61242676]
[284.30358887 441.77938843]
[270.94525146 434.94110107]
[258.12841797 427.13494873]
[245.92309570 418.40356445]
[234.39593506 408.79461670]
[223.60990906 398.36059570]
[213.62391663 387.15850830]
[204.49249268 375.24948120]
[196.26553345 362.69860840]
[188.98796082 349.57443237]
[182.69950867 335.94863892]
[177.43453979 321.89559937]
[173.22181702 307.49212646]
[170.08433533 292.81686401]
[168.03921509 277.94998169]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 134]
[8 133]
[9 132]
[10 131]
[11 130]
[12 129]
[18 122]
[19 121]
[20 120]
[21 119]
[22 118]
[23 116]
[24 115]
[25 114]
[26 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
