%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGGxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[109.68241882 353.56777954]
[95.36553192 358.22830200]
[80.39248657 359.80993652]
[65.41783905 358.24356079]
[51.09621048 353.59762573]
[38.05368805 346.07522583]
[26.86043167 336.00524902]
[18.00576401 323.82788086]
[11.87677288 310.07543945]
[8.74139023 295.34918213]
[8.73668194 280.29281616]
[11.86285400 265.56460571]
[17.98324394 251.80833435]
[26.83029366 239.62542725]
[38.01725006 229.54843140]
[51.05506134 222.01789856]
[65.37377930 217.36300659]
[80.34745026 215.78724670]
[81.90796661 200.86865234]
[83.46849060 185.95004272]
[85.02901459 171.03143311]
[86.58953857 156.11283875]
[88.15006256 141.19422913]
[89.71058655 126.27561951]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[95.37081146 72.16385651]
[96.82022858 57.23404694]
[98.15846252 42.29386139]
[99.49669647 27.35367584]
[100.83493042 12.41349125]
[85.95968628 10.46675205]
[71.17621613 7.91489124]
[56.50914383 4.76215744]
[41.98286819 1.01379776]
[27.62157440 -3.32394934]
[13.44916344 -8.24386406]
[-0.51077777 -13.73775768]
[-14.23501301 -19.79648590]
[-27.70069885 -26.40996361]
[-40.88542557 -33.56718826]
[-53.76724625 -41.25623703]
[-66.32472229 -49.46432495]
[-78.53694916 -58.17778015]
[-90.38359833 -67.38210297]
[-101.84496307 -77.06198120]
[-112.90196228 -87.20129395]
[-123.53618622 -97.78316498]
[-133.72994995 -108.78998566]
[-143.46626282 -120.20343781]
[-152.72894287 -132.00451660]
[-161.50256348 -144.17359924]
[-169.77252197 -156.69041443]
[-177.52505493 -169.53413391]
[-184.74726868 -182.68336487]
[-191.42710876 -196.11625671]
[-197.55349731 -209.81042480]
[-203.11622620 -223.74307251]
[-208.10601807 -237.89103699]
[-212.51458740 -252.23074341]
[-216.33459473 -266.73834229]
[-219.55967712 -281.38967896]
[-222.18446350 -296.16036987]
[-224.20458984 -311.02584839]
[-225.61669922 -325.96133423]
[-226.41842651 -340.94198608]
[-226.60845947 -355.94287109]
[-226.18646240 -370.93902588]
[-225.15313721 -385.90548706]
[-223.51022339 -400.81735229]
[-221.26042175 -415.64978027]
[-218.40751648 -430.37811279]
[-214.95622253 -444.97784424]
[-210.91230774 -459.42462158]
[-206.28250122 -473.69442749]
[-201.07449341 -487.76351929]
[-195.29696655 -501.60848999]
[-188.95951843 -515.20623779]
[-182.07270813 -528.53424072]
[-174.64801025 -541.57019043]
[-166.69776917 -554.29248047]
[-158.23522949 -566.67993164]
[-149.27444458 -578.71185303]
[-139.83036804 -590.36828613]
[-129.91870117 -601.62976074]
[-119.55593872 -612.47760010]
[-108.75932312 -622.89379883]
[-97.54684448 -632.86083984]
[-85.93714142 -642.36230469]
[-73.94955444 -651.38232422]
[-61.60403061 -659.90588379]
[-48.92111588 -667.91876221]
[-35.92192078 -675.40771484]
[-22.62808228 -682.36016846]
[-9.06172562 -688.76458740]
[4.75457001 -694.61035156]
[18.79780769 -699.88769531]
[33.04461288 -704.58782959]
[47.47127533 -708.70294189]
[62.05378342 -712.22619629]
[76.76786041 -715.15173340]
[91.58902740 -717.47460938]
[106.49259949 -719.19110107]
[121.45378876 -720.29821777]
[136.44767761 -720.79418945]
[151.44932556 -720.67816162]
[166.43376160 -719.95031738]
[181.37602234 -718.61187744]
[196.25126648 -716.66510010]
[211.03472900 -714.11322021]
[225.70179749 -710.96044922]
[240.22805786 -707.21203613]
[254.58934021 -702.87420654]
[268.76174927 -697.95428467]
[282.72164917 -692.46032715]
[296.44589233 -686.40155029]
[309.91156006 -679.78808594]
[323.09625244 -672.63079834]
[335.97805786 -664.94171143]
[348.53549194 -656.73358154]
[360.74771118 -648.02008057]
[372.59432983 -638.81573486]
[384.05566406 -629.13586426]
[395.11264038 -618.99652100]
[405.74682617 -608.41461182]
[415.94055176 -597.40771484]
[425.67684937 -585.99426270]
[434.93948364 -574.19317627]
[443.71307373 -562.02404785]
[451.98300171 -549.50720215]
[459.73550415 -536.66345215]
[466.95767212 -523.51422119]
[473.63748169 -510.08129883]
[479.76382446 -496.38711548]
[485.32650757 -482.45443726]
[490.31625366 -468.30648804]
[494.72479248 -453.96676636]
[498.54476929 -439.45913696]
[501.76980591 -424.80780029]
[504.39453125 -410.03710938]
[506.41464233 -395.17163086]
[507.82669067 -380.23614502]
[508.62838745 -365.25549316]
[508.81835938 -350.25457764]
[508.39633179 -335.25842285]
[507.36294556 -320.29196167]
[505.72000122 -305.38012695]
[503.47015381 -290.54769897]
[500.61721802 -275.81936646]
[497.16589355 -261.21966553]
[493.12191772 -246.77288818]
[488.49206543 -232.50308228]
[483.28402710 -218.43400574]
[477.50643921 -204.58906555]
[471.16897583 -190.99130249]
[464.28213501 -177.66334534]
[456.85739136 -164.62739563]
[448.90710449 -151.90513611]
[440.44451904 -139.51774597]
[431.48373413 -127.48583984]
[422.03961182 -115.82944489]
[412.12789917 -104.56796265]
[401.76510620 -93.72013855]
[390.96847534 -83.30402374]
[379.75595093 -73.33695984]
[368.14624023 -63.83553314]
[356.15863037 -54.81555939]
[343.81307983 -46.29204941]
[331.13012695 -38.27919006]
[318.13092041 -30.79031754]
[304.83706665 -23.83789825]
[291.27069092 -17.43350410]
[277.45437622 -11.58779144]
[263.41113281 -6.31049347]
[249.16430664 -1.61039186]
[234.73762512 2.50469017]
[220.15510559 6.02790356]
[205.44102478 8.95338345]
[190.61985779 11.27626228]
[175.71627808 12.99267292]
[160.75508118 14.09975815]
[145.76118469 14.59567547]
[130.75953674 14.47959995]
[115.77511597 13.75172520]
[114.43688202 28.69190979]
[113.09864807 43.63209534]
[111.76041412 58.57228088]
[114.29463196 65.51486969]
[110.28941345 73.72438049]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[104.62918854 127.83614349]
[103.06866455 142.75474548]
[101.50814056 157.67335510]
[99.94762421 172.59196472]
[98.38710022 187.51055908]
[96.82657623 202.42916870]
[95.26605225 217.34777832]
[109.58950043 221.98808289]
[122.63498688 229.50532532]
[133.83219910 239.57092285]
[142.69166565 251.74481201]
[148.82606506 265.49481201]
[151.96723938 280.21984863]
[151.97787476 295.27621460]
[148.85748291 310.00567627]
[142.74250793 323.76431274]
[133.90025330 335.95071411]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 200]
[19 199]
[20 198]
[21 197]
[22 196]
[23 195]
[24 194]
[25 193]
[27 191]
[28 190]
[29 188]
[30 187]
[31 186]
[32 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
