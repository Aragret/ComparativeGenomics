%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[282.13842773 546.58013916]
[292.69845581 535.87799072]
[304.87603760 527.06005859]
[298.19583130 513.62969971]
[291.51565552 500.19931030]
[284.83544922 486.76892090]
[269.92309570 487.06341553]
[256.30566406 480.82839966]
[246.70643616 469.25189209]
[243.07058716 454.59579468]
[246.17124939 439.75421143]
[255.44584656 427.68179321]
[248.76565552 414.25140381]
[242.08546448 400.82104492]
[229.48976135 392.87133789]
[230.27156067 377.06945801]
[223.59136963 363.63909912]
[216.91116333 350.20870972]
[201.99879456 350.50320435]
[188.38137817 344.26818848]
[178.78215027 332.69168091]
[175.14630127 318.03558350]
[178.24694824 303.19400024]
[187.52156067 291.12158203]
[180.84136963 277.69122314]
[174.16116333 264.26083374]
[159.03511047 255.36314392]
[160.32960510 236.99453735]
[153.45019531 223.66510010]
[140.73753357 215.90382385]
[141.28398132 200.09205627]
[134.40457153 186.76263428]
[127.52516174 173.43319702]
[123.32852936 171.15344238]
[120.51947784 166.21316528]
[120.64604950 159.60290527]
[114.16654968 146.07456970]
[107.68705750 132.54621887]
[101.10702515 119.06648254]
[87.40441132 114.35643768]
[80.95155334 101.38312531]
[85.46259308 87.61370850]
[78.78240204 74.18333435]
[72.10220337 60.75296021]
[65.42201233 47.32258606]
[50.70938492 42.20629501]
[44.12603760 28.49082375]
[49.09430695 14.49611378]
[42.41411209 1.06573749]
[35.63412094 -12.31453609]
[28.75470734 -25.64396477]
[29.03100967 -10.64651012]
[26.22536659 4.08876610]
[20.45707703 17.93531227]
[11.97141361 30.30436707]
[1.12918782 40.66999054]
[-11.60858154 48.59143066]
[-25.70027924 53.73186493]
[-40.54671860 55.87272263]
[-55.51662064 54.92296600]
[-69.97345734 50.92298508]
[-83.30252075 44.04286194]
[-94.93704224 34.57513809]
[-104.38233185 22.92238617]
[-111.23675537 9.58009148]
[-115.20886993 -4.88442755]
[-116.12977600 -19.85613251]
[-113.96031189 -34.69841766]
[-108.79273224 -48.78018188]
[-100.84675598 -61.50266266]
[-90.46025848 -72.32489014]
[-78.07487488 -80.78670502]
[-64.21723938 -86.52829742]
[-49.47658157 -89.30554199]
[-34.47968674 -89.00033569]
[-19.86422920 -85.62567139]
[-6.25166512 -79.32502747]
[5.77919340 -70.36631775]
[15.71678734 -59.13047409]
[23.13863564 -46.09508514]
[22.24581909 -61.06849289]
[13.70083618 -74.38366699]
[20.66687775 -87.54890442]
[19.77406120 -102.52230835]
[18.88124657 -117.49571228]
[17.98843002 -132.46911621]
[14.35378075 -140.84928894]
[17.19547462 -147.67178345]
[16.52569008 -162.65682983]
[13.01621151 -171.09017944]
[15.95916748 -177.86961365]
[15.51256180 -192.86296082]
[15.06595612 -207.85632324]
[6.23044205 -217.25294495]
[6.16713190 -229.75012207]
[14.36455727 -238.64556885]
[14.14122963 -253.64390564]
[13.91790199 -268.64224243]
[-0.10161982 -274.58975220]
[-10.48527050 -285.72976685]
[-15.43402004 -300.13217163]
[-14.09046841 -315.30169678]
[-6.68739319 -328.61013794]
[5.49257803 -337.75170898]
[20.33919144 -341.14257812]
[35.28018188 -338.19525146]
[47.72693253 -329.42037964]
[55.52296448 -316.33825684]
[57.31757736 -301.21545410]
[52.79983521 -286.67208862]
[42.75246429 -275.22784424]
[28.91623878 -268.86557007]
[29.13956642 -253.86723328]
[29.36289406 -238.86889648]
[39.16143036 -224.31019592]
[30.05930519 -208.30291748]
[30.50591087 -193.30957031]
[30.95251846 -178.31622314]
[31.51072884 -163.32661438]
[32.18051529 -148.34156799]
[32.96183777 -133.36193848]
[33.85465240 -118.38853455]
[34.74746704 -103.41512299]
[35.64028168 -88.44171906]
[44.12140656 -76.19754791]
[37.21922684 -61.96130753]
[38.11204147 -46.98789978]
[42.08413696 -32.52337646]
[48.96355057 -19.19394875]
[54.82462692 -14.69177532]
[55.84448624 -5.61445713]
[62.52468109 7.81591892]
[76.68283081 12.29725456]
[83.64881897 25.82240295]
[78.85238647 40.64239120]
[85.53258514 54.07276535]
[92.21277618 67.50314331]
[98.89297485 80.93351746]
[112.59558868 85.64356232]
[119.04844666 98.61687469]
[114.53740692 112.38629150]
[121.16114807 118.67626190]
[121.21540070 126.06671906]
[127.69490051 139.59506226]
[134.17439270 153.12341309]
[140.85458374 166.55378723]
[147.73399353 179.88322449]
[154.61341858 193.21264648]
[167.81814575 201.92733765]
[166.77963257 216.78569031]
[173.65904236 230.11512756]
[185.68672180 234.77319336]
[191.14219666 246.01693726]
[187.59155273 257.58065796]
[194.27174377 271.01101685]
[200.95193481 284.44140625]
[216.17523193 284.32870483]
[229.88197327 290.81036377]
[239.37640381 302.55242920]
[242.81701660 317.19219971]
[239.57351685 331.81375122]
[230.34153748 343.52853394]
[237.02174377 356.95889282]
[243.70193481 370.38928223]
[256.77545166 379.29959106]
[255.51583862 394.14083862]
[262.19601440 407.57122803]
[268.87622070 421.00158691]
[284.09951782 420.88888550]
[297.80624390 427.37057495]
[307.30068970 439.11264038]
[310.74130249 453.75241089]
[307.49780273 468.37393188]
[298.26583862 480.08871460]
[304.94601440 493.51910400]
[311.62622070 506.94946289]
[318.30642700 520.37988281]
[332.68576050 515.98852539]
[347.59182739 514.02398682]
[362.61791992 514.53985596]
[377.35415649 517.52203369]
[391.39849854 522.88922119]
[404.36779785 530.49493408]
[415.90826416 540.13171387]
[425.70504761 551.53662109]
[433.49090576 564.39862061]
[439.05340576 578.36669922]
[442.24084473 593.05993652]
[442.96621704 608.07739258]
[441.20974731 623.00939941]
[437.01937866 637.44860840]
[430.50939941 651.00109863]
[421.85742188 663.29711914]
[411.29943848 674.00128174]
[399.12356567 682.82159424]
[385.66189575 689.51733398]
[371.28167725 693.90594482]
[356.37524414 695.86761475]
[341.34924316 695.34881592]
[326.61358643 692.36383057]
[312.57028198 686.99395752]
[299.60244751 679.38574219]
[288.06384277 669.74670410]
[278.26925659 658.33990479]
[270.48587036 645.47637939]
[264.92605591 631.50720215]
[261.74145508 616.81341553]
[261.01898193 601.79583740]
[262.77832031 586.86413574]
[266.97149658 572.42578125]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 177]
[4 176]
[5 175]
[6 174]
[12 168]
[13 167]
[14 166]
[16 164]
[17 163]
[18 162]
[24 156]
[25 155]
[26 154]
[28 151]
[29 150]
[31 148]
[32 147]
[33 146]
[36 145]
[37 144]
[38 143]
[39 141]
[42 138]
[43 137]
[44 136]
[45 135]
[48 132]
[49 131]
[50 129]
[51 128]
[80 127]
[81 126]
[83 124]
[84 123]
[85 122]
[86 121]
[88 120]
[89 119]
[91 118]
[92 117]
[93 116]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
