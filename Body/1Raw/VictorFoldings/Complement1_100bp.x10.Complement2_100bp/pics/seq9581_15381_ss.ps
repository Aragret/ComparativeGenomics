%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[56.07024765 550.84869385]
[43.14076233 558.46112061]
[29.80130768 565.32989502]
[16.09461594 571.43298340]
[2.06459260 576.75085449]
[-12.24381828 581.26647949]
[-26.78478241 584.96533203]
[-41.51171875 587.83563232]
[-56.37745667 589.86810303]
[-71.33437347 591.05633545]
[-86.33455658 591.39642334]
[-101.32995605 590.88739014]
[-116.27254486 589.53076172]
[-131.11444092 587.33093262]
[-145.80812073 584.29498291]
[-160.30648804 580.43255615]
[-174.56314087 575.75610352]
[-188.53236389 570.28051758]
[-202.16944885 564.02343750]
[-215.43067932 557.00482178]
[-228.27360535 549.24719238]
[-240.65707397 540.77545166]
[-252.54139709 531.61663818]
[-263.88854980 521.80010986]
[-274.66213989 511.35739136]
[-284.82766724 500.32186890]
[-294.35260010 488.72888184]
[-303.20639038 476.61560059]
[-311.36068726 464.02081299]
[-318.78936768 450.98486328]
[-325.46865845 437.54953003]
[-331.37713623 423.75781250]
[-336.49584961 409.65393066]
[-340.80847168 395.28305054]
[-344.30114746 380.69116211]
[-346.96267700 365.92507935]
[-348.78454590 351.03207397]
[-349.76095581 336.05981445]
[-349.88870239 321.05633545]
[-349.16744995 306.06964111]
[-347.59945679 291.14776611]
[-345.18978882 276.33847046]
[-341.94610596 261.68923950]
[-337.87887573 247.24699402]
[-333.00106812 233.05798340]
[-327.32833862 219.16764832]
[-320.87881470 205.62051392]
[-313.67321777 192.45994568]
[-305.73458862 179.72811890]
[-297.08837891 167.46580505]
[-287.76226807 155.71229553]
[-277.78613281 144.50524902]
[-267.19195557 133.88053894]
[-256.01364136 123.87223053]
[-244.28698730 114.51235962]
[-232.04960632 105.83090973]
[-219.34065247 97.85570526]
[-206.20086670 90.61228180]
[-192.67233276 84.12384796]
[-178.79837036 78.41118622]
[-164.62344360 73.49259949]
[-150.19294739 69.38383484]
[-135.55310059 66.09806061]
[-120.75081635 63.64579773]
[-105.83350372 62.03490829]
[-90.84894562 61.27054596]
[-75.84514618 61.35516357]
[-60.87016296 62.28848648]
[-45.97196960 64.06752777]
[-31.19828606 66.68659210]
[-16.59643745 70.13728333]
[-2.21320152 74.40854645]
[11.90535069 79.48670959]
[25.71399117 85.35549164]
[39.16848755 91.99610138]
[52.22574234 99.38726807]
[64.84392548 107.50531006]
[76.98262024 116.32423401]
[86.47151947 104.70697021]
[88.90633392 90.93876648]
[101.91121674 85.80413055]
[111.40011597 74.18686676]
[120.88901520 62.56960678]
[130.37791443 50.95234299]
[139.86680603 39.33507919]
[138.47189331 23.82082939]
[148.26048279 12.17444515]
[163.05953979 10.94021130]
[172.54843140 -0.67705184]
[182.03733826 -12.29431534]
[191.52622986 -23.91157913]
[201.01513672 -35.52884293]
[210.50402832 -47.14610672]
[199.75079346 -57.61783981]
[189.95115662 -68.98694611]
[181.17970276 -81.16688538]
[173.50318909 -94.06496429]
[166.98004150 -107.58302307]
[161.65989685 -121.61817169]
[157.58325195 -136.06359863]
[154.78114319 -150.80935669]
[153.27487183 -165.74322510]
[153.07592773 -180.75155640]
[154.18580627 -195.72010803]
[156.59608459 -210.53495789]
[160.28839111 -225.08337402]
[165.23463440 -239.25460815]
[171.39717102 -252.94082642]
[178.72909546 -266.03787231]
[187.17462158 -278.44601440]
[196.66944885 -290.07089233]
[207.14134216 -300.82397461]
[218.51057434 -310.62344360]
[230.69064331 -319.39474487]
[243.58883667 -327.07107544]
[257.10696411 -333.59402466]
[271.14221191 -338.91397095]
[285.58767700 -342.99041748]
[300.33349609 -345.79232788]
[315.26739502 -347.29837036]
[330.27569580 -347.49713135]
[345.24423218 -346.38702393]
[360.05908203 -343.97656250]
[374.60742188 -340.28402710]
[388.77859497 -335.33758545]
[402.46472168 -329.17486572]
[415.56164551 -321.84274292]
[427.96969604 -313.39706421]
[439.59442139 -303.90206909]
[450.34738159 -293.43002319]
[460.14669800 -282.06063843]
[468.91781616 -269.88046265]
[476.59396362 -256.98214722]
[483.11672974 -243.46392822]
[488.43646240 -229.42861938]
[492.51272583 -214.98307800]
[495.31442261 -200.23724365]
[496.82025146 -185.30332947]
[497.01879883 -170.29499817]
[495.90847778 -155.32647705]
[493.49780273 -140.51168823]
[489.80508423 -125.96337891]
[484.85842896 -111.79228210]
[478.69552612 -98.10623932]
[471.36322021 -85.00941467]
[462.91735840 -72.60148621]
[453.42218018 -60.97689056]
[442.95001221 -50.22409058]
[431.58050537 -40.42493439]
[419.40017700 -31.65398979]
[406.50177002 -23.97801781]
[392.98345947 -17.45543480]
[378.94805908 -12.13588428]
[364.50247192 -8.05985069]
[349.75659180 -5.25835609]
[334.82266235 -3.75272131]
[319.81433105 -3.55440593]
[304.84582520 -4.66491938]
[290.03106689 -7.07580948]
[275.48281860 -10.76872826]
[261.31176758 -15.71556854]
[247.62582397 -21.87868309]
[234.52909851 -29.21116447]
[222.12129211 -37.65720749]
[212.63240051 -26.03994370]
[203.14349365 -14.42267990]
[193.65460205 -2.80541682]
[184.16569519 8.81184673]
[174.67680359 20.42910957]
[176.42207336 35.17663956]
[166.96447754 47.09336853]
[151.48406982 48.82397842]
[141.99517822 60.44124222]
[132.50628662 72.05850220]
[123.01737976 83.67576599]
[113.52848053 95.29302979]
[111.09366608 109.06123352]
[98.08878326 114.19586945]
[88.59988403 125.81313324]
[99.66475677 135.94671631]
[110.13860321 146.69007874]
[119.98786163 158.00878906]
[129.18099976 169.86660767]
[137.68853760 182.22552490]
[145.48324585 195.04595947]
[152.54016113 208.28684998]
[158.83665466 221.90579224]
[164.35258484 235.85913086]
[169.07025146 250.10218811]
[172.97456360 264.58935547]
[176.05300903 279.27416992]
[178.29573059 294.10964966]
[179.69554138 309.04824829]
[180.24795532 324.04211426]
[179.95120239 339.04321289]
[178.80622864 354.00350952]
[176.81671143 368.87506104]
[173.98901367 383.61022949]
[170.33221436 398.16183472]
[165.85800171 412.48324585]
[160.58071899 426.52859497]
[154.51727295 440.25286865]
[147.68708801 453.61212158]
[140.11204529 466.56356812]
[131.81639099 479.06570435]
[122.82672119 491.07849121]
[113.17182159 502.56344604]
[102.88262939 513.48376465]
[91.99208832 523.80450439]
[80.53509521 533.49255371]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[78 179]
[79 178]
[81 176]
[82 175]
[83 174]
[84 173]
[85 172]
[88 169]
[89 168]
[90 167]
[91 166]
[92 165]
[93 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
