%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUGxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[124.19572449 362.88876343]
[112.09069824 371.79769897]
[98.76754761 378.75427246]
[84.53858948 383.59545898]
[69.73735809 386.20776367]
[54.71083069 386.52993774]
[39.81123734 384.55441284]
[25.38785553 380.32754517]
[11.77878475 373.94839478]
[-0.69695759 365.56649780]
[-11.74692154 355.37832642]
[-21.11208153 343.62271118]
[-28.57290268 330.57525635]
[-33.95449448 316.54174805]
[-37.13070297 301.85122681]
[-38.02707672 286.84799194]
[-36.62259674 271.88375854]
[-32.95019531 257.30932617]
[-27.09594917 243.46635437]
[-19.19709778 230.67930603]
[-9.43879700 219.24794006]
[1.95020187 209.44023132]
[14.70292568 201.48608398]
[28.52043343 195.57196045]
[43.07881927 191.83647156]
[58.03681946 190.36721802]
[73.04379272 191.19860840]
[76.14790344 176.52331543]
[79.25200653 161.84800720]
[82.35611725 147.17269897]
[77.42009735 133.11976624]
[87.84572601 121.21949005]
[90.94983673 106.54418182]
[93.94461060 91.84618378]
[96.82988739 77.12628937]
[95.40960693 68.10295105]
[99.86924744 62.20944977]
[102.97335815 47.53414536]
[106.07746887 32.85884476]
[91.54492188 29.13417625]
[77.18354797 24.79608536]
[63.01923370 19.85238838]
[49.07749557 14.31199455]
[35.38345718 8.18488789]
[21.96180534 1.48211050]
[8.83671761 -5.78425932]
[-3.96814919 -13.60112667]
[-16.42972183 -21.95440483]
[-28.52554131 -30.82904243]
[-40.23381042 -40.20904541]
[-51.53343201 -50.07750702]
[-62.40404510 -60.41664886]
[-72.82604980 -71.20783997]
[-82.78067780 -82.43162537]
[-92.24998474 -94.06778717]
[-101.21691132 -106.09535980]
[-109.66528320 -118.49265289]
[-117.57989502 -131.23733521]
[-124.94646454 -144.30644226]
[-131.75173950 -157.67642212]
[-137.98342896 -171.32318115]
[-143.63034058 -185.22212219]
[-148.68225098 -199.34820557]
[-153.13009644 -213.67596436]
[-156.96585083 -228.17959595]
[-160.18258667 -242.83293152]
[-162.77452087 -257.60961914]
[-164.73696899 -272.48297119]
[-166.06642151 -287.42620850]
[-166.76045227 -302.41241455]
[-166.81784058 -317.41458130]
[-166.23844910 -332.40563965]
[-165.02334595 -347.35864258]
[-163.17471313 -362.24655151]
[-160.69589233 -377.04263306]
[-157.59133911 -391.72015381]
[-153.86665344 -406.25268555]
[-149.52853394 -420.61404419]
[-144.58480835 -434.77835083]
[-139.04440308 -448.72009277]
[-132.91726685 -462.41412354]
[-126.21446991 -475.83575439]
[-118.94808197 -488.96084595]
[-111.13119507 -501.76568604]
[-102.77789307 -514.22723389]
[-93.90323639 -526.32305908]
[-84.52321625 -538.03131104]
[-74.65473175 -549.33093262]
[-64.31557465 -560.20153809]
[-53.52436829 -570.62347412]
[-42.30056381 -580.57812500]
[-30.66438675 -590.04742432]
[-18.63680649 -599.01428223]
[-6.23949623 -607.46264648]
[6.50520229 -615.37725830]
[19.57432175 -622.74377441]
[32.94431305 -629.54907227]
[46.59107971 -635.78070068]
[60.49002838 -641.42761230]
[74.61611938 -646.47949219]
[88.94388580 -650.92730713]
[103.44751740 -654.76306152]
[118.10086823 -657.97973633]
[132.87754822 -660.57165527]
[147.75090027 -662.53411865]
[162.69415283 -663.86352539]
[177.68035889 -664.55755615]
[192.68251038 -664.61486816]
[207.67358398 -664.03546143]
[222.62657166 -662.82037354]
[237.51449585 -660.97167969]
[252.31056213 -658.49285889]
[266.98806763 -655.38830566]
[281.52059937 -651.66357422]
[295.88195801 -647.32543945]
[310.04626465 -642.38165283]
[323.98800659 -636.84124756]
[337.68200684 -630.71411133]
[351.10363770 -624.01129150]
[364.22869873 -616.74487305]
[377.03353882 -608.92797852]
[389.49508667 -600.57464600]
[401.59088135 -591.69995117]
[413.29913330 -582.31994629]
[424.59872437 -572.45141602]
[435.46929932 -562.11224365]
[445.89126587 -551.32104492]
[455.84585571 -540.09722900]
[465.31512451 -528.46099854]
[474.28201294 -516.43341064]
[482.73034668 -504.03610229]
[490.64489746 -491.29138184]
[498.01144409 -478.22222900]
[504.81668091 -464.85223389]
[511.04833984 -451.20547485]
[516.69519043 -437.30651855]
[521.74707031 -423.18041992]
[526.19482422 -408.85263062]
[530.03057861 -394.34899902]
[533.24725342 -379.69564819]
[535.83911133 -364.91897583]
[537.80151367 -350.04559326]
[539.13092041 -335.10235596]
[539.82495117 -320.11614990]
[539.88226318 -305.11398315]
[539.30279541 -290.12292480]
[538.08764648 -275.16992188]
[536.23901367 -260.28201294]
[533.76013184 -245.48594666]
[530.65551758 -230.80844116]
[526.93078613 -216.27590942]
[522.59265137 -201.91455078]
[517.64886475 -187.75025940]
[512.10839844 -173.80854797]
[505.98123169 -160.11454773]
[499.27838135 -146.69291687]
[492.01196289 -133.56787109]
[484.19500732 -120.76304626]
[475.84167480 -108.30151367]
[466.96697998 -96.20573425]
[457.58694458 -84.49750519]
[447.71841431 -73.19793701]
[437.37921143 -62.32737350]
[426.58798218 -51.90541458]
[415.36413574 -41.95084381]
[403.72793579 -32.48159409]
[391.70031738 -23.51472855]
[379.30297852 -15.06641197]
[366.55825806 -7.15186596]
[353.48910522 0.21464725]
[340.11911011 7.01985216]
[326.47232056 13.25148487]
[312.57336426 18.89831734]
[298.44723511 23.95017052]
[284.11947632 28.39794350]
[269.61581421 32.23361969]
[254.96246338 35.45028687]
[240.18577576 38.04214859]
[225.31240845 40.00453568]
[210.36915588 41.33390808]
[195.38294983 42.02787399]
[180.38079834 42.08517838]
[165.38972473 41.50572586]
[150.43675232 40.29055023]
[135.54882812 38.44184875]
[120.75276947 35.96295166]
[117.64865875 50.63825607]
[114.54454803 65.31356049]
[111.54977417 80.01155853]
[108.66450500 94.73145294]
[110.32765961 102.61856079]
[105.62513733 109.64829254]
[102.52102661 124.32360077]
[107.23503113 139.42620850]
[97.03142548 150.27680969]
[93.92731476 164.95211792]
[90.82320404 179.62742615]
[87.71909332 194.30271912]
[101.77738190 199.61918640]
[114.85931396 207.01943970]
[126.65821075 216.32998657]
[136.89749146 227.33259583]
[145.33715820 239.76934814]
[151.77934265 253.34869385]
[156.07304382 267.75231934]
[158.11759949 282.64260864]
[157.86511230 297.67047119]
[155.32145691 312.48364258]
[150.54629517 326.73489380]
[143.65156555 340.09014893]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 198]
[28 197]
[29 196]
[30 195]
[32 193]
[33 192]
[34 190]
[35 189]
[37 188]
[38 187]
[39 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
