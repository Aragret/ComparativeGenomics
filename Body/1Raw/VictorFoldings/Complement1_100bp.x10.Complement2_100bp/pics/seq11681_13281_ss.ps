%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUAxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[53.61375427 531.36462402]
[50.80731964 516.53137207]
[52.10808182 501.49105835]
[57.41950989 487.35983276]
[66.34746552 475.18634033]
[78.22942352 465.87390137]
[92.18367767 460.11355591]
[90.40121460 445.21984863]
[88.61875153 430.32614136]
[86.83628082 415.43240356]
[77.64141083 403.71475220]
[83.68399811 389.09292603]
[81.90153503 374.19921875]
[80.11906433 359.30548096]
[71.65570068 371.68981934]
[57.56857681 376.84277344]
[43.11183929 372.84240723]
[33.67749786 361.18081665]
[32.78432465 346.20742798]
[40.76545715 333.50695801]
[54.64412308 327.81640625]
[69.24392700 331.25814819]
[79.11997223 342.54962158]
[79.11997223 327.54962158]
[79.11997223 312.54962158]
[79.11997223 297.54962158]
[79.11997223 282.54962158]
[66.24374390 278.60012817]
[54.98701477 271.17486572]
[46.26629639 260.86703491]
[40.79482651 248.50500488]
[39.02421951 235.08575439]
[41.10719681 221.69441223]
[46.88449097 209.41656494]
[55.89695358 199.25021362]
[67.42205048 192.02467346]
[80.53177643 188.33293152]
[80.97838593 173.33958435]
[81.42499542 158.34623718]
[81.87159729 143.35289001]
[82.31820679 128.35954285]
[75.26013184 141.59523010]
[65.78681183 153.22520447]
[54.25240707 162.81465149]
[41.08814240 170.00506592]
[26.78616905 174.52763367]
[11.88118362 176.21327209]
[-3.06958413 174.99897766]
[-17.50718880 170.93011475]
[-30.89186859 164.15882874]
[-42.72322845 154.93826294]
[-52.55894470 143.61312866]
[-60.03129959 130.60682678]
[-64.86093903 116.40560150]
[-66.86729431 101.54039001]
[-65.97536469 86.56693268]
[-62.21849442 72.04502106]
[-55.73713684 58.51757050]
[-46.77359390 46.49031067]
[-35.66298676 36.41289139]
[-22.82068443 28.66206741]
[-8.72681141 23.52760506]
[6.09172630 21.20145988]
[21.08092499 21.77059937]
[35.68040466 25.21374321]
[49.34434891 31.40216827]
[61.56192398 40.10451508]
[71.87636566 50.99544144]
[79.90206146 63.66778183]
[85.33896637 77.64776611]
[87.98381805 92.41275024]
[87.73842621 107.40467072]
[87.27133179 93.43064117]
[98.93214417 85.71591187]
[105.81156158 72.38648224]
[90.94606781 74.39079285]
[80.00550079 64.12902069]
[81.05483246 49.16577148]
[93.32053375 40.53139114]
[107.76078796 44.59082413]
[113.73083496 58.34995651]
[121.58258820 45.56911469]
[129.43434143 32.78827286]
[130.06542969 16.97965813]
[143.32014465 10.18540001]
[151.17190552 -2.59544253]
[159.02365112 -15.37628460]
[153.92178345 -33.62142563]
[163.61000061 -49.52901459]
[181.53637695 -53.23856735]
[189.00411987 -66.24752045]
[196.47186279 -79.25647736]
[203.93960571 -92.26542664]
[211.40734863 -105.27437592]
[205.76451111 -123.35952759]
[214.97480774 -139.54852295]
[232.78279114 -143.79016113]
[239.85989380 -157.01568604]
[246.93699646 -170.24122620]
[234.75344849 -179.03010559]
[223.85008240 -189.36453247]
[214.42150879 -201.06005859]
[206.63598633 -213.90797424]
[200.63243103 -227.67898560]
[196.51802063 -242.12734985]
[194.36614990 -256.99520874]
[194.21524048 -272.01721191]
[196.06797791 -286.92529297]
[199.89129639 -301.45336914]
[205.61695862 -315.34222412]
[213.14280701 -328.34396362]
[222.33451843 -340.22656250]
[233.02804565 -350.77795410]
[245.03257751 -359.80981445]
[258.13385010 -367.16101074]
[272.09808350 -372.70031738]
[286.67602539 -376.32888794]
[301.60757446 -377.98199463]
[316.62619019 -377.63006592]
[331.46392822 -375.27944946]
[345.85592651 -370.97207642]
[359.54537964 -364.78479004]
[372.28796387 -356.82803345]
[383.85629272 -347.24380493]
[394.04388428 -336.20312500]
[402.66894531 -323.90307617]
[409.57757568 -310.56311035]
[414.64645386 -296.42132568]
[417.78512573 -281.73010254]
[418.93756104 -266.75161743]
[418.08322144 -251.75315857]
[415.23733521 -237.00241089]
[410.45071411 -222.76261902]
[403.80877686 -209.28791809]
[395.43002319 -196.81875610]
[385.46398926 -185.57766724]
[374.08856201 -175.76527405]
[361.50674438 -167.55667114]
[347.94305420 -161.09837341]
[333.63955688 -156.50561523]
[318.85150146 -153.86038208]
[303.84283447 -153.20985413]
[288.88137817 -154.56567383]
[274.23413086 -157.90361023]
[260.16253662 -163.16410828]
[253.08541870 -149.93858337]
[246.00831604 -136.71305847]
[251.60317993 -126.77003479]
[251.70455933 -115.24157715]
[246.17158508 -104.99071503]
[236.27700806 -98.61901855]
[224.41629028 -97.80664062]
[216.94856262 -84.79768372]
[209.48081970 -71.78873444]
[202.01307678 -58.77978134]
[194.54533386 -45.77082825]
[199.84167480 -35.66563416]
[199.59976196 -24.13926506]
[193.76403809 -14.05768776]
[183.68414307 -7.98341513]
[171.80450439 -7.52452946]
[163.95274353 5.25631285]
[156.10098267 18.03715515]
[156.03150940 32.93159866]
[142.21519470 40.64002991]
[134.36343384 53.42087173]
[126.51168060 66.20171356]
[119.14099121 79.26589966]
[112.26157379 92.59532928]
[112.72866821 106.56935883]
[101.06785583 114.28408813]
[97.31155396 128.80613708]
[96.86494446 143.79949951]
[96.41834259 158.79284668]
[95.97173309 173.78619385]
[95.52513123 188.77954102]
[111.06113434 194.73565674]
[123.59976959 205.63389587]
[131.63711548 220.14381409]
[134.21711731 236.50318909]
[131.04534912 252.73204041]
[122.52238464 266.87228394]
[109.69339752 277.22396851]
[94.11997223 282.54962158]
[94.11997223 297.54962158]
[94.11997223 312.54962158]
[94.11997223 327.54962158]
[94.11997223 342.54962158]
[95.01278687 357.52304077]
[96.79524994 372.41674805]
[98.57771301 387.31045532]
[107.90008545 400.09341431]
[101.73000336 413.64993286]
[103.51246643 428.54367065]
[105.29492950 443.43737793]
[107.07740021 458.33108521]
[121.99687195 460.63583374]
[135.74079895 466.88140869]
[147.28929138 476.60430908]
[155.78538513 489.08303833]
[160.59858704 503.39163208]
[161.37174988 518.46826172]
[158.04748535 533.19415283]
[150.87248230 546.47656250]
[140.37916565 557.32977295]
[127.34622955 564.94854736]
[112.74078369 568.76739502]
[97.64665985 568.50292969]
[83.18393707 564.17486572]
[70.42584229 556.10430908]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 196]
[8 195]
[9 194]
[10 193]
[12 191]
[13 190]
[14 189]
[23 188]
[24 187]
[25 186]
[26 185]
[27 184]
[37 176]
[38 175]
[39 174]
[40 173]
[41 172]
[72 171]
[74 169]
[75 168]
[81 167]
[82 166]
[83 165]
[85 163]
[86 162]
[87 161]
[90 156]
[91 155]
[92 154]
[93 153]
[94 152]
[97 147]
[98 146]
[99 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
