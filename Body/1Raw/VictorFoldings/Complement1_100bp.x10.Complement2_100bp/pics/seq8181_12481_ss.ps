%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[203.10317993 415.48083496]
[214.91290283 406.17886353]
[207.63967896 393.06018066]
[200.36643982 379.94146729]
[193.09321594 366.82278442]
[185.81999207 353.70410156]
[181.77105713 368.14730835]
[169.45687866 376.71240234]
[154.50729370 375.48352051]
[143.75708008 365.02249146]
[142.12107849 350.11199951]
[150.34724426 337.56884766]
[164.67468262 333.12765503]
[178.55447388 338.82009888]
[166.45428467 330.13479614]
[168.17523193 314.40744019]
[162.30627441 300.60327148]
[156.43731689 286.79910278]
[150.56835938 272.99493408]
[138.46815491 264.30963135]
[140.18911743 248.58229065]
[134.32015991 234.77810669]
[128.45120239 220.97393799]
[123.78112030 235.22842407]
[111.69229126 244.10874939]
[96.69355011 244.30278015]
[84.37905121 235.73814392]
[79.34179688 221.60922241]
[83.46056366 207.18577576]
[95.19915009 197.84739685]
[110.17935944 197.07704163]
[122.81467438 205.16294861]
[118.62767029 190.75917053]
[114.44065857 176.35539246]
[110.25364685 161.95161438]
[99.27127075 151.88996887]
[102.84893036 136.47857666]
[98.66191864 122.07479095]
[94.47490692 107.67101288]
[90.56925201 104.16960907]
[88.90338135 98.72918701]
[90.38453674 92.77577972]
[86.62823486 78.25371552]
[82.87193298 63.73165894]
[79.11563110 49.20959854]
[71.57885742 62.17867661]
[57.51215744 67.38713837]
[43.34664917 62.45374298]
[35.55860901 49.63397980]
[37.70862198 34.78886414]
[48.81373215 24.70538521]
[63.79683304 23.99357605]
[75.80887604 32.98041153]
[73.58375549 18.14636803]
[61.15823746 8.75252724]
[59.11296844 -6.32300043]
[68.14513397 -18.11094284]
[65.92001343 -32.94498825]
[63.69490051 -47.77902985]
[61.46978378 -62.61307526]
[51.77095413 -75.11280823]
[57.53467178 -88.84702301]
[52.67663574 -74.65549469]
[43.90002441 -62.49115753]
[31.96410179 -53.40634918]
[17.90144348 -48.18700027]
[2.92861080 -47.28462982]
[-11.65909672 -50.77730560]
[-24.59969711 -58.36287308]
[-34.77369690 -69.38510895]
[-41.30094528 -82.89048004]
[-43.61677170 -97.71063232]
[-41.52082825 -112.56348419]
[-35.19443893 -126.16410065]
[-25.18490219 -137.33590698]
[-12.35813713 -145.11241150]
[2.17620873 -148.82089233]
[17.16077042 -148.14050293]
[31.29923248 -143.13012695]
[43.36847687 -134.22320557]
[52.32439423 -122.19026947]
[57.39152145 -108.07573700]
[59.39553452 -122.94126892]
[61.39954758 -137.80679321]
[63.40356064 -152.67231750]
[56.21838760 -163.38381958]
[58.19357300 -175.72409058]
[67.73168945 -183.16390991]
[69.95680237 -197.99795532]
[72.18192291 -212.83200073]
[74.40704346 -227.66604614]
[60.07295227 -232.19157410]
[46.62334061 -238.90383911]
[34.38941956 -247.63754272]
[23.67245865 -258.17761230]
[14.73637199 -270.26449585]
[7.80121946 -283.60055542]
[3.03778481 -297.85736084]
[0.56337231 -312.68380737]
[0.43891656 -327.71481323]
[2.66748238 -342.58020020]
[7.19418955 -356.91390991]
[13.90756321 -370.36297607]
[22.64228058 -382.59616089]
[33.18324280 -393.31225586]
[45.27086639 -402.24734497]
[58.60748672 -409.18139648]
[72.86466980 -413.94366455]
[87.69132996 -416.41683960]
[102.72234344 -416.54006958]
[117.58755493 -414.31027222]
[131.92089844 -409.78237915]
[145.36940002 -403.06790161]
[157.60188293 -394.33218384]
[168.31710815 -383.79034424]
[177.25119019 -371.70196533]
[184.18414307 -358.36477661]
[188.94522095 -344.10720825]
[191.41719055 -329.28033447]
[191.53916931 -314.24929810]
[189.30815125 -299.38427734]
[184.77908325 -285.05133057]
[178.06349182 -271.60336304]
[169.32675171 -259.37161255]
[158.78401184 -248.65725708]
[146.69491577 -239.72416687]
[133.35716248 -232.79231262]
[119.09918213 -228.03240967]
[104.27211761 -225.56166077]
[89.24108124 -225.44093323]
[87.01596832 -210.60688782]
[84.79084778 -195.77284241]
[82.56573486 -180.93879700]
[89.85937500 -164.97729492]
[78.26908875 -150.66830444]
[76.26507568 -135.80278015]
[74.26106262 -120.93725586]
[72.25704956 -106.07172394]
[72.36871338 -91.07214355]
[81.90838623 -79.63343811]
[76.30382538 -64.83818817]
[78.52894592 -50.00414658]
[80.75405884 -35.17010498]
[82.97917938 -20.33605957]
[95.07241821 -11.71694374]
[97.54032135 3.29518890]
[88.41780090 15.92125034]
[90.64291382 30.75529289]
[93.63769531 45.45329666]
[97.39398956 59.97535706]
[101.15029144 74.49741364]
[104.90659332 89.01947784]
[108.87869263 103.48400116]
[113.06570435 117.88777924]
[117.25271606 132.29156494]
[128.53457642 143.38346863]
[124.65742493 157.76460266]
[128.84443665 172.16838074]
[133.03144836 186.57215881]
[137.21846008 200.97595215]
[142.25537109 215.10498047]
[148.12434387 228.90914917]
[153.99330139 242.71333313]
[166.51327515 252.38600159]
[164.37252808 267.12597656]
[170.24150085 280.93014526]
[176.11045837 294.73431396]
[181.97941589 308.53848267]
[194.49940491 318.21118164]
[192.35865784 332.95114136]
[198.93867493 346.43087769]
[206.21191406 359.54956055]
[213.48513794 372.66824341]
[220.75836182 385.78695679]
[228.03160095 398.90563965]
[242.17747498 393.81738281]
[256.95639038 391.06430054]
[271.98556519 390.71771240]
[286.87570190 392.78659058]
[301.24108887 397.21734619]
[314.70965576 403.89523315]
[326.93249512 412.64727783]
[337.59304810 423.24673462]
[346.41516113 435.41909790]
[353.17031860 448.84906006]
[357.68356323 463.18875122]
[359.83795166 478.06677246]
[359.57772827 493.09768677]
[356.90960693 507.89218140]
[351.90270996 522.06707764]
[344.68670654 535.25512695]
[335.44851685 547.11480713]
[324.42745972 557.33892822]
[311.90896606 565.66259766]
[298.21734619 571.87030029]
[283.70718384 575.80114746]
[268.75436401 577.35333252]
[253.74618530 576.48669434]
[239.07142639 573.22369385]
[225.11015320 567.64880371]
[212.22402954 559.90643311]
[200.74684143 550.19720459]
[190.97584534 538.77246094]
[183.16415405 525.92828369]
[177.51409912 511.99725342]
[174.17204285 497.34027100]
[173.22454834 482.33700562]
[174.69615173 467.37603760]
[178.54875183 452.84490967]
[184.68252563 439.11999512]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 175]
[3 174]
[4 173]
[5 172]
[6 171]
[14 170]
[16 168]
[17 167]
[18 166]
[19 165]
[21 163]
[22 162]
[23 161]
[32 160]
[33 159]
[34 158]
[35 157]
[37 155]
[38 154]
[39 153]
[42 152]
[43 151]
[44 150]
[45 149]
[53 148]
[54 147]
[57 144]
[58 143]
[59 142]
[60 141]
[62 139]
[82 138]
[83 137]
[84 136]
[85 135]
[88 133]
[89 132]
[90 131]
[91 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
