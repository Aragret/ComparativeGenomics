%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[172.15264893 640.47583008]
[163.52839661 628.19299316]
[155.92047119 615.25598145]
[149.37820435 601.74877930]
[143.94406128 587.75891113]
[139.65325928 573.37713623]
[136.53363037 558.69671631]
[134.60540771 543.81286621]
[133.88108826 528.82214355]
[134.36538696 513.82177734]
[136.05514526 498.90899658]
[138.93942261 484.18054199]
[142.99949646 469.73193359]
[148.20904541 455.65689087]
[154.53427124 442.04669189]
[161.93417358 428.98959351]
[170.36074829 416.57028198]
[179.75933838 404.86929321]
[190.06898499 393.96255493]
[201.22285461 383.92074585]
[213.14857483 374.80902100]
[225.76882935 366.68649292]
[218.69171143 353.46096802]
[211.61460876 340.23544312]
[204.53750610 327.00991821]
[197.46040344 313.78439331]
[183.17510986 309.72656250]
[175.80950928 296.41482544]
[180.16256714 281.45858765]
[173.08546448 268.23306274]
[166.00836182 255.00753784]
[162.75791931 253.64118958]
[160.00778198 250.63255310]
[158.52264404 246.23396301]
[158.92555237 241.02966309]
[152.44606018 227.50131226]
[145.96655273 213.97297668]
[133.49061584 205.83662415]
[134.50759888 190.04814148]
[128.02809143 176.51979065]
[121.54859924 162.99145508]
[109.07265472 154.85510254]
[110.08963776 139.06661987]
[103.61013794 125.53827667]
[97.13064575 112.00992584]
[96.65020752 127.00223541]
[91.82887268 141.20626831]
[83.08373260 153.39324951]
[71.17133331 162.50888062]
[57.12221146 167.76457214]
[42.15176010 168.70564270]
[27.55507278 165.25068665]
[14.59490871 157.69857788]
[4.39245129 146.70268250]
[-2.16968441 133.21423340]
[-4.52380800 118.40010834]
[-2.46626496 103.54189301]
[3.82494736 89.92497253]
[13.80557537 78.72733307]
[26.61219597 70.91769409]
[41.13690948 67.17166138]
[56.12317657 67.81330872]
[70.27454376 72.78712463]
[82.36676788 81.66282654]
[91.35208893 93.66947174]
[88.90636444 78.87020111]
[76.34236145 69.66239929]
[74.07286835 54.61899567]
[82.92852783 42.69788361]
[80.48280334 27.89861488]
[78.03707123 13.09934330]
[66.02589417 -0.85820478]
[72.84106445 -17.02979469]
[70.17527008 -31.79101372]
[67.50947571 -46.55223083]
[62.30770874 -32.48305893]
[52.17438507 -21.42341042]
[38.61273575 -15.01391792]
[23.63454056 -14.20539188]
[9.46173191 -19.11777115]
[-1.80324101 -29.02233505]
[-8.48928547 -42.44979858]
[-9.60456753 -57.40827942]
[-4.98364067 -71.67877960]
[4.68800783 -83.14434052]
[17.97564697 -90.10413361]
[32.90813065 -91.52570343]
[47.27032089 -87.19816589]
[58.93166733 -77.76349640]
[66.16169739 -64.62308502]
[66.60829926 -79.61643219]
[67.05490875 -94.60978699]
[67.50151062 -109.60313416]
[67.72483826 -124.60147095]
[67.72483826 -139.60147095]
[67.72483826 -154.60147095]
[67.72483826 -169.60147095]
[67.61317444 -184.60105896]
[67.38984680 -199.59939575]
[53.70441818 -206.45268250]
[44.78087234 -218.88768005]
[42.66978073 -234.04689026]
[47.85625076 -248.44685364]
[59.14847565 -258.77856445]
[73.95157623 -262.66787720]
[88.86392212 -259.22103882]
[100.45874786 -249.23011780]
[106.07166290 -234.99095154]
[104.41284943 -219.77560425]
[95.86349487 -207.08044434]
[82.38818359 -199.82272339]
[82.61151123 -184.82438660]
[85.85424805 -178.18312073]
[82.72483826 -169.60147095]
[82.72483826 -154.60147095]
[82.72483826 -139.60147095]
[82.72483826 -124.60147095]
[85.40852356 -120.65091705]
[85.63898468 -114.97254181]
[82.49486542 -109.15653229]
[82.04825592 -94.16317749]
[81.60165405 -79.16983032]
[81.15504456 -64.17647552]
[82.27069092 -49.21802521]
[84.93649292 -34.45681000]
[87.60228729 -19.69559097]
[97.35768127 -12.54305458]
[99.69940948 -0.26705858]
[92.83634186 10.65361595]
[95.28207397 25.45288658]
[97.72779846 40.25215912]
[109.94802094 48.69026947]
[112.63916016 63.66399384]
[103.70563507 76.42447662]
[106.15135956 91.22374725]
[110.65898895 105.53043365]
[117.13848877 119.05877686]
[123.61798096 132.58712769]
[136.55738831 141.69110107]
[135.07695007 156.51194763]
[141.55644226 170.04029846]
[148.03593445 183.56864929]
[160.97534180 192.67262268]
[159.49490356 207.49346924]
[165.97439575 221.02182007]
[172.45388794 234.55017090]
[179.23388672 247.93043518]
[186.31098938 261.15597534]
[193.38809204 274.38150024]
[208.24653625 279.05746460]
[215.23532104 292.57083130]
[210.68592834 306.70727539]
[217.76303101 319.93280029]
[224.84013367 333.15832520]
[231.91725159 346.38385010]
[238.99435425 359.60937500]
[252.75386047 353.61587524]
[266.95101929 348.74896240]
[281.49377441 345.04025269]
[296.28781128 342.51379395]
[311.23718262 341.18597412]
[326.24490356 341.06536865]
[341.21365356 342.15277100]
[356.04638672 344.44116211]
[370.64685059 347.91567993]
[384.92041016 352.55377197]
[398.77447510 358.32537842]
[412.11917114 365.19308472]
[424.86798096 373.11230469]
[436.93820190 382.03173828]
[448.25155640 391.89349365]
[458.73471069 402.63360596]
[468.31961060 414.18243408]
[476.94415283 426.46511841]
[484.55236816 439.40194702]
[491.09490967 452.90902710]
[496.52935791 466.89877319]
[500.82049561 481.28042603]
[503.94042969 495.96078491]
[505.86898804 510.84454346]
[506.59362793 525.83526611]
[506.10968018 540.83569336]
[504.42022705 555.74847412]
[501.53628540 570.47698975]
[497.47653198 584.92565918]
[492.26730347 599.00085449]
[485.94235229 612.61120605]
[478.54275513 625.66845703]
[470.11645508 638.08795166]
[460.71813965 649.78912354]
[450.40872192 660.69610596]
[439.25506592 670.73815918]
[427.32955933 679.85015869]
[414.70947266 687.97296143]
[401.47671509 695.05395508]
[387.71707153 701.04718018]
[373.51980591 705.91375732]
[358.97695923 709.62213135]
[344.18286133 712.14825439]
[329.23348999 713.47576904]
[314.22576904 713.59606934]
[299.25701904 712.50830078]
[284.42434692 710.21960449]
[269.82394409 706.74475098]
[255.55049133 702.10632324]
[241.69656372 696.33441162]
[228.35202026 689.46643066]
[215.60337830 681.54693604]
[203.53335571 672.62725830]
[192.22019958 662.76525879]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 156]
[23 155]
[24 154]
[25 153]
[26 152]
[29 149]
[30 148]
[31 147]
[35 146]
[36 145]
[37 144]
[39 142]
[40 141]
[41 140]
[43 138]
[44 137]
[45 136]
[65 135]
[66 134]
[69 131]
[70 130]
[71 129]
[73 126]
[74 125]
[75 124]
[90 123]
[91 122]
[92 121]
[93 120]
[94 117]
[95 116]
[96 115]
[97 114]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
