%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[112.76618958 685.06994629]
[97.84557343 683.42071533]
[83.14929962 680.36059570]
[68.81046295 675.91729736]
[54.95891571 670.13116455]
[41.72010803 663.05456543]
[29.21392632 654.75152588]
[17.55363846 645.29730225]
[6.84484386 634.77746582]
[-2.81547689 623.28735352]
[-11.33983517 610.93096924]
[-18.65103149 597.82025146]
[-24.68285370 584.07391357]
[-29.38067627 569.81646729]
[-32.70195007 555.17700195]
[-34.61660004 540.28814697]
[-35.10728455 525.28466797]
[-34.16956329 510.30249023]
[-31.81192398 495.47729492]
[-28.05571938 480.94332886]
[-22.93496895 466.83224487]
[-16.49604797 453.27185059]
[-8.79726696 440.38488770]
[0.09164924 428.28811646]
[10.09019947 417.09106445]
[21.10783195 406.89517212]
[33.04476929 397.79272461]
[45.79290771 389.86621094]
[59.23678970 383.18737793]
[73.25466919 377.81671143]
[87.71958923 373.80288696]
[102.50054932 371.18222046]
[117.46369171 369.97848511]
[117.68701935 354.98013306]
[117.91034698 339.98181152]
[118.13368225 324.98345947]
[118.35700989 309.98513794]
[107.83093262 299.50955200]
[107.84376526 284.29592896]
[118.90286255 273.32626343]
[119.12619019 258.32791138]
[119.34951782 243.32957458]
[118.12254333 228.37983704]
[115.45674896 213.61862183]
[112.79095459 198.85740662]
[109.90567780 184.13751221]
[106.80156708 169.46221924]
[103.69745636 154.78691101]
[100.59334564 140.11160278]
[97.48924255 125.43630219]
[94.38513184 110.76100159]
[90.15159607 125.15117645]
[81.52877045 137.42500305]
[69.42664337 146.28720093]
[55.12237930 150.80252075]
[40.12554169 150.49443054]
[26.01878548 145.39547729]
[14.29082680 136.04373169]
[6.17934656 123.42613220]
[2.54036856 108.87423706]
[3.75792217 93.92372894]
[9.70351696 80.15238953]
[19.74969864 69.01352692]
[32.83627319 61.68265915]
[47.58217621 58.93342972]
[62.43124390 61.05596924]
[75.81642151 67.82627869]
[86.32512665 78.52987671]
[92.84841919 92.03737640]
[93.51820374 77.05233765]
[94.18798828 62.06729507]
[94.85777283 47.08225632]
[95.52755737 32.09721756]
[94.85777283 17.11217880]
[92.85375977 2.24665117]
[90.84974670 -12.61887741]
[86.60187531 -20.70549583]
[88.92826080 -27.72045898]
[87.14579773 -42.61417770]
[85.36333466 -57.50789261]
[83.58086395 -72.40161133]
[66.48794556 -81.01367188]
[58.10538864 -98.05310822]
[61.65805435 -116.55464935]
[75.53260040 -129.07623291]
[73.08687592 -143.87550354]
[70.64114380 -158.67477417]
[68.19541931 -173.47404480]
[53.17087936 -174.78326416]
[38.94422913 -179.78858948]
[26.40976906 -188.17536926]
[16.35542107 -199.41641235]
[9.41321278 -212.80508423]
[6.01953650 -227.49977112]
[6.38772154 -242.57675171]
[10.49462414 -257.08825684]
[18.08208084 -270.12213135]
[28.67313576 -280.85897827]
[41.60202789 -288.62393188]
[56.05603790 -292.92886353]
[71.12657166 -293.50317383]
[85.86628723 -290.31072998]
[99.34862518 -283.55221558]
[110.72608185 -273.65252686]
[119.28346252 -261.23388672]
[124.48283386 -247.07701111]
[125.99736786 -232.07177734]
[123.73184967 -217.16143799]
[117.82870483 -203.28326416]
[108.65900421 -191.30966187]
[96.79915619 -181.99328613]
[82.99468994 -175.91976929]
[85.44041443 -161.12049866]
[87.88614655 -146.32122803]
[90.33187103 -131.52195740]
[101.06991577 -128.49789429]
[109.94445801 -121.65386200]
[115.64999390 -111.94831085]
[117.32923889 -100.76399231]
[114.70174408 -89.71102142]
[108.10983276 -80.39505768]
[98.47458649 -74.18407440]
[100.25704956 -59.29035950]
[102.03951263 -44.39664459]
[103.82198334 -29.50292587]
[105.71527100 -14.62289047]
[107.71928406 0.24263760]
[109.72329712 15.10816574]
[116.09528351 1.52884901]
[127.67324066 -8.00796890]
[142.22164917 -11.66087818]
[156.93144226 -8.72455978]
[168.96238708 0.23403068]
[175.99150085 13.48512840]
[176.66156006 28.47015572]
[170.84320068 42.29573441]
[159.65985107 52.29236984]
[145.27084351 56.52985764]
[130.45446777 54.19001389]
[118.07152557 45.72462463]
[110.51259613 32.76700211]
[109.84281158 47.75204086]
[109.17302704 62.73707962]
[108.50324249 77.72212219]
[107.83345795 92.70716095]
[109.06043243 107.65689087]
[112.16454315 122.33219147]
[115.26865387 137.00749207]
[118.37276459 151.68280029]
[121.47687531 166.35810852]
[124.58097839 181.03340149]
[128.70867920 186.19805908]
[129.49104309 191.82699585]
[127.55216980 196.19160461]
[130.21797180 210.95281982]
[132.88375854 225.71405029]
[138.33975220 211.74150085]
[148.94976807 201.13830566]
[162.92581177 195.69128418]
[177.91270447 196.31837463]
[191.38487244 202.91387939]
[201.07202148 214.36636353]
[205.34169006 228.74584961]
[203.47438049 243.62916565]
[195.78475952 256.50820923]
[183.56866455 265.21264648]
[168.88471985 268.27557373]
[154.20741272 265.18090820]
[142.01016235 256.45010376]
[134.34785461 243.55290222]
[134.12452698 258.55123901]
[133.90119934 273.54959106]
[144.62878418 284.84365845]
[144.18864441 300.05093384]
[133.35534668 310.20846558]
[133.13201904 325.20678711]
[132.90869141 340.20513916]
[132.68536377 355.20346069]
[132.46203613 370.20181274]
[147.38270569 371.85052490]
[162.07908630 374.91012573]
[176.41809082 379.35284424]
[190.26985168 385.13848877]
[203.50891113 392.21463013]
[216.01539612 400.51718140]
[227.67602539 409.97100830]
[238.38520813 420.49041748]
[248.04594421 431.98019409]
[256.57077026 444.33624268]
[263.88244629 457.44671631]
[269.91476440 471.19284058]
[274.61309814 485.45013428]
[277.93490601 500.08947754]
[279.85009766 514.97827148]
[280.34133911 529.98175049]
[279.40414429 544.96392822]
[277.04705811 559.78918457]
[273.29138184 574.32330322]
[268.17114258 588.43457031]
[261.73272705 601.99523926]
[254.03440857 614.88244629]
[245.14593506 626.97955322]
[235.14778137 638.17694092]
[224.13052368 648.37329102]
[212.19392395 657.47613525]
[199.44607544 665.40313721]
[186.00244141 672.08245850]
[171.98475647 677.45361328]
[157.51997375 681.46795654]
[142.73910522 684.08917236]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 179]
[34 178]
[35 177]
[36 176]
[37 175]
[40 172]
[41 171]
[42 170]
[43 156]
[44 155]
[45 154]
[46 151]
[47 150]
[48 149]
[49 148]
[50 147]
[51 146]
[69 145]
[70 144]
[71 143]
[72 142]
[73 141]
[74 128]
[75 127]
[76 126]
[78 125]
[79 124]
[80 123]
[81 122]
[85 115]
[86 114]
[87 113]
[88 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
