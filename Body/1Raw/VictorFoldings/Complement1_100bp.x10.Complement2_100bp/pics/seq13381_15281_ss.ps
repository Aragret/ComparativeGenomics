%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCCxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[63.76785278 393.14392090]
[50.83263779 385.51394653]
[38.89065552 376.40762329]
[28.10956192 365.95272827]
[18.64069939 354.29611206]
[10.61699677 341.60134888]
[4.15109730 328.04672241]
[-0.66622990 313.82244873]
[-3.76735663 299.12826538]
[-5.10874796 284.17041016]
[-4.67157269 269.15890503]
[-2.46196818 254.30448914]
[1.48904598 239.81565857]
[7.12600374 225.89585876]
[14.36977196 212.74046326]
[23.11865807 200.53417969]
[33.24983978 189.44836426]
[44.62109756 179.63862610]
[57.07278824 171.24269104]
[70.43011475 164.37843323]
[84.50556183 159.14219666]
[99.10153198 155.60749817]
[97.31906891 140.71377563]
[95.53659821 125.82006073]
[93.75413513 110.92634583]
[91.63951111 96.07614136]
[89.19377899 81.27687073]
[86.74805450 66.47760010]
[84.30233002 51.67833328]
[81.85659790 36.87906265]
[79.41087341 22.07979012]
[76.96514893 7.28051949]
[74.51941681 -7.51875114]
[72.07369232 -22.31802177]
[69.62796021 -37.11729431]
[67.18223572 -51.91656494]
[64.73651123 -66.71583557]
[49.83134079 -65.00455475]
[34.85978317 -64.03247833]
[19.85847092 -63.80200195]
[4.86411524 -64.31367493]
[-10.08658886 -65.56624603]
[-24.95705414 -67.55665588]
[-39.71089172 -70.28003693]
[-54.31199646 -73.72971344]
[-68.72463226 -77.89724731]
[-82.91353607 -82.77244568]
[-96.84397888 -88.34337616]
[-110.48187256 -94.59639740]
[-123.79384613 -101.51621246]
[-136.74731445 -109.08589172]
[-149.31059265 -117.28691101]
[-161.45292664 -126.09918976]
[-173.14459229 -135.50117493]
[-184.35699463 -145.46984863]
[-195.06268311 -155.98083496]
[-205.23547363 -167.00837708]
[-214.85046387 -178.52552795]
[-223.88410950 -190.50407410]
[-232.31433105 -202.91470337]
[-240.12048340 -215.72706604]
[-247.28344727 -228.90979004]
[-253.78573608 -242.43063354]
[-259.61138916 -256.25646973]
[-264.74618530 -270.35351562]
[-269.17755127 -284.68722534]
[-272.89462280 -299.22256470]
[-275.88833618 -313.92391968]
[-278.15133667 -328.75537109]
[-279.67810059 -343.68054199]
[-280.46487427 -358.66299438]
[-280.50976562 -373.66601562]
[-279.81265259 -388.65289307]
[-278.37521362 -403.58694458]
[-276.20098877 -418.43167114]
[-273.29531860 -433.15066528]
[-269.66528320 -447.70797729]
[-265.31976318 -462.06796265]
[-260.26940918 -476.19546509]
[-254.52658081 -490.05593872]
[-248.10533142 -503.61541748]
[-241.02136230 -516.84075928]
[-233.29202271 -529.69964600]
[-224.93621826 -542.16046143]
[-215.97439575 -554.19287109]
[-206.42849731 -565.76733398]
[-196.32186890 -576.85552979]
[-185.67926025 -587.43041992]
[-174.52671814 -597.46600342]
[-162.89151001 -606.93774414]
[-150.80212402 -615.82257080]
[-138.28814697 -624.09857178]
[-125.38020325 -631.74566650]
[-112.10987091 -638.74499512]
[-98.50963593 -645.07952881]
[-84.61277771 -650.73370361]
[-70.45330048 -655.69372559]
[-56.06585693 -659.94738770]
[-41.48565674 -663.48437500]
[-26.74837875 -666.29602051]
[-11.89008999 -668.37536621]
[3.05285192 -669.71734619]
[18.04387665 -670.31872559]
[33.04629898 -670.17803955]
[48.02340698 -669.29553223]
[62.93854523 -667.67346191]
[77.75521851 -665.31579590]
[92.43716431 -662.22827148]
[106.94845581 -658.41839600]
[121.25357819 -653.89556885]
[135.31753540 -648.67083740]
[149.10588074 -642.75701904]
[162.58491516 -636.16851807]
[175.72161865 -628.92144775]
[188.48385620 -621.03363037]
[200.84039307 -612.52429199]
[212.76098633 -603.41436768]
[224.21649170 -593.72601318]
[235.17883301 -583.48297119]
[245.62121582 -572.71032715]
[255.51806641 -561.43450928]
[264.84518433 -549.68304443]
[273.57974243 -537.48468018]
[281.70034790 -524.86926270]
[289.18713379 -511.86770630]
[296.02175903 -498.51181030]
[302.18756104 -484.83422852]
[307.66940308 -470.86849976]
[312.45385742 -456.64874268]
[316.52923584 -442.20977783]
[319.88558960 -427.58694458]
[322.51467896 -412.81600952]
[324.41006470 -397.93313599]
[325.56710815 -382.97473145]
[325.98300171 -367.97741699]
[325.65670776 -352.97787476]
[324.58901978 -338.01284790]
[322.78259277 -323.11889648]
[320.24179077 -308.33251953]
[316.97283936 -293.68991089]
[312.98376465 -279.22686768]
[308.28433228 -264.97879028]
[302.88601685 -250.98052979]
[296.80203247 -237.26638794]
[290.04730225 -223.86990356]
[282.63830566 -210.82385254]
[274.59320068 -198.16017151]
[265.93167114 -185.90985107]
[256.67492676 -174.10285950]
[246.84561157 -162.76809692]
[236.46775818 -151.93328857]
[225.56680298 -141.62496948]
[214.16938782 -131.86836243]
[202.30340576 -122.68733978]
[189.99792480 -114.10437012]
[177.28303528 -106.14044952]
[164.18984985 -98.81507111]
[150.75042725 -92.14617157]
[136.99763489 -86.15005493]
[122.96514893 -80.84140778]
[108.68729401 -76.23321533]
[94.19902039 -72.33675385]
[79.53578186 -69.16156006]
[81.98150635 -54.36228943]
[84.42723083 -39.56301880]
[86.87296295 -24.76375008]
[89.31868744 -9.96447849]
[91.76441956 4.83479214]
[94.21014404 19.63406372]
[96.65586853 34.43333435]
[99.10160065 49.23260498]
[101.54732513 64.03187561]
[103.99304962 78.83114624]
[106.43878174 93.63041687]
[109.22393036 96.29787445]
[110.81977844 100.18003082]
[110.71019745 104.71820068]
[108.64785004 109.14387512]
[110.43031311 124.03759003]
[112.21278381 138.93130493]
[113.99524689 153.82502747]
[129.01310730 153.81556702]
[143.92668152 155.58242798]
[158.52659607 159.10079956]
[172.60789490 164.32128906]
[185.97288513 171.17060852]
[198.43395996 179.55261230]
[209.81617737 189.34962463]
[219.95974731 200.42411804]
[228.72229004 212.62060547]
[235.98075867 225.76788330]
[241.63328552 239.68138123]
[245.60049438 254.16577148]
[247.82672119 269.01773071]
[248.28068542 284.02871704]
[246.95602417 298.98806763]
[243.87132263 313.68569946]
[239.06991577 327.91534424]
[232.61917114 341.47723389]
[224.60968018 354.18093872]
[215.15385437 365.84814453]
[204.38446045 376.31506348]
[192.45266724 385.43475342]
[179.52600098 393.07919312]
[165.78590393 399.14105225]
[151.42527771 403.53524780]
[136.64573669 406.20010376]
[121.65474701 407.09817505]
[106.66275787 406.21685791]
[91.88024139 403.56857300]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 181]
[23 180]
[24 179]
[25 178]
[26 174]
[27 173]
[28 172]
[29 171]
[30 170]
[31 169]
[32 168]
[33 167]
[34 166]
[35 165]
[36 164]
[37 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
