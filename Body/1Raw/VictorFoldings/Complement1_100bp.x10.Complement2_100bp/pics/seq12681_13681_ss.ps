%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUUxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[86.27019501 729.92968750]
[71.58635712 733.03881836]
[56.68960571 734.87408447]
[41.69023132 735.42193604]
[26.69928360 734.67840576]
[11.82775116 732.64886475]
[-2.81425786 729.34838867]
[-17.11833954 724.80145264]
[-30.97858620 719.04168701]
[-44.29238510 712.11175537]
[-56.96115875 704.06292725]
[-68.89111328 694.95477295]
[-79.99391937 684.85485840]
[-90.18737793 673.83782959]
[-99.39601135 661.98529053]
[-107.55165100 649.38500977]
[-114.59391022 636.13024902]
[-120.47064972 622.31921387]
[-125.13835907 608.05407715]
[-128.56248474 593.44049072]
[-130.71766663 578.58666992]
[-131.58793640 563.60253906]
[-131.16688538 548.59906006]
[-129.45761108 533.68731689]
[-126.47275543 518.97772217]
[-122.23444366 504.57919312]
[-116.77403259 490.59829712]
[-110.13197327 477.13854980]
[-102.35742188 464.29962158]
[-93.50794220 452.17660522]
[-83.64906311 440.85916138]
[-72.85377502 430.43118286]
[-61.20199585 420.96981812]
[-48.78000259 412.54510498]
[-35.67975998 405.21945190]
[-21.99825859 399.04711914]
[-7.83679628 394.07373047]
[6.69978094 390.33618164]
[21.50384712 387.86209106]
[36.46579361 386.66979980]
[51.47484970 386.76815796]
[66.41989136 388.15640259]
[69.08568573 373.39517212]
[71.75148010 358.63397217]
[66.39923859 344.73422241]
[76.46593475 332.52880859]
[79.13172913 317.76757812]
[77.22700500 310.62658691]
[81.94866180 302.80715942]
[84.83393860 288.08724976]
[87.71920776 273.36737061]
[90.60448456 258.64746094]
[92.16500854 243.72886658]
[92.38833618 228.73052979]
[92.50000000 213.73094177]
[92.50000000 198.73094177]
[84.76270294 186.00367737]
[92.50000000 172.20350647]
[92.50000000 157.20350647]
[92.50000000 142.20350647]
[92.50000000 127.20349884]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[92.50000000 72.79650116]
[89.53043365 66.88945007]
[89.92986298 61.22045898]
[92.72998047 57.35155869]
[93.17658234 42.35820770]
[93.62319183 27.36485672]
[94.06979370 12.37150764]
[94.51640320 -2.62184262]
[94.96300507 -17.61519241]
[95.40961456 -32.60854340]
[95.85621643 -47.60189056]
[87.59566498 -57.50775528]
[88.27631378 -69.98655701]
[96.98867035 -78.37830353]
[97.65845490 -93.36334229]
[94.95561981 -99.39709473]
[95.60778046 -105.04259491]
[98.57785797 -108.78260803]
[99.69350433 -123.74105835]
[100.80915833 -138.69950867]
[101.25576019 -153.69287109]
[101.03243256 -168.69120789]
[98.35396576 -173.17147827]
[97.72480774 -177.77120972]
[98.84727478 -181.68975830]
[101.14908600 -184.36071777]
[101.59569550 -199.35406494]
[102.04229736 -214.34742737]
[102.48890686 -229.34077454]
[102.60057068 -244.34034729]
[102.37724304 -259.33868408]
[102.15391541 -274.33703613]
[101.93058777 -289.33535767]
[101.70726013 -304.33370972]
[87.68774414 -310.28121948]
[77.30409241 -321.42123413]
[72.35533905 -335.82363892]
[73.69889069 -350.99316406]
[81.10196686 -364.30160522]
[93.28193665 -373.44317627]
[108.12855530 -376.83404541]
[123.06954193 -373.88671875]
[135.51629639 -365.11184692]
[143.31233215 -352.02972412]
[145.10693359 -336.90692139]
[140.58918762 -322.36355591]
[130.54182434 -310.91931152]
[116.70559692 -304.55703735]
[116.92892456 -289.55868530]
[117.15225220 -274.56036377]
[117.37558746 -259.56201172]
[117.59891510 -244.56367493]
[119.86070251 -241.85874939]
[120.92470551 -237.92391968]
[120.22712708 -233.33407593]
[117.48225403 -228.89416504]
[117.03565216 -213.90081787]
[116.58904266 -198.90747070]
[116.14244080 -183.91410828]
[116.03076935 -168.91453552]
[116.25409698 -153.91619873]
[127.45153046 -163.89704895]
[142.43411255 -163.17449951]
[152.61915588 -152.16246033]
[152.17219543 -137.16912842]
[141.34925842 -126.78335571]
[126.35024261 -126.95458984]
[115.76760864 -137.58386230]
[114.65196228 -122.62541199]
[113.53631592 -107.66696167]
[112.64349365 -92.69355774]
[111.97370911 -77.70851898]
[120.88832855 -62.59241104]
[110.84957123 -47.15528488]
[110.40296173 -32.16193771]
[109.95635986 -17.16858673]
[109.50975037 -2.17523670]
[109.06314850 12.81811333]
[108.61653900 27.81146240]
[108.16993713 42.80481339]
[107.72332764 57.79816437]
[107.50000000 72.79650116]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[107.50000000 127.20349884]
[107.50000000 142.20350647]
[107.50000000 157.20350647]
[107.50000000 172.20350647]
[115.23729706 186.00367737]
[107.50000000 198.73094177]
[107.50000000 213.73094177]
[110.62940979 222.31259155]
[107.38667297 228.95385742]
[107.16334534 243.95219421]
[115.47919464 231.46833801]
[128.34376526 223.75451660]
[143.27308655 222.30015564]
[157.38456726 227.38606262]
[167.95347595 238.03021240]
[172.93913269 252.17741394]
[171.37889099 267.09603882]
[163.57400513 279.90554810]
[151.03146362 288.13262939]
[136.17304993 290.18878174]
[121.86769104 285.67694092]
[110.87752533 275.46829224]
[105.32437134 261.53274536]
[102.43910217 276.25262451]
[99.55382538 290.97253418]
[96.66855621 305.69241333]
[93.89294434 320.43338013]
[91.22714996 335.19461060]
[96.38871765 350.15014648]
[86.51270294 361.29974365]
[83.84690094 376.06097412]
[81.18110657 390.82217407]
[95.66767120 394.74914551]
[109.76302338 399.90689087]
[123.36281586 406.25726318]
[136.36633301 413.75323486]
[148.67733765 422.33932495]
[160.20465088 431.95196533]
[170.86293030 442.51995850]
[180.57327271 453.96505737]
[189.26379395 466.20257568]
[196.87013245 479.14184570]
[203.33598328 492.68710327]
[208.61346436 506.73806763]
[212.66351318 521.19067383]
[215.45614624 535.93798828]
[216.97068787 550.87078857]
[217.19590759 565.87847900]
[216.13015747 580.84997559]
[213.78131104 595.67437744]
[210.16677856 610.24206543]
[205.31330872 624.44506836]
[199.25683594 638.17822266]
[192.04220581 651.33996582]
[183.72282410 663.83270264]
[174.36029053 675.56408691]
[164.02392578 686.44714355]
[152.79025269 696.40130615]
[140.74246216 705.35296631]
[127.96972656 713.23577881]
[114.56662750 719.99139404]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 181]
[43 180]
[44 179]
[46 177]
[47 176]
[49 175]
[50 174]
[51 173]
[52 172]
[53 159]
[54 158]
[55 156]
[56 155]
[58 153]
[59 152]
[60 151]
[61 150]
[62 149]
[64 147]
[65 146]
[68 145]
[69 144]
[70 143]
[71 142]
[72 141]
[73 140]
[74 139]
[75 138]
[78 136]
[79 135]
[82 134]
[83 133]
[84 132]
[85 125]
[86 124]
[90 123]
[91 122]
[92 121]
[93 120]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
