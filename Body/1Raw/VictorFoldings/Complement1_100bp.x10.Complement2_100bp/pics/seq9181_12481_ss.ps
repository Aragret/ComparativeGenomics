%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[123.30420685 810.97845459]
[108.46215820 808.79107666]
[93.72880554 805.96276855]
[79.13179779 802.49896240]
[64.69853973 798.40606689]
[50.45612717 793.69171143]
[36.43130493 788.36486816]
[22.65040207 782.43548584]
[9.13928699 775.91473389]
[-4.07667160 768.81475830]
[-16.97266388 761.14898682]
[-29.52447701 752.93176270]
[-41.70854568 744.17852783]
[-53.50199890 734.90570068]
[-64.88269806 725.13067627]
[-75.82926178 714.87182617]
[-86.32115936 704.14843750]
[-96.33868408 692.98065186]
[-105.86302185 681.38934326]
[-114.87630463 669.39636230]
[-123.36160278 657.02423096]
[-131.30299377 644.29608154]
[-138.68554688 631.23590088]
[-145.49543762 617.86816406]
[-151.71984863 604.21795654]
[-157.34710693 590.31097412]
[-162.36665344 576.17321777]
[-166.76905823 561.83135986]
[-170.54606628 547.31219482]
[-173.69056702 532.64312744]
[-176.19667053 517.85156250]
[-178.05966187 502.96530151]
[-179.27606201 488.01232910]
[-179.84356689 473.02072144]
[-179.76112366 458.01858521]
[-179.02888489 443.03408813]
[-177.64820862 428.09539795]
[-175.62171936 413.23052979]
[-172.95320129 398.46740723]
[-169.64765930 383.83374023]
[-165.71131897 369.35699463]
[-161.15155029 355.06436157]
[-155.97692871 340.98266602]
[-150.19715881 327.13833618]
[-143.82308960 313.55740356]
[-136.86669922 300.26531982]
[-129.34103394 287.28704834]
[-121.26024628 274.64697266]
[-112.63948059 262.36880493]
[-103.49493408 250.47560120]
[-93.84376526 238.98970032]
[-83.70410919 227.93266296]
[-73.09499359 217.32524109]
[-62.03633118 207.18733215]
[-50.54888916 197.53800964]
[-38.65423203 188.39535522]
[-26.37469482 179.77655029]
[-13.73332596 171.69776917]
[-0.75386143 164.17417908]
[12.53933239 157.21990967]
[26.12129784 150.84800720]
[39.96653748 145.07044983]
[54.04905701 139.89807129]
[68.34242249 135.34059143]
[82.81979370 131.40655518]
[97.45398712 128.10334778]
[94.78819275 113.34213257]
[85.90407562 102.54564667]
[90.45059204 89.32366180]
[87.78479004 74.56244659]
[85.11899567 59.80123138]
[82.45320129 45.04001236]
[79.78740692 30.27879524]
[64.14405060 28.65874672]
[49.60274124 22.70619392]
[37.33639526 12.91011143]
[28.33194923 0.06914005]
[23.31092834 -14.77352428]
[22.67166328 -30.41487122]
[26.45768166 -45.58958817]
[34.35486221 -59.07240677]
[45.71746826 -69.77704620]
[59.62095642 -76.84373474]
[56.73568344 -91.56362915]
[53.85041046 -106.28351593]
[50.96513748 -121.00341034]
[35.90666580 -121.58573914]
[21.38855171 -125.62567139]
[8.19373989 -132.90534973]
[-2.96618915 -143.03218079]
[-11.48939514 -155.46003723]
[-16.91623116 -169.51870728]
[-18.95403671 -184.45002747]
[-17.49291420 -199.44874573]
[-12.61166096 -213.70602417]
[-4.57351637 -226.45298767]
[6.18803263 -237.00219727]
[19.09263039 -244.78474426]
[33.44434357 -249.38093567]
[48.46921158 -250.54290771]
[63.35695267 -248.20797729]
[77.30469513 -242.50209045]
[89.56024933 -233.73292542]
[99.46269226 -222.37342834]
[106.47800446 -209.03617859]
[110.22784424 -194.44044495]
[110.51000214 -179.37336731]
[107.30924988 -164.64747620]
[100.79821014 -151.05691528]
[91.32801056 -139.33464050]
[79.40936279 -130.11277771]
[65.68502808 -123.88867950]
[68.57030487 -109.16879272]
[71.45557404 -94.44889832]
[74.34085083 -79.72901154]
[88.63761139 -78.70451355]
[102.19203949 -74.00637054]
[114.07613373 -65.94959259]
[123.47452545 -55.07934570]
[129.74041748 -42.13410187]
[132.44012451 -27.99544334]
[131.38302612 -13.62804985]
[126.63508606 -0.01385664]
[118.51469421 11.91503811]
[107.57138062 21.34019852]
[94.54862213 27.61299896]
[97.21441650 42.37421799]
[99.88021851 57.13543320]
[102.54601288 71.89665222]
[105.21180725 86.65786743]
[114.09592438 97.45435333]
[109.54940796 110.67633820]
[112.21520996 125.43755341]
[127.08038330 123.41333008]
[142.01928711 122.03494263]
[157.00387573 121.30499268]
[172.00602722 121.22483826]
[186.99757385 121.79463959]
[201.95034790 123.01331329]
[216.83630371 124.87858582]
[231.62748718 127.38694763]
[246.29612732 130.53369141]
[260.81466675 134.31289673]
[275.15588379 138.71749878]
[289.29284668 143.73919678]
[303.19897461 149.36859131]
[316.84823608 155.59509277]
[330.21490479 162.40701294]
[343.27398682 169.79156494]
[356.00091553 177.73489380]
[368.37176514 186.22209167]
[380.36337280 195.23719788]
[391.95321655 204.76330566]
[403.11950684 214.78253174]
[413.84127808 225.27607727]
[424.09841919 236.22421265]
[433.87170410 247.60639954]
[443.14273071 259.40127563]
[451.89410400 271.58666992]
[460.10943604 284.13973999]
[467.77325439 297.03689575]
[474.87118530 310.25393677]
[481.38989258 323.76605225]
[487.31716919 337.54785156]
[492.64187622 351.57348633]
[497.35400391 365.81661987]
[501.44473267 380.25051880]
[504.90634155 394.84805298]
[507.73236084 409.58184814]
[509.91744995 424.42422485]
[511.45758057 439.34732056]
[512.34979248 454.32312012]
[512.59240723 469.32351685]
[512.18505859 484.32034302]
[511.12838745 499.28546143]
[509.42446899 514.19073486]
[507.07644653 529.00823975]
[504.08877563 543.71008301]
[500.46704102 558.26873779]
[496.21801758 572.65679932]
[491.34973145 586.84729004]
[485.87130737 600.81359863]
[479.79299927 614.52947998]
[473.12625122 627.96917725]
[465.88357544 641.10748291]
[458.07855225 653.91967773]
[449.72586060 666.38177490]
[440.84115601 678.47027588]
[431.44113159 690.16259766]
[421.54342651 701.43676758]
[411.16665649 712.27160645]
[400.33026123 722.64672852]
[389.05459595 732.54266357]
[377.36083984 741.94091797]
[365.27093506 750.82379150]
[352.80758667 759.17456055]
[339.99417114 766.97766113]
[326.85479736 774.21832275]
[313.41409302 780.88299561]
[299.69726562 786.95922852]
[285.73013306 792.43548584]
[271.53887939 797.30163574]
[257.15014648 801.54846191]
[242.59095764 805.16796875]
[227.88864136 808.15338135]
[213.07081604 810.49914551]
[198.16526794 812.20080566]
[183.19999695 813.25518799]
[168.20310974 813.66027832]
[153.20274353 813.41534424]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 133]
[67 132]
[69 130]
[70 129]
[71 128]
[72 127]
[73 126]
[83 115]
[84 114]
[85 113]
[86 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
