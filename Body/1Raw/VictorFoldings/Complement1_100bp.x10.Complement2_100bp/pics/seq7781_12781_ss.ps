%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[213.67410278 422.95004272]
[219.37144470 409.05328369]
[226.73339844 395.96203613]
[235.64836121 383.87469482]
[245.98115540 372.97457886]
[257.57516479 363.42687988]
[249.53399658 350.76437378]
[241.49282837 338.10183716]
[233.45166016 325.43930054]
[225.41047668 312.77679443]
[216.99586487 300.35928345]
[208.21525574 288.19784546]
[194.49192810 282.40823364]
[192.68679810 266.69033813]
[183.90618896 254.52888489]
[175.12559509 242.36743164]
[166.34498596 230.20597839]
[164.04106140 245.02798462]
[152.83192444 254.99569702]
[137.84223938 255.55200195]
[125.92509460 246.44256592]
[122.52884674 231.83210754]
[129.20620728 218.40032959]
[142.90438843 212.28805542]
[157.36227417 216.29080200]
[144.31573486 209.10491943]
[144.15559387 193.28451538]
[136.68786621 180.27557373]
[129.22012329 167.26661682]
[121.75238037 154.25765991]
[110.16164398 150.79624939]
[103.83367920 140.01939392]
[106.63114166 127.42823792]
[99.35791016 114.30954742]
[87.47257233 106.94541931]
[87.52339935 92.96368408]
[75.36235809 88.66578674]
[69.57453918 77.58946228]
[72.77931976 65.92515564]
[65.70220947 52.69963074]
[58.62510681 39.47410202]
[51.54800034 26.24857521]
[44.47089767 13.02304745]
[44.55298996 28.02282333]
[40.05580902 42.33279800]
[31.40799713 54.58903503]
[19.43380928 63.62334824]
[5.27454996 68.57464600]
[-9.72021198 68.97100067]
[-24.12127304 64.77464294]
[-36.55601120 56.38552475]
[-45.83923340 44.60325623]
[-51.08611298 30.55084801]
[-51.79655838 15.56768131]
[-47.90285492 1.08185887]
[-39.77611923 -11.52592373]
[-28.19094276 -21.05397224]
[-14.25155258 -26.59413528]
[0.71343863 -27.61835861]
[15.27766323 -24.02901840]
[28.05295372 -16.16823196]
[37.82224655 -4.78426981]
[34.49998474 -19.41172981]
[31.17772675 -34.03919220]
[20.57607269 -45.78293228]
[25.30232239 -59.90779877]
[21.98006248 -74.53526306]
[18.65780258 -89.16271973]
[15.33554363 -103.79017639]
[12.01328468 -118.41764069]
[8.69102478 -133.04510498]
[-6.94436121 -139.49729919]
[-15.56744766 -153.85499573]
[-13.94969940 -170.35786438]
[-2.92581725 -182.52139282]
[-6.46548939 -197.09777832]
[-17.24081421 -208.68237305]
[-12.72538757 -222.87603760]
[-16.26506042 -237.45240784]
[-19.80473137 -252.02879333]
[-34.81301880 -251.06835938]
[-49.76005554 -252.72886658]
[-64.19161224 -256.95983887]
[-77.66913605 -263.63275146]
[-89.78305054 -272.54476929]
[-100.16524506 -283.42507935]
[-108.50019836 -295.94305420]
[-114.53462982 -309.71826172]
[-118.08515930 -324.33212280]
[-119.04389191 -339.34051514]
[-117.38169098 -354.28738403]
[-113.14906311 -368.71844482]
[-106.47463989 -382.19522095]
[-97.56124878 -394.30813599]
[-86.67975616 -404.68908691]
[-74.16083527 -413.02261353]
[-60.38492966 -419.05548096]
[-45.77067184 -422.60437012]
[-30.76216507 -423.56140137]
[-15.81550789 -421.89749146]
[-1.38491058 -417.66323853]
[12.09109783 -410.98727417]
[24.20299530 -402.07250977]
[34.58271790 -391.18984985]
[42.91483307 -378.66998291]
[48.94614029 -364.89340210]
[52.49335861 -350.27871704]
[53.44868469 -335.27011108]
[51.78308868 -320.32363892]
[47.54719162 -305.89352417]
[40.86970901 -292.41827393]
[31.95357132 -280.30740356]
[21.06972504 -269.92889404]
[8.54891777 -261.59820557]
[-5.22835684 -255.56846619]
[-1.68868423 -240.99208069]
[1.85098827 -226.41571045]
[12.37313271 -215.87370300]
[8.11088562 -200.63745117]
[11.65055847 -186.06106567]
[24.41612053 -182.15177917]
[33.65716171 -172.36672974]
[36.88214493 -159.18836975]
[33.14481735 -146.03349304]
[23.31848526 -136.36735535]
[26.64074516 -121.73989868]
[29.96300316 -107.11244202]
[33.28526306 -92.48497772]
[36.60752487 -77.85752106]
[39.92978287 -63.23006058]
[50.29380798 -52.53256989]
[45.80518723 -37.36145020]
[49.12744522 -22.73398972]
[52.44970703 -8.10652924]
[57.69642258 5.94594193]
[64.77352905 19.17146873]
[71.85063171 32.39699554]
[78.92774200 45.62252426]
[86.00484467 58.84805298]
[101.38912201 67.29144287]
[100.64208984 85.69045258]
[112.52742767 93.05458069]
[112.47660065 107.03631592]
[119.74983215 120.15501404]
[135.75045776 129.26882935]
[134.76132202 146.78991699]
[142.22906494 159.79887390]
[149.69680786 172.80783081]
[157.16455078 185.81677246]
[170.74523926 193.93315125]
[170.37123108 208.82305908]
[178.50643921 221.42536926]
[187.28704834 233.58683777]
[196.06764221 245.74829102]
[204.84825134 257.90972900]
[219.19963074 264.56921387]
[220.37670898 279.41723633]
[229.15731812 291.57867432]
[233.17955017 293.21441650]
[236.17117310 295.78631592]
[237.96443176 298.85546875]
[238.55136108 301.97348022]
[238.07301331 304.73562622]
[246.11418152 317.39813232]
[254.15534973 330.06066895]
[262.19653320 342.72317505]
[270.23770142 355.38571167]
[283.80935669 348.95227051]
[298.06878662 344.23541260]
[312.79977417 341.30667114]
[327.77902222 340.21044922]
[342.77944946 340.96337891]
[357.57363892 343.55398560]
[371.93734741 347.94305420]
[385.65280151 354.06402588]
[398.51205444 361.82412720]
[410.32019043 371.10568237]
[420.89822388 381.76800537]
[430.08575439 393.64944458]
[437.74349976 406.56991577]
[443.75540161 420.33349609]
[448.03033447 434.73159790]
[450.50341797 449.54589844]
[451.13723755 464.55181885]
[449.92214966 479.52188110]
[446.87655640 494.22915649]
[442.04666138 508.45068359]
[435.50567627 521.97088623]
[427.35278320 534.58471680]
[417.71151733 546.10107422]
[406.72808838 556.34527588]
[394.56896973 565.16204834]
[381.41851807 572.41778564]
[367.47610474 578.00244141]
[352.95303345 581.83129883]
[338.06951904 583.84643555]
[323.05120850 584.01721191]
[308.12570190 582.34112549]
[293.51934814 578.84344482]
[279.45349121 573.57733154]
[266.14144897 566.62255859]
[253.78498840 558.08459473]
[242.57142639 548.09277344]
[232.67076111 536.79870605]
[224.23309326 524.37353516]
[217.38633728 511.00558472]
[212.23426819 496.89758301]
[208.85501099 482.26336670]
[207.29978943 467.32479858]
[207.59217834 452.30834961]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 167]
[7 166]
[8 165]
[9 164]
[10 163]
[11 158]
[12 157]
[14 155]
[15 154]
[16 153]
[17 152]
[25 151]
[27 149]
[28 148]
[29 147]
[30 146]
[33 144]
[34 143]
[36 141]
[39 139]
[40 138]
[41 137]
[42 136]
[43 135]
[62 134]
[63 133]
[64 132]
[66 130]
[67 129]
[68 128]
[69 127]
[70 126]
[71 125]
[75 120]
[76 119]
[78 117]
[79 116]
[80 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
