%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[45.96295547 398.11572266]
[47.16727448 413.14282227]
[44.73968887 428.02133179]
[38.82133865 441.88626099]
[29.75630188 453.93154907]
[18.07161331 463.45684814]
[4.44660473 469.90841675]
[-10.32658482 472.91113281]
[-25.38906097 472.29043579]
[-39.86510849 468.08239746]
[-52.91311646 460.53170776]
[-63.77448273 450.07733154]
[-71.81774139 437.32705688]
[-76.57527924 423.02218628]
[-77.77048492 407.99438477]
[-75.33387756 393.11734009]
[-69.40711975 379.25601196]
[-60.33478546 367.21621704]
[-48.64432526 357.69799805]
[-35.01540756 351.25469971]
[-20.24040222 348.26095581]
[-5.17830467 348.89077759]
[-0.99129367 334.48699951]
[3.19571757 320.08322144]
[7.38272858 305.67941284]
[11.56974030 291.27563477]
[15.64940643 276.84109497]
[19.62150383 262.37655640]
[23.59359932 247.91204834]
[27.56569481 233.44752502]
[31.53779221 218.98300171]
[26.19255447 202.26786804]
[39.40106583 189.43756104]
[43.15736771 174.91551208]
[46.91366577 160.39344788]
[37.11360168 171.74945068]
[25.25365448 180.93321228]
[11.80620670 187.57897949]
[-2.69313598 191.42202759]
[-17.66687202 192.30931091]
[-32.51860046 190.20547485]
[-46.65678406 185.19430542]
[-59.51830673 177.47541809]
[-70.59089661 167.35623169]
[-79.43353271 155.23980713]
[-85.69402313 141.60873413]
[-89.12301636 127.00592804]
[-89.58393097 112.01300812]
[-87.05840302 97.22714996]
[-81.64704132 83.23725891]
[-73.56536102 70.60054016]
[-63.13526535 59.82032776]
[-50.77217102 51.32598114]
[-36.96850204 45.45582962]
[-22.27404785 42.44367981]
[-7.27408695 42.40950394]
[7.43393946 45.35466003]
[21.26421547 51.16184998]
[33.66588974 59.59976959]
[44.14500427 70.33234406]
[52.28417969 82.93209839]
[57.75923920 96.89718628]
[60.35211563 111.67138672]
[59.95952606 126.66625214]
[56.59845352 141.28057861]
[66.08734894 129.66331482]
[75.57624817 118.04605103]
[85.06514740 106.42878723]
[87.33086395 89.80823517]
[103.08023071 84.03468323]
[112.39511108 72.27743530]
[121.70999146 60.52018356]
[124.21517181 44.89857483]
[138.18333435 39.72752762]
[140.68850708 24.10591888]
[154.65666199 18.93487358]
[157.16183472 3.31326389]
[171.13000488 -1.85778213]
[180.44488525 -13.61503315]
[189.75976562 -25.37228394]
[178.62608337 -35.43210220]
[168.16691589 -46.19150925]
[158.42614746 -57.60537338]
[149.44462585 -69.62581635]
[141.26002502 -82.20243073]
[133.90666199 -95.28245544]
[127.41540527 -108.81103516]
[121.81346130 -122.73142242]
[117.12432861 -136.98522949]
[113.36769104 -151.51266479]
[110.55928040 -166.25280762]
[108.71089935 -181.14382935]
[107.83029175 -196.12326050]
[107.92114258 -211.12828064]
[108.98308563 -226.09594727]
[111.01165771 -240.96350098]
[113.99835205 -255.66854858]
[117.93064117 -270.14944458]
[122.79203033 -284.34539795]
[128.56213379 -298.19692993]
[135.21675110 -311.64590454]
[142.72795105 -324.63592529]
[151.06425476 -337.11251831]
[160.19068909 -349.02331543]
[170.06895447 -360.31838989]
[180.65765381 -370.95034790]
[191.91233826 -380.87460327]
[203.78582764 -390.04953003]
[216.22830200 -398.43664551]
[229.18757629 -406.00076294]
[242.60931396 -412.71017456]
[256.43719482 -418.53671265]
[270.61322021 -423.45596313]
[285.07794189 -427.44726562]
[299.77069092 -430.49392700]
[314.62985229 -432.58309937]
[329.59304810 -433.70608521]
[344.59759521 -433.85812378]
[359.58047485 -433.03860474]
[374.47891235 -431.25097656]
[389.23037720 -428.50271606]
[403.77304077 -424.80532837]
[418.04583740 -420.17437744]
[431.98895264 -414.62927246]
[445.54388428 -408.19320679]
[458.65380859 -400.89328003]
[471.26370239 -392.76004028]
[483.32067871 -383.82760620]
[494.77416992 -374.13345337]
[505.57614136 -363.71826172]
[515.68127441 -352.62570190]
[525.04718018 -340.90228271]
[533.63464355 -328.59719849]
[541.40753174 -315.76205444]
[548.33331299 -302.45071411]
[554.38293457 -288.71893311]
[559.53100586 -274.62438965]
[563.75592041 -260.22616577]
[567.04003906 -245.58467102]
[569.36944580 -230.76129150]
[570.73449707 -215.81820679]
[571.12945557 -200.81811523]
[570.55255127 -185.82391357]
[569.00634766 -170.89849854]
[566.49719238 -156.10446167]
[563.03570557 -141.50387573]
[558.63641357 -127.15797424]
[553.31774902 -113.12693024]
[547.10192871 -99.46958160]
[540.01519775 -86.24322510]
[532.08709717 -73.50333405]
[523.35101318 -61.30334854]
[513.84356689 -49.69443130]
[503.60458374 -38.72528076]
[492.67703247 -28.44190407]
[481.10678101 -18.88743401]
[468.94232178 -10.10194588]
[456.23468018 -2.12228775]
[443.03717041 5.01806974]
[429.40515137 11.28917694]
[415.39578247 16.66473007]
[401.06784058 21.12218285]
[386.48141479 24.64283943]
[371.69769287 27.21193314]
[356.77865601 28.81868553]
[341.78692627 29.45635986]
[326.78533936 29.12228012]
[311.83685303 27.81785011]
[297.00415039 25.54853630]
[282.34942627 22.32386208]
[267.93420410 18.15735054]
[253.81889343 13.06647682]
[240.06271362 7.07259512]
[226.72337341 0.20084640]
[213.85682678 -7.51994753]
[201.51701355 -16.05740166]
[192.20213318 -4.30015039]
[182.88725281 7.45710087]
[181.04833984 22.23775291]
[166.41390991 28.24975586]
[164.57501221 43.03040695]
[149.94058228 49.04241180]
[148.10166931 63.82306290]
[133.46723938 69.83506775]
[124.15236664 81.59231567]
[114.83747864 93.34957123]
[115.47884369 104.97840881]
[108.17868805 114.05304718]
[96.68241119 115.91768646]
[87.19351196 127.53495026]
[77.70461273 139.15220642]
[68.21571350 150.76947021]
[61.43572617 164.14974976]
[57.67942429 178.67181396]
[53.92312622 193.19386292]
[59.78452682 204.68328857]
[56.35692978 216.70141602]
[46.00231552 222.95509338]
[42.03022003 237.41961670]
[38.05812454 251.88414001]
[34.08602524 266.34866333]
[30.11392975 280.81320190]
[30.85914993 289.91717529]
[25.97352219 295.46264648]
[21.78651047 309.86642456]
[17.59949875 324.27023315]
[13.41248798 338.67401123]
[9.22547722 353.07778931]
[22.27805710 360.62057495]
[33.14575958 371.06835938]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 208]
[23 207]
[24 206]
[25 205]
[26 204]
[27 202]
[28 201]
[29 200]
[30 199]
[31 198]
[33 195]
[34 194]
[35 193]
[65 192]
[66 191]
[67 190]
[68 189]
[70 186]
[71 185]
[72 184]
[74 182]
[76 180]
[78 178]
[79 177]
[80 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
