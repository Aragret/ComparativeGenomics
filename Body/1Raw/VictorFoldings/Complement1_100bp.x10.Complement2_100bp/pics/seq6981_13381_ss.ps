%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[91.34192657 589.23620605]
[79.02349091 580.65826416]
[67.54907990 570.98028564]
[57.01659775 560.28491211]
[47.51590347 548.66333008]
[39.12805557 536.21466064]
[31.92461586 523.04522705]
[25.96704483 509.26724243]
[21.30616951 494.99838257]
[17.98175812 480.36032104]
[16.02217293 465.47793579]
[15.44413280 450.47827148]
[16.25256920 435.48922729]
[18.44058418 420.63873291]
[21.98951149 406.05346680]
[26.86907196 391.85791016]
[33.03763199 378.17309570]
[40.44256592 365.11587524]
[49.02069092 352.79757690]
[58.69882584 341.32333374]
[69.39439392 330.79101562]
[81.01615143 321.29052734]
[93.46492767 312.90286255]
[106.63452148 305.69964600]
[120.41257477 299.74230957]
[134.68153381 295.08166504]
[131.35926819 280.45422363]
[128.03701782 265.82675171]
[117.67298889 255.12927246]
[122.16160583 239.95814514]
[111.79758453 229.26065063]
[116.28620911 214.08953857]
[112.96394348 199.46208191]
[109.64168549 184.83462524]
[98.89946747 180.99131775]
[91.26747131 172.35023499]
[88.72843170 160.98153687]
[92.02602386 149.68434143]
[100.45208740 141.29754639]
[97.56681824 126.57765961]
[94.68154144 111.85777283]
[91.35928345 97.23030853]
[87.60298157 82.70825195]
[83.84667969 68.18618774]
[80.09038544 53.66413116]
[76.33408356 39.14207077]
[72.57778168 24.62001228]
[68.82147980 10.09795380]
[64.10829163 24.33824348]
[53.74563980 35.18330765]
[39.73439026 40.53913879]
[24.77989769 39.37160492]
[11.76963806 31.90614128]
[3.21569014 19.58421135]
[0.76968622 4.78498650]
[4.90391159 -9.63403511]
[14.82011223 -20.88876534]
[28.60362625 -26.80609322]
[43.59307098 -26.24347496]
[56.89422226 -19.30954170]
[65.93936157 -7.34196901]
[64.82370758 -22.30042267]
[63.70806122 -37.25887680]
[62.59241104 -52.21733093]
[61.47676468 -67.17578125]
[60.36111450 -82.13423920]
[46.72227097 -83.80955505]
[33.63434982 -87.98197174]
[21.55023384 -94.50537872]
[10.88774395 -103.15234375]
[2.01520348 -113.62204742]
[-4.76128960 -125.55075073]
[-9.20842171 -138.52441406]
[-11.17369747 -152.09309387]
[-10.59066677 -165.78649902]
[-7.48117113 -179.13035583]
[-1.95452988 -191.66281128]
[5.79630136 -202.95036316]
[15.50146961 -212.60295105]
[26.82361603 -220.28735352]
[39.36960602 -225.73873901]
[52.70417404 -228.76979065]
[52.25756836 -243.76313782]
[51.81096268 -258.75646973]
[51.36435699 -273.74984741]
[48.22023773 -279.56585693]
[48.45069504 -285.24423218]
[51.13438034 -289.19476318]
[51.13438034 -304.19476318]
[51.13438034 -319.19476318]
[51.13438034 -334.19476318]
[50.57616806 -349.18438721]
[49.46051788 -364.14285278]
[48.34487152 -379.10128784]
[33.69198227 -382.91854858]
[21.07386780 -391.28884888]
[11.85925007 -403.30426025]
[7.04766130 -417.66137695]
[7.16102600 -432.80291748]
[12.18704700 -447.08639526]
[21.58053970 -458.96246338]
[34.32256699 -467.14288330]
[49.03097153 -470.74032593]
[64.11029816 -469.36456299]
[77.92484283 -463.16479492]
[88.97612000 -452.81356812]
[96.06536102 -439.43368530]
[98.42358398 -424.47650146]
[95.79498291 -409.56445312]
[88.46469116 -396.31509399]
[77.22784424 -386.16558838]
[63.30332565 -380.21694946]
[64.41897583 -365.25848389]
[65.53462219 -350.30004883]
[77.15169525 -359.78915405]
[91.84520721 -356.77239990]
[98.78363800 -343.47360229]
[92.85224152 -329.69613647]
[78.42341614 -325.59625244]
[66.13437653 -334.19476318]
[66.13437653 -319.19476318]
[66.13437653 -304.19476318]
[66.13437653 -289.19476318]
[66.35770416 -274.19644165]
[66.80431366 -259.20309448]
[67.25091553 -244.20973206]
[67.69752502 -229.21638489]
[83.74493408 -226.26353455]
[98.75093842 -219.83926392]
[111.97436523 -210.25775146]
[122.76139832 -197.98919678]
[130.57789612 -183.63673401]
[135.03582764 -167.90679932]
[135.91259766 -151.57435608]
[133.16207886 -135.44471741]
[126.91709137 -120.31380463]
[117.48293304 -106.92893982]
[105.32253265 -95.95186615]
[91.03365326 -87.92607880]
[75.31956482 -83.24988556]
[76.43521881 -68.29142761]
[77.55086517 -53.33297729]
[78.66651154 -38.37452316]
[79.78216553 -23.41607094]
[80.89781189 -8.45761776]
[83.34353638 6.34165287]
[87.09983826 20.86371231]
[90.85614014 35.38577271]
[94.61244202 49.90782928]
[98.36874390 64.42989349]
[102.12504578 78.95195007]
[105.88134003 93.47400665]
[108.36698914 95.23783112]
[110.26578522 97.94506836]
[111.22707367 101.38008118]
[110.98477173 105.20075989]
[109.40143585 108.97249603]
[112.28670502 123.69239044]
[115.17198181 138.41227722]
[131.28654480 148.37394714]
[134.93977356 166.63777161]
[124.26914978 181.51235962]
[127.59140778 196.13981628]
[130.91366577 210.76727295]
[141.51531982 222.51101685]
[136.78906250 236.63589478]
[147.39071655 248.37962341]
[142.66447449 262.50448608]
[145.98674011 277.13195801]
[149.30899048 291.75942993]
[164.19125366 289.79910278]
[179.19091797 289.22030640]
[194.17997742 290.02798462]
[209.03059387 292.21527100]
[223.61602783 295.76345825]
[237.81184387 300.64230347]
[251.49694824 306.81018066]
[264.55456543 314.21447754]
[276.87329102 322.79196167]
[288.34802246 332.46954346]
[298.88085938 343.16458130]
[308.38192749 354.78585815]
[316.77020264 367.23422241]
[323.97409058 380.40344238]
[329.93209839 394.18121338]
[334.59344482 408.44992065]
[337.91836548 423.08789062]
[339.87844849 437.97018433]
[340.45697021 452.96984863]
[339.64904785 467.95889282]
[337.46151733 482.80947876]
[333.91308594 497.39483643]
[329.03399658 511.59060669]
[322.86590576 525.27557373]
[315.46139526 538.33306885]
[306.88366699 550.65167236]
[297.20593262 562.12622070]
[286.51071167 572.65887451]
[274.88928223 582.15979004]
[262.44076538 590.54785156]
[249.27140808 597.75146484]
[235.49356079 603.70928955]
[221.22476196 608.37042236]
[206.58674622 611.69506836]
[191.70442200 613.65490723]
[176.70474243 614.23321533]
[161.71569824 613.42498779]
[146.86517334 611.23724365]
[132.27984619 607.68853760]
[118.08419037 602.80920410]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 170]
[27 169]
[28 168]
[30 166]
[32 164]
[33 163]
[34 162]
[39 159]
[40 158]
[41 157]
[42 152]
[43 151]
[44 150]
[45 149]
[46 148]
[47 147]
[48 146]
[61 145]
[62 144]
[63 143]
[64 142]
[65 141]
[66 140]
[82 127]
[83 126]
[84 125]
[85 124]
[88 123]
[89 122]
[90 121]
[91 120]
[92 114]
[93 113]
[94 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
