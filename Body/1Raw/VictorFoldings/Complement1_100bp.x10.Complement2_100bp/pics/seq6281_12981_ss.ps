%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[95.21550751 729.75738525]
[86.47418213 742.04718018]
[74.95059967 751.77642822]
[61.36912918 758.33343506]
[46.58351898 761.30609131]
[31.52320480 760.50744629]
[17.13489151 755.98779297]
[4.32304001 748.03125000]
[-6.10698652 737.13787842]
[-13.49954700 723.99249268]
[-17.38993835 709.42144775]
[-17.53360939 694.34063721]
[-13.92152786 679.69812012]
[-6.78075123 666.41430664]
[3.43984413 655.32421875]
[16.09778404 647.12493896]
[30.39737701 642.33203125]
[45.43974304 641.24664307]
[48.10553741 626.48541260]
[50.77133560 611.72418213]
[53.43712997 596.96295166]
[56.10292435 582.20172119]
[58.76871872 567.44055176]
[61.43451691 552.67932129]
[59.49564362 548.31469727]
[60.27801132 542.68579102]
[64.40570068 537.52111816]
[67.50981140 522.84582520]
[70.61392212 508.17050171]
[57.42222595 501.11666870]
[46.74189377 490.62088013]
[39.44446945 477.52761841]
[36.12882614 462.89385986]
[37.07201004 447.90362549]
[42.20610809 433.77236938]
[51.12307739 421.64816284]
[63.10715103 412.51870728]
[77.19229126 407.13064575]
[92.24005127 405.92864990]
[95.34416199 391.25335693]
[98.44827271 376.57803345]
[101.55238342 361.90274048]
[104.65649414 347.22744751]
[107.76060486 332.55212402]
[110.86471558 317.87683105]
[113.96882629 303.20153809]
[117.07293701 288.52621460]
[117.63114166 273.53662109]
[115.62712860 258.67108154]
[106.25881958 247.09162903]
[112.08303833 232.38145447]
[110.07902527 217.51593018]
[108.07501221 202.65040588]
[106.07099915 187.78486633]
[104.06698608 172.91934204]
[102.06297302 158.05381775]
[100.05895996 143.18829346]
[98.05494690 128.32275391]
[95.38915253 113.56154633]
[86.03180695 103.17252350]
[89.98339081 89.76071930]
[86.66113281 75.13325500]
[81.70874786 67.45786285]
[83.40001678 60.26332092]
[80.29590607 45.58801651]
[69.93107605 37.91122437]
[67.64778137 25.62422562]
[74.13381958 15.41355133]
[71.24854279 0.69365978]
[68.36327362 -14.02623177]
[65.25916290 -28.70153427]
[61.93690109 -43.32899475]
[58.61464310 -57.95645523]
[45.52485657 -66.40010834]
[42.36398697 -81.28176117]
[50.49438858 -93.70883179]
[47.17212677 -108.33629608]
[43.84986877 -122.96375275]
[40.52761078 -137.59121704]
[29.92595673 -149.33496094]
[34.65220642 -163.45982361]
[31.32994652 -178.08728027]
[28.00768661 -192.71473694]
[12.95826435 -192.39886475]
[-1.84661710 -195.11923218]
[-15.80070782 -200.76443481]
[-28.33259583 -209.10328674]
[-38.92910767 -219.79435730]
[-47.15632629 -232.39982605]
[-52.67734528 -246.40350342]
[-55.26609039 -261.23196411]
[-54.81655121 -276.27798462]
[-51.34713364 -290.92544556]
[-44.99990845 -304.57455444]
[-36.03479385 -316.66635132]
[-24.81890106 -326.70568848]
[-11.81151867 -334.28149414]
[2.45471168 -339.08352661]
[17.39559555 -340.91516113]
[32.39931488 -339.70138550]
[46.85147858 -335.49188232]
[60.16027451 -328.45901489]
[71.78071594 -318.89083862]
[81.23696136 -307.17913818]
[88.14176941 -293.80346680]
[92.21240997 -279.31158447]
[93.28217316 -264.29690552]
[91.30727386 -249.37426758]
[86.36856842 -235.15476990]
[78.66829681 -222.22068787]
[68.52178192 -211.10163879]
[56.34451294 -202.25296021]
[42.63514709 -196.03700256]
[45.95740509 -181.40954590]
[49.27966690 -166.78208923]
[59.64368820 -156.08459473]
[55.15507126 -140.91346741]
[58.47732925 -126.28601074]
[61.79958725 -111.65855408]
[65.12184906 -97.03108978]
[77.82265472 -89.33530426]
[81.40026855 -74.54830170]
[73.24210358 -61.27871323]
[76.56436157 -46.65125275]
[79.88661957 -32.02379227]
[83.37863922 -28.76574707]
[84.86103821 -23.27944565]
[83.08316040 -16.91150475]
[85.96843719 -2.19161272]
[88.85370636 12.52827835]
[101.08362579 25.11382294]
[94.97120667 42.48390579]
[98.07531738 57.15921021]
[101.28858948 71.81099701]
[104.61084747 86.43845367]
[113.96819305 96.82747650]
[110.01660919 110.23928070]
[118.90621185 98.15727234]
[133.71400452 95.76367188]
[145.95741272 104.42963409]
[148.62284851 119.19091797]
[140.18344116 131.59158325]
[125.47365570 134.52795410]
[112.92047119 126.31874847]
[114.92448425 141.18428040]
[116.92849731 156.04980469]
[118.93251038 170.91532898]
[120.93653107 185.78085327]
[122.94054413 200.64639282]
[124.94455719 215.51191711]
[126.94857025 230.37744141]
[136.46022034 243.02018738]
[130.49266052 256.66708374]
[132.49667358 271.53259277]
[137.32508850 257.33096313]
[145.49078369 244.74839783]
[156.49444580 234.55429077]
[169.66317749 227.37205505]
[184.19171143 223.64086914]
[199.19161987 223.58891296]
[213.74565125 227.21934509]
[226.96383667 234.31016541]
[238.03785706 244.42778015]
[246.29054260 256.95346069]
[251.21723938 271.12130737]
[252.51667786 286.06491089]
[250.10939026 300.87048340]
[244.14259338 314.63265991]
[234.98115540 326.50985718]
[223.18528748 335.77581787]
[209.47633362 341.86386108]
[194.69259644 344.40176392]
[179.73809814 343.23431396]
[165.52731323 338.43289185]
[152.92924500 330.29110718]
[142.71426392 319.30685425]
[135.50701904 306.15179443]
[131.74822998 291.63034058]
[128.64411926 306.30563354]
[125.54001617 320.98095703]
[122.43590546 335.65625000]
[119.33179474 350.33154297]
[116.22768402 365.00683594]
[113.12357330 379.68215942]
[110.01946259 394.35745239]
[106.91535187 409.03274536]
[120.18756866 416.22497559]
[130.88458252 426.85494995]
[138.14552307 440.05511475]
[141.38940430 454.75155640]
[140.36170959 469.75140381]
[135.15423584 483.83963013]
[126.19703674 495.87747192]
[114.22287750 504.89440918]
[100.20732117 510.16656494]
[85.28922272 511.27462769]
[82.18511200 525.94989014]
[79.08100891 540.62524414]
[76.19573212 555.34509277]
[73.52993774 570.10632324]
[70.86414337 584.86755371]
[68.19834900 599.62878418]
[65.53255463 614.38995361]
[62.86675644 629.15118408]
[60.20095825 643.91241455]
[73.91347504 650.19079590]
[85.63329315 659.68267822]
[94.62371063 671.79150391]
[100.31958008 685.75604248]
[102.36285400 700.69842529]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 205]
[19 204]
[20 203]
[21 202]
[22 201]
[23 200]
[24 199]
[27 198]
[28 197]
[29 196]
[39 186]
[40 185]
[41 184]
[42 183]
[43 182]
[44 181]
[45 180]
[46 179]
[47 178]
[48 154]
[49 153]
[51 151]
[52 150]
[53 149]
[54 148]
[55 147]
[56 146]
[57 145]
[58 144]
[59 137]
[61 135]
[62 134]
[64 133]
[65 132]
[68 130]
[69 129]
[70 128]
[71 125]
[72 124]
[73 123]
[76 120]
[77 119]
[78 118]
[79 117]
[81 115]
[82 114]
[83 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
