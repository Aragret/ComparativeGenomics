%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[192.78804016 317.03799438]
[193.19512939 302.03591919]
[194.76354980 287.11047363]
[197.48385620 272.35147095]
[201.33970642 257.84765625]
[206.30790710 243.68626404]
[212.35858154 229.95243835]
[219.45532227 216.72880554]
[227.55546570 204.09487915]
[215.59313965 195.04489136]
[203.63079834 185.99488831]
[191.66845703 176.94488525]
[179.70613098 167.89488220]
[167.67674255 158.93418884]
[155.58099365 150.06329346]
[143.48524475 141.19239807]
[131.38949585 132.32150269]
[119.29373932 123.45060730]
[107.19799042 114.57971191]
[90.48197937 113.18280792]
[83.89591217 97.75555420]
[71.66943359 89.06573486]
[59.44294357 80.37590790]
[62.03024673 95.15108490]
[54.62403488 108.19516754]
[40.61033249 113.54457092]
[26.39601517 108.75362396]
[18.47967529 96.01268768]
[20.48055840 81.14673615]
[31.48388863 70.95228577]
[46.46086502 70.09063721]
[35.20476913 60.17598343]
[23.94867516 50.26133347]
[12.69257927 40.34667969]
[1.98701978 50.86280060]
[-9.44945526 60.57901382]
[-21.55722237 69.44466400]
[-34.27315521 77.41352844]
[-47.53095627 84.44406128]
[-61.26150894 90.49961090]
[-75.39322662 95.54860687]
[-89.85243225 99.56471252]
[-104.56373596 102.52700806]
[-119.45045471 104.42004395]
[-134.43495178 105.23394012]
[-149.43911743 104.96446991]
[-164.38473511 103.61302185]
[-179.19387817 101.18665314]
[-193.78932190 97.69800568]
[-208.09498596 93.16527557]
[-222.03628540 87.61209869]
[-235.54054260 81.06740570]
[-248.53733826 73.56534576]
[-260.95892334 65.14500427]
[-272.74053955 55.85030365]
[-283.82073975 45.72969055]
[-294.14178467 34.83593369]
[-303.64984131 23.22583008]
[-312.29534912 10.95990562]
[-320.03323364 -1.89788806]
[-326.82315063 -15.28051472]
[-332.62969971 -29.11820412]
[-337.42263794 -43.33881378]
[-341.17691040 -57.86819839]
[-343.87301636 -72.63060760]
[-345.49685669 -87.54908752]
[-346.03997803 -102.54584503]
[-345.49954224 -117.54270172]
[-343.87835693 -132.46147156]
[-341.18490601 -147.22436523]
[-337.43319702 -161.75440979]
[-332.64282227 -175.97587585]
[-326.83871460 -189.81460571]
[-320.05117798 -203.19844055]
[-312.31561279 -216.05761719]
[-303.67227173 -228.32508850]
[-294.16629028 -239.93688965]
[-283.84719849 -250.83247375]
[-272.76879883 -260.95507812]
[-260.98886108 -270.25186157]
[-248.56877136 -278.67443848]
[-235.57330322 -286.17880249]
[-222.07022095 -292.72592163]
[-208.12991333 -298.28158569]
[-193.82505798 -302.81686401]
[-179.23022461 -306.30810547]
[-164.42152405 -308.73712158]
[-149.47615051 -310.09124756]
[-134.47203064 -310.36337280]
[-119.48738098 -309.55215454]
[-104.60033417 -307.66177368]
[-89.88849640 -304.70211792]
[-75.42858124 -300.68856812]
[-61.29595947 -295.64212036]
[-47.56432724 -289.58901978]
[-34.30527115 -282.56085205]
[-21.58791542 -274.59423828]
[-9.47856808 -265.73074341]
[1.95964110 -256.01660156]
[12.66707611 -245.50238037]
[22.58791351 -234.24295044]
[31.67043114 -222.29699707]
[39.86727524 -209.72682190]
[47.13571167 -196.59793091]
[53.43784332 -182.97880554]
[58.74081802 -168.94041443]
[63.01698303 -154.55596924]
[66.24404907 -139.90046692]
[68.40518188 -125.05030823]
[69.48912811 -110.08291626]
[69.49023438 -95.07632446]
[68.40847778 -80.10877228]
[66.24951935 -65.25830078]
[63.02460861 -50.60232162]
[58.75055313 -36.21725464]
[53.44963837 -22.17809105]
[47.14950180 -8.55803013]
[39.88299561 4.57192039]
[31.68799400 17.14330673]
[22.60723114 29.09058571]
[33.86332703 39.00523758]
[45.11942291 48.91988754]
[56.37551880 58.83453751]
[68.13276672 68.14942169]
[80.35925293 76.83924866]
[92.58573914 85.52906799]
[104.16539001 84.28285217]
[113.60795593 91.10041809]
[116.06888580 102.48396301]
[128.16464233 111.35485840]
[140.26039124 120.22575378]
[152.35614014 129.09664917]
[164.45188904 137.96754456]
[176.54763794 146.83843994]
[185.31845093 149.39006042]
[188.75611877 155.93255615]
[200.71846008 164.98254395]
[212.68080139 174.03254700]
[224.64312744 183.08255005]
[236.60546875 192.13255310]
[246.56007385 180.90161133]
[257.35507202 170.47584534]
[268.92553711 160.91796875]
[281.20184326 152.28547668]
[294.11022949 144.63024902]
[307.57299805 137.99836731]
[321.50921631 132.42968750]
[335.83505249 127.95771027]
[350.46435547 124.60933685]
[365.30914307 122.40470123]
[380.28015137 121.35705566]
[395.28732300 121.47270966]
[410.24038696 122.75096130]
[425.04943848 125.18412781]
[439.62539673 128.75758362]
[453.88061523 133.44981384]
[467.72937012 139.23262024]
[481.08831787 146.07121277]
[493.87716675 153.92446899]
[506.01901245 162.74514771]
[517.44079590 172.48020935]
[528.07379150 183.07110596]
[537.85412598 194.45414734]
[546.72296143 206.56085205]
[554.62689209 219.31842041]
[561.51849365 232.65013123]
[567.35620117 246.47579956]
[572.10504150 260.71228027]
[575.73632812 275.27395630]
[578.22827148 290.07321167]
[579.56585693 305.02108765]
[579.74108887 320.02767944]
[578.75286865 335.00271606]
[576.60717773 349.85614014]
[573.31689453 364.49862671]
[568.90185547 378.84213257]
[563.38854980 392.80035400]
[556.81018066 406.28933716]
[549.20623779 419.22799683]
[540.62255859 431.53848267]
[531.11071777 443.14678955]
[520.72784424 453.98309326]
[509.53652954 463.98220825]
[497.60400391 473.08401489]
[485.00201416 481.23376465]
[471.80636597 488.38241577]
[458.09643555 494.48703003]
[443.95468140 499.51086426]
[429.46612549 503.42367554]
[414.71792603 506.20199585]
[399.79879761 507.82907104]
[384.79840088 508.29510498]
[369.80703735 507.59735107]
[354.91479492 505.73992920]
[340.21130371 502.73410034]
[325.78494263 498.59783936]
[311.72250366 493.35610962]
[298.10852051 487.04040527]
[285.02493286 479.68869019]
[272.55035400 471.34518433]
[260.75988770 462.06011963]
[249.72439575 451.88925171]
[239.51023865 440.89382935]
[230.17887878 429.13992310]
[221.78642273 416.69827271]
[214.38334656 403.64367676]
[208.01416016 390.05462646]
[202.71719360 376.01290894]
[198.52429199 361.60290527]
[195.46066284 346.91131592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 140]
[10 139]
[11 138]
[12 137]
[13 136]
[14 134]
[15 133]
[16 132]
[17 131]
[18 130]
[19 129]
[21 126]
[22 125]
[23 124]
[31 123]
[32 122]
[33 121]
[34 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
