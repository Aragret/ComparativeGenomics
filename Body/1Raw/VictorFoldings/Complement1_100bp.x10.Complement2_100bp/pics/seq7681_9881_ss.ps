%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[34.91616821 386.73480225]
[29.02320290 400.53607178]
[22.13852692 413.87036133]
[14.29886913 426.66656494]
[5.54606009 438.85632324]
[-4.07320023 450.37466431]
[-14.50758839 461.16012573]
[-25.70143127 471.15515137]
[-37.59500504 480.30639648]
[-50.12485123 488.56503296]
[-63.22411728 495.88702393]
[-76.82291412 502.23330688]
[-90.84867859 507.57000732]
[-105.22658539 511.86862183]
[-119.87991333 515.10626221]
[-134.73048401 517.26562500]
[-149.69906616 518.33520508]
[-164.70579529 518.30932617]
[-179.67059326 517.18804932]
[-194.51361084 514.97741699]
[-209.15568542 511.68917847]
[-223.51866150 507.34091187]
[-237.52590942 501.95581055]
[-251.10270691 495.56262207]
[-264.17660522 488.19543457]
[-276.67785645 479.89355469]
[-288.53976440 470.70129395]
[-299.69903564 460.66769409]
[-310.09609985 449.84625244]
[-319.67553711 438.29476929]
[-328.38619995 426.07482910]
[-336.18161011 413.25164795]
[-343.02020264 399.89364624]
[-348.86544800 386.07211304]
[-353.68621826 371.86074829]
[-357.45675659 357.33541870]
[-360.15695190 342.57357788]
[-361.77236938 327.65405273]
[-362.29443359 312.65637207]
[-361.72033691 297.66061401]
[-360.05313110 282.74676514]
[-357.30175781 267.99441528]
[-353.48083496 253.48223877]
[-348.61080933 239.28770447]
[-342.71762085 225.48651123]
[-335.83270264 212.15232849]
[-327.99285889 199.35627747]
[-319.23983765 187.16664124]
[-309.62039185 175.64845276]
[-299.18582153 164.86317444]
[-287.99182129 154.86834717]
[-276.09808350 145.71730042]
[-263.56811523 137.45884705]
[-250.46871948 130.13706970]
[-236.86982727 123.79101562]
[-222.84396362 118.45455933]
[-208.46598816 114.15615845]
[-193.81260681 110.91876221]
[-178.96200562 108.75963593]
[-163.99340820 107.69029999]
[-148.98667908 107.71645355]
[-134.02189636 108.83797455]
[-119.17890930 111.04885864]
[-104.53690338 114.33732605]
[-90.17399597 118.68582153]
[-76.16683197 124.07114410]
[-62.59014130 130.46456909]
[-49.51635742 137.83197021]
[-37.01524353 146.13404846]
[-25.15349579 155.32650757]
[-13.99440002 165.36030579]
[-3.59749842 176.18188477]
[7.94880295 166.60676575]
[19.49510574 157.03164673]
[31.04140663 147.45652771]
[29.90552521 132.62927246]
[37.81187439 119.82482910]
[51.90670013 114.06381989]
[66.86402893 117.74954224]
[78.41033173 108.17442322]
[89.95663452 98.59929657]
[93.65787506 91.43875885]
[101.74686432 88.96912384]
[113.43444824 79.56697083]
[125.12202454 70.16481781]
[136.80960083 60.76266861]
[148.49719238 51.36051941]
[160.18476868 41.95836639]
[171.73107910 32.38324738]
[183.13352966 22.63728142]
[194.53599548 12.89131546]
[205.93846130 3.14534950]
[217.34092712 -6.60061598]
[208.46992493 -18.70506287]
[200.52830505 -31.43859863]
[193.56048584 -44.73000717]
[187.60540771 -58.50496292]
[182.69639587 -72.68642426]
[178.86090088 -87.19508362]
[176.12037659 -101.94979858]
[174.49012756 -116.86806488]
[173.97929382 -131.86643982]
[174.59072876 -146.86105347]
[176.32101440 -161.76803589]
[179.16046143 -176.50404358]
[183.09320068 -190.98664856]
[188.09722900 -205.13485718]
[194.14456177 -218.86955261]
[201.20140076 -232.11392212]
[209.22825623 -244.79389954]
[218.18025208 -256.83856201]
[228.00732422 -268.18057251]
[238.65449524 -278.75646973]
[250.06225586 -288.50711060]
[262.16677856 -297.37802124]
[274.90039062 -305.31951904]
[288.19186401 -312.28723145]
[301.96685791 -318.24218750]
[316.14837646 -323.15106201]
[330.65707397 -326.98641968]
[345.41180420 -329.72683716]
[360.33007812 -331.35693359]
[375.32846069 -331.86764526]
[390.32305908 -331.25607300]
[405.23004150 -329.52566528]
[419.96600342 -326.68609619]
[434.44857788 -322.75323486]
[448.59674072 -317.74908447]
[462.33139038 -311.70159912]
[475.57571411 -304.64465332]
[488.25561523 -296.61767578]
[500.30020142 -287.66558838]
[511.64212036 -277.83840942]
[522.21789551 -267.19113159]
[531.96850586 -255.78330994]
[540.83923340 -243.67869568]
[548.78063965 -230.94502258]
[555.74822998 -217.65348816]
[561.70306396 -203.87843323]
[566.61181641 -189.69688416]
[570.44708252 -175.18815613]
[573.18731689 -160.43339539]
[574.81732178 -145.51510620]
[575.32788086 -130.51672363]
[574.71618652 -115.52212524]
[572.98565674 -100.61516571]
[570.14593506 -85.87921143]
[566.21295166 -71.39667511]
[561.20867920 -57.24855423]
[555.16107178 -43.51396561]
[548.10400391 -30.26971817]
[540.07696533 -17.58988571]
[531.12475586 -5.54537725]
[521.29748535 5.79644966]
[510.65008545 16.37216568]
[499.24215698 26.12262535]
[487.13748169 34.99330139]
[474.40374756 42.93458176]
[461.11215210 49.90205765]
[447.33703613 55.85676575]
[433.15545654 60.76539993]
[418.64669800 64.60050964]
[403.89190674 67.34065247]
[388.97360229 68.97049713]
[373.97521973 69.48093414]
[358.98062134 68.86910248]
[344.07366943 67.13843536]
[329.33773804 64.29859924]
[314.85522461 60.36547852]
[300.70715332 55.36107254]
[286.97262573 49.31336594]
[273.72845459 42.25618362]
[261.04867554 34.22898865]
[249.00424194 25.27667618]
[237.66250610 15.44930840]
[227.08688354 4.80184650]
[215.68441772 14.54781246]
[204.28196716 24.29377747]
[192.87950134 34.03974533]
[181.47703552 43.78570938]
[180.21763611 48.39254761]
[176.05088806 52.25714874]
[169.58691406 53.64594650]
[157.89933777 63.04809952]
[146.21176147 72.45024872]
[134.52418518 81.85240173]
[122.83659363 91.25455475]
[111.14901733 100.65670013]
[99.53175354 110.14559937]
[87.98545074 119.72071838]
[76.43914795 129.29583740]
[77.29350281 144.67687988]
[69.02386475 157.46228027]
[54.97755051 162.86274719]
[40.61652756 159.00283813]
[29.07022476 168.57795715]
[17.52392197 178.15307617]
[5.97762108 187.72819519]
[14.68848228 199.94798279]
[22.48411369 212.77102661]
[29.32291985 226.12892151]
[35.16841507 239.95037842]
[39.98941040 254.16165161]
[43.76017761 268.68692017]
[46.46060562 283.44869995]
[48.07628632 298.36822510]
[48.59859085 313.36587524]
[48.02474213 328.36163330]
[46.35779572 343.27551270]
[43.60664749 358.02792358]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[72 198]
[73 197]
[74 196]
[75 195]
[79 191]
[80 190]
[81 189]
[83 188]
[84 187]
[85 186]
[86 185]
[87 184]
[88 183]
[89 180]
[90 179]
[91 178]
[92 177]
[93 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
