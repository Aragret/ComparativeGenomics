%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[170.56190491 686.45379639]
[156.94169617 680.16253662]
[143.64393616 673.21569824]
[130.70016479 665.62957764]
[118.14111328 657.42230225]
[105.99653625 648.61328125]
[94.29525757 639.22338867]
[83.06502533 629.27496338]
[72.33248138 618.79150391]
[62.12307739 607.79797363]
[52.46102905 596.32043457]
[43.36925888 584.38604736]
[34.86932373 572.02319336]
[26.98139381 559.26110840]
[19.72417068 546.13012695]
[13.11487103 532.66143799]
[7.16917181 518.88684082]
[1.90117466 504.83917236]
[-2.67662525 490.55163574]
[-6.55336952 476.05816650]
[-9.71986294 461.39315796]
[-12.16859531 446.59133911]
[-13.89375782 431.68786621]
[-14.89125919 416.71807861]
[-15.15873241 401.71749878]
[-14.69554424 386.72164917]
[-13.50279331 371.76614380]
[-11.58330822 356.88644409]
[-8.94164181 342.11785889]
[-5.58405972 327.49542236]
[-1.51852596 313.05377197]
[3.24531651 298.82717896]
[8.69616795 284.84942627]
[14.82110023 271.15362549]
[21.60558510 257.77227783]
[29.03353119 244.73713684]
[37.08731842 232.07908630]
[45.74784470 219.82817078]
[54.99457169 208.01344299]
[64.80555725 196.66293335]
[75.15754700 185.80355835]
[86.02597046 175.46107483]
[97.38506317 165.66001892]
[109.20787048 156.42362976]
[121.46635437 147.77381897]
[113.42517853 135.11129761]
[105.38401031 122.44877625]
[97.34283447 109.78624725]
[90.70672607 105.21080780]
[89.27783203 96.87479401]
[81.42607880 84.09395599]
[73.57431793 71.31311035]
[65.72256470 58.53226852]
[51.90624619 50.82383728]
[51.83676529 35.92939377]
[43.98500824 23.14855194]
[36.13325500 10.36771011]
[28.28149796 -2.41313291]
[14.72579193 4.04247904]
[0.56068361 9.02061081]
[-14.05332565 12.46485615]
[-28.95064735 14.33619022]
[-43.96248627 14.61340714]
[-58.91873932 13.29336834]
[-73.64994812 10.39102936]
[-87.98919678 5.93927622]
[-101.77400208 -0.01144930]
[-114.84818268 -7.39372063]
[-127.06359100 -16.12389183]
[-138.28182983 -26.10304260]
[-148.37576294 -37.21810150]
[-157.23103333 -49.34312439]
[-164.74731445 -62.34072876]
[-170.83941650 -76.06364441]
[-175.43832397 -90.35636902]
[-178.49194336 -105.05696869]
[-179.96565247 -119.99886322]
[-179.84275818 -135.01275635]
[-178.12464905 -149.92852783]
[-174.83081055 -164.57716370]
[-169.99855042 -178.79269409]
[-163.68261719 -192.41404724]
[-155.95458984 -205.28688049]
[-146.90200806 -217.26531982]
[-136.62748718 -228.21365356]
[-125.24739838 -238.00782776]
[-112.89071655 -246.53686523]
[-99.69744873 -253.70413208]
[-85.81707764 -259.42840576]
[-71.40687561 -263.64483643]
[-56.63013077 -266.30563354]
[-41.65427017 -267.38067627]
[-26.64898300 -266.85775757]
[-11.78428936 -264.74282837]
[2.77138066 -261.05981445]
[16.85310173 -255.85046387]
[30.30131531 -249.17382812]
[42.96364594 -241.10551453]
[54.69661713 -231.73698425]
[65.36728668 -221.17436218]
[74.85474396 -209.53733826]
[83.05149078 -196.95777893]
[89.86465454 -183.57820129]
[95.21703339 -169.55023193]
[99.04798889 -155.03279114]
[101.31410217 -140.19039917]
[101.98970032 -125.19120789]
[101.06713104 -110.20518494]
[98.55684662 -95.40212250]
[94.48728180 -80.94976044]
[88.90456390 -67.01184845]
[81.87194061 -53.74632263]
[73.46909332 -41.30348206]
[63.79124069 -29.82431412]
[52.94803619 -19.43889236]
[41.06233978 -10.26488876]
[48.91409683 2.51595426]
[56.76585007 15.29679680]
[64.61760712 28.07763863]
[77.87231445 34.87189865]
[78.50341034 50.68051147]
[86.35516357 63.46135330]
[94.20691681 76.24219513]
[102.05867767 89.02304077]
[110.00535583 101.74507904]
[118.04653168 114.40760040]
[126.08770752 127.07012177]
[134.12887573 139.73265076]
[147.17045593 132.31597900]
[160.55766296 125.54307556]
[174.25874329 119.42999268]
[188.24122620 113.99123383]
[202.47190857 109.23970032]
[216.91706848 105.18665314]
[231.54241943 101.84172058]
[246.31329346 99.21282959]
[261.19464111 97.30622101]
[276.15115356 96.12640381]
[291.14739990 95.67618561]
[306.14776611 95.95663452]
[321.11669922 96.96708679]
[336.01864624 98.70513916]
[350.81832886 101.16667175]
[365.48062134 104.34584808]
[379.97073364 108.23513031]
[394.25427246 112.82528687]
[408.29742432 118.10543060]
[422.06683350 124.06304169]
[435.52984619 130.68399048]
[448.65451050 137.95256042]
[461.40975952 145.85153198]
[473.76528931 154.36215210]
[485.69177246 163.46424866]
[497.16098022 173.13621521]
[508.14569092 183.35513306]
[518.61981201 194.09674072]
[528.55853271 205.33557129]
[537.93829346 217.04496765]
[546.73681641 229.19715881]
[554.93322754 241.76330566]
[562.50811768 254.71362305]
[569.44348145 268.01739502]
[575.72290039 281.64303589]
[581.33148193 295.55825806]
[586.25592041 309.73007202]
[590.48455811 324.12481689]
[594.00726318 338.70834351]
[596.81579590 353.44613647]
[598.90344238 368.30316162]
[600.26525879 383.24420166]
[600.89794922 398.23385620]
[600.80017090 413.23651123]
[599.97204590 428.21664429]
[598.41552734 443.13867188]
[596.13433838 457.96722412]
[593.13391113 472.66711426]
[589.42132568 487.20349121]
[585.00537109 501.54187012]
[579.89660645 515.64825439]
[574.10705566 529.48913574]
[567.65051270 543.03179932]
[560.54223633 556.24395752]
[552.79913330 569.09442139]
[544.43957520 581.55261230]
[535.48333740 593.58905029]
[525.95172119 605.17517090]
[515.86724854 616.28344727]
[505.25396729 626.88757324]
[494.13696289 636.96240234]
[482.54263306 646.48400879]
[470.49844360 655.42980957]
[458.03302002 663.77862549]
[445.17587280 671.51055908]
[431.95751953 678.60742188]
[418.40933228 685.05224609]
[404.56341553 690.82983398]
[390.45260620 695.92639160]
[376.11041260 700.32995605]
[361.57083130 704.02996826]
[346.86834717 707.01770020]
[332.03784180 709.28601074]
[317.11447144 710.82965088]
[302.13363647 711.64483643]
[287.13088989 711.72967529]
[272.14181519 711.08392334]
[257.20193481 709.70922852]
[242.34671021 707.60870361]
[227.61137390 704.78747559]
[213.03088379 701.25213623]
[198.63980103 697.01104736]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 128]
[46 127]
[47 126]
[48 125]
[50 124]
[51 123]
[52 122]
[53 121]
[55 119]
[56 118]
[57 117]
[58 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
