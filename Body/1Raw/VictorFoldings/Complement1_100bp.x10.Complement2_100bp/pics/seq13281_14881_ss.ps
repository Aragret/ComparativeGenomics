%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[-54.14889908 344.24462891]
[-51.63238144 359.04479980]
[-50.60200882 374.02203369]
[-51.06802368 389.02740479]
[-53.02579880 403.91180420]
[-56.45587158 418.52731323]
[-61.32415771 432.72866821]
[-67.58226776 446.37472534]
[-75.16799927 459.32986450]
[-84.00597382 471.46530151]
[-94.00833893 482.66043091]
[-105.07569122 492.80401611]
[-117.09803009 501.79522705]
[-129.95588684 509.54470825]
[-143.52143860 515.97540283]
[-157.65989685 521.02349854]
[-172.23071289 524.63867188]
[-187.08909607 526.78515625]
[-202.08735657 527.44146729]
[-217.07643127 526.60119629]
[-231.90736389 524.27264404]
[-246.43273926 520.47894287]
[-260.50817871 515.25781250]
[-273.99383545 508.66116333]
[-286.75564575 500.75454712]
[-298.66677856 491.61651611]
[-309.60885620 481.33792114]
[-319.47314453 470.02090454]
[-328.16156006 457.77795410]
[-335.58779907 444.73074341]
[-341.67803955 431.00894165]
[-346.37173462 416.74896240]
[-349.62225342 402.09246826]
[-351.39727783 387.18515015]
[-351.67916870 372.17517090]
[-350.46514893 357.21173096]
[-347.76724243 342.44351196]
[-343.61230469 328.01733398]
[-338.04159546 314.07653809]
[-331.11050415 300.75967407]
[-322.88790894 288.19912720]
[-313.45553589 276.51971436]
[-302.90710449 265.83752441]
[-291.34747314 256.25869751]
[-278.89154053 247.87844849]
[-265.66311646 240.78009033]
[-251.79362488 235.03413391]
[-237.42092896 230.69770813]
[-222.68789673 227.81391907]
[-207.74093628 226.41140747]
[-192.72860718 226.50413513]
[-177.80010986 228.09115601]
[-163.10382080 231.15670776]
[-148.78579712 235.67031860]
[-134.98834229 241.58714294]
[-121.84857941 248.84835815]
[-109.49710846 257.38180542]
[-98.05668640 267.10269165]
[-87.25453186 256.69531250]
[-76.45236969 246.28793335]
[-65.65021515 235.88055420]
[-64.66725159 231.20692444]
[-60.73790741 227.10116577]
[-54.36807251 225.33009338]
[-43.26083755 215.24894714]
[-32.15360260 205.16781616]
[-21.04637146 195.08666992]
[-9.93913651 185.00553894]
[1.16809678 174.92439270]
[2.28977394 170.28210449]
[6.33962107 166.29515076]
[12.75936604 164.71452332]
[24.16182899 154.96855164]
[35.56428909 145.22257996]
[46.96675491 135.47662354]
[58.36921692 125.73065948]
[63.01686859 111.57973480]
[78.53443146 108.49494934]
[89.93688965 98.74898529]
[93.53111267 91.53413391]
[101.58243561 88.94433594]
[113.12873840 79.36921692]
[124.67504120 69.79409790]
[135.63095093 59.54870605]
[145.95761108 48.66937256]
[156.28428650 37.79003525]
[166.61096191 26.91070175]
[170.24922180 18.53210640]
[177.17327881 15.94771385]
[181.29005432 0.67149788]
[195.72038269 -3.01831222]
[206.20788574 -13.74269199]
[196.33406067 -25.04496765]
[187.37742615 -37.08709717]
[179.39323425 -49.79484177]
[172.43069458 -63.08984375]
[166.53274536 -76.89014435]
[161.73573303 -91.11064911]
[158.06924438 -105.66368866]
[155.55589294 -120.45954132]
[154.21116638 -135.40696716]
[154.04335022 -150.41383362]
[155.05348206 -165.38760376]
[157.23533630 -180.23596191]
[160.57546997 -194.86735535]
[165.05326843 -209.19157410]
[170.64114380 -223.12031555]
[177.30462646 -236.56768799]
[185.00265503 -249.45080566]
[193.68774414 -261.69021606]
[203.30636597 -273.21044922]
[213.79922485 -283.94052124]
[225.10159302 -293.81423950]
[237.14381409 -302.77075195]
[249.85163879 -310.75482178]
[263.14672852 -317.71722412]
[276.94708252 -323.61502075]
[291.16763306 -328.41189575]
[305.72070312 -332.07824707]
[320.51657104 -334.59143066]
[335.46401978 -335.93600464]
[350.47088623 -336.10366821]
[365.44464111 -335.09338379]
[380.29296875 -332.91137695]
[394.92434692 -329.57110596]
[409.24850464 -325.09317017]
[423.17721558 -319.50512695]
[436.62451172 -312.84152222]
[449.50753784 -305.14337158]
[461.74685669 -296.45812988]
[473.26702881 -286.83938599]
[483.99697876 -276.34643555]
[493.87057495 -265.04397583]
[502.82696533 -253.00164795]
[510.81091309 -240.29374695]
[517.77319336 -226.99859619]
[523.67083740 -213.19818115]
[528.46752930 -198.97756958]
[532.13372803 -184.42445374]
[534.64678955 -169.62855530]
[535.99121094 -154.68109131]
[536.15875244 -139.67422485]
[535.14831543 -124.70048523]
[532.96612549 -109.85218048]
[529.62573242 -95.22085571]
[525.14758301 -80.89672089]
[519.55944824 -66.96809387]
[512.89569092 -53.52085114]
[505.19738770 -40.63790131]
[496.51205444 -28.39866638]
[486.89318848 -16.87861252]
[476.40011597 -6.14876175]
[465.09756470 3.72472954]
[453.05514526 12.68098831]
[440.34716797 20.66479492]
[427.05194092 27.62692642]
[413.25146484 33.52445602]
[399.03082275 38.32102966]
[384.47766113 41.98706436]
[369.68173218 44.49996948]
[354.73425293 45.84424210]
[339.72738647 46.01159668]
[324.75366211 45.00100327]
[309.90536499 42.81869125]
[295.27407837 39.47811890]
[280.94998169 34.99987411]
[267.02142334 29.41157722]
[253.57424927 22.74767494]
[240.69137573 15.04925632]
[228.45222473 6.36378479]
[216.93226624 -3.25519085]
[206.44476318 7.46918869]
[203.07814026 21.97832489]
[187.89765930 26.43521500]
[177.49029541 37.23736954]
[167.16362000 48.11670685]
[156.83695984 58.99604034]
[146.51028442 69.87537384]
[161.44567871 68.48464966]
[174.40457153 76.03892517]
[180.55361938 89.72063446]
[177.59939575 104.42684174]
[166.64372253 114.67249298]
[151.77281189 116.63621521]
[138.53315735 109.58558655]
[131.86279297 96.15032196]
[134.25016785 81.34040070]
[122.70385742 90.91551971]
[111.15755463 100.49063873]
[99.68285370 110.15145111]
[88.28039551 119.89741516]
[82.81716156 134.74543762]
[68.11518097 137.13311768]
[56.71271896 146.87908936]
[45.31025696 156.62504578]
[33.90779495 166.37101746]
[22.50533104 176.11697388]
[11.24923515 186.03163147]
[0.14200187 196.11277771]
[-10.96523190 206.19390869]
[-22.07246590 216.27505493]
[-33.17969894 226.35618591]
[-44.28693390 236.43733215]
[-55.24284363 246.68272400]
[-66.04499817 257.09008789]
[-76.84715271 267.49746704]
[-87.64931488 277.90484619]
[-78.36091614 289.69909668]
[-70.29302979 302.35955811]
[-63.52582169 315.76043701]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 207]
[59 206]
[60 205]
[61 204]
[64 203]
[65 202]
[66 201]
[67 200]
[68 199]
[69 198]
[72 197]
[73 196]
[74 195]
[75 194]
[76 193]
[78 191]
[79 190]
[81 189]
[82 188]
[83 187]
[84 178]
[85 177]
[86 176]
[87 175]
[89 174]
[91 172]
[92 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
