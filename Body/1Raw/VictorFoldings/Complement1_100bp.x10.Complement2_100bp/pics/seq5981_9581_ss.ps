%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[157.20274353 506.57241821]
[160.13287354 491.81930542]
[165.65039062 477.82656860]
[173.57791138 465.04400635]
[183.66061401 453.88250732]
[195.57437134 444.70089722]
[208.93620300 437.79428101]
[204.53520203 423.45443726]
[200.13420105 409.11459351]
[195.62657166 394.80789185]
[191.01257324 380.53518677]
[186.39855957 366.26245117]
[175.77502441 360.47735596]
[171.81420898 348.62426758]
[177.15673828 336.88458252]
[172.75573730 322.54473877]
[168.35475159 308.20489502]
[163.95375061 293.86505127]
[159.55274963 279.52520752]
[154.58509827 274.05307007]
[155.19468689 264.93899536]
[151.00767517 250.53521729]
[146.82066345 236.13142395]
[142.63365173 221.72764587]
[137.59674072 207.59861755]
[131.72778320 193.79443359]
[125.85881805 179.99026489]
[119.98986053 166.18608093]
[114.12089539 152.38191223]
[102.02070618 143.69660950]
[103.74166107 127.96927643]
[97.87270355 114.16510010]
[86.81798553 105.60444641]
[88.32312012 91.70386505]
[82.45416260 77.89968872]
[76.58519745 64.09551239]
[70.71623993 50.29133224]
[64.33763123 36.71512604]
[51.13290787 28.00043678]
[52.17141724 13.14207935]
[45.29200363 -0.18735008]
[30.76703262 3.76283336]
[15.74400139 4.60624361]
[0.87971801 2.30844283]
[-13.17646217 -3.02772713]
[-25.81099701 -11.16674423]
[-36.47294235 -21.75080299]
[-44.69796371 -34.31554031]
[-50.12858200 -48.31041336]
[-52.52968597 -63.12281036]
[-51.79872131 -78.10488892]
[-47.97006607 -92.60189056]
[-41.21343231 -105.98075867]
[-31.82632065 -117.65779114]
[-20.22094536 -127.12409973]
[-27.10035896 -140.45352173]
[-40.30508423 -149.16821289]
[-39.26657486 -164.02656555]
[-44.61454773 -167.91381836]
[-46.85956573 -173.13464355]
[-46.14568710 -177.85687256]
[-52.62517929 -191.38520813]
[-59.10467529 -204.91355896]
[-65.58417511 -218.44189453]
[-72.06366730 -231.97024536]
[-78.54316711 -245.49859619]
[-85.02265930 -259.02694702]
[-91.50215912 -272.55529785]
[-105.80895233 -267.96951294]
[-120.60694122 -265.37463379]
[-135.62043762 -264.81896973]
[-150.56974792 -266.31292725]
[-165.17637634 -269.82861328]
[-179.16821289 -275.30053711]
[-192.28460693 -282.62680054]
[-204.28118896 -291.67089844]
[-214.93449402 -302.26434326]
[-224.04603577 -314.20977783]
[-231.44607544 -327.28469849]
[-236.99676514 -341.24548340]
[-240.59469604 -355.83206177]
[-242.17283630 -370.77273560]
[-241.70178223 -385.78912354]
[-239.19030762 -400.60147095]
[-234.68522644 -414.93389893]
[-228.27043152 -428.51931763]
[-220.06544495 -441.10470581]
[-210.22311401 -452.45559692]
[-198.92680359 -462.36050415]
[-186.38694763 -470.63488770]
[-172.83717346 -477.12466431]
[-158.52987671 -481.70889282]
[-143.73161316 -484.30215454]
[-128.71804810 -484.85620117]
[-113.76890564 -483.36062622]
[-99.16265106 -479.84338379]
[-85.17140198 -474.36990356]
[-72.05580902 -467.04223633]
[-60.06019974 -457.99685669]
[-49.40805054 -447.40225220]
[-40.29780197 -435.45581055]
[-32.89916992 -422.38012695]
[-27.34999466 -408.41873169]
[-23.75364685 -393.83175659]
[-22.17712593 -378.89093018]
[-22.64980125 -363.87457275]
[-25.16287041 -349.06246948]
[-29.66951180 -334.73056030]
[-36.08577347 -321.14581299]
[-44.29212189 -308.56130981]
[-54.13567734 -297.21151733]
[-65.43305969 -287.30783081]
[-77.97380829 -279.03479004]
[-71.49431610 -265.50643921]
[-65.01481628 -251.97808838]
[-58.53532410 -238.44973755]
[-52.05582809 -224.92140198]
[-45.57633209 -211.39305115]
[-39.09683609 -197.86470032]
[-32.61734009 -184.33636475]
[-25.93714523 -170.90599060]
[-13.22448158 -163.14469910]
[-13.77092934 -147.33293152]
[-6.89151716 -134.00350952]
[7.54770708 -137.97900391]
[22.50380135 -138.86566162]
[37.32316971 -136.62232971]
[51.35768127 -131.34463501]
[63.99302292 -123.26100159]
[74.67558289 -112.72272491]
[82.93671417 -100.18869781]
[88.41328430 -86.20546722]
[90.86364746 -71.38335419]
[90.17829132 -56.36984634]
[86.38475037 -41.82130814]
[79.64648438 -28.37427902]
[70.25585938 -16.61762810]
[58.62143326 -7.06676245]
[65.50084686 6.26266670]
[78.21350861 14.02394581]
[77.66706085 29.83571243]
[84.64525604 16.55772781]
[99.34771729 13.58494568]
[110.93635559 23.10878754]
[110.86844635 38.10863495]
[99.19405365 47.52715683]
[84.52041626 44.42237091]
[90.38937378 58.22654724]
[96.25833893 72.03072357]
[102.12729645 85.83489990]
[113.18201447 94.39555359]
[111.67687988 108.29613495]
[117.54583740 122.10031128]
[130.06582642 131.77299500]
[127.92507172 146.51295471]
[133.79403687 160.31712341]
[139.66299438 174.12130737]
[145.53195190 187.92547607]
[151.40092468 201.72966003]
[156.07099915 187.47517395]
[168.15982056 178.59484863]
[183.15856934 178.40081787]
[195.47306824 186.96545410]
[200.51031494 201.09436035]
[196.39155579 215.51780701]
[184.65296936 224.85620117]
[169.67276001 225.62655640]
[157.03744507 217.54063416]
[161.22445679 231.94441223]
[165.41146851 246.34820557]
[169.59848022 260.75198364]
[173.89259338 275.12420654]
[178.29359436 289.46405029]
[182.69459534 303.80389404]
[187.09559631 318.14373779]
[191.49658203 332.48358154]
[205.26483154 344.71130371]
[200.67129517 361.64843750]
[205.28530884 375.92117310]
[209.89930725 390.19390869]
[215.51670837 397.39685059]
[214.47406006 404.71359253]
[218.87504578 419.05343628]
[223.27604675 433.39328003]
[238.21183777 431.61514282]
[253.22509766 432.53268433]
[267.83322144 436.11639404]
[281.56655884 442.25109863]
[293.98373413 450.73956299]
[304.68548584 461.30895996]
[313.32788086 473.61947632]
[319.63305664 487.27539062]
[323.39834595 501.83776855]
[324.50268555 516.83843994]
[322.91061401 531.79522705]
[318.67327881 546.22729492]
[311.92691040 559.67071533]
[302.88836670 571.69342041]
[291.84820557 581.90881348]
[279.16131592 589.98858643]
[265.23553467 595.67297363]
[250.51850891 598.77923584]
[235.48333740 599.20758057]
[220.61334229 596.94415283]
[206.38652039 592.06182861]
[193.26022339 584.71740723]
[181.65638733 575.14709473]
[171.94804382 563.65850830]
[164.44726562 550.62097168]
[159.39518738 536.45349121]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 184]
[8 183]
[9 182]
[10 180]
[11 179]
[12 178]
[15 176]
[16 175]
[17 174]
[18 173]
[19 172]
[21 171]
[22 170]
[23 169]
[24 168]
[25 159]
[26 158]
[27 157]
[28 156]
[29 155]
[31 153]
[32 152]
[34 150]
[35 149]
[36 148]
[37 147]
[38 141]
[40 139]
[41 138]
[55 124]
[56 123]
[58 121]
[61 120]
[62 119]
[63 118]
[64 117]
[65 116]
[66 115]
[67 114]
[68 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
