%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[66.30255890 430.94934082]
[64.11901093 445.84286499]
[58.98179245 459.99185181]
[51.10126877 472.81692505]
[40.80014038 483.79287720]
[28.50023270 492.47027588]
[14.70522022 498.49377441]
[-0.01999994 501.61672974]
[-15.07244015 501.71121216]
[-29.83571243 498.77340698]
[-43.70526886 492.92361450]
[-56.11316299 484.40133667]
[-66.55129242 473.55560303]
[-74.59223175 460.83050537]
[-79.90670013 446.74713135]
[-82.27708435 431.88220215]
[-81.60630798 416.84442139]
[-77.92184448 402.24957275]
[-71.37456512 388.69528198]
[-62.23258591 376.73666382]
[-50.87025833 366.86334229]
[-37.75286484 359.47964478]
[-23.41755486 354.88793945]
[-8.45134735 353.27624512]
[6.53289747 354.71057129]
[10.93389606 340.37072754]
[15.33489323 326.03088379]
[13.92841244 321.46679688]
[15.37412834 315.97070312]
[20.08629417 311.33316040]
[24.91229248 297.13070679]
[29.73828888 282.92822266]
[34.56428909 268.72576904]
[39.39028549 254.52333069]
[44.21628189 240.32087708]
[49.04228210 226.11840820]
[53.86827850 211.91595459]
[58.69427490 197.71350098]
[51.90084076 184.50801086]
[56.59276962 170.03596497]
[70.48995972 162.99992371]
[75.31595612 148.79747009]
[80.14195251 134.59500122]
[84.96794891 120.39255524]
[89.79395294 106.19009399]
[78.57200623 116.14338684]
[64.53787994 121.43898010]
[49.53799820 121.38013458]
[35.54584885 115.97460175]
[24.40234375 105.93357086]
[17.57360268 92.57810974]
[15.95806408 77.66536713]
[19.76827812 63.15735626]
[28.50294685 50.96286774]
[41.01287460 42.68629456]
[55.65216446 39.41655731]
[70.49476624 41.58384705]
[83.58788300 48.90302658]
[93.20888519 60.41112137]
[98.09197235 74.59405518]
[97.59416962 89.58813477]
[105.44592285 76.80728912]
[113.29767609 64.02644348]
[121.14943695 51.24560547]
[117.69430542 36.05679703]
[125.83916473 23.20705795]
[140.34066772 20.00671959]
[148.19241333 7.22587776]
[156.04417419 -5.55496502]
[143.34704590 2.43145728]
[129.16580200 7.31942225]
[114.24434662 8.85251713]
[99.36544800 6.95031881]
[85.30961609 1.71261251]
[72.81419373 -6.58584166]
[62.53466034 -17.50972366]
[55.01026154 -30.48598862]
[50.63571548 -44.83392715]
[49.64050293 -59.80087662]
[52.07682419 -74.60169983]
[57.81687927 -88.45996857]
[66.55955505 -100.64871979]
[77.84622955 -110.52854919]
[91.08483124 -117.58117676]
[105.58087921 -121.43663788]
[120.57394409 -121.89268494]
[135.27752686 -118.92539215]
[148.92028809 -112.69042206]
[160.78657532 -103.51483917]
[170.25390625 -91.87998962]
[176.82562256 -78.39620209]
[180.15701294 -63.77082062]
[180.07330322 -48.77105331]
[176.57887268 -34.18376160]
[169.85615540 -20.77277946]
[181.81849670 -29.82278061]
[193.78082275 -38.87277985]
[205.74316406 -47.92277908]
[217.70550537 -56.97277832]
[229.66784668 -66.02278137]
[221.65972900 -78.71703339]
[214.75703430 -92.04469299]
[209.00947571 -105.90973663]
[204.45846558 -120.21225739]
[201.13679504 -134.84921265]
[199.06842041 -149.71513367]
[198.26820374 -164.70291138]
[198.74194336 -179.70455933]
[200.48622131 -194.61198425]
[203.48846436 -209.31777954]
[207.72703552 -223.71598816]
[213.17138672 -237.70286560]
[219.78231812 -251.17764282]
[227.51219177 -264.04321289]
[236.30528259 -276.20690918]
[246.09826660 -287.58105469]
[256.82058716 -298.08370972]
[268.39495850 -307.63922119]
[280.73800659 -316.17871094]
[293.76080322 -323.64068604]
[307.36947632 -329.97134399]
[321.46603394 -335.12509155]
[335.94888306 -339.06478882]
[350.71365356 -341.76202393]
[365.65399170 -343.19744873]
[380.66223145 -343.36062622]
[395.63021851 -342.25042725]
[410.45016479 -339.87484741]
[425.01525879 -336.25097656]
[439.22052002 -331.40496826]
[452.96365356 -325.37170410]
[466.14559937 -318.19467163]
[478.67141724 -309.92556763]
[490.45083618 -300.62399292]
[501.39898682 -290.35696411]
[511.43695068 -279.19842529]
[520.49249268 -267.22882080]
[528.50024414 -254.53436279]
[535.40258789 -241.20651245]
[541.14978027 -227.34132385]
[545.70043945 -213.03868103]
[549.02172852 -198.40164185]
[551.08972168 -183.53567505]
[551.88952637 -168.54786682]
[551.41540527 -153.54623413]
[549.67077637 -138.63885498]
[546.66815186 -123.93313599]
[542.42919922 -109.53504181]
[536.98449707 -95.54830170]
[530.37316895 -82.07370758]
[522.64300537 -69.20832825]
[513.84960938 -57.04487228]
[504.05630493 -45.67097473]
[493.33374023 -35.16858673]
[481.75909424 -25.61338234]
[469.41583252 -17.07420349]
[456.39285278 -9.61258030]
[442.78399658 -3.28227234]
[428.68731689 1.87110877]
[414.20437622 5.81043243]
[399.43951416 8.50731468]
[384.49914551 9.94232559]
[369.49090576 10.10512352]
[354.52294922 8.99453735]
[339.70306396 6.61856794]
[325.13809204 2.99433517]
[310.93292236 -1.85204828]
[297.18994141 -7.88566351]
[284.00817871 -15.06303692]
[271.48257446 -23.33245468]
[259.70339966 -32.63433456]
[248.75553894 -42.90165710]
[238.71783447 -54.06044388]
[226.75550842 -45.01044464]
[214.79316711 -35.96044159]
[202.83082581 -26.91044235]
[190.86849976 -17.86044312]
[178.90615845 -8.81044292]
[168.82501221 2.29679060]
[160.97326660 15.07763290]
[153.12150574 27.85847473]
[156.82141113 42.24062729]
[149.04067993 55.31406784]
[133.93028259 59.09735870]
[126.07852173 71.87820435]
[118.22676849 84.65904236]
[110.37500763 97.43988800]
[103.99640656 111.01609039]
[99.17041016 125.21855164]
[94.34441376 139.42100525]
[89.51840973 153.62345886]
[84.69241333 167.82591248]
[91.42581177 181.87223816]
[86.32924652 196.20680237]
[72.89672852 202.53950500]
[68.07073212 216.74195862]
[63.24473572 230.94441223]
[58.41873932 245.14686584]
[53.59273911 259.34933472]
[48.76674271 273.55178833]
[43.94074631 287.75424194]
[39.11474609 301.95669556]
[34.28874969 316.15914917]
[29.67474174 330.43188477]
[25.27374268 344.77172852]
[20.87274551 359.11157227]
[34.08181763 366.32998657]
[45.56721878 376.05984497]
[54.85863495 387.90277100]
[61.57558441 401.37374878]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 206]
[26 205]
[27 204]
[30 203]
[31 202]
[32 201]
[33 200]
[34 199]
[35 198]
[36 197]
[37 196]
[38 195]
[41 192]
[42 191]
[43 190]
[44 189]
[45 188]
[61 187]
[62 186]
[63 185]
[64 184]
[67 181]
[68 180]
[69 179]
[95 178]
[96 177]
[97 176]
[98 175]
[99 174]
[100 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
