%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUGxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[177.21128845 367.45989990]
[176.47326660 352.46960449]
[176.95953369 337.46908569]
[178.66690063 322.55807495]
[181.58395386 307.83587646]
[185.69132996 293.40042114]
[190.96165466 279.34777832]
[197.35987854 265.77148438]
[204.84341431 252.76190186]
[213.36245728 240.40557861]
[222.86030579 228.78475952]
[208.32650757 225.52622986]
[203.75672913 210.37936401]
[192.95457458 199.97198486]
[182.15242004 189.56460571]
[171.35026550 179.15724182]
[160.54811096 168.74986267]
[149.74595642 158.34249878]
[138.94380188 147.93511963]
[125.26898193 156.35488892]
[109.88571930 160.96447754]
[93.83408356 161.45222473]
[78.19932556 157.78517151]
[64.03851318 150.21122742]
[52.30908585 139.24247742]
[43.80405807 125.62052155]
[39.09846497 110.26634979]
[38.51045227 94.21807098]
[42.07978058 78.56070709]
[49.56512070 64.35286713]
[34.14628601 60.80743790]
[29.92201996 46.52441406]
[18.81478500 36.44327545]
[20.53869247 51.34388351]
[13.27569962 64.46824646]
[-0.26527816 70.92130280]
[-15.03378963 68.29621887]
[-25.52154541 57.57209015]
[-27.81687355 42.74874496]
[-21.06367111 29.35493279]
[-7.78071594 22.38620758]
[7.07883024 24.44224167]
[-2.75175071 13.11264801]
[-12.58233166 1.78305471]
[-22.41291237 -9.54653835]
[-34.54253387 -0.70650971]
[-47.37815094 7.07299995]
[-60.82728195 13.73593807]
[-74.79302216 19.23429680]
[-89.17474365 23.52846146]
[-103.86883545 26.58748817]
[-118.76940918 28.38934135]
[-133.76911926 28.92103386]
[-148.75987244 28.17873764]
[-163.63366699 26.16779900]
[-178.28335571 22.90270805]
[-192.60334778 18.40699196]
[-206.49049377 12.71304035]
[-219.84472656 5.86187983]
[-232.56982422 -2.09712601]
[-244.57409668 -11.10663128]
[-255.77105713 -21.10172081]
[-266.08004761 -32.01037979]
[-275.42675781 -43.75400925]
[-283.74383545 -56.24799347]
[-290.97140503 -69.40231323]
[-297.05737305 -83.12219238]
[-301.95785522 -97.30876923]
[-305.63760376 -111.85983276]
[-308.07003784 -126.67053986]
[-309.23767090 -141.63418579]
[-309.13208008 -156.64292908]
[-307.75402832 -171.58865356]
[-305.11343384 -186.36367798]
[-301.22933960 -200.86152649]
[-296.12973022 -214.97775269]
[-289.85134888 -228.61064148]
[-282.43942261 -241.66197205]
[-273.94735718 -254.03770447]
[-264.43634033 -265.64865112]
[-253.97488403 -276.41119385]
[-242.63841248 -286.24774170]
[-230.50856018 -295.08746338]
[-217.67272949 -302.86663818]
[-204.22343445 -309.52923584]
[-190.25755310 -315.02722168]
[-175.87571716 -319.32101440]
[-161.18154907 -322.37966919]
[-146.28092957 -324.18115234]
[-131.28120422 -324.71246338]
[-116.29047394 -323.96975708]
[-101.41672516 -321.95843506]
[-86.76712799 -318.69296265]
[-72.44724274 -314.19689941]
[-58.56024933 -308.50256348]
[-45.20619583 -301.65106201]
[-32.48130798 -293.69174194]
[-20.47726250 -284.68191528]
[-9.28055668 -274.68655396]
[1.02813864 -263.77761841]
[10.37454700 -252.03375244]
[18.69132614 -239.53955078]
[25.91855240 -226.38504028]
[32.00415421 -212.66500854]
[36.90428162 -198.47830200]
[40.58362961 -183.92713928]
[43.01568604 -169.11637878]
[44.18293381 -154.15270996]
[44.07695389 -139.14395142]
[42.69851685 -124.19826508]
[40.05755234 -109.42330933]
[36.17308807 -94.92556000]
[31.07311058 -80.80947113]
[24.79436874 -67.17674255]
[17.38210106 -54.12560654]
[8.88971519 -41.75009537]
[-0.62160182 -30.13938332]
[-11.08331966 -19.37711906]
[-1.25273836 -8.04752636]
[8.57784271 3.28206706]
[18.40842247 14.61166000]
[28.89592361 25.33604050]
[40.00315857 35.41717911]
[54.62752914 38.24153900]
[59.64625931 53.24563599]
[71.10677338 45.41450500]
[84.02671814 40.34055710]
[97.75349426 38.28008270]
[111.59375000 39.33716202]
[124.84838867 43.45839691]
[136.84790039 50.43562317]
[146.98617554 59.91640854]
[154.75112915 71.42186737]
[159.75051880 84.37084961]
[161.73184204 98.10926819]
[160.59500122 111.94319916]
[156.39744568 125.17386627]
[149.35116577 137.13296509]
[160.15332031 147.54032898]
[170.95549011 157.94770813]
[181.75764465 168.35508728]
[192.55979919 178.76245117]
[203.36195374 189.16983032]
[214.16410828 199.57719421]
[229.47055054 203.58013916]
[233.26768494 217.98260498]
[244.52700806 208.05886841]
[256.55773926 199.08589172]
[269.27981567 191.12339783]
[282.60861206 184.22438049]
[296.45538330 178.43475342]
[310.72796631 173.79302979]
[325.33142090 170.33010864]
[340.16854858 168.06904602]
[355.14062500 167.02487183]
[370.14797974 167.20454407]
[385.09072876 168.60685730]
[399.86947632 171.22248840]
[414.38583374 175.03404236]
[428.54324341 180.01612854]
[442.24740601 186.13562012]
[455.40719604 193.35176086]
[467.93502808 201.61654663]
[479.74749756 210.87496948]
[490.76599121 221.06542969]
[500.91720581 232.12008667]
[510.13360596 243.96539307]
[518.35382080 256.52249146]
[525.52313232 269.70785522]
[531.59387207 283.43371582]
[536.52557373 297.60870361]
[540.28552246 312.13854980]
[542.84857178 326.92648315]
[544.19781494 341.87414551]
[544.32409668 356.88204956]
[543.22674561 371.85028076]
[540.91290283 386.67929077]
[537.39813232 401.27032471]
[532.70568848 415.52636719]
[526.86688232 429.35244751]
[519.92053223 442.65661621]
[511.91287231 455.35034180]
[502.89718628 467.34909058]
[492.93347168 478.57305908]
[482.08807373 488.94754028]
[470.43313599 498.40350342]
[458.04623413 506.87799072]
[445.00976562 514.31463623]
[431.41052246 520.66394043]
[417.33901978 525.88366699]
[402.88885498 529.93902588]
[388.15625000 532.80303955]
[373.23919678 534.45672607]
[358.23699951 534.88897705]
[343.24948120 534.09698486]
[328.37640381 532.08599854]
[313.71673584 528.86938477]
[299.36801147 524.46856689]
[285.42575073 518.91284180]
[271.98272705 512.23919678]
[259.12841797 504.49197388]
[246.94833374 495.72277832]
[235.52355957 485.98999023]
[224.93011475 475.35833740]
[215.23851013 463.89859009]
[206.51324463 451.68701172]
[198.81236267 438.80490112]
[192.18713379 425.33792114]
[186.68164062 411.37576294]
[182.33251953 397.01129150]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 146]
[13 144]
[14 143]
[15 142]
[16 141]
[17 140]
[18 139]
[19 138]
[30 125]
[32 123]
[33 122]
[42 121]
[43 120]
[44 119]
[45 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
