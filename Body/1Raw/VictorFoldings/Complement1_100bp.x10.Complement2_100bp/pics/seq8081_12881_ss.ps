%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[140.52290344 619.35876465]
[128.74211121 610.06549072]
[117.57445526 600.04370117]
[107.06491089 589.33380127]
[97.25579071 577.97894287]
[88.18659210 566.02471924]
[79.89383698 553.51940918]
[72.41091919 540.51336670]
[65.76795959 527.05883789]
[59.99172211 513.21008301]
[55.10545731 499.02288818]
[51.12884140 484.55435181]
[48.07788467 469.86270142]
[45.96487808 455.00714111]
[44.79832458 440.04748535]
[44.58292389 425.04394531]
[45.31954575 410.05694580]
[47.00521851 395.14685059]
[49.63315964 380.37368774]
[53.19278336 365.79693604]
[57.66975784 351.47528076]
[63.04605865 337.46643066]
[69.30003357 323.82678223]
[76.40650177 310.61123657]
[84.33684540 297.87301636]
[93.05912781 285.66342163]
[102.53823853 274.03161621]
[112.73600006 263.02441406]
[123.61135864 252.68618774]
[135.12049866 243.05851746]
[147.21711731 234.18019104]
[159.85246277 226.08695984]
[152.57923889 212.96826172]
[145.30599976 199.84956360]
[138.03277588 186.73088074]
[132.04025269 182.40519714]
[130.75057983 173.36227417]
[123.67346954 160.13674927]
[110.84665680 152.56559753]
[111.15763092 136.74745178]
[104.08052826 123.52192688]
[89.53339386 121.45651245]
[78.95092010 111.26356506]
[76.34164429 96.80407715]
[82.69394684 83.55518341]
[75.61683655 70.32965088]
[68.53973389 57.10412598]
[61.46262741 43.87859726]
[54.38552094 30.65307045]
[47.30841827 17.42754364]
[40.23131180 4.20201540]
[35.96780396 18.58333969]
[23.52745628 26.96413803]
[8.59783173 25.51282310]
[-1.99544764 14.89291668]
[-3.40927744 -0.04030448]
[5.00272655 -12.45957184]
[19.39470863 -16.68696213]
[33.18820572 -10.78851032]
[27.52542114 -24.67853737]
[21.86263466 -38.56856537]
[16.19984627 -52.45859146]
[10.53706074 -66.34861755]
[-4.26717997 -77.29923248]
[-1.20301664 -94.57863617]
[-7.07197762 -108.38281250]
[-12.94093800 -122.18698883]
[-18.80989838 -135.99116516]
[-23.85393906 -140.26541138]
[-25.70443153 -145.63874817]
[-24.64130592 -150.29479980]
[-30.09666443 -164.26759338]
[-44.74098206 -160.89688110]
[-59.72003174 -159.69439697]
[-74.71453094 -160.68579102]
[-89.40486908 -163.84991455]
[-103.47792816 -169.11935425]
[-116.63373566 -176.38175964]
[-128.59187317 -185.48236084]
[-139.09744263 -196.22715759]
[-147.92654419 -208.38713074]
[-154.89096069 -221.70309448]
[-159.84225464 -235.89120483]
[-162.67489624 -250.64904785]
[-163.32849121 -265.66207886]
[-161.78910828 -280.61026001]
[-158.08956909 -295.17498779]
[-152.30874634 -309.04580688]
[-144.56982422 -321.92706299]
[-135.03776550 -333.54421997]
[-123.91577148 -343.64959717]
[-111.44088745 -352.02786255]
[-97.87902069 -358.50036621]
[-83.51924133 -362.92922974]
[-68.66763306 -365.21997070]
[-53.64075089 -365.32379150]
[-38.75890350 -363.23849487]
[-24.33929443 -359.00851440]
[-10.68927765 -352.72402954]
[1.90019512 -344.51898193]
[13.16077900 -334.56823730]
[22.85245323 -323.08392334]
[30.76864052 -310.31082153]
[36.74060440 -296.52120972]
[40.64105606 -282.00900269]
[42.38685226 -267.08352661]
[41.94078445 -252.06291199]
[39.31235886 -237.26733398]
[34.55760574 -223.01214600]
[27.77786446 -209.60122681]
[19.11765099 -197.32040405]
[8.76155663 -186.43145752]
[-3.06967640 -177.16647339]
[-16.12386513 -169.72296143]
[-10.66850853 -155.75015259]
[-5.00572205 -141.86012268]
[0.86323857 -128.05595398]
[6.73219919 -114.25177765]
[12.60116005 -100.44760132]
[23.69844437 -95.63336945]
[28.70094872 -84.18091583]
[24.42708778 -72.01140594]
[30.08987427 -58.12137604]
[35.75265884 -44.23134995]
[41.41544724 -30.34132385]
[47.07823563 -16.45129776]
[53.45684052 -2.87509012]
[60.53394318 10.35043716]
[67.61105347 23.57596588]
[74.68815613 36.80149078]
[81.76525879 50.02701950]
[88.84236908 63.25254822]
[95.91947174 76.47807312]
[110.46660614 78.54348755]
[121.04907990 88.73643494]
[123.65835571 103.19592285]
[117.30605316 116.44481659]
[124.38316345 129.67034912]
[137.71617126 138.18746948]
[136.89900208 153.05964661]
[143.97610474 166.28517151]
[151.15147400 179.45764160]
[158.42469788 192.57633972]
[165.69792175 205.69503784]
[172.97116089 218.81373596]
[186.52926636 212.38485718]
[200.46781921 206.82884216]
[214.73068237 202.16806030]
[229.26045227 198.42126465]
[243.99859619 195.60356140]
[258.88577271 193.72627258]
[273.86206055 192.79698181]
[288.86712646 192.81941223]
[303.84057617 193.79347229]
[318.72207642 195.71527100]
[333.45172119 198.57702637]
[347.97024536 202.36724854]
[362.21911621 207.07064819]
[376.14099121 212.66831970]
[389.67980957 219.13769531]
[402.78106689 226.45272827]
[415.39196777 234.58398438]
[427.46179199 243.49868774]
[438.94189453 253.16098022]
[449.78607178 263.53192139]
[459.95065308 274.56976318]
[469.39468384 286.23007202]
[478.08016968 298.46588135]
[485.97210693 311.22790527]
[493.03875732 324.46481323]
[499.25161743 338.12322998]
[504.58569336 352.14819336]
[509.01953125 366.48324585]
[512.53521729 381.07064819]
[515.11871338 395.85168457]
[516.75946045 410.76678467]
[517.45092773 425.75592041]
[517.19036865 440.75875854]
[515.97875977 455.71484375]
[513.82104492 470.56396484]
[510.72586060 485.24633789]
[506.70568848 499.70285034]
[501.77670288 513.87530518]
[495.95880127 527.70654297]
[489.27536011 541.14099121]
[481.75329590 554.12451172]
[473.42291260 566.60479736]
[464.31777954 578.53161621]
[454.47448730 589.85687256]
[443.93273926 600.53509521]
[432.73495483 610.52319336]
[420.92623901 619.78100586]
[408.55413818 628.27117920]
[395.66842651 635.95959473]
[382.32107544 642.81524658]
[368.56573486 648.81054688]
[354.45788574 653.92138672]
[340.05426025 658.12713623]
[325.41290283 661.41088867]
[310.59274292 663.75939941]
[295.65347290 665.16320801]
[280.65524292 665.61676025]
[265.65844727 665.11804199]
[250.72346497 663.66925049]
[235.91046143 661.27612305]
[221.27905273 657.94830322]
[206.88816833 653.69915771]
[192.79574585 648.54589844]
[179.05854797 642.50921631]
[165.73187256 635.61334229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 145]
[33 144]
[34 143]
[35 142]
[37 141]
[38 140]
[40 138]
[41 137]
[45 133]
[46 132]
[47 131]
[48 130]
[49 129]
[50 128]
[51 127]
[59 126]
[60 125]
[61 124]
[62 123]
[63 122]
[65 119]
[66 118]
[67 117]
[68 116]
[71 115]
[72 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
