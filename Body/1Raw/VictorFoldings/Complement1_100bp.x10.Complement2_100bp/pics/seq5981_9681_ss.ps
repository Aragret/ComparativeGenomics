%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[84.24927521 449.36740112]
[80.25771332 434.84976196]
[79.37215424 419.81948853]
[81.63131714 404.93359375]
[86.93642426 390.84283447]
[95.05557251 378.16320801]
[105.63381958 367.44897461]
[118.20874023 359.16857910]
[132.23060608 353.68395996]
[129.78486633 338.88467407]
[127.33914185 324.08541870]
[117.63021851 312.79000854]
[123.01388550 297.91296387]
[113.30496216 286.61755371]
[118.68862152 271.74050903]
[114.49658966 265.65374756]
[116.31836700 256.70281982]
[114.09324646 241.86878967]
[111.86813354 227.03474426]
[102.32845306 215.59603882]
[107.93302155 200.80078125]
[105.70790100 185.96675110]
[103.48278809 171.13270569]
[91.82703400 158.01361084]
[98.70897675 140.93379211]
[96.26325226 126.13452148]
[93.81752014 111.33525085]
[89.44273376 125.68311310]
[81.80376434 138.59226990]
[71.33262634 149.33261108]
[58.62150955 157.29675293]
[44.38929367 162.03427124]
[29.44088173 163.27723694]
[14.62167645 160.95535278]
[0.76977569 155.19993591]
[-11.33142853 146.33648682]
[-20.99755287 134.86625671]
[-27.68193436 121.43796539]
[-31.00653458 106.81104279]
[-30.78333473 91.81269836]
[-27.02495766 77.29117584]
[-19.94395447 64.06773376]
[-9.94079399 52.89022446]
[2.41879916 44.39078522]
[16.43582916 39.05010223]
[31.31756401 37.17021942]
[46.22237015 38.85744858]
[60.30730820 44.01637268]
[72.77581024 52.35522842]
[82.92271423 63.40241623]
[90.17417145 76.53315735]
[94.12023163 91.00591278]
[89.18190002 75.97515869]
[99.22282410 64.97383881]
[102.10809326 50.25394821]
[104.99337006 35.53405380]
[107.87863922 20.81416321]
[106.32607269 16.75910568]
[106.16121674 12.81736088]
[107.17805481 9.41127110]
[109.05456543 6.85288429]
[111.39873505 5.31567526]
[115.15502930 -9.20638371]
[111.12010193 -24.50442123]
[121.79803467 -34.88859177]
[125.55433655 -49.41065216]
[129.31063843 -63.93270874]
[133.06694031 -78.45477295]
[135.84254456 -93.19573212]
[137.62501526 -108.08944702]
[139.40748596 -122.98316956]
[133.36489868 -137.60499573]
[142.55976868 -149.32264709]
[144.34222412 -164.21636963]
[146.12469482 -179.11009216]
[147.90716553 -194.00379944]
[145.81968689 -202.89651489]
[149.82864380 -209.10539246]
[151.83265686 -223.97091675]
[137.22811890 -227.44743347]
[123.04231262 -232.36082458]
[109.41622162 -238.66227722]
[96.48527527 -246.28915405]
[84.37799072 -255.16564941]
[73.21469879 -265.20355225]
[63.10633850 -276.30310059]
[54.15338898 -288.35394287]
[46.44482040 -301.23635864]
[40.05725098 -314.82229614]
[35.05416489 -328.97671509]
[31.48528290 -343.55895996]
[29.38607788 -358.42407227]
[28.77741432 -373.42434692]
[29.66533852 -388.41067505]
[32.04102707 -403.23413086]
[35.88087082 -417.74737549]
[41.14670181 -431.80618286]
[47.78619003 -445.27078247]
[55.73334503 -458.00741577]
[64.90917969 -469.88943481]
[75.22250366 -480.79879761]
[86.57080841 -490.62704468]
[98.84130859 -499.27651978]
[111.91205597 -506.66125488]
[125.65314484 -512.70782471]
[139.92799377 -517.35620117]
[154.59474182 -520.56005859]
[169.50762939 -522.28771973]
[184.51841736 -522.52191162]
[199.47792053 -521.26031494]
[214.23748779 -518.51550293]
[228.65039062 -514.31469727]
[242.57341003 -508.69973755]
[255.86816406 -501.72634888]
[268.40252686 -493.46386719]
[280.05191040 -483.99441528]
[290.70053101 -473.41207886]
[300.24255371 -461.82208252]
[308.58316040 -449.33956909]
[315.63943481 -436.08862305]
[321.34127808 -422.20095825]
[325.63198853 -407.81454468]
[328.46893311 -393.07241821]
[329.82394409 -378.12109375]
[329.68350220 -363.10913086]
[328.04904175 -348.18576050]
[324.93679810 -333.49926758]
[320.37768555 -319.19567871]
[314.41702271 -305.41708374]
[307.11407471 -292.30047607]
[298.54141235 -279.97619629]
[288.78424072 -268.56671143]
[277.93951416 -258.18545532]
[266.11502075 -248.93559265]
[253.42828369 -240.90905762]
[240.00540161 -234.18560791]
[225.97976685 -228.83207703]
[211.49078369 -224.90165710]
[196.68246460 -222.43344116]
[181.70196533 -221.45193481]
[166.69818115 -221.96690369]
[164.69416809 -207.10136414]
[162.80087280 -192.22134399]
[161.01841736 -177.32762146]
[159.23594666 -162.43389893]
[157.45347595 -147.54019165]
[163.62356567 -133.98365784]
[154.30119324 -121.20069885]
[152.51873779 -106.30698395]
[150.73626709 -91.41326904]
[161.38360596 -101.97897339]
[176.03036499 -105.21506500]
[190.13810730 -100.11879730]
[199.33535767 -88.26931000]
[200.77229309 -73.33829498]
[194.00363159 -59.95228577]
[181.12672424 -52.25908661]
[166.13162231 -52.64251709]
[153.66471863 -60.98376846]
[147.58900452 -74.69847107]
[143.83270264 -60.17641068]
[140.07640076 -45.65435028]
[136.32009888 -31.13229179]
[140.62370300 -16.87296867]
[129.67709351 -5.45008326]
[125.92079163 9.07197571]
[122.59853363 23.69943619]
[119.71325684 38.41932678]
[116.82798767 53.13921738]
[113.94271088 67.85910797]
[119.08741760 81.83699799]
[108.84011841 93.89118195]
[108.61679077 108.88951874]
[111.06252289 123.68878937]
[113.50824738 138.48806763]
[123.51995087 146.62001038]
[125.25232697 158.99670410]
[118.31682587 168.90757751]
[120.54194641 183.74162292]
[122.76706696 198.57566833]
[132.46589661 211.07540894]
[126.70217133 224.80961609]
[128.92729187 239.64366150]
[131.15240479 254.47770691]
[133.48789978 269.29476929]
[143.37174988 281.64871216]
[137.81315613 295.46722412]
[147.69700623 307.82116699]
[142.13841248 321.63967896]
[144.58413696 336.43896484]
[147.02987671 351.23822021]
[162.07078552 351.91995239]
[176.64117432 355.71432495]
[190.10409546 362.45547485]
[201.87101746 371.84875488]
[211.42752075 383.48345947]
[218.35585022 396.85104370]
[222.35311890 411.36709595]
[223.24458313 426.39703369]
[220.99128723 441.28381348]
[215.69171143 455.37664795]
[207.57756042 468.05947876]
[197.00352478 478.77786255]
[184.43186951 487.06320190]
[170.41217041 492.55334473]
[155.55729675 495.00827026]
[140.51666260 494.32064819]
[125.94775391 490.52053833]
[112.48748016 483.77407837]
[100.72426605 474.37615967]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 191]
[10 190]
[11 189]
[13 187]
[15 185]
[17 184]
[18 183]
[19 182]
[21 180]
[22 179]
[23 178]
[25 175]
[26 174]
[27 173]
[52 172]
[54 170]
[55 169]
[56 168]
[57 167]
[62 166]
[63 165]
[65 163]
[66 162]
[67 161]
[68 160]
[69 150]
[70 149]
[71 148]
[73 146]
[74 145]
[75 144]
[76 143]
[78 142]
[79 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
