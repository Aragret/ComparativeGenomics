%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCGxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[89.83448792 317.15225220]
[95.39152527 331.22259521]
[96.32658386 346.32162476]
[92.54804993 360.97012329]
[84.42611694 373.73294067]
[72.75648499 383.35971069]
[58.68241882 388.90731812]
[43.58275986 389.83224487]
[28.93681717 386.04391479]
[16.17945099 377.91342163]
[6.56049681 366.23733521]
[1.02232242 352.15954590]
[0.10750151 337.05929565]
[3.90565896 322.41589355]
[12.04469013 309.66397095]
[23.72721481 300.05282593]
[37.80870056 294.52410889]
[52.90958405 293.61938477]
[56.66588593 279.09735107]
[60.42218399 264.57528687]
[64.17848969 250.05322266]
[67.93478394 235.53115845]
[71.14806366 220.87937927]
[73.81385803 206.11814880]
[76.47965240 191.35693359]
[67.80245972 179.30529785]
[70.29567719 164.29734802]
[82.99537659 155.27763367]
[85.66117096 140.51641846]
[88.32697296 125.75519562]
[90.77269745 110.95592499]
[85.83453369 97.87516785]
[94.39325714 86.81896210]
[96.61837769 71.98491669]
[98.84349060 57.15087128]
[101.06861115 42.31682587]
[89.16770935 32.70871353]
[83.70995331 18.52739906]
[86.06764221 3.61741257]
[95.50866699 -8.03260803]
[109.41971588 -13.35692883]
[111.64482880 -28.19097137]
[113.86994934 -43.02501678]
[116.09506226 -57.85905838]
[114.27329254 -66.80998230]
[118.46532440 -72.89673615]
[120.91105652 -87.69600677]
[115.52738953 -102.57306671]
[125.23631287 -113.86846161]
[110.57549286 -117.05528259]
[96.09330750 -120.97469330]
[81.82633972 -125.61681366]
[67.81063843 -130.96989441]
[54.08160019 -137.02043152]
[40.67390823 -143.75312805]
[27.62142944 -151.15098572]
[14.95713902 -159.19532776]
[2.71302581 -167.86579895]
[-9.07997894 -177.14051819]
[-20.39208603 -186.99606323]
[-31.19471931 -197.40753174]
[-41.46059036 -208.34861755]
[-51.16376495 -219.79168701]
[-60.27973557 -231.70783997]
[-68.78547668 -244.06695557]
[-76.65949249 -256.83782959]
[-83.88189697 -269.98822021]
[-90.43444824 -283.48486328]
[-96.30059052 -297.29370117]
[-101.46551514 -311.37982178]
[-105.91616058 -325.70767212]
[-109.64128876 -340.24105835]
[-112.63149261 -354.94323730]
[-114.87921906 -369.77706909]
[-116.37878418 -384.70513916]
[-117.12641144 -399.68966675]
[-117.12020111 -414.69287109]
[-116.36016846 -429.67678833]
[-114.84824371 -444.60357666]
[-112.58823395 -459.43557739]
[-109.58586121 -474.13528442]
[-105.84870148 -488.66555786]
[-101.38619232 -502.98971558]
[-96.20961761 -517.07159424]
[-90.33203888 -530.87554932]
[-83.76831818 -544.36676025]
[-76.53502655 -557.51116943]
[-68.65043640 -570.27551270]
[-60.13447189 -582.62756348]
[-51.00864029 -594.53619385]
[-41.29599380 -605.97119141]
[-31.02106857 -616.90380859]
[-20.20981979 -627.30633545]
[-8.88955688 -637.15246582]
[2.91112256 -646.41741943]
[15.16240883 -655.07775879]
[27.83335495 -663.11163330]
[40.89195251 -670.49865723]
[54.30521774 -677.22027588]
[68.03926086 -683.25946045]
[82.05938721 -688.60089111]
[96.33019257 -693.23120117]
[110.81562042 -697.13867188]
[125.47907257 -700.31329346]
[140.28350830 -702.74725342]
[155.19155884 -704.43420410]
[170.16551208 -705.37005615]
[185.16758728 -705.55230713]
[200.15988159 -704.98059082]
[215.10450745 -703.65631104]
[229.96371460 -701.58282471]
[244.69998169 -698.76538086]
[259.27606201 -695.21105957]
[273.65515137 -690.92889404]
[287.80093384 -685.92962646]
[301.67764282 -680.22595215]
[315.25027466 -673.83221436]
[328.48449707 -666.76464844]
[341.34689331 -659.04101562]
[353.80499268 -650.68090820]
[365.82730103 -641.70544434]
[377.38345337 -632.13720703]
[388.44427490 -622.00042725]
[398.98178101 -611.32073975]
[408.96942139 -600.12506104]
[418.38189697 -588.44171143]
[427.19546509 -576.30023193]
[435.38784790 -563.73120117]
[442.93838501 -550.76641846]
[449.82797241 -537.43865967]
[456.03921509 -523.78161621]
[461.55639648 -509.82968140]
[466.36563110 -495.61816406]
[470.45474243 -481.18298340]
[473.81338501 -466.56057739]
[476.43310547 -451.78787231]
[478.30725098 -436.90222168]
[479.43112183 -421.94119263]
[479.80187988 -406.94256592]
[479.41854858 -391.94430542]
[478.28213501 -376.98422241]
[476.39550781 -362.10012817]
[473.76339722 -347.32962036]
[470.39248657 -332.71005249]
[466.29129028 -318.27828979]
[461.47012329 -304.07080078]
[455.94125366 -290.12353516]
[449.71856689 -276.47164917]
[442.81781006 -263.14968872]
[435.25640869 -250.19125366]
[427.05346680 -237.62911987]
[418.22970581 -225.49499512]
[408.80743408 -213.81954956]
[398.81042480 -202.63224792]
[388.26394653 -191.96139526]
[377.19464111 -181.83390808]
[365.63049316 -172.27537537]
[353.60064697 -163.30996704]
[341.13555908 -154.96031189]
[328.26666260 -147.24749756]
[315.02651978 -140.19100952]
[301.44854736 -133.80868530]
[287.56704712 -128.11663818]
[273.41708374 -123.12924957]
[259.03442383 -118.85911560]
[244.45535278 -115.31701660]
[229.71672058 -112.51191711]
[214.85578918 -110.45088959]
[199.91004944 -109.13914490]
[184.91729736 -108.58000183]
[169.91537476 -108.77486420]
[154.94219971 -109.72323608]
[140.03558350 -111.42273712]
[145.59417725 -97.60422516]
[135.71032715 -85.25028229]
[133.26460266 -70.45101166]
[130.92910767 -55.63394165]
[128.70399475 -40.79990005]
[126.47887421 -25.96585464]
[124.25376129 -11.13181114]
[135.99041748 -1.96031630]
[141.59782410 11.94698048]
[139.47717285 26.89252090]
[130.09881592 38.84841156]
[115.90265656 44.54194260]
[113.67753601 59.37598801]
[111.45242310 74.21002960]
[109.22730255 89.04407501]
[114.16546631 102.12483215]
[105.60674286 113.18103790]
[107.66719055 119.46324158]
[106.43124390 125.01026917]
[103.08818817 128.42098999]
[100.42239380 143.18220520]
[97.75659943 157.94342041]
[106.49914551 170.83549500]
[103.58537292 185.76750183]
[91.24086761 194.02273560]
[88.57507324 208.78395081]
[85.90927887 223.54516602]
[99.53247070 217.26753235]
[113.00234985 223.86772156]
[116.38941193 238.48031616]
[107.19685364 250.33345032]
[92.20108032 250.68943787]
[82.45684814 239.28746033]
[78.70054626 253.80952454]
[74.94424438 268.33157349]
[71.18794250 282.85363770]
[67.43164062 297.37570190]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 210]
[19 209]
[20 208]
[21 207]
[22 206]
[23 200]
[24 199]
[25 198]
[28 195]
[29 194]
[30 193]
[31 190]
[33 188]
[34 187]
[35 186]
[36 185]
[41 180]
[42 179]
[43 178]
[44 177]
[46 176]
[47 175]
[49 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
