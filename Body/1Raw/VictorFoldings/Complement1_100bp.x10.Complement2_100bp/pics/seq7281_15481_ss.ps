%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[174.93617249 572.41436768]
[165.99621582 560.36236572]
[157.89028931 547.73437500]
[150.65536499 534.58789062]
[144.32446289 520.98303223]
[138.92646790 506.98181152]
[134.48600769 492.64810181]
[131.02336121 478.04730225]
[128.55430603 463.24606323]
[127.09011078 448.31192017]
[126.63746643 433.31298828]
[127.19843292 418.31768799]
[128.77044678 403.39450073]
[131.34634399 388.61148071]
[134.91436768 374.03610229]
[139.45823669 359.73483276]
[144.95721436 345.77294922]
[151.38621521 332.21414185]
[158.71591187 319.12030029]
[166.91284180 306.55117798]
[175.93960571 294.56408691]
[185.75503540 283.21374512]
[196.31434631 272.55194092]
[207.56932068 262.62731934]
[198.43052673 250.73266602]
[189.29171753 238.83804321]
[180.15292358 226.94340515]
[171.01411438 215.04876709]
[161.87532043 203.15414429]
[147.98568726 197.77569580]
[145.71337891 182.11853027]
[136.57456970 170.22389221]
[133.55706787 184.91725159]
[121.11001587 193.28808594]
[106.36367035 190.54122925]
[97.76539612 178.25018311]
[100.24068451 163.45582581]
[112.37157440 154.63304138]
[127.20812225 156.83541870]
[119.16694641 144.17289734]
[111.12577057 131.51037598]
[103.08460236 118.84785461]
[88.96633148 115.58892059]
[81.19881439 103.35732269]
[84.25287628 89.19332123]
[76.21170044 76.53079987]
[68.17053223 63.86827087]
[60.12935638 51.20574570]
[61.73651505 66.11940002]
[59.90821457 81.00756073]
[54.74035645 95.08922577]
[46.50404358 107.62569427]
[35.63133621 117.95934296]
[22.69258690 125.54807281]
[8.36654472 129.99380493]
[-6.59527779 131.06330872]
[-21.40801430 128.70050049]
[-35.29461670 123.02932739]
[-47.52662277 114.34726715]
[-57.46236420 103.10978699]
[-64.58063507 89.90637207]
[-68.50801849 75.42964172]
[-69.03849792 60.43902588]
[-66.14424896 45.72089767]
[-59.97708511 32.04734039]
[-50.86053467 20.13564301]
[-39.27283096 10.61067009]
[-25.82184219 3.97208095]
[-11.21317768 0.56812322]
[3.78681993 0.57736182]
[18.39127922 3.99931216]
[31.83408165 10.65446568]
[43.41004562 20.19370461]
[52.51276398 32.11804962]
[49.62749100 17.39815712]
[39.38019180 5.34396887]
[44.52489853 -8.63391685]
[41.63962555 -23.35380745]
[38.75435257 -38.07369995]
[33.97721481 -23.85473442]
[24.44233322 -12.27518177]
[11.40418530 -4.85853052]
[-3.42183542 -2.58056879]
[-18.08511162 -5.74100113]
[-30.65643692 -13.92401886]
[-39.48183823 -26.05300522]
[-43.40018082 -40.53218079]
[-41.89593887 -55.45656586]
[-35.16702271 -68.86260223]
[-24.09873962 -78.98648834]
[-10.14730740 -84.49625397]
[4.85172129 -84.66699982]
[18.92496490 -79.47625732]
[30.22084808 -69.60695648]
[37.25391769 -56.35531235]
[37.70052338 -71.34866333]
[38.14712906 -86.34201050]
[38.59373474 -101.33535767]
[39.04034042 -116.32871246]
[25.16162109 -122.52947998]
[14.71591949 -133.57284546]
[9.29612923 -147.77474976]
[9.72873020 -162.96952820]
[15.94775295 -176.84008789]
[27.00484276 -187.27125549]
[41.21387100 -192.67234802]
[56.40806961 -192.21975708]
[70.27042389 -185.98249817]
[80.68703461 -174.91169739]
[86.06944275 -160.69557190]
[85.59687042 -145.50198364]
[79.34137726 -131.64784241]
[68.25688171 -121.24580383]
[54.03369141 -115.88210297]
[53.58708572 -100.88875580]
[53.14048004 -85.89540863]
[52.69387436 -70.90205383]
[52.24726868 -55.90870667]
[53.47424316 -40.95897293]
[56.35951614 -26.23908043]
[59.24478912 -11.51918888]
[69.28571320 -0.51786649]
[64.34738159 14.51288414]
[67.23265839 29.23277473]
[72.79187775 43.16457367]
[80.83305359 55.82709885]
[88.87422943 68.48962402]
[96.91539764 81.15214539]
[111.03366852 84.41107941]
[118.80118561 96.64267731]
[115.74712372 110.80667877]
[123.78829956 123.46920013]
[131.82946777 136.13172913]
[139.87065125 148.79425049]
[148.46920776 161.08509827]
[157.60801697 172.97972107]
[172.15130615 179.20893860]
[173.76994324 194.01533508]
[182.90875244 205.90997314]
[192.04754639 217.80461121]
[201.18635559 229.69923401]
[210.32516479 241.59387207]
[219.46395874 253.48849487]
[231.95310974 245.17019653]
[244.97532654 237.71401978]
[258.47122192 231.15397644]
[272.37918091 225.52000427]
[286.63574219 220.83781433]
[301.17590332 217.12876892]
[315.93325806 214.40979004]
[330.84054565 212.69329834]
[345.82968140 211.98709106]
[360.83230591 212.29441833]
[375.77993774 213.61387634]
[390.60440063 215.93943787]
[405.23803711 219.26049805]
[419.61410522 223.56190491]
[433.66696167 228.82400513]
[447.33251953 235.02282715]
[460.54843140 242.13006592]
[473.25436401 250.11329651]
[485.39239502 258.93609619]
[496.90707397 268.55819702]
[507.74591064 278.93569946]
[517.85943604 290.02127075]
[527.20147705 301.76428223]
[535.72943115 314.11123657]
[543.40441895 327.00570679]
[550.19140625 340.38891602]
[556.05938721 354.19976807]
[560.98156738 368.37527466]
[564.93554688 382.85073853]
[567.90332031 397.56008911]
[569.87127686 412.43624878]
[570.83038330 427.41131592]
[570.77642822 442.41699219]
[569.70953369 457.38479614]
[567.63458252 472.24639893]
[564.56103516 486.93402100]
[560.50299072 501.38064575]
[555.47888184 515.52038574]
[549.51165771 529.28863525]
[542.62854004 542.62261963]
[534.86096191 555.46154785]
[526.24438477 567.74676514]
[516.81805420 579.42230225]
[506.62500000 590.43475342]
[495.71176147 600.73400879]
[484.12811279 610.27301025]
[471.92694092 619.00817871]
[459.16384888 626.89978027]
[445.89715576 633.91174316]
[432.18731689 640.01202393]
[418.09695435 645.17285156]
[403.69030762 649.37072754]
[389.03314209 652.58636475]
[374.19232178 654.80517578]
[359.23559570 656.01702881]
[344.23114014 656.21636963]
[329.24746704 655.40234375]
[314.35293579 653.57855225]
[299.61553955 650.75347900]
[285.10244751 646.93988037]
[270.87994385 642.15521240]
[257.01287842 636.42126465]
[243.56455994 629.76428223]
[230.59632874 622.21459961]
[218.16737366 613.80657959]
[206.33439636 604.57873535]
[195.15138245 594.57305908]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 143]
[25 142]
[26 141]
[27 140]
[28 139]
[29 138]
[31 136]
[32 135]
[39 134]
[40 133]
[41 132]
[42 131]
[45 128]
[46 127]
[47 126]
[48 125]
[74 124]
[75 123]
[77 121]
[78 120]
[79 119]
[95 118]
[96 117]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
