%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[51.50329208 581.01214600]
[38.38476181 588.29516602]
[24.85042763 594.77282715]
[10.94967461 600.42144775]
[-3.26677465 605.22045898]
[-17.74704552 609.15240479]
[-32.43830109 612.20281982]
[-47.28693390 614.36065674]
[-62.23876572 615.61798096]
[-77.23923492 615.97027588]
[-92.23360443 615.41619873]
[-107.16716766 613.95782471]
[-121.98542786 611.60040283]
[-136.63430786 608.35260010]
[-151.06037903 604.22625732]
[-165.21096802 599.23638916]
[-179.03446960 593.40124512]
[-192.48043823 586.74206543]
[-205.49978638 579.28326416]
[-218.04504395 571.05187988]
[-230.07040405 562.07812500]
[-241.53201294 552.39465332]
[-252.38801575 542.03680420]
[-262.59884644 531.04235840]
[-272.12719727 519.45147705]
[-280.93832397 507.30642700]
[-289.00006104 494.65155029]
[-296.28302002 481.53295898]
[-302.76062012 467.99859619]
[-308.40917969 454.09783936]
[-313.20816040 439.88134766]
[-317.14001465 425.40106201]
[-320.19036865 410.70980835]
[-322.34811401 395.86114502]
[-323.60540771 380.90933228]
[-323.95761108 365.90884399]
[-323.40350342 350.91448975]
[-321.94503784 335.98092651]
[-319.58755493 321.16268921]
[-316.33969116 306.51379395]
[-312.21325684 292.08776855]
[-307.22332764 277.93719482]
[-301.38809204 264.11370850]
[-294.72888184 250.66778564]
[-287.26998901 237.64846802]
[-279.03860474 225.10325623]
[-270.06475830 213.07792664]
[-260.38122559 201.61637878]
[-250.02331543 190.76040649]
[-239.02883911 180.54965210]
[-227.43791199 171.02134705]
[-215.29281616 162.21026611]
[-202.63789368 154.14857483]
[-189.51928711 146.86567688]
[-175.98489380 140.38815308]
[-162.08409119 134.73963928]
[-147.86759949 129.94073486]
[-133.38729858 126.00896454]
[-118.69600677 122.95867157]
[-103.84735107 120.80097961]
[-88.89551544 119.54376221]
[-73.89504242 119.19161987]
[-58.90067673 119.74581909]
[-43.96712875 121.20435333]
[-29.14889145 123.56189728]
[-14.50003338 126.80983734]
[-0.07400952 130.93634033]
[14.07654285 135.92633057]
[27.89998817 141.76161194]
[41.34588623 148.42088318]
[54.36517715 155.87985229]
[62.59398651 143.33845520]
[70.82279205 130.79705811]
[79.05159760 118.25565338]
[73.29046631 107.66191864]
[72.55979156 95.62514496]
[76.99720001 84.41233063]
[85.76694489 76.13529205]
[97.21733093 72.35292053]
[109.19181061 73.77758789]
[117.79037476 61.48675156]
[126.38893890 49.19591141]
[134.98750305 36.90507507]
[143.58607483 24.61423683]
[152.18463135 12.32339859]
[160.78320312 0.03256065]
[169.38175964 -12.25827694]
[177.98033142 -24.54911613]
[166.42454529 -34.12600327]
[155.68783569 -44.61293411]
[145.84162903 -55.94012070]
[136.95146179 -68.03217316]
[129.07650757 -80.80863190]
[122.26916504 -94.18446350]
[116.57472992 -108.07065582]
[112.03111267 -122.37478638]
[108.66853333 -137.00167847]
[106.50938416 -151.85397339]
[105.56802368 -166.83285522]
[105.85072327 -181.83860779]
[107.35560608 -196.77139282]
[110.07264709 -211.53182983]
[113.98376465 -226.02169800]
[119.06293488 -240.14454651]
[125.27635956 -253.80639648]
[132.58268738 -266.91632080]
[140.93328857 -279.38711548]
[150.27259827 -291.13571167]
[160.53845215 -302.08401489]
[171.66255188 -312.15908813]
[183.57084656 -321.29394531]
[196.18409729 -329.42773438]
[209.41836548 -336.50634766]
[223.18557739 -342.48269653]
[237.39410400 -347.31701660]
[251.94940186 -350.97708130]
[266.75460815 -353.43859863]
[281.71115112 -354.68511963]
[296.71957397 -354.70840454]
[311.67993164 -353.50827026]
[326.49270630 -351.09274292]
[341.05926514 -347.47784424]
[355.28274536 -342.68765259]
[369.06842041 -336.75402832]
[382.32458496 -329.71649170]
[394.96301270 -321.62188721]
[406.89959717 -312.52404785]
[418.05490112 -302.48352051]
[428.35467529 -291.56713867]
[437.73040771 -279.84753418]
[446.11965942 -267.40274048]
[453.46661377 -254.31553650]
[459.72241211 -240.67303467]
[464.84536743 -226.56600952]
[468.80142212 -212.08836365]
[471.56427002 -197.33642578]
[473.11547852 -182.40838623]
[473.44473267 -167.40356445]
[472.54983521 -152.42184448]
[470.43679810 -137.56291199]
[467.11959839 -122.92566681]
[462.62039185 -108.60749817]
[456.96908569 -94.70371246]
[450.20327759 -81.30682373]
[442.36798096 -68.50599670]
[433.51538086 -56.38640976]
[423.70437622 -45.02873230]
[413.00024414 -34.50853729]
[401.47424316 -24.89583969]
[389.20306396 -16.25461197]
[376.26837158 -8.64236069]
[362.75622559 -2.10974503]
[348.75659180 3.29976177]
[334.36257935 7.55015898]
[319.67004395 10.61316109]
[304.77673340 12.46838379]
[289.78173828 13.10348034]
[274.78491211 12.51422501]
[259.88598633 10.70453930]
[245.18414307 7.68646526]
[230.77722168 3.48008919]
[216.76110840 -1.88659632]
[203.22906494 -8.37787628]
[190.27116394 -15.95055103]
[181.67259216 -3.65971327]
[173.07403564 8.63112450]
[164.47546387 20.92196274]
[155.87690735 33.21279907]
[147.27833557 45.50363922]
[138.67977905 57.79447556]
[130.08122253 70.08531189]
[121.48265076 82.37615204]
[127.75770569 98.72947693]
[123.00279999 115.58766937]
[109.10738373 126.25185394]
[91.59300232 126.48445892]
[83.36419678 139.02586365]
[75.13538361 151.56726074]
[66.90657806 164.10865784]
[78.93202209 173.08233643]
[90.39371490 182.76571655]
[101.24982452 193.12345886]
[111.46073914 204.11779785]
[120.98919678 215.70858765]
[129.80044556 227.85356140]
[137.86230469 240.50837708]
[145.14538574 253.62687683]
[151.62310791 267.16116333]
[157.27182007 281.06188965]
[162.07090759 295.27832031]
[166.00288391 309.75857544]
[169.05339050 324.44982910]
[171.21128845 339.29846191]
[172.46870422 354.25027466]
[172.82106018 369.25073242]
[172.26707458 384.24511719]
[170.80874634 399.17868042]
[168.45141602 413.99694824]
[165.20367432 428.64584351]
[161.07737732 443.07192993]
[156.08757019 457.22256470]
[150.25248718 471.04608154]
[143.59339905 484.49206543]
[136.13461304 497.51147461]
[127.90333557 510.05676270]
[118.92961121 522.08215332]
[109.24617767 533.54382324]
[98.88837433 544.39984131]
[87.89398956 554.61071777]
[76.30315399 564.13916016]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[71 179]
[72 178]
[73 177]
[74 176]
[80 172]
[81 171]
[82 170]
[83 169]
[84 168]
[85 167]
[86 166]
[87 165]
[88 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
