%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[99.05628204 753.64752197]
[84.08174896 752.67169189]
[69.21335602 750.64190674]
[54.52517700 747.56842041]
[40.09038925 743.46649170]
[25.98090363 738.35656738]
[12.26701546 732.26409912]
[-0.98295158 725.21942139]
[-13.70298767 717.25769043]
[-25.82972145 708.41851807]
[-37.30273819 698.74591064]
[-48.06487656 688.28814697]
[-58.06252289 677.09722900]
[-67.24586487 665.22900391]
[-75.56916046 652.74255371]
[-82.99092865 639.70007324]
[-89.47421265 626.16656494]
[-94.98669434 612.20941162]
[-99.50092316 597.89819336]
[-102.99440002 583.30419922]
[-105.44972229 568.50018311]
[-106.85466766 553.55975342]
[-107.20222473 538.55749512]
[-106.49066925 523.56811523]
[-104.72354126 508.66619873]
[-101.90964508 493.92608643]
[-98.06300354 479.42117310]
[-93.20278168 465.22375488]
[-87.35318756 451.40451050]
[-80.54335785 438.03234863]
[-72.80723572 425.17382812]
[-64.18335724 412.89303589]
[-54.71467590 401.25119019]
[-44.44837189 390.30621338]
[-33.43559647 380.11270142]
[-21.73120880 370.72143555]
[-9.39352226 362.17916870]
[3.51599646 354.52844238]
[16.93303299 347.80743408]
[30.79074287 342.04959106]
[45.02008820 337.28359985]
[59.55017853 333.53320312]
[74.30862427 330.81710815]
[89.22189331 329.14883423]
[104.21569824 328.53665161]
[104.66230774 313.54330444]
[105.10891724 298.54995728]
[105.55551910 283.55661011]
[106.00212860 268.56326294]
[106.44873047 253.56991577]
[106.89533997 238.57655334]
[99.54040527 225.62455750]
[107.68515778 212.06088257]
[108.13176727 197.06752014]
[108.57836914 182.07417297]
[107.12895203 167.14436340]
[103.80669403 152.51690674]
[100.48442841 137.88945007]
[97.16217041 123.26198578]
[93.67015839 120.00394440]
[92.18775177 114.51763916]
[93.96562958 108.14969635]
[89.44801331 101.47409821]
[91.14869690 93.18926239]
[88.48290253 78.42803955]
[85.81710052 63.66682434]
[83.15130615 48.90560532]
[80.48551178 34.14439011]
[77.81971741 19.38317299]
[75.15392303 4.62195539]
[72.37831116 -10.11900711]
[69.49303436 -24.83889961]
[66.60776520 -39.55878830]
[63.17570496 -43.49173355]
[61.73909760 -47.90641785]
[62.14729309 -51.96208572]
[63.93778229 -54.99959946]
[61.71266174 -69.83364105]
[59.48754501 -84.66768646]
[55.67457962 -90.06887054]
[55.22864151 -95.73439789]
[57.42385864 -99.97586823]
[55.64139175 -114.86958313]
[48.71549225 -101.56424713]
[36.45253372 -92.92597198]
[21.59209633 -90.88455963]
[7.45403624 -95.89607239]
[-2.80316591 -106.84092712]
[-6.88802528 -121.27400970]
[-3.88797379 -135.97093201]
[5.52676964 -147.64837646]
[19.25292587 -153.69755554]
[34.22404099 -152.76708984]
[47.09552383 -145.06481934]
[54.99185944 -132.31144714]
[55.66164780 -147.29647827]
[56.33143234 -162.28152466]
[57.00121689 -177.26655579]
[42.90575790 -182.79800415]
[31.37170410 -192.60841370]
[23.65017700 -205.63365173]
[20.57875443 -220.46083069]
[22.49060059 -235.48159790]
[29.17833138 -249.06661987]
[39.91651154 -259.74230957]
[53.54034424 -266.35061646]
[68.57202148 -268.17474365]
[83.38101196 -265.01684570]
[96.36095428 -257.21942139]
[106.10388184 -245.62829590]
[111.55294800 -231.50077820]
[112.11708069 -216.36933899]
[107.73508453 -201.87532043]
[98.88230133 -189.59089661]
[86.51899719 -180.84861755]
[71.98625183 -176.59677124]
[71.31646729 -161.61174011]
[70.64668274 -146.62669373]
[69.97689819 -131.64166260]
[70.53511047 -116.65204620]
[72.31757355 -101.75833130]
[74.32158661 -86.89280701]
[76.54670715 -72.05876160]
[78.77182770 -57.22471619]
[81.32765961 -42.44406128]
[84.21292877 -27.72417068]
[87.09820557 -13.00428009]
[91.46960449 -7.04503202]
[89.91513824 1.95615995]
[92.58093262 16.71737671]
[95.24672699 31.47859383]
[97.91252899 46.23981094]
[100.57832336 61.00102997]
[103.24411774 75.76224518]
[105.90991211 90.52346039]
[108.68552399 105.26442719]
[111.78963470 119.93972778]
[115.11189270 134.56718445]
[118.43415070 149.19465637]
[121.75640869 163.82211304]
[125.77523041 149.37049866]
[134.21435547 136.96965027]
[146.18319702 127.92825317]
[160.41865540 123.20046997]
[175.41841125 123.28523254]
[189.59951782 128.17359924]
[201.46540833 137.34968567]
[209.76385498 149.84512329]
[213.61907959 164.34123230]
[212.62425232 179.30821228]
[206.88435364 193.16654968]
[197.00512695 204.45375061]
[184.02914429 211.97863770]
[169.32580566 214.94711304]
[154.44679260 213.04588318]
[140.96229553 206.47561646]
[130.29539490 195.92965698]
[123.57171631 182.52078247]
[123.12511444 197.51412964]
[122.67850494 212.50747681]
[130.00149536 226.53190613]
[121.88868713 239.02316284]
[121.44207764 254.01651001]
[120.99547577 269.00985718]
[120.54886627 284.00320435]
[120.10226440 298.99655151]
[119.65565491 313.98992920]
[119.20905304 328.98327637]
[134.13983154 330.48678589]
[148.92736816 333.03976440]
[163.49798584 336.62951660]
[177.77908325 341.23809814]
[191.69952393 346.84259033]
[205.18995667 353.41503906]
[218.18316650 360.92272949]
[230.61441040 369.32824707]
[242.42178345 378.58975220]
[253.54643250 388.66104126]
[263.93295288 399.49197388]
[273.52960205 411.02856445]
[282.28857422 423.21337891]
[290.16619873 435.98568726]
[297.12326050 449.28186035]
[303.12506104 463.03567505]
[308.14175415 477.17855835]
[312.14831543 491.64010620]
[315.12478638 506.34826660]
[317.05636597 521.22973633]
[317.93338013 536.21038818]
[317.75149536 551.21557617]
[316.51159668 566.17053223]
[314.21987915 581.00085449]
[310.88775635 595.63250732]
[306.53179932 609.99267578]
[301.17376709 624.00982666]
[294.84030151 637.61407471]
[287.56298828 650.73773193]
[279.37808228 663.31530762]
[270.32635498 675.28424072]
[260.45288086 686.58483887]
[249.80685425 697.16082764]
[238.44134521 706.95947266]
[226.41294861 715.93200684]
[213.78158569 724.03375244]
[200.61021423 731.22430420]
[186.96443176 737.46783447]
[172.91223145 742.73321533]
[158.52360535 746.99426270]
[143.87026978 750.22973633]
[129.02519226 752.42352295]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 168]
[46 167]
[47 166]
[48 165]
[49 164]
[50 163]
[51 162]
[53 160]
[54 159]
[55 158]
[56 140]
[57 139]
[58 138]
[59 137]
[62 136]
[64 135]
[65 134]
[66 133]
[67 132]
[68 131]
[69 130]
[70 129]
[71 127]
[72 126]
[73 125]
[77 124]
[78 123]
[79 122]
[82 121]
[83 120]
[95 119]
[96 118]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
