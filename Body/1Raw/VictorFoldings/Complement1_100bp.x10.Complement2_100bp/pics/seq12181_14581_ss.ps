%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUGxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[96.81084442 920.63568115]
[81.90395355 918.94226074]
[67.09281158 916.55206299]
[52.40999222 913.47021484]
[37.88776398 909.70349121]
[23.55804825 905.26025391]
[9.45234871 900.15026855]
[-4.39832878 894.38470459]
[-17.96353722 887.97625732]
[-31.21345901 880.93902588]
[-44.11896515 873.28845215]
[-56.65168762 865.04138184]
[-68.78407288 856.21594238]
[-80.48946381 846.83154297]
[-91.74211121 836.90881348]
[-102.51729584 826.46954346]
[-112.79131317 815.53668213]
[-122.54160309 804.13427734]
[-131.74670410 792.28735352]
[-140.38641357 780.02203369]
[-148.44171143 767.36523438]
[-155.89489746 754.34472656]
[-162.72959900 740.98919678]
[-168.93078613 727.32800293]
[-174.48481750 713.39117432]
[-179.37948608 699.20928955]
[-183.60404968 684.81359863]
[-187.14920044 670.23571777]
[-190.00717163 655.50769043]
[-192.17164612 640.66186523]
[-193.63789368 625.73089600]
[-194.40267944 610.74761963]
[-194.46432495 595.74499512]
[-193.82269287 580.75598145]
[-192.47920227 565.81347656]
[-190.43678284 550.95037842]
[-187.69995117 536.19934082]
[-184.27471924 521.59283447]
[-180.16859436 507.16287231]
[-175.39062500 492.94128418]
[-169.95130920 478.95925903]
[-163.86259460 465.24755859]
[-157.13787842 451.83633423]
[-149.79194641 438.75503540]
[-141.84092712 426.03244019]
[-133.30230713 413.69650269]
[-124.19487000 401.77438354]
[-114.53861237 390.29220581]
[-104.35478210 379.27529907]
[-93.66574860 368.74783325]
[-82.49501801 358.73294067]
[-70.86714935 349.25265503]
[-58.80769348 340.32781982]
[-46.34316635 331.97805786]
[-33.50096512 324.22171021]
[-20.30932426 317.07583618]
[-6.79723549 310.55612183]
[7.00559521 304.67694092]
[21.06882668 299.45117188]
[35.36154556 294.89035034]
[49.85232925 291.00445557]
[64.50933075 287.80203247]
[79.30032349 285.29016113]
[94.19279480 283.47433472]
[93.07714844 268.51586914]
[91.96150208 253.55741882]
[90.84585571 238.59896851]
[89.73020172 223.64051819]
[80.00853729 235.06370544]
[65.24012756 237.68931580]
[52.17687607 230.31697083]
[46.79113388 216.31719971]
[51.54519272 202.09049988]
[64.26555634 194.14112854]
[79.13664246 196.10343933]
[89.36032867 207.08200073]
[89.80693817 192.08865356]
[82.45200348 179.13665771]
[90.59675598 165.57296753]
[91.04336548 150.57962036]
[91.48996735 135.58625793]
[91.93657684 120.59291077]
[92.38317871 105.59956360]
[89.74391937 101.06654358]
[89.83229828 95.37747955]
[93.07291412 90.16831207]
[93.96572876 75.19490814]
[94.74704742 60.21527100]
[95.41683197 45.23023224]
[96.08661652 30.24519539]
[96.75640106 15.26015663]
[88.64424896 5.23240519]
[89.51061249 -7.23487902]
[98.34694672 -15.49598026]
[99.23976135 -30.46938515]
[100.13257599 -45.44279099]
[85.81313324 -50.19840240]
[73.21298218 -58.49892426]
[63.19123459 -69.77841949]
[56.43118286 -83.26782227]
[53.39374161 -98.04741669]
[54.28601074 -113.10949707]
[59.04714966 -127.42710876]
[67.35253906 -140.02404785]
[78.63589478 -150.04144287]
[92.12791443 -156.79627991]
[106.90867615 -159.82801819]
[121.97041321 -158.92993164]
[136.28617859 -154.16326904]
[148.87991333 -145.85302734]
[158.89295959 -134.56579590]
[165.64259338 -121.07116699]
[168.66860962 -106.28923035]
[167.76470947 -91.22784424]
[162.99252319 -76.91391754]
[154.67741394 -64.32339478]
[143.38632202 -54.31471634]
[129.88908386 -47.57029343]
[115.10598755 -44.54997635]
[114.21316528 -29.57657051]
[113.32035065 -14.60316372]
[122.00892639 0.64398855]
[111.74143982 15.92994118]
[111.07165527 30.91497993]
[110.40187073 45.90002060]
[109.73208618 60.88505936]
[112.57378387 67.70756531]
[108.93913269 76.08772278]
[108.04631805 91.06113434]
[107.37653351 106.04617310]
[106.92992401 121.03952026]
[106.48332214 136.03286743]
[106.03671265 151.02621460]
[105.59011078 166.01957703]
[112.91309357 180.04399109]
[104.80028534 192.53524780]
[104.35368347 207.52861023]
[104.68865967 222.52485657]
[105.80430603 237.48332214]
[106.91995239 252.44177246]
[108.03560638 267.40023804]
[109.15125275 282.35867310]
[124.14832306 281.94525146]
[139.14828491 282.23522949]
[154.11817932 283.22796631]
[169.02507019 284.92129517]
[183.83622742 287.31146240]
[198.51905823 290.39324951]
[213.04130554 294.15988159]
[227.37103271 298.60305786]
[241.47676086 303.71301270]
[255.32746887 309.47851562]
[268.89270020 315.88690186]
[282.14263916 322.92407227]
[295.04818726 330.57458496]
[307.58093262 338.82156372]
[319.71337891 347.64694214]
[331.41879272 357.03131104]
[342.67147827 366.95401001]
[353.44671631 377.39321899]
[363.72079468 388.32604980]
[373.47113037 399.72842407]
[382.67630005 411.57528687]
[391.31604004 423.84057617]
[399.37139893 436.49737549]
[406.82464600 449.51782227]
[413.65939331 462.87332153]
[419.86062622 476.53448486]
[425.41473389 490.47131348]
[430.30947876 504.65316772]
[434.53408813 519.04882812]
[438.07931519 533.62670898]
[440.93734741 548.35473633]
[443.10186768 563.20056152]
[444.56817627 578.13146973]
[445.33303833 593.11474609]
[445.39474487 608.11737061]
[444.75317383 623.10644531]
[443.40975952 638.04895020]
[441.36740112 652.91204834]
[438.63064575 667.66308594]
[435.20544434 682.26959229]
[431.09939575 696.69958496]
[426.32150269 710.92120361]
[420.88223267 724.90319824]
[414.79357910 738.61492920]
[408.06893921 752.02624512]
[400.72305298 765.10754395]
[392.77209473 777.83013916]
[384.23352051 790.16613770]
[375.12612915 802.08831787]
[365.46994019 813.57049561]
[355.28613281 824.58746338]
[344.59716797 835.11499023]
[333.42648315 845.12994385]
[321.79864502 854.61022949]
[309.73922729 863.53515625]
[297.27471924 871.88494873]
[284.43255615 879.64135742]
[271.24096680 886.78729248]
[257.72888184 893.30706787]
[243.92608643 899.18634033]
[229.86288452 904.41210938]
[215.57019043 908.97302246]
[201.07940674 912.85900879]
[186.42242432 916.06146240]
[171.63143921 918.57342529]
[156.73898315 920.38928223]
[141.77777100 921.50518799]
[126.78069305 921.91851807]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 142]
[65 141]
[66 140]
[67 139]
[68 138]
[76 137]
[77 136]
[79 134]
[80 133]
[81 132]
[82 131]
[83 130]
[86 129]
[87 128]
[88 126]
[89 125]
[90 124]
[91 123]
[94 121]
[95 120]
[96 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
