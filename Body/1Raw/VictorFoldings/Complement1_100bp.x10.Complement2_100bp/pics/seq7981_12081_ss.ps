%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[45.71889114 426.64135742]
[50.22008514 441.11596680]
[49.49610519 456.25704956]
[43.63437653 470.23617554]
[33.34273529 481.36529541]
[19.86394119 488.30056763]
[4.82562685 490.20449829]
[-9.95625782 486.84716797]
[-22.69672966 478.63400269]
[-31.85731316 466.55676270]
[-36.33182144 452.07385254]
[-35.57994080 436.93414307]
[-29.69246292 422.96585083]
[-19.38032722 411.85568237]
[-5.88877583 404.94528198]
[9.15302181 403.06909180]
[12.47528076 388.44161987]
[15.79754066 373.81414795]
[19.11980057 359.18670654]
[21.56552696 344.38742065]
[23.12605095 329.46881104]
[24.68657303 314.55020142]
[26.24709702 299.63162231]
[27.80761909 284.71301270]
[29.36814308 269.79440308]
[20.78384590 282.09521484]
[8.55003357 290.77471924]
[-5.89607716 294.81326294]
[-20.85737419 293.73641968]
[-34.57621765 287.67065430]
[-45.44092941 277.32861328]
[-52.17513657 263.92523193]
[-53.98771286 249.03514099]
[-50.66571426 234.40762329]
[-42.59941101 221.76109314]
[-30.73641777 212.58125305]
[-16.47039413 207.94654846]
[-1.47729278 208.40144348]
[12.48150826 213.89251709]
[23.76614571 223.77467346]
[31.05090904 236.88696289]
[33.47997665 251.69055176]
[38.51689529 237.56152344]
[43.55381012 223.43249512]
[40.53952026 208.84608459]
[52.46157837 198.44535828]
[57.49849319 184.31632996]
[62.53540802 170.18730164]
[61.45716476 167.59971619]
[61.33892059 164.42913818]
[62.40787888 161.03904724]
[64.75556946 157.86840820]
[68.31562042 155.38244629]
[74.18457794 141.57827759]
[72.04383087 126.83831024]
[84.56381226 117.16564178]
[90.43277740 103.36146545]
[90.43778229 95.30091095]
[96.49324799 89.39648438]
[102.56708527 75.68122101]
[108.64091492 61.96595383]
[97.74485779 52.55496979]
[89.95169067 40.46781921]
[85.88578796 26.68945503]
[85.86821747 12.33962631]
[89.89144135 -1.41809821]
[97.62061310 -13.47069454]
[108.42147064 -22.84572220]
[121.41233826 -28.78978539]
[135.53611755 -30.82906914]
[149.64631653 -28.80710030]
[155.92367554 -42.43041611]
[162.20103455 -56.05373383]
[168.47839355 -69.67704773]
[174.75575256 -83.30036163]
[181.03311157 -96.92368317]
[187.31047058 -110.54699707]
[186.05854797 -126.31859589]
[198.41197205 -134.63978577]
[186.74703979 -145.32389832]
[178.96424866 -159.07287598]
[175.81498718 -174.53491211]
[177.59574890 -190.19404602]
[184.12031555 -204.51876831]
[194.73904419 -216.11180115]
[208.40364075 -223.84643555]
[223.77052307 -226.97596741]
[239.33308411 -225.20584106]
[237.84646606 -240.95704651]
[250.07463074 -249.46124268]
[256.14846802 -263.17651367]
[262.22229004 -276.89178467]
[268.29614258 -290.60702515]
[267.97280884 -297.21060181]
[270.63351440 -302.23229980]
[274.76040649 -304.63601685]
[281.23989868 -318.16436768]
[287.71942139 -331.69271851]
[294.19891357 -345.22103882]
[281.70779419 -353.57287598]
[270.53244019 -363.61740112]
[260.90042114 -375.15014648]
[253.00778198 -387.93637085]
[247.01521301 -401.71569824]
[243.04473877 -416.20761108]
[241.17716980 -431.11712646]
[241.45054626 -446.14062500]
[243.85928345 -460.97232056]
[248.35435486 -475.31021118]
[254.84423828 -488.86239624]
[263.19683838 -501.35299683]
[273.24203491 -512.52770996]
[284.77542114 -522.15905762]
[297.56210327 -530.05090332]
[311.34179688 -536.04260254]
[325.83398438 -540.01220703]
[340.74359131 -541.87884521]
[355.76708984 -541.60449219]
[370.59863281 -539.19488525]
[384.93621826 -534.69891357]
[398.48803711 -528.20819092]
[410.97811890 -519.85479736]
[422.15219116 -509.80889893]
[431.78280640 -498.27493286]
[439.67385864 -485.48776245]
[445.66473389 -471.70770264]
[449.63342285 -457.21527100]
[451.49911499 -442.30554199]
[451.22390747 -427.28207397]
[448.81332397 -412.45068359]
[444.31646729 -398.11334229]
[437.82492065 -384.56195068]
[429.47079468 -372.07238770]
[419.42416382 -360.89892578]
[407.88961792 -351.26901245]
[395.10195923 -343.37875366]
[381.32150269 -337.38876343]
[366.82882690 -333.42095947]
[351.91900635 -331.55618286]
[336.89553833 -331.83233643]
[322.06430054 -334.24383545]
[307.72726440 -338.74154663]
[301.24774170 -325.21322632]
[294.76824951 -311.68487549]
[288.28875732 -298.15652466]
[282.01141357 -284.53320312]
[275.93756104 -270.81793213]
[269.86373901 -257.10266113]
[263.78988647 -243.38740540]
[265.71096802 -228.61720276]
[253.04833984 -219.13200378]
[263.89215088 -209.88009644]
[271.69735718 -197.93360901]
[275.82354736 -184.25628662]
[275.92758179 -169.95457458]
[271.99203491 -156.18807983]
[264.32742310 -144.07548523]
[253.54760742 -134.60377502]
[240.52075195 -128.54766846]
[226.29937744 -126.40638733]
[212.03527832 -128.36242676]
[213.73622131 -113.56525421]
[200.93379211 -104.26963806]
[194.65643311 -90.64631653]
[188.37907410 -77.02300262]
[182.10171509 -63.39968872]
[175.82435608 -49.77637100]
[169.54698181 -36.15305328]
[163.26962280 -22.52973938]
[174.88442993 -12.02151966]
[182.69316101 1.57845032]
[185.92102051 16.94485474]
[184.24026489 32.57595062]
[177.80348206 46.94032669]
[167.22982788 58.62695694]
[153.54542542 66.48377228]
[138.08384705 69.73126984]
[122.35618591 68.03978729]
[116.28234863 81.75505066]
[110.20851898 95.47032166]
[104.23695374 109.23042297]
[98.36799622 123.03459930]
[100.08895111 138.76193237]
[87.98875427 147.44723511]
[82.11979675 161.25141907]
[76.66443634 175.22421265]
[71.62752533 189.35324097]
[66.59060669 203.48226929]
[69.24462128 219.07928467]
[57.68283844 228.46940613]
[52.64592361 242.59843445]
[47.60900879 256.72747803]
[44.28674698 271.35491943]
[42.72622299 286.27352905]
[41.16570282 301.19213867]
[39.60517883 316.11074829]
[38.04465485 331.02935791]
[36.48413086 345.94793701]
[47.48022842 335.74569702]
[62.35878372 333.84078979]
[75.57045746 340.94372559]
[82.18762970 354.40527344]
[79.74225616 369.20458984]
[69.14640045 379.82192993]
[54.35205078 382.29727173]
[40.87714005 375.70736694]
[33.74726105 362.50894165]
[30.42500114 377.13641357]
[27.10274124 391.76388550]
[23.78048134 406.39132690]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 210]
[17 209]
[18 208]
[19 207]
[20 198]
[21 197]
[22 196]
[23 195]
[24 194]
[25 193]
[42 192]
[43 191]
[44 190]
[46 188]
[47 187]
[48 186]
[53 185]
[54 184]
[56 182]
[57 181]
[59 180]
[60 179]
[61 178]
[71 169]
[72 168]
[73 167]
[74 166]
[75 165]
[76 164]
[77 163]
[79 161]
[88 151]
[90 149]
[91 148]
[92 147]
[93 146]
[96 145]
[97 144]
[98 143]
[99 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
