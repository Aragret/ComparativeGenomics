%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[86.68608856 809.94537354]
[72.08950043 806.42803955]
[57.94948578 801.37902832]
[44.42626572 794.85565186]
[31.67305946 786.93176270]
[19.83437920 777.69720459]
[9.04436111 767.25653076]
[-0.57473379 755.72808838]
[-8.91391373 743.24249268]
[-15.87868977 729.94116211]
[-21.39014626 715.97491455]
[-25.38583374 701.50195312]
[-27.82047653 686.68627930]
[-28.66648865 671.69573975]
[-27.91428757 656.70019531]
[-25.57239151 641.86956787]
[-21.66733932 627.37188721]
[-16.24337769 613.37145996]
[-9.36196232 600.02685547]
[-1.10106671 587.48931885]
[8.44570732 575.90093994]
[19.17018700 565.39294434]
[30.95085716 556.08447266]
[43.65423203 548.08093262]
[57.13637543 541.47308350]
[71.24452209 536.33569336]
[85.81880951 532.72711182]
[100.69411469 530.68811035]
[100.24750519 515.69476318]
[99.80090332 500.70138550]
[99.35429382 485.70803833]
[98.90769196 470.71469116]
[98.46108246 455.72134399]
[84.89127350 451.68728638]
[73.21301270 443.64743042]
[64.57559204 432.37689209]
[59.83399582 418.96954346]
[59.46430206 404.73178101]
[63.51589966 391.05529785]
[71.60536957 379.28100586]
[82.95273590 370.56750488]
[96.45663452 365.77728271]
[96.23330688 350.77896118]
[96.00997925 335.78060913]
[95.78665161 320.78228760]
[95.56332397 305.78393555]
[95.33999634 290.78561401]
[95.11666870 275.78726196]
[80.37954712 273.10559082]
[66.44435883 267.59848022]
[53.84737015 259.47579956]
[43.07374573 249.04820251]
[34.53886032 236.71510315]
[28.57228088 222.94943237]
[25.40504074 208.27952576]
[25.16070366 193.26878357]
[27.85052872 178.49412537]
[33.37298203 164.52369690]
[41.51755524 151.89514160]
[51.97279739 141.09483337]
[64.33821869 132.53916931]
[78.13964081 126.55852509]
[92.84736633 123.38446045]
[92.62403870 108.38612366]
[92.28906250 93.38986206]
[91.84246063 78.39650726]
[91.39585114 63.40316010]
[90.94924164 48.40980911]
[90.50263977 33.41646194]
[87.75776672 28.97655678]
[87.06018829 24.38670921]
[88.12419128 20.45187187]
[90.38598633 17.74694252]
[81.97886658 7.96516657]
[82.47364807 -4.52238512]
[91.06009674 -13.04291439]
[91.50670624 -28.03626442]
[91.95330811 -43.02961349]
[77.08127594 -45.09594727]
[62.51983261 -48.75814438]
[48.43971252 -53.97326660]
[35.00600052 -60.68017578]
[22.37619591 -68.80022430]
[10.69837666 -78.23822784]
[0.10946067 -88.88350677]
[-9.26640320 -100.61127472]
[-17.31928825 -113.28401184]
[-23.95477676 -126.75314331]
[-29.09507370 -140.86074829]
[-32.67990875 -155.44142151]
[-34.66725540 -170.32423401]
[-35.03380966 -185.33465576]
[-33.77527237 -200.29672241]
[-30.90640450 -215.03498840]
[-26.46083832 -229.37669373]
[-20.49069786 -243.15365601]
[-13.06597805 -256.20434570]
[-4.27373028 -268.37576294]
[5.78295946 -279.52523804]
[16.98618317 -289.52197266]
[29.20458794 -298.24880981]
[42.29491806 -305.60345459]
[56.10369873 -311.49960327]
[70.46903229 -315.86819458]
[85.22248077 -318.65798950]
[100.19107819 -319.83627319]
[115.19932556 -319.38922119]
[130.07124329 -317.32208252]
[144.63249207 -313.65908813]
[158.71232605 -308.44320679]
[172.14567566 -301.73559570]
[184.77505493 -293.61486816]
[196.45236206 -284.17623901]
[207.04071045 -273.53036499]
[216.41593933 -261.80209351]
[224.46813965 -249.12893677]
[231.10290527 -235.65943909]
[236.24244690 -221.55155945]
[239.82649231 -206.97068787]
[241.81303406 -192.08778381]
[242.17878723 -177.07734680]
[240.91944885 -162.11534119]
[238.04977417 -147.37722778]
[233.60343933 -133.03576660]
[227.63256836 -119.25912476]
[220.20713806 -106.20882416]
[211.41423035 -94.03787231]
[201.35694885 -82.88896179]
[190.15318298 -72.89281464]
[177.93431091 -64.16662598]
[164.84358215 -56.81270981]
[151.03448486 -50.91728592]
[136.66891479 -46.54946899]
[121.91532135 -43.76047897]
[106.94666290 -42.58300781]
[106.50005341 -27.58965874]
[106.05345154 -12.59630871]
[115.19213104 2.38539338]
[105.38432312 17.97027016]
[105.49598694 32.96985626]
[105.94259644 47.96320343]
[106.38919830 62.95655441]
[106.83580780 77.94990540]
[107.28240967 92.94325256]
[110.65113068 100.26611328]
[107.62237549 108.16278839]
[107.84570312 123.16113281]
[122.64141083 125.89588165]
[136.61477661 131.46296692]
[149.22946167 139.64666748]
[160.00163269 150.13088989]
[168.51858521 162.51135254]
[174.45454407 176.31115723]
[177.58308411 190.99919128]
[177.78576660 206.01054382]
[175.05671692 220.76826477]
[169.50263977 234.70547485]
[161.33872986 247.28721619]
[150.88035583 258.03097534]
[138.53079224 266.52508545]
[124.76575470 272.44467163]
[110.11500549 275.56393433]
[110.33833313 290.56228638]
[110.56166077 305.56060791]
[110.78498840 320.55895996]
[111.00831604 335.55728149]
[111.23164368 350.55563354]
[111.45497131 365.55395508]
[126.53328705 370.70022583]
[138.91697693 380.68170166]
[147.12031555 394.27719116]
[150.16717529 409.83346558]
[147.70722961 425.46612549]
[140.05603027 439.28787231]
[128.15476990 449.63653564]
[113.45442963 455.27474976]
[113.90103912 470.26809692]
[114.34764862 485.26144409]
[114.79425049 500.25479126]
[115.24085999 515.24816895]
[115.68746185 530.24151611]
[130.65776062 531.39147949]
[145.42098999 534.12622070]
[159.80990601 538.41473389]
[173.66145325 544.20843506]
[186.81867981 551.44165039]
[199.13252258 560.03240967]
[210.46342468 569.88342285]
[220.68302917 580.88305664]
[229.67553711 592.90667725]
[237.33903503 605.81799316]
[243.58670044 619.47082520]
[248.34774780 633.71032715]
[251.56822205 648.37530518]
[253.21163940 663.29943848]
[253.25938416 678.31378174]
[251.71089172 693.24810791]
[248.58374023 707.93322754]
[243.91334534 722.20275879]
[237.75262451 735.89501953]
[230.17138672 748.85485840]
[221.25552368 760.93536377]
[211.10607910 771.99975586]
[199.83804321 781.92266846]
[187.57908630 790.59155273]
[174.46812439 797.90832520]
[160.65368652 803.78997803]
[146.29234314 808.16986084]
[131.54678345 810.99847412]
[116.58411407 812.24359131]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 181]
[29 180]
[30 179]
[31 178]
[32 177]
[33 176]
[42 168]
[43 167]
[44 166]
[45 165]
[46 164]
[47 163]
[48 162]
[63 147]
[64 146]
[65 144]
[66 143]
[67 142]
[68 141]
[69 140]
[73 139]
[76 137]
[77 136]
[78 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
