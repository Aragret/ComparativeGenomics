%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[12.13273525 503.37329102]
[8.84786415 518.05401611]
[2.92112541 531.88110352]
[-5.44561863 544.38360596]
[-15.96739960 555.13568115]
[-28.28585052 563.77111816]
[-41.98140717 569.99572754]
[-56.58760834 573.59765625]
[-71.60696411 574.45410156]
[-86.52793121 572.53588867]
[-100.84230042 567.90844727]
[-114.06253052 560.72924805]
[-125.73834991 551.24298096]
[-135.47207642 539.77258301]
[-142.93218994 526.70886230]
[-147.86459351 512.49670410]
[-150.10130310 497.62014771]
[-149.56613159 482.58590698]
[-146.27729797 467.90603638]
[-140.34683228 454.08056641]
[-131.97673035 441.58032227]
[-121.45204926 430.83108521]
[-109.13127136 422.19900513]
[-95.43403625 415.97802734]
[-80.82686615 412.38009644]
[-65.80727386 411.52770996]
[-50.88682556 413.44992065]
[-46.27281570 399.17718506]
[-41.65880585 384.90444946]
[-37.04479599 370.63171387]
[-32.43078995 356.35897827]
[-27.81677818 342.08624268]
[-23.20277023 327.81350708]
[-35.68361282 336.13388062]
[-50.67932892 336.49221802]
[-63.54334259 328.77746582]
[-70.28958893 315.38015747]
[-68.82767487 300.45156860]
[-59.61059189 288.61749268]
[-45.49435043 283.54483032]
[-30.85302162 286.80545044]
[-20.22338295 297.38894653]
[-16.89915657 312.01623535]
[-10.41965961 298.48788452]
[-3.94016409 284.95953369]
[2.53933167 271.43118286]
[9.01882744 257.90283203]
[15.49832344 244.37449646]
[21.97781944 230.84614563]
[28.45731544 217.31779480]
[34.93680954 203.78945923]
[33.45637131 188.96861267]
[46.39577484 179.86462402]
[31.59655190 182.31065369]
[20.35530090 172.37916565]
[20.95865440 157.39131165]
[32.96184158 148.39555359]
[47.51655960 152.02325439]
[53.89361954 165.59854126]
[61.36136246 152.58958435]
[68.82910156 139.58062744]
[76.29684448 126.57167816]
[83.76458740 113.56272888]
[91.23233032 100.55377197]
[90.68840027 97.55483246]
[91.22364807 94.29170227]
[92.93801117 91.16369629]
[95.78253937 88.60148621]
[99.55163574 87.01186371]
[107.78044128 74.47046661]
[108.88193512 58.68764877]
[122.33306122 52.29104614]
[130.56185913 39.74964523]
[138.02960205 26.74069214]
[144.70980835 13.31031609]
[151.38999939 -0.12005955]
[158.07019043 -13.55043602]
[145.72555542 -5.02927876]
[131.22860718 -1.17720151]
[116.28243256 -2.44674182]
[102.64288330 -8.68875504]
[91.91233063 -19.16993713]
[85.35137939 -32.65896606]
[83.73081207 -47.57116699]
[87.24100494 -62.15467072]
[95.46958923 -74.69622040]
[107.44987488 -83.72244263]
[121.77442932 -88.17295074]
[136.76042175 -87.52490234]
[150.64732361 -81.85443115]
[161.80369568 -71.82769775]
[168.91889954 -58.62263489]
[171.15705872 -43.79055405]
[168.25466919 -29.07245255]
[177.91548157 -40.54715347]
[187.57629395 -52.02185059]
[197.23710632 -63.49655151]
[206.89791870 -74.97125244]
[196.43290710 -85.73518372]
[187.09167480 -97.48762512]
[178.96702576 -110.11176300]
[172.13972473 -123.48212433]
[166.67764282 -137.46583557]
[162.63504028 -151.92391968]
[160.05210876 -166.71266174]
[158.95451355 -181.68510437]
[159.35316467 -196.69241333]
[161.24411011 -211.58546448]
[164.60853577 -226.21623230]
[169.41302490 -240.43930054]
[175.60980225 -254.11329651]
[183.13731384 -267.10235596]
[191.92071533 -279.27734375]
[201.87272644 -290.51727295]
[212.89442444 -300.71044922]
[224.87629700 -309.75552368]
[237.69921875 -317.56265259]
[251.23577881 -324.05419922]
[265.35144043 -329.16564941]
[279.90588379 -332.84625244]
[294.75445557 -335.05935669]
[309.74963379 -335.78302002]
[324.74234009 -335.01004028]
[339.58355713 -332.74807739]
[354.12582397 -329.01962280]
[368.22457886 -323.86175537]
[381.73968506 -317.32568359]
[394.53686523 -309.47644043]
[406.48892212 -300.39196777]
[417.47702026 -290.16259766]
[427.39199829 -278.88998413]
[436.13531494 -266.68615723]
[443.62002563 -253.67242432]
[449.77178955 -239.97810364]
[454.52944946 -225.73930359]
[457.84573364 -211.09754944]
[459.68765259 -196.19836426]
[460.03695679 -181.18980408]
[458.89010620 -166.22106934]
[456.25851440 -151.44090271]
[452.16836548 -136.99620056]
[446.66030884 -123.03053284]
[439.78906250 -109.68270111]
[431.62292480 -97.08536530]
[422.24307251 -85.36372375]
[411.74270630 -74.63427734]
[400.22619629 -65.00366211]
[387.80801392 -56.56759262]
[374.61157227 -49.40991211]
[360.76800537 -43.60176468]
[346.41494751 -39.20086670]
[331.69500732 -36.25096130]
[316.75448608 -34.78137207]
[301.74188232 -34.80669785]
[286.80642700 -36.32668686]
[272.09652710 -39.32624054]
[257.75836182 -43.77553558]
[243.93449402 -49.63035965]
[230.76226807 -56.83252335]
[218.37261963 -65.31044006]
[208.71180725 -53.83574295]
[199.05099487 -42.36104202]
[189.39018250 -30.88634109]
[179.72937012 -19.41164207]
[171.50056458 -6.87024069]
[164.82037354 6.56013489]
[158.14018250 19.99051094]
[151.45997620 33.42088699]
[165.33003235 27.70932961]
[179.93502808 31.12899971]
[189.82766724 42.40444183]
[191.31825256 57.33019638]
[183.85081482 70.33932495]
[170.21054077 76.57975006]
[155.48490906 73.72393799]
[145.16619873 62.83703995]
[143.10327148 47.97845078]
[134.87446594 60.51985168]
[134.36154175 75.40562439]
[120.32184601 82.69927216]
[112.09303284 95.24067688]
[104.24127960 108.02151489]
[96.77353668 121.03047180]
[89.30579376 134.03941345]
[81.83805847 147.04837036]
[74.37031555 160.05732727]
[66.90257263 173.06628418]
[59.92412186 186.34411621]
[60.94110107 202.13261414]
[48.46515656 210.26895142]
[41.98566055 223.79730225]
[35.50616455 237.32563782]
[29.02666855 250.85398865]
[22.54717255 264.38232422]
[16.06767654 277.91067505]
[9.58818150 291.43902588]
[3.10868549 304.96737671]
[-3.37081027 318.49572754]
[-8.93003654 332.42752075]
[-13.54404545 346.70025635]
[-18.15805435 360.97299194]
[-22.77206421 375.24572754]
[-27.38607407 389.51846313]
[-32.00008392 403.79116821]
[-36.61408997 418.06390381]
[-23.39192581 425.23950195]
[-11.71355247 434.72265625]
[-1.97673333 446.19039917]
[5.48690033 459.25213623]
[10.42313862 473.46298218]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 205]
[28 204]
[29 203]
[30 202]
[31 201]
[32 200]
[33 199]
[43 198]
[44 197]
[45 196]
[46 195]
[47 194]
[48 193]
[49 192]
[50 191]
[51 190]
[53 188]
[59 187]
[60 186]
[61 185]
[62 184]
[63 183]
[64 182]
[69 181]
[70 180]
[72 178]
[73 177]
[74 168]
[75 167]
[76 166]
[77 165]
[94 164]
[95 163]
[96 162]
[97 161]
[98 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
