%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[140.95841980 328.08120728]
[130.11505127 338.47717285]
[118.00746918 347.36883545]
[104.84284210 354.60400391]
[90.84644318 360.05889893]
[76.25775909 363.64016724]
[61.32643509 365.28652954]
[46.30795670 364.96981812]
[31.45931244 362.69543457]
[17.03457832 358.50234985]
[3.28058505 352.46224976]
[-9.56732082 344.67852783]
[-21.28929329 335.28436279]
[-31.68475533 324.44049072]
[-40.57582855 312.33248901]
[-47.81037140 299.16751099]
[-53.26459122 285.17086792]
[-56.84516144 270.58200073]
[-58.49081421 255.65060425]
[-58.17338943 240.63214111]
[-55.89831924 225.78361511]
[-51.70453262 211.35906982]
[-45.66378784 197.60536194]
[-37.87945557 184.75782776]
[-28.48472977 173.03630066]
[-17.64037132 162.64135742]
[-5.53193951 153.75086975]
[7.63337374 146.51695251]
[21.63029289 141.06340027]
[36.21931458 137.48352051]
[51.15079498 135.83857727]
[66.16924286 136.15672302]
[81.01767731 138.43249512]
[85.20468140 124.02870941]
[89.39169312 109.62493134]
[86.24539948 96.00170135]
[96.20452118 86.18805695]
[100.39153290 71.78427887]
[99.20693207 67.60687256]
[99.39440155 63.66614151]
[100.71105957 60.36435318]
[102.80832672 57.98358154]
[105.28029633 56.66163635]
[110.31720734 42.53260803]
[115.35412598 28.40357780]
[120.39104462 14.27454948]
[125.42795563 0.14551957]
[130.46487427 -13.98351002]
[135.50178528 -28.11253929]
[121.61607361 -33.79287338]
[108.00537872 -40.10385132]
[94.69832611 -47.03219604]
[81.72291565 -54.56333542]
[69.10642242 -62.68143845]
[56.87538910 -71.36943054]
[45.05552673 -80.60903931]
[33.67170334 -90.38082886]
[22.74784851 -100.66425323]
[12.30694389 -111.43769073]
[2.37094283 -122.67848206]
[-7.03925800 -134.36297607]
[-15.90386772 -146.46662903]
[-24.20424652 -158.96394348]
[-31.92293549 -171.82867432]
[-39.04370499 -185.03375244]
[-45.55157471 -198.55142212]
[-51.43286514 -212.35322571]
[-56.67520523 -226.41015625]
[-61.26756668 -240.69264221]
[-65.20029449 -255.17066956]
[-68.46512604 -269.81378174]
[-71.05517578 -284.59115601]
[-72.96501923 -299.47174072]
[-74.19062042 -314.42425537]
[-74.72941589 -329.41720581]
[-74.58026886 -344.41912842]
[-73.74348450 -359.39840698]
[-72.22084045 -374.32357788]
[-70.01551819 -389.16326904]
[-67.13217163 -403.88623047]
[-63.57685471 -418.46151733]
[-59.35704803 -432.85848999]
[-54.48162842 -447.04687500]
[-48.96084213 -460.99679565]
[-42.80630875 -474.67892456]
[-36.03096008 -488.06451416]
[-28.64905739 -501.12542725]
[-20.67611504 -513.83416748]
[-12.12890530 -526.16394043]
[-3.02540135 -538.08898926]
[6.61525154 -549.58404541]
[16.77277946 -560.62506104]
[27.42581940 -571.18878174]
[38.55196762 -581.25299072]
[50.12783051 -590.79650879]
[62.12905502 -599.79931641]
[74.53041077 -608.24243164]
[87.30580902 -616.10803223]
[100.42839813 -623.37976074]
[113.87055969 -630.04211426]
[127.60404205 -636.08123779]
[141.59996033 -641.48437500]
[155.82887268 -646.24017334]
[170.26084900 -650.33862305]
[184.86557007 -653.77111816]
[199.61228943 -656.53039551]
[214.47000122 -658.61065674]
[229.40747070 -660.00762939]
[244.39328003 -660.71826172]
[259.39590454 -660.74108887]
[274.38381958 -660.07604980]
[289.32546997 -658.72460938]
[304.18945312 -656.68951416]
[318.94448853 -653.97515869]
[333.55960083 -650.58715820]
[348.00399780 -646.53265381]
[362.24731445 -641.82019043]
[376.25961304 -636.45971680]
[390.01141357 -630.46240234]
[403.47378540 -623.84094238]
[416.61843872 -616.60925293]
[429.41772461 -608.78253174]
[441.84472656 -600.37719727]
[453.87329102 -591.41101074]
[465.47814941 -581.90277100]
[476.63488770 -571.87249756]
[487.32003784 -561.34124756]
[497.51110840 -550.33117676]
[507.18670654 -538.86547852]
[516.32647705 -526.96826172]
[524.91119385 -514.66448975]
[532.92279053 -501.98010254]
[540.34442139 -488.94174194]
[547.16046143 -475.57684326]
[553.35662842 -461.91348267]
[558.91986084 -447.98043823]
[563.83843994 -433.80697632]
[568.10205078 -419.42291260]
[571.70172119 -404.85852051]
[574.62982178 -390.14437866]
[576.88031006 -375.31149292]
[578.44842529 -360.39102173]
[579.33074951 -345.41433716]
[579.52557373 -330.41296387]
[579.03240967 -315.41842651]
[577.85235596 -300.46224976]
[575.98779297 -285.57592773]
[573.44274902 -270.79071045]
[570.22253418 -256.13775635]
[566.33386230 -241.64782715]
[561.78497314 -227.35142517]
[556.58544922 -213.27859497]
[550.74621582 -199.45895386]
[544.27954102 -185.92155457]
[537.19897461 -172.69485474]
[529.51947021 -159.80668640]
[521.25720215 -147.28416443]
[512.42944336 -135.15359497]
[503.05487061 -123.44049835]
[493.15313721 -112.16951752]
[482.74505615 -101.36434937]
[471.85256958 -91.04772186]
[460.49853516 -81.24132538]
[448.70684814 -71.96578217]
[436.50231934 -63.24060059]
[423.91061401 -55.08412933]
[410.95816040 -47.51352692]
[397.67227173 -40.54470825]
[384.08084106 -34.19233322]
[370.21249390 -28.46975899]
[356.09634399 -23.38901901]
[341.76211548 -18.96080017]
[327.23992920 -15.19441319]
[312.56033325 -12.09778023]
[297.75421143 -9.67741394]
[282.85269165 -7.93840313]
[267.88711548 -6.88440609]
[252.88894653 -6.51763868]
[237.88973999 -6.83887291]
[222.92103577 -7.84743261]
[208.01431274 -9.54119682]
[193.20089722 -11.91660404]
[178.51197815 -14.96865749]
[163.97843933 -18.69094086]
[149.63082886 -23.07562256]
[144.59390259 -8.94659328]
[139.55699158 5.18243599]
[134.52006531 19.31146622]
[129.48315430 33.44049454]
[124.44624329 47.56952286]
[119.40932465 61.69855499]
[114.79531860 75.97129059]
[110.60830688 90.37506866]
[113.75460052 103.99829865]
[103.79547882 113.81194305]
[99.60846710 128.21572876]
[95.42145538 142.61950684]
[109.17602539 148.65827942]
[122.02467346 156.44078064]
[133.74754333 165.83383179]
[144.14402771 176.67671204]
[153.03625488 188.78387451]
[160.27204895 201.94815063]
[165.72760010 215.94429016]
[169.30957031 230.53280640]
[170.95663452 245.46405029]
[170.64064026 260.48254395]
[168.36698914 275.33129883]
[164.17457581 289.75622559]
[158.13513184 303.51049805]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 197]
[34 196]
[35 195]
[37 193]
[38 192]
[43 191]
[44 190]
[45 189]
[46 188]
[47 187]
[48 186]
[49 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
