%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[63.01052475 485.21890259]
[52.58515167 496.01190186]
[41.44754028 506.06823730]
[29.64962196 515.34112549]
[17.24640083 523.78723145]
[4.29571009 531.36718750]
[-9.14206886 538.04577637]
[-23.00428200 543.79168701]
[-37.22629929 548.57824707]
[-51.74180603 552.38305664]
[-66.48312378 555.18847656]
[-81.38153076 556.98132324]
[-96.36754608 557.75329590]
[-111.37131500 557.50079346]
[-126.32286835 556.22497559]
[-141.15251160 553.93176270]
[-155.79107666 550.63195801]
[-170.17033386 546.34082031]
[-184.22322083 541.07843018]
[-197.88423157 534.86926270]
[-211.08967590 527.74230957]
[-223.77795410 519.73083496]
[-235.88993835 510.87213135]
[-247.36915588 501.20751953]
[-258.16204834 490.78207397]
[-268.21835327 479.64440918]
[-277.49111938 467.84640503]
[-285.93716431 455.44314575]
[-293.51705933 442.49240112]
[-300.19549561 429.05456543]
[-305.94134521 415.19232178]
[-310.72778320 400.97027588]
[-314.53253174 386.45474243]
[-317.33782959 371.71340942]
[-319.13058472 356.81500244]
[-319.90246582 341.82897949]
[-319.64987183 326.82519531]
[-318.37393188 311.87365723]
[-316.08065796 297.04403687]
[-312.78070068 282.40548706]
[-308.48947144 268.02627563]
[-303.22698975 253.97340393]
[-297.01776123 240.31243896]
[-289.89071655 227.10704041]
[-281.87915039 214.41880798]
[-273.02035522 202.30688477]
[-263.35568237 190.82774353]
[-252.93016052 180.03491211]
[-241.79241943 169.97869873]
[-229.99436951 160.70599365]
[-217.59103394 152.26005554]
[-204.64024353 144.68022156]
[-191.20237732 138.00187683]
[-177.34008789 132.25611877]
[-163.11801147 127.46976471]
[-148.60244751 123.66512299]
[-133.86109924 120.85993195]
[-118.96266937 119.06726837]
[-103.97663879 118.29549408]
[-88.97286987 118.54820251]
[-74.02133179 119.82422638]
[-59.19173050 122.11759949]
[-44.55320358 125.41764832]
[-30.17400742 129.70896912]
[-16.12118340 134.97157288]
[-2.46025538 141.18089294]
[10.74508476 148.30801392]
[23.43326759 156.31967163]
[35.54513168 165.17854309]
[37.82330322 150.45918274]
[52.63024139 144.88557434]
[62.29104996 133.41087341]
[71.95185852 121.93617249]
[81.61267090 110.46147156]
[91.27348328 98.98677063]
[91.27118683 95.93890381]
[92.37783051 92.82283783]
[94.62081909 90.04930878]
[97.87541962 88.03340912]
[101.86701965 87.13893890]
[112.19368744 76.25960541]
[111.95652771 60.68457413]
[122.58422089 49.79848862]
[137.43408203 49.66837692]
[147.76075745 38.78904343]
[158.08743286 27.90970993]
[161.97167969 9.90987301]
[178.98016357 5.58803940]
[189.14370728 -5.44383812]
[199.30725098 -16.47571564]
[209.47080994 -27.50759315]
[199.26483154 -38.51087570]
[189.95364380 -50.28099442]
[181.59461975 -62.74538422]
[174.23933411 -75.82719421]
[167.93310547 -89.44577026]
[162.71482849 -103.51715088]
[158.61666870 -117.95457458]
[155.66390991 -132.66902161]
[153.87472534 -147.56979370]
[153.26017761 -162.56501770]
[153.82403564 -177.56221008]
[155.56283569 -192.46894836]
[158.46585083 -207.19329834]
[162.51518250 -221.64450073]
[167.68586731 -235.73342896]
[173.94602966 -249.37324524]
[181.25706482 -262.47985840]
[189.57389832 -274.97241211]
[198.84524536 -286.77395630]
[209.01396179 -297.81167603]
[220.01734924 -308.01751709]
[231.78756714 -317.32858276]
[244.25204468 -325.68746948]
[257.33392334 -333.04263306]
[270.95257568 -339.34872437]
[285.02398682 -344.56686401]
[299.46145630 -348.66485596]
[314.17596436 -351.61749268]
[329.07675171 -353.40652466]
[344.07196045 -354.02090454]
[359.06915283 -353.45690918]
[373.97589111 -351.71795654]
[388.70019531 -348.81478882]
[403.15136719 -344.76528931]
[417.24023438 -339.59448242]
[430.87997437 -333.33416748]
[443.98651123 -326.02301025]
[456.47900391 -317.70605469]
[468.28042603 -308.43457031]
[479.31805420 -298.26574707]
[489.52380371 -287.26223755]
[498.83474731 -275.49194336]
[507.19351196 -263.02737427]
[514.54852295 -249.94541931]
[520.85449219 -236.32670593]
[526.07244873 -222.25523376]
[530.17034912 -207.81771851]
[533.12280273 -193.10319519]
[534.91168213 -178.20239258]
[535.52593994 -163.20716858]
[534.96173096 -148.20997620]
[533.22265625 -133.30328369]
[530.31933594 -118.57898712]
[526.26971436 -104.12787628]
[521.09875488 -90.03904724]
[514.83831787 -76.39936066]
[507.52697754 -63.29290771]
[499.20989990 -50.80050659]
[489.93829346 -38.99916840]
[479.76934814 -27.96165848]
[468.76574707 -17.75602531]
[456.99536133 -8.44519043]
[444.53070068 -0.08655909]
[431.44866943 7.26833391]
[417.82989502 13.57414246]
[403.75836182 18.79198837]
[389.32083130 22.88970375]
[374.60626221 25.84202003]
[359.70544434 27.63073921]
[344.71020508 28.24483109]
[329.71304321 27.68050957]
[314.80633545 25.94125557]
[300.08209229 23.03779030]
[285.63101196 18.98801422]
[271.54223633 13.81689930]
[257.90261841 7.55632448]
[244.79624939 0.24489002]
[232.30392456 -8.07232666]
[220.50268555 -17.34404564]
[210.33914185 -6.31216812]
[200.17558289 4.71970892]
[190.01203918 15.75158596]
[190.19372559 27.84677315]
[181.81658936 37.12079239]
[168.96676636 38.23637772]
[158.64009094 49.11571121]
[148.31343079 59.99504852]
[148.95698547 74.83153534]
[138.63926697 86.01183319]
[123.07302094 86.58627319]
[112.74635315 97.46560669]
[102.74818420 108.64758301]
[93.08737183 120.12228394]
[83.42655945 131.59698486]
[73.76574707 143.07168579]
[64.10494232 154.54638672]
[61.13576508 170.08647156]
[47.01983261 174.83934021]
[57.81287766 185.26464844]
[67.86931610 196.40219116]
[77.14225006 208.20004272]
[85.58844757 220.60321045]
[93.16852570 233.55384827]
[99.84715271 246.99159241]
[105.59318542 260.85375977]
[110.37982178 275.07574463]
[114.18476105 289.59121704]
[116.99024963 304.33251953]
[118.78321075 319.23092651]
[119.55529022 334.21691895]
[119.30287933 349.22070312]
[118.02716064 364.17227173]
[115.73407745 379.00192261]
[112.43432617 393.64050293]
[108.14329529 408.01977539]
[102.88098145 422.07272339]
[96.67192841 435.73376465]
[89.54508209 448.93927002]
[81.53366852 461.62759399]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 189]
[71 187]
[72 186]
[73 185]
[74 184]
[75 183]
[80 182]
[81 181]
[84 178]
[85 177]
[86 176]
[88 173]
[89 172]
[90 171]
[91 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
