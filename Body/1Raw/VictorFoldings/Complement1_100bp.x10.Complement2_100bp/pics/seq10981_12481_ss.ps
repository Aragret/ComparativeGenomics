%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAUxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[68.93953705 475.01831055]
[67.62253571 460.05606079]
[68.19124603 445.04672241]
[70.63668060 430.22705078]
[74.92028809 415.83071899]
[80.97449493 402.08483887]
[88.70382690 389.20614624]
[97.98638153 377.39776611]
[108.67575073 366.84597778]
[120.60335541 357.71713257]
[133.58108521 350.15527344]
[127.71212006 336.35110474]
[121.84315491 322.54690552]
[115.97419739 308.74273682]
[114.58769226 323.67852783]
[108.48677826 337.38177490]
[98.31529999 348.40634155]
[85.14668274 355.58877563]
[70.37063599 358.17111206]
[55.54651260 355.88082886]
[42.23874283 348.95959473]
[31.85172081 338.13787842]
[25.48161507 324.55767822]
[23.80068016 309.65216064]
[26.98630905 294.99435425]
[34.70231247 282.13107300]
[46.13440323 272.41989136]
[60.07612991 266.88562012]
[75.05618286 266.11227417]
[89.49368286 270.18148804]
[101.86500549 278.66384888]
[110.86466217 290.66433716]
[108.63954926 275.83029175]
[106.41442871 260.99624634]
[104.18931580 246.16221619]
[101.96419525 231.32817078]
[99.73907471 216.49412537]
[91.64819336 229.12493896]
[77.72073364 234.69503784]
[63.15130234 231.12689209]
[53.37393188 219.75134277]
[52.03534317 204.81118774]
[59.63479614 191.87873840]
[73.33788300 185.77746582]
[88.03368378 188.78302002]
[98.24153900 199.77542114]
[97.79492950 184.78207397]
[97.34832764 169.78872681]
[96.56700134 154.80908203]
[95.45135498 139.85063171]
[94.33570862 124.89218140]
[93.22005463 109.93373108]
[91.88182068 94.99354553]
[90.32130432 80.07493591]
[81.19028473 67.15460205]
[87.56152344 53.69144058]
[86.00099945 38.77283859]
[84.44047546 23.85423279]
[82.87995148 8.93562794]
[79.81245422 4.71217442]
[78.77543640 0.18692456]
[79.54383087 -3.81615114]
[81.59817505 -6.68181324]
[80.70536041 -21.65521812]
[79.81254578 -36.62862396]
[78.91973114 -51.60203171]
[77.80407715 -66.56048584]
[76.46584320 -81.50067139]
[75.12760925 -96.44085693]
[73.78937531 -111.38104248]
[64.85173798 -124.43589020]
[71.42271423 -137.80270386]
[70.08448029 -152.74288940]
[55.07233047 -152.97315979]
[40.16649246 -154.77140808]
[25.53027916 -158.11790466]
[11.32405949 -162.97599792]
[-2.29651809 -169.29244995]
[-15.18221951 -176.99804688]
[-27.19186211 -186.00839233]
[-38.19385910 -196.22473145]
[-48.06767273 -207.53515625]
[-56.70511246 -219.81571960]
[-64.01155090 -232.93188477]
[-69.90692139 -246.73992920]
[-74.32664490 -261.08859253]
[-77.22229004 -275.82061768]
[-78.56212616 -290.77462769]
[-78.33148193 -305.78677368]
[-76.53287506 -320.69256592]
[-73.18602753 -335.32870483]
[-68.32759094 -349.53482056]
[-62.01080704 -363.15524292]
[-54.30488586 -376.04074097]
[-45.29425812 -388.05017090]
[-35.07764435 -399.05194092]
[-23.76698494 -408.92547607]
[-11.48620892 -417.56259155]
[1.63013148 -424.86871338]
[15.43832588 -430.76376343]
[29.78708458 -435.18313599]
[44.51919174 -438.07843018]
[59.47323990 -439.41790771]
[74.48538208 -439.18688965]
[89.39112854 -437.38790894]
[104.02717590 -434.04071045]
[118.23316193 -429.18194580]
[131.85343933 -422.86480713]
[144.73875427 -415.15856934]
[156.74797058 -406.14767456]
[167.74946594 -395.93078613]
[177.62272644 -384.61987305]
[186.25958252 -372.33889771]
[193.56536865 -359.22238159]
[199.46008301 -345.41403198]
[203.87910461 -331.06518555]
[206.77403259 -316.33300781]
[208.11314392 -301.37890625]
[207.88175964 -286.36679077]
[206.08244324 -271.46109009]
[202.73487854 -256.82510376]
[197.87574768 -242.61924744]
[191.55830383 -228.99913025]
[183.85176086 -216.11398315]
[174.84054565 -204.10499573]
[164.62339783 -193.10374451]
[153.31225586 -183.23075867]
[141.03106689 -174.59420776]
[127.91436768 -167.28872681]
[114.10588837 -161.39436340]
[99.75691223 -156.97569275]
[85.02466583 -154.08111572]
[86.36289978 -139.14093018]
[95.20481873 -127.15470123]
[88.72956085 -112.71927643]
[90.06779480 -97.77909088]
[91.40602875 -82.83890533]
[92.74426270 -67.89871979]
[95.76969910 -64.20334625]
[96.50583649 -58.56817245]
[93.89313507 -52.49484634]
[94.78594971 -37.52144241]
[95.67876434 -22.54803467]
[96.57157898 -7.57462883]
[97.79855347 7.37510443]
[99.35907745 22.29370880]
[100.91960144 37.21231461]
[102.48012543 52.13092041]
[111.49951935 63.98418045]
[105.23990631 78.51441956]
[106.80043030 93.43302155]
[110.02164459 97.57279205]
[110.69412231 103.22267151]
[108.17851257 108.81807709]
[109.29415894 123.77653503]
[110.40980530 138.73498535]
[111.52545929 153.69343567]
[114.46584320 158.00634766]
[115.36766815 162.56047058]
[114.48043060 166.53889465]
[112.34167480 169.34211731]
[112.78828430 184.33546448]
[113.23488617 199.32882690]
[114.57312012 214.26901245]
[116.79824066 229.10304260]
[119.02335358 243.93708801]
[121.24847412 258.77114868]
[123.47358704 273.60519409]
[125.69870758 288.43920898]
[129.77838135 302.87377930]
[135.64733887 316.67794800]
[141.51629639 330.48211670]
[147.38525391 344.28631592]
[161.83515930 340.18710327]
[176.68489075 337.93130493]
[191.70027161 337.55453491]
[206.64445496 339.06271362]
[221.28176880 342.43203735]
[235.38134766 347.60937500]
[248.72084045 354.51309204]
[261.08984375 363.03427124]
[272.29330444 373.03857422]
[282.15451050 384.36819458]
[290.51794434 396.84442139]
[297.25167847 410.27050781]
[302.24954224 424.43469238]
[305.43270874 439.11361694]
[306.75094604 454.07574463]
[306.18350220 469.08511353]
[303.73931885 483.90502930]
[299.45693970 498.30169678]
[293.40386963 512.04809570]
[285.67562866 524.92742920]
[276.39407349 536.73657227]
[265.70559692 547.28930664]
[253.77874756 556.41912842]
[240.80166626 563.98211670]
[226.97900391 569.85888672]
[212.52874756 573.95690918]
[197.67881775 576.21142578]
[182.66342163 576.58697510]
[167.71936035 575.07751465]
[153.08233643 571.70697021]
[138.98318481 566.52844238]
[125.64427948 559.62359619]
[113.27598572 551.10137939]
[102.07337952 541.09613037]
[92.21312714 529.76568604]
[83.85075378 517.28875732]
[77.11813354 503.86212158]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 173]
[12 172]
[13 171]
[14 170]
[32 169]
[33 168]
[34 167]
[35 166]
[36 165]
[37 164]
[46 163]
[47 162]
[48 161]
[49 157]
[50 156]
[51 155]
[52 154]
[53 151]
[54 150]
[56 148]
[57 147]
[58 146]
[59 145]
[63 144]
[64 143]
[65 142]
[66 141]
[67 138]
[68 137]
[69 136]
[70 135]
[72 133]
[73 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
