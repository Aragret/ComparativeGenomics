%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[191.45883179 520.89196777]
[190.07925415 505.94290161]
[190.19499207 490.93072510]
[191.80490112 476.00466919]
[194.89299011 461.31311035]
[199.42855835 447.00201416]
[205.36653137 433.21365356]
[212.64788818 420.08505249]
[221.20027161 407.74667358]
[230.93867493 396.32116699]
[241.76631165 385.92208862]
[253.57557678 376.65280151]
[245.53439331 363.99026489]
[237.49322510 351.32772827]
[222.94567871 348.34365845]
[214.61041260 335.61660767]
[217.83901978 320.37805176]
[209.79785156 307.71551514]
[201.75668335 295.05300903]
[193.71549988 282.39047241]
[191.01214600 281.64886475]
[188.43965149 279.79171753]
[186.42440796 276.86355591]
[185.36878967 273.06222534]
[185.59873962 268.72619629]
[178.32550049 255.60749817]
[171.05227661 242.48881531]
[163.77905273 229.37011719]
[156.40835571 216.30593872]
[148.94061279 203.29698181]
[137.34988403 199.83555603]
[131.02191162 189.05870056]
[133.81938171 176.46755981]
[126.54615021 163.34886169]
[119.27291870 150.23016357]
[111.99969482 137.11148071]
[104.72646332 123.99278259]
[97.45323181 110.87408447]
[90.08254242 97.80989838]
[77.85886383 93.69354248]
[71.90677643 82.70461273]
[74.93753815 70.99388885]
[75.56313324 85.98084259]
[72.34038544 100.63054657]
[65.48305511 113.97135162]
[55.44596481 125.11840057]
[42.89483643 133.33236694]
[28.66213608 138.06842041]
[13.69187164 139.01245117]
[-1.02303231 136.10185242]
[-14.50658989 129.52966309]
[-25.86448479 119.73179626]
[-34.34339142 107.35810852]
[-39.38092804 93.22930145]
[-40.64297867 78.28248596]
[-38.04583359 63.50903702]
[-31.76175499 49.88882065]
[-22.20754051 38.32521439]
[-10.01688576 29.58519554]
[4.00164461 24.24845314]
[18.91825294 22.66895866]
[33.74357224 24.95147133]
[47.49429703 30.94460297]
[59.25838470 40.25084686]
[68.25809479 52.25742722]
[65.59230042 37.49620819]
[55.52560425 25.29079056]
[60.87784958 11.39105225]
[58.21205521 -3.37016511]
[55.54626083 -18.13138199]
[52.88046265 -32.89260101]
[49.77635574 -47.56790161]
[46.23668289 -62.14427567]
[42.69701004 -76.72064972]
[39.15733719 -91.29702759]
[25.94328880 -99.54486084]
[22.56120491 -114.37779999]
[30.50568390 -126.92454529]
[26.96601105 -141.50091553]
[23.42633820 -156.07730103]
[8.41805077 -155.11686707]
[-6.52898312 -156.77737427]
[-20.96054077 -161.00836182]
[-34.43806076 -167.68125916]
[-46.55198288 -176.59327698]
[-56.93417358 -187.47358704]
[-65.26912689 -199.99156189]
[-71.30355835 -213.76678467]
[-74.85408783 -228.38064575]
[-75.81282043 -243.38903809]
[-74.15061951 -258.33587646]
[-69.91799164 -272.76696777]
[-63.24356842 -286.24371338]
[-54.33017731 -298.35662842]
[-43.44868469 -308.73757935]
[-30.92976761 -317.07113647]
[-17.15386009 -323.10400391]
[-2.53959942 -326.65286255]
[12.46890545 -327.60989380]
[27.41556168 -325.94601440]
[41.84616089 -321.71173096]
[55.32216644 -315.03579712]
[67.43406677 -306.12103271]
[77.81378937 -295.23834229]
[86.14590454 -282.71847534]
[92.17721558 -268.94189453]
[95.72442627 -254.32723999]
[96.67975616 -239.31861877]
[95.01416016 -224.37214661]
[90.77825928 -209.94203186]
[84.10078430 -196.46678162]
[75.18463898 -184.35589600]
[64.30079651 -173.97741699]
[51.77998734 -165.64671326]
[38.00271225 -159.61697388]
[41.54238510 -145.04058838]
[45.08205795 -130.46421814]
[57.89603424 -122.95837402]
[61.69340897 -108.22628784]
[53.73371124 -94.83670044]
[57.27338409 -80.26032257]
[60.81305695 -65.68395233]
[64.35272980 -51.10757446]
[66.67375183 -49.53563309]
[68.51195526 -46.94959259]
[69.47797394 -43.52874374]
[69.25444794 -39.58988953]
[67.64167786 -35.55839539]
[70.30747986 -20.79717827]
[72.97327423 -6.03596067]
[75.63906860 8.72525692]
[85.51508331 19.87485504]
[80.35351562 34.83041382]
[83.01931000 49.59163284]
[88.05622864 63.72066116]
[103.56451416 71.93407440]
[103.09149170 90.34216309]
[109.51667786 95.20935822]
[110.57192993 103.60086060]
[117.84515381 116.71955109]
[125.11838531 129.83824158]
[132.39161682 142.95693970]
[139.66484070 156.07563782]
[146.93807983 169.19432068]
[162.93869019 178.30815125]
[161.94956970 195.82923889]
[169.41731262 208.83819580]
[176.40370178 214.72276306]
[176.89773560 222.09689331]
[184.17097473 235.21557617]
[191.44419861 248.33427429]
[198.71743774 261.45297241]
[206.37802124 274.34930420]
[214.41920471 287.01181030]
[222.46037292 299.67434692]
[230.50154114 312.33688354]
[245.66661072 315.89477539]
[253.64111328 328.85092163]
[250.15574646 343.28656006]
[258.19692993 355.94909668]
[266.23809814 368.61160278]
[279.64932251 361.86495972]
[293.66567993 356.48718262]
[308.14785767 352.53173828]
[322.95187378 350.03790283]
[337.93066406 349.03051758]
[352.93530273 349.51953125]
[367.81671143 351.50015259]
[382.42694092 354.95260620]
[396.62081909 359.84268188]
[410.25723267 366.12170410]
[423.20071411 373.72729492]
[435.32260132 382.58386230]
[446.50238037 392.60339355]
[456.62899780 403.68627930]
[465.60174561 415.72241211]
[473.33151245 428.59210205]
[479.74142456 442.16751099]
[484.76776123 456.31369019]
[488.36062622 470.89004517]
[490.48428345 485.75170898]
[491.11764526 500.75094604]
[490.25436401 515.73870850]
[487.90307617 530.56604004]
[484.08709717 545.08563232]
[478.84439087 559.15301514]
[472.22708130 572.62854004]
[464.30087280 585.37823486]
[455.14459229 597.27532959]
[444.84924316 608.20166016]
[433.51712036 618.04852295]
[421.26086426 626.71820068]
[408.20227051 634.12438965]
[394.47116089 640.19360352]
[380.20397949 644.86541748]
[365.54251099 648.09344482]
[350.63250732 649.84564209]
[335.62210083 650.10449219]
[320.66055298 648.86755371]
[305.89648438 646.14697266]
[291.47668457 641.96990967]
[277.54446411 636.37786865]
[264.23825073 629.42633057]
[251.69032288 621.18450928]
[240.02537537 611.73419189]
[229.35935974 601.16943359]
[219.79827881 589.59509277]
[211.43714905 577.12634277]
[204.35908508 563.88702393]
[198.63441467 550.00872803]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 161]
[13 160]
[14 159]
[17 156]
[18 155]
[19 154]
[20 153]
[25 152]
[26 151]
[27 150]
[28 149]
[29 147]
[30 146]
[33 144]
[34 143]
[35 142]
[36 141]
[37 140]
[38 139]
[39 137]
[42 135]
[65 134]
[66 133]
[68 131]
[69 130]
[70 129]
[71 128]
[72 123]
[73 122]
[74 121]
[75 120]
[78 117]
[79 116]
[80 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
