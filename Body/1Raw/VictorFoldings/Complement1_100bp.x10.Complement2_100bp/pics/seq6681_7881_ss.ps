%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxUUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUG\
) } def
/len { sequence length } bind def

/coor [
[49.51063156 825.38415527]
[34.54851913 826.59240723]
[19.53875160 826.41497803]
[4.60938787 824.85327148]
[-10.11219597 821.92077637]
[-24.50039864 817.64245605]
[-38.43246078 812.05474854]
[-51.78952026 805.20538330]
[-64.45761108 797.15283203]
[-76.32865906 787.96569824]
[-87.30136871 777.72247314]
[-97.28214264 766.51043701]
[-106.18580627 754.42535400]
[-113.93641663 741.57031250]
[-120.46782684 728.05493164]
[-125.72431946 713.99456787]
[-129.66104126 699.50915527]
[-132.24443054 684.72235107]
[-133.45240784 669.76019287]
[-133.27470398 654.75042725]
[-131.71279907 639.82110596]
[-128.78004456 625.09954834]
[-124.50145721 610.71142578]
[-118.91353607 596.77941895]
[-112.06395721 583.42248535]
[-104.01116180 570.75457764]
[-94.82386017 558.88366699]
[-84.58042908 547.91113281]
[-73.36826324 537.93054199]
[-61.28302765 529.02703857]
[-48.42782974 521.27667236]
[-34.91234970 514.74548340]
[-20.85189438 509.48922729]
[-6.36642933 505.55273438]
[8.42045879 502.96960449]
[23.38261223 501.76187134]
[38.39237595 501.93981934]
[39.95289612 487.02124023]
[41.51342010 472.10263062]
[43.07394409 457.18402100]
[44.63446808 442.26541138]
[33.92285156 434.29650879]
[28.50415230 421.97653198]
[29.89164543 408.48043823]
[37.82930374 397.34436035]
[50.33090591 391.53912354]
[52.11336899 376.64541626]
[53.89583588 361.75170898]
[55.67830276 346.85797119]
[53.48308182 342.61651611]
[53.92902374 336.95098877]
[57.74198914 331.54980469]
[59.96710587 316.71575928]
[62.19222260 301.88171387]
[47.98706055 295.44290161]
[36.15779877 285.25628662]
[27.66645622 272.13955688]
[23.20662689 257.14901733]
[23.14683151 241.49473572]
[27.50008392 226.44267273]
[35.92217255 213.21244812]
[47.73886108 202.87841797]
[61.99987411 196.28250122]
[77.55529022 193.96554565]
[79.55930328 179.10002136]
[77.42747498 174.82633972]
[77.95771790 169.16807556]
[81.85067749 163.82426453]
[76.29207611 150.00575256]
[86.17593384 137.65180969]
[88.62166595 122.85253906]
[91.06739044 108.05326843]
[93.29251099 93.21922302]
[95.29652405 78.35369110]
[97.30053711 63.48816681]
[91.47631073 48.77799988]
[100.84462738 37.19853210]
[102.84864044 22.33300591]
[104.74193573 7.45297050]
[106.52439880 -7.44074678]
[108.30686188 -22.33446312]
[110.08933258 -37.22817993]
[111.64985657 -52.14678574]
[112.98809052 -67.08696747]
[104.85486603 -83.60763550]
[115.50258636 -97.55729675]
[116.61823273 -112.51575470]
[117.73387909 -127.47420502]
[115.21189117 -133.58575439]
[116.03184509 -139.20933533]
[119.11196136 -142.85926819]
[120.67248535 -157.77786255]
[122.23300934 -172.69647217]
[123.79353333 -187.61508179]
[125.35405731 -202.53367615]
[111.06050873 -207.27801514]
[98.12126923 -214.98451233]
[87.14151001 -225.29270935]
[78.63478851 -237.72048950]
[72.99897003 -251.68658447]
[70.49766541 -266.53775024]
[71.24784851 -281.57940674]
[75.21444702 -296.10800171]
[82.21192169 -309.44403076]
[91.91300201 -320.96371460]
[103.86393738 -330.12826538]
[117.50576782 -336.50906372]
[132.20043945 -339.80764771]
[147.26066589 -339.86972046]
[161.98204041 -336.69241333]
[175.67601013 -330.42431641]
[187.70210266 -321.35858154]
[197.49781799 -309.91928101]
[204.60501099 -296.64141846]
[208.69125366 -282.14599609]
[209.56542969 -267.11105347]
[207.18664551 -252.23974609]
[201.66616821 -238.22767639]
[193.26219177 -225.73017883]
[182.36779785 -215.33180237]
[169.49253845 -207.51889038]
[155.23858643 -202.65687561]
[140.27265930 -200.97315979]
[138.71214294 -186.05455017]
[137.15161133 -171.13595581]
[135.59109497 -156.21734619]
[134.03056335 -141.29873657]
[132.69233704 -126.35855865]
[131.57669067 -111.40010071]
[130.46102905 -96.44165039]
[138.11445618 -87.07406616]
[137.30741882 -74.60279846]
[127.92827606 -65.74873352]
[126.59004211 -50.80855179]
[128.91056824 -46.63432312]
[128.63351440 -40.95803452]
[124.98304749 -35.44571686]
[123.20058441 -20.55199814]
[121.41811371 -5.65828085]
[119.63565063 9.23543644]
[121.96203613 16.25040054]
[117.71417236 24.33701897]
[115.71015167 39.20254898]
[121.67771912 52.84943390]
[112.16606140 65.49217987]
[110.16204834 80.35770416]
[108.15803528 95.22323608]
[110.31138611 100.00623322]
[109.63162231 105.65523529]
[105.86666107 110.49899292]
[103.42093658 125.29826355]
[100.97520447 140.09753418]
[106.35887146 154.97459412]
[96.64994812 166.26998901]
[94.42482758 181.10403442]
[92.42081451 195.96955872]
[105.71068573 201.65461731]
[117.06393433 210.58172607]
[125.70887756 222.13612366]
[131.05999756 235.52473450]
[132.75756836 249.83059692]
[130.69187927 264.07571411]
[125.01026917 277.28781128]
[116.10663605 288.56689453]
[104.59415436 297.14627075]
[91.26302338 302.44497681]
[77.02626801 304.10684204]
[74.80114746 318.94088745]
[72.57603455 333.77490234]
[70.57202148 348.64044189]
[68.78955078 363.53414917]
[67.00708771 378.42788696]
[65.22462463 393.32159424]
[77.78553009 404.64941406]
[81.08668518 421.06903076]
[74.02130127 436.07043457]
[59.55307007 443.82592773]
[57.99254990 458.74453735]
[56.43202591 473.66314697]
[54.87150192 488.58175659]
[53.31097794 503.50036621]
[68.03266144 506.43237305]
[82.42100525 510.71023560]
[96.35325623 516.29748535]
[109.71054077 523.14636230]
[122.37889862 531.19854736]
[134.25025940 540.38525391]
[145.22331238 550.62811279]
[155.20445251 561.83978271]
[164.10852051 573.92456055]
[171.85955811 586.77941895]
[178.39141846 600.29455566]
[183.64837646 614.35473633]
[187.58558655 628.84002686]
[190.16946411 643.62677002]
[191.37794495 658.58886719]
[191.20072937 673.59863281]
[189.63932800 688.52801514]
[186.70706177 703.24963379]
[182.42895508 717.63793945]
[176.84150696 731.57006836]
[169.99237061 744.92724609]
[161.94000244 757.59552002]
[152.75308228 769.46667480]
[142.51002502 780.43957520]
[131.29818726 790.42053223]
[119.21324921 799.32440186]
[106.35831451 807.07519531]
[92.84304810 813.60687256]
[78.78276825 818.86358643]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 181]
[38 180]
[39 179]
[40 178]
[41 177]
[46 173]
[47 172]
[48 171]
[49 170]
[52 169]
[53 168]
[54 167]
[64 156]
[65 155]
[68 154]
[70 152]
[71 151]
[72 150]
[73 147]
[74 146]
[75 145]
[77 143]
[78 142]
[79 140]
[80 139]
[81 138]
[82 137]
[83 134]
[84 133]
[86 130]
[87 129]
[88 128]
[91 127]
[92 126]
[93 125]
[94 124]
[95 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
