%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[181.45138550 385.63940430]
[180.88708496 370.64086914]
[181.59678650 355.64852905]
[183.57537842 340.77041626]
[186.80860901 326.11364746]
[191.27319336 311.78393555]
[196.93693542 297.88442993]
[203.75904846 284.51535034]
[211.69036865 271.77297974]
[220.67375183 259.74914551]
[230.64447021 248.53045654]
[220.31779480 237.65112305]
[209.99113464 226.77178955]
[195.61734009 222.86755371]
[191.72845459 207.53173828]
[181.40179443 196.65240479]
[171.07511902 185.77305603]
[160.74845886 174.89372253]
[150.42178345 164.01438904]
[140.09510803 153.13505554]
[126.28502655 161.15594482]
[110.96192932 165.65660095]
[95.00784302 166.37794495]
[79.34111023 163.27845764]
[64.86354065 156.53656006]
[52.40848923 146.54031372]
[42.69288254 133.86512756]
[36.27597427 119.24061584]
[33.52712631 103.50857544]
[34.60457230 87.57457733]
[39.44629288 72.35581207]
[47.77358246 58.72828674]
[37.12757492 48.16123962]
[26.48156738 37.59418869]
[8.57296085 33.30894089]
[4.63203430 16.20818138]
[-6.17012215 5.80080748]
[-16.97227859 -4.60656548]
[-27.77443504 -15.01393890]
[-38.57659149 -25.42131233]
[-49.37874603 -35.82868576]
[-60.18090439 -46.23605728]
[-70.98306274 -56.64343262]
[-82.29930115 -46.78279877]
[-94.43190002 -37.94597626]
[-107.28851318 -30.20021439]
[-120.77129364 -23.60446548]
[-134.77763367 -18.20892906]
[-149.20092773 -14.05466843]
[-163.93141174 -11.17330074]
[-178.85696411 -9.58675480]
[-193.86401367 -9.30710506]
[-208.83831787 -10.33648205]
[-223.66590881 -12.66704845]
[-238.23396301 -16.28107071]
[-252.43159485 -21.15103912]
[-266.15075684 -27.23989296]
[-279.28701782 -34.50128937]
[-291.74041748 -42.87996292]
[-303.41616821 -52.31215286]
[-314.22543335 -62.72606277]
[-324.08590698 -74.04244232]
[-332.92254639 -86.17516327]
[-340.66812134 -99.03188324]
[-347.26370239 -112.51476288]
[-352.65902710 -126.52117920]
[-356.81307983 -140.94453430]
[-359.69424438 -155.67504883]
[-361.28057861 -170.60063171]
[-361.56002808 -185.60768127]
[-360.53042603 -200.58195496]
[-358.19967651 -215.40953064]
[-354.58544922 -229.97753906]
[-349.71527100 -244.17509460]
[-343.62622070 -257.89416504]
[-336.36465454 -271.03033447]
[-327.98577881 -283.48361206]
[-318.55343628 -295.15924072]
[-308.13937378 -305.96835327]
[-296.82287598 -315.82864380]
[-284.69000244 -324.66513062]
[-271.83319092 -332.41052246]
[-258.35021973 -339.00592041]
[-244.34371948 -344.40106201]
[-229.92031860 -348.55490112]
[-215.18974304 -351.43585205]
[-200.26414490 -353.02200317]
[-185.25711060 -353.30120850]
[-170.28283691 -352.27142334]
[-155.45529175 -349.94042969]
[-140.88734436 -346.32601929]
[-126.68984222 -341.45562744]
[-112.97085571 -335.36639404]
[-99.83479309 -328.10464478]
[-87.38162994 -319.72561646]
[-75.70614624 -310.29309082]
[-64.89718628 -299.87887573]
[-55.03703308 -288.56222534]
[-46.20071793 -276.42926025]
[-38.45549774 -263.57232666]
[-31.86031723 -250.08926392]
[-26.46537018 -236.08268738]
[-22.31171608 -221.65922546]
[-19.43096733 -206.92861938]
[-17.84504890 -192.00299072]
[-17.56603241 -176.99594116]
[-18.59603882 -162.02168274]
[-20.92722893 -147.19418335]
[-24.54186249 -132.62628174]
[-29.41242981 -118.42884827]
[-35.50186157 -104.70995331]
[-42.76380920 -91.57398987]
[-51.14300919 -79.12094116]
[-60.57568741 -67.44558716]
[-49.77352905 -57.03821564]
[-38.97137451 -46.63084030]
[-28.16921806 -36.22346878]
[-17.36706161 -25.81609535]
[-6.56490517 -15.40872192]
[4.23725128 -5.00134850]
[15.03940773 5.40602446]
[27.13563538 5.49448919]
[36.22026443 14.07663822]
[37.04861450 26.94818115]
[47.69462204 37.51522827]
[58.34063339 48.08227539]
[70.10218048 40.52669907]
[83.18233490 35.59410858]
[97.00420380 33.50204468]
[110.95820618 34.34277725]
[124.42890167 38.07923126]
[136.82220459 44.54661179]
[147.59150696 53.45968246]
[156.26185608 64.42535400]
[162.45086670 76.95998383]
[165.88555908 90.51077271]
[166.41447449 104.48006439]
[164.01426697 118.25176239]
[158.79080200 131.21850586]
[150.97444153 142.80839539]
[161.30111694 153.68772888]
[171.62779236 164.56706238]
[181.95445251 175.44639587]
[192.28112793 186.32572937]
[202.60778809 197.20506287]
[217.72023010 201.88746643]
[220.87046814 216.44512939]
[231.19712830 227.32446289]
[241.52380371 238.20379639]
[253.24659729 228.83096313]
[265.72204590 220.48608398]
[278.86022949 213.22924805]
[292.56652832 207.11277771]
[306.74218750 202.18070984]
[321.28500366 198.46861267]
[336.09027100 196.00320435]
[351.05126953 194.80227661]
[366.06021118 194.87446594]
[381.00897217 196.21923828]
[395.78982544 198.82693481]
[410.29629517 202.67874146]
[424.42382812 207.74691772]
[438.07067871 213.99494934]
[451.13845825 221.37780762]
[463.53305054 229.84231567]
[475.16516113 239.32746887]
[485.95095825 249.76492310]
[495.81271362 261.07949829]
[504.67941284 273.18963623]
[512.48712158 286.00811768]
[519.17962646 299.44253540]
[524.70874023 313.39614868]
[529.03454590 327.76840210]
[532.12585449 342.45571899]
[533.96051025 357.35229492]
[534.52520752 372.35079956]
[533.81585693 387.34313965]
[531.83764648 402.22134399]
[528.60479736 416.87817383]
[524.14062500 431.20800781]
[518.47723389 445.10763550]
[511.65545654 458.47692871]
[503.72445679 471.21948242]
[494.74139404 483.24356079]
[484.77096558 494.46249390]
[473.88500977 504.79544067]
[462.16195679 514.16796875]
[449.68630981 522.51251221]
[436.54791260 529.76904297]
[422.84146118 535.88513184]
[408.66571045 540.81683350]
[394.12277222 544.52856445]
[379.31744385 546.99359131]
[364.35641479 548.19415283]
[349.34747314 548.12158203]
[334.39874268 546.77636719]
[319.61795044 544.16833496]
[305.11157227 540.31616211]
[290.98416138 535.24755859]
[277.33749390 528.99920654]
[264.26989746 521.61602783]
[251.87551880 513.15118408]
[240.24366760 503.66574097]
[229.45814514 493.22799683]
[219.59666443 481.91317749]
[210.73028564 469.80279541]
[202.92289734 456.98413086]
[196.23072815 443.54953003]
[190.70202637 429.59576416]
[186.37660217 415.22341919]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 149]
[12 148]
[13 147]
[15 145]
[16 144]
[17 143]
[18 142]
[19 141]
[20 140]
[32 126]
[33 125]
[34 124]
[36 121]
[37 120]
[38 119]
[39 118]
[40 117]
[41 116]
[42 115]
[43 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
