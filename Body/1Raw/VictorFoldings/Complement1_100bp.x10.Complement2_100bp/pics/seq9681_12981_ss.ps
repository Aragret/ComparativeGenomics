%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[62.57799149 614.88690186]
[48.51824570 620.17639160]
[33.88835526 623.58538818]
[18.93865585 625.05560303]
[3.92495489 624.56182861]
[-10.89584160 622.11254883]
[-25.27013206 617.74963379]
[-38.95195007 611.54779053]
[-51.70718765 603.61315918]
[-63.31758118 594.08142090]
[-73.58446503 583.11572266]
[-82.33215332 570.90374756]
[-89.41096497 557.65435791]
[-94.69977570 543.59436035]
[-98.10807800 528.96435547]
[-99.57756805 514.01458740]
[-99.08308411 499.00088501]
[-96.63308716 484.18020630]
[-92.26951599 469.80612183]
[-86.06702423 456.12460327]
[-78.13174438 443.36975098]
[-68.59947205 431.75979614]
[-57.63330078 421.49343872]
[-45.42088318 412.74633789]
[-32.17119217 405.66815186]
[-18.11094284 400.38000488]
[-3.48072696 396.97241211]
[11.46911335 395.50363159]
[26.48276711 395.99880981]
[28.92849350 381.19955444]
[31.37422180 366.40026855]
[33.81995010 351.60101318]
[36.26567841 336.80172729]
[38.71140289 322.00247192]
[28.69197845 317.45510864]
[19.93195343 310.78079224]
[12.87569332 302.31256104]
[7.88237047 292.47457886]
[5.20768118 281.76092529]
[4.99075842 270.71066284]
[7.24693918 259.88098145]
[11.86676979 249.81875610]
[18.62130928 241.03320312]
[27.17346764 233.97001648]
[37.09483337 228.98869324]
[47.88712311 226.34434509]
[59.00721741 226.17457581]
[62.76351929 211.65252686]
[66.51982117 197.13046265]
[70.27612305 182.60839844]
[74.03241730 168.08634949]
[77.78871918 153.56428528]
[81.54502106 139.04222107]
[85.30132294 124.52016449]
[83.69244385 120.02343750]
[84.89131165 114.46828461]
[89.39169312 109.62493134]
[86.24539948 96.00170135]
[96.20452118 86.18805695]
[100.39153290 71.78427887]
[96.81387329 56.37288666]
[107.79624939 46.31124115]
[111.98326111 31.90745926]
[116.17027283 17.50367737]
[120.35727692 3.09989500]
[106.72426605 9.35616875]
[92.61306000 4.26953459]
[86.10720062 -9.24615192]
[90.93354034 -23.44849205]
[104.32733154 -30.20174026]
[118.61600494 -25.63732910]
[125.61426544 -12.37090683]
[131.06962585 -26.34370422]
[136.52497864 -40.31650162]
[141.98033142 -54.28929901]
[147.43568420 -68.26210022]
[133.89759827 -74.73723602]
[120.87469482 -82.19452667]
[108.43809509 -90.59322357]
[96.65572357 -99.88746643]
[85.59194183 -110.02649689]
[75.30715942 -120.95492554]
[65.85756683 -132.61306763]
[57.29476547 -144.93725586]
[49.66552734 -157.86018372]
[43.01152039 -171.31126404]
[37.36908340 -185.21701050]
[32.76903534 -199.50151062]
[29.23650360 -214.08673096]
[26.79077721 -228.89299011]
[25.44521713 -243.83946228]
[25.20717049 -258.84448242]
[26.07793999 -273.82611084]
[28.05276680 -288.70248413]
[31.12086678 -303.39242554]
[35.26548386 -317.81564331]
[40.46397781 -331.89340210]
[46.68795776 -345.54876709]
[53.90343094 -358.70718384]
[62.07098770 -371.29681396]
[71.14601898 -383.24884033]
[81.07896423 -394.49801636]
[91.81556702 -404.98287964]
[103.29718781 -414.64617920]
[115.46111298 -423.43518066]
[128.24092102 -431.30178833]
[141.56678772 -438.20312500]
[155.36596680 -444.10144043]
[169.56304932 -448.96453857]
[184.08053589 -452.76586914]
[198.83909607 -455.48464966]
[213.75816345 -457.10604858]
[228.75622559 -457.62121582]
[243.75137329 -457.02731323]
[258.66171265 -455.32760620]
[273.40579224 -452.53134155]
[287.90310669 -448.65383911]
[302.07446289 -443.71624756]
[315.84246826 -437.74557495]
[329.13192749 -430.77435303]
[341.87026978 -422.84072876]
[353.98785400 -413.98800659]
[365.41857910 -404.26452637]
[376.09997559 -393.72341919]
[385.97372437 -382.42224121]
[394.98587036 -370.42272949]
[403.08721924 -357.79040527]
[410.23348999 -344.59426880]
[416.38568115 -330.90640259]
[421.51019287 -316.80157471]
[425.57901001 -302.35678101]
[428.56991577 -287.65093994]
[430.46661377 -272.76437378]
[431.25869751 -257.77838135]
[430.94186401 -242.77482605]
[429.51785278 -227.83564758]
[426.99441528 -213.04241943]
[423.38534546 -198.47595215]
[418.71032715 -184.21580505]
[412.99496460 -170.33987427]
[406.27041626 -156.92391968]
[398.57342529 -144.04124451]
[389.94604492 -131.76217651]
[380.43536377 -120.15381622]
[370.09332275 -109.27954102]
[358.97647095 -99.19874573]
[347.14544678 -89.96649933]
[334.66491699 -81.63322449]
[321.60302734 -74.24442291]
[308.03112793 -67.84045410]
[294.02334595 -62.45630646]
[279.65615845 -58.12137604]
[265.00808716 -54.85933685]
[250.15908813 -52.68801498]
[235.19029236 -51.61926270]
[220.18344116 -51.65891647]
[205.22048950 -52.80676651]
[190.38319397 -55.05653381]
[175.75254822 -58.39593887]
[161.40849304 -62.80673981]
[155.95312500 -48.83394241]
[150.49777222 -34.86114502]
[145.04241943 -20.88834763]
[139.58706665 -6.91554976]
[134.76106262 7.28690624]
[130.57405090 21.69068909]
[126.38703918 36.09447098]
[122.20002747 50.49825287]
[126.07717133 64.87938690]
[114.79531860 75.97129059]
[110.60830688 90.37506866]
[113.75460052 103.99829865]
[103.79547882 113.81194305]
[99.82337952 128.27645874]
[96.06708527 142.79852295]
[92.31078339 157.32058716]
[88.55448151 171.84263611]
[84.79817963 186.36470032]
[81.04187775 200.88676453]
[77.28557587 215.40882874]
[73.52927399 229.93087769]
[89.40072632 240.91514587]
[99.84854889 257.10693359]
[103.30516815 276.03198242]
[99.26912689 294.80947876]
[88.37764740 310.59045410]
[72.30616760 320.99011230]
[53.51067352 324.44821167]
[51.06494904 339.24746704]
[48.61922073 354.04675293]
[46.17349243 368.84600830]
[43.72776413 383.64529419]
[41.28203583 398.44454956]
[55.65674210 402.80606079]
[69.33914948 409.00662231]
[82.09514618 416.94006348]
[93.70644379 426.47067261]
[103.97437286 437.43539429]
[112.72322083 449.64654541]
[119.80329895 462.89523315]
[125.09344482 476.95474243]
[128.50314331 491.58447266]
[129.97404480 506.53408813]
[129.48100281 521.54779053]
[127.03241730 536.36871338]
[122.67021179 550.74322510]
[116.46902466 564.42535400]
[108.53495789 577.18096924]
[99.00378418 588.79180908]
[88.03859711 599.05920410]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 193]
[30 192]
[31 191]
[32 190]
[33 189]
[34 188]
[47 181]
[48 180]
[49 179]
[50 178]
[51 177]
[52 176]
[53 175]
[54 174]
[57 173]
[59 171]
[60 170]
[62 168]
[63 167]
[64 166]
[65 165]
[72 164]
[73 163]
[74 162]
[75 161]
[76 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
