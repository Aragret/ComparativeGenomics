%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUGxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[125.50646210 688.30700684]
[112.33440399 681.12023926]
[99.64468384 673.11254883]
[87.48838806 664.31610107]
[75.91447449 654.76641846]
[64.96954346 644.50183105]
[54.69767380 633.56378174]
[45.14021683 621.99627686]
[36.33566666 609.84582520]
[28.31946754 597.16149902]
[21.12390518 583.99426270]
[14.77795124 570.39715576]
[9.30715847 556.42492676]
[4.73355627 542.13385010]
[1.07556129 527.58148193]
[-1.65209734 512.82641602]
[-3.43843603 497.92800903]
[-4.27626181 482.94635010]
[-4.16220093 467.94168091]
[-3.09671283 452.97448730]
[-1.08408773 438.10498047]
[1.86757016 423.39306641]
[5.74637556 408.89801025]
[10.53670883 394.67810059]
[16.21928215 380.79067993]
[22.77121353 367.29159546]
[30.16612053 354.23526001]
[38.37422562 341.67425537]
[47.36247635 329.65908813]
[57.09468460 318.23818970]
[67.53165436 307.45755005]
[78.63136292 297.36059570]
[90.34912109 287.98791504]
[102.63774109 279.37731934]
[115.44773102 271.56347656]
[128.72752380 264.57778931]
[142.42364502 258.44842529]
[137.17692566 244.39596558]
[131.93020630 230.34349060]
[126.68348694 216.29103088]
[121.43676758 202.23855591]
[115.29012299 215.92134094]
[101.84162140 222.56497192]
[87.23973083 219.13204956]
[78.16024780 207.19207764]
[78.75418854 192.20384216]
[88.75000763 181.01976013]
[103.57775116 178.75305176]
[116.45955658 186.44145203]
[112.70325470 171.91938782]
[108.94695282 157.39732361]
[105.19065094 142.87527466]
[101.43434906 128.35321045]
[97.03335571 114.01336670]
[86.50777435 104.80989838]
[88.83761597 91.02355194]
[76.91555786 80.62282562]
[79.92984772 66.03641510]
[74.89293671 51.90738678]
[73.10793304 66.80079651]
[67.72283936 80.80082703]
[59.06694412 93.05136108]
[47.66956711 102.80326843]
[34.22766113 109.46022797]
[19.56320000 112.61516571]
[4.57292461 112.07514191]
[-9.82650566 107.87319183]
[-22.75456047 100.26625824]
[-33.42068100 89.71951294]
[-41.17263412 76.87789154]
[-45.53638458 62.52666473]
[-46.24508286 47.54341507]
[-43.25539780 32.84437561]
[-36.75014496 19.32839584]
[-27.12712479 7.82198477]
[-14.97478962 -0.97123629]
[-1.03625786 -6.51355886]
[13.83612251 -8.46606827]
[28.73290062 -6.70936728]
[42.74313354 -1.35087860]
[55.01008606 7.28172350]
[64.78363800 18.66055298]
[71.46613312 32.08981705]
[71.46613312 17.08981514]
[71.46613312 2.08981562]
[71.46613312 -12.91018391]
[71.46613312 -27.91018486]
[71.46613312 -42.91018295]
[71.46613312 -57.91018295]
[71.46613312 -72.91018677]
[71.46613312 -87.91018677]
[71.46613312 -102.91018677]
[56.77754593 -106.25580597]
[43.20193100 -112.78652954]
[31.42023087 -122.17478943]
[22.02341461 -133.94966125]
[15.48282242 -147.52052307]
[12.12652493 -162.20666504]
[12.12287521 -177.27145386]
[15.47205448 -191.95922852]
[22.00607109 -205.53326416]
[31.39717865 -217.31268311]
[43.17432785 -226.70664978]
[56.74677658 -233.24395752]
[71.43373871 -236.59669495]
[86.49852753 -236.59669495]
[101.18548584 -233.24395752]
[114.75793457 -226.70664978]
[126.53508759 -217.31268311]
[135.92619324 -205.53326416]
[142.46020508 -191.95922852]
[145.80938721 -177.27145386]
[145.80574036 -162.20666504]
[142.44944763 -147.52052307]
[135.90884399 -133.94966125]
[126.51203156 -122.17478943]
[114.73033142 -112.78652954]
[101.15471649 -106.25580597]
[86.46613312 -102.91018677]
[86.46613312 -87.91018677]
[86.46613312 -72.91018677]
[86.46613312 -57.91018295]
[86.46613312 -42.91018295]
[86.46613312 -27.91018486]
[86.46613312 -12.91018391]
[86.46613312 2.08981562]
[86.46613312 17.08981514]
[86.46613312 32.08981705]
[89.02196503 46.87046814]
[94.05888367 60.99950027]
[105.62066650 70.38962555]
[102.96664429 85.98663330]
[113.49222565 95.19010162]
[111.16238403 108.97644806]
[118.55327606 95.92368317]
[132.97171021 91.78741455]
[146.15815735 98.93708801]
[150.55880737 113.27703857]
[143.65278625 126.59269714]
[129.39616394 131.25625610]
[115.95641327 124.59690857]
[119.71270752 139.11897278]
[123.46900940 153.64103699]
[127.22531128 168.16308594]
[130.98161316 182.68515015]
[135.48924255 196.99183655]
[140.73596191 211.04431152]
[145.98268127 225.09677124]
[151.22940063 239.14924622]
[156.47612000 253.20172119]
[170.83787537 248.85520935]
[185.44641113 245.42832947]
[200.24285889 242.93487549]
[215.16767883 241.38490295]
[230.16075134 240.78463745]
[245.16171265 241.13650513]
[260.11013794 242.43908691]
[274.94586182 244.68713379]
[289.60916138 247.87161255]
[304.04092407 251.97967529]
[318.18310547 256.99478149]
[331.97872925 262.89675903]
[345.37225342 269.66183472]
[358.30975342 277.26275635]
[370.73910522 285.66891479]
[382.61026001 294.84646606]
[393.87548828 304.75848389]
[404.48931885 315.36502075]
[414.40911865 326.62335205]
[423.59487915 338.48818970]
[432.00961304 350.91174316]
[439.61947632 363.84399414]
[446.39376831 377.23281860]
[452.30526733 391.02438354]
[457.33013916 405.16308594]
[461.44818115 419.59204102]
[464.64276123 434.25311279]
[466.90106201 449.08728027]
[468.21395874 464.03482056]
[468.57620239 479.03552246]
[467.98629761 494.02899170]
[466.44662476 508.95489502]
[463.96337891 523.75305176]
[460.54660034 538.36395264]
[456.20999146 552.72869873]
[450.97103882 566.78948975]
[444.85086060 580.48974609]
[437.87408447 593.77416992]
[430.06878662 606.58941650]
[421.46640015 618.88378906]
[412.10159302 630.60778809]
[402.01202393 641.71429443]
[391.23837280 652.15844727]
[379.82400513 661.89831543]
[367.81488037 670.89459229]
[355.25933838 679.11108398]
[342.20794678 686.51470947]
[328.71325684 693.07568359]
[314.82965088 698.76751709]
[300.61294556 703.56738281]
[286.12048340 707.45587158]
[271.41055298 710.41741943]
[256.54238892 712.43994141]
[241.57591248 713.51544189]
[226.57133484 713.63958740]
[211.58911133 712.81176758]
[196.68954468 711.03540039]
[181.93263245 708.31762695]
[167.37782288 704.66931152]
[153.08369446 700.10528564]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 150]
[38 149]
[39 148]
[40 147]
[41 146]
[49 145]
[50 144]
[51 143]
[52 142]
[53 141]
[54 134]
[56 132]
[58 130]
[59 129]
[83 128]
[84 127]
[85 126]
[86 125]
[87 124]
[88 123]
[89 122]
[90 121]
[91 120]
[92 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
