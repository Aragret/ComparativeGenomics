%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[37.33495331 656.19683838]
[23.24956322 661.37127686]
[8.84698105 665.58300781]
[-5.80707502 668.81280518]
[-20.64574432 671.04589844]
[-35.60131836 672.27215576]
[-50.60555649 672.48602295]
[-65.59000397 671.68640137]
[-80.48628235 669.87701416]
[-95.22642517 667.06616211]
[-109.74317932 663.26654053]
[-123.97029877 658.49560547]
[-137.84288025 652.77508545]
[-151.29760742 646.13104248]
[-164.27311707 638.59387207]
[-176.71017456 630.19787598]
[-188.55206299 620.98144531]
[-199.74472046 610.98657227]
[-210.23709106 600.25891113]
[-219.98129272 588.84735107]
[-228.93287659 576.80401611]
[-237.05099487 564.18383789]
[-244.29859924 551.04437256]
[-250.64262390 537.44561768]
[-256.05410767 523.44958496]
[-260.50839233 509.12017822]
[-263.98513794 494.52273560]
[-266.46847534 479.72387695]
[-267.94708252 464.79113770]
[-268.41418457 449.79266357]
[-267.86767578 434.79684448]
[-266.31005859 419.87213135]
[-263.74844360 405.08663940]
[-260.19448853 390.50781250]
[-255.66441345 376.20217896]
[-250.17889404 362.23498535]
[-243.76298523 348.66998291]
[-236.44592285 335.56909180]
[-228.26112366 322.99203491]
[-219.24592590 310.99624634]
[-209.44145203 299.63644409]
[-198.89244080 288.96444702]
[-187.64703369 279.02899170]
[-175.75653076 269.87533569]
[-163.27520752 261.54531860]
[-150.25999451 254.07691956]
[-136.77027893 247.50421143]
[-122.86760712 241.85717773]
[-108.61543274 237.16160583]
[-94.07876587 233.43891907]
[-79.32395172 230.70608521]
[-64.41830444 228.97558594]
[-49.42984009 228.25532532]
[-34.42694092 228.54856873]
[-19.47806740 229.85398865]
[-4.65142775 232.16563416]
[9.98532677 235.47294617]
[24.36541367 239.76084900]
[29.61213112 225.70837402]
[34.85884857 211.65591431]
[40.10556793 197.60343933]
[45.35228729 183.55096436]
[42.55550003 168.92129517]
[54.63108826 158.69921875]
[59.87780380 144.64674377]
[48.80680084 154.76765442]
[35.35827637 161.41123962]
[20.59283638 164.05355835]
[5.67494631 162.48620605]
[-8.21890640 156.83280945]
[-19.99299431 147.53921509]
[-28.71876335 135.33836365]
[-33.70806503 121.19244385]
[-34.56742096 106.21707916]
[-31.22905922 91.59329224]
[-23.95625496 78.47435760]
[-13.32257462 67.89490509]
[-0.16663313 60.68927002]
[14.47403717 57.42571640]
[29.44481087 58.36162186]
[43.56503296 63.42317963]
[55.72111893 72.21121216]
[64.95439148 84.03266144]
[70.53668213 97.95523834]
[72.02774048 112.88094330]
[69.30887604 127.63597107]
[78.44767761 115.74134064]
[87.58647919 103.84670258]
[96.36708069 91.68524933]
[104.78170013 79.26775360]
[106.11804962 63.50308609]
[119.66291809 57.30746078]
[128.07754517 44.88996506]
[136.49215698 32.47246933]
[137.82850647 16.70780182]
[151.37338257 10.51217461]
[159.78799438 -1.90532076]
[148.34121704 -11.62222862]
[138.01213074 -22.51980972]
[128.92185974 -34.47029877]
[121.17696381 -47.33357620]
[114.86826324 -60.95883179]
[110.06972504 -75.18630981]
[106.83760071 -89.84921265]
[105.20979309 -104.77561188]
[105.20538330 -119.79051208]
[106.82441711 -134.71786499]
[110.04792786 -149.38265991]
[114.83810425 -163.61296082]
[121.13879395 -177.24192810]
[128.87612915 -190.10975647]
[137.95938110 -202.06558228]
[148.28205872 -212.96922302]
[159.72312927 -222.69285583]
[172.14846802 -231.12246704]
[185.41236877 -238.15922546]
[199.35934448 -243.72062683]
[213.82585144 -247.74147034]
[228.64230347 -250.17460632]
[243.63496399 -250.99151611]
[258.62805176 -250.18261719]
[273.44580078 -247.75738525]
[287.91445923 -243.74426270]
[301.86441040 -238.19030762]
[315.13208008 -231.16064453]
[327.56188965 -222.73765564]
[339.00817871 -213.02014160]
[349.33666992 -202.12199402]
[358.42630005 -190.17102051]
[366.17050171 -177.30732727]
[372.47845459 -163.68173218]
[377.27621460 -149.45399475]
[380.50756836 -134.79092407]
[382.13458252 -119.86443329]
[382.13818359 -104.84953308]
[380.51834106 -89.92226410]
[377.29403687 -75.25763702]
[372.50308228 -61.02759552]
[366.20166016 -47.39897537]
[358.46365356 -34.53156662]
[349.37976074 -22.57622719]
[339.05648804 -11.67313290]
[327.61489868 -1.95011592]
[315.18911743 6.47882700]
[301.92480469 13.51487064]
[287.97753906 19.07552147]
[273.51080322 23.09558296]
[258.69424438 25.52792168]
[243.70152283 26.34402084]
[228.70848083 25.53431320]
[213.89086914 23.10828781]
[199.42242432 19.09439278]
[185.47277832 13.53968716]
[172.20549011 6.50929785]
[163.79087830 18.92679405]
[163.05639648 33.80327988]
[148.90965271 40.88708878]
[140.49504089 53.30458450]
[132.08041382 65.72207642]
[131.34593201 80.59856415]
[117.19919586 87.68237305]
[108.78457642 100.09986877]
[109.10394287 103.13095856]
[108.32748413 106.34524536]
[106.38520813 109.33707428]
[103.35799408 111.68061829]
[99.48110962 112.98551178]
[90.34230804 124.88014221]
[81.20350647 136.77478027]
[73.93027496 149.89346313]
[68.68355560 163.94593811]
[71.10506439 179.58073425]
[59.40475845 188.79768372]
[54.15803909 202.85015869]
[48.91131973 216.90261841]
[43.66460419 230.95509338]
[38.41788483 245.00756836]
[52.08942032 251.19319153]
[65.31217957 258.28768921]
[78.02581787 266.25863647]
[90.17233276 275.06973267]
[101.69629669 284.68072510]
[112.54513550 295.04776001]
[122.66934204 306.12356567]
[132.02273560 317.85757446]
[140.56260681 330.19628906]
[148.25001526 343.08334351]
[155.04988098 356.45999146]
[160.93118286 370.26519775]
[165.86708069 384.43594360]
[169.83503723 398.90756226]
[172.81697083 413.61407471]
[174.79925537 428.48831177]
[175.77285767 443.46246338]
[175.73333740 458.46817017]
[174.68087769 473.43698120]
[172.62026978 488.30059814]
[169.56091309 502.99118042]
[165.51678467 517.44171143]
[160.50631714 531.58624268]
[154.55238342 545.36029053]
[147.68215942 558.70092773]
[139.92697144 571.54730225]
[131.32221985 583.84088135]
[121.90715790 595.52545166]
[111.72475433 606.54779053]
[100.82145691 616.85754395]
[89.24702454 626.40771484]
[77.05426788 635.15466309]
[64.29882050 643.05853271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 177]
[59 176]
[60 175]
[61 174]
[62 173]
[64 171]
[65 170]
[86 169]
[87 168]
[88 167]
[89 162]
[90 161]
[92 159]
[93 158]
[94 157]
[96 155]
[97 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
