%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[141.99758911 248.82315063]
[138.78982544 263.50842285]
[133.32415771 277.51101685]
[125.73518372 290.48614502]
[116.20979309 302.11428833]
[104.98255920 312.10903931]
[92.32994843 320.22433472]
[78.56355286 326.26031494]
[64.02237701 330.06829834]
[49.06451797 331.55453491]
[34.05832291 330.68243408]
[19.37333107 327.47348022]
[5.37117529 322.00665283]
[-7.60332966 314.41659546]
[-19.23067474 304.89025879]
[-29.22452545 293.66220093]
[-37.33877182 281.00891113]
[-43.37360001 267.24203491]
[-47.18039322 252.70053101]
[-48.66540146 237.74255371]
[-47.79206085 222.73643494]
[-44.58187866 208.05169678]
[-39.11390305 194.05000305]
[-31.52279091 181.07612610]
[-21.99548149 169.44955444]
[-10.76659203 159.45663452]
[1.88735592 151.34342957]
[15.65474701 145.30973816]
[30.19654846 141.50415039]
[45.15465164 140.02037048]
[60.16070557 140.89495850]
[74.84516907 144.10635376]
[80.30052185 130.13354492]
[85.75588226 116.16075134]
[91.21123505 102.18795776]
[90.17897797 98.47219849]
[90.78958130 94.31948853]
[93.20146942 90.47373199]
[97.23480225 87.72199249]
[103.30863953 74.00672150]
[109.38246918 60.29145813]
[101.88877106 42.89149475]
[109.36486816 25.83216095]
[126.63493347 19.76088142]
[132.29772949 5.87085438]
[137.96051025 -8.01917267]
[143.62329102 -21.90919876]
[129.99130249 -28.17342377]
[116.64551544 -35.02630615]
[103.61135864 -42.45480347]
[90.91362762 -50.44477081]
[78.57650757 -58.98100281]
[66.62346649 -68.04724884]
[55.07727432 -77.62625122]
[43.95989609 -87.69976807]
[33.29250336 -98.24863434]
[23.09539986 -109.25276947]
[13.38799572 -120.69122314]
[4.18876982 -132.54222107]
[-4.48476696 -144.78320312]
[-12.61610413 -157.39086914]
[-20.18976212 -170.34121704]
[-27.19132614 -183.60960388]
[-33.60746384 -197.17076111]
[-39.42596817 -210.99888611]
[-44.63575745 -225.06764221]
[-49.22691727 -239.35025024]
[-53.19070816 -253.81953430]
[-56.51958466 -268.44796753]
[-59.20721054 -283.20764160]
[-61.24846649 -298.07052612]
[-62.63946915 -313.00830078]
[-63.37757111 -327.99252319]
[-63.46136856 -342.99468994]
[-62.89070129 -357.98623657]
[-61.66665268 -372.93859863]
[-59.79155350 -387.82336426]
[-57.26897812 -402.61215210]
[-54.10372162 -417.27682495]
[-50.30181503 -431.78948975]
[-45.87049103 -446.12249756]
[-40.81818390 -460.24859619]
[-35.15451813 -474.14083862]
[-28.89027023 -487.77282715]
[-22.03736496 -501.11859131]
[-14.60884571 -514.15277100]
[-6.61885548 -526.85046387]
[1.91739726 -539.18756104]
[10.98366261 -551.14056396]
[20.56268311 -562.68676758]
[30.63622475 -573.80413818]
[41.18511200 -584.47149658]
[52.18926239 -594.66857910]
[63.62773132 -604.37597656]
[75.47874451 -613.57519531]
[87.71974182 -622.24871826]
[100.32742310 -630.38000488]
[113.27778625 -637.95367432]
[126.54618073 -644.95520020]
[140.10734558 -651.37127686]
[153.93548584 -657.18975830]
[168.00424194 -662.39953613]
[182.28686523 -666.99066162]
[196.75616455 -670.95446777]
[211.38458252 -674.28332520]
[226.14428711 -676.97088623]
[241.00715637 -679.01214600]
[255.94493103 -680.40307617]
[270.92916870 -681.14117432]
[285.93133545 -681.22497559]
[300.92285156 -680.65423584]
[315.87524414 -679.43017578]
[330.75997925 -677.55505371]
[345.54876709 -675.03247070]
[360.21347046 -671.86718750]
[374.72610474 -668.06524658]
[389.05911255 -663.63391113]
[403.18518066 -658.58154297]
[417.07745361 -652.91784668]
[430.70941162 -646.65362549]
[444.05517578 -639.80065918]
[457.08929443 -632.37213135]
[469.78701782 -624.38214111]
[482.12411499 -615.84582520]
[494.07711792 -606.77954102]
[505.62326050 -597.20050049]
[516.74060059 -587.12695312]
[527.40795898 -576.57806396]
[537.60504150 -565.57385254]
[547.31237793 -554.13537598]
[556.51159668 -542.28436279]
[565.18505859 -530.04333496]
[573.31634521 -517.43566895]
[580.88995361 -504.48529053]
[587.89147949 -491.21688843]
[594.30761719 -477.65570068]
[600.12603760 -463.82754517]
[605.33575439 -449.75878906]
[609.92687988 -435.47613525]
[613.89062500 -421.00683594]
[617.21948242 -406.37841797]
[619.90704346 -391.61871338]
[621.94824219 -376.75582886]
[623.33917236 -361.81805420]
[624.07727051 -346.83383179]
[624.16101074 -331.83166504]
[623.59027100 -316.84011841]
[622.36614990 -301.88775635]
[620.49102783 -287.00302124]
[617.96838379 -272.21423340]
[614.80310059 -257.54956055]
[611.00109863 -243.03689575]
[606.56976318 -228.70390320]
[601.51739502 -214.57783508]
[595.85369873 -200.68560791]
[589.58935547 -187.05363464]
[582.73645020 -173.70788574]
[575.30786133 -160.67376709]
[567.31781006 -147.97608948]
[558.78155518 -135.63900757]
[549.71520996 -123.68601990]
[540.13616943 -112.13986969]
[530.06256104 -101.02254486]
[519.51367188 -90.35520935]
[508.50949097 -80.15816498]
[497.07098389 -70.45082092]
[485.21994019 -61.25165558]
[472.97891235 -52.57818222]
[460.37118530 -44.44691086]
[447.42080688 -36.87332153]
[434.15237427 -29.87182617]
[420.59118652 -23.45575905]
[406.76303101 -17.63732719]
[392.69424438 -12.42761135]
[378.41162109 -7.83652592]
[363.94232178 -3.87281084]
[349.31387329 -0.54401147]
[334.55416870 2.14353585]
[319.69128418 4.18471527]
[304.75350952 5.57564068]
[289.76928711 6.31366491]
[274.76712036 6.39738321]
[259.77557373 5.82663584]
[244.82319641 4.60250950]
[229.93846130 2.72733426]
[215.14967346 0.20467955]
[200.48500061 -2.96065235]
[185.97236633 -6.76263618]
[171.63937378 -11.19403458]
[157.51332092 -16.24641228]
[151.85054016 -2.35638571]
[146.18774414 11.53364086]
[140.52496338 25.42366791]
[147.12388611 34.73067474]
[148.42407227 46.18603134]
[143.98757935 56.95689011]
[134.80958557 64.32338715]
[123.09774017 66.36529541]
[117.02390289 80.08055878]
[110.95007324 93.79582214]
[105.18403625 107.64331055]
[99.72867584 121.61611176]
[94.27332306 135.58891296]
[88.81796265 149.56170654]
[101.79372406 157.14959717]
[113.42263794 166.67404175]
[123.41834259 177.90045166]
[131.53468323 190.55238342]
[137.57177734 204.31828308]
[141.38096619 218.85914612]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 204]
[33 203]
[34 202]
[35 201]
[39 200]
[40 199]
[41 198]
[44 193]
[45 192]
[46 191]
[47 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
