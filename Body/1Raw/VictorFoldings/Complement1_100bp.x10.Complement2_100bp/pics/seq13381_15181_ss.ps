%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCCxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[78.65563202 560.45715332]
[69.18814850 572.12390137]
[58.18905258 582.35943604]
[45.87244415 590.96447754]
[32.47806931 597.77160645]
[18.26665497 602.64825439]
[3.51482940 605.49957275]
[-11.49025726 606.26995850]
[-26.45652771 604.94445801]
[-41.09265900 601.54888916]
[-55.11375046 596.14935303]
[-68.24688721 588.85095215]
[-80.23641968 579.79571533]
[-90.84896851 569.15991211]
[-99.87796783 557.15063477]
[-107.14765167 544.00158691]
[-112.51651764 529.96868896]
[-115.88006592 515.32519531]
[-117.17282104 500.35604858]
[-116.36961365 485.35269165]
[-113.48608398 470.60711670]
[-108.57835388 456.40640259]
[-101.74196625 443.02694702]
[-93.10997772 430.72918701]
[-82.85042572 419.75250244]
[-71.16301727 410.31054688]
[-58.27523422 402.58712769]
[-44.43795395 396.73257446]
[-29.92052269 392.86083984]
[-15.00552273 391.04730225]
[0.01671916 391.32723999]
[14.85379124 393.69525146]
[19.25478935 379.35540771]
[23.65578651 365.01556396]
[28.05678558 350.67572021]
[32.24379730 336.27194214]
[36.21589279 321.80740356]
[40.18798828 307.34289551]
[44.16008377 292.87835693]
[48.13218307 278.41384888]
[51.67185211 263.83746338]
[54.77596283 249.16215515]
[57.88007355 234.48686218]
[52.94404984 220.43392944]
[63.36968231 208.53364563]
[66.47379303 193.85833740]
[52.66973114 199.72756958]
[39.40233994 192.72926331]
[36.45184326 178.02230835]
[45.99324036 166.44812012]
[60.99296570 166.53877258]
[70.39340210 178.22581482]
[74.58041382 163.82203674]
[78.66007996 149.38748169]
[82.63217163 134.92295837]
[86.60427094 120.45843506]
[90.57636261 105.99390411]
[94.44067383 91.50021362]
[98.19697571 76.97815704]
[101.95326996 62.45609665]
[96.62255859 44.83040237]
[109.40225983 32.80350494]
[112.94193268 18.22713089]
[116.48160553 3.65075541]
[120.02127838 -10.92562008]
[123.12538910 -25.60092163]
[125.79118347 -40.36214066]
[128.45698547 -55.12335587]
[130.35026550 -70.00339508]
[131.46592712 -84.96184540]
[132.58157349 -99.92029572]
[133.69721985 -114.87875366]
[121.11466217 -123.57510376]
[114.61726379 -137.31121826]
[115.85946655 -152.35525513]
[124.40785217 -164.67520142]
[137.88436890 -171.01942444]
[139.00001526 -185.97789001]
[140.11566162 -200.93634033]
[140.78544617 -215.92137146]
[141.00877380 -230.91970825]
[141.23210144 -245.91804504]
[141.45542908 -260.91638184]
[141.67875671 -275.91473389]
[141.90208435 -290.91305542]
[133.49496460 -300.69482422]
[133.98974609 -313.18240356]
[142.57620239 -321.70291138]
[143.02281189 -336.69625854]
[143.46940613 -351.68960571]
[143.91601562 -366.68298340]
[144.36262512 -381.67633057]
[129.73371887 -385.23843384]
[116.16526031 -391.76458740]
[104.25041199 -400.96948242]
[94.51004028 -412.45074463]
[87.36994934 -425.70639038]
[83.14228058 -440.15701294]
[82.01184082 -455.17086792]
[84.02804565 -470.09161377]
[89.10276031 -484.26699829]
[97.01414490 -497.07727051]
[107.41634369 -507.96249390]
[119.85461426 -516.44677734]
[133.78520203 -522.15924072]
[148.59915161 -524.85015869]
[163.64881897 -524.40185547]
[178.27632141 -520.83398438]
[191.84220886 -514.30249023]
[203.75343323 -505.09292603]
[213.48928833 -493.60784912]
[220.62416077 -480.34936523]
[224.84616089 -465.89709473]
[225.97068787 -450.88278198]
[223.94860840 -435.96282959]
[218.86831665 -421.78945923]
[210.95188904 -408.98229980]
[200.54541016 -398.10116577]
[188.10380554 -389.62176514]
[174.17097473 -383.91479492]
[159.35597229 -381.22970581]
[158.90936279 -366.23635864]
[158.46276855 -351.24301147]
[158.01615906 -336.24966431]
[157.56954956 -321.25631714]
[166.70823669 -306.27462769]
[156.90042114 -290.68972778]
[156.67709351 -275.69140625]
[156.45376587 -260.69305420]
[156.23043823 -245.69471741]
[156.00711060 -230.69638062]
[155.78378296 -215.69804382]
[157.63720703 -213.59497070]
[158.76924133 -210.63099670]
[158.84783936 -207.07723999]
[157.64506531 -203.31985474]
[155.07411194 -199.82069397]
[153.95846558 -184.86222839]
[152.84281921 -169.90377808]
[165.22912598 -161.63061523]
[171.85537720 -148.17890930]
[170.85218811 -133.11703491]
[162.38903809 -120.49672699]
[148.65567017 -113.76309967]
[147.54002380 -98.80464935]
[146.42437744 -83.84619904]
[145.30873108 -68.88774109]
[156.61735535 -78.74242401]
[171.61186218 -79.14823151]
[183.43696594 -69.91963196]
[186.68637085 -55.27581787]
[179.87451172 -41.91174316]
[166.11566162 -35.93728256]
[151.70019531 -40.08388138]
[143.21820068 -52.45756149]
[140.55239868 -37.69634247]
[137.88661194 -22.93512726]
[139.37231445 -20.55798912]
[140.00593567 -17.44910812]
[139.50404358 -13.93008804]
[137.70472717 -10.41910267]
[134.59765625 -7.38594770]
[131.05798340 7.19042778]
[127.51831055 21.76680374]
[123.97863770 36.34317780]
[130.00227356 46.83328629]
[127.17260742 59.00607300]
[116.47533417 66.21239471]
[112.71903229 80.73445892]
[108.96273041 95.25651550]
[110.15348816 103.22863007]
[105.04089355 109.96600342]
[101.06879425 124.43052673]
[97.09669495 138.89505005]
[93.12460327 153.35957336]
[93.86981964 162.46356201]
[88.98419189 168.00904846]
[84.79718018 182.41282654]
[81.14909363 196.96244812]
[78.04498291 211.63774109]
[82.75897980 226.74035645]
[72.55537415 237.59097290]
[69.45126343 252.26626587]
[66.34715271 266.94155884]
[67.83917999 271.01928711]
[67.94532776 274.96304321]
[66.87789154 278.35363770]
[64.96350098 280.88378906]
[62.59670639 282.38592529]
[58.62461090 296.85046387]
[54.65251160 311.31497192]
[50.68041611 325.77951050]
[46.70832062 340.24401855]
[48.00764847 346.72656250]
[46.12129974 352.08740234]
[42.39663315 355.07672119]
[37.99563599 369.41656494]
[33.59463501 383.75640869]
[29.19363785 398.09625244]
[42.80464554 404.45916748]
[55.39760208 412.65451050]
[66.72738647 422.52273560]
[76.57345581 433.87179565]
[84.74414825 446.48074341]
[91.08043671 460.10418701]
[95.45896912 474.47686768]
[97.79452515 489.31909180]
[98.04163361 504.34191895]
[96.19548798 519.25292969]
[92.29202271 533.76184082]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 199]
[33 198]
[34 197]
[35 196]
[36 193]
[37 192]
[38 191]
[39 190]
[40 189]
[41 184]
[42 183]
[43 182]
[45 180]
[46 179]
[52 178]
[53 177]
[54 175]
[55 174]
[56 173]
[57 172]
[58 170]
[59 169]
[60 168]
[62 165]
[63 164]
[64 163]
[65 162]
[66 157]
[67 156]
[68 155]
[69 147]
[70 146]
[71 145]
[72 144]
[77 139]
[78 138]
[79 137]
[80 132]
[81 131]
[82 130]
[83 129]
[84 128]
[85 127]
[88 125]
[89 124]
[90 123]
[91 122]
[92 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
