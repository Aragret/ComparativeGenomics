%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[96.77637482 463.29760742]
[84.42813873 471.91940308]
[70.51499939 477.68466187]
[55.68769073 480.32382202]
[40.63971710 479.71334839]
[26.07490540 475.88186646]
[12.67447281 469.00854492]
[1.06518257 459.41488647]
[-8.20997715 447.54959106]
[-14.71719074 433.96759033]
[-18.15210342 419.30419922]
[-18.35405922 404.24520874]
[-15.31361103 389.49496460]
[-9.17296696 375.74334717]
[-0.21933578 363.63357544]
[11.12850475 353.73202515]
[24.33979607 346.50183105]
[38.79662323 342.28112793]
[53.82281113 341.26736450]
[56.04792786 326.43331909]
[58.27304459 311.59927368]
[60.49816132 296.76522827]
[62.72327805 281.93118286]
[64.94839478 267.09713745]
[59.18467712 253.36293030]
[68.88350677 240.86318970]
[71.10862732 226.02914429]
[65.34490967 212.29492188]
[75.04373932 199.79519653]
[77.26885223 184.96115112]
[75.20088959 180.65620422]
[75.81531525 175.00646973]
[79.78740692 169.72120667]
[82.45320129 154.95999146]
[85.11899567 140.19877625]
[87.78479004 125.43755341]
[90.45059204 110.67633820]
[85.90407562 97.45435333]
[94.78819275 86.65786743]
[97.45398712 71.89665222]
[100.11978149 57.13543320]
[102.78558350 42.37421799]
[105.45137787 27.61299896]
[108.11717224 12.85178280]
[107.67056274 -2.14156771]
[104.13088989 -16.71794319]
[100.59121704 -31.29431915]
[97.05154419 -45.87069321]
[93.51187897 -60.44706726]
[87.95265198 -74.37886810]
[80.48490906 -87.38781738]
[73.01716614 -100.39677429]
[65.54942322 -113.40572357]
[58.08168411 -126.41468048]
[44.50099945 -134.53105164]
[44.87501144 -149.42095947]
[37.40727234 -162.42991638]
[29.93952942 -175.43887329]
[22.47178841 -188.44781494]
[15.00404739 -201.45677185]
[15.94974422 -186.48661804]
[13.80486488 -171.64074707]
[8.66061020 -157.55044556]
[0.73571694 -144.81483459]
[-9.63284492 -133.97541809]
[-22.00419807 -125.49310303]
[-35.85230637 -119.72856903]
[-50.58834457 -116.92691803]
[-65.58572388 -117.20728302]
[-80.20674896 -120.55774689]
[-93.82972717 -126.83583069]
[-105.87541199 -135.77461243]
[-115.83159637 -146.99397278]
[-123.27494812 -160.01690674]
[-127.88897705 -174.28962708]
[-129.47747803 -189.20527649]
[-127.97293091 -204.12963867]
[-123.43928528 -218.42810059]
[-116.06932831 -231.49269104]
[-106.17642212 -242.76791382]
[-94.18123627 -251.77432251]
[-80.59379578 -258.12896729]
[-65.99185181 -261.56164551]
[-50.99628830 -261.92639160]
[-36.24472046 -259.20770264]
[-22.36439514 -253.52117920]
[-9.94550896 -245.10861206]
[0.48388019 -234.32771301]
[8.48038578 -221.63671875]
[6.91986322 -236.55532837]
[5.35934019 -251.47393799]
[-9.52416706 -254.00054932]
[-23.17358589 -260.45004272]
[-34.57604218 -270.34381104]
[-42.88539124 -282.94766235]
[-47.48503113 -297.32632446]
[-48.03363800 -312.41281128]
[-44.49049759 -327.08755493]
[-37.11853409 -340.26165771]
[-26.46479988 -350.95748901]
[-13.31987000 -358.38131714]
[1.34081256 -361.98226929]
[16.42932892 -361.49316406]
[30.82601166 -356.95022583]
[43.46252823 -348.69064331]
[53.40116882 -337.32727051]
[59.90441895 -323.70339966]
[62.48969650 -308.82995605]
[60.96515274 -293.81069946]
[55.44392014 -279.76013184]
[46.33570862 -267.72088623]
[34.31641388 -258.58639526]
[20.27794456 -253.03445435]
[21.83846855 -238.11584473]
[23.39899063 -223.19725037]
[28.01300049 -208.92451477]
[35.48073959 -195.91555786]
[42.94848251 -182.90660095]
[50.41622543 -169.89765930]
[57.88396454 -156.88870239]
[70.93050385 -149.70281982]
[71.09063721 -133.88241577]
[78.55838013 -120.87346649]
[86.02612305 -107.86451721]
[93.49385834 -94.85556030]
[100.96160126 -81.84661102]
[100.32563019 -96.83312225]
[104.07717133 -111.35641479]
[111.89166260 -124.16007233]
[123.09307861 -134.13645935]
[136.71238708 -140.42251587]
[151.57138062 -142.47442627]
[166.38459778 -140.11468506]
[179.87057495 -133.54743958]
[190.86260986 -123.34082031]
[198.40979004 -110.37779236]
[201.85922241 -95.77980042]
[200.91247559 -80.80970764]
[195.65147400 -66.76258087]
[186.53132629 -54.85363388]
[174.34103394 -46.11311340]
[160.13516235 -41.29715729]
[145.14268494 -40.82239914]
[130.66058350 -44.72990799]
[117.94169617 -52.68164444]
[108.08824921 -63.98674011]
[111.62792206 -49.41036606]
[115.16759491 -34.83399200]
[118.70726776 -20.25761604]
[122.24694061 -5.68124008]
[125.51751709 -20.32034302]
[131.72113037 -33.97740173]
[140.59399414 -46.07170868]
[151.75883484 -56.08900833]
[164.74092102 -63.60335922]
[178.98823547 -68.29524994]
[193.89498901 -69.96517944]
[208.82733154 -68.54213715]
[223.15034485 -64.08663940]
[236.25498962 -56.78812408]
[247.58406067 -46.95693588]
[256.65582275 -35.01110458]
[263.08456421 -21.45856476]
[266.59692383 -6.87558317]
[267.04354858 8.11776638]
[264.40545654 22.88395882]
[258.79479980 36.79512787]
[250.45016479 49.25976562]
[239.72637939 59.74786377]
[227.07940674 67.81346893]
[213.04699707 73.11362457]
[198.22583008 75.42296600]
[183.24610901 74.64330292]
[168.74476624 70.80777740]
[155.33842468 64.07949066]
[143.59712219 54.74452209]
[134.02009583 43.19980240]
[127.01456451 29.93622017]
[122.87838745 15.51757812]
[120.21259308 30.27879524]
[117.54679871 45.04001236]
[114.88100433 59.80123138]
[112.21520996 74.56244659]
[109.54940796 89.32366180]
[114.09592438 102.54564667]
[105.21180725 113.34213257]
[102.54601288 128.10334778]
[99.88021851 142.86456299]
[97.21441650 157.62577820]
[94.54862213 172.38699341]
[92.10289764 187.18626404]
[89.87777710 202.02030945]
[95.48234558 216.81556702]
[85.94266510 228.25427246]
[83.71755219 243.08830261]
[89.32211304 257.88357544]
[79.78244019 269.32226562]
[77.55731964 284.15631104]
[75.33220673 298.99035645]
[73.10708618 313.82440186]
[70.88197327 328.65844727]
[68.65685272 343.49249268]
[82.72429657 348.87033081]
[95.30651855 357.14688110]
[105.81504059 367.93508911]
[113.75834656 380.73031616]
[118.76492310 394.93411255]
[120.60060120 409.88217163]
[119.17951965 424.87533569]
[114.56814575 439.21231079]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 202]
[20 201]
[21 200]
[22 199]
[23 198]
[24 197]
[26 195]
[27 194]
[29 192]
[30 191]
[33 190]
[34 189]
[35 188]
[36 187]
[37 186]
[39 184]
[40 183]
[41 182]
[42 181]
[43 180]
[44 179]
[45 150]
[46 149]
[47 148]
[48 147]
[49 146]
[50 126]
[51 125]
[52 124]
[53 123]
[54 122]
[56 120]
[57 119]
[58 118]
[59 117]
[60 116]
[89 115]
[90 114]
[91 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
