%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[96.82168579 851.40850830]
[82.16946411 848.16589355]
[67.79302979 843.86230469]
[53.76908875 838.52087402]
[40.17246628 832.16992188]
[27.07570457 824.84344482]
[14.54868412 816.58050537]
[2.65824127 807.42517090]
[-8.53218269 797.42633057]
[-18.96288109 786.63732910]
[-28.57820129 775.11572266]
[-37.32683945 762.92291260]
[-45.16212082 750.12408447]
[-52.04223633 736.78741455]
[-57.93047714 722.98413086]
[-62.79543304 708.78784180]
[-66.61113739 694.27429199]
[-69.35723877 679.52093506]
[-71.01908112 664.60650635]
[-71.58780670 649.61053467]
[-71.06037140 634.61303711]
[-69.43959045 619.69409180]
[-66.73410797 604.93322754]
[-62.95837021 590.40924072]
[-58.13251877 576.19964600]
[-52.28229523 562.38018799]
[-45.43891907 549.02459717]
[-37.63890457 536.20422363]
[-28.92386246 523.98742676]
[-19.34029579 512.43939209]
[-8.93933868 501.62167358]
[2.22351766 491.59207153]
[14.08871269 482.40405273]
[26.59293938 474.10665894]
[39.66948318 466.74417114]
[53.24856949 460.35583496]
[67.25775146 454.97576904]
[81.62228394 450.63265991]
[96.26552582 447.34967041]
[111.10934448 445.14434814]
[109.99369812 430.18591309]
[108.87805176 415.22744751]
[107.76239777 400.26898193]
[105.34362030 397.70349121]
[104.04729462 393.83895874]
[104.47044373 389.21572876]
[106.94618225 384.62030029]
[106.49957275 369.62695312]
[106.05297089 354.63360596]
[105.60636139 339.64025879]
[105.04814911 324.65066528]
[96.75026703 312.28155518]
[103.86363983 298.14965820]
[103.19385529 283.16464233]
[92.96619415 268.90411377]
[101.58769226 252.63294983]
[100.69487000 237.65953064]
[92.21375275 225.41535950]
[99.11592865 211.17912292]
[90.63481140 198.93495178]
[97.53698730 184.69871521]
[96.64417267 169.72531128]
[95.75135803 154.75190735]
[94.85854340 139.77850342]
[93.96572876 124.80509186]
[93.07291412 109.83168793]
[91.95726013 94.87322998]
[83.01962280 81.81837463]
[89.59059906 68.45156860]
[80.65296173 55.39671707]
[87.22393799 42.02990723]
[85.88570404 27.08972168]
[84.54747009 12.14953709]
[73.28626251 4.76037025]
[68.40811920 -7.58524227]
[71.48554230 -20.29789543]
[81.17723846 -28.78909302]
[80.06159210 -43.74754715]
[78.94594574 -58.70599747]
[70.20366669 -71.89247131]
[76.97292328 -85.15996552]
[75.85727692 -100.11842346]
[74.74162292 -115.07687378]
[64.15811920 -104.44722748]
[49.15908813 -104.27671051]
[38.33665848 -114.66300201]
[37.89041138 -129.65637207]
[48.07597733 -140.66792297]
[63.05860138 -141.38973999]
[74.25513458 -131.40919495]
[74.47846222 -146.40753174]
[74.70178986 -161.40586853]
[74.81346130 -176.40545654]
[74.81346130 -191.40545654]
[74.81346130 -206.40545654]
[74.81346130 -221.40545654]
[74.81346130 -236.40545654]
[60.56078720 -241.56658936]
[48.93485641 -251.29353333]
[41.33955765 -264.41174316]
[38.69205475 -279.33709717]
[41.31204605 -294.26733398]
[48.88315964 -307.39950562]
[60.49114609 -317.14785767]
[74.73427582 -322.33523560]
[89.89263916 -322.33523560]
[104.13577271 -317.14785767]
[115.74375916 -307.39950562]
[123.31487274 -294.26733398]
[125.93486023 -279.33709717]
[123.28736115 -264.41174316]
[115.69205475 -251.29353333]
[104.06613159 -241.56658936]
[89.81346130 -236.40545654]
[89.81346130 -221.40545654]
[89.81346130 -206.40545654]
[89.81346130 -191.40545654]
[89.81346130 -176.40545654]
[92.95695496 -169.71664429]
[89.70012665 -161.18254089]
[89.47679901 -146.18420410]
[89.25347137 -131.18586731]
[89.70008087 -116.19252014]
[90.81572723 -101.23406982]
[91.93137360 -86.27561951]
[100.59385681 -74.15907288]
[93.90439606 -59.82164764]
[95.02004242 -44.86319351]
[96.13569641 -29.90474129]
[109.33651733 -19.48471451]
[110.94840240 -2.40499711]
[99.48765564 10.81130314]
[100.82588959 25.75148773]
[102.16412354 40.69167328]
[111.00604248 52.67790604]
[104.53078461 67.11333466]
[113.37270355 79.09956360]
[106.89744568 93.53499603]
[110.05667114 97.72226715]
[110.64495850 103.38153076]
[108.04631805 108.93886566]
[108.93913269 123.91227722]
[109.83194733 138.88568115]
[110.72476196 153.85908508]
[111.61757660 168.83248901]
[112.51039886 183.80589294]
[121.05538177 197.12106323]
[114.08934021 210.28631592]
[122.63432312 223.60148621]
[115.66828156 236.76672363]
[116.56109619 251.74012756]
[125.67246246 260.86950684]
[126.10783386 273.35928345]
[118.17889404 282.49484253]
[118.84867859 297.47988892]
[127.19447327 310.92080688]
[120.03318787 323.98086548]
[123.54267120 332.41421509]
[120.59971619 339.19366455]
[121.04631805 354.18701172]
[121.49292755 369.18035889]
[121.93952942 384.17370605]
[122.72085571 399.15335083]
[123.83650208 414.11178589]
[124.95214844 429.07025146]
[126.06780243 444.02871704]
[141.07452393 444.00769043]
[156.04275513 445.08212280]
[170.89262390 447.24633789]
[185.54490662 450.48873901]
[199.92141724 454.79205322]
[213.94543457 460.13333130]
[227.54216003 466.48400879]
[240.63905334 473.81027222]
[253.16619873 482.07302856]
[265.05679321 491.22814941]
[276.24737549 501.22680664]
[286.67825317 512.01562500]
[296.29376221 523.53710938]
[305.04260254 535.72973633]
[312.87811279 548.52850342]
[319.75842285 561.86499023]
[325.64691162 575.66821289]
[330.51208496 589.86444092]
[334.32803345 604.37792969]
[337.07437134 619.13122559]
[338.73648071 634.04565430]
[339.30545044 649.04156494]
[338.77825928 664.03906250]
[337.15771484 678.95806885]
[334.45248413 693.71893311]
[330.67697144 708.24298096]
[325.85134888 722.45269775]
[320.00137329 736.27227783]
[313.15820312 749.62792969]
[305.35839844 762.44842529]
[296.64355469 774.66540527]
[287.06018066 786.21362305]
[276.65939331 797.03143311]
[265.49670410 807.06127930]
[253.63166809 816.24945068]
[241.12757874 824.54705811]
[228.05114746 831.90979004]
[214.47216797 838.29833984]
[200.46307373 843.67864990]
[186.09861755 848.02197266]
[171.45542908 851.30517578]
[156.61164856 853.51074219]
[141.64646912 854.62689209]
[126.63973236 854.64770508]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 166]
[41 165]
[42 164]
[43 163]
[47 162]
[48 161]
[49 160]
[50 159]
[51 157]
[53 155]
[54 154]
[56 151]
[57 150]
[59 148]
[61 146]
[62 145]
[63 144]
[64 143]
[65 142]
[66 141]
[67 138]
[69 136]
[71 134]
[72 133]
[73 132]
[77 129]
[78 128]
[79 127]
[81 125]
[82 124]
[83 123]
[90 122]
[91 121]
[92 120]
[93 118]
[94 117]
[95 116]
[96 115]
[97 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
