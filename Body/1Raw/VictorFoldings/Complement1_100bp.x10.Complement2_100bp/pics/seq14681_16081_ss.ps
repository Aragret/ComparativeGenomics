%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[90.64910889 636.18103027]
[95.18815613 621.83239746]
[102.43952179 608.64514160]
[112.12450409 597.12615967]
[123.87081909 587.71813965]
[137.22698975 580.78277588]
[133.03997803 566.37902832]
[128.85296631 551.97521973]
[124.66595459 537.57147217]
[120.47894287 523.16766357]
[116.29193115 508.76388550]
[112.10491943 494.36010742]
[108.42517090 491.31567383]
[106.61884308 485.92733765]
[108.01454163 479.46487427]
[104.25824738 464.94281006]
[100.50194550 450.42074585]
[96.74564362 435.89868164]
[92.98934174 421.37664795]
[89.23303986 406.85458374]
[85.47673798 392.33251953]
[81.72044373 377.81045532]
[78.45066833 392.44973755]
[71.23944092 405.60263062]
[60.65546799 416.23181152]
[47.53344727 423.49902344]
[32.90823746 426.83117676]
[17.93324089 425.96545410]
[3.78944921 420.97015381]
[-8.40769958 412.23919678]
[-17.69628906 400.46115112]
[-23.34377861 386.56491089]
[-24.90478516 371.64636230]
[-22.25620270 356.88204956]
[-15.60690880 343.43634033]
[-5.48129368 332.36962891]
[7.32209396 324.55468750]
[21.79352570 320.60784912]
[36.79172516 320.84033203]
[51.13386917 325.23382568]
[63.68887711 333.44186401]
[73.46660614 344.81710815]
[79.69693756 358.46575928]
[80.36672211 343.48074341]
[81.03650665 328.49569702]
[81.70629120 313.51065063]
[82.37607574 298.52560425]
[83.04586029 283.54055786]
[70.41873169 275.63986206]
[63.39490509 262.39138794]
[63.94920731 247.30633545]
[72.03283691 234.43965149]
[85.55963898 227.30010986]
[86.22942352 212.31507874]
[86.89920807 197.33003235]
[78.97026825 188.19447327]
[79.40563965 175.70471191]
[88.51700592 166.57531738]
[81.55096436 153.41007996]
[90.09594727 140.09490967]
[90.98876190 125.12150574]
[91.88158417 110.14810181]
[92.32818604 95.15474701]
[92.32818604 80.15474701]
[92.32818604 65.15474701]
[92.10485840 50.15641403]
[91.65825653 35.16306305]
[91.21164703 20.16971397]
[90.76503754 5.17636347]
[90.31843567 -9.81698704]
[89.87182617 -24.81033707]
[79.83306885 -40.24746323]
[88.74768829 -55.36356354]
[88.07790375 -70.34860229]
[87.40811920 -85.33364105]
[86.18114471 -100.28337860]
[84.39867401 -115.17709351]
[82.61621094 -130.07081604]
[80.83374023 -144.96452332]
[71.51137543 -157.74748230]
[77.68145752 -171.30401611]
[75.89899445 -186.19772339]
[66.57662964 -198.98068237]
[72.74671173 -212.53721619]
[70.96424103 -227.43092346]
[69.07095337 -242.31095886]
[67.06694031 -257.17648315]
[65.06292725 -272.04202271]
[63.05891037 -286.90756226]
[48.08001328 -288.66354370]
[34.00869751 -294.09020996]
[21.72949982 -302.84646606]
[12.01429653 -314.38189697]
[5.47379684 -327.97131348]
[2.51914072 -342.76052856]
[3.33606052 -357.81985474]
[7.87320423 -372.20266724]
[15.84536266 -385.00485229]
[26.75139999 -395.42160034]
[39.90575409 -402.79818726]
[54.48152924 -406.67086792]
[69.56247711 -406.79620361]
[84.20060730 -403.16632080]
[97.47574615 -396.00939941]
[108.55340576 -385.77529907]
[116.73724365 -373.10742188]
[121.51280212 -358.80200195]
[122.57990265 -343.75833130]
[119.87145996 -328.92205811]
[113.55772400 -315.22579956]
[104.03558350 -303.53051758]
[91.90361786 -294.57138062]
[77.92443848 -288.91156006]
[79.92845154 -274.04602051]
[81.93246460 -259.18051147]
[83.93647766 -244.31497192]
[87.94542694 -238.10610962]
[85.85796356 -229.21339417]
[87.64042664 -214.31967163]
[96.83529663 -202.60202026]
[90.79270935 -187.98019409]
[92.57518005 -173.08647156]
[101.77005005 -161.36882019]
[95.72746277 -146.74699402]
[97.50992584 -131.85327148]
[99.29238892 -116.95955658]
[101.07485962 -102.06584167]
[112.25663757 -112.06423187]
[127.07019043 -109.70658112]
[134.59552002 -96.73086548]
[129.28524780 -82.70229340]
[115.05387878 -77.96220398]
[102.39315796 -86.00342560]
[103.06294250 -71.01838684]
[103.73272705 -56.03335190]
[112.44508362 -47.64160538]
[113.12573242 -35.16280365]
[104.86518097 -25.25694275]
[105.31178284 -10.26359272]
[105.75839233 4.72975731]
[106.20499420 19.72310829]
[106.65160370 34.71645737]
[107.09820557 49.70980835]
[109.89832306 53.57870865]
[110.29775238 59.24769974]
[107.32818604 65.15474701]
[107.32818604 80.15474701]
[107.32818604 95.15474701]
[109.29293823 97.48483276]
[110.45328522 100.58129883]
[110.52375031 104.14759827]
[109.33238983 107.78585052]
[106.85498810 111.04091644]
[105.96217346 126.01432037]
[105.06935120 140.98773193]
[111.97153473 155.22396851]
[103.49040985 167.46813965]
[112.11190796 183.73931885]
[101.88424683 197.99981689]
[101.21446228 212.98486328]
[100.54467773 227.96989441]
[113.38057709 236.28776550]
[120.28406525 249.82434082]
[119.49033356 264.89868164]
[111.31254578 277.46768188]
[98.03089905 284.21035767]
[97.36111450 299.19540405]
[96.69132996 314.18045044]
[96.02154541 329.16546631]
[95.35176086 344.15051270]
[94.68197632 359.13555908]
[96.24250031 374.05416870]
[99.99880219 388.57620239]
[103.75510406 403.09826660]
[107.51139832 417.62033081]
[111.26770020 432.14239502]
[115.02400208 446.66445923]
[118.78030396 461.18652344]
[122.53660583 475.70855713]
[126.50869751 490.17309570]
[130.69570923 504.57687378]
[134.88272095 518.98065186]
[139.06973267 533.38446045]
[143.25674438 547.78820801]
[147.44375610 562.19201660]
[151.63076782 576.59576416]
[166.62350464 575.29046631]
[181.58279419 576.93542480]
[195.93363953 581.46746826]
[209.12442017 588.71246338]
[220.64811707 598.39184570]
[230.06181335 610.13360596]
[237.00364685 623.48638916]
[241.20680237 637.93701172]
[242.50971985 652.92993164]
[240.86231995 667.88897705]
[236.32792664 682.23907471]
[229.08082581 695.42864990]
[219.39958191 706.95080566]
[207.65629578 716.36260986]
[194.30238342 723.30224609]
[179.85110474 727.50311279]
[164.85794067 728.80358887]
[149.89918518 727.15374756]
[135.54981995 722.61706543]
[122.36138153 715.36779785]
[110.84081268 705.68469238]
[101.43092346 693.93988037]
[94.49341583 680.58483887]
[90.29493713 666.13287354]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 186]
[7 185]
[8 184]
[9 183]
[10 182]
[11 181]
[12 180]
[15 179]
[16 178]
[17 177]
[18 176]
[19 175]
[20 174]
[21 173]
[22 172]
[43 171]
[44 170]
[45 169]
[46 168]
[47 167]
[48 166]
[53 161]
[54 160]
[55 159]
[58 157]
[60 155]
[61 154]
[62 153]
[63 148]
[64 147]
[65 146]
[66 143]
[67 142]
[68 141]
[69 140]
[70 139]
[71 138]
[73 135]
[74 134]
[75 133]
[76 127]
[77 126]
[78 125]
[79 124]
[81 122]
[82 121]
[84 119]
[85 118]
[86 116]
[87 115]
[88 114]
[89 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
