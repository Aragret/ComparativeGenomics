%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[-44.40685654 462.08996582]
[-45.20058441 477.08554077]
[-47.69853973 491.89291382]
[-51.86816025 506.31900024]
[-57.65508270 520.17572021]
[-64.98386383 533.28247070]
[-73.75895691 545.46838379]
[-83.86596680 556.57452393]
[-95.17311859 566.45611572]
[-107.53300476 574.98431396]
[-120.78449249 582.04803467]
[-134.75480652 587.55511475]
[-149.26184082 591.43377686]
[-164.11643982 593.63342285]
[-179.12496948 594.12542725]
[-194.09173584 592.90332031]
[-208.82164001 589.98303223]
[-223.12261963 585.40270996]
[-236.80827332 579.22204590]
[-249.70013428 571.52154541]
[-261.63015747 562.40167236]
[-272.44281006 551.98126221]
[-281.99713135 540.39624023]
[-290.16854858 527.79760742]
[-296.85052490 514.34960938]
[-301.95596313 500.22753906]
[-305.41827393 485.61557007]
[-307.19238281 470.70416260]
[-307.25509644 455.68771362]
[-305.60562134 440.76199341]
[-302.26547241 426.12158203]
[-297.27816772 411.95739746]
[-290.70874023 398.45404053]
[-282.64285278 385.78756714]
[-273.18563843 374.12313843]
[-262.46041870 363.61282349]
[-250.60697937 354.39361572]
[-237.77987671 346.58569336]
[-224.14634705 340.29089355]
[-209.88410950 335.59127808]
[-195.17910767 332.54809570]
[-180.22306824 331.20101929]
[-165.21096802 331.56762695]
[-150.33850098 333.64312744]
[-135.79959106 337.40045166]
[-121.78375244 342.79064941]
[-108.47372437 349.74340820]
[-100.05910492 337.32592773]
[-91.64448547 324.90841675]
[-83.22987366 312.49093628]
[-74.81525421 300.07342529]
[-66.40063477 287.65594482]
[-57.98601532 275.23843384]
[-57.25153351 260.36196899]
[-43.10479355 253.27815247]
[-34.69017410 240.86065674]
[-48.81021500 245.92271423]
[-63.58687210 243.34387207]
[-75.15756226 233.79823303]
[-80.49773407 219.78100586]
[-78.21147156 204.95626831]
[-68.89641571 193.19915771]
[-54.98748398 187.58296204]
[-40.12044525 189.57572937]
[-28.18150520 198.65657043]
[-22.29147530 212.45178223]
[-23.98967361 227.35447693]
[-13.82612705 216.32260132]
[-3.66257977 205.29072571]
[6.50096703 194.25885010]
[16.66451454 183.22695923]
[26.82806015 172.19508362]
[36.99160767 161.16320801]
[47.15515518 150.13133240]
[57.31870270 139.09945679]
[67.48224640 128.06758118]
[77.22821045 116.66511536]
[86.54309845 104.90786743]
[88.77265167 91.10494232]
[101.69965363 85.77725220]
[111.01453400 74.01999664]
[120.32941437 62.26274872]
[123.20566559 53.59297562]
[129.87155151 50.40115356]
[139.36045837 38.78388977]
[148.84934998 27.16662598]
[151.58683777 11.58404541]
[165.63043213 6.62153816]
[175.11933899 -4.99572515]
[177.85681152 -20.57830429]
[191.90042114 -25.54081154]
[201.38931274 -37.15807724]
[190.61180115 -47.60408401]
[180.75900269 -58.92646408]
[171.90191650 -71.04363251]
[164.10435486 -83.86829376]
[157.42250061 -97.30803680]
[151.90449524 -111.26602173]
[147.59010315 -125.64169312]
[144.51040649 -140.33146667]
[142.68759155 -155.22949219]
[142.13479614 -170.22842407]
[142.85598755 -185.22021484]
[144.84600830 -200.09683228]
[148.09048462 -214.75108337]
[152.56604004 -229.07739258]
[158.24044800 -242.97253418]
[165.07281494 -256.33639526]
[173.01390076 -269.07269287]
[182.00651550 -281.08963013]
[191.98583984 -292.30062866]
[202.87997437 -302.62493896]
[214.61044312 -311.98818970]
[227.09271240 -320.32284546]
[240.23684692 -327.56890869]
[253.94815063 -333.67416382]
[268.12780762 -338.59463501]
[282.67370605 -342.29483032]
[297.48095703 -344.74810791]
[312.44293213 -345.93676758]
[327.45184326 -345.85229492]
[342.39947510 -344.49530029]
[357.17819214 -341.87548828]
[371.68151855 -338.01181030]
[385.80490112 -332.93206787]
[399.44659424 -326.67285156]
[412.50833130 -319.27929688]
[424.89599609 -310.80465698]
[436.52032471 -301.30999756]
[447.29757690 -290.86370850]
[457.15008545 -279.54107666]
[466.00686646 -267.42367554]
[473.80407715 -254.59880066]
[480.48559570 -241.15888977]
[486.00323486 -227.20075989]
[490.31726074 -212.82498169]
[493.39657593 -198.13513184]
[495.21902466 -183.23706055]
[495.77142334 -168.23809814]
[495.04983521 -153.24633789]
[493.05944824 -138.36976624]
[489.81457520 -123.71559143]
[485.33865356 -109.38939667]
[479.66387939 -95.49440765]
[472.83117676 -82.13072205]
[464.88977051 -69.39464569]
[455.89685059 -57.37793732]
[445.91723633 -46.16717911]
[435.02282715 -35.84314346]
[423.29211426 -26.48022270]
[410.80963135 -18.14587212]
[397.66531372 -10.90014267]
[383.95385742 -4.79524374]
[369.77404785 0.12484021]
[355.22808838 3.82465839]
[340.42074585 6.27755356]
[325.45874023 7.46585178]
[310.44985962 7.38099146]
[295.50222778 6.02358389]
[280.72357178 3.40340972]
[266.22036743 -0.46065256]
[252.09712219 -5.54076195]
[238.45556641 -11.80031490]
[225.39402771 -19.19421196]
[213.00657654 -27.66917801]
[203.51768494 -16.05191422]
[201.45890808 -1.30027866]
[186.73660278 4.49317312]
[177.24769592 16.11043739]
[175.18893433 30.86207199]
[160.46661377 36.65552521]
[150.97772217 48.27278519]
[141.48881531 59.89004898]
[132.08666992 71.57762909]
[122.77178955 83.33488464]
[113.45690155 95.09213257]
[111.22734833 108.89505768]
[98.30034637 114.22274780]
[88.98546600 125.98000336]
[103.95888519 126.87252045]
[112.72129059 139.04710388]
[108.81334686 153.52908325]
[95.11585999 159.64289856]
[81.72609711 152.88166809]
[78.51412201 138.23112488]
[68.35057831 149.26300049]
[58.18703079 160.29487610]
[48.02348328 171.32675171]
[37.85993958 182.35864258]
[27.69639206 193.39051819]
[17.53284454 204.42239380]
[7.36929750 215.45426941]
[-2.79424930 226.48614502]
[-12.95779610 237.51802063]
[-22.27267838 249.27526855]
[-30.68729782 261.69277954]
[-32.02365112 277.45742798]
[-45.56851959 283.65307617]
[-53.98313904 296.07055664]
[-62.39775467 308.48806763]
[-70.81237793 320.90554810]
[-79.22699738 333.32305908]
[-87.64160919 345.74053955]
[-96.05622864 358.15805054]
[-84.66569519 367.94342041]
[-74.46488190 378.96343994]
[-65.58677673 391.07446289]
[-58.14712524 404.11859131]
[-52.24291611 417.92578125]
[-47.95112610 432.31597900]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 204]
[48 203]
[49 202]
[50 201]
[51 200]
[52 199]
[53 198]
[55 196]
[56 195]
[67 194]
[68 193]
[69 192]
[70 191]
[71 190]
[72 189]
[73 188]
[74 187]
[75 186]
[76 185]
[77 179]
[78 178]
[80 176]
[81 175]
[82 174]
[84 173]
[85 172]
[86 171]
[88 169]
[89 168]
[91 166]
[92 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
