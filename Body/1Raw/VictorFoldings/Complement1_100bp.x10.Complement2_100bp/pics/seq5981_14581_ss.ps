%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[174.32653809 468.02996826]
[168.45050049 454.22177124]
[163.57452393 440.02960205]
[159.72341919 425.52572632]
[156.91683960 410.78408813]
[155.16906738 395.87976074]
[154.48901367 380.88873291]
[154.88015747 365.88739014]
[156.34048462 350.95217896]
[158.86254883 336.15917969]
[162.43353271 321.58383179]
[167.03520203 307.30035400]
[172.64413452 293.38153076]
[179.23173523 279.89831543]
[186.76443481 266.91943359]
[195.20385742 254.51098633]
[204.50697327 242.73622131]
[214.62640381 231.65513611]
[204.29974365 220.77580261]
[193.97306824 209.89646912]
[183.64639282 199.01713562]
[173.31973267 188.13780212]
[162.99305725 177.25846863]
[152.66639709 166.37913513]
[142.33972168 155.49980164]
[132.01306152 144.62046814]
[121.68638611 133.74113464]
[111.35971832 122.86179352]
[101.03305054 111.98246002]
[90.54554749 101.25807953]
[79.89954376 90.69103241]
[69.25353241 80.12398529]
[58.60752487 69.55693817]
[47.34167480 79.46923065]
[35.43234634 88.59835052]
[22.93387985 96.90264893]
[9.90330505 104.34422302]
[-3.59992242 110.88912964]
[-17.51419067 116.50749969]
[-31.77601051 121.17369843]
[-46.32030869 124.86643982]
[-61.08072281 127.56887054]
[-75.98990631 129.26866150]
[-90.97982025 129.95805359]
[-105.98208618 129.63389587]
[-120.92823792 128.29768372]
[-135.75009155 125.95549774]
[-150.37998962 122.61803436]
[-164.75122070 118.30052185]
[-178.79817200 113.02265930]
[-192.45678711 106.80851746]
[-205.66470337 99.68647003]
[-218.36169434 91.68900299]
[-230.48980713 82.85260010]
[-241.99369812 73.21759033]
[-252.82087708 62.82793808]
[-262.92196655 51.73104477]
[-272.25085449 39.97753906]
[-280.76498413 27.62105942]
[-288.42547607 14.71797848]
[-295.19744873 1.32717347]
[-301.04992676 -12.49025631]
[-305.95623779 -26.67126465]
[-309.89401245 -41.15114594]
[-312.84524536 -55.86383057]
[-314.79650879 -70.74218750]
[-315.73886108 -85.71833038]
[-315.66806030 -100.72393036]
[-314.58435059 -115.69050598]
[-312.49276733 -130.54978943]
[-309.40277100 -145.23396301]
[-305.32849121 -159.67602539]
[-300.28854370 -173.81008911]
[-294.30587769 -187.57165527]
[-287.40783691 -200.89794922]
[-279.62588501 -213.72814941]
[-270.99551392 -226.00370789]
[-261.55609131 -237.66862488]
[-251.35070801 -248.66969299]
[-240.42593384 -258.95666504]
[-228.83160400 -268.48266602]
[-216.62062073 -277.20419312]
[-203.84872437 -285.08145142]
[-190.57415771 -292.07852173]
[-176.85749817 -298.16345215]
[-162.76135254 -303.30850220]
[-148.35000610 -307.49017334]
[-133.68925476 -310.68939209]
[-118.84595490 -312.89154053]
[-103.88785553 -314.08663940]
[-88.88320160 -314.26916504]
[-73.90045929 -313.43829346]
[-59.00798798 -311.59786987]
[-44.27373886 -308.75622559]
[-29.76494598 -304.92636108]
[-15.54780579 -300.12576294]
[-1.68719101 -294.37628174]
[11.75365639 -287.70422363]
[24.71340752 -280.13998413]
[37.13293076 -271.71807861]
[48.95555496 -262.47695923]
[60.12734222 -252.45875549]
[70.59731293 -241.70921326]
[80.31769562 -230.27735901]
[89.24413300 -218.21537781]
[97.33589935 -205.57827759]
[104.55608368 -192.42373657]
[110.87172699 -178.81176758]
[116.25402069 -164.80448914]
[120.67839813 -150.46580505]
[124.12467957 -135.86114502]
[126.57714081 -121.05715179]
[128.02458191 -106.12136078]
[128.46040344 -91.12192535]
[127.88262939 -76.12728882]
[126.29388428 -61.20586777]
[123.70140839 -46.42574692]
[120.11705017 -31.85435867]
[115.55714417 -17.55819702]
[110.04251862 -3.60248852]
[103.59832001 9.94908810]
[96.25395203 23.03470039]
[88.04293060 35.59463882]
[79.00272369 47.57159805]
[69.17456818 58.91093063]
[79.82057953 69.47797394]
[90.46659088 80.04502869]
[101.11259460 90.61207581]
[106.22617340 91.78054047]
[110.32106781 95.73087311]
[111.91238403 101.65579224]
[122.23905182 112.53512573]
[132.56571960 123.41445923]
[142.89239502 134.29379272]
[153.21905518 145.17312622]
[163.54573059 156.05245972]
[173.87239075 166.93179321]
[184.19906616 177.81112671]
[194.52574158 188.69047546]
[204.85240173 199.56980896]
[215.17907715 210.44914246]
[225.50573730 221.32847595]
[237.09887695 211.79997253]
[249.34225464 203.12280273]
[262.17343140 195.34117126]
[275.52706909 188.49475098]
[289.33511353 182.61840820]
[303.52719116 177.74209595]
[318.03097534 173.89067078]
[332.77255249 171.08374023]
[347.67684937 169.33563232]
[362.66784668 168.65522766]
[377.66918945 169.04602051]
[392.60446167 170.50601196]
[407.39749146 173.02774048]
[421.97293091 176.59838867]
[436.25653076 181.19973755]
[450.17547607 186.80833435]
[463.65881348 193.39562988]
[476.63787842 200.92802429]
[489.04653931 209.36715698]
[500.82150269 218.67001343]
[511.90283203 228.78918457]
[522.23400879 239.67311096]
[531.76239014 251.26632690]
[540.43951416 263.50976562]
[548.22100830 276.34100342]
[555.06732178 289.69470215]
[560.94360352 303.50277710]
[565.81976318 317.69488525]
[569.67108154 332.19869995]
[572.47790527 346.94033813]
[574.22589111 361.84460449]
[574.90618896 376.83563232]
[574.51531982 391.83697510]
[573.05517578 406.77221680]
[570.53332520 421.56524658]
[566.96258545 436.14065552]
[562.36114502 450.42422485]
[556.75244141 464.34310913]
[550.16503906 477.82641602]
[542.63250732 490.80541992]
[534.19329834 503.21398926]
[524.89038086 514.98889160]
[514.77111816 526.07012939]
[503.88708496 536.40124512]
[492.29379272 545.92956543]
[480.05029297 554.60656738]
[467.21899414 562.38800049]
[453.86523438 569.23419189]
[440.05712891 575.11035156]
[425.86495972 579.98645020]
[411.36114502 583.83764648]
[396.61950684 586.64434814]
[381.71520996 588.39221191]
[366.72418213 589.07238770]
[351.72283936 588.68133545]
[336.78759766 587.22113037]
[321.99459839 584.69915771]
[307.41921997 581.12829590]
[293.13568115 576.52673340]
[279.21682739 570.91790771]
[265.73358154 564.33044434]
[252.75463867 556.79785156]
[240.34611511 548.35852051]
[228.57128906 539.05548096]
[217.49012756 528.93615723]
[207.15910339 518.05206299]
[197.63087463 506.45867920]
[188.95397949 494.21511841]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 142]
[19 141]
[20 140]
[21 139]
[22 138]
[23 137]
[24 136]
[25 135]
[26 134]
[27 133]
[28 132]
[29 131]
[30 128]
[31 127]
[32 126]
[33 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
