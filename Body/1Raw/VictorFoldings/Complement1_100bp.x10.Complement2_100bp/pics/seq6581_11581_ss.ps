%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[190.73892212 628.48120117]
[180.03570557 617.96527100]
[170.00015259 606.81036377]
[160.67033386 595.05883789]
[152.08164978 582.75524902]
[144.26669312 569.94628906]
[137.25508118 556.68048096]
[131.07342529 543.00823975]
[125.74517059 528.98138428]
[121.29053497 514.65307617]
[117.72641754 500.07772827]
[115.06632996 485.31060791]
[113.32037354 470.40774536]
[112.49515533 455.42565918]
[112.59382629 440.42120361]
[113.61598969 425.45126343]
[115.55778503 410.57266235]
[118.41184235 395.84182739]
[122.16733551 381.31460571]
[126.81001282 367.04614258]
[132.32226562 353.09054565]
[138.68319702 339.50076294]
[145.86865234 326.32833862]
[153.85139465 313.62322998]
[162.60113525 301.43365479]
[172.08468628 289.80584717]
[182.26606750 278.78390503]
[193.10665894 268.40963745]
[204.56533813 258.72244263]
[195.60464478 246.69305420]
[186.64395142 234.66368103]
[177.68325806 222.63429260]
[168.72256470 210.60491943]
[159.76185608 198.57554626]
[147.84193420 196.51599121]
[140.27818298 186.56744385]
[141.55960083 173.73309326]
[132.77899170 161.57164001]
[123.99839020 149.41018677]
[115.21778870 137.24871826]
[112.47508240 136.66934204]
[109.79661560 134.96861267]
[107.61064911 132.16558838]
[106.33064270 128.43382263]
[106.30210114 124.09179688]
[98.26092529 111.42927551]
[97.76198578 126.42097473]
[90.43359375 139.50892639]
[77.91294098 147.76927185]
[62.99716568 149.35661316]
[49.01848984 143.91632080]
[39.09979248 132.66378784]
[35.45692825 118.11286163]
[38.90372467 103.51425171]
[48.67016220 92.12931824]
[62.57439041 86.50148773]
[77.51016998 87.88803101]
[90.14082336 95.97921753]
[84.27185822 82.17504120]
[78.40290070 68.37086487]
[72.53394318 54.56668472]
[66.66497803 40.76250839]
[60.79602051 26.95833015]
[48.27603531 17.28565788]
[50.41678238 2.54569530]
[46.24512863 -0.59187973]
[43.92604065 -4.61371136]
[43.48611832 -8.66605854]
[44.60926437 -12.00834560]
[39.36254501 -26.06081772]
[34.11582565 -40.11328888]
[28.86910820 -54.16576004]
[14.18795681 -50.96504974]
[-0.79927683 -49.88634872]
[-15.78747082 -50.95161819]
[-30.47148514 -54.13916779]
[-44.55237198 -59.38410950]
[-57.74346161 -66.57965088]
[-69.77620697 -75.57931519]
[-80.40562439 -86.19986725]
[-89.41532135 -98.22509766]
[-96.62187195 -111.41017914]
[-101.87855530 -125.48668671]
[-105.07835388 -140.16804504]
[-106.15612793 -155.15533447]
[-105.08993530 -170.14346313]
[-101.90147400 -184.82728577]
[-96.65566254 -198.90785217]
[-89.45929718 -212.09849548]
[-80.45889282 -224.13067627]
[-69.83768463 -234.75944519]
[-57.81189346 -243.76838684]
[-44.62636566 -250.97412109]
[-30.54953575 -256.22994995]
[-15.86798668 -259.42883301]
[-0.88062000 -260.50567627]
[14.10744190 -259.43853760]
[28.79106140 -256.24917603]
[42.87129974 -251.00250244]
[56.06150055 -243.80532837]
[68.09312439 -234.80416870]
[78.72122955 -224.18229675]
[87.72943878 -212.15596008]
[94.93435669 -198.96998596]
[100.18930054 -184.89282227]
[103.38728333 -170.21107483]
[104.46320343 -155.22364807]
[103.39514923 -140.23565674]
[100.20487213 -125.55223083]
[94.95732117 -111.47231293]
[87.75932312 -98.28256226]
[78.75743103 -86.25148773]
[68.13490295 -75.62404633]
[56.10800171 -66.61657715]
[42.92158127 -59.41247940]
[48.16829681 -45.36000824]
[53.41501617 -31.30753517]
[58.66173553 -17.25506401]
[64.22096252 -3.32326555]
[76.32115173 5.36204147]
[74.60019684 21.08937073]
[80.46915436 34.89354706]
[86.33811951 48.69772339]
[92.20707703 62.50189972]
[98.07604218 76.30607605]
[103.94499969 90.11025238]
[110.92345428 103.38809967]
[118.96462250 116.05062866]
[127.37924194 128.46812439]
[136.15985107 140.62957764]
[144.94044495 152.79103088]
[153.72105408 164.95248413]
[170.69129944 172.10035706]
[171.79124451 189.61483765]
[180.75193787 201.64422607]
[189.71263123 213.67359924]
[198.67332458 225.70297241]
[207.63401794 237.73236084]
[216.59472656 249.76173401]
[229.15684509 241.55583191]
[242.20030212 234.13883972]
[255.67561340 227.53887939]
[269.53167725 221.78099060]
[283.71591187 216.88700867]
[298.17453003 212.87551880]
[312.85266113 209.76171875]
[327.69467163 207.55743408]
[342.64419556 206.27101135]
[357.64459229 205.90734863]
[372.63891602 206.46781921]
[387.57028198 207.95028687]
[402.38208008 210.34912109]
[417.01809692 213.65525818]
[431.42282104 217.85610962]
[445.54162598 222.93579102]
[459.32095337 228.87498474]
[472.70849609 235.65119934]
[485.65350342 243.23870850]
[498.10687256 251.60873413]
[510.02136230 260.72952271]
[521.35174561 270.56649780]
[532.05505371 281.08230591]
[542.09075928 292.23709106]
[551.42065430 303.98852539]
[560.00946045 316.29202271]
[567.82458496 329.10092163]
[574.83630371 342.36663818]
[581.01806641 356.03884888]
[586.34649658 370.06567383]
[590.80126953 384.39392090]
[594.36553955 398.96920776]
[597.02575684 413.73629761]
[598.77185059 428.63916016]
[599.59722900 443.62121582]
[599.49871826 458.62567139]
[598.47668457 473.59561157]
[596.53503418 488.47424316]
[593.68109131 503.20513916]
[589.92578125 517.73236084]
[585.28320312 532.00091553]
[579.77111816 545.95654297]
[573.41033936 559.54638672]
[566.22497559 572.71887207]
[558.24237061 585.42407227]
[549.49273682 597.61370850]
[540.00933838 609.24163818]
[529.82806396 620.26367188]
[518.98754883 630.63806152]
[507.52896118 640.32537842]
[495.49575806 649.28894043]
[482.93353271 657.49468994]
[469.89001465 664.91156006]
[456.41464233 671.51141357]
[442.55853271 677.26916504]
[428.37423706 682.16296387]
[413.91558838 686.17431641]
[399.23739624 689.28796387]
[384.39538574 691.49212646]
[369.44583130 692.77838135]
[354.44543457 693.14190674]
[339.45114136 692.58129883]
[324.51977539 691.09869385]
[309.70800781 688.69970703]
[295.07202148 685.39343262]
[280.66732788 681.19244385]
[266.54858398 676.11260986]
[252.76931763 670.17327881]
[239.38182068 663.39697266]
[226.43688965 655.80932617]
[213.98361206 647.43914795]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 139]
[30 138]
[31 137]
[32 136]
[33 135]
[34 134]
[37 132]
[38 131]
[39 130]
[40 129]
[45 128]
[46 127]
[58 126]
[59 125]
[60 124]
[61 123]
[62 122]
[63 121]
[65 119]
[69 118]
[70 117]
[71 116]
[72 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
