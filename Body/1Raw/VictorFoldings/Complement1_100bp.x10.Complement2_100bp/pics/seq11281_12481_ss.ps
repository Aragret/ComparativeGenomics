%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUGxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[108.28237152 790.90319824]
[93.62763214 787.68145752]
[79.19655609 783.57232666]
[65.04283142 778.59106445]
[51.21911621 772.75622559]
[37.77682877 766.08947754]
[24.76597977 758.61560059]
[12.23497009 750.36242676]
[0.23041517 741.36065674]
[-11.20302677 731.64379883]
[-22.02282333 721.24798584]
[-32.18872070 710.21191406]
[-41.66290283 698.57659912]
[-50.41012573 686.38531494]
[-58.39785004 673.68347168]
[-65.59635925 660.51824951]
[-71.97886658 646.93872070]
[-77.52164459 632.99530029]
[-82.20406342 618.73992920]
[-86.00870514 604.22558594]
[-88.92140961 589.50634766]
[-90.93135834 574.63690186]
[-92.03105927 559.67254639]
[-92.21642303 544.66900635]
[-91.48677063 529.68206787]
[-89.84480286 514.76745605]
[-87.29663849 499.98071289]
[-83.85175323 485.37683105]
[-79.52295685 471.01013184]
[-74.32636261 456.93402100]
[-68.28128815 443.20092773]
[-61.41024017 429.86190796]
[-53.73876953 416.96658325]
[-45.29541397 404.56292725]
[-36.11158371 392.69708252]
[-26.22144699 381.41320801]
[-15.66179371 370.75326538]
[-4.47190666 360.75689697]
[7.30658674 351.46130371]
[19.62986946 342.90106201]
[32.45209885 335.10803223]
[45.72557068 328.11120605]
[59.40091324 321.93658447]
[73.42724609 316.60714722]
[87.75239563 312.14276123]
[102.32306671 308.55996704]
[117.08506012 305.87213135]
[115.30259705 290.97842407]
[113.52012634 276.08468628]
[104.32525635 264.36703491]
[110.36784363 249.74520874]
[108.58538055 234.85148621]
[106.80290985 219.95777893]
[105.02044678 205.06405640]
[103.23798370 190.17033386]
[101.45551300 175.27662659]
[99.67304993 160.38290405]
[97.89057922 145.48918152]
[96.10811615 130.59547424]
[83.33781433 125.95382690]
[73.80149841 116.27476501]
[69.35008240 103.43691254]
[70.84756470 89.93198395]
[78.00328064 78.38117218]
[89.42836761 71.02639008]
[80.29735565 58.10604858]
[86.66858673 44.64289093]
[85.10806274 29.72428513]
[83.54754639 14.80568027]
[81.98702240 -0.11292441]
[78.91952515 -4.33637714]
[77.88250732 -8.86162758]
[78.65090179 -12.86470318]
[80.70524597 -15.73036480]
[79.81243134 -30.70377159]
[78.91960907 -45.67717743]
[78.02679443 -60.65058136]
[77.13397980 -75.62398529]
[62.14353180 -76.54258728]
[47.37311554 -79.26142883]
[33.03812027 -83.74085999]
[19.34760094 -89.91557312]
[6.50120163 -97.69550323]
[-5.31373930 -106.96720886]
[-15.92492485 -117.59548187]
[-25.17761230 -129.42532349]
[-32.93687057 -142.28422546]
[-39.08954620 -155.98464966]
[-43.54591751 -170.32682800]
[-46.24099350 -185.10160828]
[-47.13547516 -200.09352112]
[-46.21631622 -215.08392334]
[-43.49692535 -229.85424805]
[-39.01695251 -244.18907166]
[-32.84173203 -257.87936401]
[-25.06131744 -270.72546387]
[-15.78917027 -282.54006958]
[-5.16050434 -293.15084839]
[6.66968250 -302.40310669]
[19.52887154 -310.16186523]
[33.22953796 -316.31402588]
[47.57188416 -320.76986694]
[62.34675598 -323.46438599]
[77.33869934 -324.35830688]
[92.32907867 -323.43859863]
[107.09928894 -320.71865845]
[121.43395233 -316.23815918]
[135.12400818 -310.06240845]
[147.96981812 -302.28152466]
[159.78407288 -293.00894165]
[170.39447021 -282.37985229]
[179.64627075 -270.54934692]
[187.40455627 -257.68984985]
[193.55621338 -243.98895264]
[198.01150513 -229.64643860]
[200.70549011 -214.87147522]
[201.59884644 -199.87950134]
[200.67855835 -184.88914490]
[197.95806885 -170.11903381]
[193.47702026 -155.78454590]
[187.30078125 -142.09472656]
[179.51940918 -129.24919128]
[170.24636841 -117.43529510]
[159.61691284 -106.82530212]
[147.78604126 -97.57393646]
[134.92626953 -89.81612396]
[121.22514343 -83.66498566]
[106.88246155 -79.21022034]
[92.10738373 -76.51680756]
[93.00020599 -61.54339981]
[93.89302063 -46.56999207]
[94.78583527 -31.59658623]
[95.67864990 -16.62318039]
[96.90562439 -1.67344737]
[98.46614838 13.24515724]
[100.02667236 28.16376305]
[101.58719635 43.08236694]
[110.60659027 54.93562698]
[104.34696960 69.46586609]
[119.11616516 75.79666138]
[128.69635010 88.69736481]
[130.48699951 104.66613770]
[124.00205231 119.36830139]
[111.00183105 128.81300354]
[112.78430176 143.70672607]
[114.56676483 158.60043335]
[116.34922791 173.49415588]
[118.13169861 188.38787842]
[119.91416168 203.28158569]
[121.69663239 218.17530823]
[123.47909546 233.06903076]
[125.26155853 247.96273804]
[134.58392334 260.74569702]
[128.41384888 274.30221558]
[130.19630432 289.19595337]
[131.97877502 304.08966064]
[146.95812988 303.21807861]
[161.96276855 303.26132202]
[176.93685913 304.21923828]
[191.82469177 306.08822632]
[206.57089233 308.86138916]
[221.12060547 312.52838135]
[235.41969299 317.07556152]
[249.41497803 322.48599243]
[263.05438232 328.73959351]
[276.28717041 335.81307983]
[289.06411743 343.68014526]
[301.33770752 352.31149292]
[313.06222534 361.67501831]
[324.19412231 371.73593140]
[334.69195557 382.45678711]
[344.51666260 393.79766846]
[353.63174438 405.71640015]
[362.00320435 418.16870117]
[369.59997559 431.10815430]
[376.39379883 444.48669434]
[382.35934448 458.25451660]
[387.47445679 472.36041260]
[391.72009277 486.75192261]
[395.08047485 501.37548828]
[397.54309082 516.17669678]
[399.09875488 531.10052490]
[399.74176025 546.09149170]
[399.46960449 561.09368896]
[398.28338623 576.05145264]
[396.18750000 590.90899658]
[393.18972778 605.61120605]
[389.30120850 620.10327148]
[384.53643799 634.33135986]
[378.91311646 648.24243164]
[372.45217896 661.78485107]
[365.17767334 674.90820312]
[357.11660767 687.56365967]
[348.29904175 699.70416260]
[338.75772095 711.28448486]
[328.52816772 722.26159668]
[317.64843750 732.59466553]
[306.15899658 742.24523926]
[294.10260010 751.17742920]
[281.52407837 759.35797119]
[268.47021484 766.75646973]
[254.98960876 773.34539795]
[241.13237000 779.10021973]
[226.95008850 783.99957275]
[212.49548340 788.02520752]
[197.82235718 791.16210938]
[182.98529053 793.39862061]
[168.03945923 794.72650146]
[153.04048157 795.14068604]
[138.04415894 794.63977051]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 156]
[48 155]
[49 154]
[51 152]
[52 151]
[53 150]
[54 149]
[55 148]
[56 147]
[57 146]
[58 145]
[59 144]
[65 139]
[67 137]
[68 136]
[69 135]
[70 134]
[74 133]
[75 132]
[76 131]
[77 130]
[78 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
