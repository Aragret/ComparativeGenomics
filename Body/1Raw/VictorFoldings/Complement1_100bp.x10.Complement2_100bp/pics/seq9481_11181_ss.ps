%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[107.38904572 606.25927734]
[104.76267242 621.11029053]
[98.52475739 634.84124756]
[89.06742859 646.58898926]
[76.98517609 655.61505127]
[63.03750992 661.35211182]
[48.10117722 663.43939209]
[33.11510086 661.74578857]
[19.02131081 656.37774658]
[6.70575905 647.67266846]
[-3.05739069 636.17785645]
[-9.65441799 622.61578369]
[-12.67062759 607.83898926]
[-11.91641998 592.77636719]
[-7.43920279 578.37481689]
[0.47958106 565.53955078]
[11.34214973 555.07745361]
[24.46567535 547.64617920]
[39.02519989 543.71282959]
[54.10549545 543.52471924]
[57.64516830 528.94836426]
[61.18484116 514.37194824]
[64.72451782 499.79559326]
[68.26419067 485.21920776]
[71.80385590 470.64282227]
[75.34352875 456.06646729]
[62.36770248 448.62298584]
[52.00460052 437.81384277]
[45.10025024 424.50912476]
[42.22177887 409.78314209]
[43.61085510 394.82763672]
[49.16342163 380.85549927]
[58.43741989 369.00216675]
[70.68799591 360.23358154]
[84.92731476 355.26727295]
[100.00419617 354.51382446]
[95.48876953 340.32015991]
[106.26409149 328.73556519]
[109.80376434 314.15917969]
[113.34343719 299.58279419]
[108.82801056 285.38912964]
[119.60333252 273.80453491]
[120.16154480 258.81494141]
[117.71582031 244.01565552]
[115.27008820 229.21638489]
[112.82436371 214.41711426]
[100.97457886 201.47302246]
[107.60146332 184.29263306]
[104.93566895 169.53140259]
[102.26987457 154.77018738]
[86.76753235 153.19612122]
[72.33438110 147.32377625]
[60.13663101 137.62762451]
[51.15987396 124.89112854]
[46.12944031 110.14341736]
[45.45178604 94.57610321]
[49.18167114 79.44705200]
[57.01771927 65.97869110]
[68.32676697 55.25927353]
[82.19503784 48.15494537]
[79.30976868 33.43505478]
[76.42449188 18.71516418]
[73.53922272 3.99527311]
[70.65394592 -10.72461796]
[60.40456390 -18.55487823]
[58.30445480 -30.87450790]
[64.94179535 -40.98748398]
[62.27599716 -55.74870300]
[59.61020279 -70.50991821]
[55.00548553 -78.39879608]
[57.01631927 -85.51064301]
[54.57059097 -100.30991364]
[52.01475906 -115.09056091]
[49.34896088 -129.85177612]
[46.68316650 -144.61300659]
[44.01737213 -159.37422180]
[33.95067596 -171.57963562]
[39.30292130 -185.47937012]
[36.63712692 -200.24058533]
[24.41947365 -214.01776123]
[30.99312019 -230.28903198]
[28.10784721 -245.00892639]
[25.22257423 -259.72882080]
[22.33730316 -274.44869995]
[19.45203018 -289.16860962]
[16.56675720 -303.88848877]
[1.50828409 -304.47082520]
[-13.00982952 -308.51074219]
[-26.20464134 -315.79043579]
[-37.36457062 -325.91726685]
[-45.88777542 -338.34512329]
[-51.31461334 -352.40377808]
[-53.35241699 -367.33508301]
[-51.89129639 -382.33383179]
[-47.01004410 -396.59109497]
[-38.97189713 -409.33807373]
[-28.21034813 -419.88726807]
[-15.30575085 -427.66983032]
[-0.95403564 -432.26602173]
[14.07082939 -433.42797852]
[28.95857048 -431.09304810]
[42.90631104 -425.38717651]
[55.16186905 -416.61801147]
[65.06431580 -405.25851440]
[72.07962036 -391.92126465]
[75.82946777 -377.32553101]
[76.11162567 -362.25845337]
[72.91087341 -347.53256226]
[66.39983368 -333.94198608]
[56.92962646 -322.21972656]
[45.01098251 -312.99786377]
[31.28664780 -306.77377319]
[34.17192078 -292.05386353]
[37.05719376 -277.33398438]
[39.94246674 -262.61407471]
[42.82773972 -247.89419556]
[45.71301270 -233.17430115]
[55.57381821 -226.16780090]
[58.09805679 -213.92803955]
[51.39834213 -202.90638733]
[54.06414032 -188.14517212]
[63.94015884 -176.99557495]
[58.77858734 -162.04000854]
[61.44438553 -147.27879333]
[64.11017609 -132.51757812]
[66.77597809 -117.75636292]
[71.05816650 -111.73268890]
[69.36985779 -102.75563812]
[71.81558990 -87.95636749]
[74.37142181 -73.17571259]
[77.03721619 -58.41449738]
[79.70301056 -43.65327835]
[91.74420166 -30.88704491]
[85.37384033 -13.60989094]
[88.25910950 1.11000049]
[91.14438629 15.82989216]
[94.02965546 30.54978371]
[96.91493225 45.26967621]
[111.19599152 46.33831787]
[124.71290588 51.06945038]
[136.54313660 59.14016724]
[145.87922668 69.99962616]
[152.08399963 82.90665436]
[154.73397827 96.98033142]
[153.64826965 111.26010132]
[148.90098572 124.77135468]
[140.81613159 136.59193420]
[129.94552612 145.91505432]
[117.03108978 152.10440063]
[119.69689178 166.86561584]
[122.36268616 181.62683105]
[132.49435425 189.60882568]
[134.41081238 201.95835876]
[127.62363434 211.97138977]
[130.06936646 226.77066040]
[132.51509094 241.56993103]
[134.96081543 256.36920166]
[139.30557251 242.01220703]
[146.59625244 228.90321350]
[156.50119019 217.63856506]
[168.56977844 208.73074341]
[182.25296021 202.58500671]
[196.92826843 199.48091125]
[211.92807007 199.55970764]
[226.56996155 202.81779480]
[240.18783569 209.10694885]
[252.16217041 218.14106750]
[261.94821167 229.50914001]
[269.10076904 242.69401550]
[273.29446411 257.09585571]
[274.33847046 272.05947876]
[272.18533325 286.90414429]
[266.93295288 300.95449829]
[258.82034302 313.57138062]
[248.21653748 324.18078613]
[235.60394287 332.30001831]
[221.55633545 337.55978394]
[206.71281433 339.72073364]
[191.74864197 338.68460083]
[177.34458923 334.49850464]
[164.15596008 327.35290527]
[152.78273010 317.57281494]
[143.74230957 305.60324097]
[137.44598389 291.98867798]
[134.17971802 277.34420776]
[138.44195557 292.58047485]
[127.91981506 303.12246704]
[124.38014221 317.69885254]
[120.84046936 332.27523804]
[125.10271454 347.51150513]
[114.58057404 358.05349731]
[127.63276672 365.63769531]
[138.00854492 376.58145142]
[144.87324524 389.99191284]
[147.67811584 404.77844238]
[146.20426941 419.74105835]
[140.57965088 433.66799927]
[131.26800537 445.43377686]
[119.03069305 454.09020996]
[104.86437988 458.94271851]
[89.91990662 459.60614014]
[86.38023376 474.18249512]
[82.84056091 488.75888062]
[79.30088806 503.33526611]
[75.76121521 517.91162109]
[72.22154236 532.48803711]
[68.68186951 547.06439209]
[81.99637604 554.14782715]
[93.13045502 564.32049561]
[101.38420105 576.94293213]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 207]
[21 206]
[22 205]
[23 204]
[24 203]
[25 202]
[26 201]
[36 191]
[38 189]
[39 188]
[40 187]
[42 185]
[43 157]
[44 156]
[45 155]
[46 154]
[48 151]
[49 150]
[50 149]
[60 138]
[61 137]
[62 136]
[63 135]
[64 134]
[67 132]
[68 131]
[69 130]
[71 129]
[72 128]
[73 126]
[74 125]
[75 124]
[76 123]
[78 121]
[79 120]
[81 117]
[82 116]
[83 115]
[84 114]
[85 113]
[86 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
