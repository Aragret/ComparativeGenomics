%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAUxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[147.68324280 849.75305176]
[133.38481140 845.20617676]
[119.36383057 839.86474609]
[105.66439819 833.74554443]
[92.32962799 826.86785889]
[79.40146637 819.25323486]
[66.92060852 810.92578125]
[54.92630386 801.91156006]
[43.45629883 792.23901367]
[32.54668808 781.93859863]
[22.23179054 771.04260254]
[12.54406452 759.58544922]
[3.51398921 747.60308838]
[-4.83002281 735.13323975]
[-12.46171761 722.21520996]
[-19.35708237 708.88952637]
[-25.49442291 695.19824219]
[-30.85442924 681.18432617]
[-35.42023468 666.89196777]
[-39.17747498 652.36602783]
[-42.11433029 637.65228271]
[-44.22155380 622.79705811]
[-45.49252319 607.84698486]
[-45.92323303 592.84924316]
[-45.51232910 577.85089111]
[-44.26110840 562.89916992]
[-42.17350769 548.04113770]
[-39.25608826 533.32354736]
[-35.51803970 518.79266357]
[-30.97111320 504.49426270]
[-25.62962151 490.47329712]
[-19.51036835 476.77389526]
[-12.63260937 463.43914795]
[-5.01798296 450.51101685]
[3.30955195 438.03018188]
[12.32379341 426.03591919]
[21.99637985 414.56594849]
[32.29687500 403.65637207]
[43.19287491 393.34152222]
[54.65009308 383.65383911]
[66.63247681 374.62380981]
[79.10233307 366.27984619]
[92.02042389 358.64819336]
[105.34609985 351.75286865]
[119.03743744 345.61557007]
[133.05136108 340.25564575]
[147.34376526 335.68988037]
[143.58746338 321.16781616]
[132.90953064 310.78366089]
[136.94445801 295.48562622]
[133.35697937 292.33297729]
[131.71189880 286.89324951]
[133.29939270 280.47518921]
[129.97712708 265.84774780]
[126.65486908 251.22027588]
[123.33260345 236.59281921]
[120.01034546 221.96534729]
[116.68808746 207.33789062]
[113.36582947 192.71043396]
[110.04357147 178.08297729]
[95.48130035 178.59646606]
[81.07382965 176.41743469]
[67.31472778 171.62049866]
[54.67534637 164.37002563]
[43.58868790 154.91436768]
[34.43455124 143.57746887]
[27.52654076 130.74771118]
[23.10130501 116.86460114]
[21.31044579 102.40374756]
[22.21531105 87.86054993]
[25.78490448 73.73322296]
[31.89693832 60.50573349]
[40.34202957 48.63122940]
[50.83086777 38.51650620]
[63.00412750 30.50806236]
[76.44477844 24.88025856]
[73.34066772 10.20495510]
[62.91503906 -1.69532919]
[67.85106659 -15.74826241]
[64.74695587 -30.42356491]
[61.64284515 -45.09886551]
[53.53448105 -32.47925949]
[39.24924850 -27.90410423]
[25.31815529 -33.46509933]
[18.11031342 -46.61983490]
[20.92105103 -61.35414124]
[32.46533585 -70.93168640]
[47.46527863 -70.97376251]
[59.06405640 -61.45952225]
[57.50353241 -76.37812805]
[55.94300842 -91.29673004]
[54.38248444 -106.21533966]
[52.82196426 -121.13394165]
[38.06191254 -124.51324463]
[25.20018005 -132.50415039]
[15.63190460 -144.23985291]
[10.39498329 -158.44737244]
[10.05747795 -173.58555603]
[14.65599918 -188.01234436]
[23.69173241 -200.16282654]
[36.18455124 -208.71900940]
[50.77932358 -212.75277710]
[65.89292145 -211.82658386]
[79.88594055 -206.04087830]
[91.24050903 -196.02326965]
[98.72497559 -182.86039734]
[101.52748871 -167.98005676]
[99.34403992 -152.99635315]
[92.41147614 -139.53460693]
[81.48179626 -129.05506897]
[67.74057007 -122.69446564]
[69.30109406 -107.77585602]
[70.86161041 -92.85725403]
[72.42213440 -77.93865204]
[73.98265839 -63.02004623]
[76.31814575 -48.20297623]
[79.42225647 -33.52767563]
[82.52636719 -18.85237312]
[92.72997284 -8.00176334]
[88.01597595 7.10084534]
[91.12008667 21.77614784]
[106.50245667 21.54273796]
[121.63652039 24.30531883]
[135.94436646 29.95839882]
[148.87963867 38.28610611]
[159.94837952 48.97043610]
[168.72790527 61.60339737]
[174.88296509 75.70258331]
[178.17854309 90.72959900]
[178.48875427 106.11061096]
[175.80177307 121.25828552]
[170.22021484 135.59417725]
[161.95719910 148.57087708]
[151.32826233 159.69282532]
[138.73930359 168.53532410]
[124.67102814 174.76071167]
[127.99328613 189.38816833]
[131.31555176 204.01564026]
[134.63780212 218.64309692]
[137.96006775 233.27055359]
[141.28233337 247.89801025]
[144.60458374 262.52548218]
[147.92684937 277.15292358]
[151.46652222 291.72930908]
[162.41313171 303.15219116]
[158.10952759 317.41152954]
[161.86582947 331.93356323]
[176.57952881 328.99655151]
[191.43475342 326.88916016]
[206.38478088 325.61804199]
[221.38255310 325.18716431]
[236.38090515 325.59790039]
[251.33262634 326.84893799]
[266.19067383 328.93637085]
[280.90829468 331.85363770]
[295.43920898 335.59152222]
[309.73767090 340.13830566]
[323.75869751 345.47964478]
[337.45816040 351.59872437]
[350.79299927 358.47634888]
[363.72122192 366.09082031]
[376.20214844 374.41821289]
[388.19650269 383.43234253]
[399.66656494 393.10479736]
[410.57626343 403.40515137]
[420.89123535 414.30105591]
[430.57907104 425.75814819]
[439.60922241 437.74044800]
[447.95333862 450.21020508]
[455.58511353 463.12820435]
[462.48059082 476.45379639]
[468.61801147 490.14508057]
[473.97811890 504.15893555]
[478.54403687 518.45129395]
[482.30139160 532.97717285]
[485.23834229 547.69091797]
[487.34570312 562.54614258]
[488.61676025 577.49615479]
[489.04757690 592.49395752]
[488.63681030 607.49230957]
[487.38568115 622.44396973]
[485.29818726 637.30206299]
[482.38088989 652.01965332]
[478.64294434 666.55053711]
[474.09613037 680.84899902]
[468.75473022 694.86999512]
[462.63558960 708.56945801]
[455.75793457 721.90423584]
[448.14340210 734.83245850]
[439.81594849 747.31335449]
[430.80181885 759.30767822]
[421.12930298 770.77770996]
[410.82888794 781.68737793]
[399.93295288 792.00231934]
[388.47583008 801.69006348]
[376.49349976 810.72021484]
[364.02371216 819.06427002]
[351.10568237 826.69598389]
[337.78005981 833.59143066]
[324.08874512 839.72882080]
[310.07489014 845.08886719]
[295.78250122 849.65472412]
[281.25659180 853.41198730]
[266.54287720 856.34893799]
[251.68763733 858.45617676]
[236.73759460 859.72723389]
[221.73982239 860.15795898]
[206.74147034 859.74713135]
[191.78976440 858.49597168]
[176.93173218 856.40844727]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 147]
[48 146]
[50 144]
[53 143]
[54 142]
[55 141]
[56 140]
[57 139]
[58 138]
[59 137]
[60 136]
[76 121]
[77 120]
[79 118]
[80 117]
[81 116]
[89 115]
[90 114]
[91 113]
[92 112]
[93 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
