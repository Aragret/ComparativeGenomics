%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUGxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[54.55458450 894.39233398]
[39.55717087 894.02197266]
[24.58633423 893.05566406]
[9.66575050 891.49493408]
[-5.18098640 889.34222412]
[-19.93040276 886.60101318]
[-34.55917358 883.27551270]
[-49.04417419 879.37109375]
[-63.36249542 874.89392090]
[-77.49149323 869.85101318]
[-91.40883636 864.25036621]
[-105.09251404 858.10083008]
[-118.52088928 851.41217041]
[-131.67272949 844.19488525]
[-144.52723694 836.46044922]
[-157.06408691 828.22113037]
[-169.26345825 819.48986816]
[-181.10606384 810.28051758]
[-192.57316589 800.60760498]
[-203.64665222 790.48645020]
[-214.30899048 779.93304443]
[-224.54333496 768.96411133]
[-234.33351135 757.59692383]
[-243.66401672 745.84954834]
[-252.52011108 733.74047852]
[-260.88778687 721.28887939]
[-268.75381470 708.51452637]
[-276.10577393 695.43750000]
[-282.93200684 682.07849121]
[-289.22174072 668.45874023]
[-294.96502686 654.59960938]
[-300.15277100 640.52313232]
[-304.77679443 626.25158691]
[-308.82977295 611.80743408]
[-312.30529785 597.21362305]
[-315.19787598 582.49310303]
[-317.50292969 567.66925049]
[-319.21682739 552.76550293]
[-320.33682251 537.80535889]
[-320.86120605 522.81256104]
[-320.78906250 507.81072998]
[-320.12060547 492.82363892]
[-318.85681152 477.87500000]
[-316.99972534 462.98837280]
[-314.55224609 448.18737793]
[-311.51828003 433.49539185]
[-307.90261841 418.93563843]
[-303.71093750 404.53112793]
[-298.94992065 390.30465698]
[-293.62707520 376.27871704]
[-287.75082397 362.47549438]
[-281.33041382 348.91680908]
[-274.37606812 335.62408447]
[-266.89874268 322.61834717]
[-258.91024780 309.92016602]
[-250.42323303 297.54962158]
[-241.45112610 285.52624512]
[-232.00811768 273.86911011]
[-222.10911560 262.59661865]
[-211.76977539 251.72656250]
[-201.00646973 241.27616882]
[-189.83619690 231.26194763]
[-178.27662659 221.69972229]
[-166.34602356 212.60464478]
[-154.06327820 203.99107361]
[-141.44778442 195.87261963]
[-128.51950073 188.26214600]
[-115.29888916 181.17167664]
[-101.80682373 174.61241150]
[-88.06465912 168.59472656]
[-74.09411621 163.12814331]
[-59.91727829 158.22129822]
[-45.55657578 153.88195801]
[-31.03470993 150.11698914]
[-16.37464142 146.93232727]
[-1.59955144 144.33302307]
[13.26719570 142.32316589]
[28.20209503 140.90596008]
[43.18153000 140.08363342]
[58.18181229 139.85748291]
[73.17922974 140.22787476]
[88.15006256 141.19422913]
[89.71058655 126.27561951]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[95.37081146 72.16385651]
[96.93133545 57.24525070]
[89.04498291 40.60532761]
[99.89920807 26.81573868]
[101.23744202 11.87555313]
[102.57567596 -3.06463194]
[103.91390991 -18.00481796]
[105.25214386 -32.94500351]
[106.59037781 -47.88518906]
[107.92861176 -62.82537079]
[93.66890717 -67.71662140]
[80.99449921 -75.87889862]
[70.64225769 -86.83766174]
[63.21404648 -99.95578003]
[59.14173508 -114.47059631]
[58.66208267 -129.53822327]
[61.80297852 -144.28265381]
[68.38180542 -157.84666443]
[78.01609039 -169.44166565]
[90.14569855 -178.39353943]
[104.06543732 -184.18182373]
[118.96602631 -186.47001648]
[133.98117065 -185.12506104]
[148.23791504 -180.22517395]
[160.90736389 -172.05520630]
[171.25296021 -161.09017944]
[178.67321777 -147.96755981]
[182.73672485 -133.45027161]
[183.20724487 -118.38236237]
[180.05741882 -103.63983917]
[173.47036743 -90.07981873]
[163.82905579 -78.49066162]
[151.69401550 -69.54614258]
[137.77076721 -63.76629257]
[122.86879730 -61.48713684]
[121.53056335 -46.54695129]
[120.19232941 -31.60676765]
[118.85409546 -16.66658211]
[117.51586151 -1.72639787]
[116.17762756 13.21378708]
[114.83939362 28.15397263]
[122.35250092 37.63446426]
[121.35987091 50.09233475]
[111.84993744 58.80577469]
[110.28941345 73.72438049]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[104.62918854 127.83614349]
[103.06866455 142.75474548]
[117.91541290 144.90739441]
[132.66484070 147.64860535]
[147.29360962 150.97401428]
[161.77862549 154.87840271]
[176.09695435 159.35556030]
[190.22596741 164.39843750]
[204.14332581 169.99905396]
[217.82702637 176.14854431]
[231.25541687 182.83718872]
[244.40727234 190.05439758]
[257.26181030 197.78878784]
[269.79867554 206.02812195]
[281.99807739 214.75935364]
[293.84069824 223.96868896]
[305.30783081 233.64155579]
[316.38134766 243.76268005]
[327.04370117 254.31605530]
[337.27807617 265.28497314]
[347.06826782 276.65209961]
[356.39880371 288.39947510]
[365.25494385 300.50851440]
[373.62265015 312.96005249]
[381.48873901 325.73443604]
[388.84069824 338.81143188]
[395.66699219 352.17037964]
[401.95675659 365.79016113]
[407.70007324 379.64926147]
[412.88787842 393.72570801]
[417.51193237 407.99728394]
[421.56494141 422.44140625]
[425.04049683 437.03524780]
[427.93310547 451.75570679]
[430.23822021 466.57955933]
[431.95214844 481.48330688]
[433.07217407 496.44342041]
[433.59658813 511.43624878]
[433.52450562 526.43804932]
[432.85607910 541.42517090]
[431.59231567 556.37384033]
[429.73526001 571.26043701]
[427.28784180 586.06146240]
[424.25390625 600.75341797]
[420.63827515 615.31323242]
[416.44665527 629.71771240]
[411.68566895 643.94421387]
[406.36285400 657.97015381]
[400.48663330 671.77337646]
[394.06628418 685.33209229]
[387.11193848 698.62487793]
[379.63464355 711.63061523]
[371.64620972 724.32879639]
[363.15921021 736.69940186]
[354.18713379 748.72277832]
[344.74417114 760.37994385]
[334.84518433 771.65246582]
[324.50588989 782.52252197]
[313.74261475 792.97296143]
[302.57235718 802.98718262]
[291.01281738 812.54943848]
[279.08224487 821.64459229]
[266.79949951 830.25817871]
[254.18403625 838.37664795]
[241.25578308 845.98718262]
[228.03517151 853.07769775]
[214.54313660 859.63696289]
[200.80097961 865.65466309]
[186.83044434 871.12133789]
[172.65362549 876.02819824]
[158.29293823 880.36755371]
[143.77108765 884.13256836]
[129.11102295 887.31726074]
[114.33593750 889.91662598]
[99.46920013 891.92651367]
[84.53430176 893.34375000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[82 136]
[83 135]
[84 134]
[86 132]
[87 131]
[88 130]
[90 127]
[91 126]
[92 125]
[93 124]
[94 123]
[95 122]
[96 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
