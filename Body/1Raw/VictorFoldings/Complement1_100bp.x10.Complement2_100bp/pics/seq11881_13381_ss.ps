%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGGxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[161.80358887 439.13250732]
[167.04293823 425.03567505]
[174.65074158 412.06292725]
[184.39579773 400.60845947]
[195.98197937 391.02035522]
[209.05718994 383.58999634]
[204.02027893 369.46096802]
[198.98336792 355.33193970]
[193.94644165 341.20291138]
[188.90953064 327.07388306]
[175.65206909 327.25598145]
[162.96180725 323.33737183]
[152.07785034 315.68600464]
[144.06747437 305.03500366]
[139.72140503 292.41241455]
[139.47587585 279.04205322]
[143.36880493 266.22482300]
[151.03479004 255.21209717]
[161.73931885 247.08363342]
[157.12530518 232.81089783]
[152.51129150 218.53816223]
[146.53973389 204.77806091]
[133.60162354 197.39872742]
[133.67706299 181.57769775]
[126.40382385 168.45899963]
[119.13059998 155.34030151]
[111.85736847 142.22161865]
[105.27760315 155.70147705]
[90.67016602 159.11068726]
[78.80310822 149.93611145]
[78.42439270 134.94088745]
[89.81318665 125.17895508]
[104.57275391 127.84547424]
[98.29539490 114.22215271]
[86.99069214 105.99443817]
[88.08129120 92.05520630]
[81.80393219 78.43189240]
[75.52657318 64.80857086]
[69.24920654 51.18525696]
[62.97184753 37.56193924]
[43.78092957 31.61315346]
[35.28319931 13.74440384]
[42.55258179 -4.32962084]
[35.67316818 -17.65904999]
[28.79375648 -30.98847961]
[21.91434288 -44.31790924]
[15.03493023 -57.64733887]
[8.15551853 -70.97676849]
[1.27610552 -84.30619812]
[-5.60330725 -97.63562775]
[-12.48271942 -110.96505737]
[-27.75587273 -111.78849030]
[-40.48218918 -120.09136200]
[-47.29857635 -133.55996704]
[-46.46374893 -148.53190613]
[-38.30189133 -160.99183655]
[-45.18130493 -174.32125854]
[-58.38602829 -183.03594971]
[-57.34751892 -197.89430237]
[-72.13468933 -202.79096985]
[-78.92150879 -216.40692139]
[-74.16215515 -230.47404480]
[-81.04156494 -243.80346680]
[-87.92097473 -257.13290405]
[-94.63763428 -263.32357788]
[-94.80191803 -270.71240234]
[-101.48210907 -284.14276123]
[-108.16230774 -297.57315063]
[-122.41472626 -292.81765747]
[-137.19029236 -290.09210205]
[-152.20140076 -289.44949341]
[-167.15583801 -290.90237427]
[-181.76252747 -294.42245483]
[-195.73713684 -299.94116211]
[-208.80764771 -307.35116577]
[-220.71963501 -316.50814819]
[-231.24124146 -327.23391724]
[-240.16764832 -339.31967163]
[-247.32510376 -352.53015137]
[-252.57429504 -366.60824585]
[-255.81301880 -381.27987671]
[-256.97827148 -396.25946045]
[-256.04733276 -411.25543213]
[-253.03834534 -425.97592163]
[-248.00987244 -440.13433838]
[-241.05981445 -453.45507812]
[-232.32342529 -465.67889404]
[-221.97077942 -476.56784058]
[-210.20338440 -485.90991211]
[-197.25030518 -493.52331543]
[-183.36367798 -499.25985718]
[-168.81379700 -503.00781250]
[-153.88389587 -504.69427490]
[-138.86459351 -504.28643799]
[-124.04821777 -501.79217529]
[-109.72319794 -497.26007080]
[-96.16835785 -490.77835083]
[-83.64756775 -482.47320557]
[-72.40452576 -472.50622559]
[-62.65810013 -461.07150269]
[-54.59799576 -448.39157104]
[-48.38110733 -434.71322632]
[-44.12845230 -420.30279541]
[-41.92280579 -405.44070435]
[-41.80710220 -390.41632080]
[-43.78359604 -375.52203369]
[-47.81380844 -361.04779053]
[-53.81929779 -347.27536011]
[-61.68316269 -334.47277832]
[-71.25232697 -322.88928223]
[-82.34053040 -312.75036621]
[-94.73192596 -304.25332642]
[-88.05173492 -290.82296753]
[-81.37153625 -277.39257812]
[-74.59154510 -264.01232910]
[-67.71213531 -250.68289185]
[-60.83272171 -237.35345459]
[-46.60942078 -233.08340454]
[-39.44283676 -219.66346741]
[-44.01808929 -204.77371216]
[-31.30542755 -197.01243591]
[-31.85187531 -181.20066833]
[-24.97246361 -167.87124634]
[-10.08805180 -167.30566406]
[2.59919763 -159.31256104]
[9.62856197 -145.95387268]
[9.02359486 -130.77062988]
[0.84670961 -117.84446716]
[7.72612238 -104.51503754]
[14.60553455 -91.18560791]
[21.48494720 -77.85617828]
[28.36435890 -64.52674866]
[35.24377060 -51.19731903]
[42.12318420 -37.86789322]
[49.00259781 -24.53846169]
[55.88201141 -11.20903301]
[66.14031982 -10.83743191]
[75.39105988 -6.20502329]
[81.93499756 1.91223466]
[84.53914642 12.09171963]
[82.66869354 22.51326180]
[76.59516144 31.28458023]
[82.87252808 44.90789413]
[89.14988708 58.53121185]
[95.42724609 72.15452576]
[101.70460510 85.77784729]
[113.00930786 94.00556183]
[111.91870880 107.94479370]
[118.19606781 121.56810760]
[124.97605896 134.94837952]
[132.24929810 148.06707764]
[139.52252197 161.18577576]
[146.79574585 174.30447388]
[160.25408936 182.62213135]
[159.65843201 197.50482178]
[160.32890320 182.51982117]
[166.96337891 169.06680298]
[178.44384766 159.41284180]
[192.83563232 155.18481445]
[207.71348572 157.09519958]
[220.57022095 164.82206726]
[229.23924255 177.06330872]
[232.25967407 191.75607300]
[229.12251282 206.42434692]
[220.35644531 218.59628296]
[207.43869019 226.22068787]
[192.54611206 228.01272583]
[178.18838501 223.67039490]
[166.78402710 213.92414856]
[171.39804077 228.19688416]
[176.01205444 242.46961975]
[192.84837341 243.56044006]
[207.94134521 251.01795959]
[218.98809814 263.67282104]
[224.31524658 279.56503296]
[223.13233948 296.24771118]
[215.64903259 311.16354370]
[203.03855896 322.03698730]
[208.07546997 336.16601562]
[213.11239624 350.29504395]
[218.14930725 364.42407227]
[223.18621826 378.55310059]
[238.01315308 376.03649902]
[253.05183411 376.13296509]
[267.84524536 378.83963013]
[281.94384766 384.07415771]
[294.91918945 391.67755127]
[306.37698364 401.41873169]
[315.96902466 413.00164795]
[323.40380859 426.07434082]
[328.45541382 440.23950195]
[330.97033691 455.06671143]
[330.87216187 470.10537720]
[328.16381836 484.89849854]
[322.92767334 498.99649048]
[315.32281494 511.97097778]
[305.58035278 523.42767334]
[293.99633789 533.01837158]
[280.92282104 540.45172119]
[266.75708008 545.50170898]
[251.92956543 548.01495361]
[236.89091492 547.91503906]
[222.09811401 545.20507812]
[208.00070190 539.96728516]
[195.02708435 532.36096191]
[183.57150269 522.61718750]
[173.98210144 511.03210449]
[166.55027771 497.95773315]
[161.50187683 483.79141235]
[158.99031067 468.96362305]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 182]
[7 181]
[8 180]
[9 179]
[10 178]
[19 171]
[20 170]
[21 169]
[22 155]
[24 153]
[25 152]
[26 151]
[27 150]
[33 149]
[34 148]
[36 146]
[37 145]
[38 144]
[39 143]
[40 142]
[43 136]
[44 135]
[45 134]
[46 133]
[47 132]
[48 131]
[49 130]
[50 129]
[51 128]
[56 123]
[57 122]
[59 120]
[62 117]
[63 116]
[64 115]
[66 114]
[67 113]
[68 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
