%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[-54.70925522 345.32345581]
[-50.42529678 359.71667480]
[-47.84128571 374.50988770]
[-46.99217606 389.50305176]
[-47.88944626 404.49343872]
[-50.52096176 419.27828979]
[-54.85113525 433.65765381]
[-60.82140350 447.43707275]
[-68.35102844 460.43020630]
[-77.33818817 472.46130371]
[-87.66132355 483.36770630]
[-99.18083954 493.00186157]
[-111.74094391 501.23352051]
[-125.17177582 507.95135498]
[-139.29170227 513.06451416]
[-153.90975952 516.50384521]
[-168.82826233 518.22277832]
[-183.84544373 518.19818115]
[-198.75822449 516.43029785]
[-213.36492920 512.94305420]
[-227.46801758 507.78366089]
[-240.87673950 501.02182007]
[-253.40979004 492.74899292]
[-264.89764404 483.07711792]
[-275.18496704 472.13693237]
[-284.13262939 460.07641602]
[-291.61959839 447.05868530]
[-297.54467773 433.25976562]
[-301.82766724 418.86627197]
[-304.41067505 404.07287598]
[-305.25878906 389.07962036]
[-304.36053467 374.08932495]
[-301.72802734 359.30465698]
[-297.39688110 344.92556763]
[-291.42568970 331.14654541]
[-283.89520264 318.15393066]
[-274.90725708 306.12341309]
[-264.58337402 295.21771240]
[-253.06323242 285.58432007]
[-240.50257874 277.35348511]
[-227.07128906 270.63656616]
[-212.95103455 265.52435303]
[-198.33274841 262.08599854]
[-183.41412354 260.36804199]
[-168.39694214 260.39364624]
[-153.48426819 262.16253662]
[-138.87780762 265.65072632]
[-124.77507019 270.81109619]
[-111.36679077 277.57382202]
[-98.83429718 285.84747314]
[-89.17348480 274.37277222]
[-79.51267242 262.89807129]
[-69.85186768 251.42337036]
[-60.19105530 239.94866943]
[-50.53024292 228.47396851]
[-40.86943436 216.99926758]
[-31.20862198 205.52456665]
[-21.54781151 194.04986572]
[-11.88700199 182.57516479]
[-26.12520599 187.29466248]
[-41.05985641 185.89602661]
[-54.17420578 178.61495972]
[-63.25825119 166.67845154]
[-66.78117371 152.09802246]
[-64.14929962 137.33071899]
[-55.80614853 124.86509705]
[-43.15768051 116.80182648]
[-28.33539200 114.49971771]
[-13.83709431 118.34671021]
[-2.10600686 127.69452667]
[4.88097572 140.96788025]
[5.94642448 155.92999268]
[0.90992701 170.06089783]
[12.59750843 160.65875244]
[17.66442490 146.65248108]
[33.26695251 144.03108215]
[44.95453262 134.62892151]
[56.64211273 125.22677612]
[61.70903015 111.22050476]
[77.31156158 108.59910583]
[88.99913788 99.19695282]
[74.59527588 95.01023102]
[68.74697113 81.19728851]
[75.76538086 67.94052124]
[90.47679138 65.01232147]
[102.03649902 74.57124329]
[101.92384338 89.56932831]
[108.90213776 75.37024689]
[123.77274323 74.52503967]
[136.12725830 66.01821136]
[148.48176575 57.51138687]
[155.46006775 43.31230545]
[170.33067322 42.46709442]
[182.68518066 33.96026611]
[195.03968811 25.45343971]
[207.39419556 16.94661331]
[214.37249756 2.74753118]
[229.24310303 1.90232086]
[241.59761047 -6.60450602]
[234.09497070 -19.60260391]
[227.64875793 -33.15570068]
[222.29972839 -47.17811203]
[218.08169556 -61.58117676]
[215.02133179 -76.27383423]
[213.13798523 -91.16320038]
[212.44357300 -106.15512848]
[212.94245911 -121.15483093]
[214.63151550 -136.06748962]
[217.50004578 -150.79879761]
[221.52992249 -165.25563049]
[226.69567871 -179.34660339]
[232.96463013 -192.98258972]
[240.29714966 -206.07740784]
[248.64688110 -218.54824829]
[257.96105957 -230.31628418]
[268.18072510 -241.30709839]
[279.24136353 -251.45120239]
[291.07296753 -260.68447876]
[303.60073853 -268.94851685]
[316.74551392 -276.19110107]
[330.42416382 -282.36642456]
[344.55023193 -287.43545532]
[359.03433228 -291.36611938]
[373.78497314 -294.13360596]
[388.70886230 -295.72036743]
[403.71163940 -296.11642456]
[418.69845581 -295.31924438]
[433.57455444 -293.33386230]
[448.24588013 -290.17285156]
[462.61968994 -285.85617065]
[476.60510254 -280.41116333]
[490.11367798 -273.87219238]
[503.06005859 -266.28060913]
[515.36230469 -257.68444824]
[526.94274902 -248.13803101]
[537.72808838 -237.70172119]
[547.65014648 -226.44149780]
[556.64624023 -214.42855835]
[564.65942383 -201.73884583]
[571.63909912 -188.45259094]
[577.54107666 -174.65380859]
[582.32806396 -160.42971802]
[585.96984863 -145.87026978]
[588.44335938 -131.06750488]
[589.73291016 -116.11501312]
[589.83044434 -101.10732269]
[588.73529053 -86.13933563]
[586.45440674 -71.30567169]
[583.00213623 -56.70012283]
[578.40039062 -42.41502762]
[572.67822266 -28.54070282]
[565.87182617 -15.16486740]
[558.02423096 -2.37208986]
[549.18499756 9.75675011]
[539.41015625 21.14496803]
[528.76135254 31.72056198]
[517.30596924 41.41667175]
[505.11642456 50.17198944]
[492.26983643 57.93116760]
[478.84735107 64.64514160]
[464.93389893 70.27146912]
[450.61740112 74.77458191]
[435.98837280 78.12599182]
[421.13934326 80.30453491]
[406.16415405 81.29641724]
[391.15750122 81.09537506]
[376.21426392 79.70267487]
[361.42889404 77.12712860]
[346.89492798 73.38502502]
[332.70419312 68.50000763]
[318.94644165 62.50297165]
[305.70864868 55.43183136]
[293.07452393 47.33129120]
[281.12393188 38.25256729]
[269.93240356 28.25306320]
[259.57073975 17.39599228]
[250.10443115 5.75000286]
[237.74992371 14.25683022]
[231.65530396 27.84744644]
[215.90101624 29.30112267]
[203.54650879 37.80794907]
[191.19200134 46.31477737]
[178.83749390 54.82160187]
[172.74287415 68.41221619]
[156.98858643 69.86589813]
[144.63407898 78.37271881]
[132.27957153 86.87954712]
[126.18495178 100.47016907]
[110.43067169 101.92384338]
[98.40129089 110.88453674]
[86.71370697 120.28668976]
[80.81082153 134.96546936]
[66.04426575 136.91435242]
[54.35668564 146.31651306]
[42.66910172 155.71865845]
[36.76621246 170.39743042]
[21.99965858 172.34632874]
[10.31207848 181.74847412]
[-0.41230157 192.23597717]
[-10.07311153 203.71067810]
[-19.73392296 215.18537903]
[-29.39473343 226.66007996]
[-39.05554199 238.13478088]
[-48.71635437 249.60948181]
[-58.37716293 261.08416748]
[-68.03797150 272.55886841]
[-77.69878387 284.03356934]
[-87.35959625 295.50827026]
[-77.07154083 306.44778442]
[-68.12308502 318.50769043]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 208]
[51 207]
[52 206]
[53 205]
[54 204]
[55 203]
[56 202]
[57 201]
[58 200]
[59 199]
[73 198]
[74 197]
[76 195]
[77 194]
[78 193]
[80 191]
[81 190]
[87 189]
[89 187]
[90 186]
[91 185]
[93 183]
[94 182]
[95 181]
[96 180]
[98 178]
[99 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
