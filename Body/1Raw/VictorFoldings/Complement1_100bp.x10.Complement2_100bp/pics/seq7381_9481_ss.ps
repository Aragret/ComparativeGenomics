%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[174.77415466 577.28582764]
[172.54904175 562.45178223]
[170.32391357 547.61773682]
[168.09880066 532.78375244]
[165.54296875 518.00305176]
[162.65769958 503.28317261]
[159.77243042 488.56329346]
[156.88716125 473.84338379]
[152.51574707 467.88415527]
[154.07022095 458.88296509]
[151.40441895 444.12173462]
[148.73863220 429.36053467]
[146.07283020 414.59930420]
[136.19680786 403.44970703]
[141.35838318 388.49414062]
[138.69258118 373.73294067]
[136.02679443 358.97171021]
[132.92268372 344.29641724]
[129.38301086 329.72003174]
[125.84333801 315.14364624]
[122.30319977 311.93795776]
[120.73927307 306.47433472]
[122.42214966 300.08062744]
[119.31803894 285.40533447]
[116.21392822 270.73004150]
[113.10981750 256.05471802]
[110.00570679 241.37942505]
[100.93721008 253.32774353]
[86.09542084 255.50061035]
[73.98239899 246.65332031]
[71.53702545 231.85398865]
[80.16012573 219.58035278]
[94.91199493 216.86331177]
[107.34156799 225.25851440]
[105.55909729 210.36479187]
[103.77663422 195.47106934]
[94.58176422 183.75341797]
[100.62435150 169.13159180]
[98.84188080 154.23786926]
[97.05941772 139.34416199]
[95.27695465 124.45043945]
[93.49448395 109.55672455]
[86.56858826 122.86205292]
[74.30562592 131.50033569]
[59.44519043 133.54174805]
[45.30712891 128.53022766]
[35.04992676 117.58538055]
[30.96506691 103.15229797]
[33.96511841 88.45536804]
[43.37986374 76.77793121]
[57.10601807 70.72874451]
[72.07713318 71.65922546]
[84.94861603 79.36148834]
[92.84495544 92.11486053]
[93.51473999 77.12982178]
[80.67884064 68.81195831]
[73.77534485 55.27539062]
[74.56908417 40.20103073]
[82.74687195 27.63203049]
[96.02851105 20.88936806]
[96.69829559 5.90432835]
[97.36808777 -9.08071041]
[98.03787231 -24.06575012]
[98.70765686 -39.05078888]
[99.37744141 -54.03582764]
[85.65910339 -60.52297211]
[75.49695587 -71.73786163]
[70.41645813 -85.95060730]
[71.16248322 -100.98493958]
[77.59024048 -114.55139160]
[88.69210052 -124.59600067]
[102.75542450 -129.61119080]
[103.42520905 -144.59623718]
[103.76018524 -159.59249878]
[103.76018524 -174.59249878]
[103.76018524 -189.59249878]
[103.76018524 -204.59249878]
[95.20836639 -214.24801636]
[95.51716614 -226.74154663]
[103.97580719 -235.38897705]
[104.19913483 -250.38731384]
[104.31080627 -265.38690186]
[104.31080627 -280.38690186]
[104.31080627 -295.38690186]
[103.97583008 -310.38314819]
[103.30604553 -325.36819458]
[102.63626099 -340.35324097]
[101.96647644 -355.33828735]
[93.62068176 -368.77920532]
[100.78195953 -381.83926392]
[100.11217499 -396.82431030]
[99.44239044 -411.80932617]
[98.77260590 -426.79437256]
[98.10282135 -441.77941895]
[83.46993256 -445.57019043]
[70.60536194 -453.50708008]
[60.65302658 -464.88436890]
[54.49787903 -478.69036865]
[52.68722534 -493.69744873]
[55.38207245 -508.57122803]
[62.34279251 -521.98913574]
[72.95044708 -532.75799561]
[86.26181030 -539.92034912]
[101.09324646 -542.83923340]
[116.12594604 -541.25518799]
[130.02322388 -535.30895996]
[141.54933167 -525.52941895]
[149.67938232 -512.78601074]
[153.69046021 -498.21197510]
[153.22589111 -483.10317993]
[148.32699585 -468.80313110]
[139.42936707 -456.58331299]
[127.32420349 -447.53033447]
[113.08786011 -442.44918823]
[113.75764465 -427.46417236]
[114.42742920 -412.47912598]
[115.09721375 -397.49407959]
[115.76699829 -382.50903320]
[124.06488800 -370.13995361]
[116.95151520 -356.00805664]
[117.62129974 -341.02301025]
[118.29108429 -326.03799438]
[118.96086884 -311.05294800]
[121.30219269 -308.41656494]
[122.48287964 -304.51513672]
[121.92227173 -299.90655518]
[119.31080627 -295.38690186]
[119.31080627 -280.38690186]
[119.31080627 -265.38690186]
[122.45430756 -258.69808960]
[119.19747925 -250.16398621]
[118.97415161 -235.16564941]
[128.33486938 -220.32167053]
[118.76018524 -204.59249878]
[118.76018524 -189.59249878]
[118.76018524 -174.59249878]
[118.76018524 -159.59249878]
[120.98145294 -156.85418701]
[121.98675537 -152.90394592]
[121.22092438 -148.32499695]
[118.41024780 -143.92645264]
[117.74046326 -128.94140625]
[131.30027771 -122.69154358]
[141.46173096 -111.69653320]
[146.65351868 -97.61071777]
[146.05526733 -82.56978607]
[139.72703552 -68.86697388]
[128.60485840 -58.60342789]
[114.36248016 -53.36604309]
[113.69269562 -38.38100433]
[113.02291107 -23.39596367]
[112.35312653 -8.41092491]
[111.68333435 6.57411337]
[111.01354980 21.55915260]
[123.64068604 29.45985794]
[130.66450500 42.70832062]
[130.11021423 57.79338455]
[122.02657318 70.66007233]
[108.49977875 77.79960632]
[107.82999420 92.78464508]
[108.38820648 107.77425385]
[110.17066956 122.66797638]
[111.95313263 137.56169128]
[113.73560333 152.45541382]
[115.51806641 167.34912109]
[124.84043121 180.13208008]
[118.67034912 193.68861389]
[120.45281982 208.58232117]
[122.23528290 223.47604370]
[124.68100739 238.27531433]
[127.78511810 252.95062256]
[130.88923645 267.62591553]
[133.99334717 282.30120850]
[137.09745789 296.97653198]
[140.41970825 311.60397339]
[143.95938110 326.18035889]
[147.49905396 340.75674438]
[150.60614014 343.78988647]
[152.40544128 347.30087280]
[152.90734863 350.81988525]
[152.27372742 353.92877197]
[150.78800964 356.30590820]
[153.45379639 371.06713867]
[156.11959839 385.82833862]
[166.18629456 398.03378296]
[160.83404541 411.93350220]
[163.49984741 426.69473267]
[166.16563416 441.45593262]
[168.83143616 456.21716309]
[171.60704041 470.95812988]
[174.49232483 485.67800903]
[177.37759399 500.39791870]
[180.26286316 515.11779785]
[183.69493103 519.05072021]
[185.13153076 523.46545410]
[184.72334290 527.52111816]
[182.93284607 530.55859375]
[185.15795898 545.39263916]
[187.38308716 560.22668457]
[189.60820007 575.06072998]
[204.08654785 580.02423096]
[214.59141541 591.15551758]
[218.70887756 605.89678955]
[215.49275208 620.86059570]
[205.68208313 632.60833740]
[191.53129578 638.44049072]
[176.29214478 637.01684570]
[163.46646118 628.66455078]
[156.00151062 615.30291748]
[155.61265564 600.00238037]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 200]
[2 199]
[3 198]
[4 197]
[5 193]
[6 192]
[7 191]
[8 190]
[10 189]
[11 188]
[12 187]
[13 186]
[15 184]
[16 183]
[17 182]
[18 177]
[19 176]
[20 175]
[23 174]
[24 173]
[25 172]
[26 171]
[27 170]
[34 169]
[35 168]
[36 167]
[38 165]
[39 164]
[40 163]
[41 162]
[42 161]
[54 160]
[55 159]
[60 154]
[61 153]
[62 152]
[63 151]
[64 150]
[65 149]
[72 142]
[73 141]
[74 137]
[75 136]
[76 135]
[77 134]
[80 132]
[81 131]
[82 129]
[83 128]
[84 127]
[85 123]
[86 122]
[87 121]
[88 120]
[90 118]
[91 117]
[92 116]
[93 115]
[94 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
