%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[3.09382939 456.75860596]
[1.03785098 471.63375854]
[-2.70040131 486.17761230]
[-8.07219124 500.20050049]
[-15.00748730 513.51965332]
[-23.41587257 525.96136475]
[-33.18772888 537.36352539]
[-44.19565582 547.57739258]
[-56.29614639 556.46984863]
[-69.33144379 563.92498779]
[-83.13160706 569.84552002]
[-97.51672363 574.15441895]
[-112.29924774 576.79534912]
[-127.28646851 577.73400879]
[-142.28298950 576.95806885]
[-157.09330750 574.47766113]
[-171.52432251 570.32513428]
[-185.38792419 564.55468750]
[-198.50335693 557.24145508]
[-210.69961548 548.48077393]
[-221.81773376 538.38696289]
[-231.71273804 527.09155273]
[-240.25564575 514.74176025]
[-247.33505249 501.49868774]
[-252.85868835 487.53491211]
[-256.75454712 473.03247070]
[-258.97180176 458.18048096]
[-259.48159790 443.17257690]
[-258.27725220 428.20434570]
[-255.37446594 413.47100830]
[-250.81111145 399.16458130]
[-244.64665222 385.47161865]
[-236.96145630 372.57064819]
[-227.85572815 360.62979126]
[-217.44818115 349.80480957]
[-205.87449646 340.23675537]
[-193.28555298 332.05041504]
[-179.84547424 325.35247803]
[-165.72949219 320.23028564]
[-151.12162781 316.75064087]
[-136.21232605 314.95886230]
[-121.19596100 314.87832642]
[-106.26829529 316.51010132]
[-91.62395477 319.83288574]
[-77.45384979 324.80340576]
[-63.94271469 331.35678101]
[-55.90153885 318.69427490]
[-47.86036682 306.03173828]
[-39.81919479 293.36920166]
[-31.77802086 280.70669556]
[-32.18519974 277.20431519]
[-30.91620445 273.33074951]
[-27.81503677 269.87588501]
[-23.08439064 267.66949463]
[-14.48582649 255.37866211]
[-5.97899961 243.02415466]
[-5.24451637 228.14767456]
[8.90222263 221.06385803]
[17.31684113 208.64636230]
[25.73145866 196.22886658]
[34.14607620 183.81137085]
[42.56069565 171.39387512]
[50.97531509 158.97637939]
[51.70979691 144.09989929]
[65.85653687 137.01609802]
[74.27115631 124.59859467]
[82.68577576 112.18109894]
[79.20205688 96.04940796]
[88.35817719 82.31866455]
[104.58954620 79.33365631]
[112.81835938 66.79225922]
[121.04716492 54.25085831]
[129.27597046 41.70945740]
[137.50477600 29.16805649]
[145.73358154 16.62665558]
[153.96240234 4.08525610]
[162.19120789 -8.45614433]
[163.29269409 -24.23896027]
[176.74382019 -30.63556480]
[169.15501404 -45.32575989]
[170.00515747 -61.74443436]
[178.96765137 -75.41522980]
[193.51710510 -82.65879822]
[209.64021301 -81.58286285]
[217.68139648 -94.24539185]
[219.64007568 -103.16735077]
[225.93772888 -107.03533936]
[234.16653442 -119.57673645]
[236.25784302 -128.46855164]
[242.61238098 -132.24234009]
[251.02700806 -144.65983582]
[259.44161987 -157.07733154]
[267.85623169 -169.49482727]
[276.08505249 -182.03622437]
[284.12622070 -194.69874573]
[292.16738892 -207.36128235]
[300.20855713 -220.02380371]
[308.24975586 -232.68632507]
[296.59240723 -242.15325928]
[286.11294556 -252.90953064]
[276.95309448 -264.80969238]
[269.23675537 -277.69281006]
[263.06826782 -291.38464355]
[258.53103638 -305.70001221]
[255.68641663 -320.44534302]
[254.57292175 -335.42120361]
[255.20556641 -350.42507935]
[257.57583618 -365.25405884]
[261.65164185 -379.70758057]
[267.37786865 -393.59017944]
[274.67709351 -406.71414185]
[283.45059204 -418.90191650]
[293.57968140 -429.98873901]
[304.92742920 -439.82467651]
[317.34036255 -448.27664185]
[330.65057373 -455.23037720]
[344.67810059 -460.59185791]
[359.23318481 -464.28854370]
[374.11904907 -466.27044678]
[389.13433838 -466.51077271]
[404.07598877 -465.00628662]
[418.74194336 -461.77731323]
[432.93383789 -456.86749268]
[446.45977783 -450.34329224]
[459.13684082 -442.29287720]
[470.79354858 -432.82519531]
[481.27230835 -422.06820679]
[490.43133545 -410.16741943]
[498.14682007 -397.28381348]
[504.31442261 -383.59155273]
[508.85067749 -369.27587891]
[511.69430542 -354.53036499]
[512.80682373 -339.55441284]
[512.17315674 -324.55059814]
[509.80191040 -309.72177124]
[505.72512817 -295.26852417]
[499.99798584 -281.38629150]
[492.69787598 -268.26284790]
[483.92358398 -256.07562256]
[473.79373169 -244.98948669]
[462.44531250 -235.15432739]
[450.03182983 -226.70318604]
[436.72116089 -219.75032043]
[422.69329834 -214.38978577]
[408.13793945 -210.69407654]
[393.25195312 -208.71316528]
[378.23666382 -208.47383118]
[363.29510498 -209.97932434]
[348.62936401 -213.20928955]
[334.43777466 -218.12004089]
[320.91226196 -224.64515686]
[312.87109375 -211.98263550]
[304.82992554 -199.32009888]
[296.78875732 -186.65757751]
[288.74758911 -173.99505615]
[288.89526367 -169.22145081]
[286.04574585 -164.30441284]
[280.27374268 -161.08021545]
[271.85913086 -148.66271973]
[263.44448853 -136.24522400]
[255.02987671 -123.82772064]
[246.70793152 -111.34793091]
[238.47912598 -98.80652618]
[230.34391785 -86.20421600]
[222.30273438 -73.54169464]
[229.41062927 -61.88000107]
[230.80723572 -48.22795868]
[226.16331482 -35.24400711]
[216.33143616 -25.48118782]
[203.19017029 -20.88519669]
[189.28521729 -22.40675545]
[188.77230835 -7.52098513]
[174.73260498 -0.22733647]
[166.50379944 12.31406403]
[158.27499390 24.85546494]
[150.04617310 37.39686584]
[141.81736755 49.93826294]
[133.58856201 62.47966385]
[125.35975647 75.02106476]
[117.13095093 87.56246185]
[121.16562653 99.57807922]
[117.61300659 111.74494171]
[107.74661255 119.70156860]
[95.10327148 120.59571838]
[86.68865204 133.01321411]
[78.27403259 145.43070984]
[76.93768311 161.19537354]
[63.39281082 167.39100647]
[54.97819138 179.80850220]
[46.56357193 192.22599792]
[38.14895630 204.64349365]
[29.73433685 217.06098938]
[21.31971741 229.47848511]
[19.98336411 245.24314880]
[6.43849611 251.43878174]
[4.21503973 260.29846191]
[-2.19498849 263.97723389]
[-10.79355240 276.26806641]
[-19.11549568 288.74786377]
[-27.15666962 301.41040039]
[-35.19784164 314.07290649]
[-43.23901367 326.73544312]
[-51.28018951 339.39794922]
[-39.60335541 348.83984375]
[-29.07895660 359.55130005]
[-19.84419823 371.39260864]
[-12.01947117 384.20944214]
[-5.70678902 397.83471680]
[-0.98845047 412.09075928]
[2.07403135 426.79174805]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 203]
[47 202]
[48 201]
[49 200]
[50 199]
[54 198]
[55 197]
[56 195]
[58 193]
[59 192]
[60 191]
[61 190]
[62 189]
[63 188]
[65 186]
[66 185]
[67 184]
[70 180]
[71 179]
[72 178]
[73 177]
[74 176]
[75 175]
[76 174]
[77 173]
[79 171]
[84 165]
[85 164]
[87 163]
[88 162]
[90 161]
[91 160]
[92 159]
[93 158]
[94 155]
[95 154]
[96 153]
[97 152]
[98 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
