%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[294.61489868 297.91696167]
[283.81274414 287.50958252]
[273.01058960 277.10220337]
[262.20843506 266.69482422]
[251.40626526 256.28744507]
[240.60411072 245.88008118]
[227.43594360 252.96246338]
[212.70344543 255.63154602]
[197.84721375 253.61355591]
[184.32383728 247.09364319]
[173.46316528 236.69900513]
[166.33752441 223.43853760]
[163.65583801 208.60488892]
[165.69311523 193.64855957]
[172.26229858 180.03593445]
[161.46014404 169.62857056]
[150.65798950 159.22119141]
[139.85583496 148.81381226]
[129.05368042 138.40644836]
[118.25151825 127.99907684]
[104.31700134 133.14256287]
[89.52985382 131.74023438]
[76.81060791 124.06903076]
[68.67139435 111.64408112]
[66.71974182 96.91935730]
[71.34111023 82.80308533]
[60.53895187 72.39570618]
[49.73679352 61.98833847]
[38.55482101 51.99016571]
[27.00851822 42.41504669]
[15.46221733 32.83992386]
[3.91591549 23.26480484]
[-7.63038635 13.68968582]
[-25.84988976 11.01925182]
[-31.30075645 -5.66172457]
[-42.98833847 -15.06387520]
[-54.67591858 -24.46602631]
[-64.99344635 -13.56672096]
[-76.15456390 -3.53298092]
[-88.08686066 5.57011986]
[-100.71297455 13.68354321]
[-113.95100403 20.75466919]
[-127.71510315 26.73764038]
[-141.91600037 31.59365273]
[-156.46159363 35.29121017]
[-171.25755310 37.80633926]
[-186.20793152 39.12272263]
[-201.21574402 39.23182297]
[-216.18365479 38.13293457]
[-231.01461792 35.83318329]
[-245.61244202 32.34748459]
[-259.88244629 27.69844437]
[-273.73205566 21.91621399]
[-287.07150269 15.03829479]
[-299.81423950 7.10929298]
[-311.87762451 -1.81936872]
[-323.18341064 -11.68978310]
[-333.65832520 -22.43793678]
[-343.23437500 -33.99412155]
[-351.84948730 -46.28339005]
[-359.44778442 -59.22604370]
[-365.97998047 -72.73813629]
[-371.40371704 -86.73204041]
[-375.68383789 -101.11700439]
[-378.79251099 -115.79972076]
[-380.70968628 -130.68498230]
[-381.42282104 -145.67623901]
[-380.92736816 -160.67626953]
[-379.22650146 -175.58778381]
[-376.33126831 -190.31408691]
[-372.26043701 -204.75965881]
[-367.04040527 -218.83082581]
[-360.70504761 -232.43632507]
[-353.29544067 -245.48791504]
[-344.85961914 -257.90093994]
[-335.45233154 -269.59490967]
[-325.13455200 -280.49398804]
[-313.97323608 -290.52749634]
[-302.04071045 -299.63034058]
[-289.41442871 -307.74346924]
[-276.17623901 -314.81430054]
[-262.41201782 -320.79696655]
[-248.21101379 -325.65267944]
[-233.66532898 -329.34991455]
[-218.86932373 -331.86471558]
[-203.91893005 -333.18075562]
[-188.91110229 -333.28955078]
[-173.94320679 -332.19030762]
[-159.11228943 -329.89022827]
[-144.51455688 -326.40423584]
[-130.24465942 -321.75485229]
[-116.39516449 -315.97232056]
[-103.05588531 -309.09411621]
[-90.31332397 -301.16482544]
[-78.25012970 -292.23590088]
[-66.94454193 -282.36523438]
[-56.46988297 -271.61685181]
[-46.89407730 -260.06045532]
[-38.27923584 -247.77101135]
[-30.68122482 -234.82818604]
[-24.14932442 -221.31594849]
[-18.72589684 -207.32191467]
[-14.44611645 -192.93687439]
[-11.33773708 -178.25407410]
[-9.42091942 -163.36877441]
[-8.70809460 -148.37750244]
[-9.20388603 -133.37748718]
[-10.90507889 -118.46601105]
[-13.80063820 -103.73977661]
[-17.87178612 -89.29428864]
[-23.09211922 -75.22323608]
[-29.42778206 -61.61788177]
[-36.83768463 -48.56645584]
[-45.27376556 -36.15360641]
[-33.58618546 -26.75145721]
[-21.89860535 -17.34930611]
[-9.84272003 -18.34036636]
[-0.02865538 -10.60293102]
[1.94473362 2.14338398]
[13.49103546 11.71850395]
[25.03733635 21.29362297]
[36.58363724 30.86874390]
[48.12994003 40.44386292]
[49.35662079 25.49410439]
[61.72384262 17.00576973]
[76.11495209 21.23614120]
[81.92135620 35.06674957]
[74.86278534 48.30218124]
[60.14416885 51.18618011]
[70.94632721 61.59355164]
[81.74848175 72.00092316]
[95.68299866 66.85743713]
[110.47014618 68.25977325]
[123.18939209 75.93096924]
[131.32859802 88.35591888]
[133.28025818 103.08064270]
[128.65888977 117.19691467]
[139.46104431 127.60429382]
[150.26319885 138.01165771]
[161.06536865 148.41903687]
[171.86752319 158.82641602]
[182.66967773 169.23377991]
[196.02839661 162.16256714]
[210.89855957 159.57011414]
[225.82171631 161.69792175]
[239.33818054 168.32514954]
[250.12979126 178.79147339]
[257.14843750 192.06285095]
[259.71789551 206.83369446]
[257.59890747 221.65530396]
[251.01148987 235.07792664]
[261.81365967 245.48530579]
[272.61581421 255.89266968]
[283.41796875 266.30004883]
[294.22012329 276.70742798]
[305.02227783 287.11480713]
[316.56613159 277.51260376]
[329.09628296 269.23861694]
[342.46060181 262.39331055]
[356.49685669 257.05975342]
[371.03466797 253.30271912]
[385.89755249 251.16778564]
[400.90509033 250.68087769]
[415.87509155 251.84790039]
[430.62585449 254.65469360]
[444.97830200 259.06719971]
[458.75823975 265.03182983]
[471.79837036 272.47619629]
[483.94036865 281.30990601]
[495.03689575 291.42575073]
[504.95321655 302.70092773]
[513.56896973 314.99859619]
[520.77954102 328.16940308]
[526.49743652 342.05352783]
[530.65325928 356.48242188]
[533.19647217 371.28088379]
[534.09631348 386.26934814]
[533.34179688 401.26580811]
[530.94213867 416.08822632]
[526.92639160 430.55673218]
[521.34332275 444.49560547]
[514.26074219 457.73568726]
[505.76458740 470.11627197]
[495.95800781 481.48706055]
[484.96005249 491.70996094]
[472.90423584 500.66098022]
[459.93688965 508.23138428]
[446.21542358 514.32928467]
[431.90640259 518.88067627]
[417.18353271 521.83032227]
[402.22552490 523.14239502]
[387.21398926 522.80096436]
[372.33111572 520.81018066]
[357.75756836 517.19421387]
[343.67028809 511.99697876]
[330.24023438 505.28152466]
[317.63049316 497.12939453]
[305.99407959 487.63952637]
[295.47229004 476.92715454]
[286.19284058 465.12228394]
[278.26837158 452.36822510]
[271.79504395 438.81982422]
[266.85150146 424.64151001]
[263.49771118 410.00540161]
[261.77438354 395.08920288]
[261.70248413 380.07394409]
[263.28283691 365.14190674]
[266.49627686 350.47436523]
[271.30377197 336.24932861]
[277.64700317 322.63952637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 156]
[2 155]
[3 154]
[4 153]
[5 152]
[6 151]
[15 142]
[16 141]
[17 140]
[18 139]
[19 138]
[20 137]
[26 131]
[27 130]
[28 129]
[29 123]
[30 122]
[31 121]
[32 120]
[33 119]
[35 116]
[36 115]
[37 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
