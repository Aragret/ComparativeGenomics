%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[116.64244843 514.27557373]
[117.58515167 499.24475098]
[121.73741913 484.76809692]
[128.90505981 471.52276611]
[138.75282288 460.12823486]
[150.82011414 451.11743164]
[164.54251099 444.91180420]
[161.43841553 430.23651123]
[158.33430481 415.56121826]
[145.74948120 407.67718506]
[142.39241028 392.83853149]
[150.74723816 379.69189453]
[147.64312744 365.01657104]
[144.53901672 350.34127808]
[141.43492126 335.66598511]
[138.33081055 320.99069214]
[134.35870361 306.52615356]
[129.53271484 292.32369995]
[124.70671082 278.12124634]
[113.99822998 272.49496460]
[109.86138153 260.70217896]
[115.02852631 248.88423157]
[110.41452026 234.61151123]
[105.80050659 220.33877563]
[101.18650055 206.06604004]
[98.47301483 220.81855774]
[91.17388916 233.92286682]
[80.05941010 243.99601746]
[66.30251312 249.97497559]
[51.35500717 251.22875977]
[36.79432678 247.62506104]
[24.15710258 239.54417419]
[14.77696800 227.83892822]
[9.64383125 213.74456787]
[9.29940414 198.74851990]
[13.78003597 184.43334961]
[22.61287498 172.30978394]
[34.86576843 163.65724182]
[49.24564362 159.38883972]
[64.23495483 159.95503235]
[78.25183868 165.29608154]
[89.81707001 174.84832764]
[97.71021271 187.60388184]
[96.81739807 172.63047791]
[95.92458344 157.65707397]
[95.03176880 142.68367004]
[80.74134064 138.41461182]
[68.77084351 129.51809692]
[60.56223679 117.06579590]
[57.10435104 102.55773163]
[58.81372833 87.74155426]
[65.48445129 74.40204620]
[76.31295013 64.14609528]
[89.99482727 58.20915222]
[89.10201263 43.23574448]
[88.20919037 28.26233864]
[79.66420746 14.94716644]
[86.63024902 1.78192711]
[78.08526611 -11.53324604]
[85.05130768 -24.69848442]
[84.15849304 -39.67189026]
[81.16371918 -54.36989594]
[76.12680817 -68.49892426]
[71.08988953 -82.62795258]
[66.05297089 -96.75698090]
[61.01605606 -110.88601685]
[49.09399796 -121.28674316]
[52.10828781 -135.87315369]
[47.07137299 -150.00218201]
[42.03445435 -164.13121033]
[36.78773880 -178.18368530]
[31.33238029 -192.15647888]
[25.87702370 -206.12927246]
[20.42166710 -220.10206604]
[5.72281218 -216.94932556]
[-9.29144001 -216.19538879]
[-24.23218536 -217.85983276]
[-38.71242142 -221.89949036]
[-52.35707474 -228.20977783]
[-64.81271362 -236.62721252]
[-75.75671387 -246.93376160]
[-84.90560150 -258.86245728]
[-92.02238464 -272.10433960]
[-96.92272949 -286.31640625]
[-99.47971344 -301.13052368]
[-99.62709045 -316.16299438]
[-97.36104584 -331.02438354]
[-92.74028778 -345.32980347]
[-85.88449097 -358.70864868]
[-76.97123718 -370.81445312]
[-66.23141479 -381.33358765]
[-53.94319916 -389.99362183]
[-40.42488861 -396.57019043]
[-26.02663803 -400.89300537]
[-11.12139893 -402.85003662]
[3.90474892 -402.39062500]
[18.66259193 -399.52667236]
[32.76986313 -394.33233643]
[45.86115646 -386.94219971]
[57.59737015 -377.54763794]
[67.67451477 -366.39205933]
[75.83155823 -353.76434326]
[81.85722351 -339.99163818]
[85.59542084 -325.43066406]
[86.94933319 -310.45858765]
[85.88388062 -295.46322632]
[82.42667389 -280.83297729]
[76.66725159 -266.94683838]
[68.75479889 -254.16444397]
[58.89426804 -242.81694031]
[47.34107208 -233.19821167]
[34.39446259 -225.55743408]
[39.84982300 -211.58462524]
[45.30517960 -197.61183167]
[50.76053619 -183.63903809]
[54.69721985 -180.93504333]
[56.97706604 -175.72933960]
[56.16348648 -169.16812134]
[61.20040131 -155.03909302]
[66.23731995 -140.91006470]
[77.79910278 -131.51994324]
[75.14508820 -115.92292786]
[80.18199921 -101.79389954]
[85.21891785 -87.66487122]
[90.25583649 -73.53584290]
[95.29274750 -59.40681076]
[97.33030701 -74.26777649]
[103.60319519 -87.89315796]
[113.56874847 -99.10420990]
[126.36485291 -106.93106842]
[140.88450623 -110.69663239]
[155.87162781 -110.07514954]
[170.02967834 -105.12037659]
[182.13383484 -96.26094818]
[191.13696289 -84.26330566]
[196.26022339 -70.16535187]
[197.06039429 -55.18671036]
[193.46824646 -40.62317657]
[185.79454041 -27.73464775]
[174.70312500 -17.63610840]
[161.15351868 -11.20118046]
[146.31790161 -8.98655319]
[131.47970581 -11.18381214]
[117.92258453 -17.60287285]
[106.81935120 -27.68842125]
[99.13190460 -40.56470871]
[100.02471924 -25.59130096]
[108.50583649 -13.34712601]
[101.60366058 0.88911122]
[110.08477783 13.13328648]
[103.18260193 27.36952400]
[104.07541656 42.34292984]
[104.96823120 57.31633377]
[119.25865936 61.58538437]
[131.22915649 70.48190308]
[139.43775940 82.93420410]
[142.89564514 97.44226837]
[141.18627930 112.25844574]
[134.51554871 125.59795380]
[123.68704987 135.85389709]
[110.00517273 141.79084778]
[110.89798737 156.76425171]
[111.79080963 171.73765564]
[112.68362427 186.71105957]
[115.45923615 201.45202637]
[120.07324219 215.72476196]
[124.68724823 229.99749756]
[129.30125427 244.27023315]
[143.25003052 256.29159546]
[138.90916443 273.29525757]
[143.73516846 287.49771118]
[148.56115723 301.70016479]
[154.27850342 287.83248901]
[166.99433899 279.87588501]
[181.96597290 280.79794312]
[193.60935974 290.25479126]
[197.58180237 304.71920776]
[192.40167236 318.79635620]
[180.00103760 327.23580933]
[165.00503540 326.88986206]
[153.00610352 317.88656616]
[156.11021423 332.56185913]
[159.21432495 347.23718262]
[162.31843567 361.91247559]
[165.42254639 376.58776855]
[178.38516235 385.22537231]
[181.32412720 400.15243530]
[173.00959778 412.45709229]
[176.11370850 427.13238525]
[179.21781921 441.80770874]
[194.27770996 441.92529297]
[208.96012878 445.27801514]
[222.57833862 451.70907593]
[234.49540710 460.91760254]
[244.15396118 472.47299194]
[251.10221863 485.83471680]
[255.01522827 500.37783813]
[255.70996094 515.42218018]
[253.15391541 530.26397705]
[247.46665955 544.20922852]
[238.91418457 556.60559082]
[227.89649963 566.87322998]
[214.92892456 574.53198242]
[200.61799622 579.22357178]
[185.63304138 580.72857666]
[170.67492676 578.97668457]
[156.44329834 574.04974365]
[143.60377502 566.17822266]
[132.75689697 555.73028564]
[124.40997314 543.19464111]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 190]
[8 189]
[9 188]
[12 185]
[13 184]
[14 183]
[15 182]
[16 181]
[17 172]
[18 171]
[19 170]
[22 168]
[23 167]
[24 166]
[25 165]
[43 164]
[44 163]
[45 162]
[46 161]
[54 153]
[55 152]
[56 151]
[58 149]
[60 147]
[61 146]
[62 126]
[63 125]
[64 124]
[65 123]
[66 122]
[68 120]
[69 119]
[70 118]
[71 115]
[72 114]
[73 113]
[74 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
