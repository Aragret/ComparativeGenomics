%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[186.87240601 840.09942627]
[172.30433655 836.51580811]
[157.90519714 832.30444336]
[143.70199585 827.47332764]
[129.72140503 822.03143311]
[115.98966980 815.98901367]
[102.53257751 809.35748291]
[89.37538910 802.14916992]
[76.54280853 794.37774658]
[64.05892181 786.05767822]
[51.94717026 777.20465088]
[40.23028946 767.83520508]
[28.93027687 757.96704102]
[18.06834984 747.61865234]
[7.66489983 736.80944824]
[-2.26054263 725.55969238]
[-11.68934345 713.89056396]
[-20.60379982 701.82397461]
[-28.98717690 689.38250732]
[-36.82373810 676.58959961]
[-44.09876251 663.46917725]
[-50.79860306 650.04595947]
[-56.91067505 636.34509277]
[-62.42350388 622.39233398]
[-67.32674408 608.21386719]
[-71.61118317 593.83630371]
[-75.26878357 579.28662109]
[-78.29267883 564.59216309]
[-80.67718506 549.78051758]
[-82.41783142 534.87945557]
[-83.51134491 519.91699219]
[-83.95568085 504.92123413]
[-83.75000000 489.92028809]
[-82.89469147 474.94232178]
[-81.39135742 460.01547241]
[-79.24281311 445.16775513]
[-76.45310974 430.42703247]
[-73.02747345 415.82101440]
[-68.97233582 401.37710571]
[-64.29531097 387.12240601]
[-59.00518417 373.08370972]
[-53.11187744 359.28732300]
[-46.62646484 345.75918579]
[-39.56111526 332.52471924]
[-31.92909622 319.60870361]
[-23.74473763 307.03543091]
[-15.02340031 294.82849121]
[-5.78146076 283.01083374]
[3.96373105 271.60458374]
[14.19387913 260.63122559]
[24.88977814 250.11129761]
[36.03134537 240.06459045]
[47.59766769 230.50996399]
[59.56702805 221.46533203]
[71.91695404 212.94769287]
[84.62425995 204.97302246]
[97.66509247 197.55632019]
[111.01496124 190.71147156]
[124.64881897 184.45137024]
[118.98603058 170.56134033]
[113.32324219 156.67131042]
[107.66045380 142.78128052]
[104.56979370 141.08418274]
[102.14759064 137.80577087]
[101.12811279 133.27653503]
[102.07026672 128.14239502]
[97.03335571 114.01336670]
[86.50777435 104.80989838]
[88.83761597 91.02355194]
[76.91555786 80.62282562]
[79.92984772 66.03641510]
[74.89293671 51.90738678]
[69.85601807 37.77835464]
[64.71405792 23.68721581]
[59.46733856 9.63474369]
[54.22062302 -4.41772747]
[39.43280411 -1.68064940]
[24.39435768 -1.55322087]
[9.56228352 -4.03931379]
[-4.61269093 -9.06337929]
[-17.69980240 -16.47274017]
[-29.30134773 -26.04223633]
[-39.06476974 -37.48106003]
[-46.69337082 -50.44160080]
[-51.95532227 -64.52999878]
[-54.69072342 -79.31812286]
[-54.81644821 -94.35659027]
[-52.32867050 -109.18838501]
[-47.30299759 -123.36278534]
[-39.89215469 -136.44905090]
[-30.32134247 -148.04951477]
[-18.88141060 -157.81164551]
[-5.92000532 -165.43876648]
[8.16899014 -170.69912720]
[22.95742607 -173.43284607]
[37.99590302 -173.55686951]
[52.82741165 -171.06741333]
[67.00125122 -166.04013062]
[80.08667755 -158.62780762]
[91.68605042 -149.05567932]
[101.44688416 -137.61463928]
[109.07254028 -124.65236664]
[114.33129883 -110.56277466]
[117.06334686 -95.77402496]
[117.18565369 -80.73553467]
[114.69451904 -65.90431213]
[109.66562653 -51.73104477]
[102.25181580 -38.64645386]
[92.67837524 -27.04816628]
[81.23622894 -17.28863525]
[68.27309418 -9.66444588]
[73.51981354 4.38802576]
[78.76653290 18.44049644]
[84.05107880 23.60724831]
[83.98504639 32.74143982]
[89.02196503 46.87046814]
[94.05888367 60.99950027]
[105.62066650 70.38962555]
[102.96664429 85.98663330]
[113.49222565 95.19010162]
[111.16238403 108.97644806]
[116.19929504 123.10547638]
[121.55048370 137.11849976]
[127.21327209 151.00852966]
[132.87605286 164.89855957]
[138.53884888 178.78858948]
[152.66334534 173.73196411]
[166.99363708 169.29194641]
[181.50280762 165.47688293]
[196.16362000 162.29389954]
[210.94856262 159.74900818]
[225.82986450 157.84696960]
[240.77958679 156.59135437]
[255.76966858 155.98451233]
[270.77197266 156.02760315]
[285.75833130 156.72053528]
[300.70059204 158.06201172]
[315.57070923 160.04949951]
[330.34078979 162.67927551]
[344.98309326 165.94641113]
[359.47012329 169.84477234]
[373.77465820 174.36703491]
[387.86987305 179.50469971]
[401.72930908 185.24812317]
[415.32693481 191.58654785]
[428.63720703 198.50804138]
[441.63519287 205.99963379]
[454.29641724 214.04724121]
[466.59716797 222.63577271]
[478.51431274 231.74908447]
[490.02548218 241.37008667]
[501.10906982 251.48069763]
[511.74429321 262.06195068]
[521.91119385 273.09399414]
[531.59063721 284.55606079]
[540.76440430 296.42669678]
[549.41540527 308.68359375]
[557.52734375 321.30371094]
[565.08496094 334.26339722]
[572.07403564 347.53829956]
[578.48156738 361.10351562]
[584.29541016 374.93356323]
[589.50476074 389.00244141]
[594.09973145 403.28381348]
[598.07171631 417.75082397]
[601.41326904 432.37628174]
[604.11816406 447.13281250]
[606.18127441 461.99261475]
[607.59875488 476.92788696]
[608.36791992 491.91052246]
[608.48730469 506.91238403]
[607.95672607 521.90539551]
[606.77722168 536.86126709]
[604.95086670 551.75207520]
[602.48120117 566.54974365]
[599.37286377 581.22656250]
[595.63165283 595.75500488]
[591.26458740 610.10766602]
[586.27990723 624.25769043]
[580.68695068 638.17852783]
[574.49615479 651.84399414]
[567.71923828 665.22851562]
[560.36889648 678.30682373]
[552.45886230 691.05450439]
[544.00408936 703.44750977]
[535.02038574 715.46270752]
[525.52459717 727.07739258]
[515.53466797 738.26983643]
[505.06918335 749.01904297]
[494.14794922 759.30480957]
[482.79135132 769.10784912]
[471.02078247 778.40972900]
[458.85830688 787.19293213]
[446.32678223 795.44104004]
[433.44973755 803.13861084]
[420.25131226 810.27111816]
[406.75628662 816.82513428]
[392.99005127 822.78845215]
[378.97839355 828.14984131]
[364.74761963 832.89923096]
[350.32449341 837.02770996]
[335.73608398 840.52746582]
[321.00973511 843.39202881]
[306.17312622 845.61596680]
[291.25408936 847.19512939]
[276.28067017 848.12652588]
[261.28094482 848.40844727]
[246.28311157 848.04028320]
[231.31529236 847.02276611]
[216.40560913 845.35784912]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 126]
[60 125]
[61 124]
[62 123]
[66 122]
[67 121]
[69 119]
[71 117]
[72 116]
[73 115]
[74 113]
[75 112]
[76 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
