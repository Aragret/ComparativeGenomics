%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[250.76380920 513.87158203]
[253.80070496 499.16647339]
[258.43688965 484.88470459]
[264.61608887 471.19964600]
[272.26327515 458.27740479]
[281.28561401 446.27487183]
[291.57357788 435.33776855]
[303.00231934 425.59881592]
[294.58770752 413.18130493]
[286.17306519 400.76382446]
[277.75845337 388.34631348]
[269.34384155 375.92883301]
[260.92922974 363.51132202]
[252.51460266 351.09384155]
[244.09997559 338.67633057]
[235.68536377 326.25885010]
[227.27075195 313.84133911]
[218.85612488 301.42385864]
[210.44151306 289.00634766]
[205.09059143 303.01947021]
[190.84556580 307.71832275]
[178.20732117 299.63903809]
[176.49229431 284.73739624]
[186.96475220 273.99832153]
[201.90336609 275.33743286]
[194.43562317 262.32849121]
[186.96788025 249.31953430]
[179.50013733 236.31057739]
[172.03240967 223.30163574]
[156.40354919 215.32002258]
[156.60244751 196.90693665]
[148.94184875 184.01060486]
[141.28125000 171.11427307]
[133.05244446 158.57287598]
[124.27184296 146.41142273]
[115.49124146 134.24996948]
[106.71063232 122.08850861]
[97.93003082 109.92705536]
[91.03335571 105.75471497]
[89.11082458 97.51853180]
[80.51226044 85.22769165]
[71.73165894 73.06623840]
[62.77096176 61.03685760]
[61.59652328 75.99081421]
[51.94466782 87.47304535]
[37.41529846 91.20096588]
[23.42751122 85.78416443]
[15.19840431 73.24295807]
[15.79723263 58.25491333]
[25.00064659 46.41020203]
[39.37599945 42.12660980]
[53.56258011 47.00250244]
[46.09483719 33.99355316]
[38.62709808 20.98460007]
[31.15935707 7.97564697]
[24.78101921 21.55197906]
[10.22595787 25.17829704]
[-1.77637851 16.18141365]
[-2.37831378 1.19349563]
[8.86387634 -8.73692036]
[23.66151047 -6.29044485]
[17.18201447 -19.81879044]
[10.70251942 -33.34713745]
[4.22302341 -46.87548065]
[-2.25647235 -60.40382767]
[-16.48444176 -55.59526825]
[-31.18829155 -52.53680420]
[-46.15359116 -51.27303696]
[-61.16210938 -51.82239532]
[-75.99497223 -54.17686844]
[-90.43587494 -58.30211639]
[-104.27422333 -64.13799286]
[-117.30821991 -71.59937286]
[-129.34779358 -80.57746887]
[-140.21736145 -90.94134521]
[-149.75840759 -102.53986359]
[-157.83181763 -115.20388794]
[-164.31983948 -128.74873352]
[-169.12786865 -142.97688293]
[-172.18577576 -157.68084717]
[-173.44898987 -172.64619446]
[-172.89906311 -187.65469360]
[-170.54403687 -202.48747253]
[-166.41824341 -216.92822266]
[-160.58186340 -230.76635742]
[-153.11997986 -243.80006409]
[-144.14143372 -255.83929443]
[-133.77716064 -266.70846558]
[-122.17828369 -276.24908447]
[-109.51395416 -284.32202148]
[-95.96886444 -290.80953979]
[-81.74053955 -295.61703491]
[-67.03646088 -298.67440796]
[-52.07106400 -299.93704224]
[-37.06258774 -299.38656616]
[-22.22990036 -297.03100586]
[-7.78930712 -292.90466309]
[6.04860783 -287.06774902]
[19.08204651 -279.60540771]
[31.12094116 -270.62640381]
[41.98973083 -260.26171875]
[51.52991867 -248.66247559]
[59.60237503 -235.99784851]
[66.08938599 -222.45251465]
[70.89634705 -208.22399902]
[73.95316315 -193.51982117]
[75.21524811 -178.55436707]
[74.66420746 -163.54591370]
[72.30807495 -148.71331787]
[68.18120575 -134.27287292]
[62.34378052 -120.43518066]
[54.88093185 -107.40202332]
[45.90148544 -95.36346436]
[35.53639221 -84.49506378]
[23.93680191 -74.95530701]
[11.27187347 -66.88332367]
[17.75136948 -53.35497665]
[24.23086548 -39.82663345]
[30.71036148 -26.29828644]
[37.18985748 -12.76994038]
[44.16830826 0.50790572]
[51.63605118 13.51685810]
[59.10379028 26.52581024]
[66.57153320 39.53476334]
[74.80033875 52.07616425]
[83.76103973 64.10553741]
[88.27322388 65.67054749]
[91.85018158 70.08669281]
[92.80310059 76.62912750]
[101.40166473 88.91996765]
[110.09149170 101.14645386]
[118.87209320 113.30790710]
[127.65269470 125.46936035]
[136.43330383 137.63081360]
[145.21389771 149.79228210]
[148.66755676 135.19528198]
[161.35830688 127.19873810]
[176.01634216 130.38343811]
[184.24484253 142.92503357]
[181.33016968 157.63914490]
[168.94197083 166.09683228]
[154.17758179 163.45367432]
[161.83818054 176.35000610]
[169.49877930 189.24633789]
[181.78239441 193.18025208]
[187.89741516 204.07933044]
[185.04135132 215.83389282]
[192.50909424 228.84283447]
[199.97683716 241.85179138]
[207.44458008 254.86074829]
[214.91232300 267.86968994]
[222.85900879 280.59173584]
[231.27362061 293.00921631]
[239.68824768 305.42672729]
[248.10285950 317.84420776]
[256.51748657 330.26171875]
[264.93209839 342.67919922]
[273.34671021 355.09671021]
[281.76132202 367.51419067]
[290.17596436 379.93170166]
[298.59057617 392.34918213]
[307.00518799 404.76669312]
[315.41979980 417.18417358]
[328.70086670 410.17874146]
[342.67202759 404.67684937]
[357.16360474 400.74536133]
[371.99975586 398.43191528]
[387.00036621 397.76467896]
[401.98330688 398.75167847]
[416.76675415 401.38098145]
[431.17120361 405.62063599]
[445.02182007 411.41921997]
[458.15048218 418.70629883]
[470.39779663 427.39346313]
[481.61511230 437.37521362]
[491.66622925 448.53039551]
[500.42916870 460.72357178]
[507.79754639 473.80679321]
[513.68188477 487.62118530]
[518.01080322 501.99905396]
[520.73175049 516.76593018]
[521.81170654 531.74243164]
[521.23748779 546.74688721]
[519.01611328 561.59710693]
[515.17456055 576.11279297]
[509.75942993 590.11779785]
[502.83648682 603.44207764]
[494.48977661 615.92388916]
[484.82058716 627.41168213]
[473.94628906 637.76605225]
[461.99893188 646.86132812]
[449.12350464 654.58703613]
[435.47631836 660.84942627]
[421.22305298 665.57250977]
[406.53668213 668.69885254]
[391.59555054 670.19061279]
[376.58096313 670.02966309]
[361.67526245 668.21789551]
[347.05929565 664.77740479]
[332.91055298 659.74981689]
[319.40078735 653.19628906]
[306.69393921 645.19628906]
[294.94433594 635.84698486]
[284.29455566 625.26184082]
[274.87387085 613.56933594]
[266.79666138 600.91149902]
[260.16098022 587.44183350]
[255.04736328 573.32397461]
[251.51789856 558.72924805]
[249.61543274 543.83483887]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 163]
[9 162]
[10 161]
[11 160]
[12 159]
[13 158]
[14 157]
[15 156]
[16 155]
[17 154]
[18 153]
[19 152]
[25 151]
[26 150]
[27 149]
[28 148]
[29 147]
[31 144]
[32 143]
[33 142]
[34 135]
[35 134]
[36 133]
[37 132]
[38 131]
[40 130]
[41 129]
[42 126]
[43 125]
[52 124]
[53 123]
[54 122]
[55 121]
[61 120]
[62 119]
[63 118]
[64 117]
[65 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
