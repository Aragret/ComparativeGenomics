%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[135.79350281 781.75207520]
[122.06349182 775.69769287]
[108.76853180 768.73974609]
[95.96800232 760.90930176]
[83.71907043 752.24133301]
[72.07645416 742.77465820]
[61.09214783 732.55139160]
[50.81520462 721.61737061]
[41.29153061 710.02130127]
[32.56366348 697.81500244]
[24.67057610 685.05297852]
[17.64752579 671.79229736]
[11.52588081 658.09210205]
[6.33297968 644.01367188]
[2.09201670 629.61981201]
[-1.17806745 614.97479248]
[-3.46266747 600.14410400]
[-4.75157976 585.19390869]
[-5.03904772 570.19104004]
[-4.32378721 555.20245361]
[-2.60899282 540.29510498]
[0.09767640 525.53558350]
[3.78413200 510.98983765]
[8.43390942 496.72277832]
[14.02624035 482.79815674]
[20.53614998 469.27813721]
[27.93456078 456.22314453]
[36.18843079 443.69149780]
[45.26089478 431.73910522]
[55.11143494 420.41937256]
[65.69605255 409.78286743]
[76.96748352 399.87710571]
[88.87536621 390.74630737]
[101.36653900 382.43127441]
[114.38520050 374.96911621]
[127.87320709 368.39318848]
[141.77032471 362.73281860]
[156.01446533 358.01333618]
[152.25816345 343.49130249]
[148.50186157 328.96923828]
[137.82392883 318.58505249]
[141.85887146 303.28701782]
[138.10256958 288.76495361]
[134.34626770 274.24291992]
[130.58996582 259.72085571]
[126.83366394 245.19879150]
[116.57330322 238.79164124]
[113.32501984 226.72381592]
[119.35683441 215.32293701]
[108.83468628 204.78092957]
[113.09693146 189.54466248]
[109.55725861 174.96829224]
[99.39343262 168.40908813]
[96.32518005 156.29423523]
[102.52606964 144.98442078]
[99.20380402 130.35696411]
[95.88154602 115.72950745]
[84.17134094 103.71920776]
[89.30743408 87.75058746]
[85.76776123 73.17421722]
[70.89759064 69.91240692]
[58.96685791 60.55587769]
[52.30890274 47.00258255]
[52.19621658 31.96435356]
[58.59759140 18.42434311]
[70.19492340 9.04524803]
[66.65525055 -5.53112698]
[63.11557388 -20.10750198]
[59.57590485 -34.68387604]
[54.50979233 -42.28469086]
[56.09375763 -49.50361252]
[52.77149963 -64.13107300]
[49.44923782 -78.75852966]
[46.12697983 -93.38599396]
[42.47888947 -107.93561554]
[38.50679398 -122.40013885]
[34.53469849 -136.86465454]
[23.41923332 -148.12330627]
[27.51006126 -162.44511414]
[23.53796577 -176.90963745]
[19.56586838 -191.37416077]
[4.55535412 -190.29219055]
[-10.37778378 -192.15969849]
[-24.65955544 -196.90493774]
[-37.74100876 -204.34548950]
[-49.11932373 -214.19537354]
[-58.35715103 -226.07597351]
[-65.09941101 -239.53063965]
[-69.08695221 -254.04222107]
[-70.16650391 -269.05291748]
[-68.29656982 -283.98574829]
[-63.54903030 -298.26675415]
[-56.10635757 -311.34698486]
[-46.25463486 -322.72372437]
[-34.37253571 -331.95962524]
[-20.91677475 -338.69970703]
[-6.40455627 -342.68490601]
[8.60630798 -343.76202393]
[23.53884125 -341.88967896]
[37.81907654 -337.13980103]
[50.89811707 -329.69503784]
[62.27324295 -319.84146118]
[71.50722504 -307.95785522]
[78.24513245 -294.50100708]
[82.22797394 -279.98815918]
[83.30266571 -264.97711182]
[81.42790222 -250.04487610]
[76.67573547 -235.76541138]
[69.22882843 -222.68757629]
[59.37342453 -211.31405640]
[47.48833466 -202.08198547]
[34.03039169 -195.34626770]
[38.00248718 -180.88174438]
[41.97458649 -166.41722107]
[52.80593872 -156.19317627]
[48.99922180 -140.83676147]
[52.97131729 -126.37223053]
[56.94341660 -111.90770721]
[59.81050873 -109.85536194]
[61.82596970 -106.31234741]
[62.30001068 -101.69406128]
[60.75444031 -96.70825195]
[64.07669830 -82.08079529]
[67.39895630 -67.45333099]
[70.72121429 -52.82587433]
[74.15227509 -38.22354889]
[77.69194794 -23.64717484]
[81.23162079 -9.07079983]
[84.77129364 5.50557613]
[99.37852478 8.52125454]
[111.27678680 17.61744881]
[118.07360077 31.03252983]
[118.37306213 46.12989807]
[112.06224060 59.91613770]
[100.34413147 69.63454437]
[103.88380432 84.21091461]
[113.44671631 90.85861969]
[116.11071014 102.19636536]
[110.50901031 112.40724945]
[113.83126831 127.03470612]
[117.15352631 141.66217041]
[129.97418213 154.88005066]
[124.13363647 171.42861938]
[127.67330933 186.00498962]
[138.44863892 197.58959961]
[133.93321228 211.78326416]
[146.94923401 224.80879211]
[141.35572815 241.44248962]
[145.11201477 255.96453857]
[148.86831665 270.48660278]
[152.62461853 285.00866699]
[156.38092041 299.53073120]
[167.32752991 310.95361328]
[163.02392578 325.21292114]
[166.78022766 339.73498535]
[170.53652954 354.25704956]
[185.28256226 351.47787476]
[200.18128967 349.68984985]
[215.16618347 348.90093994]
[230.17030334 349.11465454]
[245.12663269 350.33007812]
[259.96838379 352.54177856]
[274.62927246 355.73983765]
[289.04382324 359.91003418]
[303.14764404 365.03366089]
[316.87771606 371.08792114]
[330.17276001 378.04571533]
[342.97338867 385.87597656]
[355.22244263 394.54376221]
[366.86517334 404.01031494]
[377.84960938 414.23339844]
[388.12667847 425.16732788]
[397.65051270 436.76330566]
[406.37854004 448.96948242]
[414.27178955 461.73138428]
[421.29498291 474.99197388]
[427.41680908 488.69207764]
[432.60989380 502.77047729]
[436.85104370 517.16430664]
[440.12130737 531.80926514]
[442.40609741 546.63989258]
[443.69519043 561.59008789]
[443.98284912 576.59295654]
[443.26776123 591.58154297]
[441.55316162 606.48889160]
[438.84667969 621.24847412]
[435.16040039 635.79425049]
[430.51080322 650.06140137]
[424.91867065 663.98608398]
[418.40890503 677.50616455]
[411.01068115 690.56121826]
[402.75695801 703.09301758]
[393.68463135 715.04553223]
[383.83425903 726.36535645]
[373.24975586 737.00201416]
[361.97845459 746.90789795]
[350.07067871 756.03887939]
[337.57962036 764.35406494]
[324.56106567 771.81640625]
[311.07312012 778.39251709]
[297.17608643 784.05297852]
[282.93200684 788.77264404]
[268.40447998 792.53039551]
[253.65840149 795.30938721]
[238.75965881 797.09722900]
[223.77474976 797.88592529]
[208.77064514 797.67199707]
[193.81431580 796.45642090]
[178.97259521 794.24450684]
[164.31173706 791.04626465]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 156]
[39 155]
[40 154]
[42 152]
[43 151]
[44 150]
[45 149]
[46 148]
[49 146]
[51 144]
[52 143]
[55 141]
[56 140]
[57 139]
[59 136]
[60 135]
[66 129]
[67 128]
[68 127]
[69 126]
[71 125]
[72 124]
[73 123]
[74 122]
[75 118]
[76 117]
[77 116]
[79 114]
[80 113]
[81 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
