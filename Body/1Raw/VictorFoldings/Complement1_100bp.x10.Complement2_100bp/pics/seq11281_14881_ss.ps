%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUGxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[102.94607544 745.83880615]
[88.39905548 742.16113281]
[74.10329437 737.60351562]
[60.11198044 732.18280029]
[46.47715759 725.91918945]
[33.24955368 718.83605957]
[20.47837067 710.95965576]
[8.21112251 702.31927490]
[-3.50655818 692.94714355]
[-14.63107872 682.87811279]
[-25.12105560 672.14959717]
[-34.93746567 660.80151367]
[-44.04378891 648.87609863]
[-52.40615463 636.41766357]
[-59.99344635 623.47265625]
[-66.77744293 610.08911133]
[-72.73291016 596.31695557]
[-77.83768463 582.20727539]
[-82.07278442 567.81268311]
[-85.42244720 553.18664551]
[-87.87422180 538.38366699]
[-89.41898346 523.45867920]
[-90.05097961 508.46728516]
[-89.76786041 493.46527100]
[-88.57068634 478.50842285]
[-86.46390533 463.65234375]
[-83.45536041 448.95236206]
[-79.55623627 434.46313477]
[-74.78103638 420.23858643]
[-69.14753723 406.33157349]
[-62.67668533 392.79388428]
[-55.39255905 379.67587280]
[-47.32224655 367.02633667]
[-38.49578094 354.89233398]
[-28.94599152 343.31896973]
[-18.70840645 332.34933472]
[-7.82110882 322.02426147]
[3.67539835 312.38211060]
[15.73834801 303.45874023]
[28.32286263 295.28741455]
[41.38212967 287.89846802]
[54.86756897 281.31942749]
[68.72900391 275.57473755]
[82.91487885 270.68579102]
[97.37242126 266.67077637]
[112.04784393 263.54461670]
[109.82272339 248.71057129]
[107.59761047 233.87652588]
[105.37248993 219.04248047]
[102.76959991 216.66398621]
[101.18943024 212.90657043]
[101.26754761 208.26467896]
[103.39463806 203.49784851]
[101.83411407 188.57925415]
[100.27359009 173.66064453]
[91.25419617 161.80738831]
[97.51380920 147.27714539]
[95.95329285 132.35855103]
[86.93389130 120.50528717]
[93.19351196 105.97504425]
[90.57206726 103.14654541]
[89.21012115 99.17628479]
[89.58962250 94.65267944]
[91.91173553 90.35760498]
[91.01892090 75.38420105]
[90.12610626 60.41079330]
[81.58111572 47.09562302]
[88.54716492 33.93038177]
[87.65434265 18.95697594]
[86.76152802 3.98357058]
[85.86871338 -10.98983479]
[82.55281830 -16.70965958]
[82.61411285 -22.39237595]
[85.17898560 -26.42108345]
[84.73237610 -41.41443253]
[84.28577423 -56.40778351]
[81.54090118 -60.84768677]
[80.84332275 -65.43753815]
[81.90732574 -69.37237549]
[84.16912079 -72.07730103]
[84.39244843 -87.07563782]
[84.61577606 -102.07397461]
[84.83910370 -117.07231140]
[85.06243134 -132.07064819]
[71.39118958 -142.03022766]
[66.39973450 -158.01730347]
[71.86611176 -173.67236328]
[85.44898987 -182.89097595]
[85.44898987 -197.89097595]
[85.44898987 -212.89097595]
[85.44898987 -227.89097595]
[85.44898987 -242.89097595]
[70.76040649 -246.23660278]
[57.18478775 -252.76731873]
[45.40309143 -262.15557861]
[36.00627518 -273.93045044]
[29.46568108 -287.50131226]
[26.10938454 -302.18746948]
[26.10573387 -317.25225830]
[29.45491409 -331.94003296]
[35.98892975 -345.51406860]
[45.38003922 -357.29348755]
[57.15718460 -366.68743896]
[70.72963715 -373.22476196]
[85.41659546 -376.57748413]
[100.48138428 -376.57748413]
[115.16834259 -373.22476196]
[128.74079895 -366.68743896]
[140.51794434 -357.29348755]
[149.90905762 -345.51406860]
[156.44306946 -331.94003296]
[159.79225159 -317.25225830]
[159.78860474 -302.18746948]
[156.43229675 -287.50131226]
[149.89170837 -273.93045044]
[140.49488831 -262.15557861]
[128.71319580 -252.76731873]
[115.13757324 -246.23660278]
[100.44898987 -242.89097595]
[100.44898987 -227.89097595]
[100.44898987 -212.89097595]
[100.44898987 -197.89097595]
[100.44898987 -182.89097595]
[111.93152618 -176.07969666]
[118.60252380 -164.39030457]
[118.62662506 -150.82310486]
[111.89057922 -138.92166138]
[100.06076813 -131.84732056]
[99.83744049 -116.84898376]
[99.61411285 -101.85064697]
[99.39078522 -86.85231018]
[99.16745758 -71.85397339]
[99.27912140 -56.85438919]
[99.72573090 -41.86103821]
[100.17233276 -26.86768913]
[100.84211731 -11.88265133]
[101.73493195 3.09075475]
[102.62775421 18.06416130]
[103.52056885 33.03756714]
[112.00169373 45.28174210]
[105.09951019 59.51797867]
[105.99232483 74.49138641]
[106.88513947 89.46479034]
[108.11211395 104.41452026]
[117.24312592 117.33486176]
[110.87189484 130.79801941]
[112.43241882 145.71662903]
[121.56343079 158.63696289]
[115.19219971 172.10012817]
[116.75272369 187.01872253]
[118.31324005 201.93733215]
[120.20653534 216.81736755]
[122.43165588 231.65141296]
[124.65676880 246.48545837]
[126.88188934 261.31948853]
[141.82865906 260.00231934]
[156.82792664 259.59878540]
[171.82389832 260.11044312]
[186.76077271 261.53533936]
[201.58300781 263.86822510]
[216.23544312 267.10037231]
[230.66358948 271.21981812]
[244.81375122 276.21118164]
[258.63330078 282.05590820]
[272.07083130 288.73226929]
[285.07635498 296.21539307]
[297.60147095 304.47750854]
[309.59957886 313.48779297]
[321.02609253 323.21282959]
[331.83847046 333.61633301]
[341.99649048 344.65969849]
[351.46237183 356.30175781]
[360.20089722 368.49926758]
[368.17956543 381.20681763]
[375.36868286 394.37713623]
[381.74151611 407.96124268]
[387.27432251 421.90859985]
[391.94659424 436.16732788]
[395.74087524 450.68435669]
[398.64306641 465.40570068]
[400.64242554 480.27658081]
[401.73144531 495.24169922]
[401.90609741 510.24539185]
[401.16577148 525.23181152]
[399.51315308 540.14520264]
[396.95443726 554.93011475]
[393.49914551 569.53155518]
[389.16009521 583.89520264]
[383.95346069 597.96759033]
[377.89859009 611.69635010]
[371.01803589 625.03045654]
[363.33737183 637.92028809]
[354.88516235 650.31793213]
[345.69287109 662.17724609]
[335.79470825 673.45404053]
[325.22744751 684.10644531]
[314.03042603 694.09484863]
[302.24530029 703.38201904]
[289.91592407 711.93347168]
[277.08813477 719.71734619]
[263.80966187 726.70471191]
[250.12992859 732.86956787]
[236.09979248 738.18902588]
[221.77146912 742.64318848]
[207.19824219 746.21557617]
[192.43434143 748.89288330]
[177.53466797 750.66516113]
[162.55468750 751.52575684]
[147.55007935 751.47149658]
[132.57670593 750.50262451]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 155]
[47 154]
[48 153]
[49 152]
[53 151]
[54 150]
[55 149]
[57 147]
[58 146]
[60 144]
[64 143]
[65 142]
[66 141]
[68 139]
[69 138]
[70 137]
[71 136]
[74 135]
[75 134]
[76 133]
[80 132]
[81 131]
[82 130]
[83 129]
[84 128]
[88 123]
[89 122]
[90 121]
[91 120]
[92 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
