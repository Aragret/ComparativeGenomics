%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[131.12139893 707.84124756]
[117.26101685 702.09533691]
[103.75468445 695.56042480]
[90.64727783 688.25830078]
[77.98233032 680.21307373]
[65.80192566 671.45159912]
[54.14651489 662.00299072]
[43.05482101 651.89849854]
[32.56368637 641.17181396]
[22.70796776 629.85852051]
[13.52040005 617.99621582]
[5.03150654 605.62432861]
[-2.73051500 592.78387451]
[-9.73987961 579.51757812]
[-15.97330189 565.86950684]
[-21.41007614 551.88494873]
[-26.03214073 537.61041260]
[-29.82414436 523.09332275]
[-32.77348709 508.38186646]
[-34.87036896 493.52493286]
[-36.10783005 478.57183838]
[-36.48175812 463.57232666]
[-35.99090958 448.57617188]
[-34.63691711 433.63317871]
[-32.42427826 418.79302979]
[-29.36033821 404.10501099]
[-25.45528030 389.61791992]
[-20.72207642 375.37985229]
[-15.17644787 361.43811035]
[-8.83681774 347.83905029]
[-1.72424674 334.62780762]
[6.13763905 321.84826660]
[14.72272301 309.54290771]
[24.00248528 297.75256348]
[33.94610214 286.51644897]
[44.52053452 275.87188721]
[55.69066620 265.85421753]
[67.41938019 256.49670410]
[79.66771698 247.83044434]
[92.39499664 239.88424683]
[105.55893707 232.68449402]
[119.11579895 226.25509644]
[133.02055359 220.61741638]
[128.19456482 206.41496277]
[123.36856079 192.21250916]
[118.54256439 178.01004028]
[107.12186432 168.44882202]
[110.00780487 152.89305115]
[105.18180847 138.69059753]
[100.35581207 124.48814392]
[95.52980804 110.28569031]
[88.97850037 123.77940369]
[75.33815765 130.01966858]
[60.84495544 126.15352631]
[52.12499237 113.94851685]
[53.16492081 98.98461151]
[63.48929977 88.10310364]
[78.37796021 86.27886963]
[91.02513885 94.34739685]
[80.42348480 82.60365295]
[85.14973450 68.47879028]
[81.82747650 53.85132980]
[78.50521851 39.22386932]
[67.90356445 27.48012733]
[72.62981415 13.35526085]
[69.30755615 -1.27219927]
[54.41605377 0.62484461]
[39.41098404 1.07577789]
[24.43244171 0.07639007]
[9.62028122 -2.36398745]
[-4.88719511 -6.22256899]
[-18.95453262 -11.46332741]
[-32.45038223 -18.03732872]
[-45.24874115 -25.88319397]
[-57.23010254 -34.92766571]
[-68.28260040 -45.08629608]
[-78.30304718 -56.26423264]
[-87.19786835 -68.35710907]
[-94.88401794 -81.25201416]
[-101.28973389 -94.82855225]
[-106.35520172 -108.95995331]
[-110.03312683 -123.51428223]
[-112.28916931 -138.35563660]
[-113.10227203 -153.34544373]
[-112.46482849 -168.34375000]
[-110.38280487 -183.21051025]
[-106.87563324 -197.80693054]
[-101.97605133 -211.99670410]
[-95.72982788 -225.64733887]
[-88.19526672 -238.63140869]
[-79.44271851 -250.82765198]
[-69.55391693 -262.12222290]
[-58.62117767 -272.40963745]
[-46.74658966 -281.59384155]
[-34.04102707 -289.58908081]
[-20.62311363 -296.32073975]
[-6.61813641 -301.72595215]
[7.84314156 -305.75421143]
[22.62569618 -308.36795044]
[37.59150314 -309.54272461]
[52.60082626 -309.26760864]
[67.51352692 -307.54513550]
[82.19036865 -304.39141846]
[96.49430084 -299.83587646]
[110.29178619 -293.92108154]
[123.45398712 -286.70220947]
[135.85800171 -278.24670410]
[147.38803101 -268.63348389]
[157.93641663 -257.95233154]
[167.40466309 -246.30294800]
[175.70436096 -233.79412842]
[182.75802612 -220.54266357]
[188.49980164 -206.67227173]
[192.87605286 -192.31248474]
[195.84594727 -177.59733582]
[197.38174438 -162.66426086]
[197.46910095 -147.65266418]
[196.10720825 -132.70272827]
[193.30877686 -117.95402527]
[189.09994507 -103.54426575]
[183.51998901 -89.60799408]
[176.62103271 -76.27532959]
[168.46748352 -63.67076492]
[159.13545227 -51.91198730]
[148.71209717 -41.10878372]
[137.29473877 -31.36202812]
[124.98995972 -22.76272011]
[111.91267395 -15.39115620]
[98.18496704 -9.31616116]
[83.93501282 -4.59445858]
[87.25727081 10.03300095]
[97.62129974 20.73049164]
[93.13267517 35.90161133]
[96.45494080 50.52907181]
[99.77719879 65.15653229]
[110.14122009 75.85401917]
[105.65260315 91.02513885]
[109.73226929 105.45969391]
[114.55826569 119.66214752]
[119.38426208 133.86460876]
[124.21025848 148.06706238]
[135.97615051 158.64413452]
[132.74502563 173.18405151]
[137.57101440 187.38650513]
[142.39701843 201.58895874]
[147.22300720 215.79141235]
[161.68391418 211.79043579]
[176.35131836 208.62922668]
[191.17646790 206.31828308]
[206.11013794 204.86528015]
[221.10272217 204.27507019]
[236.10440063 204.54957581]
[251.06533813 205.68791199]
[265.93585205 207.68629456]
[280.66653442 210.53807068]
[295.20846558 214.23377991]
[309.51330566 218.76113892]
[323.53356934 224.10511780]
[337.22265625 230.24795532]
[350.53512573 237.16925049]
[363.42669678 244.84600830]
[375.85461426 253.25271606]
[387.77755737 262.36148071]
[399.15591431 272.14199829]
[409.95187378 282.56179810]
[420.12963867 293.58630371]
[429.65533447 305.17883301]
[438.49731445 317.30090332]
[446.62625122 329.91226196]
[454.01513672 342.97097778]
[460.63937378 356.43371582]
[466.47702026 370.25570679]
[471.50863647 384.39108276]
[475.71752930 398.79284668]
[479.08972168 413.41317749]
[481.61401367 428.20349121]
[483.28198242 443.11468506]
[484.08813477 458.09719849]
[484.02978516 473.10128784]
[483.10708618 488.07705688]
[481.32315063 502.97482300]
[478.68389893 517.74505615]
[475.19805908 532.33874512]
[470.87725830 546.70733643]
[465.73580933 560.80310059]
[459.79083252 574.57928467]
[453.06204224 587.99005127]
[445.57180786 600.99090576]
[437.34500122 613.53863525]
[428.40896606 625.59155273]
[418.79336548 637.10961914]
[408.53018188 648.05462646]
[397.65344238 658.39013672]
[386.19934082 668.08184814]
[374.20593262 677.09753418]
[361.71298218 685.40734863]
[348.76205444 692.98358154]
[335.39617920 699.80108643]
[321.65969849 705.83721924]
[307.59829712 711.07196045]
[293.25866699 715.48791504]
[278.68841553 719.07037354]
[263.93600464 721.80749512]
[249.05038452 723.69012451]
[234.08103943 724.71203613]
[219.07768250 724.86981201]
[204.09014893 724.16296387]
[189.16822815 722.59387207]
[174.36149597 720.16766357]
[159.71914673 716.89239502]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 146]
[44 145]
[45 144]
[46 143]
[48 141]
[49 140]
[50 139]
[51 138]
[59 137]
[61 135]
[62 134]
[63 133]
[65 131]
[66 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
