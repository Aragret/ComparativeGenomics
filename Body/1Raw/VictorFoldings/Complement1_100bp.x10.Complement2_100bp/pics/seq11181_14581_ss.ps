%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAUxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[213.62036133 890.33203125]
[199.48474121 885.30413818]
[185.61961365 879.57238770]
[172.05996704 873.15118408]
[158.84008789 866.05676270]
[145.99336243 858.30712891]
[133.55223083 849.92181396]
[121.54812622 840.92199707]
[110.01138306 831.33038330]
[98.97113037 821.17120361]
[88.45526123 810.47021484]
[78.49034882 799.25433350]
[69.10154724 787.55194092]
[60.31259155 775.39257812]
[52.14567566 762.80700684]
[44.62142944 749.82696533]
[37.75885773 736.48529053]
[31.57530212 722.81561279]
[26.08637810 708.85253906]
[21.30595398 694.63134766]
[17.24610329 680.18792725]
[13.91708183 665.55871582]
[11.32730103 650.78076172]
[9.48330212 635.89129639]
[8.38974190 620.92803955]
[8.04938412 605.92871094]
[8.46308804 590.93121338]
[9.62980938 575.97351074]
[11.54659939 561.09326172]
[14.20861721 546.32812500]
[17.60913849 531.71539307]
[21.73957253 517.29199219]
[26.58948517 503.09429932]
[32.14662552 489.15823364]
[38.39695740 475.51901245]
[45.32468796 462.21102905]
[52.91232300 449.26794434]
[61.14068985 436.72244263]
[69.98900604 424.60623169]
[79.43491364 412.94989014]
[89.45455933 401.78286743]
[100.02262878 391.13339233]
[111.11242676 381.02835083]
[122.69594574 371.49328613]
[134.74391174 362.55227661]
[147.22590637 354.22787476]
[160.11038208 346.54113770]
[173.36479187 339.51150513]
[186.95567322 333.15670776]
[181.29287720 319.26666260]
[175.63009644 305.37664795]
[169.96731567 291.48660278]
[164.30451965 277.59658813]
[158.64173889 263.70657349]
[152.97894287 249.81652832]
[147.31616211 235.92649841]
[141.65338135 222.03648376]
[135.99058533 208.14645386]
[130.32780457 194.25642395]
[124.66501617 180.36639404]
[119.00222778 166.47636414]
[113.33944702 152.58634949]
[107.67665863 138.69631958]
[95.70711517 129.83181763]
[97.66204071 114.13185883]
[86.73600006 105.40756226]
[88.44792938 91.53092957]
[84.32345581 88.33159637]
[82.06449890 84.27568054]
[81.68495941 80.21723175]
[82.85774231 76.89203644]
[77.82083130 62.76300812]
[72.78391266 48.63397980]
[67.74699402 34.50494766]
[62.71007919 20.37591934]
[47.92387009 23.08963394]
[32.89382935 23.39619446]
[18.00926399 21.28766251]
[3.65572476 16.81864929]
[-9.79499912 10.10491848]
[-21.99450111 1.32036865]
[-32.62678528 -9.30745888]
[-41.41645050 -21.50327682]
[-48.13581848 -34.95118332]
[-52.61084747 -49.30284882]
[-54.72562027 -64.18653107]
[-54.42536163 -79.21669769]
[-51.71784592 -94.00404358]
[-46.67320633 -108.16553497]
[-39.42211151 -121.33435059]
[-30.15237999 -133.16938782]
[-19.10412216 -143.36410522]
[-6.56351376 -151.65441895]
[7.14461374 -157.82559204]
[21.66518593 -161.71778870]
[36.62208557 -163.23017883]
[51.62789536 -162.32357788]
[66.29392242 -159.02149963]
[80.24028778 -153.40945435]
[93.10574341 -145.63279724]
[104.55704498 -135.89299011]
[114.29757690 -124.44230652]
[122.07502747 -111.57733917]
[127.68795776 -97.63133240]
[130.99096680 -82.96550751]
[131.89849854 -67.95976257]
[130.38705444 -53.00276566]
[126.49578094 -38.48194504]
[120.32546997 -24.77342987]
[112.03594971 -12.23229885]
[101.84192657 -1.18339872]
[90.00746918 8.08707809]
[76.83911133 15.33900356]
[81.87602234 29.46803284]
[86.91294098 43.59706116]
[91.94985962 57.72609329]
[96.98677063 71.85511780]
[102.33795929 85.86814117]
[113.26399994 94.59243774]
[111.55207062 108.46907043]
[123.92665100 118.32707214]
[121.56668091 133.03352356]
[127.22946930 146.92355347]
[132.89225769 160.81358337]
[138.55503845 174.70361328]
[144.21783447 188.59364319]
[149.88061523 202.48365784]
[155.54341125 216.37368774]
[161.20619202 230.26371765]
[166.86897278 244.15374756]
[172.53176880 258.04376221]
[178.19454956 271.93380737]
[183.85733032 285.82382202]
[189.52012634 299.71386719]
[195.18290710 313.60388184]
[200.84570312 327.49389648]
[215.00567627 322.53503418]
[229.39694214 318.29388428]
[243.98310852 314.78118896]
[258.72735596 312.00579834]
[273.59240723 309.97473145]
[288.54077148 308.69311523]
[303.53460693 308.16415405]
[318.53610229 308.38925171]
[333.50735474 309.36779785]
[348.41049194 311.09735107]
[363.20794678 313.57348633]
[377.86227417 316.79000854]
[392.33648682 320.73873901]
[406.59402466 325.40975952]
[420.59884644 330.79122925]
[434.31561279 336.86956787]
[447.70962524 343.62942505]
[460.74710083 351.05371094]
[473.39505005 359.12365723]
[485.62158203 367.81893921]
[497.39578247 377.11752319]
[508.68789673 386.99597168]
[519.46942139 397.42929077]
[529.71307373 408.39114380]
[539.39306641 419.85385132]
[548.48486328 431.78845215]
[556.96557617 444.16479492]
[564.81372070 456.95159912]
[572.00946045 470.11657715]
[578.53466797 483.62646484]
[584.37280273 497.44714355]
[589.50915527 511.54370117]
[593.93078613 525.88055420]
[597.62646484 540.42144775]
[600.58685303 555.12963867]
[602.80456543 569.96801758]
[604.27386475 584.89910889]
[604.99114990 599.88513184]
[604.95452881 614.88824463]
[604.16412354 629.87060547]
[602.62200928 644.79431152]
[600.33190918 659.62170410]
[597.29980469 674.31530762]
[593.53320312 688.83795166]
[589.04168701 703.15307617]
[583.83660889 717.22436523]
[577.93103027 731.01641846]
[571.34002686 744.49432373]
[564.08013916 757.62402344]
[556.16967773 770.37237549]
[547.62872314 782.70715332]
[538.47875977 794.59729004]
[528.74298096 806.01257324]
[518.44592285 816.92431641]
[507.61361694 827.30493164]
[496.27343750 837.12817383]
[484.45401001 846.36920166]
[472.18521118 855.00469971]
[459.49801636 863.01287842]
[446.42446899 870.37341309]
[432.99761963 877.06781006]
[419.25137329 883.07916260]
[405.22045898 888.39221191]
[390.94030762 892.99359131]
[376.44699097 896.87170410]
[361.77713013 900.01666260]
[346.96780396 902.42059326]
[332.05636597 904.07739258]
[317.08053589 904.98284912]
[302.07812500 905.13476562]
[287.08703613 904.53265381]
[272.14511108 903.17810059]
[257.29013062 901.07452393]
[242.55961609 898.22717285]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 136]
[50 135]
[51 134]
[52 133]
[53 132]
[54 131]
[55 130]
[56 129]
[57 128]
[58 127]
[59 126]
[60 125]
[61 124]
[62 123]
[63 122]
[65 120]
[67 118]
[71 117]
[72 116]
[73 115]
[74 114]
[75 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
