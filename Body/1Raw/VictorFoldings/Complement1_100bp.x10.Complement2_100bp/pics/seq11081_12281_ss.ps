%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[34.57136917 883.19226074]
[19.58139992 883.82562256]
[4.57870436 883.68646240]
[-10.39693642 882.77514648]
[-25.30580902 881.09417725]
[-40.10837555 878.64788818]
[-54.76538467 875.44287109]
[-69.23796844 871.48754883]
[-83.48774719 866.79241943]
[-97.47693634 861.36993408]
[-111.16842651 855.23455811]
[-124.52592468 848.40246582]
[-137.51400757 840.89178467]
[-150.09822083 832.72247314]
[-162.24520874 823.91619873]
[-173.92274475 814.49621582]
[-185.09988403 804.48760986]
[-195.74696350 793.91693115]
[-205.83575439 782.81213379]
[-215.33950806 771.20269775]
[-224.23301697 759.11938477]
[-232.49270630 746.59429932]
[-240.09666443 733.66064453]
[-247.02473450 720.35266113]
[-253.25852966 706.70568848]
[-258.78152466 692.75592041]
[-263.57910156 678.54028320]
[-267.63848877 664.09655762]
[-270.94897461 649.46301270]
[-273.50170898 634.67840576]
[-275.29000854 619.78204346]
[-276.30905151 604.81335449]
[-276.55621338 589.81201172]
[-276.03076172 574.81787109]
[-274.73413086 559.87066650]
[-272.66976929 545.01007080]
[-269.84313965 530.27539062]
[-266.26171875 515.70574951]
[-261.93502808 501.33984375]
[-256.87454224 487.21566772]
[-251.09364319 473.37075806]
[-244.60771179 459.84179688]
[-237.43391418 446.66467285]
[-229.59127808 433.87429810]
[-221.10063171 421.50460815]
[-211.98445129 409.58843994]
[-202.26692200 398.15734863]
[-191.97381592 387.24163818]
[-181.13244629 376.87030029]
[-169.77153015 367.07080078]
[-157.92121887 357.86917114]
[-145.61293030 349.28976440]
[-132.87930298 341.35534668]
[-119.75410461 334.08694458]
[-106.27214050 327.50387573]
[-92.46916199 321.62356567]
[-78.38177490 316.46160889]
[-64.04733276 312.03170776]
[-49.50385284 308.34558105]
[-34.78989792 305.41305542]
[-19.94449043 303.24185181]
[-5.00699472 301.83773804]
[9.98297596 301.20449829]
[24.98567200 301.34371948]
[39.96130753 302.25509644]
[54.87017059 303.93618774]
[57.31589508 289.13693237]
[59.76162338 274.33764648]
[62.20735168 259.53839111]
[51.00525284 252.96139526]
[42.68447113 242.94444275]
[38.25209427 230.66595459]
[38.25609589 217.58001709]
[42.71770859 205.24417114]
[51.12629700 195.13410950]
[62.49770355 188.46705627]
[75.48942566 186.05528259]
[78.37470245 171.33538818]
[81.25997162 156.61549377]
[84.14524841 141.89561462]
[75.64845276 129.71611023]
[78.36483765 114.74694824]
[91.19741821 105.91731262]
[93.53290558 91.10024261]
[95.31536865 76.20652771]
[97.09783936 61.31280899]
[98.88030243 46.41909027]
[100.66276550 31.52537346]
[102.44523621 16.63165474]
[103.78347015 1.69147027]
[104.67628479 -13.28193569]
[105.56909943 -28.25534058]
[106.46191406 -43.22874832]
[107.35472870 -58.20215225]
[107.46640015 -73.20173645]
[106.79661560 -88.18677521]
[92.40373230 -93.00437927]
[80.72557831 -102.69898224]
[73.34154510 -115.95946503]
[71.25025177 -130.99246216]
[74.73451996 -145.76487732]
[83.32315063 -158.27886963]
[95.85459137 -166.84201050]
[110.63406372 -170.29621887]
[125.66277313 -168.17434692]
[138.90820312 -160.76335144]
[148.57902527 -149.06549072]
[153.36734009 -134.66284180]
[152.62554932 -119.50321960]
[146.45401001 -105.63684082]
[135.68733215 -94.93902588]
[121.78165436 -88.85655975]
[122.45143890 -73.87152100]
[132.50889587 -85.00019836]
[147.34893799 -87.18494415]
[160.18690491 -79.42691803]
[165.15342712 -65.27299500]
[159.97789001 -51.19414902]
[147.02648926 -43.62704468]
[132.22041321 -46.03125763]
[122.32814026 -57.30933762]
[121.43532562 -42.33592987]
[120.54250336 -27.36252594]
[119.64968872 -12.38911915]
[118.75687408 2.58428621]
[120.51454163 4.76803207]
[121.51309967 7.77959061]
[121.43292236 11.33331776]
[120.06358337 15.03324032]
[117.33895111 18.41412163]
[115.55648804 33.30783844]
[113.77401733 48.20155716]
[111.99155426 63.09527206]
[110.20909119 77.98899078]
[108.42662048 92.88270569]
[121.65200806 85.80534363]
[135.49085999 91.59208679]
[139.74166870 105.97716522]
[131.27091980 118.35643768]
[116.32292175 119.60436249]
[105.91731262 108.80258179]
[114.46694183 121.82339478]
[111.33117676 136.71035767]
[98.86513519 144.78088379]
[95.97986603 159.50077820]
[93.09458923 174.22065735]
[90.20932007 188.94055176]
[104.14958954 198.96844482]
[112.27793121 214.03236389]
[113.00160217 231.07864380]
[106.22337341 246.67573547]
[93.35131073 257.70495605]
[77.00662231 261.98410034]
[74.56089783 276.78338623]
[72.11516571 291.58264160]
[69.66944122 306.38192749]
[84.32646942 309.58688354]
[98.79907227 313.54211426]
[113.04888153 318.23715210]
[127.03809357 323.65951538]
[140.72962952 329.79486084]
[154.08715820 336.62686157]
[167.07528687 344.13745117]
[179.65954590 352.30670166]
[191.80657959 361.11294556]
[203.48417664 370.53280640]
[214.66136169 380.54135132]
[225.30850220 391.11199951]
[235.39736938 402.21673584]
[244.90118408 413.82611084]
[253.79476929 425.90933228]
[262.05453491 438.43438721]
[269.65856934 451.36801147]
[276.58670044 464.67596436]
[282.82058716 478.32290649]
[288.34365845 492.27264404]
[293.14129639 506.48825073]
[297.20077515 520.93194580]
[300.51135254 535.56549072]
[303.06417847 550.35003662]
[304.85253906 565.24645996]
[305.87170410 580.21514893]
[306.11892700 595.21643066]
[305.59356689 610.21057129]
[304.29702759 625.15777588]
[302.23275757 640.01843262]
[299.40618896 654.75311279]
[295.82485962 669.32275391]
[291.49826050 683.68872070]
[286.43783569 697.81286621]
[280.65704346 711.65783691]
[274.17117310 725.18682861]
[266.99746704 738.36401367]
[259.15490723 751.15441895]
[250.66430664 763.52416992]
[241.54820251 775.44036865]
[231.83073425 786.87152100]
[221.53770447 797.78729248]
[210.69638062 808.15869141]
[199.33552551 817.95825195]
[187.48527527 827.15997314]
[175.17703247 835.73944092]
[162.44345093 843.67395020]
[149.31829834 850.94238281]
[135.83636475 857.52557373]
[122.03342438 863.40594482]
[107.94606018 868.56799316]
[93.61164856 872.99798584]
[79.06819153 876.68414307]
[64.35424805 879.61682129]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 156]
[67 155]
[68 154]
[69 153]
[77 147]
[78 146]
[79 145]
[80 144]
[83 141]
[84 135]
[85 134]
[86 133]
[87 132]
[88 131]
[89 130]
[90 125]
[91 124]
[92 123]
[93 122]
[94 121]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
