%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[157.05638123 249.03118896]
[158.75605774 234.12033081]
[161.59219360 219.38333130]
[165.54809570 204.90667725]
[170.60058594 190.77532959]
[176.72000122 177.07220459]
[183.87043762 163.87773132]
[171.26811218 155.74252319]
[158.66580200 147.60729980]
[146.06349182 139.47209167]
[134.17613220 141.71200562]
[123.61035919 135.03755188]
[120.32161713 122.56570435]
[107.84182739 114.24376678]
[91.08011627 113.59465790]
[83.81175995 98.47688293]
[71.20944977 90.34166718]
[58.60713577 82.20645142]
[46.00482178 74.07123566]
[39.43145370 73.36244965]
[34.88525391 69.95230103]
[33.15341949 65.50148773]
[20.79890823 56.99465942]
[8.44439983 48.48783112]
[-3.91010904 39.98100281]
[-16.26461792 31.47417831]
[-8.94001579 44.56425858]
[-4.55810642 58.90995026]
[-3.31823659 73.85861969]
[-5.27681303 88.73020172]
[-10.34473324 102.84813690]
[-18.29144096 115.57015991]
[-28.75541306 126.31749725]
[-41.26060867 134.60122681]
[-55.23812485 140.04447937]
[-70.05207825 142.39962769]
[-85.02853394 141.55953979]
[-99.48616791 137.56240845]
[-112.76724243 130.59010315]
[-124.26756287 120.95981598]
[-133.46394348 109.10964203]
[-139.93800354 95.57869720]
[-143.39523315 80.98254395]
[-143.67832947 65.98521423]
[-140.77442932 51.26898956]
[-134.81564331 37.50335312]
[-126.07303619 25.31455231]
[-114.94435120 15.25709438]
[-101.93587494 7.78852844]
[-87.63939667 3.24862432]
[-72.70531464 1.84391701]
[-57.81303024 3.63831139]
[-43.64004135 8.55017471]
[-30.82769012 16.35868454]
[-38.86886215 3.69616008]
[-46.91003418 -8.96636486]
[-54.95121002 -21.62888908]
[-62.99238205 -34.29141617]
[-76.46310425 -27.65915871]
[-90.57194519 -22.52224922]
[-105.15348816 -18.94091225]
[-120.03675842 -16.95713997]
[-135.04727173 -16.59418869]
[-150.00903320 -17.85631371]
[-164.74662781 -20.72871971]
[-179.08724976 -25.17772865]
[-192.86277771 -31.15117455]
[-205.91169739 -38.57902908]
[-218.08100891 -47.37419510]
[-229.22804260 -57.43355942]
[-239.22210693 -68.63918304]
[-247.94601440 -80.85968018]
[-255.29750061 -93.95177460]
[-261.19036865 -107.76197052]
[-265.55548096 -122.12834930]
[-268.34173584 -136.88247681]
[-269.51641846 -151.85134888]
[-269.06576538 -166.85948181]
[-266.99505615 -181.73091125]
[-263.32858276 -196.29127502]
[-258.10934448 -210.36987305]
[-251.39848328 -223.80160522]
[-243.27471924 -236.42903137]
[-233.83328247 -248.10408020]
[-223.18489075 -258.68984985]
[-211.45437622 -268.06228638]
[-198.77926636 -276.11145020]
[-185.30819702 -282.74298096]
[-171.19906616 -287.87911987]
[-156.61734009 -291.45968628]
[-141.73396301 -293.44265747]
[-126.72342682 -293.80477905]
[-111.76173401 -292.54187012]
[-97.02429962 -289.66867065]
[-82.68391418 -285.21887207]
[-68.90870667 -279.24468994]
[-55.86018753 -271.81613159]
[-43.69134521 -263.02032471]
[-32.54485321 -252.96034241]
[-22.55139351 -241.75418091]
[-13.82813835 -229.53321838]
[-6.47736263 -216.44073486]
[-0.58525074 -202.63021851]
[3.77911544 -188.26361084]
[6.56456614 -173.50933838]
[7.73844385 -158.54039001]
[7.28698444 -143.53227234]
[5.21548176 -128.66096497]
[1.54822302 -114.10079193]
[-3.67179513 -100.02249146]
[-10.38337040 -86.59111023]
[-18.50781441 -73.96412659]
[-27.94986916 -62.28958893]
[-38.59883499 -51.70437622]
[-50.32985687 -42.33258820]
[-42.28868484 -29.67006302]
[-34.24750900 -17.00753784]
[-26.20633698 -4.34501314]
[-18.16516495 8.31751156]
[-7.75779104 19.11966896]
[4.59671783 27.62649536]
[16.95122719 36.13332367]
[29.30573654 44.64014816]
[41.66024399 53.14697647]
[54.14003754 61.46892166]
[66.74234772 69.60413361]
[79.34466553 77.73934937]
[91.94697571 85.87456512]
[103.45942688 84.11254120]
[113.19699860 90.50166321]
[116.16377258 101.76396942]
[128.64356995 110.08591461]
[147.04202271 110.84638977]
[154.19871521 126.86977386]
[166.80102539 135.00498962]
[179.40333557 143.14019775]
[192.00564575 151.27542114]
[201.08596802 139.32675171]
[211.05429077 128.10824585]
[221.85215759 117.68572235]
[233.41618347 108.12035370]
[245.67849731 99.46827698]
[258.56713867 91.78026581]
[272.00646973 85.10143280]
[285.91766357 79.47097778]
[300.21902466 74.92193604]
[314.82662964 71.48101044]
[329.65481567 69.16839600]
[344.61648560 67.99765015]
[359.62390137 67.97565460]
[374.58895874 69.10253906]
[389.42385864 71.37168884]
[404.04150391 74.76978302]
[418.35614014 79.27688599]
[432.28375244 84.86653900]
[445.74261475 91.50595093]
[458.65371704 99.15615082]
[470.94134521 107.77225494]
[482.53335571 117.30368042]
[493.36172485 127.69451141]
[503.36288452 138.88375854]
[512.47821045 150.80575562]
[520.65411377 163.39054871]
[527.84271240 176.56428528]
[534.00170898 190.24963379]
[539.09509277 204.36631775]
[543.09283447 218.83146667]
[545.97161865 233.56019592]
[547.71441650 248.46607971]
[548.31109619 263.46163940]
[547.75811768 278.45886230]
[546.05871582 293.36975098]
[543.22283936 308.10681152]
[539.26721191 322.58352661]
[534.21496582 336.71499634]
[528.09582520 350.41821289]
[520.94567871 363.61282349]
[512.80639648 376.22137451]
[503.72586060 388.16989136]
[493.75732422 399.38821411]
[482.95925903 409.81051636]
[471.39508057 419.37567139]
[459.13259888 428.02749634]
[446.24380493 435.71527100]
[432.80432129 442.39385986]
[418.89303589 448.02404785]
[404.59158325 452.57281494]
[389.98391724 456.01345825]
[375.15570068 458.32580566]
[360.19396973 459.49624634]
[345.18658447 459.51797485]
[330.22155762 458.39080811]
[315.38671875 456.12136841]
[300.76910400 452.72299194]
[286.45455933 448.21563721]
[272.52706909 442.62570190]
[259.06832886 435.98605347]
[246.15734863 428.33560181]
[233.86988831 419.71926880]
[222.27806091 410.18762207]
[211.44989014 399.79656982]
[201.44892883 388.60714722]
[192.33386230 376.68496704]
[184.15817261 364.10003662]
[176.96984863 350.92614746]
[170.81108093 337.24069214]
[165.71798706 323.12390137]
[161.72048950 308.65869141]
[158.84201050 293.92990112]
[157.09948730 279.02398682]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 137]
[8 136]
[9 135]
[10 134]
[13 132]
[14 131]
[16 128]
[17 127]
[18 126]
[19 125]
[22 124]
[23 123]
[24 122]
[25 121]
[26 120]
[54 119]
[55 118]
[56 117]
[57 116]
[58 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
