%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[79.64332581 604.77947998]
[67.90286255 595.38427734]
[57.91920471 584.13995361]
[49.97958755 571.37005615]
[44.31246185 557.44195557]
[41.08087540 542.75640869]
[40.37780762 527.73596191]
[42.22348785 512.81280518]
[46.56481552 498.41625977]
[53.27687836 484.96054077]
[62.16655731 472.83282471]
[72.97808075 462.38201904]
[85.40037537 453.90884399]
[99.07602692 447.65710449]
[113.61156464 443.80664062]
[104.76964569 431.82040405]
[111.24490356 417.38497925]
[109.90666962 402.44479370]
[108.56843567 387.50460815]
[97.00965881 378.18096924]
[95.43966675 363.04855347]
[105.29753113 350.98785400]
[103.95929718 336.04766846]
[100.23158264 329.66598511]
[102.71405029 320.87536621]
[101.59840393 305.91690063]
[90.17971802 296.42221069]
[88.83520508 281.26809692]
[98.87153625 269.35549927]
[97.75588989 254.39704895]
[96.64024353 239.43859863]
[95.52458954 224.48014832]
[94.40894318 209.52169800]
[85.45059967 201.39306641]
[84.39871216 188.94006348]
[92.36066437 178.79264832]
[91.46784973 163.81924438]
[90.57503510 148.84584045]
[81.38954163 160.70445251]
[67.02068329 165.00978088]
[52.82768631 160.15605164]
[44.10417938 147.95358276]
[44.10382462 132.95358276]
[52.82674789 120.75067902]
[67.01951599 115.89627075]
[81.38858032 120.20092773]
[90.57503510 132.06019592]
[91.46784973 117.08679962]
[81.92896271 106.18010712]
[82.79138947 91.71627808]
[93.55874634 82.02038574]
[94.45156097 67.04698181]
[87.54937744 52.81074142]
[96.03050232 40.56656647]
[96.92331696 25.59316254]
[90.02114105 11.35692501]
[98.50225830 -0.88724989]
[96.16444397 -5.55433512]
[95.87913513 -10.18811321]
[97.28994751 -14.01233387]
[99.78403473 -16.50469017]
[101.34455872 -31.42329597]
[102.90508270 -46.34189987]
[104.46560669 -61.26050568]
[106.02613068 -76.17910767]
[107.58665466 -91.09771729]
[109.14717865 -106.01631927]
[110.70769501 -120.93492126]
[112.26821899 -135.85353088]
[113.82874298 -150.77214050]
[105.37403870 -138.38189697]
[93.39385223 -129.35554504]
[79.15247345 -124.64564514]
[64.15283203 -124.74925232]
[49.97787476 -129.65544128]
[38.12351990 -138.84642029]
[29.84078407 -151.35227966]
[26.00376701 -165.85321045]
[27.01739693 -180.81892395]
[32.77470398 -194.67004395]
[42.66810226 -205.94482422]
[55.65352249 -213.45341492]
[70.36058044 -216.40341187]
[85.23719788 -214.48348999]
[98.71342468 -207.89628601]
[109.36707306 -197.33692932]
[116.07383728 -183.91981506]
[118.12593842 -169.06065369]
[123.37265778 -183.11312866]
[128.61936951 -197.16558838]
[126.19786835 -212.80038452]
[137.89817810 -222.01733398]
[143.14489746 -236.06980896]
[146.90119934 -250.59187317]
[149.12631226 -265.42590332]
[151.35142517 -280.25994873]
[153.57655334 -295.09399414]
[155.80166626 -309.92803955]
[158.02677917 -324.76208496]
[144.18870544 -330.77624512]
[132.37934875 -340.16781616]
[123.40386200 -352.29641724]
[117.87423706 -366.33514404]
[116.16748047 -381.32678223]
[118.39995575 -396.24917603]
[124.41946411 -410.08493042]
[133.81558228 -421.89068604]
[145.94764709 -430.86148071]
[159.98851013 -436.38568115]
[174.98080444 -438.08663940]
[189.90235901 -435.84841919]
[203.73577881 -429.82354736]
[215.53788757 -420.42288208]
[224.50399780 -408.28735352]
[230.02279663 -394.24435425]
[231.71797180 -379.25140381]
[229.47396851 -364.33071899]
[223.44377136 -350.49963379]
[214.03854370 -338.70114136]
[201.89955139 -329.73971558]
[187.85443115 -324.22634888]
[172.86082458 -322.53695679]
[170.63571167 -307.70291138]
[168.41058350 -292.86886597]
[166.18547058 -278.03485107]
[163.96035767 -263.20080566]
[161.73524475 -248.36674500]
[171.18695068 -260.01428223]
[184.33973694 -267.22567749]
[199.24247742 -268.93115234]
[213.68441772 -264.87768555]
[225.52317810 -255.66664124]
[233.00257874 -242.66438293]
[235.01306152 -227.79972839]
[231.25640869 -213.27777100]
[222.28988647 -201.25273132]
[209.44361877 -193.50846863]
[194.62327576 -191.19380188]
[180.02738953 -194.65209961]
[167.82113647 -203.37033081]
[159.81527710 -216.05520630]
[157.19737244 -230.82308960]
[151.95065308 -216.77061462]
[154.74743652 -202.14094543]
[142.67184448 -191.91886902]
[137.42512512 -177.86640930]
[132.17840576 -163.81393433]
[128.74734497 -149.21160889]
[127.18682861 -134.29299927]
[125.62630463 -119.37439728]
[124.06578064 -104.45579529]
[122.50525665 -89.53719330]
[120.94473267 -74.61858368]
[119.38420868 -59.69998169]
[117.82368469 -44.78137589]
[116.26316833 -29.86277199]
[114.70264435 -14.94416714]
[113.47566986 0.00556599]
[120.44171143 13.17080498]
[111.89672089 26.48597908]
[111.00390625 41.45938492]
[117.96994781 54.62462234]
[109.42496490 67.93979645]
[108.53215027 82.91320038]
[118.07103729 93.81989288]
[117.20861053 108.28372192]
[106.44125366 117.97961426]
[105.54843903 132.95301819]
[105.54843903 147.95301819]
[106.44125366 162.92642212]
[107.33406830 177.89982605]
[117.82799530 193.03121948]
[109.36740112 208.40605164]
[110.48304749 223.36450195]
[111.59869385 238.32295227]
[112.71434021 253.28140259]
[113.82999420 268.23986816]
[125.52241516 278.53186035]
[126.44075012 293.71774292]
[116.55685425 304.80123901]
[117.67250824 319.75970459]
[118.89948273 334.70944214]
[120.23771667 349.64962769]
[132.08207703 359.76638794]
[133.22640991 374.93692017]
[123.50862122 386.16635132]
[124.84685516 401.10653687]
[126.18508911 416.04672241]
[135.12272644 429.10159302]
[128.55175781 442.46838379]
[143.54020691 443.67431641]
[158.10922241 447.39611816]
[171.83961487 453.52673340]
[184.33634949 461.88970947]
[195.23983765 472.24450684]
[204.23640442 484.29315186]
[211.06716919 497.68899536]
[215.53561401 512.04663086]
[217.51316833 526.95288086]
[216.94293213 541.97894287]
[213.84132385 556.69250488]
[208.29756165 570.67016602]
[200.47116089 583.50976562]
[190.58731079 594.84191895]
[178.93037415 604.34051514]
[165.83575439 611.73236084]
[151.68020630 616.80468750]
[136.87101746 619.41162109]
[121.83428192 619.47808838]
[107.00262451 617.00219727]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 190]
[17 188]
[18 187]
[19 186]
[22 183]
[23 182]
[25 181]
[26 180]
[29 177]
[30 176]
[31 175]
[32 174]
[33 173]
[36 171]
[37 170]
[38 169]
[47 168]
[48 167]
[51 164]
[52 163]
[54 161]
[55 160]
[57 158]
[61 157]
[62 156]
[63 155]
[64 154]
[65 153]
[66 152]
[67 151]
[68 150]
[69 149]
[70 148]
[88 147]
[89 146]
[90 145]
[92 143]
[93 142]
[94 127]
[95 126]
[96 125]
[97 124]
[98 123]
[99 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
