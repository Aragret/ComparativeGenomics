%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[-82.45699310 337.98251343]
[-76.63450623 351.82098389]
[-72.26577759 366.18475342]
[-69.39713287 380.92160034]
[-68.05896759 395.87530518]
[-68.26547241 410.88735962]
[-70.01445770 425.79858398]
[-73.28738403 440.45095825]
[-78.04955292 454.68914795]
[-84.25049591 468.36221313]
[-91.82446289 481.32519531]
[-100.69116974 493.44070435]
[-110.75662994 504.58029175]
[-121.91414642 514.62585449]
[-134.04544067 523.47100830]
[-147.02189636 531.02185059]
[-160.70597839 537.19842529]
[-174.95262146 541.93518066]
[-189.61080933 545.18200684]
[-204.52513123 546.90441895]
[-219.53752136 547.08416748]
[-234.48881531 545.71936035]
[-249.22053528 542.82446289]
[-263.57650757 538.43011475]
[-277.40457153 532.58300781]
[-290.55810547 525.34497070]
[-302.89770508 516.79290771]
[-314.29254150 507.01733398]
[-324.62182617 496.12194824]
[-333.77609253 484.22219849]
[-341.65826416 471.44427490]
[-348.18481445 457.92361450]
[-353.28652954 443.80355835]
[-356.90936279 429.23373413]
[-359.01486206 414.36865234]
[-359.58074951 399.36584473]
[-358.60101318 384.38439941]
[-356.08605957 369.58309937]
[-352.06250000 355.11880493]
[-346.57302856 341.14492798]
[-339.67581177 327.80953979]
[-331.44396973 315.25402832]
[-321.96478271 303.61148071]
[-311.33871460 293.00531006]
[-299.67840576 283.54797363]
[-287.10748291 275.33969116]
[-273.75918579 268.46746826]
[-259.77502441 263.00421143]
[-245.30325317 259.00778198]
[-230.49725342 256.52053833]
[-215.51397705 255.56889343]
[-200.51226807 256.16290283]
[-185.65115356 258.29626465]
[-171.08816528 261.94641113]
[-156.97769165 267.07458496]
[-143.46928406 273.62646484]
[-130.70616150 281.53259277]
[-118.82360840 290.70913696]
[-107.94759369 301.05883789]
[-96.54513550 291.31286621]
[-85.14266968 281.56689453]
[-73.74020386 271.82092285]
[-62.33774567 262.07498169]
[-59.29557800 255.33946228]
[-50.69219971 252.27032471]
[-39.14589691 242.69520569]
[-28.34374046 232.28782654]
[-18.34556770 221.10585022]
[-8.34739590 209.92387390]
[1.65077579 198.74189758]
[11.64894772 187.55992126]
[14.36435795 172.91493225]
[29.33067703 167.78465271]
[39.32884979 156.60267639]
[49.32702255 145.42070007]
[59.32519531 134.23872375]
[69.32336426 123.05674744]
[79.32154083 111.87477112]
[89.31970978 100.69280243]
[97.82653809 88.33828735]
[104.70594788 75.00885773]
[111.58536530 61.67943192]
[118.46477509 48.35000229]
[125.34418488 35.02057266]
[132.22360229 21.69114494]
[139.10301208 8.36171532]
[145.98242188 -4.96771383]
[152.86183167 -18.29714394]
[152.31538391 -34.10890961]
[165.02804565 -41.87018967]
[171.90747070 -55.19961929]
[178.78688049 -68.52904510]
[185.56686401 -81.90932465]
[192.24707031 -95.33969879]
[198.92726135 -108.77007294]
[199.94711304 -117.84738922]
[205.80819702 -122.34956360]
[212.68760681 -135.67900085]
[219.56701660 -149.00842285]
[207.27815247 -157.65118408]
[196.28063965 -167.88684082]
[186.77937317 -179.52470398]
[178.95135498 -192.34794617]
[172.94241333 -206.11770630]
[168.86448669 -220.57745361]
[166.79353333 -235.45780945]
[166.76815796 -250.48156738]
[168.78883362 -265.36883545]
[172.81788635 -279.84225464]
[178.78028870 -293.63226318]
[186.56495667 -306.48187256]
[196.02685547 -318.15176392]
[206.98971558 -328.42449951]
[219.24932861 -337.10873413]
[232.57728577 -344.04266357]
[246.72529602 -349.09710693]
[261.42977905 -352.17794800]
[276.41683960 -353.22775269]
[291.40725708 -352.22695923]
[306.12173462 -349.19421387]
[320.28619385 -344.18606567]
[333.63674927 -337.29574585]
[345.92468262 -328.65164185]
[356.92108154 -318.41479492]
[366.42108154 -306.77590942]
[374.24774170 -293.95181274]
[380.25518799 -280.18139648]
[384.33154297 -265.72122192]
[386.40087891 -250.84063721]
[386.42462158 -235.81687927]
[384.40234375 -220.92982483]
[380.37173462 -206.45683289]
[374.40783691 -192.66749573]
[366.62176514 -179.81871033]
[357.15859985 -168.14985657]
[346.19464111 -157.87829590]
[333.93408203 -149.19538879]
[320.60537720 -142.26290894]
[306.45681763 -137.20997620]
[291.75198364 -134.13075256]
[276.76483154 -133.08256531]
[261.77453613 -134.08497620]
[247.06036377 -137.11930847]
[232.89645386 -142.12901306]
[226.01704407 -128.79957581]
[219.13761902 -115.47015381]
[212.35763550 -102.08988190]
[205.67744446 -88.65950012]
[198.99723816 -75.22912598]
[198.83296204 -67.84029388]
[192.11630249 -61.64963531]
[185.23689270 -48.32020569]
[178.35748291 -34.99077606]
[179.39599609 -20.13241959]
[166.19126892 -11.41773033]
[159.31185913 1.91169870]
[152.43243408 15.24112797]
[145.55302429 28.57055664]
[138.67361450 41.89998627]
[131.79420471 55.22941589]
[124.91479492 68.55884552]
[118.03537750 81.88827515]
[111.15596771 95.21770477]
[123.53790283 86.75084686]
[137.98048401 82.69969940]
[152.95954895 83.49179077]
[166.89433289 89.04353333]
[178.31425476 98.76902771]
[186.01416016 111.64193726]
[189.18142700 126.30373383]
[187.48182678 141.20713806]
[181.09472656 154.77934265]
[170.69416809 165.58805847]
[157.37773132 172.49259949]
[142.55076599 174.76432800]
[127.77795410 172.16349792]
[114.61833954 164.96456909]
[104.46067810 153.92727661]
[98.37692261 140.21640015]
[97.00912476 125.27890015]
[100.50168610 110.69097137]
[90.50350952 121.87294769]
[80.50534058 133.05491638]
[70.50717163 144.23689270]
[60.50899506 155.41886902]
[50.51082611 166.60084534]
[40.51265335 177.78282166]
[37.08210754 193.22761536]
[22.83092308 197.55810547]
[12.83275032 208.74008179]
[2.83457828 219.92204285]
[-7.16359377 231.10401917]
[-17.16176605 242.28599548]
[-2.49201131 239.15577698]
[11.80764008 243.68566895]
[21.99929237 254.69158936]
[25.41887474 269.29660034]
[21.17251396 283.68301392]
[10.37020111 294.09020996]
[-4.16436768 297.79782104]
[-18.63188934 293.83663940]
[-29.25058937 283.24215698]
[-33.24476624 268.78372192]
[-29.57077789 254.24150085]
[-41.11707687 263.81661987]
[-52.59177780 273.47741699]
[-63.99423981 283.22338867]
[-75.39670563 292.96936035]
[-86.79916382 302.71533203]
[-98.20162964 312.46130371]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 210]
[60 209]
[61 208]
[62 207]
[63 206]
[65 205]
[66 204]
[67 193]
[68 192]
[69 191]
[70 190]
[71 189]
[73 187]
[74 186]
[75 185]
[76 184]
[77 183]
[78 182]
[79 181]
[80 163]
[81 162]
[82 161]
[83 160]
[84 159]
[85 158]
[86 157]
[87 156]
[88 155]
[90 153]
[91 152]
[92 151]
[93 149]
[94 148]
[95 147]
[97 146]
[98 145]
[99 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
