%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUGxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[2.49486947 561.29827881]
[-8.53458977 571.47210693]
[-20.19322968 580.91833496]
[-32.43313980 589.59820557]
[-45.20402527 597.47607422]
[-58.45340729 604.51947021]
[-72.12684631 610.69952393]
[-86.16814423 615.99078369]
[-100.51960754 620.37152100]
[-115.12226105 623.82379150]
[-129.91609192 626.33337402]
[-144.84033203 627.88995361]
[-159.83363342 628.48712158]
[-174.83439636 628.12243652]
[-189.78096008 626.79742432]
[-204.61192322 624.51745605]
[-219.26634216 621.29199219]
[-233.68399048 617.13421631]
[-247.80561829 612.06121826]
[-261.57321167 606.09387207]
[-274.93017578 599.25671387]
[-287.82165527 591.57775879]
[-300.19464111 583.08868408]
[-311.99832153 573.82427979]
[-323.18414307 563.82269287]
[-333.70620728 553.12487793]
[-343.52120972 541.77496338]
[-352.58886719 529.81951904]
[-360.87191772 517.30761719]
[-368.33630371 504.29077148]
[-374.95135498 490.82238770]
[-380.68988037 476.95788574]
[-385.52828979 462.75418091]
[-389.44674683 448.26965332]
[-392.42913818 433.56381226]
[-394.46316528 418.69714355]
[-395.54049683 403.73068237]
[-395.65673828 388.72595215]
[-394.81134033 373.74459839]
[-393.00784302 358.84817505]
[-390.25363159 344.09793091]
[-386.56002808 329.55444336]
[-381.94216919 315.27749634]
[-376.41909790 301.32574463]
[-370.01348877 287.75653076]
[-362.75164795 274.62557983]
[-354.66342163 261.98690796]
[-345.78204346 249.89242554]
[-336.14401245 238.39181519]
[-325.78890991 227.53234863]
[-314.75933838 217.35864258]
[-303.10061646 207.91250610]
[-290.86059570 199.23277283]
[-278.08963013 191.35508728]
[-264.84017944 184.31182861]
[-251.16665649 178.13194275]
[-237.12530518 172.84082031]
[-222.77378845 168.46020508]
[-208.17109680 165.00810242]
[-193.37722778 162.49868774]
[-178.45298767 160.94229126]
[-163.45967102 160.34527588]
[-148.45892334 160.71012878]
[-133.51237488 162.03533936]
[-118.68142700 164.31544495]
[-104.02705383 167.54110718]
[-89.60945129 171.69903564]
[-75.48786926 176.77218628]
[-61.72034836 182.73966980]
[-48.36345291 189.57699585]
[-35.47206879 197.25604248]
[-23.09917068 205.74528503]
[-11.29560566 215.00981140]
[-1.29743350 203.82783508]
[8.70073891 192.64585876]
[18.69890976 181.46388245]
[12.30602360 166.81869507]
[12.94213390 150.79344177]
[20.53060150 136.59840393]
[33.59695435 127.09942627]
[49.55512238 124.23925018]
[65.21920013 128.64045715]
[75.04978180 117.31085968]
[84.88036346 105.98126984]
[84.75889587 94.33538818]
[92.45697021 85.59577179]
[104.02503967 84.24633026]
[114.02321625 73.06435394]
[124.02138519 61.88238144]
[133.85195923 50.55278778]
[143.51277161 39.07808685]
[153.17358398 27.60338783]
[162.83439636 16.12868690]
[152.22575378 5.51086283]
[142.56915283 -5.97963381]
[133.93609619 -18.25772858]
[126.39047241 -31.23251724]
[119.98818207 -44.80793762]
[114.77660370 -58.88348007]
[110.79432678 -73.35493469]
[108.07083893 -88.11515045]
[106.62630463 -103.05485535]
[106.47142029 -118.06343842]
[107.60733032 -133.02976990]
[110.02561951 -147.84304810]
[113.70838928 -162.39360046]
[118.62837219 -176.57369995]
[124.74914551 -190.27836609]
[132.02537537 -203.40611267]
[140.40321350 -215.85975647]
[149.82063293 -227.54708862]
[160.20788574 -238.38159180]
[171.48808289 -248.28303528]
[183.57769775 -257.17813110]
[196.38723755 -265.00097656]
[209.82185364 -271.69372559]
[223.78207397 -277.20675659]
[238.16455078 -281.49926758]
[252.86279297 -284.53952026]
[267.76797485 -286.30496216]
[282.76977539 -286.78253174]
[297.75704956 -285.96871948]
[312.61892700 -283.86950684]
[327.24530029 -280.50048828]
[341.52792358 -275.88653564]
[355.36102295 -270.06188965]
[368.64218140 -263.06961060]
[381.27310181 -254.96148682]
[393.16024780 -245.79757690]
[404.21557617 -235.64569092]
[414.35729980 -224.58100891]
[423.51028442 -212.68545532]
[431.60678101 -200.04708862]
[438.58685303 -186.75950623]
[444.39880371 -172.92105103]
[448.99960327 -158.63420105]
[452.35519409 -144.00473022]
[454.44073486 -129.14094543]
[455.24078369 -114.15290833]
[454.74942017 -99.15157318]
[452.97027588 -84.24801636]
[449.91650391 -69.55257416]
[445.61074829 -55.17404938]
[440.08489990 -41.21889877]
[433.37982178 -27.79044151]
[425.54516602 -14.98810196]
[416.63897705 -2.90666389]
[406.72717285 8.36442471]
[395.88311768 18.74171448]
[384.18713379 28.14837456]
[371.72579956 36.51475906]
[358.59136963 43.77892685]
[344.88107300 49.88709641]
[330.69647217 54.79404449]
[316.14254761 58.46343613]
[301.32702637 60.86810684]
[286.35968018 61.99025726]
[271.35122681 61.82157135]
[256.41287231 60.36330414]
[241.65515137 57.62625122]
[227.18737793 53.63067627]
[213.11662292 48.40616226]
[199.54710388 41.99138641]
[186.57925415 34.43384933]
[174.30909729 25.78949738]
[164.64828491 37.26419830]
[154.98747253 48.73889923]
[145.32666016 60.21360016]
[144.83526611 64.96413422]
[141.35437012 69.45639801]
[135.20335388 71.88055420]
[125.20518494 83.06253052]
[115.20701599 94.24449921]
[112.20140839 110.74730682]
[96.20995331 115.81185150]
[86.37937164 127.14144135]
[76.54878998 138.47103882]
[82.63909912 151.22465515]
[83.40617371 165.29362488]
[78.76716614 178.55201721]
[69.45363617 189.00901794]
[56.89639282 195.10778809]
[43.00573730 195.95722961]
[29.88088608 191.46206665]
[19.88271332 202.64404297]
[9.88454151 213.82600403]
[-0.11363094 225.00798035]
[10.40853786 235.70562744]
[20.22368622 247.05545044]
[29.29147720 259.01083374]
[37.57465363 271.52261353]
[45.03917313 284.53939819]
[51.65436935 298.00769043]
[57.39305115 311.87213135]
[62.23163986 326.07577515]
[66.15025330 340.56027222]
[69.13278961 355.26605225]
[71.16699219 370.13272095]
[72.24449921 385.09918213]
[72.36088562 400.10391235]
[71.51567841 415.08526611]
[69.71233368 429.98168945]
[66.95828247 444.73199463]
[63.26483154 459.27551270]
[58.64715576 473.55252075]
[53.12423706 487.50430298]
[46.71876526 501.07360840]
[39.45706177 514.20458984]
[31.36897278 526.84338379]
[22.48772812 538.93798828]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 187]
[74 186]
[75 185]
[76 184]
[82 177]
[83 176]
[84 175]
[87 173]
[88 172]
[89 171]
[90 168]
[91 167]
[92 166]
[93 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
