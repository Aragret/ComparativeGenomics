%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[34.73915482 306.86819458]
[33.51760483 321.82705688]
[31.06492615 336.63394165]
[27.39787292 351.18771362]
[22.54149246 365.38894653]
[16.52896309 379.14062500]
[9.40135574 392.34884644]
[1.20735931 404.92333984]
[-7.99705172 416.77822876]
[-18.14900017 427.83251953]
[-29.17913818 438.01071167]
[-41.01211548 447.24328613]
[-53.56710434 455.46713257]
[-66.75833130 462.62609863]
[-80.49569702 468.67129517]
[-94.68534851 473.56143188]
[-109.23036957 477.26306152]
[-124.03137970 479.75091553]
[-138.98728943 481.00802612]
[-153.99592590 481.02575684]
[-168.95477295 479.80401611]
[-183.76162720 477.35116577]
[-198.31535339 473.68395996]
[-212.51654053 468.82739258]
[-226.26815796 462.81469727]
[-239.47627258 455.68695068]
[-252.05067444 447.49279785]
[-263.90545654 438.28823853]
[-274.95962524 428.13616943]
[-285.13769531 417.10589600]
[-294.37011719 405.27282715]
[-302.59381104 392.71774292]
[-309.75262451 379.52639771]
[-315.79766846 365.78897095]
[-320.68762207 351.59927368]
[-324.38906860 337.05419922]
[-326.87677002 322.25317383]
[-328.13366699 307.29724121]
[-328.15124512 292.28860474]
[-326.92935181 277.32977295]
[-324.47631836 262.52294922]
[-320.80889893 247.96925354]
[-315.95217896 233.76814270]
[-309.93933105 220.01658630]
[-302.81140137 206.80854797]
[-294.61712646 194.23425293]
[-285.41241455 182.37957764]
[-275.26022339 171.32553101]
[-264.22982788 161.14759827]
[-252.39663696 151.91532898]
[-239.84144592 143.69175720]
[-226.65003967 136.53309631]
[-212.91253662 130.48823547]
[-198.72276306 125.59844971]
[-184.17765808 121.89716339]
[-169.37658691 119.40966034]
[-154.42065430 118.15291595]
[-139.41201782 118.13552856]
[-124.45320129 119.35761261]
[-109.64640045 121.81082153]
[-95.09275818 125.47839355]
[-80.89170074 130.33528137]
[-67.14022064 136.34829712]
[-53.93227005 143.47637939]
[-41.35806656 151.67083740]
[-29.50350761 160.87567139]
[-18.44957352 171.02801514]
[-8.27177620 182.05851746]
[3.55449390 172.83140564]
[15.38076401 163.60430908]
[27.20703316 154.37721252]
[39.03330231 145.15011597]
[40.59771729 130.38230896]
[52.45979309 120.85624695]
[67.93902588 122.59728241]
[78.89493561 112.35189056]
[88.89310455 101.16991425]
[98.80775452 89.91381836]
[108.63833618 78.58422852]
[118.46891785 67.25463104]
[128.29949951 55.92504120]
[138.13008118 44.59544754]
[141.33029175 29.10128021]
[155.51542664 24.55910301]
[155.38414001 11.66160107]
[163.80529785 2.42753935]
[175.86143494 1.43964350]
[179.29199219 -14.00515938]
[193.54316711 -18.33563614]
[203.54133606 -29.51761246]
[213.53952026 -40.69958496]
[223.53768921 -51.88156128]
[233.53585815 -63.06353378]
[243.53402710 -74.24550629]
[233.24623108 -85.17448425]
[223.93601990 -96.94740295]
[215.67234802 -109.47708893]
[208.51638794 -122.67079163]
[202.52111816 -136.43081665]
[197.73092651 -150.65528870]
[194.18128967 -165.23889160]
[191.89848328 -180.07365417]
[190.89939880 -195.04974365]
[191.19143677 -210.05627441]
[192.77244568 -224.98216248]
[195.63072205 -239.71687317]
[199.74507141 -254.15132141]
[205.08506775 -268.17864990]
[211.61117554 -281.69497681]
[219.27503967 -294.60028076]
[228.01995850 -306.79895020]
[237.78117371 -318.20071411]
[248.48640442 -328.72116089]
[260.05639648 -338.28234863]
[272.40548706 -346.81353760]
[285.44226074 -354.25155640]
[299.07019043 -360.54132080]
[313.18838501 -365.63626099]
[327.69229126 -369.49865723]
[342.47451782 -372.09994507]
[357.42565918 -373.42083740]
[372.43502808 -373.45153809]
[387.39144897 -372.19183350]
[402.18420410 -369.65106201]
[416.70379639 -365.84805298]
[430.84271240 -360.81091309]
[444.49624634 -354.57696533]
[457.56335449 -347.19235229]
[469.94726562 -338.71176147]
[481.55627441 -329.19799805]
[492.30447388 -318.72143555]
[502.11224365 -307.35971069]
[510.90701294 -295.19692993]
[518.62359619 -282.32308960]
[525.20495605 -268.83355713]
[530.60229492 -254.82821655]
[534.77569580 -240.41072083]
[537.69421387 -225.68782043]
[539.33630371 -210.76853943]
[539.68975830 -195.76332092]
[538.75195312 -180.78326416]
[536.52984619 -165.93928528]
[533.03991699 -151.34127808]
[528.30798340 -137.09732056]
[522.36907959 -123.31288910]
[515.26715088 -110.09001923]
[507.05480957 -97.52662659]
[497.79284668 -85.71571350]
[487.54986572 -74.74473572]
[476.40164185 -64.69491577]
[464.43075562 -55.64065552]
[451.72586060 -47.64899826]
[438.38095093 -40.77911377]
[424.49490356 -35.08185959]
[410.17047119 -30.59941673]
[395.51373291 -27.36497498]
[380.63320923 -25.40248108]
[365.63906860 -24.72646523]
[350.64230347 -25.34193039]
[335.75399780 -27.24432182]
[321.08432007 -30.41955566]
[306.74191284 -34.84412003]
[292.83294678 -40.48525620]
[279.46041870 -47.30120087]
[266.72335815 -55.24149323]
[254.71600342 -64.24733734]
[244.71783447 -53.06536484]
[234.71966553 -41.88338852]
[224.72149658 -30.70141411]
[214.72331238 -19.51943970]
[204.72514343 -8.33746529]
[202.00973511 6.30752754]
[187.04341125 11.43781567]
[184.38529968 28.78432465]
[166.84501648 34.38968277]
[164.34794617 49.07348251]
[149.45967102 54.42602921]
[139.62908936 65.75562286]
[129.79850769 77.08521271]
[119.96793365 88.41481018]
[110.13735199 99.74440002]
[107.65315247 107.41259766]
[100.07508087 111.16808319]
[90.07691193 122.35005951]
[104.53948975 118.37091064]
[119.31159973 120.97569275]
[131.54096985 129.66146851]
[138.86628723 142.75114441]
[139.87316895 157.71730042]
[134.36718750 171.67024231]
[123.41147614 181.91583252]
[109.12139130 186.47583008]
[94.25614166 184.46977234]
[81.68596649 176.28498840]
[73.83796692 163.50184631]
[72.22747803 148.58854675]
[77.16612244 134.42355347]
[75.09024048 149.86143494]
[62.96527863 159.05056763]
[48.26040268 156.97639465]
[36.43413162 166.20349121]
[24.60786247 175.43058777]
[12.78159237 184.65768433]
[0.95532238 193.88478088]
[9.17932987 206.43966675]
[16.33846664 219.63081360]
[22.38382530 233.36810303]
[27.27411079 247.55770874]
[30.97591591 262.10266113]
[33.46395493 276.90365601]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 204]
[69 203]
[70 202]
[71 201]
[72 200]
[75 197]
[76 184]
[77 183]
[78 181]
[79 180]
[80 179]
[81 178]
[82 177]
[84 175]
[87 173]
[89 171]
[90 170]
[91 169]
[92 168]
[93 167]
[94 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
