%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxGGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[166.15753174 569.90319824]
[172.30627441 556.15039062]
[181.36157227 544.11090088]
[192.86920166 534.38861084]
[206.25196838 527.47131348]
[202.49566650 512.94921875]
[198.73936462 498.42718506]
[194.98306274 483.90512085]
[191.11875916 469.41143799]
[187.14665222 454.94689941]
[176.31530762 444.72286987]
[180.12202454 429.36645508]
[176.14993286 414.90191650]
[172.17782593 400.43740845]
[161.34648132 390.21334839]
[165.15319824 374.85693359]
[161.18109131 360.39242554]
[146.24267578 359.75646973]
[132.21322632 354.52725220]
[120.47109985 345.20507812]
[112.17405701 332.69308472]
[108.14515686 318.20962524]
[108.79106140 303.16973877]
[114.06110382 289.04690552]
[123.45096588 277.22854614]
[136.05090332 268.87997437]
[132.07881165 254.41545105]
[128.10670471 239.95092773]
[124.13461304 225.48640442]
[119.33209229 219.86878967]
[120.21277618 210.77691650]
[116.45647430 196.25485229]
[112.70017242 181.73278809]
[108.94387054 167.21073914]
[105.18756866 152.68867493]
[101.43127441 138.16661072]
[90.75334167 127.78244781]
[94.78826904 112.48440552]
[91.72364807 127.16800690]
[85.80422974 140.95062256]
[77.26577759 153.28329468]
[66.44837189 163.67481995]
[53.78287125 171.71130371]
[39.77373886 177.07266235]
[24.97895050 179.54536438]
[9.98777485 179.03089905]
[-4.60269308 175.54977417]
[-18.21132088 169.24063110]
[-30.29608154 160.35476685]
[-40.37564468 149.24609375]
[-48.04854584 136.35708618]
[-53.00917435 122.20109558]
[-55.05995178 107.34194946]
[-54.11919403 92.37147522]
[-50.22437286 77.88595581]
[-43.53062057 64.46232605]
[-34.30454254 52.63526154]
[-22.91361237 42.87582397]
[-9.81152344 35.57272339]
[4.47987080 31.01683998]
[19.39134979 29.38963699]
[34.32899475 30.75592422]
[48.69784546 35.06127930]
[61.92559814 42.13422775]
[73.48539734 51.69305420]
[82.91680908 63.35702896]
[89.84420013 76.66159058]
[93.99089813 91.07270050]
[87.36401367 73.89231110]
[99.21379852 60.94821548]
[101.65952301 46.14894485]
[104.10524750 31.34967232]
[98.72158813 16.47261810]
[108.43051147 5.17721701]
[110.76599884 -9.63985062]
[112.99111176 -24.47389412]
[115.21623230 -39.30793762]
[117.44134521 -54.14198303]
[117.21801758 -69.14031982]
[114.55222321 -83.90153503]
[111.88642883 -98.66275024]
[104.80766296 -85.43811798]
[91.75496674 -78.04708862]
[76.77288055 -78.77986145]
[64.50375366 -87.40937805]
[58.74930954 -101.26168060]
[61.29262924 -116.04449463]
[71.34563446 -127.17719269]
[85.79329681 -131.21020508]
[100.15884399 -126.89383698]
[109.99106598 -115.56533813]
[109.32128143 -130.55038452]
[108.65149689 -145.53541565]
[105.14202118 -153.96876526]
[108.08497620 -160.74819946]
[107.63836670 -175.74156189]
[99.49361420 -189.30523682]
[106.84854889 -202.25723267]
[92.88499451 -208.42018127]
[82.98480225 -220.03694153]
[79.11367035 -234.80099487]
[82.04019928 -249.78091431]
[91.18334198 -262.00244141]
[104.72770691 -269.03897095]
[119.98406219 -269.49340820]
[133.92323303 -263.27554321]
[143.77760315 -251.61988831]
[147.59056091 -236.84069824]
[144.60507202 -221.87242126]
[135.41386414 -209.68699646]
[121.84189606 -202.70384216]
[129.95471191 -190.21258545]
[122.63172150 -176.18815613]
[123.07832336 -161.19480896]
[123.63653564 -146.20520020]
[124.30632019 -131.22016907]
[124.97610474 -116.23512268]
[126.64764404 -101.32855225]
[129.31344604 -86.56732941]
[131.97923279 -71.80611420]
[136.20870972 -86.19748688]
[143.97338867 -99.03141022]
[154.75830078 -109.45665741]
[167.84809875 -116.78176117]
[182.37458801 -120.52087402]
[197.37429810 -120.42598724]
[211.85232544 -116.50339508]
[224.84840393 -109.01328278]
[235.50054932 -98.45242310]
[243.10224915 -85.52129364]
[247.14930725 -71.07756042]
[247.37330627 -56.07923508]
[243.75936890 -41.52109528]
[236.54719543 -28.36873055]
[226.21516418 -17.49449158]
[213.44854736 -9.61962700]
[199.09411621 -5.26644802]
[184.10394287 -4.72368574]
[169.47225952 -8.02733994]
[156.16955566 -14.95829010]
[145.07814026 -25.05683327]
[136.93367004 -37.65316772]
[132.27539062 -51.91686630]
[130.05027771 -37.08282089]
[127.82515717 -22.24877739]
[125.60004425 -7.41473389]
[127.71653748 -0.33361527]
[123.22978210 7.62294436]
[128.78837585 21.44145584]
[118.90451813 33.79539871]
[116.45879364 48.59466934]
[114.01306915 63.39393997]
[120.80023956 73.40697479]
[118.88378143 85.75650787]
[108.75211334 93.73849487]
[109.31032562 108.72811127]
[120.25693512 120.15099335]
[115.95333099 134.41030884]
[119.70963287 148.93237305]
[123.46593475 163.45443726]
[127.22222900 177.97648621]
[130.97853088 192.49855042]
[134.73483276 207.02061462]
[138.59913635 221.51431274]
[142.57124329 235.97883606]
[146.54333496 250.44335938]
[150.51542664 264.90786743]
[165.61196899 265.65075684]
[179.72064209 271.01617432]
[191.46423340 280.46691895]
[199.70051575 293.06765747]
[203.63343811 307.57745361]
[202.88996887 322.57208252]
[197.55551147 336.58361816]
[188.16421509 348.24441528]
[175.64561462 356.42031860]
[179.61772156 370.88485718]
[190.73318481 382.14349365]
[186.64234924 396.46530151]
[190.61445618 410.92984009]
[194.58654785 425.39434814]
[205.70201111 436.65298462]
[201.61119080 450.97482300]
[205.58328247 465.43933105]
[210.87344360 472.88595581]
[209.50512695 480.14883423]
[213.26141357 494.67089844]
[217.01771545 509.19293213]
[220.77401733 523.71502686]
[235.83239746 523.27569580]
[250.61088562 526.19873047]
[264.36819458 532.33746338]
[276.41427612 541.38403320]
[286.14486694 552.88458252]
[293.07192993 566.26232910]
[296.84799194 580.84619141]
[297.28363037 595.90466309]
[294.35702515 610.68243408]
[288.21493530 624.43829346]
[279.16549683 636.48211670]
[267.66256714 646.20996094]
[254.28315735 653.13378906]
[239.69837952 656.90631104]
[224.63980103 657.33831787]
[209.86273193 654.40814209]
[196.10839844 648.26269531]
[184.06671143 639.21032715]
[174.34167480 627.70501709]
[167.42109680 614.32397461]
[163.65209961 599.73828125]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 189]
[6 188]
[7 187]
[8 186]
[9 184]
[10 183]
[12 181]
[13 180]
[14 179]
[16 177]
[17 176]
[26 167]
[27 166]
[28 165]
[29 164]
[31 163]
[32 162]
[33 161]
[34 160]
[35 159]
[36 158]
[38 156]
[68 155]
[70 152]
[71 151]
[72 150]
[74 148]
[75 146]
[76 145]
[77 144]
[78 143]
[79 120]
[80 119]
[81 118]
[91 117]
[92 116]
[93 115]
[95 114]
[96 113]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
