%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[10.13183022 317.97930908]
[14.52269650 332.34167480]
[17.15031433 347.12860107]
[17.97636414 362.12442017]
[16.98879814 377.11050415]
[14.20202255 391.86825562]
[9.65667343 406.18246460]
[3.41903543 419.84445190]
[-4.41992712 432.65490723]
[-13.74590015 444.42706299]
[-24.42288208 454.98922729]
[-36.29517365 464.18737793]
[-49.18964005 471.88739014]
[-62.91823959 477.97695923]
[-77.28077698 482.36727905]
[-92.06778717 484.99435425]
[-107.06365204 485.81985474]
[-122.04968262 484.83172607]
[-136.80732727 482.04440308]
[-151.12138367 477.49850464]
[-164.78311157 471.26034546]
[-177.59329224 463.42092896]
[-189.36509705 454.09451294]
[-199.92686462 443.41711426]
[-209.12457275 431.54449463]
[-216.82409668 418.64974976]
[-222.91316223 404.92089844]
[-227.30294800 390.55819702]
[-229.92945862 375.77108765]
[-230.75439453 360.77520752]
[-229.76570129 345.78921509]
[-226.97782898 331.03167725]
[-222.43141174 316.71777344]
[-216.19274902 303.05627441]
[-208.35282898 290.24639893]
[-199.02597046 278.47494507]
[-188.34820557 267.91357422]
[-176.47521973 258.71630859]
[-163.58018494 251.01727295]
[-149.85112000 244.92872620]
[-135.48826599 240.53947449]
[-120.70104980 237.91351318]
[-105.70512390 237.08914185]
[-90.71916962 238.07838440]
[-75.96173096 240.86682129]
[-61.64801025 245.41377258]
[-47.98674774 251.65293884]
[-35.17716217 259.49334717]
[-25.86227989 247.73609924]
[-16.54739761 235.97883606]
[-20.72705460 221.70759583]
[-15.64160824 207.54418945]
[-3.04407334 198.99108887]
[12.35220623 199.50173950]
[21.66708946 187.74449158]
[30.98197174 175.98724365]
[40.29685593 164.22999573]
[49.61173630 152.47273254]
[58.92662048 140.71548462]
[68.24150085 128.95823669]
[77.55638885 117.20098877]
[86.69519043 105.30635071]
[88.51278687 91.44316864]
[101.27543640 85.73294830]
[110.23612976 73.70357513]
[119.19682312 61.67419815]
[114.73700714 46.92915726]
[119.75602722 32.55338287]
[132.13125610 23.99080658]
[146.99755859 24.35282135]
[155.95825195 12.32344341]
[164.91894531 0.29406613]
[173.87963867 -11.73531151]
[182.84034729 -23.76468849]
[191.80104065 -35.79406738]
[200.76173401 -47.82344437]
[209.72242737 -59.85282135]
[200.52099609 -72.71960449]
[195.75189209 -87.78153992]
[195.87051392 -103.56059265]
[200.85325623 -118.51225281]
[210.20094299 -131.17669678]
[222.98889160 -140.32133484]
[237.95829773 -145.06077576]
[253.64018250 -144.94253540]
[268.49954224 -139.99020386]
[277.28015137 -152.15165710]
[286.06076050 -164.31311035]
[294.84136963 -176.47456360]
[303.62194824 -188.63601685]
[292.24179077 -198.42202759]
[281.73254395 -209.13787842]
[272.16995239 -220.70639038]
[263.62286377 -233.04418945]
[256.15292358 -246.06239319]
[249.81390381 -259.66720581]
[244.65148926 -273.76058960]
[240.70291138 -288.24099731]
[237.99658203 -303.00411987]
[236.55200195 -317.94357300]
[236.37960815 -332.95169067]
[237.48060608 -347.92037964]
[239.84709167 -362.74176025]
[243.46200562 -377.30908203]
[248.29930115 -391.51733398]
[254.32412720 -405.26416016]
[261.49304199 -418.45053101]
[269.75445557 -430.98141479]
[279.04879761 -442.76654053]
[289.30911255 -453.72097778]
[300.46148682 -463.76580811]
[312.42553711 -472.82864380]
[325.11505127 -480.84423828]
[338.43865967 -487.75476074]
[352.30032349 -493.51049805]
[366.60015869 -498.06991577]
[381.23516846 -501.40017700]
[396.09985352 -503.47729492]
[411.08715820 -504.28631592]
[426.08908081 -503.82141113]
[440.99752808 -502.08590698]
[455.70510864 -499.09231567]
[470.10580444 -494.86221313]
[484.09588623 -489.42608643]
[497.57452393 -482.82308960]
[510.44464111 -475.10079956]
[522.61352539 -466.31484985]
[533.99340820 -456.52856445]
[544.50238037 -445.81243896]
[554.06469727 -434.24368286]
[562.61145020 -421.90567017]
[570.08105469 -408.88726807]
[576.41973877 -395.28228760]
[581.58178711 -381.18878174]
[585.52996826 -366.70825195]
[588.23596191 -351.94506836]
[589.68011475 -337.00558472]
[589.85211182 -321.99743652]
[588.75073242 -307.02877808]
[586.38385010 -292.20745850]
[582.76861572 -277.64025879]
[577.93090820 -263.43212891]
[571.90576172 -249.68544006]
[564.73645020 -236.49926758]
[556.47473145 -223.96859741]
[547.18011475 -212.18371582]
[536.91949463 -201.22953796]
[525.76690674 -191.18499756]
[513.80261230 -182.12245178]
[501.11285400 -174.10719299]
[487.78909302 -167.19700623]
[473.92727661 -161.44165039]
[459.62731934 -156.88259888]
[444.99221802 -153.55270386]
[430.12747192 -151.47595215]
[415.14013672 -150.66732788]
[400.13824463 -151.13262939]
[385.22982788 -152.86851501]
[370.52233887 -155.86247253]
[356.12176514 -160.09294128]
[342.13183594 -165.52944946]
[328.65335083 -172.13279724]
[315.78341675 -179.85542297]
[307.00280762 -167.69396973]
[298.22219849 -155.53250122]
[289.44161987 -143.37104797]
[280.66101074 -131.20959473]
[289.35549927 -119.91394043]
[294.51950073 -106.61083221]
[295.72601318 -92.37570190]
[292.86816406 -78.36204529]
[286.16897583 -65.70796204]
[276.16366577 -55.44369125]
[263.65713501 -48.40778732]
[249.65901184 -45.17856598]
[235.30235291 -46.02661514]
[221.75180054 -50.89212799]
[212.79110718 -38.86274719]
[203.83041382 -26.83337021]
[194.86972046 -14.80399323]
[185.90902710 -2.77461553]
[176.94833374 9.25476170]
[167.98762512 21.28413963]
[159.02693176 33.31351852]
[163.62965393 47.45399094]
[158.96815491 61.76253891]
[146.63085938 70.68692017]
[131.22621155 70.63489532]
[122.26551056 82.66426849]
[113.30480957 94.69364929]
[111.48721313 108.55683136]
[98.72456360 114.26705170]
[97.57727814 120.77821350]
[93.87041473 125.08589935]
[89.31363678 126.51586914]
[79.99875641 138.27311707]
[70.68386841 150.03036499]
[61.36898804 161.78762817]
[52.05410385 173.54487610]
[42.73922348 185.30212402]
[33.42433929 197.05937195]
[24.10945702 208.81661987]
[28.12828255 223.68791199]
[22.68346977 237.90788269]
[10.05878735 246.09820557]
[-4.79014540 245.29373169]
[-14.10502815 257.05096436]
[-23.41991043 268.80822754]
[-12.85734367 279.48480225]
[-3.65874338 291.35675049]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 208]
[49 207]
[50 206]
[54 202]
[55 201]
[56 200]
[57 199]
[58 198]
[59 197]
[60 196]
[61 195]
[62 192]
[64 190]
[65 189]
[66 188]
[70 184]
[71 183]
[72 182]
[73 181]
[74 180]
[75 179]
[76 178]
[77 177]
[86 167]
[87 166]
[88 165]
[89 164]
[90 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
