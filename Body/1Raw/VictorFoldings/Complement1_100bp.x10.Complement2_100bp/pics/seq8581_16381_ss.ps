%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[112.78311157 388.70938110]
[104.64698792 401.36639404]
[94.26234436 412.25473022]
[82.00457764 420.98074341]
[68.31679535 427.22906494]
[53.69381714 430.77374268]
[38.66423798 431.48669434]
[23.77137566 429.34213257]
[9.55359650 424.41757202]
[-3.47513604 416.89105225]
[-14.84384155 407.03463745]
[-24.14154816 395.20462036]
[-31.03215027 381.82867432]
[-35.26655579 367.39031982]
[-36.69169617 352.41146851]
[-35.25605011 337.43365479]
[-31.01151657 322.99826050]
[-24.11153412 309.62713623]
[-14.80553055 297.80364990]
[-3.42991352 287.95523071]
[9.60409546 280.43783569]
[23.82532692 275.52325439]
[38.71968842 273.38912964]
[53.74876404 274.11264038]
[57.28843689 259.53625488]
[60.82810593 244.95986938]
[64.36778259 230.38349915]
[67.90745544 215.80712891]
[53.81937408 205.10002136]
[45.81176376 189.26107788]
[45.54012299 171.46206665]
[53.10558319 155.29013062]
[67.02513885 144.02473450]
[84.52214813 139.97276306]
[87.40741730 125.25286865]
[90.29269409 110.53297424]
[85.94354248 97.24476624]
[94.98741913 86.58174896]
[97.87268829 71.86186218]
[100.75795746 57.14196777]
[95.81963348 42.11121750]
[105.86055756 31.10989571]
[91.28136444 27.57122612]
[76.87428284 23.38661194]
[62.66791534 18.56436157]
[48.69046783 13.11404705]
[34.96968842 7.04649210]
[21.53282166 0.37374189]
[8.40654469 -6.89095497]
[-4.38308239 -14.73317528]
[-16.81066704 -23.13734818]
[-28.85153389 -32.08678818]
[-40.48177719 -41.56372833]
[-51.67831039 -51.54935455]
[-62.41889572 -62.02383423]
[-72.68221283 -72.96637726]
[-82.44789124 -84.35525513]
[-91.69653320 -96.16786194]
[-100.40977478 -108.38073730]
[-108.57032776 -120.96964264]
[-116.16197205 -133.90957642]
[-123.16965485 -147.17483521]
[-129.57945251 -160.73910522]
[-135.37864685 -174.57545471]
[-140.55570984 -188.65640259]
[-145.10037231 -202.95397949]
[-149.00361633 -217.43983459]
[-152.25767517 -232.08517456]
[-154.85610962 -246.86093140]
[-156.79374695 -261.73779297]
[-158.06674194 -276.68618774]
[-158.67256165 -291.67645264]
[-158.61001587 -306.67880249]
[-157.87922668 -321.66348267]
[-156.48164368 -336.60076904]
[-154.42002869 -351.46093750]
[-151.69848633 -366.21450806]
[-148.32243347 -380.83221436]
[-144.29853821 -395.28500366]
[-139.63482666 -409.54421997]
[-134.34054565 -423.58148193]
[-128.42619324 -437.36901855]
[-121.90351105 -450.87936401]
[-114.78547668 -464.08575439]
[-107.08619690 -476.96191406]
[-98.82096100 -489.48236084]
[-90.00619507 -501.62216187]
[-80.65938568 -513.35723877]
[-70.79908752 -524.66430664]
[-60.44488907 -535.52087402]
[-49.61734009 -545.90545654]
[-38.33794022 -555.79736328]
[-26.62908363 -565.17700195]
[-14.51401615 -574.02575684]
[-2.01679111 -582.32598877]
[10.83777905 -590.06134033]
[24.02417183 -597.21630859]
[37.51620865 -603.77679443]
[51.28709793 -609.72973633]
[65.30950928 -615.06329346]
[79.55558777 -619.76696777]
[93.99705505 -623.83129883]
[108.60524750 -627.24829102]
[123.35115051 -630.01110840]
[138.20549011 -632.11431885]
[153.13877869 -633.55377197]
[168.12136841 -634.32653809]
[183.12350464 -634.43109131]
[198.11540222 -633.86724854]
[213.06729126 -632.63610840]
[227.94950867 -630.74017334]
[242.73249817 -628.18310547]
[257.38690186 -624.97009277]
[271.88360596 -621.10742188]
[286.19387817 -616.60284424]
[300.28924561 -611.46520996]
[314.14178467 -605.70477295]
[327.72396851 -599.33300781]
[341.00878906 -592.36248779]
[353.96994019 -584.80712891]
[366.58163452 -576.68188477]
[378.81887817 -568.00286865]
[390.65734863 -558.78735352]
[402.07351685 -549.05358887]
[413.04476929 -538.82098389]
[423.54928589 -528.10974121]
[433.56622314 -516.94122314]
[443.07571411 -505.33758545]
[452.05883789 -493.32180786]
[460.49777222 -480.91781616]
[468.37579346 -468.15020752]
[475.67721558 -455.04431152]
[482.38757324 -441.62619019]
[488.49353027 -427.92245483]
[493.98297119 -413.96032715]
[498.84500122 -399.76751709]
[503.06994629 -385.37222290]
[506.64941406 -370.80300903]
[509.57632446 -356.08877563]
[511.84487915 -341.25878906]
[513.45056152 -326.34246826]
[514.39013672 -311.36941528]
[514.66180420 -296.36938477]
[514.26495361 -281.37213135]
[513.20043945 -266.40744019]
[511.47036743 -251.50503540]
[509.07815552 -236.69448853]
[506.02853394 -222.00520325]
[502.32757568 -207.46636963]
[497.98266602 -193.10682678]
[493.00234985 -178.95507812]
[487.39660645 -165.03924561]
[481.17648315 -151.38694763]
[474.35440063 -138.02529907]
[466.94384766 -124.98079681]
[458.95956421 -112.27937317]
[450.41738892 -99.94623566]
[441.33428955 -88.00585938]
[431.72833252 -76.48197174]
[421.61853027 -65.39743042]
[411.02499390 -54.77425766]
[399.96871948 -44.63353729]
[388.47171021 -34.99540710]
[376.55676270 -25.87900162]
[364.24752808 -17.30241966]
[351.56845093 -9.28269005]
[338.54470825 -1.83573556]
[325.20214844 5.02365875]
[311.56729126 11.28187466]
[297.66717529 16.92648697]
[283.52938843 21.94628716]
[269.18203735 26.33131218]
[254.65359497 30.07285309]
[239.97288513 33.16348267]
[225.16908264 35.59706497]
[210.27156067 37.36876297]
[195.30990601 38.47507095]
[180.31382751 38.91378021]
[165.31307983 38.68402863]
[150.33747864 37.78626633]
[135.41671753 36.22227859]
[120.58044434 33.99516678]
[125.72515106 47.97305298]
[115.47785187 60.02724075]
[112.59258270 74.74713135]
[109.70730591 89.46702576]
[114.05645752 102.75523376]
[105.01258087 113.41825104]
[102.12731171 128.13813782]
[99.24204254 142.85803223]
[109.87666321 149.29113770]
[118.00888062 158.65811157]
[122.86573792 170.04574585]
[123.99263000 182.34994507]
[121.29580688 194.38267517]
[115.04998016 204.98678589]
[105.87042236 213.14721680]
[94.65239716 218.08815002]
[82.48382568 219.34680176]
[78.94415283 233.92317200]
[75.40447998 248.49954224]
[71.86480713 263.07592773]
[68.32513428 277.65231323]
[82.01221466 283.90213013]
[94.26901245 292.62951660]
[104.65244293 303.51901245]
[112.78715515 316.17694092]
[118.37908173 330.14572144]
[121.22608948 344.92037964]
[121.22525024 359.96685791]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 203]
[25 202]
[26 201]
[27 200]
[28 199]
[34 190]
[35 189]
[36 188]
[38 186]
[39 185]
[40 184]
[42 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
