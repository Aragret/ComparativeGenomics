%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[196.78706360 267.09841919]
[196.42785645 252.09681702]
[197.09321594 237.10568237]
[198.78007507 222.19491577]
[201.48054504 207.43400574]
[205.18205261 192.89181519]
[209.86732483 178.63610840]
[215.51452637 164.73338318]
[202.03479004 158.15335083]
[188.55505371 151.57331848]
[175.07531738 144.99330139]
[161.59558105 138.41326904]
[148.11584473 131.83323669]
[134.63612366 125.25321198]
[121.15637970 118.67318726]
[107.67665100 112.09315491]
[93.71653748 112.87220001]
[85.74332428 101.38657379]
[72.26358795 94.80654907]
[64.83949280 107.84630585]
[56.60330963 120.38894653]
[47.58820343 132.38395691]
[37.83047485 143.78305054]
[27.36941147 154.54031372]
[16.24714088 164.61244202]
[4.50844812 173.95886230]
[-7.79940033 182.54194641]
[-20.62684250 190.32713318]
[-33.92222977 197.28308105]
[-47.63202286 203.38179016]
[-61.70101929 208.59866333]
[-76.07256317 212.91273499]
[-90.68878937 216.30661011]
[-105.49084473 218.76664734]
[-120.41912079 220.28291321]
[-135.41351318 220.84930420]
[-150.41363525 220.46356201]
[-165.35910034 219.12721252]
[-180.18971252 216.84565735]
[-194.84574890 213.62808228]
[-209.26821899 209.48744202]
[-223.39903259 204.44039917]
[-237.18128967 198.50727844]
[-250.55949402 191.71197510]
[-263.47979736 184.08186340]
[-275.89013672 175.64764404]
[-287.74053955 166.44329834]
[-298.98333740 156.50587463]
[-309.57321167 145.87539673]
[-319.46752930 134.59466553]
[-328.62646484 122.70911407]
[-337.01312256 110.26658630]
[-344.59375000 97.31719971]
[-351.33779907 83.91308594]
[-357.21813965 70.10823059]
[-362.21109009 55.95820618]
[-366.29650879 41.52000046]
[-369.45797729 26.85174751]
[-371.68276978 12.01251316]
[-372.96191406 -2.93794918]
[-373.29025269 -17.93943977]
[-372.66647339 -32.93155289]
[-371.09310913 -47.85391617]
[-368.57644653 -62.64645004]
[-365.12667847 -77.24958038]
[-360.75762939 -91.60451508]
[-355.48696899 -105.65344238]
[-349.33584595 -119.33979797]
[-342.32907104 -132.60847473]
[-334.49484253 -145.40603638]
[-325.86471558 -157.68093872]
[-316.47344971 -169.38378906]
[-306.35885620 -180.46743774]
[-295.56164551 -190.88725281]
[-284.12527466 -200.60130310]
[-272.09585571 -209.57043457]
[-259.52178955 -217.75856018]
[-246.45373535 -225.13270569]
[-232.94425964 -231.66317749]
[-219.04782104 -237.32366943]
[-204.82032776 -242.09138489]
[-190.31910706 -245.94714355]
[-175.60252380 -248.87541199]
[-160.72984314 -250.86441040]
[-145.76097107 -251.90609741]
[-130.75614929 -251.99630737]
[-115.77582550 -251.13467407]
[-100.88031006 -249.32464600]
[-86.12958527 -246.57354736]
[-71.58304596 -242.89242554]
[-57.29926300 -238.29611206]
[-43.33575821 -232.80311584]
[-29.74875259 -226.43554688]
[-16.59295845 -219.21907043]
[-3.92135239 -211.18272400]
[8.21504307 -202.35885620]
[19.76735878 -192.78303528]
[30.68907738 -182.49378967]
[40.93621826 -171.53254700]
[50.46752548 -159.94348145]
[59.24461365 -147.77320862]
[67.23213959 -135.07077026]
[74.39794922 -121.88731384]
[80.71317291 -108.27590179]
[86.15239716 -94.29136658]
[90.69371033 -79.98999786]
[94.31883240 -65.42940521]
[97.01316071 -50.66819763]
[98.76584625 -35.76582718]
[99.56983185 -20.78230095]
[99.42188263 -5.77794647]
[98.32259369 9.18681526]
[96.27639008 24.05172539]
[93.29151154 38.75693130]
[89.37998199 53.24321365]
[84.55754089 67.45224762]
[78.84362030 81.32681274]
[92.32334900 87.90684509]
[106.28346252 87.12779999]
[114.25667572 98.61342621]
[127.73641205 105.19345093]
[141.21614075 111.77347565]
[154.69587708 118.35350800]
[168.17561340 124.93353271]
[181.65534973 131.51356506]
[195.13508606 138.09358215]
[208.61482239 144.67361450]
[222.09454346 151.25364685]
[229.58189392 138.24917603]
[237.93925476 125.78596497]
[247.12763977 113.92214966]
[257.10421753 102.71302795]
[267.82250977 92.21086884]
[279.23248291 82.46463013]
[291.28097534 73.51976776]
[303.91180420 65.41797638]
[317.06607056 58.19703674]
[330.68243408 51.89061356]
[344.69744873 46.52811050]
[359.04574585 42.13452911]
[373.66040039 38.73035431]
[388.47329712 36.33146286]
[403.41537476 34.94903564]
[418.41696167 34.58951569]
[433.40811157 35.25458527]
[448.31890869 36.94113922]
[463.07986450 39.64131927]
[477.62213135 43.34252930]
[491.87792969 48.02751541]
[505.78079224 53.67443085]
[519.26586914 60.25695419]
[532.27026367 67.74438477]
[544.73339844 76.10182190]
[556.59716797 85.29029083]
[567.80621338 95.26696014]
[578.30834961 105.98529816]
[588.05450439 117.39534760]
[596.99926758 129.44389343]
[605.10095215 142.07478333]
[612.32183838 155.22909546]
[618.62817383 168.84552002]
[623.99053955 182.86054993]
[628.38403320 197.20886230]
[631.78814697 211.82354736]
[634.18688965 226.63647461]
[635.56921387 241.57855225]
[635.92864990 256.58013916]
[635.26348877 271.57128906]
[633.57684326 286.48208618]
[630.87658691 301.24301147]
[627.17523193 315.78527832]
[622.49017334 330.04101562]
[616.84313965 343.94384766]
[610.26055908 357.42886353]
[602.77301025 370.43322754]
[594.41552734 382.89633179]
[585.22692871 394.76000977]
[575.25024414 405.96902466]
[564.53179932 416.47103882]
[553.12170410 426.21710205]
[541.07305908 435.16180420]
[528.44213867 443.26342773]
[515.28778076 450.48419189]
[501.67132568 456.79043579]
[487.65625000 462.15274048]
[473.30789185 466.54614258]
[458.69320679 469.95010376]
[443.88024902 472.34881592]
[428.93817139 473.73104858]
[413.93658447 474.09036255]
[398.94543457 473.42507935]
[384.03466797 471.73834229]
[369.27374268 469.03796387]
[354.73150635 465.33654785]
[340.47576904 460.65136719]
[326.57299805 455.00427246]
[313.08804321 448.42156982]
[300.08370972 440.93395996]
[287.62066650 432.57635498]
[275.75704956 423.38772583]
[264.54812622 413.41091919]
[254.04617310 402.69241333]
[244.30017090 391.28225708]
[235.35554504 379.23358154]
[227.25401306 366.60260010]
[220.03332520 353.44818115]
[213.72718811 339.83166504]
[208.36495972 325.81655884]
[203.97166443 311.46820068]
[200.56779480 296.85345459]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 128]
[9 127]
[10 126]
[11 125]
[12 124]
[13 123]
[14 122]
[15 121]
[16 120]
[18 118]
[19 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
