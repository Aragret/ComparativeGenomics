%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[-0.21529946 545.41241455]
[2.18727946 560.27984619]
[1.33716857 575.31622314]
[-2.72587061 589.81811523]
[-9.81180286 603.10736084]
[-19.58920479 614.56231689]
[-31.60077286 623.64727783]
[-45.28469849 629.93725586]
[-60.00096893 633.13812256]
[-75.06126404 633.10015869]
[-89.76119995 629.82513428]
[-103.41323090 623.46618652]
[-115.37882233 614.32073975]
[-125.09832001 602.81658936]
[-132.11712646 589.49182129]
[-136.10696411 574.96954346]
[-136.88122559 559.92913818]
[-134.40368652 545.07397461]
[-128.79023743 531.09887695]
[-120.30340576 518.65747070]
[-109.34016418 508.33172607]
[-96.41326904 500.60455322]
[-82.12733459 495.83734131]
[-67.15054321 494.25311279]
[-52.18338776 495.92590332]
[-47.35739136 481.72344971]
[-42.53139496 467.52099609]
[-43.35574341 460.17645264]
[-37.52637482 453.14395142]
[-32.48945999 439.01492310]
[-27.45254135 424.88589478]
[-22.41562653 410.75686646]
[-27.31524086 399.69702148]
[-23.23453522 387.88467407]
[-11.84559822 381.83032227]
[-6.59887981 367.77786255]
[-1.35216165 353.72540283]
[-4.14894724 339.09573364]
[7.92664003 328.87365723]
[13.17335796 314.82116699]
[9.34068489 297.69583130]
[23.64118958 286.09509277]
[28.67810440 271.96606445]
[33.71502304 257.83703613]
[30.70073128 243.25062561]
[42.62278748 232.84989929]
[37.72317505 221.79003906]
[41.80387878 209.97769165]
[53.19281769 203.92335510]
[58.43953705 189.87089539]
[63.68625259 175.81842041]
[68.93296814 161.76594543]
[74.17968750 147.71347046]
[71.38290405 133.08380127]
[83.45848846 122.86173248]
[88.70520782 108.80926514]
[86.58087921 94.98975372]
[97.24231720 85.94401550]
[102.48903656 71.89154816]
[107.73575592 57.83907700]
[103.10145569 45.80221176]
[107.76075745 34.20589066]
[118.70978546 29.06338692]
[124.16514587 15.09058857]
[121.97668457 -0.57852793]
[133.81292725 -9.62025166]
[139.26828003 -23.59305000]
[137.07981873 -39.26216507]
[148.91606140 -48.30389023]
[154.37141418 -62.27668762]
[159.82676697 -76.24948883]
[165.28213501 -90.22228241]
[170.73748779 -104.19508362]
[156.16117859 -100.65512085]
[144.21240234 -109.72300720]
[143.69934082 -124.71423340]
[155.00019836 -134.57781982]
[169.78442383 -132.04270935]
[177.15350342 -118.97932434]
[183.63299561 -132.50767517]
[190.11248779 -146.03601074]
[196.59199524 -159.56436157]
[203.07148743 -173.09271240]
[209.55097961 -186.62104797]
[216.03047180 -200.14939880]
[222.30784607 -213.77272034]
[228.38166809 -227.48797607]
[234.45550537 -241.20324707]
[232.96888733 -256.95446777]
[245.19706726 -265.45864868]
[251.27088928 -279.17391968]
[257.34472656 -292.88919067]
[261.42440796 -307.32373047]
[263.42840576 -322.18927002]
[257.60418701 -336.89941406]
[266.97250366 -348.47888184]
[268.97650146 -363.34442139]
[270.98052979 -378.20996094]
[272.98452759 -393.07546997]
[259.11758423 -399.04290771]
[247.37559509 -408.53121948]
[238.62988281 -420.83630371]
[233.52943420 -435.04504395]
[232.45274353 -450.10305786]
[235.47970581 -464.89291382]
[242.38571167 -478.31713867]
[252.65827942 -489.37954712]
[265.53509521 -497.25924683]
[280.06066895 -501.37152100]
[295.15707397 -501.41116333]
[309.70404053 -497.37530518]
[322.62210083 -489.56338501]
[332.95266724 -478.55511475]
[339.92910767 -465.16735840]
[343.03375244 -450.39361572]
[342.03622437 -435.33016968]
[337.01049805 -421.09481812]
[328.32955933 -408.74395752]
[316.63760376 -399.19406128]
[302.80221558 -393.15383911]
[287.85006714 -391.07147217]
[285.84606934 -376.20593262]
[283.84204102 -361.34039307]
[281.83801270 -346.47488403]
[287.80560303 -332.82800293]
[278.29394531 -320.18524170]
[276.28991699 -305.31973267]
[284.91619873 -317.59112549]
[296.73944092 -326.82211304]
[310.73681641 -332.21408081]
[325.69741821 -333.30059814]
[340.32699585 -329.98767090]
[353.35995483 -322.56192017]
[363.66879272 -311.66567993]
[370.36172485 -298.24163818]
[372.85971069 -283.45111084]
[370.94668579 -268.57360840]
[364.78811646 -254.89617920]
[354.91677856 -243.60206604]
[342.18667603 -235.66831970]
[327.69906616 -231.78129578]
[312.70724487 -232.27725220]
[298.50820923 -237.11329651]
[286.33029175 -245.87104797]
[277.22698975 -257.79287720]
[271.98587036 -271.84744263]
[271.05999756 -286.81533813]
[264.98617554 -273.10006714]
[258.91232300 -259.38479614]
[260.83337402 -244.61460876]
[248.17077637 -235.12940979]
[242.09693909 -221.41413879]
[236.02310181 -207.69888306]
[236.87727356 -203.00000000]
[234.78869629 -197.71466064]
[229.55882263 -193.66990662]
[223.07933044 -180.14155579]
[216.59983826 -166.61320496]
[210.12033081 -153.08486938]
[203.64083862 -139.55651855]
[197.16134644 -126.02817535]
[190.68185425 -112.49982452]
[184.71028137 -98.73972321]
[179.25492859 -84.76692963]
[173.79957581 -70.79412842]
[168.34420776 -56.82133102]
[162.88885498 -42.84853363]
[165.46751404 -28.17884445]
[153.24107361 -18.13769341]
[147.78572083 -4.16489506]
[150.36437988 10.50479412]
[138.13793945 20.54594612]
[132.68258667 34.51874542]
[136.25985718 51.69925690]
[121.78822327 63.08579636]
[116.54151154 77.13826752]
[111.29479218 91.19073486]
[113.41912079 105.01024628]
[102.75768280 114.05598450]
[97.51096344 128.10845947]
[99.93246460 143.74325562]
[88.23216248 152.96018982]
[82.98544312 167.01266479]
[77.73872375 181.06513977]
[72.49200439 195.11761475]
[67.24528503 209.17007446]
[70.71338654 227.25471497]
[56.75181961 237.88681030]
[59.40583420 253.48382568]
[47.84405136 262.87393188]
[42.80713654 277.00299072]
[37.77021790 291.13201904]
[42.58321381 303.09854126]
[38.09708023 314.76293945]
[27.22583008 320.06790161]
[21.97911072 334.12036133]
[24.40061569 349.75515747]
[12.70030975 358.97210693]
[7.45359135 373.02456665]
[2.20687318 387.07705688]
[5.67497110 405.16168213]
[-8.28659630 415.79379272]
[-13.32351303 429.92282104]
[-18.36042976 444.05184937]
[-23.39734459 458.18087769]
[-28.32893944 472.34701538]
[-33.15493774 486.54946899]
[-37.98093414 500.75192261]
[-25.09317780 508.54421997]
[-14.18215561 518.92510986]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 208]
[26 207]
[27 206]
[29 205]
[30 204]
[31 203]
[32 202]
[35 200]
[36 199]
[37 198]
[39 196]
[40 195]
[42 192]
[43 191]
[44 190]
[46 188]
[49 186]
[50 185]
[51 184]
[52 183]
[53 182]
[55 180]
[56 179]
[58 177]
[59 176]
[60 175]
[63 173]
[64 172]
[66 170]
[67 169]
[69 167]
[70 166]
[71 165]
[72 164]
[73 163]
[79 162]
[80 161]
[81 160]
[82 159]
[83 158]
[84 157]
[85 156]
[86 153]
[87 152]
[88 151]
[90 149]
[91 148]
[92 147]
[93 127]
[94 126]
[96 124]
[97 123]
[98 122]
[99 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
