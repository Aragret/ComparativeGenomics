%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[169.58273315 294.77172852]
[180.20776367 284.13140869]
[192.47828674 275.43991089]
[185.99879456 261.91156006]
[179.51930237 248.38320923]
[173.03981018 234.85485840]
[160.56385803 226.71852112]
[161.58084106 210.93003845]
[155.10134888 197.40168762]
[147.63360596 184.39273071]
[139.21897888 171.97523499]
[130.80436707 159.55773926]
[117.25949860 153.36212158]
[115.92314911 137.59745789]
[107.50852966 125.17995453]
[99.09391022 112.76245880]
[101.09539032 127.62832642]
[99.38776398 142.53080750]
[94.07545471 156.55862427]
[85.48329926 168.85394287]
[74.13672638 178.66491699]
[60.72957230 185.39160156]
[46.08169556 188.62265015]
[31.08881760 188.16049194]
[16.66775894 184.03337097]
[3.70037150 176.49368286]
[-7.02038240 166.00248718]
[-14.83892536 153.20129395]
[-19.27714920 138.87292480]
[-20.06365585 123.89356232]
[-17.15035057 109.17919159]
[-10.71538258 95.62960815]
[-1.15225255 84.07337189]
[10.95425034 75.21715546]
[24.86380959 69.60251617]
[39.72584915 67.57279205]
[54.63154984 69.25210571]
[68.66942596 74.53775787]
[80.98104858 83.10653687]
[90.81357574 94.43447113]
[87.05727386 79.91241455]
[83.30097198 65.39035797]
[79.54467773 50.86829376]
[74.61308289 36.70215988]
[68.53924561 22.98689270]
[62.46541214 9.27162647]
[56.39157867 -4.44363976]
[50.31774521 -18.15890694]
[43.98146820 -24.73837471]
[44.25727081 -32.12388229]
[38.38830948 -45.92805862]
[32.51934814 -59.73223495]
[19.99936867 -69.40490723]
[22.14011383 -84.14487457]
[16.27115440 -97.94905090]
[2.01596546 -93.25265503]
[-12.58221531 -89.76557922]
[-27.42098999 -87.51229095]
[-42.39627457 -86.50859070]
[-57.40302277 -86.76152039]
[-72.33597565 -88.26930237]
[-87.09039307 -91.02136993]
[-101.56276703 -94.99840546]
[-115.65159607 -100.17252350]
[-129.25804138 -106.50742340]
[-142.28668213 -113.95867920]
[-154.64611816 -122.47401428]
[-166.24964905 -131.99371338]
[-177.01589966 -142.45097351]
[-186.86933899 -153.77247620]
[-195.74085999 -165.87878418]
[-203.56822205 -178.68499756]
[-210.29652405 -192.10127258]
[-215.87857056 -206.03350830]
[-220.27522278 -220.38397217]
[-223.45562744 -235.05201721]
[-225.39747620 -249.93475342]
[-226.08714294 -264.92779541]
[-225.51980591 -279.92593384]
[-223.69943237 -294.82400513]
[-220.63879395 -309.51751709]
[-216.35935974 -323.90338135]
[-210.89114380 -337.88070679]
[-204.27252197 -351.35140991]
[-196.54988098 -364.22103882]
[-187.77742004 -376.39932251]
[-178.01667786 -387.80084229]
[-167.33609009 -398.34558105]
[-155.81060791 -407.95962524]
[-143.52104187 -416.57550049]
[-130.55363464 -424.13278198]
[-116.99930573 -430.57846069]
[-102.95316315 -435.86734009]
[-88.51371002 -439.96231079]
[-73.78223419 -442.83465576]
[-58.86207962 -444.46420288]
[-43.85789108 -444.83953857]
[-28.87491798 -443.95803833]
[-14.01825523 -441.82589722]
[0.60788631 -438.45800781]
[14.90091228 -433.87808228]
[28.76056671 -428.11816406]
[42.08963394 -421.21868896]
[54.79461288 -413.22808838]
[66.78639221 -404.20236206]
[77.98085785 -394.20483398]
[88.29947662 -383.30563354]
[97.66988373 -371.58120728]
[106.02634430 -359.11380005]
[113.31024170 -345.99087524]
[119.47048950 -332.30447388]
[124.46386719 -318.15057373]
[128.25535583 -303.62847900]
[130.81837463 -288.84005737]
[132.13491821 -273.88900757]
[132.19575500 -258.88024902]
[131.00048828 -243.91905212]
[128.55746460 -229.11032104]
[124.88385010 -214.55796814]
[120.00539398 -200.36405945]
[113.95632172 -186.62814331]
[106.77906799 -173.44657898]
[98.52397156 -160.91183472]
[89.24893951 -149.11181641]
[79.01902771 -138.12931824]
[67.90599060 -128.04135132]
[55.98778915 -118.91868591]
[43.34801483 -110.82531738]
[30.07533073 -103.81800842]
[35.94429016 -90.01383209]
[48.04448700 -81.32852936]
[46.32352829 -65.60119629]
[52.19248581 -51.79701996]
[58.06144714 -37.99284363]
[64.03301239 -24.23274040]
[70.10684204 -10.51747417]
[76.18067932 3.19779277]
[82.25451660 16.91305923]
[88.32834625 30.62832642]
[91.04565430 15.87650490]
[100.23444366 4.02044773]
[113.84192657 -2.29117155]
[128.82814026 -1.64832091]
[141.84513855 5.80538511]
[149.98489380 18.40476990]
[151.42895508 33.33509827]
[145.85470581 47.26089478]
[134.50747681 57.07110596]
[119.92224121 60.57410049]
[105.35739136 56.98730469]
[94.06673431 47.11199570]
[97.82303619 61.63405228]
[101.57933807 76.15611267]
[105.33563232 90.67816925]
[111.51140594 104.34783936]
[119.92602539 116.76533508]
[128.34063721 129.18283081]
[142.48738098 136.26664734]
[143.22186279 151.14312744]
[151.63647461 163.56062317]
[160.05110168 175.97811890]
[160.58262634 160.98753357]
[168.45426941 148.21893311]
[181.60841370 141.00999451]
[196.60656738 141.24511719]
[209.52825928 148.86282349]
[216.99580383 161.87190247]
[217.05720520 176.87176514]
[209.69638062 189.94152832]
[196.83746338 197.66474915]
[181.84173584 198.02262878]
[168.62968445 190.92219543]
[175.10919189 204.45054626]
[188.04858398 213.55451965]
[186.56814575 228.37536621]
[193.04765320 241.90371704]
[199.52714539 255.43205261]
[206.00663757 268.96041870]
[220.47010803 264.84747314]
[235.42062378 263.23822021]
[250.42807007 264.17892456]
[265.06060791 267.64251709]
[278.89727783 273.52935791]
[291.53991699 281.67010498]
[302.62481689 291.83047485]
[311.83300781 303.71813965]
[318.89959717 316.99111938]
[323.62121582 331.26745605]
[325.86203003 346.13644409]
[325.55758667 361.17025757]
[322.71661377 375.93634033]
[317.42089844 390.00982666]
[309.82275391 402.98580933]
[300.14080811 414.49096680]
[288.65365601 424.19421387]
[275.69180298 431.81643677]
[261.62817383 437.13827515]
[246.86738586 440.00665283]
[231.83416748 440.33898926]
[216.96104431 438.12576294]
[202.67596436 433.43063354]
[189.38990784 426.38873291]
[177.48515320 417.20260620]
[167.30421448 406.13659668]
[159.14004517 393.50906372]
[153.22752380 379.68334961]
[149.73677063 365.05728149]
[148.76820374 350.05160522]
[150.34971619 335.09811401]
[154.43580627 320.62704468]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 178]
[4 177]
[5 176]
[6 175]
[8 173]
[9 172]
[10 161]
[11 160]
[12 159]
[14 157]
[15 156]
[16 155]
[40 154]
[41 153]
[42 152]
[43 151]
[44 139]
[45 138]
[46 137]
[47 136]
[48 135]
[50 134]
[51 133]
[52 132]
[54 130]
[55 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
