%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[85.76738739 588.27746582]
[75.38714600 577.40563965]
[66.83552551 565.04376221]
[60.32313538 551.49621582]
[56.01033783 537.09667969]
[54.00334167 522.19976807]
[54.35157394 507.17230225]
[57.04645538 492.38433838]
[62.02162552 478.20004272]
[69.15456390 464.96871948]
[78.26961517 453.01620483]
[89.14231110 442.63687134]
[101.50491333 434.08627319]
[115.05296326 427.57498169]
[129.45285034 423.26339722]
[127.44882965 408.39785767]
[125.44481659 393.53231812]
[123.44080353 378.66680908]
[121.43679047 363.80126953]
[119.43277740 348.93576050]
[116.86558533 346.51876831]
[115.34153748 342.73822021]
[115.48875427 338.09802246]
[117.68657684 333.36340332]
[116.34834290 318.42321777]
[115.01010895 303.48303223]
[113.67187500 288.54284668]
[102.81764984 274.75323486]
[110.70400238 258.11331177]
[109.14347839 243.19471741]
[107.58295441 228.27612305]
[96.52462769 214.64965820]
[104.16236115 197.89416504]
[102.37989044 183.00044250]
[100.59742737 168.10673523]
[98.81496429 153.21301270]
[97.03249359 138.31929016]
[95.25003052 123.42557526]
[93.46756744 108.53186035]
[89.06656647 94.19201660]
[82.18715668 80.86258698]
[75.30773926 67.53315735]
[68.42832947 54.20372391]
[67.31199646 69.16212463]
[60.27991486 82.41164398]
[48.51710129 91.71950531]
[34.00580597 95.51717377]
[19.19142914 93.16466522]
[6.57045937 85.05842590]
[-1.73025024 72.56449127]
[-4.31188440 57.78832626]
[-0.73939192 43.21995926]
[8.38519859 31.31442070]
[21.52423477 24.07800293]
[36.46355820 22.73016930]
[50.68562698 27.49805450]
[61.79475021 37.57952499]
[57.60773849 23.17574310]
[53.42072678 8.77196121]
[39.22434998 7.62566090]
[26.29905510 1.71482873]
[16.18895721 -8.23197937]
[10.09418678 -21.00541115]
[8.72845364 -35.06233215]
[12.23551559 -48.71224213]
[20.17435455 -60.32057190]
[31.57451820 -68.50443268]
[27.60242271 -82.96895599]
[23.63032532 -97.43347931]
[19.65822983 -111.89800262]
[15.68613338 -126.36252594]
[11.71403694 -140.82705688]
[8.00768852 -126.29216766]
[-0.63953543 -114.03551483]
[-13.08994484 -105.66967010]
[-27.70547295 -102.29531097]
[-42.56319809 -104.35638428]
[-55.70832825 -111.58172607]
[-65.41139984 -123.02071381]
[-70.39579773 -137.16835022]
[-70.00575256 -152.16328430]
[-64.29256439 -166.03265381]
[-54.00791931 -176.95172119]
[-40.50492477 -183.48388672]
[-25.56014061 -184.76972961]
[-11.13980675 -180.64009094]
[0.85883349 -171.63827515]
[8.85803509 -158.94642639]
[0.51224220 -172.38734436]
[7.67352247 -185.44741821]
[7.00373745 -200.43244934]
[6.33395243 -215.41749573]
[-8.42855167 -218.50282288]
[-21.95960999 -225.16325378]
[-33.40864944 -234.98008728]
[-42.05597305 -247.33624268]
[-47.35800171 -261.45501709]
[-48.98144531 -276.44885254]
[-46.82425690 -291.37524414]
[-41.02203369 -305.29592896]
[-31.93951225 -317.33578491]
[-20.14762688 -326.73803711]
[-6.38762331 -332.91162109]
[8.47553158 -335.46847534]
[23.50752640 -334.24783325]
[37.76343918 -329.32647705]
[50.34713364 -321.01376343]
[60.46757889 -309.83218384]
[67.48860931 -296.48468018]
[70.96886444 -281.81024170]
[70.68957520 -266.73138428]
[66.66830444 -252.19589233]
[59.15782547 -239.11752319]
[48.63025665 -228.31840515]
[35.74736786 -220.47735596]
[21.31899071 -216.08728027]
[21.98877716 -201.10223389]
[22.65856171 -186.11720276]
[30.95644760 -173.74810791]
[23.84307480 -159.61621094]
[26.17856026 -144.79914856]
[30.15065765 -130.33462524]
[34.12275314 -115.87010193]
[38.09484863 -101.40557861]
[42.06694412 -86.94105530]
[46.03904343 -72.47653198]
[61.79140091 -70.74757385]
[75.70800018 -63.08746338]
[85.64359283 -50.64323044]
[90.05368042 -35.30194855]
[88.23454285 -19.40457726]
[80.43535614 -5.38876104]
[67.82450867 4.58495045]
[72.01152039 18.98873329]
[76.19853210 33.39251328]
[81.75775909 47.32431412]
[88.63716888 60.65374374]
[95.51658630 73.98316956]
[102.39599609 87.31259918]
[102.14525604 72.31469727]
[105.44300079 57.68169022]
[112.10271454 44.24114609]
[121.74775696 32.75319290]
[133.83267212 23.86753273]
[147.67398071 18.08669090]
[162.48889160 15.73760223]
[177.43955994 16.95311928]
[191.68045044 21.66449738]
[204.40617371 29.60528755]
[214.89701843 40.32639694]
[222.55967712 53.22150040]
[226.96080017 67.56130981]
[227.85147095 82.53484344]
[225.18132019 97.29527283]
[219.10136414 111.00782776]
[209.95545959 122.89699554]
[198.26083374 132.29039001]
[184.67889404 138.65675354]
[169.97773743 141.63606262]
[154.98881531 141.05979919]
[140.55979919 136.96055603]
[127.50674438 129.57019043]
[116.56784821 119.30663300]
[108.36128235 106.74939728]
[110.14374542 121.64311218]
[111.92621613 136.53683472]
[113.70867920 151.43054199]
[115.49114227 166.32426453]
[117.27361298 181.21798706]
[119.05607605 196.11169434]
[128.69468689 204.68258667]
[129.87268066 217.12429810]
[122.50156403 226.71559143]
[124.06208038 241.63420105]
[125.62260437 256.55279541]
[135.13253784 265.26623535]
[136.12516785 277.72412109]
[128.61206055 287.20458984]
[129.95030212 302.14477539]
[131.28852844 317.08496094]
[132.62677002 332.02514648]
[134.29830933 346.93173218]
[136.30232239 361.79727173]
[138.30633545 376.66278076]
[140.31034851 391.52832031]
[142.31436157 406.39385986]
[144.31837463 421.25936890]
[159.34594727 421.60388184]
[174.13458252 424.29510498]
[188.32009888 429.26675415]
[201.55317688 436.39642334]
[213.50793457 445.50851440]
[223.88998413 456.37866211]
[232.44363403 468.73913574]
[238.95826721 482.28558350]
[243.27343750 496.68438721]
[245.28289795 511.58099365]
[244.93714905 526.60852051]
[242.24470520 541.39691162]
[237.27186584 555.58203125]
[230.14111328 568.81451416]
[221.02804565 580.76855469]
[210.15705872 591.14971924]
[197.79586792 599.70233154]
[184.24888611 606.21582031]
[169.84971619 610.52984619]
[154.95295715 612.53802490]
[139.92544556 612.19104004]
[125.13725281 609.49737549]
[110.95254517 604.52337646]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 187]
[16 186]
[17 185]
[18 184]
[19 183]
[20 182]
[24 181]
[25 180]
[26 179]
[27 178]
[29 175]
[30 174]
[31 173]
[33 170]
[34 169]
[35 168]
[36 167]
[37 166]
[38 165]
[39 164]
[40 139]
[41 138]
[42 137]
[43 136]
[57 135]
[58 134]
[59 133]
[67 126]
[68 125]
[69 124]
[70 123]
[71 122]
[72 121]
[88 120]
[90 118]
[91 117]
[92 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
