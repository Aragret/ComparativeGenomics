%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[207.27734375 392.77142334]
[200.20024109 379.54586792]
[193.12313843 366.32034302]
[186.04603577 353.09481812]
[181.81591797 350.87780762]
[178.93362427 345.97988892]
[178.96176147 339.36849976]
[172.28157043 325.93811035]
[165.60137939 312.50772095]
[158.92118835 299.07736206]
[154.75895691 296.73535156]
[152.02377319 291.75381470]
[152.24874878 285.14617920]
[145.97138977 271.52285767]
[139.69403076 257.89953613]
[127.34059906 249.57835388]
[128.59254456 233.80676270]
[122.31517792 220.18344116]
[116.03781891 206.56013489]
[109.76045227 192.93681335]
[109.31130219 207.93008423]
[105.19669342 222.35472107]
[97.66825867 235.32864380]
[87.18635559 246.05848694]
[74.39195251 253.88813782]
[60.06744003 258.33877563]
[45.08876038 259.13827515]
[30.37187195 256.23773193]
[16.81671333 249.81452942]
[5.25218868 240.26142883]
[-3.61452508 228.16261292]
[-9.24122620 214.25791931]
[-11.28383923 199.39764404]
[-9.61745834 184.49049377]
[-4.34398270 170.44804382]
[4.21411180 158.12899780]
[15.53349590 148.28666687]
[28.92198372 141.52290344]
[43.56086349 138.25132751]
[58.55496216 138.67199707]
[72.98738861 142.75918579]
[85.97558594 150.26296997]
[96.72533417 160.72447205]
[104.57928467 173.50399780]
[103.24105072 158.56381226]
[101.90280914 143.62362671]
[100.56457520 128.68344116]
[97.24231720 114.05598450]
[86.58087921 105.01024628]
[88.70520782 91.19073486]
[76.62962341 80.96866608]
[79.42640686 66.33899689]
[74.17968750 52.28652191]
[68.93296814 38.23405075]
[56.85738373 28.01197815]
[59.65417099 13.38230896]
[47.57858276 3.16023588]
[50.37537003 -11.46943474]
[45.12865067 -25.52190590]
[39.88193130 -39.57437897]
[27.80634499 -49.79645157]
[30.60313034 -64.42611694]
[25.30121422 -50.39438248]
[12.82791710 -42.06270599]
[-2.16453218 -42.53860092]
[-14.08431911 -51.64456940]
[-18.48565865 -65.98431396]
[-13.72695923 -80.20945740]
[-1.58309841 -89.01438141]
[13.41656399 -89.11505890]
[25.67822838 -80.47301483]
[22.13855553 -95.04938507]
[18.59888268 -109.62576294]
[15.05921078 -124.20214081]
[11.51953888 -138.77851868]
[-3.42654943 -137.25267029]
[-18.44119644 -137.77626038]
[-33.24468613 -140.33953857]
[-47.56124115 -144.89476013]
[-61.12415314 -151.35705566]
[-73.68075562 -159.60601807]
[-84.99711609 -169.48800659]
[-94.86242676 -180.81890869]
[-103.09290314 -193.38764954]
[-109.53521729 -206.96005249]
[-114.06934357 -221.28330994]
[-116.61082458 -236.09056091]
[-117.11231232 -251.10595703]
[-115.56446075 -266.04977417]
[-111.99610138 -280.64364624]
[-106.47372437 -294.61563110]
[-99.10018921 -307.70550537]
[-90.01287842 -319.66940308]
[-79.38107300 -330.28442383]
[-67.40283966 -339.35281372]
[-54.30132675 -346.70562744]
[-40.32060623 -352.20593262]
[-25.72112846 -355.75119019]
[-10.77487564 -357.27542114]
[4.23971367 -356.75021362]
[19.04292679 -354.18533325]
[33.35898972 -349.62857056]
[46.92119980 -343.16479492]
[59.47690582 -334.91445923]
[70.79219818 -325.03125000]
[80.65628815 -313.69927979]
[88.88540649 -301.12966919]
[95.32624817 -287.55654907]
[99.85882568 -273.23281860]
[102.39870453 -258.42529297]
[102.89855957 -243.40983582]
[101.34909058 -228.46618652]
[97.77915955 -213.87271118]
[92.25526428 -199.90130615]
[84.88031769 -186.81222534]
[75.79170990 -174.84933472]
[65.15875244 -164.23547363]
[53.17953873 -155.16838074]
[40.07723236 -147.81695557]
[26.09591484 -142.31819153]
[29.63558578 -127.74181366]
[33.17525864 -113.16543579]
[36.71493149 -98.58905792]
[40.25460434 -84.01268768]
[44.65560150 -69.67283630]
[56.35590744 -60.45589066]
[53.93440247 -44.82109451]
[59.18112183 -30.76862335]
[64.42784119 -16.71615219]
[76.12814331 -7.49920702]
[73.70664215 8.13559055]
[85.40694427 17.35253716]
[82.98544312 32.98733521]
[88.23216248 47.03980637]
[93.47888184 61.09227753]
[105.17918396 70.30921936]
[102.75768280 85.94401550]
[113.41912079 94.98975372]
[111.29479218 108.80926514]
[113.21741486 93.93299103]
[119.58610535 80.35212708]
[129.79383850 69.36112213]
[142.86767578 62.00755692]
[157.56149292 58.99233627]
[172.47479248 60.60284805]
[186.18611145 66.68558502]
[197.38858032 76.66078949]
[205.01445007 89.57767487]
[208.33688354 104.20510101]
[207.03919983 119.14885712]
[201.24507141 132.98461914]
[191.50679016 144.39363098]
[178.75251770 152.28848267]
[164.19790649 155.91665649]
[149.23023987 154.93235779]
[135.27612305 149.42941284]
[123.66556549 139.93229675]
[115.50476074 127.34520721]
[116.84299469 142.28538513]
[118.18122864 157.22557068]
[119.51946259 172.16575623]
[123.38377380 186.65945435]
[129.66113281 200.28277588]
[135.93849182 213.90608215]
[142.21585083 227.52940369]
[155.01828003 236.82502747]
[153.31733704 251.62219238]
[159.59469604 265.24551392]
[165.87207031 278.86880493]
[172.35156250 292.39715576]
[179.03175354 305.82754517]
[185.71194458 319.25790405]
[192.39215088 332.68829346]
[199.27156067 346.01773071]
[206.34866333 359.24325562]
[213.42576599 372.46878052]
[220.50286865 385.69430542]
[234.79244995 381.00610352]
[249.67904663 378.87066650]
[264.71029663 379.35287476]
[279.42941284 382.43811035]
[293.38909912 388.03262329]
[306.16513062 395.96633911]
[317.36926270 405.99822998]
[326.66101074 417.82339478]
[333.75802612 431.08248901]
[338.44461060 445.37258911]
[340.57836914 460.25942993]
[340.09442139 475.29061890]
[337.00753784 490.00939941]
[331.41146851 503.96844482]
[323.47628784 516.74359131]
[313.44311523 527.94659424]
[301.61691284 537.23699951]
[288.35699463 544.33245850]
[274.06637573 549.01745605]
[259.17929077 551.14953613]
[244.14814758 550.66387939]
[229.42971802 547.57531738]
[215.47131348 541.97766113]
[202.69706726 534.04101562]
[191.49520874 524.00659180]
[182.20614624 512.17932129]
[175.11215210 498.91864014]
[170.42880249 484.62747192]
[168.29843140 469.74014282]
[168.78578186 454.70904541]
[171.87602234 439.99096680]
[177.47525024 426.03320312]
[185.41333008 413.25985718]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 177]
[2 176]
[3 175]
[4 174]
[7 173]
[8 172]
[9 171]
[10 170]
[13 169]
[14 168]
[15 167]
[17 165]
[18 164]
[19 163]
[20 162]
[44 161]
[45 160]
[46 159]
[47 158]
[48 139]
[50 137]
[52 135]
[53 134]
[54 133]
[56 131]
[58 129]
[59 128]
[60 127]
[62 125]
[71 124]
[72 123]
[73 122]
[74 121]
[75 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
