%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[111.76770782 567.71362305]
[96.71001434 569.99084473]
[82.02962494 565.94042969]
[70.26998901 556.26416016]
[63.46855164 542.63842773]
[62.80369568 527.42401123]
[68.39060974 513.25695801]
[79.26132965 502.59170532]
[93.53244019 497.27612305]
[94.42525482 482.30273438]
[95.31807709 467.32931519]
[96.21089172 452.35589600]
[97.10370636 437.38250732]
[97.99652100 422.40908813]
[97.66154480 407.41284180]
[88.64215088 395.55957031]
[94.90176392 381.02932739]
[93.34123993 366.11074829]
[91.78071594 351.19213867]
[90.22019958 336.27352905]
[88.65967560 321.35491943]
[87.09915161 306.43630981]
[76.83682251 317.37637329]
[61.84951401 317.99337769]
[50.72264481 307.93392944]
[49.83018875 292.96047974]
[59.68338394 281.65054321]
[74.63787079 280.48297119]
[86.12660217 290.12570190]
[85.90327454 275.12738037]
[85.67994690 260.12902832]
[85.45661926 245.13070679]
[85.23329163 230.13237000]
[83.31806946 228.08540344]
[82.09828949 225.15644836]
[81.91393280 221.60659790]
[83.00429535 217.81507874]
[85.46991730 214.24092102]
[86.13970184 199.25587463]
[74.82143402 193.64205933]
[66.43617249 184.12951660]
[62.25611496 172.10809326]
[62.93561554 159.35200500]
[68.40901947 147.75817871]
[77.89515686 139.06402588]
[90.00868225 134.58718872]
[91.12432861 119.62873840]
[92.23998260 104.67028046]
[90.16294861 101.42092896]
[89.52827454 97.27182007]
[90.70567322 92.88767242]
[93.75413513 89.07365417]
[95.53659821 74.17993927]
[97.31906891 59.28622437]
[87.82466888 46.93737030]
[89.84450531 31.85841560]
[101.67575836 22.88305855]
[103.45822906 7.98934221]
[105.24069214 -6.90437508]
[107.02316284 -21.79809189]
[108.80562592 -36.69181061]
[110.58808899 -51.58552551]
[112.37055969 -66.47924805]
[114.15302277 -81.37296295]
[115.93548584 -96.26667786]
[109.89289856 -110.88850403]
[119.08777618 -122.60616302]
[120.87023926 -137.49987793]
[109.13285065 -128.15998840]
[94.13517761 -128.42411804]
[82.73394775 -138.17153931]
[80.14166260 -152.94583130]
[87.54347229 -165.99241638]
[101.55536652 -171.34655762]
[115.77130127 -166.56040955]
[123.69232941 -153.82032776]
[127.01458740 -168.44778442]
[122.52597046 -183.61891174]
[132.88998413 -194.31639099]
[136.21224976 -208.94386292]
[139.53451538 -223.57131958]
[142.85676575 -238.19877625]
[138.36814880 -253.36990356]
[148.73217773 -264.06738281]
[152.05442810 -278.69485474]
[153.94772339 -293.57489014]
[154.39433289 -308.56823730]
[154.84094238 -323.56158447]
[155.28753662 -338.55493164]
[140.56069946 -341.60308838]
[126.58695984 -347.16238403]
[113.79098511 -355.06390381]
[102.56161499 -365.06750488]
[93.24009705 -376.86923218]
[86.10971069 -390.11041260]
[81.38714600 -404.38864136]
[79.21589661 -419.27008057]
[79.66195679 -434.30245972]
[82.71176910 -449.02896118]
[88.27265930 -463.00204468]
[96.17562866 -475.79714966]
[106.18051910 -487.02539062]
[117.98329163 -496.34555054]
[131.22528076 -503.47442627]
[145.50405884 -508.19537354]
[160.38574219 -510.36492920]
[175.41806030 -509.91717529]
[190.14421082 -506.86569214]
[204.11668396 -501.30322266]
[216.91087341 -493.39880371]
[228.13796997 -483.39263916]
[237.45680237 -471.58880615]
[244.58418274 -458.34600830]
[249.30352783 -444.06668091]
[251.47138977 -429.18478394]
[251.02192688 -414.15249634]
[247.96876526 -399.42669678]
[242.40470886 -385.45486450]
[234.49884033 -372.66156006]
[224.49139404 -361.43560791]
[212.68650818 -352.11810303]
[199.44291687 -344.99221802]
[185.16305542 -340.27450562]
[170.28089905 -338.10833740]
[169.83428955 -323.11499023]
[169.38768005 -308.12161255]
[168.94107056 -293.12826538]
[177.17045593 -305.66931152]
[189.74502563 -313.84732056]
[204.54576111 -316.28421021]
[219.07846069 -312.56930542]
[230.89411926 -303.32864380]
[238.00158691 -290.11938477]
[239.20314026 -275.16760254]
[234.29629517 -260.99288940]
[224.10792542 -249.98391724]
[210.35496521 -243.99592590]
[195.35502625 -244.03797913]
[181.63584900 -250.10299683]
[171.50938416 -261.16891479]
[166.68190002 -275.37258911]
[163.35963440 -260.74511719]
[168.08587646 -246.62025452]
[157.48423767 -234.87651062]
[154.16197205 -220.24905396]
[150.83970642 -205.62159729]
[147.51745605 -190.99414062]
[152.24369812 -176.86927795]
[141.64204407 -165.12553406]
[138.31979370 -150.49806213]
[135.76396179 -135.71740723]
[133.98149109 -120.82369995]
[140.15156555 -107.26717377]
[130.82920837 -94.48421478]
[129.04673767 -79.59049225]
[127.26427460 -64.69677734]
[125.48181152 -49.80306244]
[123.69934082 -34.90934372]
[121.91687775 -20.01562691]
[120.13440704 -5.12190914]
[118.35194397 9.77180767]
[116.56948090 24.66552544]
[125.94860840 36.17932129]
[124.35310364 51.30905914]
[112.21278381 61.06868744]
[110.43031311 75.96240997]
[108.64785004 90.85612488]
[107.19843292 105.78593445]
[106.08278656 120.74438477]
[104.96713257 135.70283508]
[119.71850586 145.25428772]
[127.56045532 160.88165283]
[126.41325378 178.23930359]
[116.68294525 192.55134583]
[101.12474060 199.92565918]
[100.45495605 214.91070557]
[100.23162842 229.90904236]
[100.45495605 244.90737915]
[100.67828369 259.90570068]
[100.90161133 274.90405273]
[101.12493896 289.90237427]
[102.01775360 304.87579346]
[103.57827759 319.79440308]
[105.13880157 334.71301270]
[106.69932556 349.63162231]
[108.25984955 364.55020142]
[109.82037354 379.46881104]
[118.95138550 392.38916016]
[112.58014679 405.85232544]
[119.70337677 392.65158081]
[132.09358215 384.19683838]
[146.98277283 382.37689209]
[161.04464722 387.59835815]
[171.13777161 398.69470215]
[175.00727844 413.18701172]
[171.78875732 427.83764648]
[162.20118713 439.37359619]
[148.38648987 445.21777344]
[133.43089294 444.06448364]
[120.67551422 436.17144775]
[112.96992493 423.30191040]
[112.07711029 438.27532959]
[111.18429565 453.24871826]
[110.29148102 468.22213745]
[109.39866638 483.19552612]
[108.50584412 498.16894531]
[122.04418182 505.14270020]
[131.57051086 517.02416992]
[135.43435669 531.75476074]
[132.96626282 546.78234863]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 206]
[10 205]
[11 204]
[12 203]
[13 202]
[14 201]
[15 189]
[17 187]
[18 186]
[19 185]
[20 184]
[21 183]
[22 182]
[29 181]
[30 180]
[31 179]
[32 178]
[33 177]
[38 176]
[39 175]
[46 170]
[47 169]
[48 168]
[52 167]
[53 166]
[54 165]
[57 162]
[58 161]
[59 160]
[60 159]
[61 158]
[62 157]
[63 156]
[64 155]
[65 154]
[67 152]
[68 151]
[76 150]
[77 149]
[79 147]
[80 146]
[81 145]
[82 144]
[84 142]
[85 141]
[86 127]
[87 126]
[88 125]
[89 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
