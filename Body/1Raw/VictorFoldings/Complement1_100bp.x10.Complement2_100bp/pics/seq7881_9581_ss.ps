%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[246.95866394 518.47509766]
[256.00537109 506.45855713]
[267.05249023 496.25067139]
[279.74484253 488.17953491]
[274.08206177 474.28948975]
[268.41928101 460.39947510]
[262.75650024 446.50946045]
[250.78695679 437.64495850]
[252.74188232 421.94497681]
[240.77233887 413.08047485]
[242.72726440 397.38052368]
[228.24398804 394.00817871]
[218.40730286 382.61941528]
[217.14819336 367.44485474]
[225.15835571 354.28643799]
[219.49557495 340.39642334]
[213.83277893 326.50640869]
[208.16999817 312.61636353]
[201.48980713 299.18600464]
[193.82920837 286.28967285]
[186.16860962 273.39334106]
[178.50801086 260.49700928]
[175.19979858 259.27716064]
[172.31806946 256.39431763]
[170.63800049 252.06643677]
[170.80812073 246.84933472]
[163.73101807 233.62380981]
[156.65391541 220.39828491]
[149.57681274 207.17274475]
[142.49969482 193.94721985]
[135.42259216 180.72169495]
[128.34548950 167.49617004]
[121.26838684 154.27064514]
[105.88410950 145.82723999]
[106.63114166 127.42823792]
[99.35791016 114.30954742]
[87.47257233 106.94541931]
[87.52339935 92.96368408]
[80.25016785 79.84498596]
[72.49377441 67.00605011]
[64.26496887 54.46464920]
[56.03615952 41.92324829]
[41.99645615 34.62960052]
[41.48354340 19.74382782]
[33.16159821 7.26403427]
[24.74698067 -5.15346098]
[16.33236313 -17.57095718]
[7.91774416 -29.98845291]
[-0.49687457 -42.40594864]
[1.33899856 -27.51871872]
[-1.03684711 -12.70806885]
[-7.43704224 0.85797334]
[-17.35684013 12.10953331]
[-30.01392746 20.15926552]
[-44.41010666 24.37233353]
[-59.41004181 24.41647911]
[-73.83077240 20.28822136]
[-86.53501892 12.31312943]
[-96.52087402 1.12015331]
[-103.00080872 -12.40798187]
[-105.46379089 -27.20439148]
[-103.71557617 -42.10216904]
[-97.89404297 -55.92641068]
[-88.45829010 -67.58688354]
[-76.15247345 -76.16399384]
[-61.94707108 -80.98130798]
[-46.96238327 -81.65892029]
[-32.38016510 -78.14338684]
[-19.35043335 -70.71196747]
[-8.89872169 -59.94791412]
[-13.29971981 -74.28775787]
[-17.70071793 -88.62760925]
[-22.10171700 -102.96745300]
[-26.50271416 -117.30730438]
[-30.90371323 -131.64715576]
[-33.70838165 -116.91168976]
[-40.87412643 -103.73397827]
[-51.71795654 -93.37002563]
[-65.20629883 -86.80767059]
[-80.05354309 -84.67238617]
[-94.84453583 -87.16770172]
[-108.16949463 -94.05577087]
[-118.75836945 -104.68006897]
[-125.60189819 -118.02795410]
[-128.04780579 -132.82719421]
[-125.86294556 -147.66722107]
[-119.25557709 -161.13357544]
[-108.85547638 -171.94273376]
[-95.65390778 -179.06443787]
[-80.90915680 -181.81987000]
[-66.02661133 -179.94642639]
[-52.42477036 -173.62266541]
[-41.40008163 -163.45132446]
[-34.00294113 -150.40081787]
[-34.44954681 -165.39416504]
[-34.89615631 -180.38751221]
[-43.04090881 -193.95120239]
[-35.68597412 -206.90319824]
[-49.64952850 -213.06614685]
[-59.54971695 -224.68290710]
[-63.42085648 -239.44694519]
[-60.49431992 -254.42686462]
[-51.35118103 -266.64840698]
[-37.80681610 -273.68493652]
[-22.55046463 -274.13937378]
[-8.61128998 -267.92147827]
[1.24307692 -256.26583862]
[5.05604315 -241.48666382]
[2.07054162 -226.51837158]
[-7.12065411 -214.33294678]
[-20.69262505 -207.34980774]
[-12.57981682 -194.85853577]
[-19.90280533 -180.83412170]
[-19.45619774 -165.84077454]
[-19.00959206 -150.84741211]
[-16.56386566 -136.04814148]
[-12.16286755 -121.70829773]
[-7.76186895 -107.36845398]
[-3.36087108 -93.02860260]
[1.04012704 -78.68875885]
[5.44112492 -64.34891510]
[11.92062092 -50.82056427]
[20.33523941 -38.40307236]
[28.74985886 -25.98557472]
[37.16447830 -13.56807995]
[45.57909393 -1.15058410]
[51.93364334 2.62321115]
[54.02494431 11.51502037]
[67.47606659 17.91162491]
[68.57756042 33.69443893]
[76.80636597 46.23583984]
[85.03517914 58.77724075]
[90.59412384 44.84533310]
[104.90753937 40.35911179]
[117.42410278 48.62565231]
[118.91706848 63.55117035]
[108.28587341 74.13312531]
[93.36885834 72.57176208]
[100.64208984 85.69045258]
[112.52742767 93.05458069]
[112.47660065 107.03631592]
[119.74983215 120.15501404]
[131.91087341 124.45291138]
[137.69868469 135.52923584]
[134.49391174 147.19354248]
[141.57101440 160.41906738]
[148.64811707 173.64459229]
[155.72523499 186.87011719]
[162.80233765 200.09564209]
[169.87944031 213.32116699]
[176.95654297 226.54670715]
[184.03364563 239.77223206]
[191.40434265 252.83641052]
[199.06494141 265.73272705]
[206.72554016 278.62905884]
[214.38613892 291.52539062]
[215.80897522 276.59301758]
[224.42666626 264.31558228]
[237.98655701 257.90237427]
[252.94413757 259.02978516]
[265.38949585 267.40310669]
[272.06948853 280.83358765]
[271.23797607 295.81051636]
[263.11227417 308.41897583]
[249.81646729 315.36312866]
[234.82601929 314.82781982]
[222.06002808 306.95358276]
[227.72280884 320.84359741]
[233.38560486 334.73364258]
[239.04838562 348.62365723]
[253.97523499 352.43093872]
[263.68460083 364.16046143]
[264.61441040 379.18041992]
[256.61727905 391.71774292]
[268.99188232 401.57574463]
[266.63189697 416.28219604]
[279.00650024 426.14019775]
[276.64651489 440.84664917]
[282.30929565 454.73669434]
[287.97210693 468.62670898]
[293.63488770 482.51675415]
[308.35247803 479.41317749]
[323.38772583 478.98764038]
[338.25729370 481.25381470]
[352.48321533 486.13879395]
[365.60815430 493.48562622]
[377.21020508 503.05807495]
[386.91641235 514.54846191]
[394.41479492 527.58746338]
[399.46423340 541.75579834]
[401.90249634 556.59814453]
[401.65112305 571.63732910]
[398.71826172 586.38989258]
[393.19815063 600.38159180]
[385.26828003 613.16271973]
[375.18350220 624.32232666]
[363.26803589 633.50170898]
[349.90490723 640.40582275]
[335.52371216 644.81274414]
[320.58670044 646.58074951]
[305.57409668 645.65301514]
[290.96841431 642.05932617]
[277.23922729 635.91534424]
[264.82785034 627.41839600]
[254.13325500 616.84179688]
[245.49923706 604.52539062]
[239.20333862 590.86517334]
[235.44793701 576.30023193]
[234.35377502 561.29882812]
[235.95602417 546.34313965]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 181]
[5 180]
[6 179]
[7 178]
[9 176]
[11 174]
[15 170]
[16 169]
[17 168]
[18 167]
[19 156]
[20 155]
[21 154]
[22 153]
[26 152]
[27 151]
[28 150]
[29 149]
[30 148]
[31 147]
[32 146]
[33 145]
[35 142]
[36 141]
[38 139]
[39 138]
[40 132]
[41 131]
[42 130]
[44 128]
[45 126]
[46 125]
[47 124]
[48 123]
[49 122]
[70 121]
[71 120]
[72 119]
[73 118]
[74 117]
[75 116]
[94 115]
[95 114]
[96 113]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
