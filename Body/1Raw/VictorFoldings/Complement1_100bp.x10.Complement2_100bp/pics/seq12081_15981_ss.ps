%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUGxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[166.37989807 408.57629395]
[173.71369934 395.45336914]
[183.05769348 383.67687988]
[194.16987610 373.55184937]
[206.76239014 365.34060669]
[200.68855286 351.62533569]
[194.61471558 337.91006470]
[188.54089355 324.19479370]
[173.82720947 314.63055420]
[175.94062805 296.33807373]
[169.66326904 282.71475220]
[163.38591003 269.09146118]
[151.03248596 260.77026367]
[152.28442383 244.99865723]
[146.00706482 231.37535095]
[143.42701721 230.27922058]
[141.12570190 228.09504700]
[139.51972961 224.92388916]
[138.98143005 221.01559448]
[139.78862000 216.74916077]
[134.33326721 202.77636719]
[128.87789917 188.80357361]
[123.42254639 174.83078003]
[117.75975800 160.94075012]
[105.65956116 152.25544739]
[107.38052368 136.52810669]
[101.51156616 122.72393799]
[84.52417755 116.70810699]
[77.22701263 100.23045349]
[84.18921661 83.60850525]
[71.38679504 74.31288910]
[73.08772278 59.51572037]
[66.81036377 45.89240265]
[54.00794220 36.59678650]
[55.70887756 21.79961967]
[55.32105255 36.79460526]
[51.76198196 51.36625671]
[45.19358444 64.85166168]
[35.91467285 76.63732147]
[24.34738159 86.18707275]
[11.01793957 93.06646729]
[-3.46724987 96.96252441]
[-18.44920731 97.69801331]
[-33.24635315 95.23947144]
[-47.18552017 89.69873810]
[-59.63256454 81.32788849]
[-70.02122498 70.50774384]
[-77.87889862 57.73053360]
[-82.84810638 43.57754898]
[-84.70278168 28.69265175]
[-83.35855103 13.75300503]
[-78.87657166 -0.56173676]
[-71.46073151 -13.60034752]
[-61.44841385 -24.76965904]
[-49.29511261 -33.56154251]
[-35.55371094 -39.57602310]
[-20.84936333 -42.53948212]
[-5.85101128 -42.31710434]
[8.75901699 -38.91900635]
[22.31606293 -32.49977875]
[34.20337296 -23.35145187]
[43.88015366 -11.89021492]
[50.90777969 1.36654341]
[50.46117401 -13.62680626]
[50.01456833 -28.62015724]
[49.56796265 -43.61350632]
[49.12135696 -58.60685730]
[48.67475128 -73.60020447]
[48.22814560 -88.59355927]
[47.78153992 -103.58690643]
[47.33493423 -118.58025360]
[39.58480453 -105.73753357]
[27.07751274 -97.45697784]
[12.22801685 -95.33743286]
[-2.09647703 -99.78814697]
[-13.13013363 -109.94976807]
[-18.74252510 -123.86022949]
[-17.84998894 -138.83364868]
[-10.62485981 -151.97889709]
[1.53780508 -160.75782776]
[16.28958511 -163.47537231]
[30.78214073 -159.60679626]
[42.21718979 -149.89907837]
[48.38705444 -136.22538757]
[50.61217117 -151.05943298]
[52.83729172 -165.89347839]
[45.81239319 -176.71075439]
[47.97108841 -189.02026367]
[57.61891174 -196.31724548]
[60.06464005 -211.11651611]
[62.51036835 -225.91578674]
[64.95609283 -240.71505737]
[67.40182495 -255.51432800]
[69.84754944 -270.31359863]
[55.68276978 -275.37313843]
[42.64914703 -282.88073730]
[31.16565132 -292.59512329]
[21.60143471 -304.20397949]
[14.26394463 -317.33413696]
[9.38905239 -331.56350708]
[7.13346481 -346.43469238]
[7.56969023 -361.46963501]
[10.68370533 -376.18502808]
[16.37540817 -390.10781860]
[24.46183395 -402.79046631]
[34.68303680 -413.82528687]
[46.71044540 -422.85751343]
[60.15743256 -429.59680176]
[74.59172821 -433.82656860]
[89.54933929 -435.41079712]
[104.54943085 -434.29855347]
[119.10980988 -430.52563477]
[132.76243591 -424.21328735]
[145.06842041 -415.56442261]
[155.63217163 -404.85711670]
[164.11412048 -392.43548584]
[170.24160767 -378.69891357]
[173.81764221 -364.08892822]
[174.72729492 -349.07519531]
[172.94131470 -334.14031982]
[168.51710510 -319.76443481]
[161.59689331 -306.40963745]
[152.40313721 -294.50524902]
[141.23136902 -284.43392944]
[128.44071960 -276.51943970]
[114.44236755 -271.01620483]
[99.68627930 -268.10110474]
[84.64682007 -267.86785889]
[82.20109558 -253.06860352]
[79.75536346 -238.26933289]
[77.30963898 -223.47006226]
[74.86391449 -208.67079163]
[72.41818237 -193.87152100]
[79.47337341 -177.80319214]
[67.67133331 -163.66835022]
[65.44621277 -148.83430481]
[63.22109985 -134.00027466]
[62.32828522 -119.02686310]
[62.77489090 -104.03351593]
[63.22149658 -89.04016113]
[63.66810226 -74.04681396]
[64.11470795 -59.05346298]
[64.56130981 -44.06011200]
[65.00791931 -29.06676292]
[65.45452118 -14.07341290]
[65.90113068 0.91993743]
[69.33219147 15.52225971]
[81.68561554 23.84344864]
[80.43367767 39.61504364]
[86.71104431 53.23836136]
[99.06446838 61.55954742]
[97.81253052 77.33114624]
[108.94919586 79.05783844]
[117.89443207 85.91272736]
[122.45779419 96.21720886]
[121.52183533 107.44800568]
[115.31574249 116.85497284]
[121.18470001 130.65914917]
[133.70468140 140.33181763]
[131.56393433 155.07179260]
[136.60797119 159.34603882]
[138.45846558 164.71936035]
[137.39533997 169.37541199]
[142.85070801 183.34822083]
[148.30606079 197.32101440]
[153.76141357 211.29380798]
[159.63037109 225.09799194]
[165.90773010 238.72129822]
[178.71015930 248.01692200]
[177.00923157 262.81408691]
[183.28659058 276.43740845]
[189.56394958 290.06072998]
[201.37164307 295.25122070]
[206.31961060 306.72732544]
[202.25614929 318.12097168]
[208.32998657 331.83624268]
[214.40382385 345.55151367]
[220.47766113 359.26678467]
[235.02107239 355.46081543]
[249.98667908 354.03723145]
[264.98684692 355.03286743]
[279.63302612 358.42193604]
[293.54583740 364.11663818]
[306.36489868 371.96951294]
[317.75820923 381.77709961]
[327.43060303 393.28540039]
[335.13159180 406.19628906]
[340.66165161 420.17535400]
[343.87756348 434.86053467]
[344.69601440 449.87139893]
[343.09582520 464.81915283]
[339.11843872 479.31665039]
[332.86688232 492.98828125]
[324.50308228 505.48001099]
[314.24368286 516.46820068]
[302.35440063 525.66827393]
[289.14324951 532.84191895]
[274.95236206 537.80334473]
[260.14938354 540.42395020]
[245.11770630 540.63598633]
[230.24670410 538.43383789]
[215.92156982 533.87463379]
[202.51333618 527.07641602]
[190.36933899 518.21527100]
[179.80413818 507.52078247]
[171.09136963 495.26989746]
[164.45672607 481.77999878]
[160.07206726 467.40045166]
[158.05097961 452.50378418]
[158.44578552 437.47579956]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 178]
[6 177]
[7 176]
[8 175]
[10 172]
[11 171]
[12 170]
[14 168]
[15 167]
[20 166]
[21 165]
[22 164]
[23 163]
[24 160]
[26 158]
[27 157]
[30 152]
[32 150]
[33 149]
[35 147]
[63 146]
[64 145]
[65 144]
[66 143]
[67 142]
[68 141]
[69 140]
[70 139]
[71 138]
[84 137]
[85 136]
[86 135]
[89 133]
[90 132]
[91 131]
[92 130]
[93 129]
[94 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
