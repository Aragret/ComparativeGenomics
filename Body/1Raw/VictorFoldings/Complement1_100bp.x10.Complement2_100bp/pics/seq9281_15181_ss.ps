%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[58.61236572 670.84167480]
[52.09326172 684.42285156]
[42.71509171 696.21258545]
[30.94826698 705.61944580]
[17.38300514 712.17169189]
[2.69973254 715.54052734]
[-12.36504364 715.55706787]
[-27.05567932 712.22045898]
[-40.63529968 705.69805908]
[-52.42275620 696.31707764]
[-61.82679367 684.54797363]
[-68.37570953 670.98107910]
[-71.74102020 656.29699707]
[-71.75391388 641.23223877]
[-68.41374207 626.54241943]
[-61.88805771 612.96435547]
[-52.50417709 601.17919922]
[-40.73279572 591.77801514]
[-27.16435814 585.23236084]
[-12.47945499 581.87060547]
[2.58532739 581.86138916]
[5.90758705 567.23388672]
[9.22984600 552.60644531]
[12.55210590 537.97900391]
[15.87436581 523.35156250]
[19.19662476 508.72406006]
[22.51888466 494.09661865]
[8.67047882 482.40933228]
[2.64370751 465.22967529]
[6.18864012 447.28521729]
[18.40863800 433.56069946]
[35.98512268 427.91320801]
[38.65091705 413.15197754]
[41.31671524 398.39077759]
[43.87254715 383.61010742]
[46.31827545 368.81085205]
[48.76399994 354.01156616]
[51.20972824 339.21231079]
[53.65545654 324.41302490]
[56.10118484 309.61376953]
[47.24552536 297.69265747]
[49.51501846 282.64923096]
[62.07902145 273.44143677]
[64.52474976 258.64218140]
[66.97047424 243.84289551]
[69.41620636 229.04362488]
[71.86193085 214.24435425]
[69.85109711 207.13252258]
[74.45581818 199.24363708]
[77.12161255 184.48242188]
[79.78740692 169.72120667]
[82.45320129 154.95999146]
[85.11899567 140.19877625]
[87.78479004 125.43755341]
[90.45059204 110.67633820]
[85.90407562 97.45435333]
[94.78819275 86.65786743]
[96.45973206 71.75129700]
[97.12951660 56.76625443]
[97.79930115 41.78121567]
[98.46909332 26.79617882]
[99.13887787 11.81113911]
[99.80866241 -3.17389965]
[100.47844696 -18.15893745]
[101.14823151 -33.14397812]
[101.81801605 -48.12901688]
[94.45806122 -35.05878067]
[83.88383484 -24.41989708]
[70.85871887 -16.98039246]
[56.32299042 -13.27733231]
[41.32600403 -13.57804298]
[26.95040512 -17.86081696]
[14.23397923 -25.81647491]
[4.09473610 -36.87069321]
[-2.73536348 -50.22546005]
[-5.76324892 -64.91667938]
[-4.77033377 -79.88378143]
[0.17170162 -94.04627228]
[8.70608807 -106.38175964]
[20.21672058 -115.99973297]
[33.87263489 -122.20585632]
[48.68800354 -124.55210114]
[63.59328842 -122.86910248]
[77.51246643 -117.27835083]
[89.44069672 -108.18344116]
[98.51686859 -96.24095917]
[104.08577728 -82.31302643]
[105.74535370 -67.40395355]
[103.32385254 -83.03874969]
[115.02416229 -92.25569916]
[120.27087402 -106.30816650]
[125.51759338 -120.36064148]
[130.76431274 -134.41311646]
[136.01103210 -148.46557617]
[141.25775146 -162.51805115]
[145.87176514 -176.79078674]
[149.84385681 -191.25531006]
[153.81594849 -205.71983337]
[157.78805542 -220.18435669]
[161.76014709 -234.64888000]
[148.38496399 -241.56250000]
[136.73973083 -251.10621643]
[127.33353424 -262.86279297]
[120.57756805 -276.31829834]
[116.76717377 -290.88452148]
[116.06893158 -305.92465210]
[118.51335907 -320.78125000]
[123.99359131 -334.80484009]
[132.27006531 -347.38232422]
[142.98097229 -357.96392822]
[155.65806580 -366.08703613]
[169.74716187 -371.39657593]
[184.63235474 -373.66036987]
[199.66291809 -372.77951050]
[214.18177795 -368.79251099]
[227.55424500 -361.87362671]
[239.19570923 -352.32531738]
[248.59729004 -340.56506348]
[255.34796143 -327.10690308]
[259.15261841 -312.53918457]
[259.84494019 -297.49874878]
[257.39468384 -282.64312744]
[251.90892029 -268.62170410]
[243.62750244 -256.04745483]
[232.91242981 -245.47006226]
[220.23214722 -237.35194397]
[206.14096069 -232.04797363]
[191.25488281 -229.79000854]
[176.22467041 -230.67678833]
[172.25257874 -216.21226501]
[168.28047180 -201.74774170]
[164.30838013 -187.28321838]
[160.33628845 -172.81869507]
[173.87463379 -179.27725220]
[188.06001282 -174.40127563]
[194.76638794 -160.98394775]
[190.15202332 -146.71131897]
[176.86027527 -139.75941467]
[162.50521851 -144.11058044]
[155.31022644 -157.27133179]
[150.06350708 -143.21885681]
[144.81678772 -129.16639709]
[139.57006836 -115.11392212]
[134.32334900 -101.06144714]
[129.07662964 -87.00897980]
[131.87341309 -72.37931061]
[119.79782867 -62.15723419]
[116.80305481 -47.45923233]
[116.13327026 -32.47419357]
[115.46348572 -17.48915291]
[114.79370117 -2.50411439]
[114.12391663 12.48092461]
[113.45413208 27.46596336]
[112.78433990 42.45100021]
[112.11455536 57.43603897]
[111.44477081 72.42108154]
[121.27677917 61.09272385]
[135.64228821 56.77622223]
[150.08998108 60.80908585]
[160.14309692 71.94169617]
[162.68655396 86.72447968]
[156.93225098 100.57684326]
[144.66320801 109.20647430]
[129.68112183 109.93938446]
[116.62836456 102.54848480]
[109.54940796 89.32366180]
[114.09592438 102.54564667]
[105.21180725 113.34213257]
[102.54601288 128.10334778]
[99.88021851 142.86456299]
[97.21441650 157.62577820]
[94.54862213 172.38699341]
[91.88282776 187.14822388]
[89.21703339 201.90943909]
[86.66120148 216.69009399]
[84.21547699 231.48936462]
[81.76974487 246.28863525]
[79.32402039 261.08789062]
[76.87828827 275.88717651]
[85.81181335 288.64764404]
[83.12068176 303.62136841]
[70.90045166 312.05947876]
[68.45472717 326.85876465]
[66.00900269 341.65802002]
[63.56327057 356.45730591]
[61.11754608 371.25656128]
[58.67181778 386.05584717]
[60.36012268 395.03289795]
[56.07793045 401.05657959]
[53.41213608 415.81777954]
[50.74634171 430.57901001]
[60.84000015 437.10327148]
[68.12152863 446.62152100]
[71.75657654 458.00466919]
[71.34157562 469.91226196]
[66.94847870 480.95040894]
[59.11352921 489.83480835]
[48.77195358 495.54025269]
[37.14634323 497.41888428]
[33.82408524 512.04632568]
[30.50182533 526.67376709]
[27.17956543 541.30126953]
[23.85730743 555.92871094]
[20.53504753 570.55615234]
[17.21278763 585.18365479]
[30.79556656 591.69946289]
[42.58756638 601.07476807]
[51.99730682 612.83929443]
[58.55279922 626.40295410]
[61.92522049 641.08544922]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 205]
[22 204]
[23 203]
[24 202]
[25 201]
[26 200]
[27 199]
[32 191]
[33 190]
[34 189]
[35 187]
[36 186]
[37 185]
[38 184]
[39 183]
[40 182]
[43 179]
[44 178]
[45 177]
[46 176]
[47 175]
[49 174]
[50 173]
[51 172]
[52 171]
[53 170]
[54 169]
[55 168]
[57 166]
[58 156]
[59 155]
[60 154]
[61 153]
[62 152]
[63 151]
[64 150]
[65 149]
[66 148]
[88 147]
[90 145]
[91 144]
[92 143]
[93 142]
[94 141]
[95 140]
[96 133]
[97 132]
[98 131]
[99 130]
[100 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
