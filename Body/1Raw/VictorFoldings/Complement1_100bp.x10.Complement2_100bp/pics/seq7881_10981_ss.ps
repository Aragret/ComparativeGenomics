%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[171.13961792 697.02526855]
[159.36000061 687.72937012]
[148.23484802 677.65942383]
[137.81488037 666.86138916]
[128.14765930 655.38452148]
[119.27729797 643.28125000]
[111.24427032 630.60675049]
[104.08522797 617.41882324]
[97.83283234 603.77770996]
[92.51560974 589.74560547]
[88.15782928 575.38653564]
[84.77937317 560.76599121]
[82.39565277 545.95080566]
[81.01753998 531.00842285]
[80.65133667 516.00714111]
[81.29870605 501.01535034]
[82.95669556 486.10147095]
[85.61774445 471.33352661]
[89.26969910 456.77896118]
[93.89590454 442.50408936]
[99.47525024 428.57412720]
[105.98227692 415.05261230]
[113.38729858 402.00125122]
[121.65652466 389.47955322]
[130.75222778 377.54467773]
[140.63290405 366.25106812]
[151.25346375 355.65029907]
[162.56546021 345.79071045]
[174.51727295 336.71725464]
[187.05435181 328.47140503]
[200.11952209 321.09072876]
[193.64002991 307.56237793]
[181.16407776 299.42602539]
[182.18106079 283.63754272]
[175.70156860 270.10919189]
[169.22206116 256.58084106]
[162.74256897 243.05250549]
[156.26307678 229.52415466]
[149.78358459 215.99580383]
[137.30763245 207.85946655]
[138.32461548 192.07098389]
[131.84512329 178.54263306]
[125.16492462 165.11225891]
[118.28551483 151.78283691]
[111.40610504 138.45339966]
[104.52668762 125.12397003]
[97.64727783 111.79454041]
[90.57016754 98.56901550]
[83.29694366 85.45032501]
[76.02371216 72.33162689]
[68.75048065 59.21293259]
[69.41771698 74.19808960]
[66.38736725 88.88879395]
[59.84473801 102.38672638]
[50.18991470 113.86646271]
[38.01329422 122.62602234]
[24.05947876 128.12974548]
[9.18175220 130.04110718]
[-5.71010733 128.24317932]
[-19.70545769 122.84594727]
[-31.94847679 114.17943573]
[-41.69050217 102.77359772]
[-48.33580017 89.32592773]
[-51.47801208 74.65873718]
[-50.92499161 59.66893005]
[-46.71055222 45.27315140]
[-39.09240723 32.35169983]
[-28.53641701 21.69472885]
[-15.68807697 13.95391655]
[-1.33307123 9.60261631]
[13.65078640 8.90691185]
[28.34722710 11.90934658]
[41.85755920 18.42631912]
[53.35562134 28.05931473]
[62.13831329 40.21929550]
[52.25445557 27.86535263]
[57.81305313 14.04684162]
[55.36732483 -0.75242901]
[52.92159653 -15.55169964]
[50.47586823 -30.35097122]
[40.59201050 -42.70491409]
[46.15061188 -56.52342606]
[43.70488358 -71.32270050]
[41.25915527 -86.12197113]
[34.93427658 -72.52064514]
[23.06926918 -63.34341431]
[8.31480694 -60.64048767]
[-6.03292751 -65.01570129]
[-16.76861191 -75.49163055]
[-21.49386787 -89.72792053]
[-19.15306091 -104.54415131]
[-10.26913357 -116.63033295]
[3.17322278 -123.28638458]
[18.17094994 -123.02532959]
[31.37351990 -115.90548706]
[39.83145142 -103.51742554]
[39.83145142 -118.51742554]
[39.83145142 -133.51742554]
[39.83145142 -148.51742554]
[26.05758286 -155.09339905]
[16.50765610 -166.99975586]
[13.07781601 -181.87252808]
[16.44906044 -196.75866699]
[25.95202637 -208.70256042]
[39.69989014 -215.33271790]
[54.96300888 -215.33271790]
[68.71087646 -208.70256042]
[78.21384430 -196.75866699]
[81.58508301 -181.87252808]
[78.15524292 -166.99975586]
[68.60531616 -155.09339905]
[54.83145142 -148.51742554]
[54.83145142 -133.51742554]
[54.83145142 -118.51742554]
[54.83145142 -103.51742554]
[56.05842590 -88.56769562]
[58.50415421 -73.76842499]
[60.94988251 -58.96915436]
[70.65880585 -47.67375183]
[65.27513885 -32.79669952]
[67.72087097 -17.99742699]
[70.16659546 -3.19815636]
[72.61231995 11.60111427]
[82.32124329 22.89651489]
[76.93758392 37.77357101]
[81.86917877 51.93970490]
[89.14240265 65.05839539]
[96.41563416 78.17709351]
[103.68886566 91.29578400]
[108.27302551 93.84518433]
[111.10248566 98.78152466]
[110.97670746 104.91513062]
[117.85611725 118.24456024]
[124.73552704 131.57398987]
[131.61494446 144.90341187]
[138.49435425 158.23284912]
[143.84233093 162.12010193]
[146.08734131 167.34091187]
[145.37347412 172.06314087]
[151.85296631 185.59149170]
[164.79235840 194.69546509]
[163.31192017 209.51631165]
[169.79142761 223.04466248]
[176.27091980 236.57301331]
[182.75041199 250.10134888]
[189.22990417 263.62969971]
[195.70941162 277.15805054]
[208.64880371 286.26202393]
[207.16836548 301.08288574]
[213.64787292 314.61120605]
[227.58805847 309.05749512]
[241.87138367 304.45751953]
[256.43267822 300.83233643]
[271.20547485 298.19845581]
[286.12237549 296.56787109]
[301.11532593 295.94805908]
[316.11593628 296.34185791]
[331.05572510 297.74743652]
[345.86654663 300.15838623]
[360.48080444 303.56372070]
[374.83181763 307.94787598]
[388.85412598 313.29089355]
[402.48376465 319.56835938]
[415.65847778 326.75161743]
[428.31820679 334.80795288]
[440.40518188 343.70053101]
[451.86422729 353.38882446]
[462.64306641 363.82861328]
[472.69253540 374.97229004]
[481.96676636 386.76895142]
[490.42346191 399.16482544]
[498.02398682 412.10333252]
[504.73370361 425.52542114]
[510.52200317 439.36987305]
[515.36242676 453.57348633]
[519.23297119 468.07150269]
[522.11590576 482.79772949]
[523.99804688 497.68496704]
[524.87091064 512.66534424]
[524.73046875 527.67041016]
[523.57733154 542.63183594]
[521.41674805 557.48126221]
[518.25866699 572.15087891]
[514.11737061 586.57391357]
[509.01187134 600.68444824]
[502.96542358 614.41809082]
[496.00558472 627.71221924]
[488.16415405 640.50616455]
[479.47689819 652.74151611]
[469.98345947 664.36248779]
[459.72711182 675.31610107]
[448.75473022 685.55224609]
[437.11630249 695.02435303]
[424.86495972 703.68908691]
[412.05664062 711.50695801]
[398.74975586 718.44238281]
[385.00500488 724.46356201]
[370.88510132 729.54309082]
[356.45452881 733.65783691]
[341.77908325 736.78900146]
[326.92572021 738.92224121]
[311.96221924 740.04785156]
[296.95687866 740.16076660]
[281.97817993 739.26037598]
[267.09439087 737.35083008]
[252.37350464 734.44085693]
[237.88262939 730.54370117]
[223.68792725 725.67712402]
[209.85415649 719.86340332]
[196.44441223 713.12902832]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 150]
[32 149]
[34 147]
[35 146]
[36 145]
[37 144]
[38 143]
[39 142]
[41 140]
[42 139]
[43 136]
[44 135]
[45 134]
[46 133]
[47 132]
[48 129]
[49 128]
[50 127]
[51 126]
[75 125]
[77 123]
[78 122]
[79 121]
[80 120]
[82 118]
[83 117]
[84 116]
[96 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
