%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[47.94085693 585.83184814]
[32.96799469 587.19683838]
[17.97468185 586.07855225]
[3.36995363 582.50762939]
[-10.44776344 576.58135986]
[-23.10151291 568.46148682]
[-34.24608994 558.36950684]
[-43.57746506 546.58068848]
[-50.84106827 533.41674805]
[-55.83874130 519.23669434]
[-58.43415070 504.42745972]
[-58.55648804 489.39300537]
[-56.20241547 474.54348755]
[-51.43615341 460.28402710]
[-44.38773346 447.00360107]
[-35.24943542 435.06451416]
[-24.27055931 424.79251099]
[-11.75062180 416.46780396]
[1.96882701 410.31744385]
[16.51350975 406.50930786]
[31.48663902 405.14721680]
[32.60228729 390.18875122]
[33.71793747 375.23031616]
[34.83358383 360.27185059]
[35.94923401 345.31341553]
[37.06488419 330.35494995]
[27.33922577 341.77474976]
[13.24009705 346.89474487]
[-1.54702795 344.37661743]
[-13.15682888 334.87860107]
[-18.55453110 320.88342285]
[-16.32919121 306.04943848]
[-7.06250334 294.25415039]
[6.82323980 288.58087158]
[21.69833946 290.51254272]
[33.67447662 299.54428101]
[39.62099457 313.31430054]
[42.94325256 298.68682861]
[46.26551056 284.05938721]
[49.58777237 269.43191528]
[52.91003036 254.80445862]
[56.23229218 240.17698669]
[54.49024200 235.73016357]
[55.52317429 230.14176941]
[59.87736511 225.16658020]
[63.63366318 210.64451599]
[67.38996887 196.12245178]
[71.14626312 181.60040283]
[74.90256500 167.07833862]
[61.50629425 160.39552307]
[49.79194260 151.07382202]
[40.27134705 139.52053833]
[33.36050034 126.24047089]
[29.36135864 111.81385803]
[28.44865608 96.87106323]
[30.66227531 82.06498718]
[35.90549088 68.04254913]
[43.94921494 55.41643524]
[54.44198227 44.73833084]
[66.92533875 36.47479630]
[80.85383606 30.98689079]
[95.61888885 28.51440048]
[110.57537079 29.16535950]
[114.33167267 14.64330006]
[118.08797455 0.12124035]
[121.84427643 -14.40081882]
[111.16898346 -22.18796158]
[103.79316711 -33.11297989]
[100.57675934 -45.86336517]
[101.88153839 -58.91619492]
[107.53061676 -70.72000885]
[116.83203125 -79.87921143]
[128.66343689 -85.31909180]
[141.60752869 -86.41188049]
[145.79454041 -100.81565857]
[149.98155212 -115.21944427]
[148.73548889 -120.28840637]
[149.48356628 -124.87029266]
[151.70634460 -128.28706360]
[154.69050598 -130.16511536]
[159.51651001 -144.36756897]
[164.34251404 -158.57002258]
[169.16850281 -172.77247620]
[155.46185303 -178.89230347]
[142.37832642 -186.25071716]
[130.02958679 -194.78494263]
[118.52096558 -204.42218018]
[107.95066071 -215.08018494]
[98.40885162 -226.66806030]
[89.97695923 -239.08689880]
[82.72691345 -252.23077393]
[76.72056580 -265.98754883]
[72.00917816 -280.23980713]
[68.63292694 -294.86602783]
[66.62063599 -309.74133301]
[65.98946381 -324.73889160]
[66.74479675 -339.73068237]
[68.88018799 -354.58883667]
[72.37742615 -369.18658447]
[77.20666504 -383.39935303]
[83.32670593 -397.10592651]
[90.68534088 -410.18930054]
[99.21977997 -422.53790283]
[108.85720062 -434.04635620]
[119.51539612 -444.61648560]
[131.10342407 -454.15811157]
[143.52239990 -462.58981323]
[156.66639709 -469.83963013]
[170.42326355 -475.84573364]
[184.67561340 -480.55688477]
[199.30187988 -483.93289185]
[214.17723083 -485.94494629]
[229.17478943 -486.57586670]
[244.16658020 -485.82028198]
[259.02468872 -483.68463135]
[273.62237549 -480.18716431]
[287.83508301 -475.35769653]
[301.54153442 -469.23742676]
[314.62478638 -461.87857056]
[326.97326660 -453.34393311]
[338.48156738 -443.70629883]
[349.05151367 -433.04794312]
[358.59292603 -421.45974731]
[367.02441406 -409.04061890]
[374.27401733 -395.89651489]
[380.27990723 -382.13955688]
[384.99081421 -367.88711548]
[388.36657715 -353.26080322]
[390.37838745 -338.38540649]
[391.00906372 -323.38784790]
[390.25323486 -308.39605713]
[388.11734009 -293.53799438]
[384.61959839 -278.94036865]
[379.78988647 -264.72775269]
[373.66940308 -251.02139282]
[366.31033325 -237.93824768]
[357.77548218 -225.58992004]
[348.13766479 -214.08178711]
[337.47912598 -203.51200867]
[325.89077759 -193.97079468]
[313.47152710 -185.53952026]
[300.32727051 -178.29013062]
[286.57022095 -172.28446960]
[272.31768799 -167.57379150]
[257.69134521 -164.19827271]
[242.81591797 -162.18672180]
[227.81834412 -161.55630493]
[212.82656860 -162.31237793]
[197.96852112 -164.44851685]
[183.37095642 -167.94648743]
[178.54496765 -153.74403381]
[173.71896362 -139.54158020]
[168.89297485 -125.33911896]
[164.38534546 -111.03243256]
[160.19833374 -96.62864685]
[156.01132202 -82.22486877]
[168.90397644 -71.30518341]
[175.74890137 -55.79774475]
[175.12469482 -38.80292511]
[167.10861206 -23.74166298]
[153.27062988 -13.66684151]
[136.36633301 -10.64451790]
[132.61003113 3.87754107]
[128.85372925 18.39960098]
[125.09743500 32.92166138]
[138.49371338 39.60447311]
[150.20805359 48.92617416]
[159.72865295 60.47946167]
[166.63949585 73.75952911]
[170.63864136 88.18614197]
[171.55134583 103.12893677]
[169.33772278 117.93501282]
[164.09451294 131.95745850]
[156.05078125 144.58355713]
[145.55801392 155.26167297]
[133.07466125 163.52520752]
[119.14616394 169.01310730]
[104.38111115 171.48559570]
[89.42462921 170.83464050]
[85.66832733 185.35670471]
[81.91202545 199.87875366]
[78.15572357 214.40081787]
[74.39942169 228.92288208]
[70.85974884 243.49925232]
[67.53749084 258.12670898]
[64.21523285 272.75418091]
[60.89297104 287.38162231]
[57.57071304 302.00909424]
[54.24845123 316.63656616]
[52.02333450 331.47061157]
[50.90768814 346.42904663]
[49.79203796 361.38751221]
[48.67639160 376.34594727]
[47.56074142 391.30441284]
[46.44509125 406.26287842]
[61.05050659 409.83102417]
[74.86936951 415.75460815]
[87.52468109 423.87207031]
[98.67120361 433.96188354]
[108.00484467 445.74887085]
[115.27098846 458.91143799]
[120.27139282 473.09051514]
[122.86965179 487.89926147]
[122.99488831 502.93368530]
[120.64367676 517.78363037]
[115.88016510 532.04406738]
[108.83429718 545.32580566]
[99.69830322 557.26666260]
[88.72140503 567.54077148]
[76.20307159 575.86791992]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 195]
[22 194]
[23 193]
[24 192]
[25 191]
[26 190]
[37 189]
[38 188]
[39 187]
[40 186]
[41 185]
[42 184]
[45 183]
[46 182]
[47 181]
[48 180]
[49 179]
[63 165]
[64 164]
[65 163]
[66 162]
[74 156]
[75 155]
[76 154]
[80 153]
[81 152]
[82 151]
[83 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
