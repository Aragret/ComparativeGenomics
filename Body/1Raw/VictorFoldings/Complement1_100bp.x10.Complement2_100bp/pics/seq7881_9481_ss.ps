%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[138.76710510 469.00698853]
[145.62261963 455.60968018]
[154.96034241 443.80743408]
[166.42134094 434.05389404]
[179.56509399 426.72393799]
[174.95108032 412.45120239]
[170.33708191 398.17846680]
[165.72306824 383.90573120]
[161.10905457 369.63299561]
[153.33280945 382.45993042]
[138.79760742 386.16506958]
[125.82989502 378.62597656]
[121.85813904 364.16134644]
[129.15756226 351.05722046]
[143.54672241 346.82019043]
[156.78224182 353.87673950]
[153.45997620 339.24926758]
[150.13771057 324.62182617]
[146.81546021 309.99435425]
[134.10951233 305.89544678]
[125.01518250 295.97387695]
[121.98676300 282.74896240]
[125.91953278 269.65118408]
[135.88868713 260.13244629]
[132.78457642 245.45713806]
[129.68046570 230.78182983]
[126.03237915 216.23220825]
[115.05000305 206.17056274]
[118.62767029 190.75917053]
[114.44065857 176.35539246]
[110.25364685 161.95161438]
[106.06663513 147.54782104]
[101.87962341 133.14404297]
[90.89724731 123.08239746]
[94.47490692 107.67101288]
[90.56925201 104.16960907]
[88.90338135 98.72918701]
[90.38453674 92.77577972]
[86.62823486 78.25371552]
[82.87193298 63.73165894]
[79.11563110 49.20959854]
[75.35932922 34.68753815]
[70.18061829 27.16299629]
[71.65692902 19.92129135]
[68.11725616 5.34491491]
[64.57758331 -9.23146057]
[60.92949677 -23.78108025]
[57.17319489 -38.30313873]
[53.41689301 -52.82519913]
[38.33683395 -52.98932266]
[23.82440567 -57.04824829]
[10.86725712 -64.71950531]
[0.34557453 -75.47501373]
[-7.02770901 -88.57739258]
[-10.75521564 -103.13056183]
[-10.58867264 -118.14098358]
[-6.54543781 -132.58552551]
[1.09309137 -145.48115540]
[11.80105495 -155.95188904]
[24.84432602 -163.28826904]
[21.08802605 -177.81033325]
[17.33172607 -192.33239746]
[13.57542515 -206.85444641]
[10.49814034 -192.17350769]
[4.04132652 -178.63430786]
[-5.42985153 -167.00259399]
[-17.37975311 -157.93618774]
[-31.13255310 -151.94783020]
[-45.91046524 -149.37619019]
[-60.87772369 -150.36669922]
[-75.18785858 -154.86335754]
[-88.03157043 -162.61186218]
[-98.68247223 -173.17398071]
[-106.53820801 -185.95237732]
[-111.15450287 -200.22436523]
[-112.27027893 -215.18281555]
[-109.82243347 -229.98173523]
[-103.94940948 -243.78417969]
[-94.98334503 -255.80955505]
[-83.43132019 -265.37777710]
[-69.94666290 -271.94769287]
[-55.29198074 -275.14776611]
[-40.29608536 -274.79699707]
[-25.80705452 -270.91525269]
[-12.64431953 -263.72201538]
[-1.55229449 -253.62416077]
[6.84171247 -241.19271851]
[12.06323051 -227.12973022]
[13.62375355 -242.04833984]
[15.18427658 -256.96694946]
[16.74480057 -271.88552856]
[17.86044884 -286.84399414]
[18.53023338 -301.82904053]
[10.41808128 -311.85678101]
[11.28444386 -324.32406616]
[20.12077713 -332.58517456]
[21.01359177 -347.55856323]
[21.90640831 -362.53198242]
[22.79922485 -377.50540161]
[8.87901878 -383.50570679]
[-2.14734054 -393.90737915]
[-8.94836617 -407.45440674]
[-10.70280266 -422.51089478]
[-7.19879198 -437.25869751]
[1.14053929 -449.91696167]
[13.30817604 -458.95712280]
[27.83481598 -463.28753662]
[42.96630096 -462.38528442]
[56.87542343 -456.35934448]
[67.88259125 -445.93734741]
[74.65864563 -432.37780762]
[76.38533020 -417.31811523]
[72.85414886 -402.57678223]
[64.49150085 -389.93392944]
[52.30722809 -380.91619873]
[37.77262878 -376.61257935]
[36.87981415 -361.63916016]
[35.98699951 -346.66577148]
[35.09418106 -331.69235229]
[43.78275299 -316.44519043]
[33.51527405 -301.15924072]
[32.84548569 -286.17422485]
[34.63547134 -284.01687622]
[35.67876053 -281.02050781]
[35.65150070 -277.46600342]
[34.33739471 -273.74609375]
[31.66340446 -270.32501221]
[30.10288048 -255.40641785]
[28.54235840 -240.48780823]
[26.98183632 -225.56919861]
[28.09748459 -210.61074829]
[31.85378456 -196.08869934]
[35.61008453 -181.56663513]
[39.36638641 -167.04457092]
[54.33104706 -166.95277405]
[68.77308655 -162.98738098]
[81.70644379 -155.41290283]
[92.24647522 -144.74049377]
[99.67041016 -131.69343567]
[103.46697998 -117.15813446]
[103.37155914 -102.12388611]
[99.38466644 -87.61557007]
[91.77226257 -74.62375641]
[81.04808807 -64.03708649]
[67.93895721 -56.58150101]
[71.69525146 -42.05944061]
[75.45155334 -27.53738213]
[80.16990662 -21.84888840]
[79.15396118 -12.77113247]
[82.69363403 1.80524266]
[86.23330688 16.38161850]
[89.88139343 30.93123817]
[93.63769531 45.45329666]
[97.39398956 59.97535706]
[101.15029144 74.49741364]
[104.90659332 89.01947784]
[108.87869263 103.48400116]
[120.16054535 114.57589722]
[116.28340149 128.95703125]
[120.47041321 143.36080933]
[124.65742493 157.76460266]
[128.84443665 172.16838074]
[133.03144836 186.57215881]
[144.31330872 197.66406250]
[140.43615723 212.04519653]
[149.83808899 200.35743713]
[164.83781433 200.26820374]
[174.37811279 211.84329224]
[171.42623901 226.54997253]
[158.15818787 233.54702759]
[144.35577393 227.67771912]
[147.45988464 242.35302734]
[150.56399536 257.02832031]
[166.10157776 263.71258545]
[174.50994873 278.19708252]
[172.64666748 294.67404175]
[161.44291687 306.67208862]
[164.76518250 321.29956055]
[168.08743286 335.92700195]
[171.40969849 350.55447388]
[175.38179016 365.01901245]
[179.99580383 379.29171753]
[184.60981750 393.56445312]
[189.22381592 407.83718872]
[193.83782959 422.10992432]
[208.78506470 420.35876465]
[223.78669739 421.55761719]
[238.26609802 425.66040039]
[251.66674805 432.50942993]
[263.47354126 441.84143066]
[273.23263550 453.29766846]
[280.56896973 466.43786621]
[285.20050049 480.75692749]
[286.94924927 495.70443726]
[285.74795532 510.70587158]
[281.64282227 525.18463135]
[274.79165649 538.58416748]
[265.45773315 550.38940430]
[253.99990845 560.14666748]
[240.85852051 567.48089600]
[226.53872681 572.11010742]
[211.59092712 573.85644531]
[196.58969116 572.65270996]
[182.11160278 568.54522705]
[168.71318054 561.69189453]
[156.90940857 552.35607910]
[147.15400696 540.89666748]
[139.82194519 527.75408936]
[135.19503784 513.43353271]
[133.45114136 498.48547363]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 185]
[6 184]
[7 183]
[8 182]
[9 181]
[16 180]
[17 179]
[18 178]
[19 177]
[24 173]
[25 172]
[26 171]
[27 165]
[29 163]
[30 162]
[31 161]
[32 160]
[33 159]
[35 157]
[38 156]
[39 155]
[40 154]
[41 153]
[42 152]
[44 151]
[45 150]
[46 149]
[47 147]
[48 146]
[49 145]
[60 134]
[61 133]
[62 132]
[63 131]
[88 130]
[89 129]
[90 128]
[91 127]
[92 122]
[93 121]
[96 119]
[97 118]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
