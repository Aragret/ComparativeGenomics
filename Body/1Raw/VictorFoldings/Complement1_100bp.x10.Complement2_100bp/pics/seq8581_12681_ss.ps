%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGAxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[124.09136200 309.03247070]
[117.55455780 322.58816528]
[108.49852753 334.60791016]
[97.27136993 344.62973022]
[84.30461884 352.26843262]
[70.09668732 357.23037720]
[55.19368362 359.32482910]
[40.16844559 358.47134399]
[25.59850311 354.70263672]
[12.04388428 348.16363525]
[0.02559294 339.10568237]
[-9.99442005 327.87689209]
[-17.63101196 314.90890503]
[-22.59065437 300.70016479]
[-24.68270874 285.79681396]
[-23.82676315 270.77172852]
[-20.05571747 256.20239258]
[-13.51452351 242.64883423]
[-4.45460415 230.63200378]
[6.77580070 220.61381531]
[19.74502373 212.97930908]
[33.95456314 208.02197266]
[48.85824203 205.93232727]
[63.88320160 206.79071045]
[59.57959747 192.53138733]
[70.52620697 181.10850525]
[74.28250885 166.58644104]
[78.03880310 152.06437683]
[81.79510498 137.54232788]
[85.55140686 123.02026367]
[89.30770874 108.49820709]
[79.49343872 119.84192657]
[67.67954254 129.08486938]
[54.30769730 135.88146973]
[39.87781525 139.97763062]
[24.92937279 141.22021484]
[10.02122498 139.56277466]
[-4.28927708 135.06727600]
[-17.46712303 127.90177917]
[-29.01964951 118.33417511]
[-38.51495743 106.72214508]
[-45.59805679 93.49983215]
[-50.00414276 79.16154480]
[-51.56848907 64.24333954]
[-50.23261261 49.30294418]
[-46.04645538 34.89891434]
[-39.16651917 21.56975555]
[-29.85001373 9.81378746]
[-18.44524765 0.07051766]
[-5.37859488 -7.29579639]
[8.86143875 -12.00975895]
[23.74247932 -13.89513493]
[38.70818710 -12.88143921]
[53.19905853 -9.00656796]
[66.67333984 -2.41538739]
[78.62729645 6.64568710]
[88.61400604 17.83790016]
[96.26010895 30.74282265]
[101.27976227 44.87799454]
[103.48529053 59.71496201]
[102.79425049 74.69903564]
[99.23448181 89.26426697]
[108.89528656 77.78956604]
[118.55609894 66.31486511]
[128.21690369 54.84016800]
[137.87771606 43.36546707]
[147.53852844 31.89076614]
[157.19934082 20.41606712]
[142.75064087 24.44532013]
[128.06536865 21.38870049]
[116.42426300 11.92906284]
[110.42797852 -1.82028520]
[111.41609955 -16.78770447]
[119.16786957 -29.62943459]
[131.95153809 -37.47660065]
[146.91117859 -38.57612610]
[160.70478821 -32.68237305]
[170.25083923 -21.11202240]
[173.41670227 -6.44991827]
[169.49511719 8.02840519]
[174.95835876 -6.81961346]
[189.66033936 -9.20729923]
[201.06280518 -18.95326424]
[212.46525574 -28.69923019]
[223.86772156 -38.44519424]
[214.85383606 -50.44100189]
[206.61097717 -62.97912598]
[199.17164612 -76.01008606]
[192.56521606 -89.48245239]
[186.81777954 -103.34305573]
[181.95198059 -117.53719330]
[177.98706055 -132.00885010]
[174.93864441 -146.70091248]
[172.81875610 -161.55538940]
[171.63578796 -176.51367188]
[171.39439392 -191.51670837]
[172.09553528 -206.50529480]
[173.73641968 -221.42028809]
[176.31060791 -236.20281982]
[179.80790710 -250.79454041]
[184.21453857 -265.13787842]
[189.51310730 -279.17620850]
[195.68267822 -292.85412598]
[202.69894409 -306.11767578]
[210.53417969 -318.91448975]
[219.15747070 -331.19406128]
[228.53480530 -342.90795898]
[238.62915039 -354.00991821]
[249.40068054 -364.45614624]
[260.80688477 -374.20541382]
[272.80273438 -383.21923828]
[285.34091187 -391.46203613]
[298.37188721 -398.90130615]
[311.84429932 -405.50765991]
[325.70492554 -411.25503540]
[339.89910889 -416.12075806]
[354.37075806 -420.08560181]
[369.06283569 -423.13394165]
[383.91732788 -425.25372314]
[398.87561035 -426.43661499]
[413.87866211 -426.67794800]
[428.86724854 -425.97674561]
[443.78222656 -424.33575439]
[458.56475830 -421.76150513]
[473.15646362 -418.26412964]
[487.49975586 -413.85742188]
[501.53805542 -408.55877686]
[515.21594238 -402.38912964]
[528.47949219 -395.37280273]
[541.27624512 -387.53750610]
[553.55578613 -378.91412354]
[565.26959229 -369.53674316]
[576.37152100 -359.44235229]
[586.81768799 -348.67077637]
[596.56689453 -337.26452637]
[605.58068848 -325.26861572]
[613.82342529 -312.73040771]
[621.26257324 -299.69937134]
[627.86889648 -286.22692871]
[633.61621094 -272.36627197]
[638.48181152 -258.17208862]
[642.44659424 -243.70037842]
[645.49487305 -229.00828552]
[647.61456299 -214.15377808]
[648.79742432 -199.19549561]
[649.03863525 -184.19245911]
[648.33734131 -169.20387268]
[646.69628906 -154.28889465]
[644.12194824 -139.50639343]
[640.62451172 -124.91471100]
[636.21771240 -110.57142639]
[630.91900635 -96.53314972]
[624.74926758 -82.85528564]
[617.73291016 -69.59181976]
[609.89752197 -56.79508209]
[601.27410889 -44.51558685]
[591.89666748 -32.80179596]
[581.80218506 -21.69993591]
[571.03057861 -11.25382042]
[559.62426758 -1.50467706]
[547.62829590 7.50901842]
[535.09002686 15.75169277]
[522.05895996 23.19081497]
[508.58651733 29.79702950]
[494.72579956 35.54425812]
[480.53158569 40.40982819]
[466.05987549 44.37452698]
[451.36776733 47.42271423]
[436.51324463 49.54235840]
[421.55496216 50.72509384]
[406.55191040 50.96625519]
[391.56332397 50.26488495]
[376.64837646 48.62376022]
[361.86587524 46.04934692]
[347.27423096 42.55181503]
[332.93096924 38.14495850]
[318.89270020 32.84617996]
[305.21487427 26.67638016]
[291.95144653 19.65991783]
[279.15475464 11.82447910]
[266.87530518 3.20098758]
[255.16156006 -6.17652225]
[244.05975342 -16.27104187]
[233.61369324 -27.04273415]
[222.21122742 -17.29676819]
[210.80876160 -7.55080175]
[199.40629578 2.19516373]
[194.75865173 16.34608650]
[179.24108887 19.43086815]
[168.67404175 30.07687569]
[159.01322937 41.55157852]
[149.35241699 53.02627563]
[139.69160461 64.50097656]
[130.03080750 75.97567749]
[120.36998749 87.45037842]
[110.70918274 98.92507935]
[103.82976532 112.25450897]
[100.07346344 126.77656555]
[96.31716919 141.29862976]
[92.56086731 155.82067871]
[88.80456543 170.34274292]
[85.04826355 184.86480713]
[89.08319092 200.16284180]
[78.40525818 210.54701233]
[91.96199799 217.08161926]
[103.98321533 226.13571167]
[114.00686646 237.36125183]
[121.64765930 250.32676697]
[126.61189270 264.53390503]
[128.70877075 279.43655396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 204]
[26 202]
[27 201]
[28 200]
[29 199]
[30 198]
[31 197]
[62 196]
[63 195]
[64 194]
[65 193]
[66 192]
[67 191]
[68 190]
[80 189]
[82 187]
[83 186]
[84 185]
[85 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
