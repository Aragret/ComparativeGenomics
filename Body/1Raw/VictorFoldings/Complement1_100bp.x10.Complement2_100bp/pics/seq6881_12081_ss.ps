%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[140.10107422 436.11605835]
[138.33091736 421.20535278]
[138.21185303 406.19036865]
[139.74530029 391.25344849]
[142.91264343 376.57589722]
[147.67546082 362.33584595]
[153.97592163 348.70620728]
[161.73753357 335.85238647]
[170.86608887 323.93045044]
[181.25077820 313.08508301]
[192.76551819 303.44799805]
[205.27056885 295.13613892]
[198.39115906 281.80670166]
[191.51174927 268.47726440]
[178.79907227 260.71600342]
[179.34553528 244.90422058]
[166.63285828 237.14294434]
[167.17930603 221.33117676]
[160.29989624 208.00175476]
[153.42048645 194.67231750]
[146.54107666 181.34289551]
[138.78468323 168.50395203]
[130.18612671 156.21311951]
[121.58755493 143.92227173]
[112.98899078 131.63143921]
[99.35337830 125.63816071]
[97.78246307 109.89513397]
[90.94866943 105.62057495]
[89.14897919 97.35668182]
[81.74426270 92.00803375]
[80.70313263 84.69107819]
[66.66342926 77.39743042]
[66.15051270 62.51165771]
[57.92170715 49.97025681]
[49.69289780 37.42885590]
[45.74771500 35.61516190]
[42.87391663 32.91223526]
[41.21948624 29.76608467]
[40.77237320 26.62495422]
[41.37358856 23.88694763]
[33.90584946 10.87799549]
[26.43810844 -2.13095689]
[18.97036743 -15.13990879]
[3.66867638 -16.91880035]
[-7.52070570 -27.24600410]
[-10.44887066 -42.00709534]
[-4.19844341 -55.50043488]
[-11.66618443 -68.50938416]
[-19.13392639 -81.51834106]
[-26.60166740 -94.52729034]
[-34.06940842 -107.53623962]
[-47.66551208 -101.17916107]
[-61.74588394 -95.98207855]
[-76.21176147 -91.98145294]
[-90.96166229 -89.20532990]
[-105.89214325 -87.67320251]
[-120.89846039 -87.39580536]
[-135.87536621 -88.37508392]
[-150.71778870 -90.60417938]
[-165.32164001 -94.06744385]
[-179.58445740 -98.74059296]
[-193.40621948 -104.59084320]
[-206.68997192 -111.57715607]
[-219.34252930 -119.65053558]
[-231.27513123 -128.75434875]
[-242.40409851 -138.82473755]
[-252.65136719 -149.79104614]
[-261.94503784 -161.57638550]
[-270.21994019 -174.09806824]
[-277.41802979 -187.26826477]
[-283.48880005 -200.99459839]
[-288.38967896 -215.18078613]
[-292.08630371 -229.72731018]
[-294.55273438 -244.53215027]
[-295.77166748 -259.49145508]
[-295.73455811 -274.50030518]
[-294.44165039 -289.45339966]
[-291.90200806 -304.24584961]
[-288.13348389 -318.77392578]
[-283.16247559 -332.93566895]
[-277.02389526 -346.63180542]
[-269.76074219 -359.76623535]
[-261.42401123 -372.24685669]
[-252.07214355 -383.98605347]
[-241.77076721 -394.90155029]
[-230.59211731 -404.91677856]
[-218.61462402 -413.96145630]
[-205.92228699 -421.97213745]
[-192.60414124 -428.89266968]
[-178.75361633 -434.67446899]
[-164.46784973 -439.27700806]
[-149.84704590 -442.66799927]
[-134.99377441 -444.82363892]
[-120.01221466 -445.72885132]
[-105.00745392 -445.37722778]
[-90.08473206 -443.77124023]
[-75.34873962 -440.92221069]
[-60.90283585 -436.85006714]
[-46.84834290 -431.58340454]
[-33.28384781 -425.15914917]
[-20.30449867 -417.62237549]
[-8.00133801 -409.02593994]
[3.53933597 -399.43011475]
[14.23657227 -388.90228271]
[24.01533699 -377.51620483]
[32.80703735 -365.35180664]
[40.55000305 -352.49441528]
[47.18992615 -339.03417969]
[52.68022919 -325.06552124]
[56.98239899 -310.68646240]
[60.06626511 -295.99780273]
[61.91018677 -281.10263062]
[62.50123596 -266.10537720]
[61.83526611 -251.11128235]
[59.91695023 -236.22549438]
[56.75973892 -221.55244446]
[52.38578415 -207.19503784]
[46.82575989 -193.25399780]
[40.11867142 -179.82710266]
[32.31156540 -167.00852966]
[23.45919991 -154.88821411]
[13.62367249 -143.55114746]
[2.87397170 -133.07687378]
[-8.71449947 -123.53884888]
[-21.06045532 -115.00398254]
[-13.59271431 -101.99503326]
[-6.12497330 -88.98607635]
[1.34276772 -75.97712708]
[8.81050873 -62.96817398]
[23.61449432 -61.56104660]
[34.88453674 -51.58857727]
[38.15970612 -36.71825027]
[31.97931862 -22.60765076]
[39.44705963 -9.59869766]
[46.91480255 3.41025424]
[54.38254166 16.41920662]
[62.23429871 29.20004845]
[70.46310425 41.74145126]
[78.69191742 54.28284836]
[92.14303589 60.67945480]
[93.24452972 76.46227264]
[101.56647491 88.94206238]
[110.07330322 101.29656982]
[124.32393646 108.16897583]
[125.27983093 123.03287506]
[133.87838745 135.32371521]
[142.47695923 147.61454773]
[151.07551575 159.90538025]
[151.97023010 144.93209839]
[160.73187256 132.75697327]
[174.64558411 127.15263367]
[189.40003967 129.85562134]
[200.42340088 140.02839661]
[204.29997253 154.51881409]
[199.82855225 168.83685303]
[188.39465332 178.54592896]
[173.54121399 180.63755798]
[159.87049866 174.46348572]
[166.74992371 187.79290771]
[173.62933350 201.12234497]
[180.50874329 214.45176697]
[193.71347046 223.16645813]
[192.67495728 238.02481079]
[205.87968445 246.73950195]
[204.84117126 261.59786987]
[211.72058105 274.92727661]
[218.59999084 288.25671387]
[232.61943054 282.87911987]
[247.14537048 279.07641602]
[262.00146484 276.89483643]
[277.00741577 276.36077881]
[291.98101807 277.48080444]
[306.74050903 280.24124146]
[321.10675049 284.60864258]
[334.90533447 290.52996826]
[347.96878052 297.93334961]
[360.13848877 306.72888184]
[371.26672363 316.80984497]
[381.21838379 328.05383301]
[389.87271118 340.32437134]
[397.12463379 353.47247314]
[402.88610840 367.33856201]
[407.08718872 381.75433350]
[409.67691040 396.54473877]
[410.62380981 411.53030396]
[409.91641235 426.52905273]
[407.56326294 441.35894775]
[403.59298706 455.83996582]
[398.05371094 469.79632568]
[391.01275635 483.05859375]
[382.55551147 495.46578979]
[372.78469849 506.86730957]
[361.81890869 517.12475586]
[349.79125977 526.11352539]
[336.84774780 533.72460938]
[323.14550781 539.86560059]
[308.85086060 544.46191406]
[294.13732910 547.45776367]
[279.18350220 548.81683350]
[264.17095947 548.52252197]
[249.28190613 546.57849121]
[234.69708252 543.00836182]
[220.59355164 537.85534668]
[207.14248657 531.18212891]
[194.50718689 523.06958008]
[182.84104919 513.61633301]
[172.28565979 502.93707275]
[162.96917725 491.16140747]
[155.00468445 478.43228149]
[148.48886108 464.90426636]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 167]
[13 166]
[14 165]
[16 163]
[18 161]
[19 160]
[20 159]
[21 158]
[22 148]
[23 147]
[24 146]
[25 145]
[27 143]
[29 142]
[31 141]
[33 139]
[34 138]
[35 137]
[40 136]
[41 135]
[42 134]
[43 133]
[47 129]
[48 128]
[49 127]
[50 126]
[51 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
