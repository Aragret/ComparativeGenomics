%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCCxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[55.30918503 1001.62402344]
[40.31856537 1001.04907227]
[25.35847855 999.93328857]
[10.44842625 998.27819824]
[-4.39215279 996.08581543]
[-19.14390755 993.35913086]
[-33.78760529 990.10162354]
[-48.30415344 986.31756592]
[-62.67462540 982.01190186]
[-76.88027954 977.19024658]
[-90.90260315 971.85888672]
[-104.72331238 966.02471924]
[-118.32437897 959.69543457]
[-131.68807983 952.87921143]
[-144.79698181 945.58496094]
[-157.63400269 937.82226562]
[-170.18240356 929.60113525]
[-182.42582703 920.93231201]
[-194.34829712 911.82720947]
[-205.93426514 902.29754639]
[-217.16865540 892.35583496]
[-228.03678894 882.01495361]
[-238.52452087 871.28851318]
[-248.61814880 860.19042969]
[-258.30453491 848.73516846]
[-267.57104492 836.93768311]
[-276.40560913 824.81329346]
[-284.79669189 812.37792969]
[-292.73333740 799.64770508]
[-300.20523071 786.63922119]
[-307.20260620 773.36950684]
[-313.71633911 759.85577393]
[-319.73797607 746.11572266]
[-325.25961304 732.16723633]
[-330.27410889 718.02850342]
[-334.77487183 703.71795654]
[-338.75604248 689.25421143]
[-342.21246338 674.65618896]
[-345.13958740 659.94287109]
[-347.53363037 645.13348389]
[-349.39144897 630.24737549]
[-350.71066284 615.30383301]
[-351.48947144 600.32238770]
[-351.72692871 585.32263184]
[-351.42269897 570.32409668]
[-350.57720947 555.34631348]
[-349.19149780 540.40881348]
[-347.26742554 525.53106689]
[-344.80749512 510.73248291]
[-341.81488037 496.03237915]
[-338.29351807 481.44985962]
[-334.24798584 467.00399780]
[-329.68356323 452.71362305]
[-324.60620117 438.59735107]
[-319.02252197 424.67355347]
[-312.93978882 410.96044922]
[-306.36596680 397.47586060]
[-299.30957031 384.23739624]
[-291.77984619 371.26232910]
[-283.78662109 358.56756592]
[-275.34027100 346.16964722]
[-266.45184326 334.08474731]
[-257.13290405 322.32861328]
[-247.39561462 310.91659546]
[-237.25267029 299.86352539]
[-226.71730042 289.18386841]
[-215.80323792 278.89151001]
[-204.52471924 268.99990845]
[-192.89642334 259.52191162]
[-180.93354797 250.46992493]
[-168.65165710 241.85572815]
[-156.06678772 233.69055176]
[-143.19534302 225.98503113]
[-130.05409241 218.74922180]
[-116.66018677 211.99256897]
[-103.03107452 205.72387695]
[-89.18453217 199.95130920]
[-75.13861847 194.68240356]
[-60.91163635 189.92402649]
[-46.52214050 185.68237305]
[-31.98889351 181.96298218]
[-17.33083916 178.77070618]
[-2.56709313 176.10969543]
[12.28309822 173.98342896]
[27.20037079 172.39468384]
[42.16527939 171.34552002]
[57.15830612 170.83731079]
[72.15990448 170.87071228]
[87.15052032 171.44569397]
[88.26617432 156.48722839]
[89.38182068 141.52877808]
[90.49746704 126.57032776]
[91.61312103 111.61187744]
[85.71572876 98.93463135]
[93.42842865 87.27247620]
[94.54407501 72.31402588]
[87.85461426 57.97660065]
[96.51709747 45.86005402]
[97.63274384 30.90160179]
[98.74839783 15.94314766]
[85.02996826 9.44935703]
[74.58659363 -1.56428075]
[68.83062744 -15.60826015]
[68.54053497 -30.78324890]
[73.75554657 -45.03695297]
[83.77037048 -56.44168091]
[97.23058319 -63.45502853]
[112.31580353 -65.12850952]
[126.98588562 -61.23578644]
[139.25680542 -52.30332565]
[147.46903992 -39.53916931]
[150.51193237 -24.66956329]
[147.97398376 -9.70549870]
[140.19841003 3.32925558]
[128.23678589 12.67185783]
[113.70684814 17.05879593]
[112.59120178 32.01725006]
[111.47554779 46.97570419]
[118.24481201 60.24319839]
[109.50253296 73.42967224]
[108.38687897 88.38812256]
[114.28427124 101.06536865]
[106.57157135 112.72752380]
[105.45592499 127.68597412]
[104.34027100 142.64442444]
[103.22462463 157.60289001]
[102.10897827 172.56134033]
[117.01903534 174.21644592]
[131.85961914 176.40876770]
[146.61137390 179.13543701]
[161.25508118 182.39289856]
[175.77163696 186.17692566]
[190.14212036 190.48255920]
[204.34777832 195.30419922]
[218.37011719 200.63554382]
[232.19084167 206.46966553]
[245.79191589 212.79895020]
[259.15563965 219.61512756]
[272.26455688 226.90933228]
[285.10159302 234.67204285]
[297.64999390 242.89314270]
[309.89343262 251.56190491]
[321.81591797 260.66702271]
[333.40191650 270.19665527]
[344.63632202 280.13836670]
[355.50448608 290.47918701]
[365.99221802 301.20559692]
[376.08587646 312.30368042]
[385.77230835 323.75891113]
[395.03881836 335.55639648]
[403.87341309 347.68072510]
[412.26449585 360.11611938]
[420.20117188 372.84631348]
[427.67309570 385.85476685]
[434.67050171 399.12448120]
[441.18429565 412.63818359]
[447.20593262 426.37823486]
[452.72760010 440.32672119]
[457.74212646 454.46545410]
[462.24291992 468.77600098]
[466.22412109 483.23974609]
[469.68057251 497.83773804]
[472.60772705 512.55102539]
[475.00180054 527.36041260]
[476.85964966 542.24658203]
[478.17886353 557.19006348]
[478.95773315 572.17150879]
[479.19522095 587.17126465]
[478.89102173 602.16979980]
[478.04553223 617.14758301]
[476.65988159 632.08508301]
[474.73583984 646.96282959]
[472.27590942 661.76141357]
[469.28335571 676.46154785]
[465.76202393 691.04406738]
[461.71652222 705.48992920]
[457.15209961 719.78033447]
[452.07476807 733.89660645]
[446.49111938 747.82043457]
[440.40841675 761.53356934]
[433.83459473 775.01812744]
[426.77825928 788.25659180]
[419.24856567 801.23168945]
[411.25534058 813.92645264]
[402.80902100 826.32440186]
[393.92059326 838.40936279]
[384.60168457 850.16546631]
[374.86441040 861.57751465]
[364.72149658 872.63061523]
[354.18615723 883.31030273]
[343.27212524 893.60266113]
[331.99362183 903.49426270]
[320.36535645 912.97229004]
[308.40246582 922.02429199]
[296.12060547 930.63854980]
[283.53576660 938.80377197]
[270.66433716 946.50927734]
[257.52310181 953.74511719]
[244.12919617 960.50177002]
[230.50009155 966.77050781]
[216.65356445 972.54309082]
[202.60766602 977.81207275]
[188.38069153 982.57043457]
[173.99121094 986.81213379]
[159.45796204 990.53155518]
[144.79991150 993.72387695]
[130.03617859 996.38488770]
[115.18598938 998.51116943]
[100.26871490 1000.09997559]
[85.30381012 1001.14916992]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[89 127]
[90 126]
[91 125]
[92 124]
[93 123]
[95 121]
[96 120]
[98 118]
[99 117]
[100 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
