%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxGGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[48.99920273 507.41891479]
[46.07260513 522.14532471]
[41.59723663 536.47723389]
[35.62380981 550.25219727]
[28.22001266 563.31420898]
[19.46973228 575.51519775]
[9.47211742 586.71697998]
[-1.65955377 596.79260254]
[-13.79914856 605.62786865]
[-26.80911636 613.12274170]
[-40.54204559 619.19226074]
[-54.84233093 623.76757812]
[-69.54793549 626.79699707]
[-84.49224091 628.24609375]
[-99.50591278 628.09844971]
[-114.41883087 626.35577393]
[-129.06202698 623.03784180]
[-143.26957703 618.18212891]
[-156.88050842 611.84381104]
[-169.74058533 604.09454346]
[-181.70410156 595.02227783]
[-192.63549805 584.72973633]
[-202.41091919 573.33349609]
[-210.91958618 560.96282959]
[-218.06510925 547.75775146]
[-223.76651001 533.86798096]
[-227.95919800 519.45086670]
[-230.59565735 504.66973877]
[-231.64602661 489.69210815]
[-231.09838867 474.68771362]
[-228.95896912 459.82650757]
[-225.25198364 445.27694702]
[-220.01945496 431.20382690]
[-213.32066345 417.76663208]
[-205.23150635 405.11758423]
[-195.84365845 393.40008545]
[-185.26347351 382.74682617]
[-173.61083984 373.27853394]
[-161.01779175 365.10253906]
[-147.62701416 358.31140137]
[-133.59024048 352.98214722]
[-119.06652069 349.17510986]
[-104.22041321 346.93344116]
[-89.22013092 346.28256226]
[-74.23564148 347.22982788]
[-59.43674088 349.76449585]
[-44.99110031 353.85784912]
[-31.06240463 359.46353149]
[-17.80847740 366.51797485]
[-9.39385891 354.10049438]
[-0.97924006 341.68298340]
[7.43537855 329.26550293]
[15.84999752 316.84799194]
[22.82844925 303.57015991]
[28.28380585 289.59735107]
[25.70514488 274.92767334]
[37.93158340 264.88650513]
[43.38694382 250.91371155]
[48.84230042 236.94091797]
[54.08901596 222.88844299]
[58.80915070 208.65046692]
[63.21015167 194.31060791]
[67.61114502 179.97076416]
[72.01214600 165.63092041]
[76.41314697 151.29107666]
[80.81414032 136.95121765]
[77.15154266 122.51396179]
[88.59729004 111.59125519]
[83.77055359 100.99201965]
[87.27043152 89.88381958]
[97.30129242 83.96578979]
[101.91529846 69.69305420]
[106.52930450 55.42031860]
[111.14331818 41.14758682]
[115.75732422 26.87485313]
[111.48516846 8.96311951]
[124.95806122 -2.28179288]
[129.35905457 -16.62163925]
[133.76005554 -30.96148682]
[137.73214722 -45.42601013]
[141.27182007 -60.00238800]
[144.81149292 -74.57875824]
[148.35116577 -89.15513611]
[151.89083862 -103.73151398]
[155.43051147 -118.30788422]
[158.97018433 -132.88426208]
[162.50985718 -147.46063232]
[166.04953003 -162.03701782]
[169.15364075 -176.71231079]
[171.81944275 -191.47354126]
[174.48522949 -206.23475647]
[176.15676880 -221.14132690]
[169.04339600 -235.27322388]
[177.34129333 -247.64230347]
[178.01107788 -262.62734985]
[178.56927490 -277.61697388]
[179.01588440 -292.61032104]
[179.46249390 -307.60366821]
[179.90910339 -322.59701538]
[166.03038025 -328.79779053]
[155.58467102 -339.84112549]
[150.16488647 -354.04306030]
[150.59748840 -369.23782349]
[156.81651306 -383.10836792]
[167.87359619 -393.53955078]
[182.08262634 -398.94064331]
[197.27682495 -398.48806763]
[211.13919067 -392.25079346]
[221.55580139 -381.17999268]
[226.93820190 -366.96386719]
[226.46562195 -351.77029419]
[220.21012878 -337.91613770]
[209.12564087 -327.51409912]
[194.90245056 -322.15039062]
[194.45584106 -307.15704346]
[194.00923157 -292.16369629]
[193.56263733 -277.17034912]
[196.50558472 -270.39089966]
[192.99610901 -261.95755005]
[192.32632446 -246.97251892]
[199.48760986 -233.91246033]
[191.14181519 -220.47154236]
[200.97381592 -231.79989624]
[215.33932495 -236.11639404]
[229.78703308 -232.08352661]
[239.84013367 -220.95092773]
[242.38360596 -206.16813660]
[236.62928772 -192.31578064]
[224.36024475 -183.68614197]
[209.37815857 -182.95323181]
[196.32539368 -190.34413147]
[189.24644470 -203.56895447]
[186.58065796 -188.80773926]
[183.91485596 -174.04652405]
[185.40057373 -171.66938782]
[186.03419495 -168.56050110]
[185.53228760 -165.04148865]
[183.73298645 -161.53050232]
[180.62590027 -158.49734497]
[177.08622742 -143.92095947]
[173.54655457 -129.34458923]
[170.00689697 -114.76821899]
[166.46722412 -100.19184113]
[162.92755127 -85.61546326]
[159.38787842 -71.03909302]
[155.84820557 -56.46271515]
[152.30853271 -41.88633728]
[153.65011597 -39.42498398]
[154.09756470 -36.28390121]
[153.38710022 -32.80099487]
[151.38200378 -29.40332985]
[148.09989929 -26.56048965]
[143.69889832 -12.22064209]
[139.29791260 2.11920524]
[144.68647766 12.94924736]
[141.13729858 24.93202782]
[130.03005981 31.48886108]
[125.41604614 45.76159668]
[120.80204010 60.03432846]
[116.18803406 74.30706024]
[111.57402039 88.57979584]
[115.50820160 104.88619232]
[102.93714142 115.99225616]
[106.28495026 131.45520020]
[95.15399170 141.35221863]
[90.75299072 155.69207764]
[86.35198975 170.03192139]
[81.95099640 184.37176514]
[77.54999542 198.71160889]
[73.14900208 213.05145264]
[74.31946564 218.13841248]
[73.50324249 222.70864868]
[71.22984314 226.09194946]
[68.21804810 227.92536926]
[69.03163147 234.48658752]
[66.75177765 239.69229126]
[62.81509781 242.39627075]
[57.35974121 256.36907959]
[51.90438461 270.34188843]
[54.09284210 286.01098633]
[42.25660324 295.05270386]
[36.80124664 309.02551270]
[48.45643234 299.58322144]
[62.71302414 294.91958618]
[77.69532013 295.64813232]
[91.43214417 301.67306519]
[102.11617279 312.20166016]
[108.34175110 325.84872437]
[109.28979492 340.81872559]
[104.83556366 355.14215088]
[95.56509399 366.93444824]
[82.69807434 374.64416504]
[67.92738342 377.25695801]
[53.19636154 374.42907715]
[40.44312286 366.53256226]
[31.34557915 354.60635376]
[27.10066795 340.21951294]
[28.26749229 325.26263428]
[19.85287476 337.68011475]
[11.43825531 350.09762573]
[3.02363682 362.51510620]
[-5.39098167 374.93261719]
[6.07321739 384.62817383]
[16.44187355 395.48742676]
[25.59750366 407.38726807]
[33.43636322 420.19290161]
[39.86964035 433.75924683]
[44.82442856 447.93252563]
[48.24459839 462.55218506]
[50.09138870 477.45257568]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 202]
[50 201]
[51 200]
[52 199]
[53 198]
[54 182]
[55 181]
[57 179]
[58 178]
[59 177]
[60 174]
[61 170]
[62 169]
[63 168]
[64 167]
[65 166]
[66 165]
[68 163]
[71 161]
[72 160]
[73 159]
[74 158]
[75 157]
[77 154]
[78 153]
[79 152]
[80 147]
[81 146]
[82 145]
[83 144]
[84 143]
[85 142]
[86 141]
[87 140]
[88 139]
[89 134]
[90 133]
[91 132]
[92 122]
[94 120]
[95 119]
[96 117]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
