%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGGxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[115.33935547 706.09606934]
[100.84764099 702.21142578]
[86.57511902 697.58593750]
[72.55963135 692.23181152]
[58.83835220 686.16333008]
[45.44766617 679.39648438]
[32.42308426 671.94927979]
[19.79914284 663.84149170]
[7.60931921 655.09460449]
[-4.11406040 645.73175049]
[-15.33990765 635.77783203]
[-26.03845406 625.25921631]
[-36.18132782 614.20379639]
[-45.74163437 602.64086914]
[-54.69401550 590.60113525]
[-63.01473999 578.11651611]
[-70.68173218 565.22015381]
[-77.67467499 551.94610596]
[-83.97500610 538.32971191]
[-89.56603241 524.40704346]
[-94.43292236 510.21505737]
[-98.56277466 495.79129028]
[-101.94462585 481.17407227]
[-104.56951904 466.40213013]
[-106.43048096 451.51464844]
[-107.52259064 436.55111694]
[-107.84294891 421.55117798]
[-107.39070129 406.55465698]
[-106.16705322 391.60128784]
[-104.17523956 376.73077393]
[-101.42055511 361.98248291]
[-97.91029358 347.39553833]
[-93.65377045 333.00866699]
[-88.66226959 318.85998535]
[-82.94903564 304.98703003]
[-76.52920532 291.42657471]
[-69.41981506 278.21456909]
[-61.63970566 265.38607788]
[-53.20952225 252.97511292]
[-44.15161133 241.01457214]
[-34.48999786 229.53617859]
[-24.25029945 218.57037354]
[-13.45967102 208.14624023]
[-2.14672709 198.29141235]
[9.65853119 189.03202820]
[21.92479897 180.39265442]
[34.61954880 172.39617920]
[47.70911407 165.06381226]
[61.15878677 158.41500854]
[74.93289948 152.46740723]
[88.99492645 147.23675537]
[103.30757141 142.73693848]
[99.55126953 128.21487427]
[95.79496765 113.69281006]
[86.13245392 103.58700562]
[89.68296814 90.06348419]
[85.92666626 75.54142761]
[82.17036438 61.01936722]
[78.41407013 46.49731064]
[63.62591171 49.05919647]
[48.67814636 50.40717697]
[33.67024231 50.53228378]
[18.70207977 49.43368149]
[3.87327147 47.11868286]
[-10.71749973 43.60269165]
[-24.97313309 38.90910721]
[-38.79875565 33.06916428]
[-52.10236359 26.12173080]
[-64.79541779 18.11303902]
[-76.79344940 9.09638596]
[-88.01661682 -0.86822277]
[-98.39022064 -11.71447277]
[-107.84523010 -23.37018394]
[-116.31871796 -35.75778580]
[-123.75430298 -48.79484558]
[-130.10249329 -62.39459610]
[-135.32106018 -76.46652985]
[-139.37524414 -90.91701508]
[-142.23809814 -105.64986420]
[-143.89053345 -120.56703949]
[-144.32159424 -135.56927490]
[-143.52836609 -150.55671692]
[-141.51617432 -165.42964172]
[-138.29837036 -180.08906555]
[-133.89640808 -194.43742371]
[-128.33953857 -208.37924194]
[-121.66477203 -221.82171631]
[-113.91651917 -234.67541504]
[-105.14634705 -246.85476685]
[-95.41262054 -258.27874756]
[-84.78011322 -268.87133789]
[-73.31958771 -278.56201172]
[-61.10731125 -287.28628540]
[-48.22455597 -294.98611450]
[-34.75705338 -301.61026001]
[-20.79443169 -307.11459351]
[-6.42960930 -311.46255493]
[8.24181461 -314.62518311]
[23.12220383 -316.58139038]
[38.11252975 -317.31820679]
[53.11303711 -316.83071899]
[68.02389526 -315.12213135]
[82.74586487 -312.20388794]
[97.18098450 -308.09533691]
[111.23319244 -302.82388306]
[124.80895996 -296.42456055]
[137.81794739 -288.93997192]
[150.17356873 -280.41992188]
[161.79362488 -270.92111206]
[172.60076904 -260.50677490]
[182.52307129 -249.24618530]
[191.49450684 -237.21430969]
[199.45538330 -224.49121094]
[206.35270691 -211.16156006]
[212.14057922 -197.31405640]
[216.78050232 -183.04086304]
[220.24156189 -168.43696594]
[222.50074768 -153.59954834]
[223.54301453 -138.62736511]
[223.36143494 -123.62003326]
[221.95721436 -108.67744446]
[219.33970642 -93.89904022]
[215.52630615 -79.38315582]
[210.54241943 -65.22640228]
[204.42120361 -51.52299118]
[197.20338440 -38.36412048]
[188.93701172 -25.83735657]
[179.67707825 -14.02606773]
[169.48522949 -3.00885582]
[158.42927551 7.14096069]
[146.58280945 16.35583496]
[134.02464294 24.57444191]
[120.83838654 31.74208832]
[107.11175537 37.81107330]
[92.93612671 42.74100876]
[96.69242859 57.26306915]
[100.44873047 71.78512573]
[104.20503235 86.30718994]
[113.86754608 96.41299438]
[110.31703186 109.93651581]
[114.07333374 124.45857239]
[117.82963562 138.98063660]
[132.52906799 135.97613525]
[147.36367798 133.73233032]
[162.29411316 132.25517273]
[177.28080750 131.54858398]
[192.28401184 131.61442566]
[207.26393127 132.45251465]
[222.18083191 134.06065369]
[236.99517822 136.43455505]
[251.66767883 139.56794739]
[266.15942383 143.45249939]
[280.43197632 148.07792664]
[294.44747925 153.43194580]
[308.16879272 159.50038147]
[321.55950928 166.26712036]
[334.58413696 173.71421814]
[347.20812988 181.82194519]
[359.39801025 190.56878662]
[371.12142944 199.93154907]
[382.34735107 209.88540649]
[393.04595947 220.40397644]
[403.18887329 231.45933533]
[412.74926758 243.02218628]
[421.70172119 255.06185913]
[430.02249146 267.54644775]
[437.68957520 280.44281006]
[444.68258667 293.71676636]
[450.98300171 307.33312988]
[456.57409668 321.25576782]
[461.44107056 335.44775391]
[465.57101440 349.87149048]
[468.95294189 364.48867798]
[471.57791138 379.26062012]
[473.43896484 394.14810181]
[474.53115845 409.11163330]
[474.85162354 424.11154175]
[474.39944458 439.10806274]
[473.17590332 454.06143188]
[471.18417358 468.93197632]
[468.42956543 483.68029785]
[464.91937256 498.26724243]
[460.66293335 512.65411377]
[455.67153931 526.80285645]
[449.95837402 540.67584229]
[443.53860474 554.23632812]
[436.42929077 567.44836426]
[428.64926147 580.27691650]
[420.21914673 592.68792725]
[411.16131592 604.64849854]
[401.49975586 616.12695312]
[391.26013184 627.09283447]
[380.46954346 637.51702881]
[369.15667725 647.37188721]
[357.35147095 656.63134766]
[345.08523560 665.27081299]
[332.39053345 673.26739502]
[319.30102539 680.59979248]
[305.85137939 687.24865723]
[292.07730103 693.19635010]
[278.01531982 698.42712402]
[263.70269775 702.92700195]
[249.17739868 706.68414307]
[234.47795105 709.68853760]
[219.64332581 711.93225098]
[204.71287537 713.40936279]
[189.72616577 714.11584473]
[174.72297668 714.04992676]
[159.74307251 713.21173096]
[144.82617188 711.60351562]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 142]
[53 141]
[54 140]
[56 138]
[57 137]
[58 136]
[59 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
