%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[26.01506042 733.65881348]
[11.27150249 729.54956055]
[0.13435522 719.05084229]
[-4.83714724 704.57525635]
[-2.50058961 689.44915771]
[6.60710382 677.14843750]
[20.39305115 670.49963379]
[20.83965874 655.50628662]
[21.28626442 640.51293945]
[21.50959206 625.51458740]
[21.50959206 610.51458740]
[19.28832436 607.77630615]
[18.28302193 603.82604980]
[19.04885674 599.24707031]
[21.85952950 594.84857178]
[22.52931404 579.86352539]
[23.19909859 564.87847900]
[23.86888504 549.89343262]
[13.65937424 539.10913086]
[14.12516403 523.90264893]
[25.50597000 513.26708984]
[26.17575645 498.28204346]
[26.84554100 483.29699707]
[27.51532555 468.31195068]
[17.14597321 479.15060425]
[2.40717912 481.93771362]
[-11.20384789 475.63375854]
[-18.61053276 462.58993530]
[-17.05036354 447.67129517]
[-7.10524750 436.44210815]
[7.51553488 433.09057617]
[21.35879326 438.86676025]
[29.26161766 451.61740112]
[31.70734406 436.81814575]
[34.15307236 422.01885986]
[28.59447479 408.20034790]
[38.47833252 395.84640503]
[40.92406082 381.04714966]
[43.36978531 366.24786377]
[45.81551361 351.44860840]
[39.02834320 341.43554688]
[40.94479752 329.08602905]
[51.07646561 321.10403442]
[53.74225998 306.34283447]
[56.40805435 291.58160400]
[49.77071381 281.46862793]
[51.87082672 269.14898682]
[62.12020874 261.31872559]
[65.00547791 246.59884644]
[67.89075470 231.87895203]
[70.77602386 217.15905762]
[73.66130066 202.43917847]
[67.08765411 186.16790771]
[79.30530548 172.39073181]
[81.97109985 157.62951660]
[84.63689423 142.86830139]
[87.30268860 128.10708618]
[74.88768005 117.90533447]
[69.28932190 102.84324646]
[72.02727509 87.00936890]
[82.35832977 74.70175171]
[97.47815704 69.26126099]
[99.92388153 54.46199036]
[98.23558044 45.48494339]
[102.51776886 39.46126938]
[105.18356323 24.70005226]
[107.84936523 9.93883610]
[110.51515961 -4.82238150]
[112.74027252 -19.65642548]
[114.52274323 -34.55014420]
[116.19428253 -49.45671463]
[117.75480652 -64.37532043]
[119.31533051 -79.29392242]
[113.05570984 -93.82416534]
[122.07510376 -105.67742157]
[123.63562775 -120.59603119]
[125.19615173 -135.51463318]
[123.06906128 -140.28144836]
[122.99095154 -144.92335510]
[124.57111359 -148.68075562]
[127.17400360 -151.05926514]
[129.39912415 -165.89331055]
[131.62423706 -180.72735596]
[133.84934998 -195.56138611]
[128.24479675 -210.35664368]
[137.78446960 -221.79534912]
[139.89909363 -236.64553833]
[141.90310669 -251.51106262]
[143.90711975 -266.37658691]
[145.91113281 -281.24212646]
[147.02677917 -296.20059204]
[147.25010681 -311.19891357]
[147.47343445 -326.19726562]
[147.69676208 -341.19558716]
[144.69546509 -349.82287598]
[148.03672791 -356.41513062]
[148.48333740 -371.40847778]
[148.92994690 -386.40182495]
[149.37654114 -401.39517212]
[135.49783325 -407.59594727]
[125.05212402 -418.63931274]
[119.63233185 -432.84121704]
[120.06493378 -448.03601074]
[126.28395844 -461.90655518]
[137.34104919 -472.33770752]
[151.55007935 -477.73883057]
[166.74427795 -477.28622437]
[180.60662842 -471.04898071]
[191.02323914 -459.97817993]
[196.40565491 -445.76205444]
[195.93307495 -430.56845093]
[189.67758179 -416.71432495]
[178.59309387 -406.31228638]
[164.36990356 -400.94857788]
[163.92329407 -385.95523071]
[163.47668457 -370.96188354]
[163.03007507 -355.96853638]
[162.69509888 -340.97225952]
[162.47177124 -325.97393799]
[162.24844360 -310.97558594]
[162.02511597 -295.97726440]
[172.06716919 -307.11984253]
[186.71644592 -310.34454346]
[200.50912476 -304.44863892]
[208.30088806 -291.63113403]
[207.18560791 -276.67263794]
[197.57922363 -265.15234375]
[183.06471252 -261.36697388]
[169.05561829 -266.72842407]
[160.77665710 -279.23809814]
[158.77264404 -264.37258911]
[156.76863098 -249.50704956]
[154.76461792 -234.64152527]
[156.98631287 -227.59271240]
[152.61851501 -219.57022095]
[158.38223267 -205.83601379]
[148.68339539 -193.33627319]
[146.45828247 -178.50222778]
[144.23316956 -163.66818237]
[142.00805664 -148.83415222]
[140.11476135 -133.95411682]
[138.55422974 -119.03550720]
[136.99371338 -104.11689758]
[143.36494446 -90.65373993]
[134.23393250 -77.73340607]
[132.67341614 -62.81479645]
[131.11288452 -47.89619446]
[133.54345703 -40.91664505]
[129.41645813 -32.76767731]
[127.63399506 -17.87395859]
[129.25856018 -15.58946705]
[130.07611084 -12.52381229]
[129.78454590 -8.98115730]
[128.19740295 -5.36929989]
[125.27637482 -2.15658569]
[122.61058044 12.60463142]
[119.94478607 27.36584854]
[117.27899170 42.12706757]
[114.72315216 56.90771866]
[112.27742767 71.70699310]
[123.24449921 79.72876740]
[129.70001221 91.68502045]
[130.39100647 105.25513458]
[125.18336487 117.80527496]
[115.08784485 126.89956665]
[102.06391144 130.77287292]
[99.39810944 145.53408813]
[96.73231506 160.29530334]
[94.06652069 175.05653381]
[100.76623535 186.07817078]
[98.24199677 198.31794739]
[88.38118744 205.32444763]
[85.49591827 220.04434204]
[82.61064148 234.76422119]
[79.72537231 249.48411560]
[76.84010315 264.20401001]
[83.21045685 281.48117065]
[71.16927338 294.24740601]
[68.50347900 309.00860596]
[65.83768463 323.76983643]
[72.46456909 340.95022583]
[60.61478424 353.89431763]
[58.16905594 368.69360352]
[55.72333145 383.49285889]
[53.27760315 398.29214478]
[58.66126633 413.16918945]
[48.95234299 424.46459961]
[46.50661469 439.26385498]
[44.06088638 454.06314087]
[42.50036621 468.98175049]
[41.83057785 483.96676636]
[41.16079330 498.95181274]
[40.49100876 513.93682861]
[50.87757492 525.54534912]
[49.98485184 540.73278809]
[38.85392380 550.56323242]
[38.18413925 565.54827881]
[37.51435471 580.53332520]
[36.84456635 595.51831055]
[36.50959015 610.51458740]
[36.50959015 625.51458740]
[39.47915268 631.42163086]
[39.07973099 637.09063721]
[36.27961349 640.95953369]
[35.83300781 655.95288086]
[35.38640213 670.94622803]
[48.75216675 678.40380859]
[57.11155701 691.22485352]
[58.54365158 706.46319580]
[52.71936035 720.61718750]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 206]
[8 205]
[9 204]
[10 201]
[11 200]
[15 199]
[16 198]
[17 197]
[18 196]
[21 193]
[22 192]
[23 191]
[24 190]
[33 189]
[34 188]
[35 187]
[37 185]
[38 184]
[39 183]
[40 182]
[43 180]
[44 179]
[45 178]
[48 176]
[49 175]
[50 174]
[51 173]
[52 172]
[54 169]
[55 168]
[56 167]
[57 166]
[62 160]
[63 159]
[65 158]
[66 157]
[67 156]
[68 155]
[69 150]
[70 149]
[71 147]
[72 146]
[73 145]
[75 143]
[76 142]
[77 141]
[81 140]
[82 139]
[83 138]
[84 137]
[86 135]
[87 133]
[88 132]
[89 131]
[90 130]
[91 121]
[92 120]
[93 119]
[94 118]
[96 117]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
