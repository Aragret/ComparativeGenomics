%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[63.27038193 506.81289673]
[50.75204849 498.48577881]
[39.77515411 488.21163940]
[30.63915634 476.27081299]
[23.59329224 462.98904419]
[18.82977867 448.72863770]
[16.47856522 433.87866211]
[16.60379982 418.84423828]
[19.20206070 404.03549194]
[24.20246887 389.85644531]
[31.46860695 376.69387817]
[40.80225372 364.90689087]
[51.94877243 354.81704712]
[64.60408783 346.69961548]
[78.42294312 340.77600098]
[93.02835846 337.20785522]
[91.91271210 322.24938965]
[90.79706573 307.29095459]
[89.68141937 292.33248901]
[79.03369904 278.38284302]
[87.16692352 261.86218262]
[85.82868958 246.92198181]
[84.49045563 231.98179626]
[83.15222168 217.04161072]
[76.71600342 230.59060669]
[65.63639832 240.70210266]
[51.55699539 245.87612915]
[36.56639862 245.34513855]
[22.88836479 239.18791199]
[12.55195522 228.31782532]
[7.09051180 214.34741211]
[7.31420755 199.34907532]
[13.18985844 185.54774475]
[23.84584808 174.99076843]
[37.70141983 169.24418640]
[52.70118713 169.16050720]
[66.62001801 174.75210571]
[77.39314270 185.18952942]
[83.42201233 198.92257690]
[85.20448303 184.02885437]
[86.98694611 169.13514709]
[88.43636322 154.20533752]
[89.55200958 139.24688721]
[90.66766357 124.28842926]
[79.92617035 116.55480194]
[74.37906647 104.53739166]
[75.46173859 91.34587097]
[82.89403534 80.39372253]
[94.75273895 74.51497650]
[96.09097290 59.57479095]
[89.61571503 45.13936234]
[98.45763397 33.15312958]
[99.79586792 18.21294403]
[101.13410187 3.27275896]
[102.47233582 -11.66742611]
[103.81056976 -26.60761070]
[105.14880371 -41.54779434]
[96.98875427 -28.96154785]
[85.37842560 -19.46417046]
[71.42443085 -13.96088886]
[56.45678711 -12.97624397]
[41.90210342 -16.60408401]
[29.14764595 -24.49862862]
[19.40908813 -35.90741730]
[13.61464596 -49.74304199]
[12.31660843 -64.68677521]
[15.63869762 -79.31427002]
[23.26427078 -92.23133850]
[34.46651077 -102.20680237]
[48.17768860 -108.28986359]
[63.09094238 -109.90071869]
[77.78483582 -106.88584137]
[90.85884094 -99.53258514]
[101.06682587 -88.54181671]
[107.43583679 -74.96110535]
[109.35877991 -60.08374023]
[114.60549927 -74.13621521]
[119.85221100 -88.18868256]
[125.09893036 -102.24115753]
[124.38312531 -108.81375885]
[126.74022675 -113.98493958]
[130.71673584 -116.63002014]
[136.37951660 -130.52005005]
[142.04231262 -144.41007996]
[147.70509338 -158.30009460]
[134.38699341 -165.22489929]
[121.76465607 -173.34901428]
[109.94577026 -182.60311890]
[99.03116608 -192.90827942]
[89.11398315 -204.17654419]
[80.27881622 -216.31181335]
[72.60105133 -229.21051025]
[66.14619446 -242.76261902]
[60.96931839 -256.85247803]
[57.11458969 -271.35992432]
[54.61489868 -286.16116333]
[53.49156570 -301.12988281]
[53.75418091 -316.13839722]
[55.40050125 -331.05865479]
[58.41648483 -345.76336670]
[62.77639389 -360.12707520]
[68.44303131 -374.02722168]
[75.36805725 -387.34518433]
[83.49237823 -399.96740723]
[92.74668121 -411.78613281]
[103.05201721 -422.70056152]
[114.32045746 -432.61755371]
[126.45586395 -441.45251465]
[139.35469055 -449.13006592]
[152.90690613 -455.58468628]
[166.99687195 -460.76135254]
[181.50436401 -464.61581421]
[196.30563354 -467.11526489]
[211.27438354 -468.23837280]
[226.28289795 -467.97549438]
[241.20312500 -466.32891846]
[255.90779114 -463.31268311]
[270.27142334 -458.95254517]
[284.17144775 -453.28567505]
[297.48931885 -446.36044312]
[310.11138916 -438.23590088]
[321.92996216 -428.98138428]
[332.84423828 -418.67587280]
[342.76104736 -407.40728760]
[351.59579468 -395.27172852]
[359.27313232 -382.37277222]
[365.72753906 -368.82043457]
[370.90396118 -354.73040771]
[374.75820923 -340.22283936]
[377.25738525 -325.42153931]
[378.38021851 -310.45275879]
[378.11712646 -295.44424438]
[376.47030640 -280.52404785]
[373.45382690 -265.81942749]
[369.09344482 -251.45587158]
[363.42633057 -237.55592346]
[356.50085449 -224.23817444]
[348.37612915 -211.61624146]
[339.12142944 -199.79782104]
[328.81573486 -188.88372803]
[317.54696655 -178.96710205]
[305.41125488 -170.13255310]
[292.51217651 -162.45542908]
[278.95974731 -156.00125122]
[264.86959839 -150.82507324]
[250.36198425 -146.97106934]
[235.56063843 -144.47212219]
[220.59184265 -143.34953308]
[205.58334351 -143.61289978]
[190.66316223 -145.25997925]
[175.95860291 -148.27668762]
[161.59512329 -152.63731384]
[155.93232727 -138.74728394]
[150.26954651 -124.85726166]
[144.60676575 -110.96723175]
[139.15139771 -96.99443817]
[133.90467834 -82.94196320]
[128.65797424 -68.88949585]
[123.41124725 -54.83702087]
[120.08898926 -40.20956039]
[118.75075531 -25.26937675]
[117.41252136 -10.32919216]
[116.07428741 4.61099339]
[114.73605347 19.55117798]
[113.39781952 34.49136353]
[119.96879578 47.85816956]
[111.03115845 60.91302490]
[109.69292450 75.85321045]
[122.13339233 86.32034302]
[125.93241882 102.12836456]
[119.60675812 117.10541534]
[105.62611389 125.40407562]
[104.51046753 140.36253357]
[103.39482117 155.32098389]
[105.66289520 160.02235413]
[105.87917328 164.65986633]
[104.41158295 168.46266174]
[101.88066101 170.91760254]
[100.09819794 185.81132507]
[98.31572723 200.70504761]
[98.09239960 215.70338440]
[99.43063354 230.64356995]
[100.76887512 245.58375549]
[102.10710907 260.52392578]
[111.48625183 269.37799072]
[112.29329681 281.84927368]
[104.63986969 291.21685791]
[105.75551605 306.17529297]
[106.87117004 321.13375854]
[107.98681641 336.09219360]
[122.95994568 337.45428467]
[137.50462341 341.26245117]
[151.22407532 347.41278076]
[163.74401855 355.73751831]
[174.72288513 366.00952148]
[183.86119080 377.94857788]
[190.90960693 391.22900391]
[195.67587280 405.48849487]
[198.02993774 420.33801270]
[197.90760803 435.37246704]
[195.31219482 450.18170166]
[190.31451416 464.36172485]
[183.05091858 477.52569580]
[173.71954346 489.31445312]
[162.57496643 499.40646362]
[149.92121887 507.52633667]
[136.10350037 513.45257568]
[121.49877167 517.02355957]
[106.50546265 518.14178467]
[91.53259277 516.77685547]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 190]
[17 189]
[18 188]
[19 187]
[21 184]
[22 183]
[23 182]
[24 181]
[39 180]
[40 179]
[41 178]
[42 174]
[43 173]
[44 172]
[49 168]
[50 167]
[52 165]
[53 164]
[54 163]
[55 162]
[56 161]
[57 160]
[76 159]
[77 158]
[78 157]
[79 156]
[82 155]
[83 154]
[84 153]
[85 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
