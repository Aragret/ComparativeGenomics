%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[97.16572571 591.16613770]
[95.16149139 606.39373779]
[85.79925537 618.56927490]
[71.59742737 624.41766357]
[56.37622833 622.36572266]
[44.23007584 612.96533203]
[38.42622757 598.74523926]
[40.52589035 583.53057861]
[49.96426392 571.41394043]
[64.20247650 565.65472412]
[66.20648956 550.78918457]
[68.21050262 535.92364502]
[70.21451569 521.05810547]
[68.08268738 516.78442383]
[68.61293030 511.12615967]
[72.50588989 505.78234863]
[74.95162201 490.98309326]
[77.39734650 476.18380737]
[79.84307098 461.38455200]
[81.84709167 446.51901245]
[83.40760803 431.60040283]
[84.96813202 416.68179321]
[86.41755676 401.75198364]
[87.75579071 386.81179810]
[89.09402466 371.87161255]
[77.76882172 359.43865967]
[78.96332550 342.32467651]
[92.42560577 331.15390015]
[93.54125214 316.19546509]
[94.65690613 301.23699951]
[95.43822479 286.25735474]
[95.88483429 271.26400757]
[96.33143616 256.27066040]
[96.44310760 241.27107239]
[96.21977997 226.27273560]
[95.99645233 211.27439880]
[95.77312469 196.27606201]
[87.31448364 187.62864685]
[87.00567627 175.13510132]
[95.55749512 165.47958374]
[95.55749512 150.47958374]
[95.55749512 135.47958374]
[94.77617645 120.49994659]
[93.21565247 105.58134460]
[91.01915741 103.46830750]
[89.54296112 100.50936127]
[89.10186005 96.96974945]
[89.90824890 93.22728729]
[92.03356934 89.73215485]
[91.36378479 74.74711609]
[83.01799011 61.30619431]
[90.17927551 48.24612808]
[89.50949097 33.26108932]
[88.83970642 18.27605057]
[88.16991425 3.29101229]
[86.49837494 -11.61556149]
[83.83258057 -26.37677956]
[81.16678619 -41.13799667]
[78.50099182 -55.89921188]
[75.83519745 -70.66043091]
[66.41497040 -58.98741150]
[51.51506805 -57.25739670]
[39.67082977 -66.46141815]
[37.66717529 -81.32699585]
[46.65188217 -93.33844757]
[61.47811127 -95.61507416]
[73.65221405 -86.85352325]
[61.80785751 -96.97028351]
[60.66352463 -112.14082336]
[70.38130951 -123.37026215]
[69.04307556 -138.31044006]
[67.70484161 -153.25062561]
[66.36660767 -168.19081116]
[54.04339218 -174.36570740]
[46.44081497 -185.73316956]
[45.45576477 -199.26458740]
[51.23887253 -211.41777039]
[62.18300247 -219.06420898]
[61.06735229 -234.02267456]
[59.95170593 -248.98112488]
[58.83605576 -263.93957520]
[45.80404282 -272.15374756]
[40.17345810 -286.30117798]
[43.90887070 -300.87893677]
[55.37473679 -310.34844971]
[54.25908661 -325.30691528]
[45.51680756 -338.49337769]
[52.28606796 -351.76089478]
[40.59364319 -362.05288696]
[39.67530823 -377.23876953]
[49.55920029 -388.32226562]
[48.44355392 -403.28073120]
[47.32790375 -418.23919678]
[46.21225739 -433.19763184]
[45.09660721 -448.15609741]
[30.56666565 -452.54302979]
[18.60505104 -461.88562012]
[10.82947350 -474.92037964]
[8.29151630 -489.88446045]
[11.33441639 -504.75405884]
[19.54664803 -517.51818848]
[31.81757355 -526.45068359]
[46.48764801 -530.34338379]
[61.57287216 -528.66992188]
[75.03308868 -521.65655518]
[85.04790497 -510.25183105]
[90.26291656 -495.99813843]
[89.97282410 -480.82315063]
[84.21686554 -466.77917480]
[73.77348328 -455.76553345]
[60.05506134 -449.27172852]
[61.17070770 -434.31329346]
[62.28635788 -419.35482788]
[63.40200806 -404.39639282]
[64.51765442 -389.43792725]
[75.93634033 -379.94323730]
[77.28085327 -364.78912354]
[67.24452209 -352.87652588]
[75.90699768 -340.75997925]
[69.21753693 -326.42257690]
[70.33319092 -311.46411133]
[83.07691956 -303.80020142]
[88.93348694 -289.93786621]
[85.46384430 -275.11169434]
[73.79450989 -265.05523682]
[74.91015625 -250.09677124]
[76.02581024 -235.13832092]
[77.14145660 -220.17985535]
[91.37236023 -211.99702454]
[97.98796844 -196.79191589]
[94.19940186 -180.47785950]
[81.30679321 -169.52905273]
[82.64502716 -154.58886719]
[83.98326111 -139.64868164]
[85.32149506 -124.70849609]
[96.88027191 -115.38485718]
[98.45025635 -100.25244904]
[88.59239960 -88.19175720]
[90.59641266 -73.32622528]
[93.26220703 -58.56501007]
[95.92800140 -43.80379105]
[98.59379578 -29.04257393]
[101.25959778 -14.28135681]
[108.33836365 -27.50599289]
[121.39105225 -34.89702225]
[136.37313843 -34.16424942]
[148.64227295 -25.53473663]
[154.39671326 -11.68243027]
[151.85339355 3.10038185]
[141.80038452 14.23308372]
[127.35272980 18.26608658]
[112.98718262 13.94972229]
[103.15495300 2.62122726]
[103.82474518 17.60626602]
[104.49452972 32.59130478]
[105.16431427 47.57634354]
[113.46219635 59.94543076]
[106.34882355 74.07733154]
[107.01860809 89.06237030]
[108.13425446 104.02082062]
[109.69477844 118.93942261]
[119.07202148 107.23184967]
[133.75572205 104.16768646]
[147.03268433 111.14781952]
[152.83285522 124.98104095]
[148.50448608 139.34297180]
[136.02644348 147.66755676]
[121.10352325 146.14888000]
[110.55749512 135.47958374]
[110.55749512 150.47958374]
[110.55749512 165.47958374]
[120.13218689 181.20875549]
[110.77146149 196.05273438]
[110.99478912 211.05107117]
[111.21811676 226.04940796]
[111.44144440 241.04774475]
[114.11991119 245.52803040]
[114.74906921 250.12776184]
[113.62660217 254.04631042]
[111.32479095 256.71725464]
[110.87818146 271.71063232]
[110.43157959 286.70397949]
[112.90731812 291.29937744]
[113.33045959 295.92260742]
[112.03413391 299.78713989]
[109.61535645 302.35266113]
[108.49971008 317.31109619]
[107.38406372 332.26956177]
[117.28977966 341.39596558]
[120.08971405 354.37173462]
[114.98069000 366.41250610]
[104.03421021 373.20986938]
[102.69596863 388.15005493]
[101.35773468 403.09024048]
[103.70905304 411.91683960]
[99.88674164 418.24234009]
[98.32621765 433.16091919]
[96.76569366 448.07952881]
[98.67384338 451.97991943]
[99.18970490 455.89123535]
[98.48079681 459.37445068]
[96.84002686 462.09005737]
[94.64234924 463.83026123]
[92.19661713 478.62954712]
[89.75089264 493.42880249]
[87.30516052 508.22808838]
[85.08004761 523.06213379]
[83.07603455 537.92767334]
[81.07202148 552.79315186]
[79.06800842 567.65869141]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 210]
[11 209]
[12 208]
[13 207]
[16 206]
[17 205]
[18 204]
[19 203]
[20 198]
[21 197]
[22 196]
[23 194]
[24 193]
[25 192]
[28 188]
[29 187]
[30 186]
[31 182]
[32 181]
[33 180]
[34 176]
[35 175]
[36 174]
[37 173]
[40 171]
[41 170]
[42 169]
[43 161]
[44 160]
[49 159]
[50 158]
[52 156]
[53 155]
[54 154]
[55 153]
[56 143]
[57 142]
[58 141]
[59 140]
[60 139]
[67 138]
[70 135]
[71 134]
[72 133]
[73 132]
[78 128]
[79 127]
[80 126]
[81 125]
[85 121]
[86 120]
[88 118]
[91 115]
[92 114]
[93 113]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
