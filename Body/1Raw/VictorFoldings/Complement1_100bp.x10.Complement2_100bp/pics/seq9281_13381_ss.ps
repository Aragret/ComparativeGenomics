%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[87.86512756 193.65283203]
[93.54376984 207.55644226]
[97.50506592 222.04318237]
[99.69126129 236.90177917]
[100.07045746 251.91555786]
[98.63714600 266.86557007]
[95.41220856 281.53381348]
[90.44268799 295.70635986]
[83.80104828 309.17654419]
[75.58414459 321.74795532]
[65.91180420 333.23721313]
[54.92507935 343.47680664]
[42.78419113 352.31738281]
[29.66618156 359.63006592]
[15.76235867 365.30819702]
[1.27547574 369.26895142]
[-13.58320427 371.45458984]
[-28.59699631 371.83322144]
[-43.54695892 370.39935303]
[-58.21507645 367.17385864]
[-72.38744354 362.20382690]
[-85.85738373 355.56167603]
[-98.42846680 347.34429932]
[-109.91736603 337.67153931]
[-120.15654755 326.68441772]
[-128.99668884 314.54321289]
[-136.30888367 301.42492676]
[-141.98648071 287.52087402]
[-145.94668579 273.03384399]
[-148.13177490 258.17507935]
[-148.50985718 243.16128540]
[-147.07540894 228.21138000]
[-143.84938049 213.54338074]
[-138.87879944 199.37120056]
[-132.23616028 185.90150452]
[-124.01831055 173.33073425]
[-114.34511566 161.84219360]
[-103.35762024 151.60342407]
[-91.21607208 142.76373291]
[-78.09751892 135.45204163]
[-64.19326782 129.77496338]
[-49.70609283 125.81528473]
[-34.84724808 123.63076019]
[-19.83342552 123.25324249]
[-4.88357162 124.68824005]
[9.78430271 127.91481781]
[23.95629692 132.88592529]
[37.42573929 139.52908325]
[49.99620819 147.74739075]
[59.65702057 136.27268982]
[61.93518829 121.55334473]
[76.74212646 115.97972870]
[86.40293884 104.50502777]
[89.04246521 90.77460480]
[102.12236023 85.83415985]
[111.78317261 74.35945892]
[121.44398499 62.88476181]
[131.10479736 51.41006088]
[140.76560974 39.93535995]
[150.42642212 28.46066093]
[160.08721924 16.98596191]
[169.74803162 5.51126099]
[179.40884399 -5.96343899]
[189.06965637 -17.43813896]
[175.32049561 -11.44143867]
[160.54414368 -8.86083794]
[145.57627869 -9.84228230]
[131.26342773 -14.33026600]
[118.41501617 -22.07097244]
[107.75771332 -32.62662888]
[99.89422607 -45.40025711]
[95.26927948 -59.66944885]
[94.14443207 -74.62721252]
[96.58330536 -89.42761230]
[102.44795990 -103.23361969]
[111.40673065 -115.26443481]
[122.95295715 -124.83965302]
[136.43362427 -131.41775513]
[151.08636475 -134.62670898]
[166.08247375 -134.28503418]
[180.57385254 -130.41206360]
[193.74095154 -123.22682953]
[204.83909607 -113.13568878]
[213.24063110 -100.70934296]
[218.47042847 -86.65056610]
[220.23269653 -71.75444794]
[218.42778015 -56.86343002]
[213.15776062 -42.81968307]
[204.71997070 -30.41663361]
[217.78414917 -37.78732300]
[230.84834290 -45.15801239]
[243.91252136 -52.52870178]
[256.97671509 -59.89939117]
[270.04089355 -67.27008057]
[283.10507202 -74.64076996]
[296.16925049 -82.01145935]
[309.23345947 -89.38214874]
[322.29763794 -96.75283813]
[315.88580322 -110.32067871]
[310.46972656 -124.31581879]
[306.07763672 -138.66528320]
[302.73242188 -153.29428101]
[300.45153809 -168.12651062]
[299.24685669 -183.08467102]
[299.12466431 -198.09075928]
[300.08560181 -213.06655884]
[302.12466431 -227.93397522]
[305.23123169 -242.61549377]
[309.38906860 -257.03457642]
[314.57653809 -271.11605835]
[320.76657104 -284.78649902]
[327.92687988 -297.97467041]
[336.02017212 -310.61175537]
[345.00424194 -322.63192749]
[354.83224487 -333.97247314]
[365.45294189 -344.57431030]
[376.81094360 -354.38211060]
[388.84707642 -363.34478760]
[401.49853516 -371.41561890]
[414.69940186 -378.55245972]
[428.38085938 -384.71817017]
[442.47152710 -389.88058472]
[456.89801025 -394.01278687]
[471.58502197 -397.09323120]
[486.45602417 -399.10583496]
[501.43350220 -400.04016113]
[516.43939209 -399.89126587]
[531.39538574 -398.66000366]
[546.22351074 -396.35272217]
[560.84655762 -392.98150635]
[575.18817139 -388.56390381]
[589.17364502 -383.12295532]
[602.73004150 -376.68701172]
[615.78674316 -369.28964233]
[628.27557373 -360.96942139]
[640.13153076 -351.76971436]
[651.29272461 -341.73846436]
[661.70098877 -330.92800903]
[671.30206299 -319.39471436]
[680.04583740 -307.19866943]
[687.88684082 -294.40347290]
[694.78411865 -281.07586670]
[700.70166016 -267.28527832]
[705.60876465 -253.10365295]
[709.47967529 -238.60491943]
[712.29437256 -223.86463928]
[714.03802490 -208.95970154]
[714.70166016 -193.96778870]
[714.28179932 -178.96707153]
[712.78057861 -164.03576660]
[710.20587158 -149.25169373]
[706.57104492 -134.69195557]
[701.89514160 -120.43245697]
[696.20245361 -106.54753113]
[689.52270508 -93.10957336]
[681.89068604 -80.18863678]
[673.34625244 -67.85210419]
[663.93389893 -56.16427231]
[653.70269775 -45.18608856]
[642.70605469 -34.97478485]
[631.00115967 -25.58360291]
[618.64916992 -17.06150055]
[605.71447754 -9.45291042]
[592.26446533 -2.79749870]
[578.36926270 2.87003493]
[564.10131836 7.52014208]
[549.53497314 11.12858009]
[534.74627686 13.67653465]
[519.81231689 15.15072155]
[504.81085205 15.54345703]
[489.82015991 14.85269165]
[474.91839600 13.08202744]
[460.18325806 10.24069595]
[445.69152832 6.34351063]
[431.51882935 1.41078997]
[417.73898315 -4.53174925]
[404.42385864 -11.45312405]
[391.64288330 -19.31725121]
[379.46267700 -28.08312798]
[367.94677734 -37.70505524]
[357.15518188 -48.13286591]
[347.14416504 -59.31219482]
[337.96594238 -71.18475342]
[329.66833496 -83.68865204]
[316.60412598 -76.31796265]
[303.53994751 -68.94727325]
[290.47576904 -61.57658386]
[277.41159058 -54.20589447]
[264.34741211 -46.83520508]
[251.28321838 -39.46451569]
[238.21902466 -32.09382629]
[225.15484619 -24.72313881]
[212.09065247 -17.35244751]
[200.54435730 -7.77732849]
[190.88354492 3.69737148]
[181.22273254 15.17207146]
[171.56192017 26.64677238]
[161.90110779 38.12147141]
[152.24031067 49.59617233]
[142.57949829 61.07087326]
[132.91868591 72.54557037]
[123.25787354 84.02027130]
[113.59706116 95.49497223]
[110.95753479 109.22539520]
[97.87763977 114.16584015]
[88.21682739 125.64054108]
[85.24765015 141.18063354]
[71.13172150 145.93350220]
[61.47090912 157.40820312]
[71.71091461 168.39454651]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 209]
[50 208]
[52 206]
[53 205]
[55 203]
[56 202]
[57 201]
[58 200]
[59 199]
[60 198]
[61 197]
[62 196]
[63 195]
[64 194]
[89 193]
[90 192]
[91 191]
[92 190]
[93 189]
[94 188]
[95 187]
[96 186]
[97 185]
[98 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
