%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[87.79731750 501.80218506]
[74.58760834 494.64089966]
[62.53155518 485.67248535]
[51.87461472 475.07952881]
[42.83374786 463.07772827]
[35.59301376 449.91137695]
[30.29982185 435.84857178]
[27.06194115 421.17556763]
[25.94528580 406.19110107]
[26.97258949 391.20028687]
[30.12294197 376.50823975]
[35.33219910 362.41409302]
[42.49431610 349.20483398]
[51.46347046 337.14932251]
[62.05707169 326.49304199]
[74.05944061 317.45294189]
[87.22623444 310.21301270]
[101.28938293 304.92068481]
[115.96257782 301.68371582]
[114.84693146 286.72525024]
[103.42824554 277.23056030]
[102.08373260 262.07644653]
[112.12006378 250.16386414]
[111.00441742 235.20541382]
[109.88877106 220.24696350]
[108.21722412 205.34039307]
[105.99211121 190.50634766]
[96.45243835 179.06764221]
[102.05699921 164.27239990]
[99.83187866 149.43835449]
[87.73863983 140.81922913]
[85.27074432 125.80710602]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[76.51686096 78.90550995]
[74.05278015 61.92778397]
[84.42189789 48.68693161]
[81.97616577 33.88766098]
[79.42033386 19.10700607]
[76.75453949 4.34578848]
[74.08874512 -10.41542912]
[60.27288437 -17.22925186]
[53.20102692 -30.71414185]
[55.39957809 -45.60139465]
[65.81806183 -56.21238708]
[63.15226746 -70.97360229]
[53.08557510 -83.17902374]
[58.43781662 -97.07876587]
[55.77202225 -111.83998108]
[53.10622787 -126.60119629]
[50.44042969 -141.36241150]
[47.77463531 -156.12362671]
[32.86274338 -154.44891357]
[17.87228775 -153.77395630]
[2.87022805 -154.10174561]
[-12.07643604 -155.43084717]
[-26.90094757 -157.75531006]
[-41.53709793 -161.06474304]
[-55.91951370 -165.34439087]
[-69.98396301 -170.57510376]
[-83.66763306 -176.73356628]
[-96.90940094 -183.79223633]
[-109.65013123 -191.71960449]
[-121.83291626 -200.48025513]
[-133.40335083 -210.03506470]
[-144.30973816 -220.34135437]
[-154.50340271 -231.35310364]
[-163.93878174 -243.02113342]
[-172.57376099 -255.29331970]
[-180.36975098 -268.11483765]
[-187.29194641 -281.42846680]
[-193.30943298 -295.17471313]
[-198.39532471 -309.29217529]
[-202.52691650 -323.71783447]
[-205.68576050 -338.38720703]
[-207.85772705 -353.23483276]
[-209.03312683 -368.19436646]
[-209.20671082 -383.19900513]
[-208.37771606 -398.18173218]
[-206.54981995 -413.07562256]
[-203.73120117 -427.81417847]
[-199.93444824 -442.33154297]
[-195.17651367 -456.56289673]
[-189.47866821 -470.44467163]
[-182.86631775 -483.91485596]
[-175.36903381 -496.91333008]
[-167.02029419 -509.38198853]
[-157.85736084 -521.26519775]
[-147.92118835 -532.50982666]
[-137.25614929 -543.06567383]
[-125.90986633 -552.88562012]
[-113.93301392 -561.92572021]
[-101.37908936 -570.14575195]
[-88.30416870 -577.50885010]
[-74.76663971 -583.98223877]
[-60.82696533 -589.53692627]
[-46.54740524 -594.14819336]
[-31.99173355 -597.79534912]
[-17.22496605 -600.46209717]
[-2.31305027 -602.13665771]
[12.67741108 -602.81140137]
[27.67946815 -602.48345947]
[42.62611389 -601.15417480]
[57.45059967 -598.82952881]
[72.08670807 -595.51989746]
[86.46907043 -591.24005127]
[100.53345490 -586.00915527]
[114.21704102 -579.85052490]
[127.45872498 -572.79168701]
[140.19935608 -564.86419678]
[152.38203430 -556.10339355]
[163.95233154 -546.54840088]
[174.85861206 -536.24200439]
[185.05212402 -525.23010254]
[194.48736572 -513.56195068]
[203.12217712 -501.28967285]
[210.91801453 -488.46804810]
[217.84004211 -475.15432739]
[223.85736084 -461.40802002]
[228.94306946 -447.29049683]
[233.07447815 -432.86477661]
[236.23313904 -418.19537354]
[238.40492249 -403.34771729]
[239.58013916 -388.38815308]
[239.75352478 -373.38351440]
[238.92433167 -358.40081787]
[237.09625244 -343.50692749]
[234.27745056 -328.76843262]
[230.48052979 -314.25109863]
[225.72241211 -300.01980591]
[220.02438354 -286.13812256]
[213.41188049 -272.66799927]
[205.91442871 -259.66964722]
[197.56552124 -247.20106506]
[188.40245056 -235.31799316]
[178.46614075 -224.07350159]
[167.80094910 -213.51777649]
[156.45454407 -203.69798279]
[144.47758484 -194.65798950]
[131.92355347 -186.43814087]
[118.84854126 -179.07518005]
[105.31092834 -172.60197449]
[91.37118530 -167.04745483]
[77.09156799 -162.43640137]
[62.53585434 -158.78942871]
[65.20165253 -144.02821350]
[67.86744690 -129.26699829]
[70.53324127 -114.50577545]
[73.19903564 -99.74456024]
[83.07505035 -88.59496307]
[77.91348267 -73.63940430]
[80.57927704 -58.87818527]
[94.05117035 -52.58166504]
[101.31812286 -39.40382767]
[99.40974426 -24.29715729]
[88.84996033 -13.08122444]
[91.51575470 1.67999303]
[94.18154907 16.44120979]
[98.46374512 22.46488190]
[96.77543640 31.44193268]
[99.22116852 46.24120331]
[110.64289856 52.20556259]
[116.63331604 63.83298492]
[114.80622864 76.98107147]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[121.65282440 120.34976196]
[123.69808960 135.42529297]
[114.66592407 147.21324158]
[116.89104462 162.04727173]
[126.58987427 174.54701233]
[120.82615662 188.28123474]
[123.05126953 203.11528015]
[133.93040466 192.78839111]
[148.80758667 194.70393372]
[156.71592712 207.44984436]
[151.82566833 221.63031006]
[137.74174500 226.79200745]
[124.84722137 219.13131714]
[125.96286774 234.08976746]
[127.07852173 249.04821777]
[138.77093506 259.34020996]
[139.68928528 274.52609253]
[129.80538940 285.60961914]
[130.92103577 300.56805420]
[145.91206360 301.59259033]
[160.60469055 304.74020386]
[174.69978333 309.94686890]
[187.91038513 317.10650635]
[199.96754456 326.07342529]
[210.62579346 336.66506958]
[219.66815186 348.66574097]
[226.91050720 361.83120728]
[232.20544434 375.89337158]
[235.44514465 390.56594849]
[236.56365967 405.55026245]
[235.53820801 420.54122925]
[232.38966370 435.23367310]
[227.18215942 449.32843018]
[220.02168274 462.53860474]
[211.05401611 474.59521484]
[200.46173096 485.25280762]
[188.46047974 494.29440308]
[175.29458618 501.53594971]
[161.23210144 506.83001709]
[146.55929565 510.06881714]
[131.57490540 511.18640137]
[116.58400726 510.16000366]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 187]
[20 186]
[23 183]
[24 182]
[25 181]
[26 175]
[27 174]
[29 172]
[30 171]
[33 168]
[35 166]
[38 162]
[39 161]
[40 159]
[41 158]
[42 157]
[46 153]
[47 152]
[49 150]
[50 149]
[51 148]
[52 147]
[53 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
