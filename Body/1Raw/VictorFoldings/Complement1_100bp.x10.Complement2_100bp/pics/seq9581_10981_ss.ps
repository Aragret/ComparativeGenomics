%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[99.76852417 740.84277344]
[84.95095825 738.48840332]
[70.27691650 735.36169434]
[55.78662491 731.47131348]
[41.51979828 726.82788086]
[27.51554298 721.44415283]
[13.81224155 715.33489990]
[0.44745573 708.51684570]
[-12.54218292 701.00860596]
[-25.12107086 692.83093262]
[-37.25473022 684.00604248]
[-48.90990067 674.55828857]
[-60.05464172 664.51342773]
[-70.65840149 653.89910889]
[-80.69211578 642.74438477]
[-90.12828827 631.07983398]
[-98.94104767 618.93737793]
[-107.10623932 606.35034180]
[-114.60148621 593.35321045]
[-121.40625000 579.98168945]
[-127.50186920 566.27227783]
[-132.87164307 552.26269531]
[-137.50083923 537.99121094]
[-141.37678528 523.49707031]
[-144.48886108 508.81991577]
[-146.82850647 494.00000000]
[-148.38935852 479.07797241]
[-149.16708374 464.09469604]
[-149.15959167 449.09124756]
[-148.36688232 434.10873413]
[-146.79113770 419.18826294]
[-144.43667603 404.37069702]
[-141.30995178 389.69665527]
[-137.41952515 375.20639038]
[-132.77606201 360.93957520]
[-127.39230347 346.93533325]
[-121.28298950 333.23205566]
[-114.46487427 319.86727905]
[-106.95664978 306.87765503]
[-98.77888489 294.29879761]
[-89.95399475 282.16516113]
[-80.50617981 270.51004028]
[-70.46132660 259.36532593]
[-59.84696579 248.76159668]
[-48.69219589 238.72790527]
[-37.02759171 229.29177856]
[-24.88512230 220.47904968]
[-12.29807186 212.31388855]
[0.69906181 204.81867981]
[14.07065296 198.01396179]
[27.78005028 191.91839600]
[41.78967667 186.54866028]
[56.06113815 181.91949463]
[70.55530548 178.04359436]
[85.23246765 174.93157959]
[100.05237579 172.59196472]
[98.49185944 157.67335510]
[96.93133545 142.75474548]
[95.37081146 127.83614349]
[93.81028748 112.91754150]
[85.75378418 101.49018860]
[91.27111053 88.64298248]
[89.71058655 73.72438049]
[86.82530975 59.00448608]
[82.63829803 44.60070419]
[78.45128632 30.19692230]
[74.26428223 15.79314041]
[70.07727051 1.38935828]
[65.89025879 -13.01442337]
[61.70324707 -27.41820526]
[57.51623535 -41.82198715]
[53.32922363 -56.22576904]
[38.48779297 -53.91054916]
[23.47214317 -53.51227570]
[8.52884769 -55.03748322]
[-6.09671164 -58.46112823]
[-20.16436958 -63.72698975]
[-33.44312286 -70.74860382]
[-45.71492386 -79.41065979]
[-56.77825546 -89.57092285]
[-66.45145416 -101.06256104]
[-74.57566833 -113.69685364]
[-81.01749420 -127.26634979]
[-85.67115021 -141.54821777]
[-88.46022797 -156.30793762]
[-89.33891296 -171.30314636]
[-88.29279327 -186.28759766]
[-85.33903503 -201.01525879]
[-80.52614594 -215.24424744]
[-73.93315125 -228.74095154]
[-65.66832733 -241.28372192]
[-55.86737823 -252.66658020]
[-44.69125366 -262.70263672]
[-32.32346725 -271.22708130]
[-18.96711349 -278.09994507]
[-4.84151554 -283.20834351]
[9.82137203 -286.46841431]
[24.78077126 -287.82662964]
[39.79103470 -287.26065063]
[54.60567856 -284.77981567]
[68.98143768 -280.42483521]
[82.68224335 -274.26721191]
[95.48312378 -266.40808105]
[107.17386627 -256.97650146]
[117.56250763 -246.12733459]
[126.47845459 -234.03874207]
[133.77529907 -220.90921021]
[139.33322144 -206.95436096]
[143.06094360 -192.40333557]
[144.89726257 -177.49507141]
[144.81202698 -162.47438049]
[142.80664062 -147.58792114]
[138.91401672 -133.08013916]
[133.19810486 -119.18925476]
[125.75273132 -106.14338684]
[116.70017242 -94.15674591]
[106.18907928 -83.42617035]
[94.39205170 -74.12786102]
[81.50280762 -66.41451263]
[67.73300171 -60.41278076]
[71.92001343 -46.00899887]
[76.10702515 -31.60521698]
[80.29403687 -17.20143509]
[84.48104858 -2.79765296]
[88.66806030 11.60612869]
[92.85507202 26.00991058]
[97.04208374 40.41369247]
[101.22909546 54.81747437]
[105.51620483 40.44316864]
[115.55136871 29.29437637]
[129.39694214 23.52375412]
[144.37956238 24.24551964]
[157.60633850 31.32030869]
[166.52336121 43.38209534]
[169.40890503 58.10193253]
[165.70582581 72.63764954]
[156.12910461 84.18263245]
[142.52789307 90.50772858]
[127.52833557 90.39164734]
[114.02663422 83.85681152]
[104.62918854 72.16385651]
[106.18971252 87.08245850]
[114.24621582 98.50981140]
[108.72888947 111.35701752]
[110.28941345 126.27561951]
[111.84993744 141.19422913]
[113.41046143 156.11283875]
[114.97098541 171.03143311]
[129.95425415 170.25357056]
[144.95771790 170.26092529]
[159.94021606 171.05349731]
[174.86071777 172.62910461]
[189.67829895 174.98342896]
[204.35235596 178.11003113]
[218.84266663 182.00032043]
[233.10952759 186.64364624]
[247.11381531 192.02728271]
[260.81713867 198.13647461]
[274.18197632 204.95446777]
[287.17166138 212.46258545]
[299.75061035 220.64022827]
[311.88430786 229.46501160]
[323.53955078 238.91271973]
[334.68432617 248.95747375]
[345.28817749 259.57174683]
[355.32196045 270.72640991]
[364.75817871 282.39093018]
[373.57101440 294.53332520]
[381.73629761 307.12030029]
[389.23162842 320.11737061]
[396.03646851 333.48889160]
[402.13217163 347.19824219]
[407.50201416 361.20782471]
[412.13128662 375.47924805]
[416.00732422 389.97335815]
[419.11947632 404.65051270]
[421.45922852 419.47039795]
[423.02017212 434.39242554]
[423.79800415 449.37570190]
[423.79058838 464.37915039]
[422.99798584 479.36166382]
[421.42233276 494.28216553]
[419.06793213 509.09973145]
[415.94131470 523.77380371]
[412.05096436 538.26409912]
[407.40759277 552.53094482]
[402.02392578 566.53521729]
[395.91467285 580.23852539]
[389.09664917 593.60333252]
[381.58850098 606.59295654]
[373.41082764 619.17187500]
[364.58599854 631.30560303]
[355.13824463 642.96075439]
[345.09347534 654.10552979]
[334.47915649 664.70935059]
[323.32446289 674.74310303]
[311.65991211 684.17932129]
[299.51748657 692.99206543]
[286.93048096 701.15734863]
[273.93341064 708.65258789]
[260.56185913 715.45739746]
[246.85249329 721.55310059]
[232.84289551 726.92291260]
[218.57147217 731.55212402]
[204.07731628 735.42810059]
[189.40019226 738.54022217]
[174.58029175 740.87994385]
[159.65824890 742.44079590]
[144.67495728 743.21862793]
[129.67150879 743.21118164]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 148]
[57 147]
[58 146]
[59 145]
[60 144]
[62 142]
[63 141]
[64 128]
[65 127]
[66 126]
[67 125]
[68 124]
[69 123]
[70 122]
[71 121]
[72 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
