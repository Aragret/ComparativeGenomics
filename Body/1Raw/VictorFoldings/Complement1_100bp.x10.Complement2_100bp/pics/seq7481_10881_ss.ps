%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[117.16019440 673.78607178]
[103.88501740 666.78930664]
[91.13024902 658.88360596]
[78.95802307 650.10736084]
[67.42765808 640.50347900]
[56.59531021 630.11859131]
[46.51376724 619.00341797]
[37.23214340 607.21209717]
[28.79565620 594.80200195]
[21.24540710 581.83361816]
[14.61818218 568.37017822]
[8.94626904 554.47723389]
[4.25729990 540.22241211]
[0.57411927 525.67529297]
[-2.08532810 510.90670776]
[-3.70808578 495.98855591]
[-4.28624773 480.99353027]
[-3.81699729 465.99472046]
[-2.30262041 451.06515503]
[0.24950473 436.27761841]
[3.82694435 421.70413208]
[8.41226959 407.41567993]
[13.98314095 393.48190308]
[20.51241684 379.97067261]
[27.96828842 366.94784546]
[36.31443024 354.47680664]
[45.51017761 342.61834717]
[55.51073456 331.43023682]
[66.26737976 320.96701050]
[77.72769928 311.27960205]
[89.83586121 302.41522217]
[102.53288269 294.41708374]
[115.75689697 287.32412720]
[129.44348145 281.17089844]
[143.52595520 275.98739624]
[139.33894348 261.58361816]
[135.15193176 247.17984009]
[130.96492004 232.77606201]
[126.77791595 218.37226868]
[122.59090424 203.96849060]
[118.40389252 189.56471252]
[103.90621948 186.14665222]
[92.99337769 175.86239624]
[88.66484070 161.40106201]
[92.17903137 146.61772156]
[102.68959045 135.50576782]
[98.50257874 121.10198975]
[94.31556702 106.69820404]
[91.77851105 105.00917053]
[89.79994965 102.35967255]
[88.73680878 98.95479584]
[88.86525726 95.12860870]
[90.33558655 91.31139374]
[87.01332855 76.68393707]
[83.49462891 91.26538849]
[77.23553467 104.89710236]
[68.47003174 117.06945038]
[57.52584457 127.32736206]
[44.81211472 135.28732300]
[30.80415916 140.65176392]
[16.02567673 143.22012329]
[1.02917171 142.89637756]
[-13.62470245 139.69264221]
[-27.38809967 133.72866821]
[-39.74646378 125.22744751]
[-50.23777008 114.50678253]
[-58.46979141 101.96749878]
[-64.13476562 88.07836151]
[-67.02091217 73.35864258]
[-67.02032471 58.35864258]
[-64.13301849 43.63914871]
[-58.46694946 29.75045967]
[-50.23394394 17.21181679]
[-39.74179459 6.49198294]
[-27.38276100 -2.00827074]
[-13.61889648 -7.97115660]
[1.03522956 -11.17374802]
[16.03176117 -11.49631405]
[30.81004143 -8.92679405]
[44.81757355 -3.56125331]
[57.53067780 4.39971495]
[68.47406006 14.65848351]
[77.23860168 26.83152008]
[83.49662781 40.46372986]
[87.01332855 55.03941727]
[90.33558655 40.41195679]
[93.65784454 25.78449631]
[96.98011017 11.15703678]
[100.30236816 -3.47042322]
[103.62462616 -18.09788322]
[106.94688416 -32.72534180]
[92.90032959 -38.05829239]
[79.73271179 -45.29430771]
[67.70034027 -54.29254532]
[57.03744125 -64.87785339]
[47.95156097 -76.84417725]
[40.61956406 -89.95859528]
[35.18416595 -103.96582794]
[31.75116920 -118.59322357]
[30.38739967 -133.55604553]
[31.11940193 -148.56306458]
[33.93292999 -163.32212830]
[38.77321243 -177.54597473]
[45.54603958 -190.95771790]
[54.11957169 -203.29631042]
[64.32691956 -214.32156372]
[75.96939850 -223.81886292]
[88.82038116 -231.60336304]
[102.62972260 -237.52351379]
[117.12862396 -241.46408081]
[132.03485107 -243.34837341]
[147.05825806 -243.13970947]
[161.90638733 -240.84213257]
[176.29025269 -236.50039673]
[189.92984009 -230.19898987]
[202.55966187 -222.06057739]
[213.93386841 -212.24357605]
[223.83106995 -200.93907166]
[232.05860901 -188.36712646]
[238.45631409 -174.77244568]
[242.89968872 -160.41966248]
[245.30220032 -145.58813477]
[245.61712646 -130.56658936]
[243.83830261 -115.64740753]
[240.00036621 -101.12100220]
[234.17803955 -87.27013397]
[226.48461914 -74.36441803]
[217.06990051 -62.65505600]
[206.11711121 -52.36998749]
[193.83947754 -43.70940781]
[180.47596741 -36.84189606]
[166.28671265 -31.90113449]
[151.54789734 -28.98329544]
[136.54644775 -28.14517212]
[121.57434845 -29.40308380]
[118.25209045 -14.77562428]
[114.92982483 -0.14816372]
[111.60756683 14.47929668]
[108.28530884 29.10675621]
[104.96305084 43.73421860]
[101.64079285 58.36167526]
[101.64079285 73.36167908]
[104.96305084 87.98913574]
[108.71935272 102.51119995]
[112.90635681 116.91497803]
[117.09336853 131.31875610]
[131.92292786 135.06463623]
[142.81452942 145.66038513]
[146.91291809 160.18861389]
[143.21380615 174.72039795]
[132.80767822 185.37770081]
[136.99468994 199.78147888]
[141.18170166 214.18525696]
[145.36871338 228.58905029]
[149.55572510 242.99282837]
[153.74273682 257.39660645]
[157.92974854 271.80038452]
[172.59648132 268.62683105]
[187.44886780 266.48410034]
[202.41455078 265.38265991]
[217.42060852 265.32785034]
[232.39392090 266.31994629]
[247.26156616 268.35409546]
[261.95111084 271.42044067]
[276.39096069 275.50399780]
[290.51077271 280.58489990]
[304.24176025 286.63836670]
[317.51705933 293.63491821]
[330.27194214 301.54046631]
[342.44427490 310.31649780]
[353.97479248 319.92022705]
[364.80728149 330.30493164]
[374.88897705 341.41998291]
[384.17077637 353.21118164]
[392.60745239 365.62115479]
[400.15786743 378.58941650]
[406.78527832 392.05279541]
[412.45739746 405.94564819]
[417.14657593 420.20034790]
[420.82995605 434.74743652]
[423.48962402 449.51599121]
[425.11260986 464.43414307]
[425.69097900 479.42913818]
[425.22192383 494.42797852]
[423.70776367 509.35754395]
[421.15585327 524.14514160]
[417.57864380 538.71868896]
[412.99349976 553.00714111]
[407.42285156 566.94104004]
[400.89376831 580.45233154]
[393.43807983 593.47528076]
[385.09210205 605.94647217]
[375.89651489 617.80505371]
[365.89611816 628.99328613]
[355.13964844 639.45666504]
[343.67947388 649.14422607]
[331.57141113 658.00878906]
[318.87451172 666.00714111]
[305.65060425 673.10028076]
[291.96411133 679.25366211]
[277.88171387 684.43737793]
[263.47201538 688.62609863]
[248.80522156 691.79949951]
[233.95280457 693.94195557]
[218.98710632 695.04321289]
[203.98104858 695.09783936]
[189.00773621 694.10552979]
[174.14012146 692.07110596]
[159.45063782 689.00457764]
[145.01084900 684.92083740]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 157]
[36 156]
[37 155]
[38 154]
[39 153]
[40 152]
[41 151]
[46 146]
[47 145]
[48 144]
[53 143]
[54 142]
[85 141]
[86 140]
[87 139]
[88 138]
[89 137]
[90 136]
[91 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
