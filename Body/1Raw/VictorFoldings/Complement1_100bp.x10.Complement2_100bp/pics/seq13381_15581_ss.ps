%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCCxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[81.22748566 524.52746582]
[69.31375885 515.40136719]
[58.13357925 505.39007568]
[47.75257492 494.55227661]
[38.23165512 482.95162964]
[29.62670135 470.65621948]
[21.98820686 457.73815918]
[15.36099815 444.27328491]
[9.78396797 430.34060669]
[5.28984404 416.02188110]
[1.90500081 401.40118408]
[-0.35069814 386.56423950]
[-1.46401536 371.59817505]
[-1.42841744 356.59078979]
[-0.24411331 341.63015747]
[2.08194709 326.80410767]
[5.53611326 312.19958496]
[10.09811497 297.90237427]
[15.74117947 283.99630737]
[22.43218994 270.56301880]
[30.13188362 257.68133545]
[38.79507065 245.42687988]
[48.37091446 233.87153625]
[58.80321884 223.08312988]
[70.03076172 213.12496948]
[81.98765564 204.05548096]
[94.60372925 195.92791748]
[107.80495453 188.78994751]
[121.51384735 182.68348694]
[116.47692871 168.55445862]
[111.44001770 154.42543030]
[106.40309906 140.29638672]
[101.36618042 126.16736603]
[96.32926178 112.03833771]
[90.97808075 98.02531433]
[85.31529236 84.13528442]
[79.65250397 70.24525452]
[73.98972321 56.35523224]
[68.32693481 42.46520615]
[67.26808929 57.42778778]
[62.95021439 71.79288483]
[55.58399200 84.85958862]
[45.52883530 95.99034882]
[33.27535629 104.64206696]
[19.42143250 110.39261627]
[4.64302540 112.96140289]
[-10.33879375 112.22309875]
[-24.79302788 108.21372223]
[-38.01442337 101.12889862]
[-49.35787964 91.31431580]
[-58.26992416 79.24885559]
[-64.31571960 65.52120209]
[-67.20027161 50.80117035]
[-66.78284454 35.80698013]
[-63.08380508 21.27023125]
[-56.28363419 7.90020227]
[-46.71412659 -3.65075135]
[-34.84220123 -12.81903362]
[-21.24711800 -19.15730476]
[-6.59220743 -22.35630417]
[8.40748310 -22.25994873]
[23.02008629 -18.87293625]
[36.53261948 -12.36052990]
[48.28577805 -3.04048181]
[57.70609665 8.63246059]
[64.33168793 22.08252716]
[64.33168793 7.08252668]
[64.33168793 -7.91747332]
[64.33168793 -22.91747284]
[64.33168793 -37.91747284]
[64.33168793 -52.91747284]
[49.38187027 -54.26253510]
[34.61280823 -56.94228363]
[20.14341736 -60.93515015]
[6.09019709 -66.20897675]
[-7.43370008 -72.72130585]
[-20.31938744 -80.41970062]
[-32.46311188 -89.24217987]
[-43.76710129 -99.11771393]
[-54.14033890 -109.96677399]
[-63.49930573 -121.70201874]
[-71.76864624 -134.22895813]
[-78.88177490 -147.44674683]
[-84.78142548 -161.24893188]
[-89.42009735 -175.52439880]
[-92.76043701 -190.15820312]
[-94.77555084 -205.03253174]
[-95.44921875 -220.02760315]
[-94.77600861 -235.02270508]
[-92.76134491 -249.89709473]
[-89.42145538 -264.53100586]
[-84.78321838 -278.80661011]
[-78.88399506 -292.60897827]
[-71.77126312 -305.82696533]
[-63.50230789 -318.35418701]
[-54.14369965 -330.08969116]
[-43.77079391 -340.93908691]
[-32.46710587 -350.81497192]
[-20.32365036 -359.63781738]
[-7.43819809 -367.33660889]
[6.08550072 -373.84933472]
[20.13855934 -379.12359619]
[34.60783005 -383.11691284]
[49.37680817 -385.79711914]
[64.32658386 -387.14263916]
[79.33679199 -387.14263916]
[94.28656769 -385.79711914]
[109.05554962 -383.11691284]
[123.52481842 -379.12359619]
[137.57788086 -373.84933472]
[151.10157776 -367.33660889]
[163.98703003 -359.63781738]
[176.13047791 -350.81497192]
[187.43417358 -340.93908691]
[197.80708313 -330.08969116]
[207.16567993 -318.35418701]
[215.43464661 -305.82696533]
[222.54736328 -292.60897827]
[228.44659424 -278.80661011]
[233.08482361 -264.53100586]
[236.42472839 -249.89709473]
[238.43939209 -235.02270508]
[239.11259460 -220.02760315]
[238.43893433 -205.03253174]
[236.42381287 -190.15820312]
[233.08346558 -175.52439880]
[228.44480896 -161.24893188]
[222.54515076 -147.44674683]
[215.43202209 -134.22895813]
[207.16267395 -121.70201874]
[197.80371094 -109.96677399]
[187.43048096 -99.11771393]
[176.12649536 -89.24217987]
[163.98275757 -80.41970062]
[151.09707642 -72.72130585]
[137.57318115 -66.20897675]
[123.51995850 -60.93515015]
[109.05056763 -56.94228363]
[94.28150177 -54.26253510]
[79.33168793 -52.91747284]
[79.33168793 -37.91747284]
[79.33168793 -22.91747284]
[79.33168793 -7.91747332]
[79.33168793 7.08252668]
[79.33168793 22.08252716]
[82.21695709 36.80241776]
[87.87974548 50.69244385]
[93.54253387 64.58247375]
[99.20532227 78.47249603]
[104.86810303 92.36252594]
[108.17488098 94.34687042]
[110.59093475 97.77915192]
[111.48920441 102.22888184]
[110.45829773 107.00141907]
[115.49520874 121.13044739]
[120.53212738 135.25947571]
[125.56904602 149.38850403]
[130.60595703 163.51753235]
[135.64288330 177.64656067]
[150.12310791 173.70378113]
[164.86267090 170.88101196]
[179.77507019 169.19485474]
[194.77278137 168.65516663]
[209.76780701 169.26513672]
[224.67213440 171.02117920]
[239.39831543 173.91300964]
[253.85990906 177.92361450]
[267.97204590 183.02949524]
[281.65194702 189.20066833]
[294.81927490 196.40093994]
[307.39682007 204.58802795]
[319.31072998 213.71389771]
[330.49108887 223.72500610]
[340.87231445 234.56259155]
[350.39343262 246.16304016]
[358.99862671 258.45831299]
[366.63735962 271.37622070]
[373.26483154 284.84097290]
[378.84213257 298.77352905]
[383.33651733 313.09216309]
[386.72164917 327.71282959]
[388.97763062 342.54971313]
[390.09121704 357.51577759]
[390.05590820 372.52316284]
[388.87188721 387.48379517]
[386.54611206 402.30990601]
[383.09222412 416.91445923]
[378.53048706 431.21179199]
[372.88769531 445.11795044]
[366.19692993 458.55136108]
[358.49749756 471.43319702]
[349.83453369 483.68780518]
[340.25891113 495.24334717]
[329.82681274 506.03195190]
[318.59945679 515.99035645]
[306.64273071 525.06005859]
[294.02679443 533.18786621]
[280.82571411 540.32604980]
[267.11694336 546.43280029]
[252.98092651 551.47216797]
[238.50061035 555.41473389]
[223.76100159 558.23718262]
[208.84857178 559.92309570]
[193.85084534 560.46246338]
[178.85583496 559.85223389]
[163.95153809 558.09588623]
[149.22541809 555.20379639]
[134.76390076 551.19293213]
[120.65184784 546.08673096]
[106.97207642 539.91534424]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 159]
[30 158]
[31 157]
[32 156]
[33 155]
[34 154]
[35 150]
[36 149]
[37 148]
[38 147]
[39 146]
[66 145]
[67 144]
[68 143]
[69 142]
[70 141]
[71 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
