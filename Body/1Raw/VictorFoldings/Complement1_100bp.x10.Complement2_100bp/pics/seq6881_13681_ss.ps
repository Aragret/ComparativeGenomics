%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[102.55384064 706.18206787]
[101.91148376 691.12048340]
[104.89295197 676.34301758]
[111.32490540 662.70874023]
[120.83340454 651.01031494]
[132.86563110 641.92797852]
[146.72204590 635.98968506]
[144.27630615 621.19042969]
[141.83058167 606.39117432]
[132.12165833 595.09576416]
[137.50532532 580.21868896]
[135.05960083 565.41943359]
[132.61387634 550.62017822]
[120.17442322 545.77221680]
[111.68675232 535.32696533]
[109.45086670 521.94525146]
[114.15625763 509.10479736]
[124.67430878 500.19628906]
[122.44918823 485.36224365]
[120.22407532 470.52819824]
[117.99895477 455.69415283]
[115.77384186 440.86010742]
[113.54872131 426.02606201]
[110.30870056 422.51730347]
[109.23845673 416.93594360]
[111.48503113 410.71789551]
[109.70256805 395.82415771]
[107.92010498 380.93045044]
[106.13763428 366.03674316]
[103.00351715 362.43307495]
[102.09992981 356.82232666]
[104.53064728 350.67388916]
[103.19241333 335.73370361]
[101.85417938 320.79351807]
[100.51594543 305.85333252]
[90.38349915 300.60931396]
[83.97437286 291.02606201]
[82.97696686 279.42007446]
[87.75431824 268.66470337]
[97.22531891 261.47882080]
[96.33250427 246.50543213]
[95.43968964 231.53202820]
[94.54687500 216.55860901]
[93.31990051 201.60888672]
[91.75937653 186.69027710]
[90.19885254 171.77166748]
[88.63832855 156.85307312]
[87.07780457 141.93446350]
[81.67259979 155.92674255]
[72.59004211 167.86437988]
[60.54642487 176.80592346]
[46.49155426 182.04621887]
[31.53385925 183.17196655]
[16.85296249 180.09442139]
[3.60666490 173.05627441]
[-7.16037846 162.61257935]
[-14.59903240 149.58697510]
[-18.12265396 135.00671387]
[-17.45335579 120.02164459]
[-12.64392090 105.81357574]
[-4.07364225 93.50299835]
[7.58159304 84.06077576]
[21.40260506 78.23157501]
[36.29940796 76.47509003]
[51.09718323 78.92986298]
[64.62891388 85.40229034]
[75.82742310 95.38193512]
[83.80956268 108.08175659]
[87.94630432 122.50363159]
[90.83157349 107.78373718]
[93.49736786 93.02252197]
[95.94309998 78.22325134]
[98.38882446 63.42398071]
[100.83455658 48.62471008]
[103.17004395 33.80764008]
[105.06333160 18.92760468]
[106.62385559 4.00900078]
[108.18437958 -10.90960407]
[105.96474457 -19.77024841]
[109.88080597 -26.03812027]
[111.66327667 -40.93183899]
[105.62068176 -55.55366135]
[114.81555939 -67.27132416]
[108.77297211 -81.89314270]
[117.96784210 -93.61080933]
[119.75030518 -108.50452423]
[121.53277588 -123.39823914]
[123.31523895 -138.29196167]
[125.09770203 -153.18566895]
[126.88017273 -168.07939148]
[127.88442993 -183.04573059]
[128.10775757 -198.04406738]
[125.10646820 -206.67135620]
[128.44772339 -213.26361084]
[128.89433289 -228.25695801]
[129.34092712 -243.25030518]
[129.78753662 -258.24365234]
[130.23414612 -273.23699951]
[130.68075562 -288.23034668]
[116.80203247 -294.43112183]
[106.35633087 -305.47448730]
[100.93653870 -319.67639160]
[101.36914062 -334.87118530]
[107.58816528 -348.74172974]
[118.64525604 -359.17291260]
[132.85427856 -364.57400513]
[148.04847717 -364.12139893]
[161.91084290 -357.88415527]
[172.32745361 -346.81335449]
[177.70985413 -332.59722900]
[177.23727417 -317.40362549]
[170.98178101 -303.54949951]
[159.89729309 -293.14746094]
[145.67410278 -287.78375244]
[145.22749329 -272.79040527]
[144.78088379 -257.79705811]
[144.33428955 -242.80371094]
[143.88768005 -227.81034851]
[143.44107056 -212.81700134]
[143.10609436 -197.82073975]
[142.88276672 -182.82240295]
[153.58479309 -193.33271790]
[168.52856445 -194.63029480]
[180.88198853 -186.12190247]
[184.99725342 -171.69746399]
[178.99291992 -157.95162964]
[165.61407471 -151.16882324]
[150.97734070 -154.45004272]
[141.77389526 -166.29692078]
[139.99142456 -151.40321350]
[138.20895386 -136.50949097]
[136.42649841 -121.61577606]
[134.64402771 -106.72205353]
[132.86155701 -91.82833862]
[139.03164673 -78.27181244]
[129.70927429 -65.48885345]
[135.87936401 -51.93233109]
[126.55699158 -39.14937210]
[124.77452087 -24.25565529]
[123.10298157 -9.34908104]
[121.54245758 5.56952381]
[119.98194122 20.48812866]
[121.90627289 23.44266319]
[122.49515533 27.47605705]
[121.25711060 31.95048904]
[118.00408173 36.03275681]
[120.12058258 43.11387634]
[115.63382721 51.07043457]
[113.18809509 65.86970520]
[110.74237061 80.66897583]
[108.29663849 95.46824646]
[110.30662537 100.31324005]
[109.45897675 105.93949890]
[105.55146790 110.66901398]
[102.66619110 125.38890076]
[101.99640656 140.37394714]
[103.55693054 155.29254150]
[105.11745453 170.21115112]
[106.67797852 185.12976074]
[108.23850250 200.04835510]
[111.30599976 204.27182007]
[112.34301758 208.79705811]
[111.57462311 212.80014038]
[109.52027893 215.66580200]
[110.41309357 230.63920593]
[111.30590820 245.61260986]
[112.19872284 260.58602905]
[126.83794403 272.61129761]
[128.01835632 291.19946289]
[115.45613098 304.51510620]
[116.79436493 319.45529175]
[118.13259888 334.39547729]
[119.47083282 349.33566284]
[121.03135681 364.25427246]
[122.81381989 379.14797974]
[124.59628296 394.04168701]
[126.37875366 408.93542480]
[128.38276672 423.80093384]
[130.60787964 438.63497925]
[132.83299255 453.46902466]
[135.05812073 468.30307007]
[137.28323364 483.13711548]
[139.50834656 497.97116089]
[154.62054443 505.56838989]
[162.15187073 520.52770996]
[159.31117249 536.86450195]
[147.41314697 548.17443848]
[149.85887146 562.97369385]
[152.30459595 577.77301025]
[162.18844604 590.12695312]
[156.62985229 603.94543457]
[159.07557678 618.74468994]
[161.52131653 633.54400635]
[176.55152893 634.70843506]
[190.86608887 639.43676758]
[203.63278198 647.45391846]
[214.10934448 658.29388428]
[221.68670654 671.32641602]
[225.92430115 685.79382324]
[226.57579041 700.85504150]
[223.60328674 715.63433838]
[217.17959595 729.27246094]
[207.67819214 740.97662354]
[195.65148926 750.06628418]
[181.79867554 756.01293945]
[166.92515564 758.47094727]
[151.89564514 757.29736328]
[137.58393860 752.56042480]
[124.82212067 744.53546143]
[114.35212708 733.68914795]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 193]
[8 192]
[9 191]
[11 189]
[12 188]
[13 187]
[18 183]
[19 182]
[20 181]
[21 180]
[22 179]
[23 178]
[26 177]
[27 176]
[28 175]
[29 174]
[32 173]
[33 172]
[34 171]
[35 170]
[40 167]
[41 166]
[42 165]
[43 164]
[44 160]
[45 159]
[46 158]
[47 157]
[48 156]
[69 155]
[70 154]
[71 151]
[72 150]
[73 149]
[74 148]
[75 146]
[76 142]
[77 141]
[78 140]
[80 139]
[81 138]
[83 136]
[85 134]
[86 133]
[87 132]
[88 131]
[89 130]
[90 129]
[91 121]
[92 120]
[94 119]
[95 118]
[96 117]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
