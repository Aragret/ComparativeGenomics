%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[119.95737457 739.20843506]
[107.34537506 731.07489014]
[95.38462067 722.01074219]
[84.14363098 712.06805420]
[73.68680573 701.30364990]
[64.07402039 689.77923584]
[55.36035156 677.56085205]
[47.59570312 664.71844482]
[40.82455826 651.32556152]
[35.08569336 637.45898438]
[30.41198730 623.19805908]
[26.83020782 608.62451172]
[24.36087227 593.82183838]
[23.01812553 578.87475586]
[22.80965614 563.86895752]
[23.73666191 548.89038086]
[25.79382896 534.02478027]
[28.96937752 519.35736084]
[33.24511719 504.97210693]
[38.59655380 490.95144653]
[44.99303818 477.37564087]
[52.39792633 464.32247925]
[60.76881027 451.86672974]
[70.05773926 440.07974243]
[80.21150208 429.02902222]
[91.17194366 418.77786255]
[102.87628174 409.38500977]
[115.25746918 400.90423584]
[128.24459839 393.38412476]
[141.76325989 386.86776733]
[155.73605347 381.39245605]
[151.33505249 367.05261230]
[146.93405151 352.71276855]
[142.53305054 338.37292480]
[131.40208435 328.47592163]
[134.74990845 313.01296997]
[130.34890747 298.67312622]
[125.38125610 293.20098877]
[125.99084473 284.08691406]
[121.80383301 269.68313599]
[110.82146454 259.62149048]
[114.39912415 244.21009827]
[110.21211243 229.80632019]
[107.31478119 227.79687500]
[105.24678802 224.28427124]
[104.70404053 219.67355347]
[106.17520905 214.66528320]
[102.63553619 200.08891296]
[99.09586334 185.51252747]
[95.55619812 170.93615723]
[92.01652527 156.35978699]
[88.52915192 170.94876099]
[81.12290192 183.99281311]
[70.38185120 194.46324158]
[57.15308380 201.53430176]
[42.47988510 204.64833069]
[27.51943588 203.55975342]
[13.45158482 198.35441589]
[1.38577867 189.44282532]
[-7.72642231 177.52780151]
[-13.16639233 163.54901123]
[-14.50511169 148.60887146]
[-11.63700390 133.88562012]
[-4.78825998 120.54040527]
[5.50099993 109.62568665]
[18.41932106 102.00223541]
[32.94791031 98.27127838]
[47.94098663 98.72704315]
[62.21612930 103.33360291]
[74.64753723 111.72764587]
[84.25482941 123.24719238]
[90.28125763 136.98710632]
[91.17407227 122.01370239]
[92.06688690 107.04029846]
[92.29021454 92.04196167]
[91.84361267 77.04860687]
[88.46008301 68.56394196]
[91.50364685 61.82907104]
[91.28031921 46.83073425]
[77.19265747 34.16376495]
[76.84343719 15.54143906]
[89.98770142 2.80001259]
[89.31791687 -12.18502617]
[88.64813232 -27.17006493]
[87.97834778 -42.15510559]
[87.30856323 -57.14014435]
[86.63877869 -72.12518311]
[85.96899414 -87.11022186]
[77.62319946 -100.55113983]
[84.78447723 -113.61120605]
[84.11469269 -128.59623718]
[75.76889801 -142.03717041]
[82.93018341 -155.09722900]
[82.14885712 -170.07687378]
[81.25604248 -185.05027771]
[80.36322784 -200.02368164]
[65.98664856 -204.96153259]
[54.59735870 -215.02893066]
[47.93214798 -228.69067383]
[47.00741196 -243.86346436]
[51.96416473 -258.23352051]
[62.04653931 -269.60955811]
[75.71704865 -276.25680542]
[90.89102936 -277.16156006]
[105.25457001 -272.18591309]
[116.61733246 -262.08859253]
[123.24657440 -248.40934753]
[124.13139343 -233.23419189]
[119.13684845 -218.87721252]
[109.02458191 -207.52774048]
[95.33663177 -200.91648865]
[96.22944641 -185.94308472]
[97.12226105 -170.96968079]
[100.65831757 -164.47982788]
[97.91522217 -155.76701355]
[106.21310425 -143.39791870]
[99.09973145 -129.26603699]
[99.76951599 -114.28099060]
[108.06740570 -101.91190338]
[100.95403290 -87.78000641]
[101.62381744 -72.79496765]
[102.29360199 -57.80992889]
[102.96338654 -42.82489014]
[103.63317108 -27.83984947]
[104.30295563 -12.85481167]
[104.97274017 2.13022733]
[114.86092377 7.82145596]
[120.83573914 17.68133736]
[121.31391907 29.32029152]
[116.06108093 39.85160828]
[106.27865601 46.60740662]
[106.50198364 61.60574341]
[106.83695984 76.60200500]
[107.28356934 91.59535217]
[118.33115387 81.44889069]
[133.32284546 81.94828033]
[143.67070007 92.80746460]
[143.44702148 107.80579376]
[132.77992249 118.35155487]
[117.78000641 118.40364838]
[107.04029846 107.93311310]
[106.14747620 122.90651703]
[105.25466156 137.87992859]
[106.59289551 152.82011414]
[110.13256836 167.39648438]
[113.67224121 181.97285461]
[117.21191406 196.54924011]
[120.75158691 211.12561035]
[124.61589050 225.61930847]
[128.80290222 240.02308655]
[140.08476257 251.11499023]
[136.20761108 265.49612427]
[140.39462280 279.89990234]
[144.68875122 294.27212524]
[149.08975220 308.61196899]
[160.53549194 319.53466797]
[156.87289429 333.97192383]
[161.27389526 348.31176758]
[165.67489624 362.65161133]
[170.07589722 376.99145508]
[184.71452332 373.68572998]
[199.56123352 371.49655151]
[214.53099060 370.43649292]
[229.53805542 370.51162720]
[244.49644470 371.72152710]
[259.32049561 374.05923462]
[273.92529297 377.51138306]
[288.22717285 382.05819702]
[302.14422607 387.67361450]
[315.59674072 394.32550049]
[328.50762939 401.97573853]
[340.80297852 410.58047485]
[352.41232300 420.09048462]
[363.26919556 430.45126343]
[373.31140137 441.60345459]
[382.48141479 453.48321533]
[390.72671509 466.02246094]
[398.00006104 479.14935303]
[404.25979614 492.78875732]
[409.47006226 506.86251831]
[413.60104370 521.28997803]
[416.62902832 535.98858643]
[418.53671265 550.87408447]
[419.31314087 565.86126709]
[418.95388794 580.86419678]
[417.46102905 595.79699707]
[414.84304810 610.57409668]
[411.11499023 625.11096191]
[406.29821777 639.32415771]
[400.42031860 653.13238525]
[393.51492310 666.45654297]
[385.62161255 679.22027588]
[376.78558350 691.35052490]
[367.05749512 702.77777100]
[356.49301147 713.43652344]
[345.15267944 723.26574707]
[333.10144043 732.20922852]
[320.40835571 740.21563721]
[307.14608765 747.23913574]
[293.39062500 753.23950195]
[279.22073364 758.18237305]
[264.71762085 762.03942871]
[249.96432495 764.78857422]
[235.04537964 766.41412354]
[220.04621887 766.90661621]
[205.05276489 766.26336670]
[190.15090942 764.48803711]
[175.42597961 761.59075928]
[160.96235657 757.58813477]
[146.84286499 752.50317383]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 160]
[32 159]
[33 158]
[34 157]
[36 155]
[37 154]
[39 153]
[40 152]
[42 150]
[43 149]
[47 148]
[48 147]
[49 146]
[50 145]
[51 144]
[72 143]
[73 142]
[74 141]
[75 134]
[76 133]
[78 132]
[79 131]
[82 126]
[83 125]
[84 124]
[85 123]
[86 122]
[87 121]
[88 120]
[90 118]
[91 117]
[93 115]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
