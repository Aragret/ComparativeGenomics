%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[70.14812469 771.69482422]
[55.15810394 772.35217285]
[40.15546036 772.12036133]
[25.19290352 771.00018311]
[10.32298374 768.99560547]
[-4.40206623 766.11358643]
[-18.93052292 762.36431885]
[-33.21135712 757.76098633]
[-47.19440079 752.31970215]
[-60.83054352 746.05963135]
[-74.07188416 739.00274658]
[-86.87191772 731.17382812]
[-99.18566895 722.60034180]
[-110.96990204 713.31243896]
[-122.18321228 703.34277344]
[-132.78622437 692.72631836]
[-142.74168396 681.50036621]
[-152.01461792 669.70434570]
[-160.57246399 657.37976074]
[-168.38517761 644.56982422]
[-175.42527771 631.31951904]
[-181.66806030 617.67547607]
[-187.09159851 603.68554688]
[-191.67683411 589.39886475]
[-195.40766907 574.86566162]
[-198.27099609 560.13696289]
[-200.25674438 545.26452637]
[-201.35795593 530.30053711]
[-201.57073975 515.29766846]
[-200.89437866 500.30847168]
[-199.33123779 485.38568115]
[-196.88681030 470.58169556]
[-193.56965637 455.94854736]
[-189.39146423 441.53756714]
[-184.36688232 427.39944458]
[-178.51358032 413.58383179]
[-171.85211182 400.13919067]
[-164.40586853 387.11282349]
[-156.20100403 374.55044556]
[-147.26635742 362.49621582]
[-137.63328552 350.99243164]
[-127.33564758 340.07952881]
[-116.40959930 329.79580688]
[-104.89353180 320.17742920]
[-92.82788849 311.25817871]
[-80.25505066 303.06936646]
[-67.21917725 295.63977051]
[-53.76607132 288.99545288]
[-39.94297409 283.15979004]
[-25.79844666 278.15325928]
[-11.38216877 273.99346924]
[3.25521946 270.69500732]
[18.06230354 268.26947021]
[32.98707199 266.72537231]
[47.97710419 266.06814575]
[62.97974014 266.30010986]
[77.94229126 267.42041016]
[79.94630432 252.55488586]
[73.97874451 238.90798950]
[83.49039459 226.26524353]
[85.49440765 211.39971924]
[87.49842072 196.53419495]
[89.50243378 181.66867065]
[91.50644684 166.80313110]
[92.51071167 151.83679199]
[92.51071167 136.83679199]
[92.51071167 121.83679199]
[92.51071167 106.83679199]
[89.36151123 99.41687775]
[92.62403870 91.61387634]
[92.84736633 76.61553955]
[85.31639099 62.70170212]
[93.24232483 50.09103775]
[85.20056915 62.75319672]
[72.74915314 71.11753845]
[57.98634720 73.77451324]
[43.39994431 70.27639008]
[31.44801331 61.21265411]
[24.14466095 48.11070251]
[22.72063255 33.17845154]
[27.41590309 18.93224335]
[37.43923187 7.77281570]
[51.10151672 1.58072698]
[66.10042572 1.39945352]
[79.90837097 7.25954294]
[90.19847107 18.17346764]
[95.23690033 32.30368042]
[98.34100342 17.62837982]
[101.44511414 2.95307755]
[104.54922485 -11.72222519]
[107.65333557 -26.39752769]
[110.75744629 -41.07283020]
[113.86155701 -55.74813080]
[99.82224274 -61.11881256]
[86.79600525 -68.61971283]
[75.10361481 -78.06610870]
[65.03300476 -89.22538757]
[56.83218765 -101.82273102]
[50.70310593 -115.54792023]
[46.79669571 -130.06295776]
[45.20915604 -145.01040649]
[45.97958374 -160.02217102]
[49.08900070 -174.72856140]
[54.46084213 -188.76742554]
[61.96281433 -201.79306030]
[71.41017914 -213.48466492]
[82.57028961 -223.55435181]
[95.16830444 -231.75413513]
[108.89400482 -237.88208008]
[123.40936279 -241.78729248]
[138.35694885 -243.37359619]
[153.36863708 -242.60192871]
[168.07478333 -239.49130249]
[182.11320496 -234.11830139]
[195.13821411 -226.61524963]
[206.82904053 -217.16693115]
[216.89779663 -206.00599670]
[225.09654236 -193.40728760]
[231.22335815 -179.68109131]
[235.12738037 -165.16540527]
[236.71244812 -150.21769714]
[235.93954468 -135.20606995]
[232.82769775 -120.50018311]
[227.45353699 -106.46220398]
[219.94941711 -93.43781281]
[210.50012207 -81.74776459]
[199.33836365 -71.67992401]
[186.73898315 -63.48221970]
[173.01228333 -57.35653687]
[158.49627686 -53.45372009]
[143.54843140 -51.86988068]
[128.53686523 -52.64402008]
[125.43274689 -37.96871948]
[122.32863617 -23.29341698]
[119.22453308 -8.61811447]
[116.12042236 6.05718756]
[113.01631165 20.73249054]
[109.91220093 35.40779114]
[108.24066162 50.31436539]
[115.78761292 63.15542603]
[107.84570312 76.83886719]
[107.62237549 91.83721161]
[107.51071167 106.83679199]
[107.51071167 121.83679199]
[107.51071167 136.83679199]
[107.51071167 151.83679199]
[116.82707214 140.08071899]
[130.98550415 135.12705994]
[145.59887695 138.51078796]
[156.13905334 149.18339539]
[159.34007263 163.83786011]
[154.21003723 177.93334961]
[142.33856201 187.10221863]
[127.40415192 188.50338745]
[114.03438568 181.70268250]
[106.37197876 168.80714417]
[104.36796570 183.67268372]
[102.36395264 198.53820801]
[100.35993958 213.40373230]
[98.35592651 228.26925659]
[104.18014526 242.97943115]
[94.81183624 254.55889893]
[92.80781555 269.42440796]
[107.53289032 272.30627441]
[122.06138611 276.05541992]
[136.34225464 280.65863037]
[150.32534790 286.09976196]
[163.96154785 292.35974121]
[177.20295715 299.41653442]
[190.00305176 307.24533081]
[202.31687927 315.81869507]
[214.10119629 325.10647583]
[225.31459045 335.07608032]
[235.91769409 345.69244385]
[245.87324524 356.91830444]
[255.14628601 368.71420288]
[263.70425415 381.03875732]
[271.51705933 393.84863281]
[278.55728149 407.09884644]
[284.80020142 420.74285889]
[290.22384644 434.73272705]
[294.80920410 449.01934814]
[298.54016113 463.55252075]
[301.40362549 478.28118896]
[303.38949585 493.15362549]
[304.49084473 508.11758423]
[304.70376587 523.12048340]
[304.02752686 538.10968018]
[302.46453857 553.03247070]
[300.02023315 567.83648682]
[296.70321655 582.46966553]
[292.52514648 596.88067627]
[287.50067139 611.01885986]
[281.64749146 624.83453369]
[274.98614502 638.27917480]
[267.54000854 651.30566406]
[259.33526611 663.86810303]
[250.40071106 675.92242432]
[240.76774597 687.42626953]
[230.47019958 698.33929443]
[219.54425049 708.62304688]
[208.02825928 718.24157715]
[195.96269226 727.16088867]
[183.38993835 735.34985352]
[170.35412598 742.77954102]
[156.90107727 749.42401123]
[143.07803345 755.25976562]
[128.93354797 760.26641846]
[114.51730347 764.42633057]
[99.87994385 767.72491455]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 163]
[58 162]
[60 160]
[61 159]
[62 158]
[63 157]
[64 156]
[65 146]
[66 145]
[67 144]
[68 143]
[70 142]
[71 141]
[73 139]
[87 138]
[88 137]
[89 136]
[90 135]
[91 134]
[92 133]
[93 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
