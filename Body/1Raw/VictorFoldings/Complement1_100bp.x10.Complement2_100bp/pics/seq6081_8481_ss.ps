%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxUUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGC\
) } def
/len { sequence length } bind def

/coor [
[44.47710419 633.02032471]
[33.54856873 643.31115723]
[21.70439339 652.53344727]
[9.04866886 660.60601807]
[-4.30738592 667.45806885]
[-18.24639320 673.02929688]
[-32.64585495 677.27075195]
[-47.37922287 680.14514160]
[-62.31702042 681.62725830]
[-77.32797241 681.70410156]
[-92.28015137 680.37487793]
[-107.04216003 677.65136719]
[-121.48426056 673.55743408]
[-135.47953796 668.12915039]
[-148.90499878 661.41412354]
[-161.64266968 653.47137451]
[-173.58058167 644.37078857]
[-184.61383057 634.19232178]
[-194.64546204 623.02539062]
[-203.58731079 610.96807861]
[-211.36079407 598.12646484]
[-217.89759827 584.61334229]
[-223.14027405 570.54748535]
[-227.04275513 556.05242920]
[-229.57073975 541.25573730]
[-230.70201111 526.28723145]
[-230.42662048 511.27862549]
[-228.74699402 496.36175537]
[-225.67790222 481.66769409]
[-221.24630737 467.32562256]
[-215.49114990 453.46154785]
[-208.46301270 440.19729614]
[-200.22366333 427.64950562]
[-190.84552002 415.92837524]
[-180.41098022 405.13693237]
[-169.01176453 395.37005615]
[-156.74803162 386.71353149]
[-143.72756958 379.24343872]
[-130.06480408 373.02545166]
[-115.87980652 368.11422729]
[-101.29723358 364.55285645]
[-86.44525146 362.37271118]
[-71.45437622 361.59292603]
[-56.45634842 362.22033691]
[-41.58297729 364.24945068]
[-26.96497345 367.66244507]
[-12.73080158 372.42929077]
[-6.65696764 358.71401978]
[-0.58313376 344.99874878]
[5.49070024 331.28347778]
[11.56453419 317.56820679]
[17.63836861 303.85293579]
[23.71220207 290.13769531]
[18.12399292 276.37878418]
[24.08834648 262.38302612]
[38.55784225 256.61489868]
[44.63167572 242.89961243]
[50.08703232 228.92681885]
[54.91303253 214.72436523]
[59.63316727 200.48637390]
[64.24717712 186.21363831]
[68.86118317 171.94090271]
[65.41394043 157.45071411]
[77.02104187 146.69963074]
[81.63504791 132.42689514]
[86.24906158 118.15416718]
[77.36098480 102.47731781]
[82.64838409 85.24928284]
[98.80054474 77.25745392]
[102.98755646 62.85367203]
[107.17456818 48.44989014]
[111.36157990 34.04610825]
[107.78392029 18.63471985]
[118.76628876 8.57307339]
[122.95330048 -5.83070850]
[127.14031219 -20.23448944]
[113.50730133 -13.97821712]
[99.39609528 -19.06484985]
[92.89023590 -32.58053589]
[97.71656799 -46.78287506]
[111.11035919 -53.53612518]
[125.39903259 -48.97171402]
[132.39729309 -35.70529175]
[137.85264587 -49.67808914]
[143.30801392 -63.65088654]
[148.76336670 -77.62368774]
[144.30879211 -89.72821045]
[149.14022827 -101.25387573]
[160.16461182 -106.23279572]
[165.82739258 -120.12282562]
[171.49018860 -134.01284790]
[169.53526306 -149.71281433]
[181.50480652 -158.57731628]
[187.16758728 -172.46734619]
[190.48985291 -187.09480286]
[191.38265991 -202.06820679]
[192.27548218 -217.04161072]
[193.16828918 -232.01501465]
[194.06111145 -246.98841858]
[180.14089966 -252.98872375]
[169.11454773 -263.39041138]
[162.31352234 -276.93743896]
[160.55908203 -291.99392700]
[164.06309509 -306.74172974]
[172.40242004 -319.39999390]
[184.57006836 -328.44015503]
[199.09671021 -332.77056885]
[214.22817993 -331.86831665]
[228.13731384 -325.84237671]
[239.14448547 -315.42037964]
[245.92053223 -301.86083984]
[247.64721680 -286.80114746]
[244.11602783 -272.05981445]
[235.75338745 -259.41696167]
[223.56910706 -250.39924622]
[209.03451538 -246.09561157]
[208.14169312 -231.12220764]
[207.24888611 -216.14880371]
[206.35606384 -201.17538452]
[205.46325684 -186.20198059]
[212.96931458 -199.18885803]
[223.54324341 -209.82803345]
[236.48370361 -217.41386414]
[250.93238831 -221.44317627]
[265.93096924 -221.64875793]
[280.48468018 -218.01695251]
[293.62817383 -210.78863525]
[304.48971558 -200.44326782]
[312.34890747 -187.66699219]
[316.68444824 -173.30722046]
[317.20880127 -158.31639099]
[313.88720703 -143.68878174]
[306.93991089 -130.39459229]
[296.82775879 -119.31558990]
[284.22143555 -111.18659210]
[269.95709229 -106.54676819]
[254.98078918 -105.70386505]
[240.28587341 -108.71378326]
[226.84701538 -115.37689209]
[215.55555725 -125.25125122]
[207.16041565 -137.68193054]
[202.21841431 -151.84443665]
[201.05761719 -166.80455017]
[195.39482117 -152.91452026]
[197.75479126 -138.20806885]
[185.38020325 -128.35006714]
[179.71742249 -114.46003723]
[174.05464172 -100.57001495]
[177.37573242 -83.33814240]
[162.73616028 -72.16832733]
[157.28080750 -58.19552994]
[151.82545471 -44.22273254]
[146.37008667 -30.24993515]
[141.54409790 -16.04747963]
[137.35708618 -1.64369714]
[133.17007446 12.76008511]
[137.04721069 27.14122009]
[125.76535797 38.23311996]
[121.57834625 52.63690186]
[117.39133453 67.04068756]
[113.20432281 81.44446564]
[120.48428345 90.04730988]
[122.74818420 101.08730316]
[119.44165039 111.86104584]
[111.37435913 119.73033142]
[100.52179718 122.76817322]
[95.90778351 137.04090881]
[91.29377747 151.31364441]
[94.41099548 166.82472229]
[83.13391876 176.55491638]
[78.51990509 190.82765198]
[73.90589905 205.10038757]
[74.24385834 214.22856140]
[69.11548615 219.55036926]
[64.28948975 233.75282288]
[78.18826294 228.11152649]
[92.05826569 233.82318115]
[97.95412445 247.61589050]
[92.49843597 261.58856201]
[78.81645966 267.73699951]
[64.74584961 262.53912354]
[58.34694290 248.97344971]
[52.27310944 262.68872070]
[57.72650528 277.27975464]
[51.37139511 291.10244751]
[37.42746735 296.21151733]
[31.35363388 309.92678833]
[25.27980042 323.64205933]
[19.20596695 337.35733032]
[13.13213253 351.07257080]
[7.05829906 364.78784180]
[0.98446500 378.50311279]
[14.08067513 385.83959961]
[26.43233299 394.37017822]
[37.93088913 404.01992798]
[48.47529602 414.70404053]
[57.97287750 426.32858276]
[66.34017944 438.79144287]
[73.50365448 451.98306274]
[79.40036011 465.78753662]
[83.97846985 480.08352661]
[87.19774628 494.74542236]
[89.02989960 509.64431763]
[89.45883179 524.64935303]
[88.48077393 539.62860107]
[86.10432434 554.45043945]
[82.35035706 568.98461914]
[77.25186920 583.10339355]
[70.85366058 596.68267822]
[63.21197128 609.60314941]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 192]
[48 191]
[49 190]
[50 189]
[51 188]
[52 187]
[53 186]
[56 183]
[57 182]
[58 175]
[59 174]
[60 172]
[61 171]
[62 170]
[64 168]
[65 167]
[66 166]
[69 161]
[70 160]
[71 159]
[72 158]
[74 156]
[75 155]
[76 154]
[83 153]
[84 152]
[85 151]
[86 150]
[89 148]
[90 147]
[91 146]
[93 144]
[94 143]
[95 120]
[96 119]
[97 118]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
