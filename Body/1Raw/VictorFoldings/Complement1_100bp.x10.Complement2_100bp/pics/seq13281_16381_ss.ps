%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[111.75811005 530.76989746]
[120.01186371 518.14746094]
[131.14593506 507.97479248]
[144.46043396 500.89138794]
[140.92076111 486.31500244]
[130.39862061 475.77301025]
[134.66087341 460.53674316]
[131.12120056 445.96035767]
[127.58152771 431.38400269]
[121.30245209 445.00650024]
[108.71282196 453.16134644]
[93.71367645 453.32162476]
[80.95266724 445.43768311]
[74.38392639 431.95245361]
[76.04284668 417.04446411]
[85.41539764 405.33312988]
[99.59739685 400.44732666]
[114.19438934 403.90100098]
[124.68346405 414.62417603]
[123.12294006 399.70556641]
[121.56241608 384.78698730]
[112.54302216 372.93371582]
[118.80264282 358.40347290]
[109.78324127 346.55023193]
[116.04286194 332.01998901]
[107.02346802 320.16671753]
[113.28308105 305.63647461]
[111.72255707 290.71786499]
[102.70316315 278.86462402]
[108.96277618 264.33438110]
[94.88939667 259.39419556]
[84.31305695 248.78993225]
[79.36944580 234.58705139]
[81.08969116 219.58502197]
[89.18579102 206.76550293]
[102.09723663 198.69976807]
[100.53671265 183.78117371]
[98.97618866 168.86256409]
[97.41566467 153.94395447]
[93.59335327 147.61846924]
[95.94467163 138.79185486]
[94.60643768 123.85167694]
[93.26820374 108.91149139]
[91.81877899 93.98168182]
[90.25825500 79.06307983]
[84.67157745 92.98388672]
[75.10488892 104.53717804]
[62.47003555 112.62176514]
[47.97129059 116.46707153]
[32.99058151 115.70658875]
[18.95577240 110.41281128]
[7.20457268 101.09029388]
[-1.14296794 88.62760162]
[-5.29121494 74.21260834]
[-4.84478426 59.21925354]
[0.15377346 45.07661057]
[9.22802734 33.13265991]
[21.51307678 24.52582932]
[35.83798981 20.07646370]
[50.83740997 20.20865059]
[65.08168030 24.90978813]
[77.21313477 33.73179626]
[86.07547760 45.83381271]
[90.82419586 60.06347656]
[93.26992798 45.26420593]
[87.88626099 30.38715172]
[97.59518433 19.09175110]
[88.54318237 9.11799049]
[86.91206360 -4.05584240]
[93.07492828 -15.59278774]
[104.58419800 -21.38643646]
[107.24999237 -36.14765167]
[109.91578674 -50.90887070]
[112.58158112 -65.67008972]
[107.42001343 -80.62564850]
[117.29602814 -91.77524567]
[119.96182251 -106.53646088]
[121.18880463 -121.48619843]
[120.96547699 -136.48452759]
[120.74214935 -151.48286438]
[112.80023956 -165.16632080]
[120.34719086 -178.00737000]
[120.12386322 -193.00570679]
[110.31605530 -208.59059143]
[119.45473480 -223.57229614]
[119.00813293 -238.56564331]
[118.56152344 -253.55899048]
[110.41677094 -267.12268066]
[117.77170563 -280.07467651]
[117.32509613 -295.06802368]
[106.10390472 -305.87185669]
[105.86456299 -321.08358765]
[116.23350525 -331.71472168]
[115.78690338 -346.70806885]
[115.34029388 -361.70141602]
[114.89369202 -376.69476318]
[100.49367523 -381.42922974]
[88.58329010 -390.80572510]
[80.60077667 -403.69198608]
[77.51006317 -418.53189087]
[79.68436432 -433.53350830]
[86.86112976 -446.88528442]
[98.17372131 -456.97491455]
[112.25609589 -462.58407593]
[127.40773010 -463.03540039]
[141.79899597 -458.27438354]
[153.69207764 -448.87597656]
[161.65083313 -435.97503662]
[164.71420288 -421.12945557]
[162.51225281 -406.13186646]
[155.31089783 -392.79333496]
[143.97972107 -382.72454834]
[129.88703918 -377.14135742]
[130.33364868 -362.14801025]
[130.78025818 -347.15466309]
[131.22685242 -332.16131592]
[142.21018982 -322.16622925]
[142.87669373 -306.96719360]
[132.31845093 -295.51461792]
[132.76506042 -280.52127075]
[140.87786865 -268.03002930]
[133.55487061 -254.00559998]
[134.00148010 -239.01225281]
[134.44808960 -224.01889038]
[143.03454590 -215.49836731]
[143.52932739 -203.01081848]
[135.12220764 -193.22903442]
[135.34553528 -178.23069763]
[143.27146912 -165.62004089]
[135.74047852 -151.70619202]
[135.96380615 -136.70785522]
[136.18713379 -121.70952606]
[143.84832764 -134.60549927]
[156.04518127 -143.33685303]
[170.72233582 -146.43220520]
[185.40643311 -143.36991882]
[197.62292480 -134.66606140]
[205.31312561 -121.78736115]
[207.18110657 -106.90412903]
[202.91209412 -92.52443695]
[193.22546387 -81.07152557]
[179.75358582 -74.47541046]
[164.76673889 -73.84764099]
[150.79043579 -79.29402161]
[140.17994690 -89.89672852]
[134.72303772 -103.87066650]
[132.05725098 -89.10945129]
[137.40948486 -75.20970917]
[127.34279633 -63.00429153]
[124.67700195 -48.24307632]
[122.01120758 -33.48185730]
[119.34541321 -18.72064018]
[129.51623535 -5.32687187]
[126.79965973 11.61228561]
[112.39445496 21.53747749]
[117.95305634 35.35599136]
[108.06919861 47.70993423]
[105.62346649 62.50920486]
[105.17686462 77.50255585]
[106.73738861 92.42115784]
[110.64142609 99.47318268]
[108.20838165 107.57325745]
[109.54661560 122.51344299]
[110.88484955 137.45362854]
[112.33427429 152.38343811]
[113.89479828 167.30204773]
[115.45531464 182.22064209]
[117.01583862 197.13925171]
[131.31692505 202.35848999]
[141.89065552 213.22509766]
[146.67819214 227.54638672]
[144.78074646 242.46485901]
[136.62780762 255.02825928]
[123.88138580 262.77386475]
[133.01240540 275.69418335]
[126.64116669 289.15734863]
[128.20169067 304.07595825]
[137.33270264 316.99630737]
[130.96147156 330.45947266]
[140.09248352 343.37979126]
[133.72123718 356.84295654]
[142.85226440 369.76330566]
[136.48101807 383.22644043]
[138.04154968 398.14505005]
[139.60206604 413.06365967]
[142.15789795 427.84432983]
[145.69757080 442.42068481]
[149.23724365 456.99707031]
[160.01257324 468.58166504]
[155.49714661 482.77532959]
[159.03681946 497.35171509]
[174.11711121 497.53982544]
[188.67663574 501.47317505]
[201.80017090 508.90444946]
[212.66273499 519.36651611]
[220.58151245 532.20178223]
[225.05873108 546.60339355]
[225.81294250 561.66595459]
[222.79673767 576.44274902]
[216.19970703 590.00482178]
[206.43655396 601.49969482]
[194.12100220 610.20477295]
[180.02720642 615.57281494]
[165.04113770 617.26641846]
[150.10481262 615.17907715]
[136.15713501 609.44207764]
[124.07488251 600.41601562]
[114.61755371 588.66821289]
[108.37963867 574.93725586]
[105.75326538 560.08624268]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 191]
[5 190]
[7 188]
[8 187]
[9 186]
[19 185]
[20 184]
[21 183]
[23 181]
[25 179]
[27 177]
[28 176]
[30 174]
[36 168]
[37 167]
[38 166]
[39 165]
[41 164]
[42 163]
[43 162]
[44 160]
[45 159]
[64 158]
[65 157]
[67 155]
[71 152]
[72 151]
[73 150]
[74 149]
[76 147]
[77 146]
[78 132]
[79 131]
[80 130]
[82 128]
[83 127]
[85 124]
[86 123]
[87 122]
[89 120]
[90 119]
[93 116]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
