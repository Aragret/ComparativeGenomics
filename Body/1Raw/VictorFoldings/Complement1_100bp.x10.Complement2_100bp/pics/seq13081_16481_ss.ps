%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCGxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[148.50973511 827.61285400]
[134.49665833 822.24664307]
[120.86455536 815.97546387]
[107.67179871 808.82604980]
[94.97487640 800.82916260]
[82.82816315 792.01898193]
[71.28367615 782.43316650]
[60.39085007 772.11291504]
[50.19632721 761.10229492]
[40.74376678 749.44842529]
[32.07364273 737.20135498]
[24.22308159 724.41345215]
[17.22570419 711.13946533]
[11.11147213 697.43621826]
[5.90656900 683.36242676]
[1.63328230 668.97839355]
[-1.69008863 654.34564209]
[-4.04931259 639.52685547]
[-5.43428659 624.58551025]
[-5.83908033 609.58557129]
[-5.26196003 594.59124756]
[-3.70539737 579.66680908]
[-1.17605782 564.87609863]
[2.31522775 550.28247070]
[6.75350857 535.94848633]
[12.11977959 521.93542480]
[18.39106178 508.30337524]
[25.54049873 495.11065674]
[33.53747559 482.41375732]
[42.34775162 470.26712036]
[51.93359375 458.72268677]
[62.25395966 447.82992554]
[73.26464844 437.63546753]
[84.91851807 428.18295288]
[97.16565704 419.51290894]
[109.95362854 411.66241455]
[123.22766113 404.66513062]
[136.93092346 398.55096436]
[151.00473022 393.34616089]
[165.38882446 389.07296753]
[162.06655884 374.44549561]
[158.74430847 359.81802368]
[155.42204285 345.19058228]
[151.88237000 330.61419678]
[141.20443726 320.23004150]
[145.23936462 304.93200684]
[141.48306274 290.40994263]
[137.72676086 275.88787842]
[133.97045898 261.36581421]
[130.21417236 246.84375000]
[117.28986359 239.52952576]
[113.27356720 224.85560608]
[121.03302765 211.34899902]
[117.27672577 196.82693481]
[113.52043152 182.30487061]
[109.76412964 167.78282166]
[106.00782776 153.26075745]
[102.25152588 138.73869324]
[98.49522400 124.21664429]
[94.73892212 109.69458008]
[84.99318695 121.09723663]
[69.99744415 120.73982239]
[60.80600357 108.88581848]
[64.19445038 94.27355194]
[77.66495514 87.67463684]
[91.28649139 93.95228577]
[88.62069702 79.19107056]
[85.95490265 64.42985535]
[71.59552002 59.16151810]
[61.86535263 47.49015427]
[59.30064392 32.61438370]
[64.49149323 18.54629707]
[75.94989014 9.02942371]
[73.28408813 -5.73179293]
[63.21739578 -17.93721199]
[68.56964111 -31.83695030]
[53.59957504 -33.92370605]
[40.02583694 -40.52643967]
[29.17223930 -50.98721313]
[22.09297943 -64.27251434]
[19.47024345 -79.07534790]
[21.54849434 -93.94382477]
[28.11173820 -107.42359161]
[38.50590515 -118.20001984]
[51.70399857 -125.22648621]
[49.03820419 -139.98770142]
[46.37240982 -154.74891663]
[43.70661163 -169.51013184]
[28.66934967 -170.75236511]
[14.46630859 -175.84510803]
[2.06587625 -184.44113159]
[-7.68646526 -195.95436096]
[-14.12578487 -209.59977722]
[-16.81303787 -224.44703674]
[-15.56500626 -239.48382568]
[-10.46677971 -253.68489075]
[-1.86596453 -266.08200073]
[9.65102100 -275.82989502]
[23.29892921 -282.26394653]
[38.14722443 -284.94546509]
[53.18352509 -283.69161987]
[67.38262939 -278.58792114]
[79.77642059 -269.98233032]
[89.51986694 -258.46157837]
[95.94864655 -244.81118774]
[98.62443542 -229.96185303]
[97.36479187 -214.92604065]
[92.25559998 -200.72891235]
[83.64521027 -188.33843994]
[72.12070465 -178.59944153]
[58.46783066 -172.17593384]
[61.13362503 -157.41471863]
[63.79942322 -142.65350342]
[66.46521759 -127.89228058]
[81.28733063 -125.92610931]
[94.79431152 -119.46609497]
[105.65792847 -109.13353729]
[112.80561829 -95.93120575]
[115.52630615 -81.14606476]
[113.54118347 -66.22378540]
[107.03217316 -52.62741852]
[96.62538147 -41.69393158]
[83.33085632 -34.50274658]
[93.20687866 -23.35314941]
[88.04531097 -8.39758873]
[90.71110535 6.36362886]
[104.77450562 11.27140427]
[114.55821228 22.63516617]
[117.35877991 37.46834564]
[112.32567596 51.80587387]
[100.71611786 61.76405716]
[103.38191223 76.52527618]
[106.04771423 91.28649139]
[109.26098633 105.93827820]
[113.01728821 120.46034241]
[116.77358246 134.98240662]
[120.52988434 149.50445557]
[124.28618622 164.02651978]
[128.04248047 178.54858398]
[131.79878235 193.07063293]
[135.55508423 207.59269714]
[148.89047241 215.64286804]
[152.49302673 230.42381287]
[144.73622131 243.08744812]
[148.49252319 257.60952759]
[152.24882507 272.13156128]
[156.00512695 286.65362549]
[159.76142883 301.17568970]
[170.70803833 312.59857178]
[166.40443420 326.85791016]
[170.75862122 331.83309937]
[171.79154968 337.42147827]
[170.04949951 341.86831665]
[173.37176514 356.49578857]
[176.69403076 371.12322998]
[180.01628113 385.75070190]
[194.83502197 383.39120483]
[209.77635193 382.00598145]
[224.77629089 381.60092163]
[239.77061462 382.17776489]
[254.69509888 383.73406982]
[269.48583984 386.26315308]
[284.07949829 389.75418091]
[298.41357422 394.19219971]
[312.42672729 399.55822754]
[326.05889893 405.82925415]
[339.25173950 412.97845459]
[351.94876099 420.97521973]
[364.09558105 429.78527832]
[375.64016724 439.37091064]
[386.53311157 449.69110107]
[396.72778320 460.70159912]
[406.18048096 472.35528564]
[414.85073853 484.60229492]
[422.70144653 497.39010620]
[429.69900513 510.66403198]
[435.81338501 524.36718750]
[441.01846313 538.44091797]
[445.29190063 552.82489014]
[448.61544800 567.45764160]
[450.97485352 582.27636719]
[452.36001587 597.21771240]
[452.76498413 612.21765137]
[452.18801880 627.21197510]
[450.63165283 642.13647461]
[448.10247803 656.92718506]
[444.61135864 671.52081299]
[440.17324829 685.85485840]
[434.80715942 699.86798096]
[428.53604126 713.50012207]
[421.38674927 726.69293213]
[413.38992310 739.38989258]
[404.57977295 751.53668213]
[394.99407959 763.08117676]
[384.67382812 773.97412109]
[373.66326904 784.16870117]
[362.00952148 793.62133789]
[349.76248169 802.29150391]
[336.97460938 810.14215088]
[323.70065308 817.13958740]
[309.99746704 823.25390625]
[295.92370605 828.45892334]
[281.53967285 832.73223877]
[266.90695190 836.05572510]
[252.08816528 838.41503906]
[237.14682007 839.80010986]
[222.14688110 840.20495605]
[207.15257263 839.62792969]
[192.22810364 838.07147217]
[177.43739319 835.54223633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 156]
[41 155]
[42 154]
[43 153]
[44 150]
[46 148]
[47 147]
[48 146]
[49 145]
[50 144]
[53 141]
[54 140]
[55 139]
[56 138]
[57 137]
[58 136]
[59 135]
[60 134]
[66 133]
[67 132]
[68 131]
[73 126]
[74 125]
[76 123]
[85 114]
[86 113]
[87 112]
[88 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
