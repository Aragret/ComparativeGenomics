%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[18.09733963 894.52807617]
[3.20446038 896.34576416]
[-11.76269150 897.38806152]
[-26.76376534 897.65203857]
[-41.75832367 897.13708496]
[-56.70594025 895.84448242]
[-71.56631470 893.77783203]
[-86.29940033 890.94268799]
[-100.86546326 887.34661865]
[-115.22525024 882.99932861]
[-129.34002686 877.91265869]
[-143.17176819 872.10015869]
[-156.68318176 865.57757568]
[-169.83782959 858.36254883]
[-182.60025024 850.47442627]
[-194.93605042 841.93450928]
[-206.81196594 832.76580811]
[-218.19598389 822.99310303]
[-229.05741882 812.64270020]
[-239.36698914 801.74249268]
[-249.09689331 790.32183838]
[-258.22088623 778.41156006]
[-266.71441650 766.04382324]
[-274.55456543 753.25183105]
[-281.72018433 740.07019043]
[-288.19195557 726.53442383]
[-293.95245361 712.68090820]
[-298.98614502 698.54711914]
[-303.27944946 684.17114258]
[-306.82080078 669.59167480]
[-309.60061646 654.84802246]
[-311.61148071 639.97998047]
[-312.84790039 625.02764893]
[-313.30654907 610.03125000]
[-312.98623657 595.03131104]
[-311.88778687 580.06817627]
[-310.01416016 565.18218994]
[-307.37045288 550.41357422]
[-303.96371460 535.80206299]
[-299.80322266 521.38708496]
[-294.90011597 507.20745850]
[-289.26763916 493.30142212]
[-282.92098999 479.70651245]
[-275.87725830 466.45932007]
[-268.15542603 453.59561157]
[-259.77633667 441.14999390]
[-250.76257324 429.15609741]
[-241.13842773 417.64620972]
[-230.92984009 406.65133667]
[-220.16435242 396.20117188]
[-208.87095642 386.32388306]
[-197.08010864 377.04605103]
[-184.82360840 368.39273071]
[-172.13447571 360.38723755]
[-159.04693604 353.05114746]
[-145.59626770 346.40423584]
[-131.81874084 340.46441650]
[-117.75146484 335.24771118]
[-103.43239594 330.76818848]
[-88.90011597 327.03793335]
[-74.19381714 324.06698608]
[-59.35313034 321.86334229]
[-44.41807175 320.43298340]
[-29.42890358 319.77972412]
[-14.42603111 319.90533447]
[0.55009705 320.80950928]
[15.45911026 322.48974609]
[30.26081467 324.94158936]
[44.91530991 328.15838623]
[48.88740540 313.69384766]
[52.85950089 299.22933960]
[56.83159637 284.76480103]
[60.80369186 270.30029297]
[64.77578735 255.83575439]
[68.74788666 241.37123108]
[72.71997833 226.90670776]
[76.58428955 212.41300964]
[80.34059143 197.89096069]
[84.09688568 183.36889648]
[87.85318756 168.84683228]
[90.07830811 154.01278687]
[90.74809265 139.02775574]
[91.41787720 124.04271698]
[92.08766174 109.05767822]
[92.53427124 94.06432343]
[92.75759888 79.06598663]
[92.98092651 64.06764984]
[93.20425415 49.06931305]
[93.42758179 34.07097626]
[93.65090942 19.07263756]
[84.31146240 3.20265555]
[93.89215851 -11.50031185]
[93.89215851 -26.50031090]
[93.55718231 -41.49657059]
[92.88739777 -56.48160934]
[92.21761322 -71.46665192]
[91.54782867 -86.45169067]
[77.35743713 -91.97914886]
[66.64671326 -102.80505371]
[61.27134323 -117.05374908]
[62.16264725 -132.25656128]
[69.16619873 -145.77951050]
[81.06858826 -155.27966309]
[95.80766296 -159.11106873]
[110.82978058 -156.60989380]
[123.53227234 -148.20950317]
[131.71435547 -135.36531067]
[133.95843506 -120.30263519]
[129.87570190 -105.63119507]
[120.17353058 -93.89289856]
[106.53286743 -87.12147522]
[107.20265198 -72.13643646]
[107.87243652 -57.15139389]
[108.54222107 -42.16635513]
[110.88354492 -39.52996826]
[112.06423187 -35.62855530]
[111.50362396 -31.01997375]
[108.89215851 -26.50031090]
[108.89215851 -11.50031185]
[117.22111511 -2.72790933]
[117.34387970 9.76883793]
[108.64924622 19.29596519]
[108.42591858 34.29430389]
[108.20259094 49.29264069]
[107.97926331 64.29097748]
[107.75593567 79.28931427]
[107.53260803 94.28765106]
[110.23906708 98.78087616]
[110.23539734 104.47062683]
[107.07270050 109.72746277]
[106.40291595 124.71250153]
[105.73313141 139.69754028]
[105.06334686 154.68257141]
[113.25202179 142.11492920]
[125.58320618 133.57432556]
[140.22764587 130.32771301]
[155.01290894 132.85670471]
[167.74571228 140.78613281]
[176.53720093 152.93971252]
[180.08322144 167.51454163]
[177.85774231 182.34852600]
[170.19090271 195.24114990]
[158.22001648 204.27983093]
[143.72090149 208.12377930]
[128.84442139 206.20272827]
[115.79741669 198.80168152]
[106.51531982 187.01852417]
[102.37525177 172.60313416]
[98.61894989 187.12519836]
[94.86264801 201.64724731]
[91.10634613 216.16931152]
[91.98703003 225.26118469]
[87.18450928 230.87879944]
[83.21240997 245.34332275]
[79.24031067 259.80786133]
[75.26821899 274.27236938]
[71.29611969 288.73690796]
[67.32402802 303.20141602]
[63.35192871 317.66595459]
[59.37983322 332.13046265]
[73.62194061 336.84896851]
[87.59995270 342.30032349]
[101.27616882 348.46984863]
[114.61373138 355.34088135]
[127.57668304 362.89495850]
[140.13008118 371.11166382]
[152.24006653 379.96887207]
[163.87400818 389.44268799]
[175.00054932 399.50756836]
[185.58967590 410.13641357]
[195.61285400 421.30053711]
[205.04306030 432.96987915]
[213.85487366 445.11294556]
[222.02452087 457.69699097]
[229.53001404 470.68814087]
[236.35108948 484.05133057]
[242.46937561 497.75054932]
[247.86836243 511.74884033]
[252.53352356 526.00854492]
[256.45223999 540.49114990]
[259.61398315 555.15759277]
[262.01022339 569.96838379]
[263.63449097 584.88360596]
[264.48239136 599.86303711]
[264.55166626 614.86627197]
[263.84213257 629.85290527]
[262.35571289 644.78247070]
[260.09634399 659.61474609]
[257.07019043 674.30981445]
[253.28540039 688.82800293]
[248.75213623 703.13012695]
[243.48266602 717.17773438]
[237.49116516 730.93286133]
[230.79379272 744.35845947]
[223.40859985 757.41833496]
[215.35551453 770.07733154]
[206.65621948 782.30126953]
[197.33419800 794.05718994]
[187.41455078 805.31341553]
[176.92402649 816.03961182]
[165.89093018 826.20678711]
[154.34497070 835.78765869]
[142.31730652 844.75634766]
[129.84033203 853.08862305]
[116.94770050 860.76208496]
[103.67416382 867.75604248]
[90.05550385 874.05157471]
[76.12844086 879.63183594]
[61.93051529 884.48162842]
[47.50000000 888.58801270]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 160]
[70 159]
[71 158]
[72 157]
[73 156]
[74 155]
[75 154]
[76 153]
[77 151]
[78 150]
[79 149]
[80 148]
[81 133]
[82 132]
[83 131]
[84 130]
[85 127]
[86 126]
[87 125]
[88 124]
[89 123]
[90 122]
[92 119]
[93 118]
[94 114]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
