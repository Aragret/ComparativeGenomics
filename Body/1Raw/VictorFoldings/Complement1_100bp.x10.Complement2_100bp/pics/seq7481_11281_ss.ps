%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[35.79468536 535.27233887]
[28.05035400 548.13378906]
[19.04457092 560.14575195]
[8.86975002 571.18493652]
[-2.36970043 581.13812256]
[-14.55844307 589.90313721]
[-27.57140160 597.39001465]
[-41.27504349 603.52203369]
[-55.52874374 608.23614502]
[-70.18624115 611.48406982]
[-85.09712219 613.23236084]
[-100.10837555 613.46319580]
[-115.06596375 612.17419434]
[-129.81639099 609.37854004]
[-144.20829773 605.10491943]
[-158.09400940 599.39715576]
[-171.33102417 592.31390381]
[-183.78350830 583.92785645]
[-195.32368469 574.32495117]
[-205.83312988 563.60382080]
[-215.20401001 551.87445068]
[-223.34013367 539.25726318]
[-230.15805054 525.88159180]
[-235.58776855 511.88485718]
[-239.57357788 497.41058350]
[-242.07456970 482.60736084]
[-243.06510925 467.62704468]
[-242.53500366 452.62338257]
[-240.48970032 437.75030518]
[-236.95018005 423.16049194]
[-231.95278931 409.00363159]
[-225.54878235 395.42498779]
[-217.80387878 382.56390381]
[-208.79756165 370.55233765]
[-198.62225342 359.51358032]
[-187.38237000 349.56088257]
[-175.19323730 340.79641724]
[-162.17996216 333.31005859]
[-148.47604370 327.17868042]
[-134.22213745 322.46517944]
[-119.56449890 319.21792603]
[-104.65354156 317.47024536]
[-89.64227295 317.24008179]
[-74.68474579 318.52975464]
[-59.93443680 321.32608032]
[-45.54271317 325.60034180]
[-31.65725708 331.30868530]
[-24.58015060 318.08316040]
[-17.50304604 304.85763550]
[-10.42594051 291.63211060]
[-3.34883475 278.40658569]
[3.72827077 265.18103027]
[10.80537605 251.95552063]
[17.88248062 238.72999573]
[24.95958710 225.50445557]
[32.03669357 212.27893066]
[31.21951675 197.40676880]
[44.55252838 188.88963318]
[51.62963104 175.66410828]
[58.70673752 162.43858337]
[65.78384399 149.21305847]
[72.86094666 135.98753357]
[79.83940125 122.70968628]
[86.71881104 109.38025665]
[83.85260773 98.09193420]
[89.27091217 87.78256226]
[100.19384766 83.74141693]
[107.27095032 70.51589203]
[114.34805298 57.29036331]
[121.42516327 44.06483459]
[116.06333923 31.70904732]
[118.75740051 18.71087456]
[128.30441284 9.77014446]
[141.06575012 7.98745537]
[148.33897400 -5.13123894]
[155.61219788 -18.24993324]
[162.88543701 -31.36862755]
[170.15866089 -44.48731995]
[177.43188477 -57.60601425]
[184.70512390 -70.72470856]
[191.97834778 -83.84340668]
[199.25157166 -96.96209717]
[199.17614746 -112.78312683]
[212.11425781 -120.16246033]
[219.38748169 -133.28115845]
[226.66072083 -146.39984131]
[233.93394470 -159.51853943]
[221.49085999 -167.91252136]
[209.82670593 -177.35903931]
[199.03025818 -187.78623962]
[189.18370056 -199.11473083]
[180.36196899 -211.25830078]
[172.63220215 -224.12452698]
[166.05320740 -237.61550903]
[160.67509460 -251.62854004]
[156.53877258 -266.05697632]
[153.67570496 -280.79104614]
[152.10772705 -295.71856689]
[151.84672546 -310.72592163]
[152.89471436 -325.69894409]
[155.24371338 -340.52365112]
[158.87583923 -355.08718872]
[163.76345825 -369.27874756]
[169.86935425 -382.99032593]
[177.14707947 -396.11755371]
[185.54122925 -408.56054688]
[194.98791504 -420.22454834]
[205.41526794 -431.02084351]
[216.74389648 -440.86724854]
[228.88758850 -449.68881226]
[241.75392151 -457.41839600]
[255.24499512 -463.99719238]
[269.25811768 -469.37512207]
[283.68661499 -473.51126099]
[298.42071533 -476.37408447]
[313.34823608 -477.94186401]
[328.35562134 -478.20266724]
[343.32861328 -477.15444946]
[358.15328979 -474.80526733]
[372.71676636 -471.17291260]
[386.90826416 -466.28509521]
[400.61978149 -460.17901611]
[413.74688721 -452.90112305]
[426.18975830 -444.50677490]
[437.85363770 -435.05993652]
[448.64978027 -424.63244629]
[458.49603271 -413.30368042]
[467.31741333 -401.15985107]
[475.04684448 -388.29339600]
[481.62542725 -374.80224609]
[487.00317383 -360.78906250]
[491.13909912 -346.36050415]
[494.00173950 -331.62637329]
[495.56930542 -316.69879150]
[495.82986450 -301.69140625]
[494.78146362 -286.71844482]
[492.43203735 -271.89379883]
[488.79953003 -257.33035278]
[483.91149902 -243.13893127]
[477.80520630 -229.42752075]
[470.52713013 -216.30049133]
[462.13262939 -203.85775757]
[452.68560791 -192.19400024]
[442.25796509 -181.39801025]
[430.92904663 -171.55192566]
[418.78512573 -162.73069763]
[405.91854858 -155.00146484]
[392.42730713 -148.42304993]
[378.41403198 -143.04551697]
[363.98541260 -138.90980530]
[349.25125122 -136.04736328]
[334.32366943 -134.47999573]
[319.31628418 -134.21963501]
[304.34332275 -135.26826477]
[289.51870728 -137.61787415]
[274.95532227 -141.25062561]
[260.76394653 -146.13882446]
[247.05264282 -152.24531555]
[239.77940369 -139.12661743]
[232.50617981 -126.00792694]
[225.23295593 -112.88922882]
[225.82861328 -98.00653839]
[212.37026978 -89.68886566]
[205.09704590 -76.57017517]
[197.82380676 -63.45148087]
[190.55058289 -50.33278656]
[183.27735901 -37.21409225]
[176.00411987 -24.09539795]
[168.73089600 -10.97670364]
[161.45767212 2.14199066]
[154.18443298 15.26068497]
[159.50526428 31.21460342]
[151.48323059 46.37910080]
[134.65069580 51.14194107]
[127.57358551 64.36746979]
[120.49647522 77.59299469]
[113.41937256 90.81852722]
[114.39295197 107.56452179]
[100.04824066 116.25966644]
[93.16883087 129.58909607]
[92.01393127 138.65022278]
[86.08647919 143.06463623]
[79.00936890 156.29016113]
[71.93226624 169.51568604]
[64.85516357 182.74121094]
[57.77805328 195.96675110]
[58.08902740 211.78489685]
[45.26221848 219.35603333]
[38.18511581 232.58157349]
[31.10800934 245.80709839]
[24.03090286 259.03262329]
[16.95379829 272.25814819]
[9.87669277 285.48367310]
[2.79958725 298.70919800]
[-4.27751827 311.93472290]
[-11.35462379 325.16024780]
[-18.43172836 338.38580322]
[-5.97887278 346.77133179]
[5.56172609 356.37371826]
[16.07164192 367.09436035]
[25.44302750 378.82333374]
[33.57971573 391.44018555]
[40.39821243 404.81549072]
[45.82854462 418.81201172]
[49.81499481 433.28610229]
[52.31664658 448.08923340]
[53.30783844 463.06951904]
[52.77838898 478.07321167]
[50.73374176 492.94635010]
[47.19487000 507.53631592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 197]
[48 196]
[49 195]
[50 194]
[51 193]
[52 192]
[53 191]
[54 190]
[55 189]
[56 188]
[58 186]
[59 185]
[60 184]
[61 183]
[62 182]
[63 180]
[64 179]
[67 177]
[68 176]
[69 175]
[70 174]
[74 171]
[75 170]
[76 169]
[77 168]
[78 167]
[79 166]
[80 165]
[81 164]
[82 163]
[84 161]
[85 160]
[86 159]
[87 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
