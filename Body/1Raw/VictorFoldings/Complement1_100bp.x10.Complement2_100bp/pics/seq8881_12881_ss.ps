%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[122.85555267 237.42657471]
[123.20114899 222.42396545]
[124.62840271 207.48539734]
[127.12986755 192.68876648]
[130.69252014 178.11120605]
[135.29776001 163.82872009]
[140.92161560 149.91577148]
[147.53472900 136.44490051]
[134.58172607 128.88050842]
[121.62872314 121.31613922]
[108.67572784 113.75175476]
[91.90509796 114.10147858]
[83.74980164 99.44312286]
[70.68561554 92.07243347]
[57.62142944 84.70174408]
[44.55724716 77.33105469]
[31.49306107 69.96036530]
[39.69354630 82.52030182]
[43.88528442 96.92270660]
[43.70565033 111.92163086]
[39.17017746 126.21951294]
[30.67123604 138.57945251]
[18.94406700 147.93217468]
[5.00318766 153.46859741]
[-9.94537544 154.70974731]
[-24.60842323 151.54824829]
[-37.71745682 144.25761414]
[-48.13840866 133.46856689]
[-54.96976471 120.11444092]
[-57.62054825 105.35051727]
[-55.86143494 90.45402527]
[-49.84460831 76.71365356]
[-40.09058380 65.31808472]
[-27.44318008 57.25315094]
[-12.99652481 53.21654892]
[1.99960017 53.55747986]
[16.24473763 58.24487686]
[5.75723648 47.52049637]
[-4.73026466 36.79611588]
[-15.21776581 26.07173729]
[-25.70526695 15.34735775]
[-36.19276810 4.62297773]
[-47.75300980 14.19482994]
[-60.06420898 22.77934456]
[-73.04226685 30.31788063]
[-86.59853363 36.75894165]
[-100.64039612 42.05852509]
[-115.07193756 46.18043137]
[-129.79457092 49.09650040]
[-144.70773315 50.78681564]
[-159.70954895 51.23983002]
[-174.69752502 50.45244980]
[-189.56929016 48.43004990]
[-204.22325134 45.18644714]
[-218.55931091 40.74380112]
[-232.47952271 35.13245773]
[-245.88880920 28.39074898]
[-258.69555664 20.56472778]
[-270.81228638 11.70785618]
[-282.15625000 1.88063622]
[-292.64993286 -8.84980202]
[-302.22164917 -20.41015625]
[-310.80599976 -32.72145844]
[-318.34439087 -45.69960785]
[-324.78527832 -59.25594711]
[-330.08471680 -73.29787445]
[-334.20645142 -87.72946930]
[-337.12234497 -102.45214081]
[-338.81246948 -117.36531830]
[-339.26531982 -132.36714172]
[-338.47775269 -147.35510254]
[-336.45516968 -162.22685242]
[-333.21139526 -176.88076782]
[-328.76858521 -191.21676636]
[-323.15707397 -205.13691711]
[-316.41519165 -218.54612732]
[-308.58901978 -231.35278320]
[-299.73202515 -243.46942139]
[-289.90466309 -254.81324768]
[-279.17410278 -265.30679321]
[-267.61361694 -274.87838745]
[-255.30221558 -283.46258545]
[-242.32397461 -291.00082397]
[-228.76756287 -297.44155884]
[-214.72557068 -302.74081421]
[-200.29393005 -306.86236572]
[-185.57122803 -309.77810669]
[-170.65802002 -311.46804810]
[-155.65620422 -311.92071533]
[-140.66824341 -311.13296509]
[-125.79652405 -309.11022949]
[-111.14263916 -305.86627197]
[-96.80669403 -301.42327881]
[-82.88661194 -295.81161499]
[-69.47748566 -289.06958008]
[-56.67092133 -281.24325562]
[-44.55439377 -272.38607788]
[-33.21067429 -262.55859375]
[-22.71725273 -251.82791138]
[-13.14581394 -240.26733398]
[-4.56173897 -227.95582581]
[2.97633266 -214.97749329]
[9.41690731 -201.42098999]
[14.71598911 -187.37893677]
[18.83737946 -172.94725037]
[21.75292397 -158.22451782]
[23.44270706 -143.31129456]
[23.89518547 -128.30946350]
[23.10726738 -113.32151031]
[21.08433533 -98.44981384]
[17.84020996 -83.79597473]
[13.39704990 -69.46007538]
[7.78520870 -55.54006577]
[1.04302061 -42.13102341]
[-6.78345776 -29.32454681]
[-15.64076233 -17.20812607]
[-25.46838760 -5.86452341]
[-14.98088646 4.85985661]
[-4.49338579 15.58423615]
[5.99411535 26.30861664]
[16.48161697 37.03299713]
[26.96911812 47.75737381]
[38.86375046 56.89617920]
[51.92793655 64.26686859]
[64.99211884 71.63755798]
[78.05630493 79.00824738]
[91.12049103 86.37893677]
[102.50765228 83.93479919]
[112.60824585 89.73300934]
[116.24010468 100.79875946]
[129.19309998 108.36313629]
[142.14610291 115.92751312]
[155.09910583 123.49189758]
[163.58195496 111.11292267]
[172.93594360 99.37832642]
[183.11228943 88.34928894]
[194.05793762 78.08330536]
[205.71583557 68.63389587]
[218.02519226 60.05033493]
[230.92182922 52.37736893]
[244.33851624 45.65500641]
[258.20529175 39.91828537]
[272.44989014 35.19712067]
[286.99801636 31.51612854]
[301.77383423 28.89449692]
[316.70031738 27.34589386]
[331.69961548 26.87839508]
[346.69357300 27.49443626]
[361.60397339 29.19080544]
[376.35308838 31.95865822]
[390.86404419 35.78356552]
[405.06118774 40.64558792]
[418.87045288 46.51937103]
[432.21990967 53.37429810]
[445.03991699 61.17462158]
[457.26367188 69.87968445]
[468.82739258 79.44409180]
[479.67080688 89.81798553]
[489.73742676 100.94728088]
[498.97473145 112.77394867]
[507.33456421 125.23633575]
[514.77331543 138.26947021]
[521.25225830 151.80538940]
[526.73754883 165.77352905]
[531.20068359 180.10107422]
[534.61828613 194.71331787]
[536.97259521 209.53407288]
[538.25134277 224.48608398]
[538.44787598 239.49137878]
[537.56109619 254.47175598]
[535.59570312 269.34909058]
[532.56188965 284.04580688]
[528.47552490 298.48532104]
[523.35784912 312.59231567]
[517.23559570 326.29324341]
[510.14068604 339.51669312]
[502.11007690 352.19372559]
[493.18563843 364.25823975]
[483.41394043 375.64733887]
[472.84585571 386.30160522]
[461.53656006 396.16555786]
[449.54498291 405.18774414]
[436.93362427 413.32110596]
[423.76828003 420.52325439]
[410.11752319 426.75665283]
[396.05258179 431.98876953]
[381.64675903 436.19235229]
[366.97518921 439.34548950]
[352.11431885 441.43173218]
[337.14166260 442.44021606]
[322.13525391 442.36566162]
[307.17333984 441.20846558]
[292.33392334 438.97467041]
[277.69439697 435.67590332]
[263.33105469 431.32937622]
[249.31880188 425.95773315]
[235.73068237 419.58901978]
[222.63752747 412.25640869]
[210.10762024 403.99813843]
[198.20628357 394.85723877]
[186.99554443 384.88140869]
[176.53387451 374.12265015]
[166.87580872 362.63702393]
[158.07170105 350.48443604]
[150.16744995 337.72824097]
[143.20426941 324.43493652]
[137.21846008 310.67382812]
[132.24122620 296.51669312]
[128.29852295 282.03729248]
[125.41090393 267.31112671]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 133]
[9 132]
[10 131]
[11 130]
[13 127]
[14 126]
[15 125]
[16 124]
[17 123]
[37 122]
[38 121]
[39 120]
[40 119]
[41 118]
[42 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
