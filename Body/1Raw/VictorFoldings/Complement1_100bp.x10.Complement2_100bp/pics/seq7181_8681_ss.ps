%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxUUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[97.51251984 1023.28057861]
[82.54389954 1022.28234863]
[67.62487030 1020.70800781]
[52.77759552 1018.55987549]
[38.02413177 1015.84118652]
[23.38640022 1012.55590820]
[8.88614655 1008.70904541]
[-5.45508337 1004.30615234]
[-19.61598396 999.35388184]
[-33.57551575 993.85955811]
[-47.31294250 987.83135986]
[-60.80784988 981.27825928]
[-74.04019165 974.20989990]
[-86.99030304 966.63690186]
[-99.63895416 958.57043457]
[-111.96734619 950.02252197]
[-123.95716095 941.00585938]
[-135.59059143 931.53381348]
[-146.85034180 921.62048340]
[-157.71969604 911.28063965]
[-168.18251038 900.52954102]
[-178.22322083 889.38323975]
[-187.82691956 877.85827637]
[-196.97933960 865.97174072]
[-205.66688538 853.74133301]
[-213.87664795 841.18524170]
[-221.59643555 828.32208252]
[-228.81477356 815.17095947]
[-235.52091980 801.75146484]
[-241.70494080 788.08343506]
[-247.35763550 774.18731689]
[-252.47059631 760.08361816]
[-257.03625488 745.79339600]
[-261.04779053 731.33782959]
[-264.49926758 716.73840332]
[-267.38555908 702.01678467]
[-269.70236206 687.19488525]
[-271.44625854 672.29473877]
[-272.61462402 657.33843994]
[-273.20574951 642.34820557]
[-273.21875000 627.34637451]
[-272.65359497 612.35516357]
[-271.51116943 597.39685059]
[-269.79309082 582.49365234]
[-267.50198364 567.66778564]
[-264.64120483 552.94122314]
[-261.21502686 538.33581543]
[-257.22854614 523.87329102]
[-252.68766785 509.57519531]
[-247.59915161 495.46267700]
[-241.97056580 481.55673218]
[-235.81024170 467.87805176]
[-229.12734985 454.44692993]
[-221.93182373 441.28332520]
[-214.23434448 428.40679932]
[-206.04635620 415.83648682]
[-197.38002014 403.59106445]
[-188.24821472 391.68869019]
[-178.66448975 380.14709473]
[-168.64311218 368.98339844]
[-158.19895935 358.21420288]
[-147.34753418 347.85549927]
[-136.10498047 337.92269897]
[-124.48798370 328.43051147]
[-112.51381683 319.39306641]
[-100.20025635 310.82379150]
[-87.56560516 302.73544312]
[-74.62863922 295.13998413]
[-61.40856552 288.04873657]
[-47.92503357 281.47222900]
[-34.19807816 275.42022705]
[-20.24808693 269.90173340]
[-6.09579039 264.92492676]
[8.23778725 260.49722290]
[22.73135185 256.62518311]
[37.36336899 253.31457520]
[52.11209869 250.57029724]
[66.95562744 248.39645386]
[81.87191010 246.79624939]
[96.83877563 245.77207947]
[96.39217377 230.77871704]
[95.94556427 215.78536987]
[95.49896240 200.79202271]
[95.05235291 185.79867554]
[94.60574341 170.80532837]
[94.15914154 155.81196594]
[93.71253204 140.81861877]
[93.26593018 125.82527161]
[92.81932068 110.83192444]
[91.92650604 95.85852051]
[90.58827209 80.91833496]
[89.25003815 65.97814941]
[87.91180420 51.03796387]
[73.16050720 47.68318939]
[60.16891479 39.93246841]
[50.20980453 28.54513931]
[44.25886917 14.63681221]
[42.89912415 -0.42991528]
[46.26377869 -15.17895889]
[54.02320480 -28.16535759]
[65.41720581 -38.11683273]
[79.32951355 -44.05844879]
[94.39715576 -45.40810013]
[109.14393616 -42.03356171]
[122.12512970 -34.26543808]
[132.06896973 -22.86476898]
[138.00126648 -8.94847965]
[139.34082031 6.12005615]
[135.95640564 20.86457634]
[128.17958069 33.84056473]
[116.77225494 43.77676392]
[102.85198975 49.69972992]
[104.19022369 64.63991547]
[105.52845764 79.58010101]
[106.86669159 94.52028656]
[109.03148651 96.66578674]
[110.46346283 99.64638519]
[110.85181427 103.19217682]
[109.98979950 106.92221069]
[107.81267548 110.38531494]
[108.25927734 125.37866974]
[108.70588684 140.37202454]
[109.15248871 155.36537170]
[109.59909821 170.35871887]
[110.04570007 185.35206604]
[110.49230957 200.34541321]
[110.93891144 215.33876038]
[111.38552094 230.33212280]
[111.83213043 245.32546997]
[126.83341980 245.45698547]
[141.81849670 246.16651917]
[156.76510620 247.45300293]
[171.65103149 249.31454468]
[186.45414734 251.74838257]
[201.15248108 254.75088501]
[215.72419739 258.31759644]
[230.14762878 262.44320679]
[244.40135193 267.12161255]
[258.46420288 272.34582520]
[272.31524658 278.10812378]
[285.93395996 284.39993286]
[299.30007935 291.21188354]
[312.39376831 298.53387451]
[325.19555664 306.35504150]
[337.68640137 314.66375732]
[349.84777832 323.44763184]
[361.66162109 332.69369507]
[373.11035156 342.38812256]
[384.17700195 352.51660156]
[394.84509277 363.06399536]
[405.09878540 374.01470947]
[414.92285156 385.35241699]
[424.30267334 397.06033325]
[433.22433472 409.12100220]
[441.67459106 421.51654053]
[449.64086914 434.22851562]
[457.11135864 447.23803711]
[464.07492065 460.52581787]
[470.52124023 474.07208252]
[476.44073486 487.85668945]
[481.82458496 501.85919189]
[486.66482544 516.05877686]
[490.95425415 530.43432617]
[494.68649292 544.96453857]
[497.85601807 559.62774658]
[500.45806885 574.40222168]
[502.48883057 589.26605225]
[503.94528198 604.19702148]
[504.82522583 619.17303467]
[505.12738037 634.17187500]
[504.85128784 649.17120361]
[503.99737549 664.14874268]
[502.56686401 679.08227539]
[500.56195068 693.94958496]
[497.98556519 708.72851562]
[494.84155273 723.39727783]
[491.13455200 737.93389893]
[486.87011719 752.31689453]
[482.05456543 766.52490234]
[476.69503784 780.53674316]
[470.79953003 794.33160400]
[464.37677002 807.88903809]
[457.43630981 821.18890381]
[449.98843384 834.21142578]
[442.04428101 846.93719482]
[433.61557007 859.34741211]
[424.71487427 871.42358398]
[415.35540771 883.14776611]
[405.55105591 894.50250244]
[395.31640625 905.47100830]
[384.66665649 916.03698730]
[373.61764526 926.18463135]
[362.18579102 935.89898682]
[350.38803101 945.16552734]
[338.24191284 953.97052002]
[325.76553345 962.30096436]
[312.97735596 970.14434814]
[299.89642334 977.48907471]
[286.54217529 984.32427979]
[272.93441772 990.63970947]
[259.09338379 996.42608643]
[245.03964233 1001.67474365]
[230.79406738 1006.37786865]
[216.37782288 1010.52856445]
[201.81233215 1014.12060547]
[187.11924744 1017.14862061]
[172.32037354 1019.60821533]
[157.43769836 1021.49560547]
[142.49336243 1022.80804443]
[127.50953674 1023.54364014]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[80 129]
[81 128]
[82 127]
[83 126]
[84 125]
[85 124]
[86 123]
[87 122]
[88 121]
[89 120]
[90 115]
[91 114]
[92 113]
[93 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
