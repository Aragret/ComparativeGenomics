%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[81.24793243 523.07843018]
[69.50791931 513.71795654]
[58.84879684 503.14294434]
[49.39553833 491.47747803]
[41.25897598 478.85830688]
[34.53450775 465.43338013]
[29.30097580 451.36007690]
[25.61974144 436.80343628]
[23.53396225 421.93411255]
[23.06809425 406.92645264]
[24.22760201 391.95639038]
[26.99888611 377.19943237]
[31.34945869 362.82864380]
[37.22830963 349.01248169]
[44.56650925 335.91293335]
[53.27803040 323.68359375]
[63.26072311 312.46786499]
[74.39755249 302.39718628]
[86.55795288 293.58969116]
[99.59932709 286.14862061]
[113.36879730 280.16119385]
[127.70490265 275.69766235]
[117.66397858 264.69635010]
[122.60231018 249.66558838]
[119.71703339 234.94569397]
[116.83176422 220.22579956]
[113.94648743 205.50592041]
[103.90556335 194.50459290]
[108.84389496 179.47384644]
[94.49838257 170.69631958]
[90.86832428 153.92915344]
[100.67735291 139.44461060]
[90.47375488 128.59399414]
[95.18775177 113.49139404]
[85.98612213 102.96421051]
[90.13694763 89.61271667]
[77.17433167 80.97511292]
[74.23537445 66.04804993]
[82.54989624 53.74340439]
[79.44578552 39.06809998]
[75.33766937 53.49458313]
[67.02483368 65.98045349]
[55.29962540 75.33563232]
[41.27960205 80.66844940]
[26.30106544 81.47061157]
[11.79167557 77.66566467]
[-0.86562431 69.61626434]
[-10.46442223 58.08964157]
[-16.08982086 44.18443298]
[-17.20564461 29.22599030]
[-13.70553875 14.64006424]
[-5.92311239 1.81688833]
[5.39986420 -8.02131271]
[19.18415642 -13.93682480]
[34.11593246 -15.36581898]
[48.77199554 -12.17209244]
[61.75541687 -4.66005039]
[71.82869720 6.45430613]
[78.03203583 20.11272240]
[78.92485046 5.13931656]
[79.81766510 -9.83408928]
[80.71047974 -24.80749512]
[81.60329437 -39.78089905]
[68.89266205 -48.28895187]
[62.19147491 -61.92680359]
[63.20955276 -76.98767090]
[71.57357025 -89.43352509]
[84.95413208 -95.97769928]
[85.84694672 -110.95110321]
[86.73976135 -125.92450714]
[87.63257599 -140.89791870]
[88.52539062 -155.87132263]
[89.41821289 -170.84472656]
[90.19953156 -185.82435608]
[90.86931610 -200.80940247]
[91.53910065 -215.79443359]
[76.68264771 -217.95413208]
[62.11505508 -221.58235168]
[47.98111343 -226.64300537]
[34.42129135 -233.08583069]
[21.57036400 -240.84677124]
[9.55604649 -249.84870911]
[-1.50225306 -260.00216675]
[-11.49462891 -271.20620728]
[-20.32176971 -283.34954834]
[-27.89594460 -296.31143188]
[-34.14187622 -309.96304321]
[-38.99748993 -324.16873169]
[-42.41452408 -338.78732300]
[-44.35902023 -353.67346191]
[-44.81164932 -368.67926025]
[-43.76791763 -383.65554810]
[-41.23819351 -398.45349121]
[-37.24762344 -412.92602539]
[-31.83586693 -426.92929077]
[-25.05670929 -440.32412720]
[-16.97752762 -452.97738647]
[-7.67861700 -464.76336670]
[2.74760246 -475.56484985]
[14.19750690 -485.27456665]
[26.55730057 -493.79595947]
[39.70413971 -501.04434204]
[53.50736618 -506.94769287]
[67.82978821 -511.44732666]
[82.52906799 -514.49853516]
[97.45910645 -516.07098389]
[112.47151947 -516.14904785]
[127.41709900 -514.73199463]
[142.14730835 -511.83380127]
[156.51576233 -507.48333740]
[170.37963867 -501.72387695]
[183.60115051 -494.61257935]
[196.04888916 -486.22021484]
[207.59915161 -476.63009644]
[218.13714600 -465.93762207]
[227.55812073 -454.24899292]
[235.76846313 -441.68041992]
[242.68655396 -428.35681152]
[248.24365234 -414.41058350]
[252.38452148 -399.98034668]
[255.06800842 -385.20950317]
[256.26742554 -370.24487305]
[255.97088623 -355.23519897]
[254.18130493 -340.32962036]
[250.91648865 -325.67633057]
[246.20887756 -311.42089844]
[240.10525513 -297.70504761]
[232.66629028 -284.66510010]
[223.96591187 -272.43063354]
[214.09060669 -261.12326050]
[203.13848877 -250.85534668]
[191.21844482 -241.72895813]
[178.44892883 -233.83477783]
[164.95684814 -227.25129700]
[150.87629700 -222.04391479]
[136.34722900 -218.26440430]
[121.51403046 -215.95031738]
[106.52413940 -215.12464905]
[105.85435486 -200.13961792]
[105.18457031 -185.15457153]
[108.02626038 -178.33207703]
[104.39161682 -169.95190430]
[103.49880219 -154.97850037]
[102.60597992 -140.00509644]
[101.71316528 -125.03169250]
[100.82035065 -110.05828857]
[99.92753601 -95.08488464]
[112.43563843 -86.99705505]
[119.26143646 -73.64548492]
[118.48260498 -58.57034302]
[110.20829773 -45.82543564]
[96.57669830 -38.88808441]
[95.68388367 -23.91467857]
[94.79106903 -8.94127369]
[93.89825439 6.03213215]
[93.00543976 21.00553894]
[94.12108612 35.96399307]
[97.22519684 50.63929367]
[109.81001282 58.52332687]
[113.16707611 73.36195374]
[104.81224823 86.50860596]
[114.01387787 97.03578949]
[109.86305237 110.38728333]
[120.28868103 122.28756714]
[115.35266113 136.34049988]
[127.41213989 142.33912659]
[133.72276306 154.01759338]
[132.17779541 167.00585938]
[123.56378937 176.58856201]
[133.81108093 188.64276123]
[128.66638184 202.62063599]
[131.55165100 217.34053040]
[134.43692017 232.06042480]
[137.32220459 246.78031921]
[147.56950378 258.83450317]
[142.42478943 272.81237793]
[157.38513184 271.53347778]
[172.39604187 271.87960815]
[187.28152466 273.84667969]
[201.86708069 277.41165161]
[215.98167419 282.53274536]
[229.45982361 289.14990234]
[242.14350891 297.18551636]
[253.88403320 306.54541016]
[264.54373169 317.11981201]
[273.99761963 328.78479004]
[282.13485718 341.40350342]
[288.86004639 354.82809448]
[294.09432983 368.90109253]
[297.77633667 383.45751953]
[299.86291504 398.32675171]
[300.32958984 413.33438110]
[299.17089844 428.30450439]
[296.40042114 443.06161499]
[292.05059814 457.43261719]
[286.17251587 471.24911499]
[278.83499146 484.34906006]
[270.12414551 496.57885742]
[260.14205933 507.79513550]
[249.00576782 517.86639404]
[236.84584045 526.67456055]
[223.80487061 534.11633301]
[210.03572083 540.10449219]
[195.69985962 544.56878662]
[180.96534729 547.45697021]
[166.00492859 548.73504639]
[150.99404907 548.38812256]
[136.10865784 546.42022705]
[121.52330780 542.85449219]
[107.40898895 537.73260498]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 176]
[24 174]
[25 173]
[26 172]
[27 171]
[29 169]
[32 165]
[34 163]
[36 161]
[39 158]
[40 157]
[59 156]
[60 155]
[61 154]
[62 153]
[63 152]
[68 147]
[69 146]
[70 145]
[71 144]
[72 143]
[73 142]
[74 140]
[75 139]
[76 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
