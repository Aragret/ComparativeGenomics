%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[124.69404602 748.65405273]
[111.08243561 742.33282471]
[98.00874329 734.96313477]
[85.55358124 726.59039307]
[73.79373932 717.26617432]
[62.80171967 707.04809570]
[52.64529037 695.99908447]
[43.38707733 684.18719482]
[35.08415222 671.68542480]
[27.78771400 658.57067871]
[21.54274368 644.92388916]
[16.38774490 630.82922363]
[12.35450077 616.37353516]
[9.46787834 601.64593506]
[7.74567413 586.73730469]
[7.19850636 571.73944092]
[7.82974815 556.74493408]
[9.63550854 541.84619141]
[12.60465431 527.13500977]
[16.71887779 512.70214844]
[21.95281601 498.63659668]
[28.27419662 485.02505493]
[35.64404678 471.95144653]
[44.01692963 459.49636841]
[53.34122086 447.73660278]
[63.55943298 436.74468994]
[74.60856628 426.58837891]
[86.42050171 417.33029175]
[98.92240906 409.02749634]
[112.03720856 401.73120117]
[125.68404388 395.48635864]
[139.77877808 390.33151245]
[154.23451233 386.29840088]
[151.34924316 371.57852173]
[148.46397400 356.85861206]
[138.42304993 345.85729980]
[143.36137390 330.82653809]
[133.50056458 323.82003784]
[130.97633362 311.58029175]
[137.67604065 300.55862427]
[135.01025391 285.79742432]
[132.34445190 271.03619385]
[129.67864990 256.27499390]
[127.01286316 241.51376343]
[124.34706879 226.75254822]
[121.13378906 212.10076904]
[117.37749481 197.57870483]
[113.62119293 183.05664062]
[109.86489105 168.53459167]
[106.10858917 154.01252747]
[102.35228729 139.49046326]
[98.59598541 124.96840668]
[94.83969116 110.44635010]
[90.12649536 124.68663788]
[79.76384735 135.53170776]
[65.75260162 140.88752747]
[50.79810715 139.72000122]
[37.78784561 132.25453186]
[29.23389816 119.93260956]
[26.78789330 105.13337708]
[30.92211914 90.71436310]
[40.83832169 79.45962524]
[54.62183380 73.54230499]
[69.61128235 74.10491943]
[82.91242981 81.03884888]
[91.95756531 93.00642395]
[83.21528625 79.81995392]
[89.98454285 66.55245972]
[88.86889648 51.59400177]
[87.75325012 36.63554764]
[86.63759613 21.67709541]
[85.52194977 6.71864271]
[84.40630341 -8.23981094]
[73.00052643 -13.35606384]
[64.89930725 -22.78149796]
[61.59350586 -34.68742752]
[63.65133667 -46.79801941]
[70.62177277 -56.82527542]
[81.13162994 -62.90130997]
[80.46184540 -77.88635254]
[79.79206085 -92.87139130]
[79.12227631 -107.85643005]
[67.74147034 -118.49198151]
[67.27568054 -133.69848633]
[77.48519135 -144.48280334]
[76.81540680 -159.46783447]
[76.14562225 -174.45288086]
[75.47583771 -189.43791199]
[74.80604553 -204.42295837]
[61.60865402 -209.48017883]
[51.36660385 -219.15615845]
[45.60354996 -231.96601868]
[45.15948486 -245.96221924]
[50.06845856 -259.03054810]
[59.55840302 -269.20959473]
[72.17238617 -274.98501587]
[71.72577667 -289.97836304]
[57.50258636 -295.34207153]
[46.41809464 -305.74411011]
[40.16259766 -319.59826660]
[39.69002533 -334.79183960]
[45.07242966 -349.00796509]
[55.48904037 -360.07876587]
[69.35140228 -366.31604004]
[84.54559326 -366.76861572]
[98.75462341 -361.36752319]
[109.81171417 -350.93634033]
[116.03073883 -337.06579590]
[116.46334076 -321.87103271]
[111.04354858 -307.66909790]
[100.59784698 -296.62576294]
[86.71912384 -290.42498779]
[87.16573334 -275.43164062]
[101.88482666 -269.21078491]
[112.45597076 -257.14990234]
[116.72462463 -241.63017273]
[113.78726959 -225.74520874]
[104.18205261 -212.68444824]
[89.79108429 -205.09274292]
[90.46087646 -190.10769653]
[91.13066101 -175.12266541]
[91.80044556 -160.13761902]
[92.47023010 -145.15258789]
[103.60115814 -135.32211304]
[104.49388123 -120.13470459]
[94.10731506 -108.52621460]
[94.77709961 -93.54117584]
[95.44688416 -78.55613708]
[96.11666870 -63.57109833]
[111.28960419 -54.53485489]
[118.06046295 -38.05437088]
[113.54356384 -20.65675163]
[99.36475372 -9.35545921]
[100.48040771 5.60299397]
[101.59605408 20.56144714]
[102.71170044 35.51990128]
[103.82734680 50.47835541]
[104.94300079 65.43680573]
[113.60547638 77.55335236]
[106.91602325 91.89077759]
[109.36174774 106.69004822]
[113.11804962 121.21210480]
[116.87435150 135.73416138]
[120.63064575 150.25622559]
[124.38694763 164.77828979]
[128.14324951 179.30033875]
[131.89955139 193.82240295]
[135.65585327 208.34446716]
[145.40159607 196.94180298]
[160.39733887 197.29922485]
[169.58877563 209.15322876]
[166.20031738 223.76548767]
[152.72982788 230.36441040]
[139.10827637 224.08676147]
[141.77407837 238.84797668]
[144.43988037 253.60919189]
[147.10566711 268.37039185]
[149.77146912 283.13162231]
[152.43725586 297.89285278]
[164.65490723 311.67001343]
[158.08126831 327.94128418]
[168.32856750 339.99545288]
[163.18386841 353.97335815]
[166.06913757 368.69323730]
[168.95440674 383.41314697]
[183.86300659 381.69046021]
[198.86082458 381.14285278]
[213.85536194 381.77362061]
[228.75418091 383.57894897]
[243.46543884 386.54763794]
[257.89840698 390.66140747]
[271.96414185 395.89492798]
[285.57586670 402.21588135]
[298.64971924 409.58532715]
[311.10504150 417.95782471]
[322.86508179 427.28176880]
[333.85729980 437.49963379]
[344.01397705 448.54846191]
[353.27243042 460.36010742]
[361.57559204 472.86175537]
[368.87231445 485.97634888]
[375.11755371 499.62298584]
[380.27285767 513.71759033]
[384.30639648 528.17315674]
[387.19329834 542.90069580]
[388.91580200 557.80932617]
[389.46328735 572.80712891]
[388.83236694 587.80163574]
[387.02688599 602.70043945]
[384.05804443 617.41168213]
[379.94412231 631.84460449]
[374.71047974 645.91027832]
[368.38937378 659.52197266]
[361.01977539 672.59576416]
[352.64715576 685.05096436]
[343.32312012 696.81091309]
[333.10513306 707.80303955]
[322.05618286 717.95959473]
[310.24444580 727.21789551]
[297.74270630 735.52099609]
[284.62805176 742.81756592]
[270.98135376 749.06268311]
[256.88671875 754.21777344]
[242.43106079 758.25122070]
[227.70352173 761.13793945]
[212.79487610 762.86029053]
[197.79705811 763.40765381]
[182.80253601 762.77655029]
[167.90374756 760.97094727]
[153.19255066 758.00195312]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 165]
[34 164]
[35 163]
[37 161]
[40 159]
[41 158]
[42 157]
[43 156]
[44 155]
[45 154]
[46 148]
[47 147]
[48 146]
[49 145]
[50 144]
[51 143]
[52 142]
[53 141]
[66 140]
[68 138]
[69 137]
[70 136]
[71 135]
[72 134]
[73 133]
[79 129]
[80 128]
[81 127]
[82 126]
[85 123]
[86 122]
[87 121]
[88 120]
[89 119]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
