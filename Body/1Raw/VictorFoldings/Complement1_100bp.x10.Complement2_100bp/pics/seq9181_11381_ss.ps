%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[109.21321869 567.20715332]
[106.80571747 552.35449219]
[107.25286865 537.31469727]
[110.53850555 522.63134766]
[116.54386139 508.83523560]
[125.05184174 496.42514038]
[135.75489807 485.84960938]
[148.26609802 477.49102783]
[162.13319397 471.65148926]
[159.02908325 456.97616577]
[155.92497253 442.30087280]
[152.82086182 427.62557983]
[149.71675110 412.95025635]
[146.27362061 409.64059448]
[144.87306213 404.13284302]
[146.74555969 397.79205322]
[144.07977295 383.03085327]
[141.41397095 368.26962280]
[138.74816895 353.50842285]
[126.70698547 340.74218750]
[133.07734680 323.46502686]
[130.19207764 308.74514771]
[125.82067108 302.78588867]
[127.37513733 293.78469849]
[124.70934296 279.02346802]
[114.83332062 267.87387085]
[119.99489594 252.91831970]
[117.32910156 238.15710449]
[114.66329956 223.39588928]
[111.99750519 208.63467407]
[109.33171082 193.87344360]
[106.66591644 179.11222839]
[104.00012207 164.35101318]
[94.12409973 153.20141602]
[99.28566742 138.24584961]
[96.61987305 123.48464203]
[93.95407867 108.72341919]
[90.41440582 94.14704895]
[86.01341248 79.80719757]
[81.50578308 65.50051117]
[76.89176941 51.22777939]
[72.27776337 36.95504761]
[67.66374969 22.68231392]
[63.04974365 8.40958023]
[49.10097885 -3.61179399]
[53.44183731 -20.61543655]
[48.61583710 -34.81789398]
[43.05661392 -48.74969101]
[36.77925110 -62.37300873]
[30.50189209 -75.99632263]
[24.22453117 -89.61963654]
[17.94717026 -103.24295807]
[11.66980934 -116.86627197]
[5.23627567 -123.35066986]
[5.40209007 -130.73947144]
[-0.67174375 -144.45474243]
[-6.74557781 -158.16999817]
[-12.81941128 -171.88526917]
[-18.89324570 -185.60054016]
[-26.64938354 -172.76144409]
[-41.50272751 -170.66903687]
[-52.50394440 -180.86576843]
[-51.54335022 -195.83497620]
[-39.32905197 -204.54191589]
[-24.86623383 -200.56924438]
[-29.90315056 -214.69828796]
[-34.94006729 -228.82731628]
[-39.97698212 -242.95634460]
[-45.01390076 -257.08535767]
[-50.05081558 -271.21438599]
[-64.72812653 -268.01989746]
[-79.69345093 -266.72857666]
[-94.70103455 -267.36166382]
[-109.50444031 -269.90869141]
[-123.86058807 -274.32791138]
[-137.53373718 -280.54669189]
[-150.29934692 -288.46298218]
[-161.94781494 -297.94671631]
[-172.28785706 -308.84222412]
[-181.14967346 -320.97055054]
[-188.38775635 -334.13256836]
[-193.88323975 -348.11212158]
[-197.54588318 -362.67965698]
[-199.31553650 -377.59597778]
[-199.16316223 -392.61614990]
[-197.09124756 -407.49349976]
[-193.13380432 -421.98373413]
[-187.35585022 -435.84893799]
[-179.85223389 -448.86138916]
[-170.74618530 -460.80743408]
[-160.18722534 -471.49090576]
[-148.34875488 -480.73638916]
[-135.42515564 -488.39205933]
[-121.62866211 -494.33218384]
[-107.18581390 -498.45919800]
[-92.33377838 -500.70541382]
[-77.31644440 -501.03387451]
[-62.38039780 -499.43920898]
[-47.77091599 -495.94760132]
[-33.72789001 -490.61639404]
[-20.48192406 -483.53311157]
[-8.25052834 -474.81411743]
[2.76544809 -464.60250854]
[12.38511181 -453.06604004]
[20.45050049 -440.39410400]
[26.82917023 -426.79479980]
[31.41638184 -412.49145508]
[34.13680649 -397.71893311]
[34.94577026 -382.71978760]
[33.82999420 -367.74035645]
[30.80779457 -353.02661133]
[25.92880440 -338.82012939]
[19.27313805 -325.35424805]
[10.95008755 -312.85003662]
[1.09632528 -301.51284790]
[-10.12634087 -291.52886963]
[-22.53362465 -283.06201172]
[-35.92178726 -276.25131226]
[-30.88487053 -262.12228394]
[-25.84795380 -247.99325562]
[-20.81103706 -233.86422729]
[-15.77412128 -219.73519897]
[-10.73720455 -205.60617065]
[-5.17797899 -191.67436218]
[0.89585501 -177.95910645]
[6.96968889 -164.24383545]
[13.04352283 -150.52856445]
[19.11735725 -136.81330872]
[25.29312515 -123.14363098]
[31.57048607 -109.52031708]
[37.84784698 -95.89700317]
[44.12520599 -82.27368164]
[50.40256882 -68.65036774]
[56.67992783 -55.02705002]
[61.79187012 -69.12911224]
[74.70899200 -76.75458527]
[89.52576447 -74.41722107]
[99.46815491 -63.18561554]
[99.99063873 -48.19471741]
[90.85433960 -36.29816055]
[76.23625183 -32.93489075]
[62.81829453 -39.64389038]
[67.64429474 -25.44143486]
[78.35277557 -19.81515884]
[82.48962402 -8.02235508]
[77.32247925 3.79557061]
[81.93648529 18.06830406]
[86.55049896 32.34103775]
[91.16450500 46.61376953]
[95.77851105 60.88650513]
[100.82708740 66.28407288]
[100.35325623 75.40620422]
[104.75425720 89.74604797]
[110.88195038 76.05476379]
[123.82904816 68.48028564]
[138.76658630 69.84770203]
[150.12324524 79.64700317]
[153.66326904 94.22329712]
[148.06631470 108.13997650]
[135.41990662 116.20647430]
[120.44084167 115.41417694]
[108.71529388 106.05762482]
[111.38109589 120.81884766]
[114.04689026 135.58006287]
[124.11357880 147.78547668]
[118.76133728 161.68522644]
[121.42713165 176.44644165]
[124.09292603 191.20765686]
[126.75872040 205.96887207]
[129.42451477 220.73008728]
[132.09031677 235.49130249]
[134.75610352 250.25251770]
[144.82279968 262.45794678]
[139.47056580 276.35766602]
[142.13635254 291.11889648]
[144.91197205 305.85986328]
[147.79724121 320.57974243]
[158.04661560 328.41000366]
[160.14672852 340.72964478]
[153.50939941 350.84262085]
[156.17518616 365.60382080]
[158.84098816 380.36505127]
[161.50677490 395.12628174]
[164.39204407 409.84616089]
[167.49615479 424.52145386]
[170.60026550 439.19677734]
[173.70437622 453.87207031]
[176.80848694 468.54736328]
[191.85244751 468.27166748]
[206.67666626 470.84829712]
[220.74526978 476.18411255]
[233.54966736 484.08624268]
[244.62701416 494.26901245]
[253.57687378 506.36434937]
[260.07568359 519.93493652]
[263.88854980 534.49029541]
[264.87759399 549.50427246]
[263.00711060 564.43402100]
[258.34469604 578.73992920]
[251.05891418 591.90478516]
[241.41310120 603.45269775]
[229.75598145 612.96624756]
[216.50892639 620.10156250]
[202.15083313 624.60058594]
[187.20071411 626.30078125]
[172.19903564 625.14068604]
[157.68806458 621.16217041]
[144.19239807 614.50909424]
[132.19987488 605.42199707]
[122.14401245 594.22930908]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 188]
[10 187]
[11 186]
[12 185]
[13 184]
[16 183]
[17 182]
[18 181]
[19 180]
[21 177]
[22 176]
[24 175]
[25 174]
[27 172]
[28 171]
[29 170]
[30 169]
[31 168]
[32 167]
[33 166]
[35 164]
[36 163]
[37 162]
[38 153]
[39 152]
[40 150]
[41 149]
[42 148]
[43 147]
[44 146]
[46 143]
[47 142]
[48 134]
[49 133]
[50 132]
[51 131]
[52 130]
[53 129]
[55 128]
[56 127]
[57 126]
[58 125]
[59 124]
[65 123]
[66 122]
[67 121]
[68 120]
[69 119]
[70 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
