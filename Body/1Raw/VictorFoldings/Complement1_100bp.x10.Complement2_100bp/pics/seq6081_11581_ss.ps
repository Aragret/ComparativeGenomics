%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[-74.35052490 422.12811279]
[-68.46184540 435.94662476]
[-64.38863373 450.40475464]
[-62.19778442 465.26504517]
[-61.92526627 480.28350830]
[-63.57555771 495.21350098]
[-67.12155914 509.80987549]
[-72.50504303 523.83294678]
[-79.63761139 537.05242920]
[-88.40213013 549.25128174]
[-98.65468597 560.22912598]
[-110.22692108 569.80572510]
[-122.92881012 577.82385254]
[-136.55177307 584.15185547]
[-150.87211609 588.68572998]
[-165.65467834 591.35113525]
[-180.65672302 592.10418701]
[-195.63188171 590.93261719]
[-210.33428955 587.85565186]
[-224.52247620 582.92376709]
[-237.96348572 576.21795654]
[-250.43659973 567.84838867]
[-261.73699951 557.95245361]
[-271.67910767 546.69268799]
[-280.09970093 534.25396729]
[-286.86047363 520.84051514]
[-291.85040283 506.67263794]
[-294.98754883 491.98297119]
[-296.22045898 477.01272583]
[-295.52880859 462.00772095]
[-292.92398071 447.21435547]
[-288.44876099 432.87557983]
[-282.17663574 419.22683716]
[-274.21057129 406.49221802]
[-264.68142700 394.88085938]
[-253.74563599 384.58343506]
[-241.58279419 375.76904297]
[-228.39262390 368.58239746]
[-214.39172363 363.14154053]
[-199.80998230 359.53579712]
[-184.88687134 357.82437134]
[-169.86741638 358.03540039]
[-154.99827576 360.16537476]
[-140.52359009 364.17935181]
[-126.68106842 370.01141357]
[-113.69800568 377.56576538]
[-104.55920410 365.67114258]
[-95.50920105 353.70880127]
[-86.54850769 341.67941284]
[-77.58781433 329.65005493]
[-68.62711334 317.62066650]
[-59.66641998 305.59127808]
[-58.19161606 298.34927368]
[-50.48167419 293.45083618]
[-41.34287262 281.55621338]
[-32.20407104 269.66159058]
[-23.06526756 257.76693726]
[-13.92646599 245.87231445]
[-21.61286736 229.46226501]
[-19.89697838 211.33717346]
[-9.16780949 196.52317810]
[7.67423916 189.17222595]
[26.00099754 191.39863586]
[34.59955978 179.10780334]
[43.19812393 166.81697083]
[51.79668808 154.52612305]
[60.39525223 142.23529053]
[61.65378189 134.95257568]
[69.21446228 129.82676697]
[77.99506378 117.66530609]
[86.77566528 105.50385284]
[88.38666534 91.61514282]
[101.06288147 85.71554565]
[102.11309814 79.18801880]
[105.75540924 74.82561493]
[110.29039764 73.32796478]
[119.42919922 61.43333435]
[104.44414520 60.76384354]
[95.50145721 48.72107697]
[99.19334412 34.18250656]
[112.79829407 27.86543274]
[126.28723907 34.42656326]
[129.71697998 49.02766418]
[139.71514893 37.84568787]
[149.62980652 26.58959198]
[152.83001709 11.09542656]
[167.01515198 6.55324936]
[176.84573364 -4.77634382]
[186.67631531 -16.10593796]
[187.34863281 -20.39568710]
[189.16806030 -23.89628792]
[191.74563599 -26.34403419]
[194.64675903 -27.62861252]
[197.44506836 -27.79473495]
[207.93257141 -38.51911545]
[218.42007446 -49.24349594]
[228.90757751 -59.96787262]
[239.39506531 -70.69225311]
[249.88256836 -81.41663361]
[260.37008667 -92.14101410]
[250.71697998 -103.63817596]
[242.23731995 -116.02615356]
[235.01272583 -129.18563843]
[229.11279297 -142.98989868]
[224.59436035 -157.30598450]
[221.50090027 -171.99603271]
[219.86224365 -186.91854858]
[219.69416809 -201.92984009]
[220.99827576 -216.88529968]
[223.76200867 -231.64093018]
[227.95875549 -246.05461121]
[233.54811096 -259.98751831]
[240.47621155 -273.30548096]
[248.67637634 -285.88021851]
[258.06961060 -297.59063721]
[268.56542969 -308.32397461]
[280.06277466 -317.97683716]
[292.45092773 -326.45626831]
[305.61056519 -333.68057251]
[319.41494751 -339.58023071]
[333.73110962 -344.09838867]
[348.42123413 -347.19155884]
[363.34378052 -348.82989502]
[378.35507202 -348.99768066]
[393.31051636 -347.69329834]
[408.06607056 -344.92926025]
[422.47967529 -340.73220825]
[436.41247559 -335.14257812]
[449.73028564 -328.21420288]
[462.30487061 -320.01379395]
[474.01510620 -310.62033081]
[484.74822998 -300.12429810]
[494.40084839 -288.62673950]
[502.88003540 -276.23843384]
[510.10409546 -263.07864380]
[516.00347900 -249.27415466]
[520.52136230 -234.95788574]
[523.61419678 -220.26771545]
[525.25225830 -205.34513855]
[525.41973877 -190.33384705]
[524.11505127 -175.37843323]
[521.35070801 -160.62290955]
[517.15338135 -146.20941162]
[511.56347656 -132.27671814]
[504.63485718 -118.95903778]
[496.43417358 -106.38462067]
[487.04049683 -94.67456818]
[476.54421997 -83.94165802]
[465.04647827 -74.28926086]
[452.65798950 -65.81033325]
[439.49807739 -58.58653641]
[425.69348145 -52.68743515]
[411.37710571 -48.16984940]
[396.68688965 -45.07728195]
[381.76425171 -43.43951797]
[366.75296021 -43.27233505]
[351.79757690 -44.57733917]
[337.04211426 -47.34196091]
[322.62869263 -51.53957748]
[308.69610596 -57.12976074]
[295.37857056 -64.05867004]
[282.80432129 -72.25958252]
[271.09445190 -81.65351105]
[260.60696411 -70.92913055]
[250.11944580 -60.20475388]
[239.63195801 -49.48037338]
[229.14445496 -38.75599289]
[218.65695190 -28.03161240]
[208.16944885 -17.30723381]
[198.00590515 -6.27535629]
[188.17532349 5.05423689]
[178.34474182 16.38382912]
[175.84767151 31.06762695]
[160.95939636 36.42017365]
[158.95004272 43.53243637]
[150.89712524 47.84386063]
[140.89895630 59.02583313]
[131.32383728 70.57213593]
[122.18502808 82.46676636]
[113.22433472 94.49614716]
[111.61333466 108.38485718]
[98.93711853 114.28445435]
[90.15651703 126.44591522]
[81.37591553 138.60736084]
[72.68608856 150.83384705]
[64.08752441 163.12469482]
[55.48896408 175.41552734]
[46.89039993 187.70635986]
[38.29183578 199.99720764]
[44.72875977 210.14680481]
[47.35870361 221.83871460]
[45.89638901 233.69834900]
[40.53625870 244.33943176]
[31.92699051 252.52603149]
[21.09308624 257.31616211]
[9.31297493 258.17010498]
[-2.03183270 255.01110840]
[-11.17063522 266.90573120]
[-20.30943680 278.80038452]
[-29.44824028 290.69500732]
[-38.58704376 302.58963013]
[-47.63704300 314.55197144]
[-56.59773636 326.58135986]
[-65.55843353 338.61074829]
[-74.51912689 350.64010620]
[-83.47982788 362.66949463]
[-86.09667206 371.42105103]
[-92.66457367 374.80993652]
[-101.80337524 386.70455933]
[-91.15930176 397.30325317]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 209]
[47 208]
[48 206]
[49 205]
[50 204]
[51 203]
[52 202]
[54 201]
[55 200]
[56 199]
[57 198]
[58 197]
[63 189]
[64 188]
[65 187]
[66 186]
[67 185]
[69 184]
[70 183]
[71 182]
[73 180]
[76 179]
[77 178]
[83 177]
[84 176]
[85 174]
[87 172]
[88 171]
[89 170]
[94 169]
[95 168]
[96 167]
[97 166]
[98 165]
[99 164]
[100 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
