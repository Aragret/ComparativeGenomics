%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[125.90167236 412.50732422]
[120.00843811 398.70663452]
[115.10336304 384.52462769]
[111.21090698 370.03195190]
[108.35044098 355.30081177]
[106.53623199 340.40457153]
[105.77730560 325.41748047]
[106.07745361 310.41418457]
[107.43517303 295.46945190]
[109.84370422 280.65768433]
[113.29104614 266.05273438]
[117.76001740 251.72734070]
[123.22836304 237.75285339]
[129.66883850 224.19892883]
[137.04936218 211.13305664]
[145.33314514 198.62034607]
[154.47894287 186.72314453]
[164.44117737 175.50071716]
[153.95367432 164.77633667]
[143.46617126 154.05195618]
[132.89912415 143.40596008]
[122.25311279 132.83891296]
[111.60710907 122.27185822]
[100.96109772 111.70481110]
[104.50010681 126.28134918]
[101.88452911 141.05154419]
[93.55513000 153.52636719]
[80.91557312 161.60359192]
[66.09583282 163.92204285]
[51.59329605 160.09104919]
[39.85190201 150.75619507]
[32.85027695 137.49055481]
[31.76832199 122.52961731]
[36.78836060 108.39458466]
[47.06443024 97.46744537]
[60.86483383 91.58961487]
[75.86396027 91.75161743]
[89.53553009 97.92711639]
[81.12091064 85.50962067]
[72.70629120 73.09212494]
[64.19946289 60.73761749]
[55.60090256 48.44678116]
[47.00233841 36.15594101]
[38.40377426 23.86510468]
[21.94719124 25.46907806]
[7.01282501 18.59446907]
[-2.36278963 5.20362377]
[-3.69827223 -10.99428749]
[3.27650666 -25.57046509]
[-5.50409651 -37.73191833]
[-14.28469944 -49.89337540]
[-23.06530380 -62.05483246]
[-31.84590530 -74.21628571]
[-44.81972122 -66.66334534]
[-58.47138596 -60.41844559]
[-72.66943359 -55.54173279]
[-87.27711487 -52.08016968]
[-102.15375519 -50.06710052]
[-117.15606689 -49.52190781]
[-132.13958740 -50.44984436]
[-146.95999146 -52.84196854]
[-161.47456360 -56.67525101]
[-175.54350281 -61.91276550]
[-189.03134155 -68.50408173]
[-201.80813599 -76.38570404]
[-213.75086975 -85.48174286]
[-224.74452209 -95.70458221]
[-234.68321228 -106.95577240]
[-243.47120667 -119.12696075]
[-251.02389526 -132.10092163]
[-257.26852417 -145.75271606]
[-262.14495850 -159.95086670]
[-265.60620117 -174.55860901]
[-267.61898804 -189.43528748]
[-268.16387939 -204.43762207]
[-267.23565674 -219.42111206]
[-264.84323120 -234.24148560]
[-261.00964355 -248.75596619]
[-255.77185059 -262.82479858]
[-249.18026733 -276.31250000]
[-241.29838562 -289.08914185]
[-232.20211792 -301.03170776]
[-221.97906494 -312.02514648]
[-210.72766113 -321.96362305]
[-198.55630493 -330.75137329]
[-185.58218384 -338.30380249]
[-171.93026733 -344.54815674]
[-157.73202515 -349.42428589]
[-143.12420654 -352.88525391]
[-128.24748230 -354.89773560]
[-113.24514771 -355.44232178]
[-98.26167297 -354.51379395]
[-83.44136047 -352.12109375]
[-68.92694092 -348.28723145]
[-54.85820389 -343.04913330]
[-41.37064362 -336.45727539]
[-28.59415436 -328.57516479]
[-16.65178108 -319.47863770]
[-5.65854168 -309.25537109]
[4.27969122 -298.00375366]
[13.06720543 -285.83221436]
[20.61936951 -272.85797119]
[26.86344910 -259.20593262]
[31.73931122 -245.00758362]
[35.19999695 -230.39968872]
[37.21217346 -215.52293396]
[37.75646591 -200.52058411]
[36.82763290 -185.53712463]
[34.43461609 -170.71685791]
[30.60046577 -156.20251465]
[25.36210442 -142.13388062]
[18.76998520 -128.64645386]
[10.88759232 -115.87012482]
[1.79084074 -103.92793274]
[-8.43266010 -92.93489838]
[-19.68445015 -82.99688721]
[-10.90384674 -70.83543396]
[-2.12324405 -58.67398071]
[6.65735912 -46.51252365]
[15.43796253 -34.35106659]
[28.90347481 -36.63077545]
[42.10091019 -32.86827850]
[52.43912506 -23.74301338]
[57.86285782 -10.99305820]
[57.26119995 2.91572213]
[50.69461060 15.26654053]
[59.29317474 27.55737877]
[67.89173889 39.84821701]
[76.49030304 52.13905334]
[82.90032959 55.81782150]
[85.12378693 64.67750549]
[93.53840637 77.09500122]
[101.95302582 89.51249695]
[111.52814484 101.05879974]
[122.17415619 111.62584686]
[132.82015991 122.19289398]
[143.46617126 132.75994873]
[151.76142883 136.58441162]
[154.19055176 143.56446838]
[164.67805481 154.28883362]
[175.16555786 165.01321411]
[186.60765076 155.30409241]
[198.70613098 146.42626953]
[211.40071106 138.42396545]
[224.62812805 131.33708191]
[238.32252502 125.20088959]
[252.41563416 120.04598236]
[266.83724976 115.89803314]
[281.51556396 112.77770233]
[296.37741089 110.70054626]
[311.34875488 109.67691040]
[326.35501099 109.71188354]
[341.32141113 110.80530548]
[356.17340088 112.95172882]
[370.83700562 116.14044952]
[385.23913574 120.35558319]
[399.30807495 125.57614136]
[412.97369385 131.77610779]
[426.16793823 138.92457581]
[438.82507324 146.98597717]
[450.88201904 155.92010498]
[462.27874756 165.68246460]
[472.95843506 176.22442627]
[482.86791992 187.49346924]
[491.95779419 199.43345642]
[500.18276978 211.98487854]
[507.50192261 225.08523560]
[513.87872314 238.66923523]
[519.28143311 252.66921997]
[523.68316650 267.01541138]
[527.06195068 281.63638306]
[529.40100098 296.45928955]
[530.68859863 311.41024780]
[530.91833496 326.41476440]
[530.08911133 341.39813232]
[528.20501709 356.28570557]
[525.27545166 371.00326538]
[521.31506348 385.47750854]
[516.34350586 399.63635254]
[510.38558960 413.40921021]
[503.47097778 426.72750854]
[495.63415527 439.52490234]
[486.91409302 451.73757935]
[477.35430908 463.30474854]
[467.00238037 474.16876221]
[455.90991211 484.27548218]
[444.13214111 493.57458496]
[431.72778320 502.01971436]
[418.75857544 509.56881714]
[405.28918457 516.18426514]
[391.38668823 521.83312988]
[377.12036133 526.48724365]
[362.56127930 530.12347412]
[347.78195190 532.72357178]
[332.85604858 534.27471924]
[317.85791016 534.76916504]
[302.86224365 534.20440674]
[287.94375610 532.58325195]
[273.17681885 529.91375732]
[258.63494873 526.20935059]
[244.39059448 521.48834229]
[230.51475525 515.77429199]
[217.07655334 509.09573364]
[204.14291382 501.48583984]
[191.77830505 492.98260498]
[180.04429626 483.62835693]
[168.99935913 473.46969604]
[158.69851685 462.55725098]
[149.19309998 450.94537354]
[140.53044128 438.69189453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 141]
[19 140]
[20 139]
[21 137]
[22 136]
[23 135]
[24 134]
[38 133]
[39 132]
[40 131]
[41 129]
[42 128]
[43 127]
[44 126]
[49 120]
[50 119]
[51 118]
[52 117]
[53 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
