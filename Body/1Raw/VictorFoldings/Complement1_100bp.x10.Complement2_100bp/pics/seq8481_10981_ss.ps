%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[161.66322327 855.85809326]
[146.99273682 852.71911621]
[132.47787476 848.92510986]
[118.14782715 844.48370361]
[104.03147888 839.40386963]
[90.15724945 833.69580078]
[76.55307770 827.37103271]
[63.24637222 820.44232178]
[50.26391983 812.92352295]
[37.63186646 804.82989502]
[25.37565804 796.17761230]
[13.51997089 786.98419189]
[2.08868337 777.26818848]
[-8.89518356 767.04901123]
[-19.40951157 756.34741211]
[-29.43312263 745.18481445]
[-38.94583511 733.58374023]
[-47.92848587 721.56762695]
[-56.36299133 709.16052246]
[-64.23236084 696.38757324]
[-71.52075195 683.27435303]
[-78.21347809 669.84741211]
[-84.29706573 656.13366699]
[-89.75926208 642.16082764]
[-94.58907318 627.95703125]
[-98.77676392 613.55078125]
[-102.31390381 598.97119141]
[-105.19337463 584.24755859]
[-107.40936279 569.40960693]
[-108.95742798 554.48712158]
[-109.83443451 539.51025391]
[-110.03862000 524.50915527]
[-109.56958008 509.51391602]
[-108.42825317 494.55487061]
[-106.61693573 479.66207886]
[-104.13928223 464.86553955]
[-101.00027466 450.19506836]
[-97.20624542 435.68020630]
[-92.76482391 421.35018921]
[-87.68495941 407.23382568]
[-81.97688293 393.35961914]
[-75.65209198 379.75546265]
[-68.72331238 366.44876099]
[-61.20451355 353.46633911]
[-53.11082840 340.83428955]
[-44.45856094 328.57809448]
[-35.26512909 316.72244263]
[-25.54905319 305.29116821]
[-15.32989788 294.30731201]
[-4.62824297 283.79299927]
[6.53435898 273.76940918]
[18.13542747 264.25671387]
[30.15160179 255.27409363]
[42.55868149 246.83961487]
[55.33167648 238.97027588]
[68.44487000 231.68190002]
[81.87184906 224.98921204]
[95.58557892 218.90563965]
[109.55843353 213.44346619]
[123.76228333 208.61369324]
[119.57527161 194.20989990]
[115.38825989 179.80612183]
[104.40588379 169.74447632]
[107.98354340 154.33308411]
[103.79653168 139.92930603]
[99.60951996 125.52552795]
[95.42251587 111.12174225]
[91.02151489 96.78189850]
[86.40750885 82.50916290]
[81.79349518 68.23642731]
[70.68625641 61.67959595]
[67.13706970 49.69681549]
[72.52565002 38.86677170]
[68.12464905 24.52692604]
[63.72365189 10.18707943]
[59.32265472 -4.15276814]
[54.92165756 -18.49261475]
[40.01871872 -16.50456619]
[24.99182129 -16.99672699]
[10.25090885 -19.95567131]
[-3.80187678 -25.30067635]
[-16.78316498 -32.88592529]
[-28.33881760 -42.50448990]
[-38.15358353 -53.89396667]
[-45.95971680 -66.74364471]
[-51.54425430 -80.70297241]
[-54.75484848 -95.39112854]
[-55.50390625 -110.40740967]
[-53.77100372 -125.34216309]
[-49.60340500 -139.78796387]
[-43.11481094 -153.35070801]
[-34.48223495 -165.66040039]
[-23.94117737 -176.38121033]
[-11.77920723 -185.22068787]
[1.67188680 -191.93768311]
[16.04515076 -196.34893799]
[30.94846916 -198.33410645]
[45.97527313 -197.83905029]
[60.71561432 -194.87727356]
[74.76737213 -189.52955627]
[87.74720001 -181.94180298]
[99.30099487 -172.32101440]
[109.11357117 -160.92965698]
[116.91722870 -148.07847595]
[122.49906921 -134.11807251]
[125.70683289 -119.42929077]
[126.45300293 -104.41286469]
[124.71722412 -89.47844696]
[120.54683685 -75.03345490]
[114.05563354 -61.47195816]
[105.42068481 -49.16393280]
[94.87756348 -38.44514465]
[82.71389008 -29.60800934]
[69.26150513 -22.89361382]
[73.66249847 -8.55376625]
[78.06349945 5.78608084]
[82.46450043 20.12592888]
[86.86549377 34.46577454]
[100.33838654 45.71068954]
[96.06623077 63.62242126]
[100.68023682 77.89515686]
[105.29425049 92.16788483]
[109.30242157 95.55144501]
[111.12953186 100.93985748]
[109.82629395 106.93473053]
[114.01330566 121.33851624]
[118.20031738 135.74229431]
[122.38732910 150.14607239]
[133.66918945 161.23797607]
[129.79203796 175.61911011]
[133.97904968 190.02290344]
[138.16606140 204.42668152]
[152.74563599 200.88945007]
[167.46923828 198.00990295]
[182.30718994 195.79382324]
[197.22964478 194.24568176]
[212.20651245 193.36859131]
[227.20765686 193.16430664]
[242.20286560 193.63327026]
[257.16192627 194.77452087]
[272.05471802 196.58573914]
[286.85125732 199.06330872]
[301.52175903 202.20223999]
[316.03665161 205.99618530]
[330.36669922 210.43753052]
[344.48306274 215.51730347]
[358.35733032 221.22531128]
[371.96151733 227.55001831]
[385.26824951 234.47871399]
[398.25073242 241.99745178]
[410.88281250 250.09106445]
[423.13906860 258.74325562]
[434.99478149 267.93661499]
[446.42611694 277.65264893]
[457.41000366 287.87173462]
[467.92437744 298.57333374]
[477.94802856 309.73587036]
[487.46078491 321.33688354]
[496.44348145 333.35299683]
[504.87805176 345.76004028]
[512.74743652 358.53298950]
[520.03588867 371.64614868]
[526.72869873 385.07308960]
[532.81231689 398.78677368]
[538.27453613 412.75961304]
[543.10443115 426.96340942]
[547.29217529 441.36962891]
[550.82934570 455.94921875]
[553.70886230 470.67282104]
[555.92492676 485.51077271]
[557.47308350 500.43322754]
[558.35009766 515.41009521]
[558.55438232 530.41125488]
[558.08538818 545.40643311]
[556.94409180 560.36553955]
[555.13287354 575.25830078]
[552.65527344 590.05487061]
[549.51629639 604.72534180]
[545.72235107 619.24023438]
[541.28094482 633.57025146]
[536.20117188 647.68664551]
[530.49310303 661.56085205]
[524.16839600 675.16503906]
[517.23968506 688.47174072]
[509.72091675 701.45422363]
[501.62728882 714.08630371]
[492.97503662 726.34252930]
[483.78167725 738.19824219]
[474.06564331 749.62951660]
[463.84652710 760.61340332]
[453.14489746 771.12774658]
[441.98233032 781.15136719]
[430.38131714 790.66412354]
[418.36517334 799.64678955]
[405.95812988 808.08135986]
[393.18515015 815.95074463]
[380.07199097 823.23913574]
[366.64501953 829.93188477]
[352.93133545 836.01550293]
[338.95849609 841.47772217]
[324.75466919 846.30755615]
[310.34844971 850.49530029]
[295.76885986 854.03247070]
[281.04525757 856.91192627]
[266.20727539 859.12799072]
[251.28483582 860.67608643]
[236.30795288 861.55310059]
[221.30680847 861.75732422]
[206.31159973 861.28826904]
[191.35253906 860.14697266]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 132]
[61 131]
[62 130]
[64 128]
[65 127]
[66 126]
[67 125]
[68 122]
[69 121]
[70 120]
[73 118]
[74 117]
[75 116]
[76 115]
[77 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
