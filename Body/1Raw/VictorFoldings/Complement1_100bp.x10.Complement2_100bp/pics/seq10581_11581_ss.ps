%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCGxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[134.38230896 592.31488037]
[147.29281616 584.50585938]
[143.10580444 570.10211182]
[132.12342834 560.04046631]
[135.70109558 544.62908936]
[131.51408386 530.22528076]
[127.32707214 515.82147217]
[123.14006042 501.41772461]
[118.95304871 487.01391602]
[114.76603699 472.61013794]
[98.32505035 471.84323120]
[83.11648560 465.48403931]
[70.98526764 454.28488159]
[63.40953445 439.58645630]
[61.32053757 423.15716553]
[64.98819733 406.98046875]
[73.98637390 393.01547241]
[87.24230957 382.95947266]
[82.62829590 368.68673706]
[78.01428986 354.41400146]
[73.40027618 340.14126587]
[71.22756958 354.98306274]
[66.05690765 369.06372070]
[58.10815048 381.78445435]
[47.71928787 392.60440063]
[35.33205032 401.06350708]
[21.47315979 406.80206299]
[6.73189640 409.57608032]
[-8.26493073 409.26760864]
[-22.87965012 405.88973999]
[-36.49083710 399.58612061]
[-48.51973343 390.62478638]
[-58.45487213 379.38674927]
[-65.87379456 366.34991455]
[-70.46105957 352.06854248]
[-72.02159882 337.14996338]
[-70.48906708 322.22845459]
[-65.92861938 307.93850708]
[-58.53417969 294.88775635]
[-48.62015915 283.63110352]
[-36.60810471 274.64718628]
[-23.00877571 268.31802368]
[-8.40042305 264.91275024]
[6.59579945 264.57611084]
[21.34224319 267.32244873]
[35.21188354 273.03497314]
[47.61497498 281.47082520]
[58.02413559 292.27124023]
[65.99675751 304.97705078]
[71.19388580 319.04812622]
[64.82264709 305.58496094]
[73.95366669 292.66461182]
[75.51419067 277.74603271]
[77.07470703 262.82742310]
[78.63523102 247.90881348]
[69.70069122 240.81372070]
[65.25460815 230.17662048]
[66.50825500 218.59550476]
[73.26520538 208.95991516]
[83.94155884 203.72999573]
[85.94557190 188.86447144]
[87.94958496 173.99894714]
[89.95359802 159.13340759]
[91.18058014 144.18368530]
[91.62718201 129.19032288]
[92.07379150 114.19698334]
[84.61260986 105.25426483]
[85.04602814 93.61582184]
[93.15166473 85.25281525]
[93.82144928 70.26777649]
[84.95865631 54.12676239]
[94.97286987 39.71556473]
[95.41947174 24.72221565]
[88.09648132 10.69779396]
[96.20929718 -1.79346740]
[96.65589905 -16.78681755]
[89.33290863 -30.81123924]
[97.44571686 -43.30250168]
[97.89232635 -58.29585266]
[98.33893585 -73.28919983]
[98.78553772 -88.28255463]
[99.12051392 -103.27880859]
[99.34384155 -118.27714539]
[99.56716919 -133.27548218]
[99.56716919 -148.27548218]
[99.34384155 -163.27381897]
[99.12051392 -178.27215576]
[98.89718628 -193.27049255]
[98.67385864 -208.26882935]
[98.45053101 -223.26716614]
[98.22720337 -238.26550293]
[87.16809845 -249.23519897]
[87.15527344 -264.44882202]
[97.68134308 -274.92437744]
[97.45801544 -289.92272949]
[97.12303925 -304.91897583]
[96.67643738 -319.91232300]
[82.45324707 -325.27603149]
[71.36875153 -335.67807007]
[65.11325836 -349.53222656]
[64.64068604 -364.72579956]
[70.02308655 -378.94192505]
[80.43970490 -390.01272583]
[94.30206299 -396.25000000]
[109.49625397 -396.70257568]
[123.70528412 -391.30148315]
[134.76237488 -380.87030029]
[140.98139954 -366.99975586]
[141.41400146 -351.80499268]
[135.99420166 -337.60305786]
[125.54850769 -326.55972290]
[111.66978455 -320.35894775]
[112.11639404 -305.36560059]
[115.45764923 -298.77334595]
[112.45635986 -290.14605713]
[112.67968750 -275.14770508]
[123.51298523 -264.99020386]
[123.95313263 -249.78292847]
[113.22554016 -238.48883057]
[113.44886780 -223.49049377]
[113.67219543 -208.49215698]
[113.89552307 -193.49382019]
[114.11885071 -178.49548340]
[114.34217834 -163.49714661]
[114.56550598 -148.49880981]
[117.30770874 -144.58865356]
[117.62268829 -138.91433716]
[114.56550598 -133.05215454]
[114.34217834 -118.05381775]
[114.11885071 -103.05548096]
[117.16241455 -96.32061005]
[113.77888489 -87.83594513]
[113.33228302 -72.84259796]
[112.88567352 -57.84924698]
[112.43907166 -42.85589600]
[119.79399872 -29.90389824]
[111.64924622 -16.34021187]
[111.20264435 -1.34686148]
[118.55757141 11.60513592]
[110.41281891 25.16882133]
[109.96621704 40.16217041]
[118.03029633 49.17866898]
[117.78092194 61.67353058]
[108.80648804 70.93756104]
[108.13670349 85.92259979]
[116.24847412 100.60508728]
[107.06713867 114.64358521]
[106.62053680 129.63693237]
[106.17392731 144.63027954]
[117.03125000 134.28047180]
[131.99267578 133.20553589]
[144.21806335 141.89691162]
[148.11811829 156.38102722]
[141.90977478 170.03593445]
[128.43142700 176.61880493]
[113.84518433 173.12002563]
[104.81912994 161.13742065]
[102.81511688 176.00296021]
[100.81110382 190.86848450]
[98.80709076 205.73400879]
[110.85985565 220.35061646]
[108.44275665 238.81871033]
[93.55384064 249.46932983]
[91.99331665 264.38793945]
[90.43279266 279.30654907]
[88.87226868 294.22515869]
[95.13188171 308.75540161]
[86.11248779 320.60864258]
[87.67301178 335.52725220]
[92.28702545 349.79998779]
[96.90103149 364.07272339]
[101.51503754 378.34545898]
[115.13417053 378.23107910]
[128.21806335 381.95236206]
[139.71008301 389.19894409]
[148.68490601 399.37612915]
[154.42306519 411.65377808]
[156.46861267 425.03387451]
[154.66528320 438.43179321]
[149.16845703 450.76416016]
[140.43180847 461.03643799]
[129.16981506 468.42312622]
[133.35682678 482.82693481]
[137.54383850 497.23071289]
[141.73085022 511.63449097]
[145.91786194 526.03826904]
[150.10487366 540.44207764]
[161.38673401 551.53393555]
[157.50959778 565.91510010]
[161.69660950 580.31884766]
[176.78150940 579.98992920]
[191.43730164 583.57745361]
[204.66473389 590.83673096]
[215.56192017 601.27288818]
[223.38591003 614.17437744]
[227.60321045 628.66149902]
[227.92630005 643.74652100]
[224.33314514 658.40093994]
[217.06872559 671.62554932]
[206.62835693 682.51873779]
[193.72387695 690.33770752]
[179.23512268 694.54943848]
[164.14997864 694.86669922]
[149.49696350 691.26788330]
[136.27513123 683.99835205]
[125.38600159 673.55377197]
[117.57199097 660.64630127]
[113.36587524 646.15594482]
[113.05442810 631.07061768]
[116.65890503 616.41900635]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 190]
[3 189]
[5 187]
[6 186]
[7 185]
[8 184]
[9 183]
[10 182]
[18 172]
[19 171]
[20 170]
[21 169]
[50 168]
[52 166]
[53 165]
[54 164]
[55 163]
[60 160]
[61 159]
[62 158]
[63 157]
[64 149]
[65 148]
[66 147]
[69 145]
[70 144]
[72 141]
[73 140]
[75 138]
[76 137]
[78 135]
[79 134]
[80 133]
[81 132]
[82 130]
[83 129]
[84 128]
[85 125]
[86 124]
[87 123]
[88 122]
[89 121]
[90 120]
[91 119]
[94 116]
[95 115]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
