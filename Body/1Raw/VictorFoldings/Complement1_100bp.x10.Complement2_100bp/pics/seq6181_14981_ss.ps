%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[51.33658218 627.46636963]
[37.17571259 632.42974854]
[22.71776962 636.44647217]
[8.02597332 639.49877930]
[-6.83543348 641.57348633]
[-21.80146408 642.66137695]
[-36.80667877 642.75787354]
[-51.78545761 641.86236572]
[-66.67230225 639.97888184]
[-81.40212250 637.11566162]
[-95.91049957 633.28515625]
[-110.13399506 628.50415039]
[-124.01042175 622.79357910]
[-137.47908020 616.17840576]
[-150.48109436 608.68750000]
[-162.95959473 600.35369873]
[-174.86003113 591.21337891]
[-186.13035583 581.30651855]
[-196.72129822 570.67651367]
[-206.58651733 559.36975098]
[-215.68290710 547.43566895]
[-223.97067261 534.92651367]
[-231.41357422 521.89697266]
[-237.97906494 508.40405273]
[-243.63844299 494.50665283]
[-248.36697388 480.26562500]
[-252.14395142 465.74322510]
[-254.95286560 451.00296021]
[-256.78146362 436.10928345]
[-257.62170410 421.12728882]
[-257.46994019 406.12252808]
[-256.32684326 391.16061401]
[-254.19740295 376.30697632]
[-251.09091187 361.62652588]
[-247.02098083 347.18347168]
[-242.00538635 333.04101562]
[-236.06608582 319.26092529]
[-229.22901917 305.90353394]
[-221.52410889 293.02719116]
[-212.98503113 280.68823242]
[-203.64912415 268.94061279]
[-193.55722046 257.83569336]
[-182.75346375 247.42202759]
[-171.28506470 237.74517822]
[-159.20219421 228.84742737]
[-146.55767822 220.76770020]
[-133.40681458 213.54132080]
[-119.80711365 207.19989014]
[-105.81803131 201.77114868]
[-91.50074005 197.27882385]
[-76.91785431 193.74256897]
[-62.13314056 191.17782593]
[-47.21124268 189.59584045]
[-32.21741486 189.00350952]
[-17.21722412 189.40342712]
[-2.27625823 190.79383850]
[12.54014683 193.16868591]
[27.16720200 196.51756287]
[41.54094696 200.82582092]
[46.78766251 186.77334595]
[52.03438187 172.72088623]
[57.28110123 158.66841125]
[62.52782059 144.61593628]
[51.23974228 154.49417114]
[37.38089371 160.23283386]
[22.41383171 161.22633362]
[7.91806459 157.36981201]
[-4.57663441 149.07026672]
[-13.75166988 137.20355225]
[-18.63877869 123.02201080]
[-18.72220993 108.02224731]
[-13.99316406 93.78721619]
[-4.95070457 81.81917572]
[7.45089531 73.38114929]
[21.90286446 69.36361694]
[36.88005447 70.19055176]
[50.80188370 75.77469635]
[62.19914627 85.52674103]
[69.86907196 98.41752625]
[73.00222015 113.08665466]
[71.26790619 127.98624420]
[79.86647034 115.69541168]
[88.46503448 103.40457153]
[96.87965393 90.98707581]
[97.98114014 75.20426178]
[111.43226624 68.80765533]
[119.66107178 56.26625443]
[127.88988495 43.72485352]
[136.11869812 31.18345451]
[144.34750366 18.64205360]
[152.57630920 6.10065365]
[160.80511475 -6.44074631]
[161.90660095 -22.22356224]
[175.35772705 -28.62016678]
[183.58653259 -41.16156769]
[191.81535339 -53.70296860]
[180.20806885 -63.22678375]
[169.67887878 -73.93044281]
[160.34709167 -85.69266510]
[152.31845093 -98.38018036]
[145.68389893 -111.84921265]
[140.51864624 -125.94715881]
[136.88117981 -140.51428223]
[134.81275940 -155.38551331]
[134.33677673 -170.39236450]
[135.45866394 -185.36479187]
[138.16567993 -200.13314819]
[142.42716980 -214.53007507]
[148.19485474 -228.39247131]
[155.40335083 -241.56326294]
[163.97100830 -253.89320374]
[173.80073547 -265.24258423]
[184.78115845 -275.48281860]
[196.78787231 -284.49786377]
[209.68481445 -292.18557739]
[223.32585144 -298.45886230]
[237.55642700 -303.24664307]
[252.21530151 -306.49462891]
[267.13638306 -308.16607666]
[282.15057373 -308.24200439]
[297.08779907 -306.72155762]
[311.77877808 -303.62194824]
[326.05703735 -298.97836304]
[339.76083374 -292.84335327]
[352.73486328 -285.28643799]
[364.83212280 -276.39328003]
[375.91552734 -266.26461792]
[385.85955811 -255.01522827]
[394.55145264 -242.77256775]
[401.89279175 -229.67535400]
[407.80035400 -215.87199402]
[412.20724487 -201.51889038]
[415.06347656 -186.77867126]
[416.33670044 -171.81835938]
[416.01254272 -156.80746460]
[414.09460449 -141.91607666]
[410.60464478 -127.31291199]
[405.58224487 -113.16344452]
[399.08422852 -99.62799835]
[391.18432617 -86.85994720]
[381.97195435 -75.00395203]
[371.55157471 -64.19435120]
[360.04119873 -54.55363464]
[347.57125854 -46.19103622]
[334.28308105 -39.20130157]
[320.32720947 -33.66363907]
[305.86178589 -29.64079475]
[291.05068970 -27.17834473]
[276.06176758 -26.30419350]
[261.06481934 -27.02824783]
[246.22982788 -29.34230042]
[231.72485352 -33.22013092]
[217.71423340 -38.61780548]
[204.35675049 -45.47415924]
[196.12794495 -32.93275833]
[187.89912415 -20.39135933]
[187.38621521 -5.50558710]
[173.34651184 1.78806138]
[165.11770630 14.32946205]
[156.88890076 26.87086105]
[148.66009521 39.41226196]
[140.43128967 51.95366287]
[132.20246887 64.49506378]
[123.97367096 77.03646088]
[123.46075439 91.92223358]
[109.42105103 99.21588135]
[109.29704285 104.45979309]
[106.24378967 109.26094055]
[100.75586700 112.00313568]
[92.15730286 124.29397583]
[83.55873871 136.58480835]
[76.58029175 149.86265564]
[71.33357239 163.91513062]
[66.08685303 177.96760559]
[60.84013367 192.02006531]
[55.59341812 206.07254028]
[69.27351379 212.23863220]
[82.51618195 219.29536438]
[95.26350403 227.21189880]
[107.45974731 235.95359802]
[119.05158234 245.48223877]
[129.98831177 255.75616455]
[140.22212219 266.73043823]
[149.70825195 278.35711670]
[158.40522766 290.58526611]
[166.27502441 303.36151123]
[173.28321838 316.62991333]
[179.39916992 330.33251953]
[184.59613037 344.40933228]
[188.85137939 358.79888916]
[192.14631653 373.43817139]
[194.46652222 388.26324463]
[195.80184937 403.20922852]
[196.14646912 418.21078491]
[195.49887085 433.20233154]
[193.86187744 448.11828613]
[191.24266052 462.89346313]
[187.65266418 477.46319580]
[183.10758972 491.76382446]
[177.62730408 505.73281860]
[171.23579407 519.30902100]
[163.96098328 532.43316650]
[155.83470154 545.04785156]
[146.89247131 557.09783936]
[137.17340088 568.53045654]
[126.71997833 579.29577637]
[115.57793427 589.34667969]
[103.79597473 598.63916016]
[91.42562103 607.13269043]
[78.52096558 614.79010010]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 176]
[60 175]
[61 174]
[62 173]
[63 172]
[81 171]
[82 170]
[83 169]
[84 166]
[86 164]
[87 163]
[88 162]
[89 161]
[90 160]
[91 159]
[92 158]
[94 156]
[95 155]
[96 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
