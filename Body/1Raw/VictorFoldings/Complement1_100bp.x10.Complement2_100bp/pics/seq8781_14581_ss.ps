%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[165.36264038 913.01910400]
[150.69123840 909.88317871]
[136.18428040 906.05792236]
[121.87416077 901.55187988]
[107.79280853 896.37500000]
[93.97163391 890.53894043]
[80.44148254 884.05670166]
[67.23255157 876.94274902]
[54.37431335 869.21295166]
[41.89545059 860.88452148]
[29.82382011 851.97613525]
[18.18635178 842.50756836]
[7.00901556 832.50000000]
[-3.68324757 821.97576904]
[-13.86657906 810.95831299]
[-23.51825714 799.47222900]
[-32.61674118 787.54321289]
[-41.14173508 775.19781494]
[-49.07420731 762.46362305]
[-56.39646912 749.36901855]
[-63.09217072 735.94317627]
[-69.14637756 722.21618652]
[-74.54557800 708.21856689]
[-79.27772522 693.98162842]
[-83.33226013 679.53704834]
[-86.70013428 664.91717529]
[-89.37383270 650.15454102]
[-91.34738922 635.28210449]
[-92.61639404 620.33300781]
[-93.17803192 605.34075928]
[-93.03103638 590.33862305]
[-92.17574310 575.36022949]
[-90.61405182 560.43890381]
[-88.34944916 545.60803223]
[-85.38699341 530.90057373]
[-81.73329163 516.34948730]
[-77.39649963 501.98715210]
[-72.38629150 487.84567261]
[-66.71385193 473.95654297]
[-60.39183044 460.35079956]
[-53.43433762 447.05877686]
[-45.85689926 434.11016846]
[-37.67642212 421.53381348]
[-28.91116333 409.35784912]
[-19.58067894 397.60937500]
[-9.70578861 386.31466675]
[0.69147229 375.49887085]
[11.58790302 365.18615723]
[22.95918846 355.39953613]
[34.77995682 346.16079712]
[47.02383041 337.49063110]
[59.66348648 329.40835571]
[72.67072296 321.93197632]
[86.01651764 315.07821655]
[99.67108154 308.86233521]
[113.60395813 303.29821777]
[127.78404999 298.39831543]
[142.17971802 294.17349243]
[138.64004517 279.59710693]
[135.10037231 265.02075195]
[124.57823181 254.47874451]
[128.84046936 239.24247742]
[125.30080414 224.66610718]
[121.76113129 210.08972168]
[118.22145844 195.51335144]
[114.68178558 180.93698120]
[111.14211273 166.36059570]
[107.27780914 151.86691284]
[103.09079742 137.46311951]
[98.90378571 123.05934143]
[94.71677399 108.65556335]
[89.62160492 102.40962219]
[90.57636261 94.00609589]
[79.46089935 82.74745178]
[83.55172729 68.42563629]
[79.57963562 53.96111298]
[76.21012115 68.57775879]
[68.33313751 81.34307098]
[56.77995300 90.90988159]
[42.76980591 96.26859283]
[27.78122139 96.85369110]
[13.39597893 92.60341644]
[1.13218892 83.96632385]
[-7.71592283 71.85388947]
[-12.21459389 57.54438782]
[-11.88906860 42.54792023]
[-6.77370024 28.44710350]
[2.59167361 16.73003197]
[15.21870327 8.63323402]
[29.77482796 5.01118660]
[44.72390366 6.24613094]
[58.48832321 12.20774078]
[69.61549377 22.26687431]
[76.93119812 35.36214447]
[76.70787048 20.36380768]
[76.48454285 5.36547089]
[68.54263306 -8.31797504]
[76.08958435 -21.15903282]
[62.07006454 -27.10654449]
[51.68641281 -38.24654770]
[46.73766327 -52.64897156]
[48.08121490 -67.81850433]
[55.48429108 -81.12693787]
[67.66426086 -90.26850128]
[82.51087189 -93.65936279]
[97.45186615 -90.71204376]
[109.89861298 -81.93717194]
[117.69464874 -68.85505676]
[119.48925781 -53.73225403]
[114.97151947 -39.18887329]
[104.92414856 -27.74464989]
[91.08792114 -21.38236046]
[99.01385498 -8.77169609]
[91.48287964 5.14214325]
[91.70620728 20.14048004]
[91.92953491 35.13881683]
[94.04415894 49.98901749]
[98.01625061 64.45353699]
[108.84761047 74.67758179]
[105.04089355 90.03399658]
[109.12055969 104.46855164]
[113.30757141 118.87232971]
[117.49457550 133.27610779]
[121.68158722 147.67990112]
[125.45084381 151.29095459]
[127.27558136 155.55987549]
[127.23084259 159.63578796]
[125.71849060 162.82092285]
[129.25816345 177.39730835]
[132.79783630 191.97367859]
[136.33750916 206.55004883]
[139.87718201 221.12643433]
[143.41685486 235.70280457]
[154.19218445 247.28739929]
[149.67674255 261.48107910]
[153.21641541 276.05743408]
[156.75608826 290.63381958]
[171.48611450 287.78585815]
[186.33418274 285.63668823]
[201.26719666 284.19113159]
[216.25180054 283.45236206]
[231.25457764 283.42205811]
[246.24205017 284.10031128]
[261.18078613 285.48556519]
[276.03741455 287.57476807]
[290.77880859 290.36322021]
[305.37207031 293.84469604]
[319.78463745 298.01147461]
[333.98437500 302.85421753]
[347.93954468 308.36215210]
[361.61904907 314.52294922]
[374.99237061 321.32287598]
[388.02960205 328.74679565]
[400.70175171 336.77807617]
[412.98043823 345.39883423]
[424.83834839 354.58984375]
[436.24896240 364.33056641]
[447.18685913 374.59930420]
[457.62762451 385.37310791]
[467.54794312 396.62796021]
[476.92568970 408.33871460]
[485.73995972 420.47927856]
[493.97103882 433.02255249]
[501.60058594 445.94052124]
[508.61157227 459.20440674]
[514.98840332 472.78457642]
[520.71673584 486.65072632]
[525.78387451 500.77191162]
[530.17852783 515.11663818]
[533.89080811 529.65295410]
[536.91253662 544.34826660]
[539.23687744 559.16992188]
[540.85864258 574.08483887]
[541.77429199 589.05969238]
[541.98175049 604.06103516]
[541.48052979 619.05548096]
[540.27178955 634.00952148]
[538.35815430 648.88983154]
[535.74395752 663.66308594]
[532.43499756 678.29644775]
[528.43872070 692.75726318]
[523.76397705 707.01312256]
[518.42120361 721.03240967]
[512.42236328 734.78369141]
[505.78082275 748.23632812]
[498.51141357 761.36035156]
[490.63031006 774.12646484]
[482.15512085 786.50610352]
[473.10476685 798.47167969]
[463.49945068 809.99652100]
[453.36059570 821.05493164]
[442.71084595 831.62219238]
[431.57391357 841.67468262]
[419.97470093 851.19006348]
[407.93905640 860.14709473]
[395.49386597 868.52569580]
[382.66687012 876.30725098]
[369.48672485 883.47436523]
[355.98278809 890.01104736]
[342.18524170 895.90277100]
[328.12487793 901.13629150]
[313.83300781 905.70001221]
[299.34161377 909.58367920]
[284.68295288 912.77868652]
[269.88977051 915.27789307]
[254.99505615 917.07568359]
[240.03205872 918.16809082]
[225.03417969 918.55267334]
[210.03488159 918.22857666]
[195.06761169 917.19647217]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 137]
[59 136]
[60 135]
[62 133]
[63 132]
[64 131]
[65 130]
[66 129]
[67 128]
[68 124]
[69 123]
[70 122]
[71 121]
[73 120]
[75 118]
[76 117]
[94 116]
[95 115]
[96 114]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
