%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[80.14310455 642.74707031]
[66.24346924 648.43188477]
[51.77785110 652.46453857]
[36.94187546 654.79052734]
[21.93617821 655.37841797]
[6.96369934 654.22027588]
[-7.77307796 651.33166504]
[-22.07485580 646.75177002]
[-35.74821854 640.54241943]
[-48.60824966 632.78765869]
[-60.48102951 623.59234619]
[-71.20599365 613.08087158]
[-80.63809967 601.39532471]
[-88.64979553 588.69378662]
[-95.13272095 575.14801025]
[-99.99920654 560.94116211]
[-103.18344116 546.26544189]
[-104.64235687 531.31927490]
[-104.35623169 516.30480957]
[-102.32892609 501.42504883]
[-98.58786011 486.88128662]
[-93.18362427 472.87020874]
[-86.18931580 459.58123779]
[-77.69950867 447.19418335]
[-67.82903290 435.87646484]
[-56.71136475 425.78121948]
[-44.49686432 417.04495239]
[-31.35071564 409.78579712]
[-17.45070648 404.10192871]
[-2.98481798 400.07025146]
[11.85131454 397.74523926]
[26.85704994 397.15832520]
[41.82945251 398.31750488]
[44.71472549 383.59762573]
[47.59999847 368.87774658]
[50.48527145 354.15783691]
[40.51498413 340.61413574]
[43.48345947 323.71728516]
[58.03483963 314.00769043]
[60.70063400 299.24645996]
[55.34838867 285.34671021]
[65.41508484 273.14129639]
[68.08087921 258.38009644]
[70.74667358 243.61886597]
[68.84194946 236.47787476]
[73.56361389 228.65843201]
[76.44888306 213.93853760]
[79.33415985 199.21864319]
[82.21942902 184.49874878]
[84.44454956 169.66470337]
[86.00506592 154.74610901]
[87.56558990 139.82749939]
[89.12611389 124.90889740]
[90.68663788 109.99028778]
[82.66368866 122.66436768]
[72.35160828 133.55754089]
[60.13592148 142.26252747]
[46.47332001 148.45391846]
[31.87458992 151.90023804]
[16.88551521 152.47262573]
[2.06647372 150.14968872]
[-12.02851391 145.01829529]
[-24.87249565 137.27024841]
[-35.98529053 127.19524384]
[-44.95143890 115.16992950]
[-51.43573380 101.64388275]
[-55.19575882 87.12278748]
[-56.09093475 72.14952087]
[-54.08780289 57.28387451]
[-49.26124573 43.08160782]
[-41.79170990 30.07368469]
[-31.95845222 18.74641609]
[-20.12909317 9.52327919]
[-6.74588251 2.74908781]
[7.69083834 -1.32289958]
[22.64134216 -2.54044890]
[37.54669571 -0.85804129]
[51.84964752 3.66142535]
[65.01547241 10.84898758]
[76.55195618 20.43593216]
[86.02780151 32.06384659]
[93.08874512 45.29801178]
[97.47080231 59.64365387]
[99.01016235 74.56446075]
[97.65039825 89.49660492]
[105.50215149 76.71575928]
[113.35391235 63.93491745]
[121.20566559 51.15407562]
[121.83675385 35.34545898]
[135.09146118 28.55120277]
[135.72254944 12.74258804]
[148.97726440 5.94832945]
[156.82902527 -6.83251286]
[164.29676819 -19.84146500]
[171.37387085 -33.06699371]
[178.45097351 -46.29251862]
[183.27697754 -60.49497604]
[185.72270203 -75.29425049]
[188.16842651 -90.09352112]
[190.61415100 -104.89279175]
[176.93103027 -111.27046204]
[165.47674561 -121.10417175]
[157.10127258 -133.66418457]
[152.42613220 -148.01847839]
[151.79824829 -163.10185242]
[155.26422119 -177.79504395]
[162.56684875 -191.00769043]
[173.16423035 -201.75935364]
[186.26995850 -209.25216675]
[200.91151428 -212.93013000]
[216.00239563 -212.52029419]
[230.42276001 -208.05310059]
[243.10250854 -199.86001587]
[253.10072327 -188.54904175]
[259.67547607 -174.95951843]
[262.33889771 -160.09988403]
[260.89328003 -145.07281494]
[255.44596863 -130.99342346]
[246.40115356 -118.90648651]
[234.43002319 -109.70894623]
[220.42092896 -104.08332062]
[205.41342163 -102.44705963]
[202.96769714 -87.64778900]
[200.52197266 -72.84851837]
[198.07624817 -58.04924774]
[206.89266968 -70.18476105]
[218.51606750 -79.66614532]
[232.17549133 -85.86454773]
[246.96496582 -88.36883545]
[261.90353394 -87.01291656]
[276.00042725 -81.88672638]
[288.32061768 -73.33026123]
[298.04693604 -61.91104507]
[304.53430176 -48.38646698]
[307.35241699 -33.65356827]
[306.31436157 -18.68953133]
[301.48898315 -4.48686361]
[293.19635010 8.01242256]
[281.98645020 17.97929382]
[268.60284424 24.75268555]
[253.93318176 27.88333893]
[238.95046997 27.16361237]
[224.64842224 22.64124107]
[211.97569275 14.61617947]
[201.77278137 3.62069845]
[194.71641541 -9.61590958]
[191.27462769 -24.21570778]
[191.67649841 -39.21541595]
[184.59939575 -25.98988724]
[177.52229309 -12.76435947]
[178.20475769 -10.04546833]
[177.85136414 -6.89241838]
[176.29135132 -3.69840264]
[173.49929810 -0.91111219]
[169.60986328 1.01924264]
[161.75810242 13.80008507]
[161.68862915 28.69452858]
[147.87231445 36.40295792]
[147.80282593 51.29740143]
[133.98651123 59.00582886]
[126.13475037 71.78667450]
[118.28299713 84.56751251]
[110.43124390 97.34835815]
[105.60523987 111.55081177]
[104.04472351 126.46942139]
[102.48419952 141.38801575]
[100.92367554 156.30662537]
[99.36315155 171.22523499]
[111.66728210 162.64569092]
[126.45784760 165.14352417]
[135.26214600 177.28782654]
[133.03666687 192.12182617]
[121.05628204 201.14790344]
[106.18388367 199.19552612]
[96.93932343 187.38403320]
[94.05404663 202.10391235]
[91.16877747 216.82380676]
[88.28350067 231.54370117]
[85.50788879 246.28466797]
[82.84209442 261.04586792]
[80.17630005 275.80709839]
[85.33786774 290.76266479]
[75.46185303 301.91226196]
[72.79605865 316.67346191]
[81.69855499 326.78088379]
[83.13336182 339.97756958]
[76.79940796 351.42147827]
[65.20516205 357.04312134]
[62.31988907 371.76300049]
[59.43461609 386.48291016]
[56.54934311 401.20278931]
[70.85142517 405.78176880]
[84.52519989 411.99017334]
[97.38574982 419.74404907]
[109.25914764 428.93856812]
[119.98480988 439.44934082]
[129.41769409 451.13427734]
[137.43023682 463.83526611]
[143.91407776 477.38061523]
[148.78150940 491.58712769]
[151.96672058 506.26263428]
[153.42663574 521.20874023]
[153.14151001 536.22320557]
[151.11518860 551.10308838]
[147.37509155 565.64709473]
[141.97180176 579.65856934]
[134.97837830 592.94799805]
[126.48939514 605.33563232]
[116.61967468 616.65399170]
[105.50268555 626.74993896]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 191]
[34 190]
[35 189]
[36 188]
[39 184]
[40 183]
[42 181]
[43 180]
[44 179]
[46 178]
[47 177]
[48 176]
[49 175]
[50 168]
[51 167]
[52 166]
[53 165]
[54 164]
[85 163]
[86 162]
[87 161]
[88 160]
[90 158]
[92 156]
[93 155]
[94 150]
[95 149]
[96 148]
[97 125]
[98 124]
[99 123]
[100 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
