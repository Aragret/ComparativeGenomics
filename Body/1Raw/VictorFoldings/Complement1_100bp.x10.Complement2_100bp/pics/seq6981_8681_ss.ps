%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxUUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[180.53677368 498.82617188]
[183.35038757 484.06921387]
[188.10585022 469.81900024]
[194.71832275 456.32980347]
[203.06977844 443.84234619]
[213.01116943 432.57946777]
[224.36511230 422.74221802]
[236.92895508 414.50613403]
[230.44946289 400.97778320]
[223.96995544 387.44943237]
[217.49046326 373.92108154]
[211.01097107 360.39273071]
[196.90541077 363.28375244]
[182.50866699 362.70840454]
[168.66059875 358.69577026]
[156.17018127 351.47552490]
[145.76817322 341.46481323]
[138.06440735 329.24429321]
[133.51205444 315.52429199]
[132.38092041 301.10360718]
[134.74151611 286.82293701]
[140.46063232 273.51596069]
[149.20886230 261.96060181]
[160.47958374 252.83355713]
[154.20220947 239.21025085]
[141.84878540 230.88905334]
[143.10072327 215.11746216]
[130.50733948 212.39056396]
[121.65174866 202.76452637]
[119.93190765 189.60197449]
[126.19786072 177.67919922]
[120.12402344 163.96394348]
[114.05018616 150.24867249]
[101.82202148 141.74447632]
[103.30863953 125.99327850]
[97.23480225 112.27800751]
[90.85620117 98.70179749]
[84.17600250 85.27142334]
[77.49581146 71.84104919]
[70.81561279 58.41067123]
[64.13542175 44.98029709]
[57.45522308 31.54992104]
[50.77502823 18.11954498]
[44.09483719 4.68916893]
[42.43056488 19.59655762]
[34.53651428 32.35131836]
[21.93689919 40.49071121]
[7.06450891 42.44314194]
[-7.20903158 37.83163452]
[-18.12772560 27.54658890]
[-23.58334351 13.57389259]
[-22.52249146 -1.38854635]
[-15.15000343 -14.45171642]
[-2.88939095 -23.09332466]
[11.89201355 -25.64480972]
[26.34015274 -21.61352158]
[37.66607285 -11.77681255]
[33.47906113 -26.18059349]
[29.29204941 -40.58437729]
[25.10503769 -54.98815918]
[14.19794559 -61.87278748]
[11.00710583 -73.95593262]
[16.71574402 -84.62073517]
[12.74364758 -99.08525848]
[8.77155113 -113.54978180]
[4.79945517 -128.01429749]
[0.82735884 -142.47882080]
[-3.14473724 -156.94335938]
[-7.64538670 -142.63447571]
[-17.84542274 -131.63632202]
[-31.77537727 -126.07247925]
[-46.74559784 -127.01723480]
[-59.86556244 -134.28816223]
[-68.60202026 -146.48136902]
[-71.26808929 -161.24253845]
[-67.34899902 -175.72151184]
[-57.60146713 -187.12263489]
[-43.90758133 -193.24452209]
[-28.91142082 -192.90513611]
[-15.50850868 -186.17001343]
[-6.28619385 -174.33842468]
[-7.62442827 -189.27861023]
[-8.96266270 -204.21879578]
[-10.30089664 -219.15898132]
[-11.63913059 -234.09916687]
[-23.11363983 -224.43814087]
[-37.85043335 -227.23579407]
[-44.98609543 -240.42982483]
[-39.26048279 -254.29406738]
[-24.89430237 -258.60833740]
[-12.47860527 -250.19371033]
[-23.53770638 -261.16339111]
[-23.55053520 -276.37704468]
[-13.02446175 -286.85260010]
[-13.24778938 -301.85092163]
[-13.47111702 -316.84927368]
[-13.69444466 -331.84759521]
[-13.91777229 -346.84594727]
[-27.93729401 -352.79345703]
[-38.32094574 -363.93347168]
[-43.26969528 -378.33587646]
[-41.92614365 -393.50540161]
[-34.52306747 -406.81384277]
[-22.34309578 -415.95541382]
[-7.49648333 -419.34628296]
[7.44450665 -416.39895630]
[19.89125633 -407.62408447]
[27.68729210 -394.54196167]
[29.48190117 -379.41915894]
[24.96415901 -364.87579346]
[14.91679096 -353.43154907]
[1.08056462 -347.06927490]
[1.30389237 -332.07092285]
[1.52722013 -317.07260132]
[1.75054777 -302.07424927]
[1.97387552 -287.07592773]
[12.80717945 -276.91839600]
[13.24732208 -261.71115112]
[2.51973224 -250.41703796]
[3.30105448 -235.43740845]
[4.63928843 -220.49722290]
[5.97752285 -205.55703735]
[7.31575680 -190.61685181]
[8.65399075 -175.67666626]
[11.31978703 -160.91545105]
[15.29188251 -146.45092773]
[19.26397896 -131.98640442]
[23.23607445 -117.52187347]
[27.20817184 -103.05735016]
[31.18026733 -88.59282684]
[44.31238556 -76.95176697]
[39.50881958 -59.17517090]
[43.69583130 -44.77138901]
[47.88284302 -30.36760521]
[52.06985474 -15.96382332]
[57.52521133 -1.99102557]
[64.20540619 11.43935013]
[70.88559723 24.86972618]
[77.56579590 38.30010223]
[84.24598694 51.73048019]
[90.92618561 65.16085815]
[97.60637665 78.59123230]
[104.28657532 92.02160645]
[107.73178101 93.75450897]
[110.39641571 96.99758148]
[111.62316132 101.36818695]
[110.95007324 106.20417786]
[117.02390289 119.91944122]
[129.68650818 129.40463257]
[127.76545715 144.17483521]
[133.83929443 157.89010620]
[139.91313171 171.60537720]
[156.34480286 177.60696411]
[163.21673584 193.32611084]
[156.72404480 208.84010315]
[169.52647400 218.13571167]
[167.82553101 232.93287659]
[174.10289001 246.55619812]
[189.52099609 243.85874939]
[205.10134888 245.23646545]
[219.78593445 250.59002686]
[232.57902527 259.55029297]
[242.61474609 271.50375366]
[249.21569824 285.63464355]
[251.93861389 300.98040771]
[250.60415649 316.49743652]
[245.30871582 331.13204956]
[236.41751099 343.89184570]
[224.53932190 353.91323853]
[231.01881409 367.44158936]
[237.49830627 380.96994019]
[243.97779846 394.49829102]
[250.45730591 408.02664185]
[264.74978638 403.39968872]
[279.53146362 400.71911621]
[294.53854370 400.03274536]
[309.50317383 401.35278320]
[324.15835571 404.65570068]
[338.24252319 409.88256836]
[351.50430298 416.94006348]
[363.70706177 425.70227051]
[374.63296509 436.01284790]
[384.08712769 447.68771362]
[391.90072632 460.51855469]
[397.93438721 474.27642822]
[402.08038330 488.71572876]
[404.26477051 503.57885742]
[404.44854736 518.60046387]
[402.62841797 533.51257324]
[398.83688354 548.04901123]
[393.14160156 561.95037842]
[385.64422607 574.96850586]
[376.47851562 586.87115479]
[365.80810547 597.44592285]
[353.82336426 606.50402832]
[340.73818970 613.88391113]
[326.78613281 619.45373535]
[312.21612549 623.11419678]
[297.28826904 624.79992676]
[282.26889038 624.48083496]
[267.42605591 622.16271973]
[253.02465820 617.88677979]
[239.32170105 611.72949219]
[226.56175232 603.80059814]
[214.97248840 594.24169922]
[204.76077271 583.22332764]
[196.10881042 570.94219971]
[189.17103577 557.61737061]
[184.07124329 543.48669434]
[180.90045166 528.80236816]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 173]
[9 172]
[10 171]
[11 170]
[12 169]
[24 158]
[25 157]
[27 155]
[31 152]
[32 151]
[33 150]
[35 148]
[36 147]
[37 143]
[38 142]
[39 141]
[40 140]
[41 139]
[42 138]
[43 137]
[44 136]
[57 135]
[58 134]
[59 133]
[60 132]
[63 130]
[64 129]
[65 128]
[66 127]
[67 126]
[68 125]
[81 124]
[82 123]
[83 122]
[84 121]
[85 120]
[91 119]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
