%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAGxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[58.70297241 572.20916748]
[58.84081650 587.29699707]
[55.06799698 601.90618896]
[47.64175415 615.04058838]
[37.06842041 625.80474854]
[24.06890106 633.46472168]
[9.52952862 637.49822998]
[-5.55838013 637.63024902]
[-20.16610527 633.85174561]
[-33.29767227 626.42047119]
[-44.05774307 615.84295654]
[-51.71268082 602.84051514]
[-55.74055862 588.29956055]
[-55.86674881 573.21160889]
[-52.08264923 558.60534668]
[-44.64626694 545.47662354]
[-34.06462097 534.72064209]
[-21.05919266 527.07073975]
[-6.51671028 523.04846191]
[8.57129574 522.92810059]
[12.32759666 508.40606689]
[16.08389664 493.88400269]
[19.84019852 479.36193848]
[23.16245651 464.73446655]
[26.04772949 450.01458740]
[28.93300247 435.29470825]
[31.81827545 420.57479858]
[34.70354843 405.85491943]
[37.58882141 391.13500977]
[32.44411469 377.15713501]
[42.69141388 365.10293579]
[29.36534119 359.38668823]
[17.51858139 351.01470947]
[7.67306089 340.35272217]
[0.26318496 327.86746216]
[-4.38333178 314.10610962]
[-6.05995560 299.67248535]
[-4.69051313 285.20037842]
[-0.33264902 271.32583618]
[6.82459593 258.65917969]
[16.46898460 247.75811768]
[28.17870522 239.10328674]
[41.44081497 233.07690430]
[55.67371368 229.94607544]
[70.25265503 229.85079956]
[73.35676575 215.17550659]
[76.46087646 200.50019836]
[79.12667084 185.73898315]
[81.35178375 170.90493774]
[83.57690430 156.07089233]
[85.80201721 141.23684692]
[78.86652374 131.32597351]
[80.59889984 118.94927979]
[90.61060333 110.81732941]
[85.86773682 97.66450500]
[94.59012604 86.73694611]
[97.03585052 71.93767548]
[99.48158264 57.13840103]
[101.92730713 42.33913040]
[88.76165771 34.86310196]
[78.96656036 23.35536766]
[73.70951080 9.21734333]
[73.60692596 -5.83787298]
[78.65187073 -19.99308205]
[88.21728516 -31.54632187]
[101.13381195 -39.11549759]
[115.83275604 -41.80371094]
[118.27848053 -56.60298157]
[120.72421265 -71.40225220]
[123.16993713 -86.20152283]
[113.09421539 -75.08937073]
[99.22770691 -69.36924744]
[84.24781036 -70.14559937]
[71.04691315 -77.26854706]
[62.17390060 -89.36273956]
[59.34201431 -104.09299469]
[63.09804153 -118.61512756]
[72.71675873 -130.12513733]
[86.34094238 -136.40061951]
[101.33996582 -136.22988892]
[114.81776428 -129.64588928]
[124.17198181 -117.91991425]
[127.59648132 -103.31477356]
[132.63339233 -117.44380188]
[137.67031860 -131.57283020]
[142.70722961 -145.70185852]
[147.74414062 -159.83088684]
[144.00717163 -177.86187744]
[157.80889893 -188.70066833]
[154.92295837 -204.25643921]
[166.34365845 -213.81765747]
[171.16966248 -228.02011108]
[173.17367554 -242.88563538]
[172.28085327 -257.85903931]
[171.38804626 -272.83245850]
[170.49522400 -287.80584717]
[156.11863708 -292.74371338]
[144.72935486 -302.81109619]
[138.06414795 -316.47286987]
[137.13940430 -331.64562988]
[142.09616089 -346.01571655]
[152.17854309 -357.39175415]
[165.84904480 -364.03897095]
[181.02302551 -364.94375610]
[195.38656616 -359.96810913]
[206.74932861 -349.87075806]
[213.37857056 -336.19152832]
[214.26338196 -321.01635742]
[209.26884460 -306.65939331]
[199.15657043 -295.30990601]
[185.46862793 -288.69866943]
[186.36145020 -273.72528076]
[187.25425720 -258.75186157]
[188.14707947 -243.77845764]
[193.96357727 -257.60482788]
[202.67359924 -269.81692505]
[213.85215759 -279.81890869]
[226.95382690 -287.12277222]
[241.33934021 -291.37213135]
[256.30679321 -292.35968018]
[271.12591553 -290.03717041]
[285.07360840 -284.51797485]
[297.46936035 -276.07138062]
[307.70837402 -265.10949707]
[315.29101562 -252.16717529]
[319.84735107 -237.87593079]
[321.15505981 -222.93302917]
[319.15029907 -208.06761169]
[313.93093872 -194.00494385]
[305.75161743 -181.43121338]
[295.01144409 -170.95991516]
[282.23440552 -163.10194397]
[268.04397583 -158.24072266]
[253.13250732 -156.61344910]
[238.22756958 -158.29951477]
[224.05639648 -163.21664429]
[211.31045532 -171.12492371]
[200.61164856 -181.63850403]
[192.48196411 -194.24438477]
[187.31808472 -208.32751465]
[185.37211609 -223.19412231]
[180.54611206 -208.99166870]
[183.77723694 -194.45175171]
[172.01135254 -183.87466431]
[177.07508850 -172.88899231]
[173.17071533 -161.01719666]
[161.87316895 -154.79397583]
[156.83625793 -140.66494751]
[151.79934692 -126.53591156]
[146.76242065 -112.40688324]
[141.72550964 -98.27785492]
[137.96920776 -83.75579834]
[135.52348328 -68.95652771]
[133.07775879 -54.15725327]
[130.63201904 -39.35798264]
[143.68453979 -32.08356476]
[153.47904968 -20.76116371]
[158.81881714 -6.74469519]
[159.04132080 8.28101540]
[154.10041809 22.50274467]
[144.57421875 34.19768906]
[131.59750366 41.94215393]
[116.72657776 44.78485870]
[114.28085327 59.58412933]
[111.83512878 74.38339996]
[109.38939667 89.18267059]
[114.13226318 102.33549500]
[105.40987396 113.26305389]
[112.29181671 130.34288025]
[100.63606262 143.46197510]
[98.41094971 158.29600525]
[96.18582916 173.13005066]
[93.96070862 187.96409607]
[95.69280243 191.94578552]
[96.03349304 195.87623596]
[95.16976166 199.32434082]
[93.40937042 201.96395874]
[91.13617706 203.60430908]
[88.03206635 218.27961731]
[84.92795563 232.95491028]
[99.04859924 239.43742371]
[111.37237549 248.88851929]
[121.28622437 260.83416748]
[128.29780579 274.67626953]
[132.06002808 289.72274780]
[132.38812256 305.22198486]
[129.26882935 320.40051270]
[122.86083221 334.50158691]
[113.48670197 346.82278442]
[101.61667633 356.75119019]
[87.84503937 363.79373169]
[72.86042023 367.60174561]
[57.41130447 367.98822021]
[62.34963608 383.01898193]
[52.30871201 394.02029419]
[49.42343903 408.74017334]
[46.53816605 423.46008301]
[43.65289307 438.17996216]
[40.76762009 452.89987183]
[37.88234711 467.61975098]
[39.43491745 471.67480469]
[39.59976959 475.61654663]
[38.58293152 479.02264404]
[36.70642471 481.58102417]
[34.36225891 483.11822510]
[30.60595703 497.64028931]
[26.84965515 512.16235352]
[23.09335518 526.68444824]
[36.23065567 534.10559082]
[46.99888992 544.67474365]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 208]
[21 207]
[22 206]
[23 205]
[24 200]
[25 199]
[26 198]
[27 197]
[28 196]
[29 195]
[31 193]
[45 180]
[46 179]
[47 178]
[48 173]
[49 172]
[50 171]
[51 170]
[54 168]
[56 166]
[57 165]
[58 164]
[59 163]
[67 155]
[68 154]
[69 153]
[70 152]
[83 151]
[84 150]
[85 149]
[86 148]
[87 147]
[89 144]
[91 142]
[92 141]
[93 114]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
