%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[195.70112610 771.40423584]
[185.27136230 760.61364746]
[175.68757629 749.06512451]
[167.00462341 736.82489014]
[159.27226257 723.96301270]
[152.53479004 710.55316162]
[146.83078003 696.67218018]
[142.19291687 682.39953613]
[138.64776611 667.81707764]
[136.21562195 653.00817871]
[134.91043091 638.05780029]
[134.73965454 623.05157471]
[135.70428467 608.07531738]
[137.79879761 593.21496582]
[141.01118469 578.55560303]
[145.32304382 564.18109131]
[150.70970154 550.17388916]
[157.14025879 536.61425781]
[164.57792664 523.57971191]
[172.98007202 511.14501953]
[182.29858398 499.38140869]
[192.48008728 488.35623169]
[203.46624756 478.13265991]
[215.19413757 468.76922607]
[227.59660339 460.31958008]
[240.60256958 452.83212280]
[234.12307739 439.30377197]
[227.64358521 425.77545166]
[221.16409302 412.24710083]
[214.68458557 398.71875000]
[208.20509338 385.19039917]
[201.72560120 371.66204834]
[195.24610901 358.13369751]
[188.76660156 344.60537720]
[182.28710938 331.07702637]
[175.80761719 317.54867554]
[169.32812500 304.02032471]
[162.74809265 290.54058838]
[150.15238953 282.59091187]
[150.93418884 266.78903198]
[144.25399780 253.35864258]
[129.12792969 244.46095276]
[130.42243958 226.09234619]
[123.54302979 212.76290894]
[122.92476654 227.75016785]
[117.00112915 241.53096008]
[106.55146027 252.29220581]
[92.95059967 258.61807251]
[77.98796844 259.67630005]
[63.63216782 255.32760620]
[51.77194595 246.14419556]
[43.96771622 233.33427429]
[41.24626160 218.58322144]
[43.96563721 203.83178711]
[51.76806259 191.02076721]
[63.62699127 181.83567810]
[77.98217773 177.48497009]
[92.94495392 178.54107666]
[106.54670715 184.86502075]
[116.99921417 195.62677002]
[113.24291229 181.10472107]
[109.48661041 166.58265686]
[105.73030853 152.06059265]
[101.97400665 137.53854370]
[98.21771240 123.01647949]
[94.46141052 108.49442291]
[89.55445862 102.09954834]
[90.75900269 93.72817230]
[87.21932983 79.15179443]
[76.05681610 75.06097412]
[68.33409882 66.18062592]
[65.88240814 54.79277802]
[69.19773865 43.75084686]
[77.34566498 35.76475525]
[74.24155426 21.08945274]
[61.61911774 7.68215370]
[67.70539093 -8.77762032]
[64.38313293 -23.40508080]
[59.43075180 -31.08047676]
[61.12201691 -38.27501678]
[58.01790619 -52.95032120]
[47.59227753 -64.85060120]
[52.52830124 -78.90354156]
[49.42419052 -93.57884216]
[46.32007980 -108.25414276]
[43.21596909 -122.92944336]
[28.14874840 -123.42163086]
[13.63733006 -127.50601196]
[0.52539188 -134.94512939]
[-10.42475605 -145.30648804]
[-18.57648659 -157.98768616]
[-23.45586967 -172.25144958]
[-24.77922249 -187.26852417]
[-22.46960831 -202.16580200]
[-16.66130447 -216.07720947]
[-7.69199800 -228.19392395]
[3.91684628 -237.81152344]
[17.49030685 -244.37083435]
[32.23923874 -247.49052429]
[47.30615997 -246.98919678]
[61.81509781 -242.89602661]
[74.92252350 -235.44895935]
[85.86638641 -225.08096313]
[94.01042938 -212.39482117]
[98.88116455 -198.12809753]
[100.19541168 -183.11024475]
[97.87677002 -168.21435547]
[92.06002808 -154.30648804]
[83.08338165 -142.19519043]
[71.46870422 -132.58464050]
[57.89127350 -126.03355408]
[60.99538422 -111.35825348]
[64.09949493 -96.68295288]
[67.20360565 -82.00764465]
[77.40721130 -71.15703583]
[72.69320679 -56.05443192]
[75.79731750 -41.37912750]
[79.01059723 -26.72734070]
[82.33285522 -12.09988022]
[92.39789581 -5.39007950]
[95.28543854 6.76910925]
[88.91685486 17.98534393]
[92.02096558 32.66064453]
[107.93712616 41.70450974]
[112.26243591 59.82092667]
[101.79570770 75.61212158]
[105.33538055 90.18849945]
[108.98346710 104.73812103]
[112.73976898 119.26017761]
[116.49607086 133.78224182]
[120.25237274 148.30430603]
[124.00866699 162.82635498]
[127.76496887 177.34841919]
[131.52127075 191.87048340]
[136.87245178 205.88349915]
[143.75187683 219.21293640]
[155.77955627 223.87100220]
[161.23501587 235.11474609]
[157.68437195 246.67845154]
[164.36456299 260.10882568]
[177.43807983 269.01916504]
[176.17846680 283.86041260]
[182.80221558 290.15039062]
[182.85646057 297.54083252]
[189.33596802 311.06918335]
[195.81546021 324.59753418]
[202.29495239 338.12585449]
[208.77444458 351.65420532]
[215.25395203 365.18255615]
[221.73344421 378.71090698]
[228.21293640 392.23925781]
[234.69242859 405.76760864]
[241.17193604 419.29592896]
[247.65142822 432.82427979]
[254.13092041 446.35263062]
[268.11721802 440.91195679]
[282.47491455 436.54461670]
[297.12179565 433.27566528]
[311.97396851 431.12380981]
[326.94635010 430.10134888]
[341.95315552 430.21417236]
[356.90847778 431.46163940]
[371.72662354 433.83660889]
[386.32269287 437.32543945]
[400.61309814 441.90814209]
[414.51599121 447.55853271]
[427.95175171 454.24417114]
[440.84338379 461.92681885]
[453.11706543 470.56243896]
[464.70251465 480.10159302]
[475.53332520 490.48962402]
[485.54748535 501.66699219]
[494.68762207 513.56976318]
[502.90136719 526.12963867]
[510.14172363 539.27478027]
[516.36718750 552.92987061]
[521.54205322 567.01666260]
[525.63677979 581.45452881]
[528.62780762 596.16064453]
[530.49810791 611.05090332]
[531.23687744 626.03997803]
[530.83996582 641.04193115]
[529.30957031 655.97094727]
[526.65447998 670.74145508]
[522.88995361 685.26885986]
[518.03747559 699.46997070]
[512.12487793 713.26336670]
[505.18603516 726.57012939]
[497.26068115 739.31402588]
[488.39422607 751.42199707]
[478.63742065 762.82476807]
[468.04620361 773.45690918]
[456.68121338 783.25769043]
[444.60754395 792.17077637]
[431.89437866 800.14526367]
[418.61450195 807.13543701]
[404.84402466 813.10125732]
[390.66177368 818.00854492]
[376.14898682 821.82916260]
[361.38885498 824.54119873]
[346.46585083 826.12921143]
[331.46551514 826.58410645]
[316.47372437 825.90319824]
[301.57635498 824.09039307]
[286.85876465 821.15612793]
[272.40524292 817.11724854]
[258.29858398 811.99676514]
[244.61956787 805.82403564]
[231.44656372 798.63452148]
[218.85504150 790.46929932]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 155]
[27 154]
[28 153]
[29 152]
[30 151]
[31 150]
[32 149]
[33 148]
[34 147]
[35 146]
[36 145]
[37 144]
[38 142]
[40 140]
[41 139]
[43 136]
[44 135]
[60 134]
[61 133]
[62 132]
[63 131]
[64 130]
[65 129]
[66 128]
[68 127]
[69 126]
[74 123]
[75 122]
[77 119]
[78 118]
[80 117]
[81 116]
[83 114]
[84 113]
[85 112]
[86 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
