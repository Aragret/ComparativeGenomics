%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[107.59753418 417.41305542]
[98.17810059 429.09625244]
[87.89196777 440.02413940]
[76.79948425 450.13250732]
[64.96575928 459.36212158]
[52.46023178 467.65878296]
[39.35629272 474.97381592]
[25.73084259 481.26425171]
[11.66383743 486.49322510]
[-2.76216745 490.63003540]
[-17.46251297 493.65039062]
[-32.35093307 495.53659058]
[-47.34005356 496.27752686]
[-62.34191513 495.86889648]
[-77.26847076 494.31307983]
[-92.03213501 491.61917114]
[-106.54626465 487.80303955]
[-120.72567749 482.88705444]
[-134.48716736 476.90005493]
[-147.74996948 469.87719727]
[-160.43626404 461.85968018]
[-172.47160339 452.89453125]
[-183.78533936 443.03442383]
[-194.31109619 432.33715820]
[-203.98709106 420.86553955]
[-212.75653076 408.68688965]
[-220.56799316 395.87268066]
[-227.37559509 382.49810791]
[-233.13940430 368.64166260]
[-237.82559204 354.38464355]
[-241.40666199 339.81076050]
[-243.86160278 325.00549316]
[-245.17599487 310.05572510]
[-245.34213257 295.04922485]
[-244.35903931 280.07403564]
[-242.23246765 265.21804810]
[-238.97492981 250.56843567]
[-234.60552979 236.21116638]
[-229.14990234 222.23049927]
[-222.64006042 208.70849609]
[-215.11422729 195.72448730]
[-206.61654663 183.35467529]
[-197.19689941 171.67166138]
[-186.91055298 160.74398804]
[-175.81788635 150.63580322]
[-163.98397827 141.40641785]
[-151.47830200 133.11000061]
[-138.37422180 125.79522705]
[-124.74864960 119.50502777]
[-110.68154144 114.27632904]
[-96.25546265 110.13980103]
[-81.55505371 107.11972046]
[-66.66660309 105.23381042]
[-51.67746735 104.49314880]
[-36.67561340 104.90206909]
[-21.74908638 106.45817566]
[-6.98547459 109.15234375]
[7.52857971 112.96875000]
[21.70790100 117.88500977]
[35.46928024 123.87226868]
[48.73195267 130.89538574]
[61.41809845 138.91314697]
[70.37879181 126.88377380]
[79.33948517 114.85439301]
[88.30018616 102.82501984]
[74.63768768 109.01663971]
[59.68692780 110.23100281]
[45.20429611 106.32544708]
[32.89120102 97.75878143]
[24.19417763 85.53741455]
[20.13493538 71.09710693]
[21.19035721 56.13428116]
[27.23644829 42.40676117]
[37.56292343 31.52724457]
[50.95663452 24.77383995]
[65.84410095 22.93993187]
[80.47637177 26.24096870]
[93.13444519 34.28914642]
[102.33126831 46.13897324]
[106.98641205 60.39834595]
[106.55299377 75.39208221]
[101.08110809 89.36007690]
[112.62741089 79.78495789]
[124.17371368 70.20983887]
[135.72001648 60.63471603]
[147.26631165 51.05959702]
[158.81262207 41.48447800]
[170.35891724 31.90935707]
[181.90522766 22.33423805]
[193.45152283 12.75911808]
[195.06684875 -2.73373508]
[206.91284180 -12.27978706]
[221.67294312 -10.64435101]
[233.21925354 -20.21947098]
[244.76554871 -29.79459000]
[256.31185913 -39.36970901]
[267.85815430 -48.94482803]
[279.40444946 -58.51995087]
[270.82369995 -70.83406067]
[263.30349731 -83.82301331]
[256.89654541 -97.39568329]
[251.64779663 -111.45688629]
[247.59408569 -125.90797424]
[244.76383972 -140.64758301]
[243.17689514 -155.57234192]
[242.84440613 -170.57752991]
[243.76870728 -185.55793762]
[245.94328308 -200.40844727]
[249.35292053 -215.02490234]
[253.97366333 -229.30479431]
[259.77313232 -243.14793396]
[266.71063232 -256.45724487]
[274.73751831 -269.13934326]
[283.79745483 -281.10531616]
[293.82690430 -292.27117920]
[304.75552368 -302.55862427]
[316.50665283 -311.89550781]
[328.99789429 -320.21630859]
[342.14157104 -327.46270752]
[355.84552002 -333.58383179]
[370.01361084 -338.53677368]
[384.54647827 -342.28677368]
[399.34216309 -344.80752563]
[414.29690552 -346.08139038]
[429.30575562 -346.09936523]
[444.26348877 -344.86135864]
[459.06518555 -342.37606812]
[473.60699463 -338.66088867]
[487.78692627 -333.74191284]
[501.50549316 -327.65362549]
[514.66650391 -320.43878174]
[527.17761230 -312.14791870]
[538.95111084 -302.83920288]
[549.90435791 -292.57797241]
[559.96051025 -281.43615723]
[569.04913330 -269.49197388]
[577.10632324 -256.82913208]
[584.07574463 -243.53648376]
[589.90832520 -229.70726013]
[594.56329346 -215.43849182]
[598.00793457 -200.83024597]
[600.21807861 -185.98498535]
[601.17828369 -171.00685120]
[600.88177490 -156.00088501]
[599.33056641 -141.07238770]
[596.53564453 -126.32602692]
[592.51660156 -111.86526489]
[587.30157471 -97.79153442]
[580.92712402 -84.20354462]
[573.43804932 -71.19661713]
[564.88684082 -58.86197662]
[555.33349609 -47.28615189]
[544.84497070 -36.55033493]
[533.49487305 -26.72983551]
[521.36285400 -17.89353561]
[508.53396606 -10.10341740]
[495.09817505 -3.41412330]
[481.14978027 2.12742519]
[466.78659058 6.48235750]
[452.10937500 9.62012672]
[437.22106934 11.51872158]
[422.22610474 12.16482735]
[407.22964478 11.55391026]
[392.33691406 9.69025517]
[377.65237427 6.58693552]
[363.27902222 2.26571894]
[349.31765747 -3.24308395]
[335.86621094 -9.90083218]
[323.01907349 -17.66082573]
[310.86633301 -26.46863365]
[299.49325562 -36.26247406]
[288.97958374 -46.97364807]
[277.43328857 -37.39852905]
[265.88696289 -27.82340813]
[254.34066772 -18.24828911]
[242.79437256 -8.67316914]
[231.24806213 0.90195096]
[230.12403870 15.70979214]
[218.55084229 25.58480644]
[203.02664185 24.30541992]
[191.48034668 33.88053894]
[179.93403625 43.45565796]
[168.38774109 53.03078079]
[156.84143066 62.60589981]
[145.29513550 72.18101501]
[133.74884033 81.75614166]
[122.20252991 91.33126068]
[110.65623474 100.90637970]
[100.32955933 111.78571320]
[91.36886597 123.81508636]
[82.40817261 135.84446716]
[73.44747162 147.87384033]
[84.76139832 157.73374939]
[95.28735352 168.43081665]
[104.96356201 179.90223694]
[113.73325348 192.08071899]
[121.54494476 204.89479065]
[128.35279846 218.26922607]
[134.11688232 232.12557983]
[138.80332947 246.38249207]
[142.38468933 260.95632935]
[144.83990479 275.76156616]
[146.15457153 290.71127319]
[146.32099915 305.71777344]
[145.33818054 320.69299316]
[143.21191406 335.54901123]
[139.95465088 350.19869995]
[135.58551025 364.55606079]
[130.13015747 378.53680420]
[123.62056732 392.05895996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 192]
[63 191]
[64 190]
[65 189]
[82 188]
[83 187]
[84 186]
[85 185]
[86 184]
[87 183]
[88 182]
[89 181]
[90 180]
[93 177]
[94 176]
[95 175]
[96 174]
[97 173]
[98 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
