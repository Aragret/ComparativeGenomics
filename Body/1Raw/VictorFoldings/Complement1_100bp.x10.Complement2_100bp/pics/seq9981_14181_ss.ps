%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[127.16641235 519.36743164]
[123.61283875 504.77606201]
[121.81001282 489.86679077]
[121.78324890 474.84893799]
[123.53292847 459.93334961]
[127.03446960 445.32940674]
[132.23873901 431.24209595]
[139.07264709 417.86923218]
[147.44029236 405.39849854]
[157.22418213 394.00500488]
[168.28697205 383.84866333]
[180.47335815 375.07208252]
[193.61225891 367.79846191]
[187.94947815 353.90844727]
[182.28669739 340.01840210]
[176.62390137 326.12838745]
[172.64739990 323.48330688]
[170.29029846 318.31213379]
[171.00610352 311.73953247]
[165.75938416 297.68704224]
[160.51266479 283.63458252]
[155.26594543 269.58209229]
[150.01922607 255.52963257]
[135.08363342 256.22894287]
[120.64360809 252.27221680]
[108.11662292 244.03482056]
[98.73640442 232.31294250]
[93.43141174 218.24668884]
[92.73295593 203.20915222]
[96.72200775 188.67245483]
[105.02003479 176.06352234]
[116.82491302 166.62411499]
[111.57819366 152.57164001]
[106.33147430 138.51916504]
[101.08475494 124.46669769]
[95.83803558 110.41422272]
[89.69139099 124.09701538]
[76.24288940 130.74064636]
[61.64100266 127.30772400]
[52.56151581 115.36775208]
[53.15545273 100.37951660]
[63.15127182 89.19543457]
[77.97901917 86.92871857]
[90.86081696 94.61711884]
[87.10452271 80.09506226]
[83.34822083 65.57299805]
[79.59191895 51.05094147]
[75.83561707 36.52888489]
[72.07931519 22.00682449]
[68.10722351 7.54230022]
[63.92020798 -6.86148214]
[59.73319626 -21.26526451]
[55.54618835 -35.66904449]
[51.35917664 -50.07282639]
[46.63904190 -64.31081390]
[41.39232254 -78.36328888]
[36.14560318 -92.41575623]
[30.89888573 -106.46823120]
[26.05073166 -110.96343994]
[24.44201851 -116.41404724]
[25.71198654 -121.01798248]
[20.88598824 -135.22044373]
[16.05998993 -149.42289734]
[11.23399353 -163.62535095]
[6.40799522 -177.82780457]
[-8.23452950 -174.50903320]
[-23.14374924 -172.73904419]
[-38.15630722 -172.53720093]
[-53.10772324 -173.90573120]
[-67.83418274 -176.82963562]
[-82.17432404 -181.27688599]
[-95.97103882 -187.19874573]
[-109.07315826 -194.53033447]
[-121.33712769 -203.19131470]
[-132.62857056 -213.08682251]
[-142.82379150 -224.10839844]
[-151.81106567 -236.13531494]
[-159.49194336 -249.03576660]
[-165.78224182 -262.66845703]
[-170.61306763 -276.88397217]
[-173.93147278 -291.52658081]
[-175.70111084 -306.43582153]
[-175.90258789 -321.44839478]
[-174.53369141 -336.39978027]
[-171.60942078 -351.12615967]
[-167.16183472 -365.46618652]
[-161.23963928 -379.26275635]
[-153.90773010 -392.36471558]
[-145.24644470 -404.62847900]
[-135.35067749 -415.91967773]
[-124.32884216 -426.11462402]
[-112.30171967 -435.10162354]
[-99.40106964 -442.78216553]
[-85.76824188 -449.07214355]
[-71.55261230 -453.90261841]
[-56.90992355 -457.22067261]
[-42.00061798 -458.98992920]
[-26.98804855 -459.19104004]
[-12.03669834 -457.82180786]
[2.68961477 -454.89718628]
[17.02954292 -450.44921875]
[30.82596779 -444.52670288]
[43.92773056 -437.19448853]
[56.19128036 -428.53289795]
[67.48225403 -418.63684082]
[77.67693329 -407.61477661]
[86.66362762 -395.58743286]
[94.34386444 -382.68658447]
[100.63351440 -369.05361938]
[105.46363831 -354.83786011]
[108.78133392 -340.19509888]
[110.55024719 -325.28573608]
[110.75099182 -310.27316284]
[109.38137054 -295.32186890]
[106.45639038 -280.59561157]
[102.00810242 -266.25579834]
[96.08524323 -252.45950317]
[88.75269318 -239.35792542]
[80.09081268 -227.09458923]
[70.19449615 -215.80386353]
[59.17216873 -205.60943604]
[47.14460373 -196.62304688]
[34.24358368 -188.94311523]
[20.61045074 -182.65380859]
[25.43644905 -168.45133972]
[30.26244545 -154.24888611]
[35.08844376 -140.04643250]
[39.91444016 -125.84397888]
[44.95135880 -111.71495056]
[50.19807434 -97.66247559]
[55.44479370 -83.61000824]
[60.69151306 -69.55753326]
[69.19809723 -81.91220856]
[84.14965057 -83.11682129]
[94.52444458 -72.28337097]
[92.67456055 -57.39787674]
[79.96367645 -49.43336868]
[65.76295471 -54.25983810]
[69.94996643 -39.85605621]
[74.13697815 -25.45227432]
[78.32398987 -11.04849339]
[82.51100159 3.35528898]
[86.19075012 6.39971066]
[87.99707794 11.78805065]
[86.60137939 18.25052261]
[90.35767365 32.77258301]
[94.11397552 47.29464340]
[97.87027740 61.81669998]
[101.62657928 76.33876038]
[105.38288116 90.86081696]
[109.89051056 105.16750336]
[115.13722229 119.21997833]
[120.38394165 133.27244568]
[125.63066101 147.32492065]
[130.87738037 161.37739563]
[145.97999573 160.77044678]
[160.51109314 164.85575867]
[173.05099487 173.22111511]
[182.37863159 185.03680420]
[187.59036255 199.13787842]
[188.18762207 214.13900757]
[184.12448120 228.57061768]
[175.81095886 241.02273560]
[164.07170105 250.28291321]
[169.31842041 264.33538818]
[174.56513977 278.38784790]
[179.81185913 292.44033813]
[185.05857849 306.49279785]
[190.51393127 320.46560669]
[196.17671204 334.35562134]
[201.83950806 348.24566650]
[207.50228882 362.13568115]
[221.98153687 358.14971924]
[236.83059692 355.90429688]
[251.84100342 355.43093872]
[266.80203247 356.73623657]
[281.50366211 359.80191040]
[295.73950195 364.58493042]
[309.30972290 371.01812744]
[322.02377319 379.01116943]
[333.70321655 388.45190430]
[344.18405151 399.20773315]
[353.31915283 411.12771606]
[360.98031616 424.04449463]
[367.05993652 437.77673340]
[371.47271729 452.13165283]
[374.15667725 466.90774536]
[375.07412720 481.89758301]
[374.21221924 496.89068604]
[371.58303833 511.67660522]
[367.22348022 526.04779053]
[361.19476318 539.80249023]
[353.58154297 552.74755859]
[344.49066162 564.70129395]
[334.04974365 575.49591064]
[322.40536499 584.97979736]
[309.72100830 593.01995850]
[296.17474365 599.50335693]
[281.95669556 604.33911133]
[267.26654053 607.45922852]
[252.31044006 608.81994629]
[237.29838562 608.40222168]
[222.44111633 606.21179199]
[207.94718933 602.27954102]
[194.02011108 596.66058350]
[180.85536194 589.43383789]
[168.63777161 580.70074463]
[157.53884888 570.58392334]
[147.71441650 559.22534180]
[139.30238342 546.78454590]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 172]
[14 171]
[15 170]
[16 169]
[19 168]
[20 167]
[21 166]
[22 165]
[23 164]
[32 155]
[33 154]
[34 153]
[35 152]
[36 151]
[44 150]
[45 149]
[46 148]
[47 147]
[48 146]
[49 145]
[50 142]
[51 141]
[52 140]
[53 139]
[54 138]
[55 132]
[56 131]
[57 130]
[58 129]
[61 128]
[62 127]
[63 126]
[64 125]
[65 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
