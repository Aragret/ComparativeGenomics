%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[13.04477119 250.80821228]
[19.85624695 264.19253540]
[25.03687096 278.28854370]
[28.51391220 292.89834595]
[30.23856163 307.81686401]
[30.18660545 322.83462524]
[28.35877419 337.74084473]
[24.78072739 352.32626343]
[19.50269508 366.38607788]
[12.59877396 379.72296143]
[4.16588259 392.14965820]
[-5.67759371 403.49172974]
[-16.79346848 413.58990479]
[-29.02569008 422.30249023]
[-42.20254135 429.50714111]
[-56.13903427 435.10272217]
[-70.63952637 439.01068115]
[-85.50045013 441.17614746]
[-100.51319122 441.56872559]
[-115.46697998 440.18289185]
[-130.15190125 437.03811646]
[-144.36178589 432.17855835]
[-157.89717102 425.67239380]
[-170.56802368 417.61102295]
[-182.19645691 408.10757446]
[-192.61926270 397.29547119]
[-201.69007874 385.32647705]
[-209.28158569 372.36865234]
[-215.28721619 358.60388184]
[-219.62265015 344.22540283]
[-222.22703552 329.43508911]
[-223.06378174 314.44055176]
[-222.12118530 299.45230103]
[-219.41244507 284.68072510]
[-214.97560120 270.33322144]
[-208.87294006 256.61120605]
[-201.19012451 243.70730591]
[-192.03501892 231.80267334]
[-181.53614807 221.06442261]
[-169.84089661 211.64329529]
[-157.11344910 203.67158508]
[-143.53247070 197.26116943]
[-129.28862000 192.50204468]
[-114.58187103 189.46102905]
[-99.61866760 188.18083191]
[-84.60907745 188.67938232]
[-69.76381683 190.94972229]
[-55.29127502 194.95994568]
[-41.39463425 200.65377808]
[-28.26898003 207.95129395]
[-16.09857559 216.75001526]
[-5.93502951 205.71813965]
[4.22851753 194.68626404]
[14.39206409 183.65438843]
[24.55561066 172.62251282]
[34.71915817 161.59063721]
[44.80029678 150.48339844]
[54.79846954 139.30142212]
[64.79663849 128.11944580]
[74.79481506 116.93746948]
[84.79298401 105.75550079]
[87.79859161 89.25269318]
[103.79004669 84.18814850]
[113.62062836 72.85855865]
[123.45121002 61.52896500]
[133.28178406 50.19937134]
[133.15049744 37.30186844]
[141.57165527 28.06780624]
[153.62780762 27.07991028]
[163.62597656 15.89793587]
[164.69177246 10.78802872]
[167.34568787 6.97882223]
[170.82630920 4.85743570]
[174.32896423 4.45269728]
[184.81646729 -6.27168226]
[195.30397034 -16.99606133]
[205.79145813 -27.72044182]
[195.68043518 -38.80604172]
[186.21876526 -50.45079041]
[177.43731689 -62.61670685]
[169.36471558 -75.26410675]
[162.02731323 -88.35173035]
[155.44903564 -101.83689880]
[149.65135193 -115.67562103]
[144.65315247 -129.82275391]
[140.47074890 -144.23216248]
[137.11778259 -158.85682678]
[134.60519409 -173.64906311]
[132.94117737 -188.56062317]
[132.13114929 -203.54286194]
[132.17778015 -218.54690552]
[133.08088684 -233.52380371]
[134.83753967 -248.42472839]
[137.44201660 -263.20108032]
[140.88580322 -277.80462646]
[145.15766907 -292.18774414]
[150.24369812 -306.30355835]
[156.12727356 -320.10598755]
[162.78923035 -333.55001831]
[170.20782471 -346.59176636]
[178.35885620 -359.18875122]
[187.21574402 -371.29986572]
[196.74960327 -382.88558960]
[206.92933655 -393.90814209]
[217.72172546 -404.33157349]
[229.09156799 -414.12185669]
[241.00180054 -423.24710083]
[253.41354370 -431.67752075]
[266.28634644 -439.38562012]
[279.57818604 -446.34622192]
[293.24572754 -452.53668213]
[307.24438477 -457.93679810]
[321.52850342 -462.52890015]
[336.05148315 -466.29806519]
[350.76593018 -469.23199463]
[365.62390137 -471.32107544]
[380.57690430 -472.55853271]
[395.57617188 -472.94033813]
[410.57275391 -472.46520996]
[425.51776123 -471.13473511]
[440.36242676 -468.95321655]
[455.05834961 -465.92779541]
[469.55758667 -462.06835938]
[483.81286621 -457.38745117]
[497.77764893 -451.90032959]
[511.40640259 -445.62496948]
[524.65466309 -438.58175659]
[537.47924805 -430.79373169]
[549.83831787 -422.28622437]
[561.69152832 -413.08706665]
[573.00024414 -403.22619629]
[583.72753906 -392.73583984]
[593.83850098 -381.65014648]
[603.30004883 -370.00534058]
[612.08142090 -357.83935547]
[620.15393066 -345.19189453]
[627.49121094 -332.10418701]
[634.06939697 -318.61898804]
[639.86700439 -304.78021240]
[644.86505127 -290.63305664]
[649.04736328 -276.22360229]
[652.40020752 -261.59890747]
[654.91265869 -246.80664062]
[656.57659912 -231.89508057]
[657.38647461 -216.91284180]
[657.33972168 -201.90879822]
[656.43652344 -186.93190002]
[654.67974854 -172.03099060]
[652.07513428 -157.25466919]
[648.63128662 -142.65113831]
[644.35925293 -128.26803589]
[639.27313232 -114.15228271]
[633.38946533 -100.34989929]
[626.72741699 -86.90592957]
[619.30871582 -73.86421204]
[611.15759277 -61.26729202]
[602.30059814 -49.15625381]
[592.76660156 -37.57060623]
[582.58679199 -26.54813576]
[571.79437256 -16.12479591]
[560.42443848 -6.33458662]
[548.51409912 2.79055834]
[536.10229492 11.22087479]
[523.22943115 18.92886543]
[509.93756104 25.88938522]
[496.26995850 32.07973480]
[482.27127075 37.47971725]
[467.98712158 42.07172394]
[453.46411133 45.84077454]
[438.74963379 48.77457428]
[423.89163208 50.86355591]
[408.93862915 52.10090256]
[393.93936157 52.48257828]
[378.94277954 52.00734329]
[363.99780273 50.67674255]
[349.15313721 48.49511719]
[334.45721436 45.46958160]
[319.95800781 41.61000824]
[305.70278931 36.92898560]
[291.73803711 31.44178200]
[278.10934448 25.16629219]
[264.86111450 18.12299156]
[252.03660583 10.33484840]
[239.67761230 1.82727003]
[227.82447815 -7.37199545]
[216.51583862 -17.23294067]
[206.02833557 -6.50856113]
[195.54084778 4.21581888]
[185.05334473 14.94019794]
[174.80795288 25.89610863]
[164.80978394 37.07808304]
[162.15165710 54.42459106]
[144.61137390 60.02994919]
[134.78080750 71.35954285]
[124.95021820 82.68914032]
[115.11963654 94.01873016]
[115.24110413 105.66461182]
[107.54302979 114.40422821]
[95.97496033 115.75366974]
[85.97678375 126.93564606]
[75.97861481 138.11761475]
[65.98044586 149.29959106]
[55.98227310 160.48156738]
[52.59508514 168.96476746]
[45.75103378 171.75418091]
[35.58749008 182.78605652]
[25.42394066 193.81793213]
[15.26039505 204.84980774]
[5.09684801 215.88168335]
[-5.06669903 226.91355896]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 210]
[52 209]
[53 208]
[54 207]
[55 206]
[56 205]
[57 203]
[58 202]
[59 201]
[60 200]
[61 199]
[63 196]
[64 195]
[65 194]
[66 193]
[69 191]
[70 190]
[74 189]
[75 188]
[76 187]
[77 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
