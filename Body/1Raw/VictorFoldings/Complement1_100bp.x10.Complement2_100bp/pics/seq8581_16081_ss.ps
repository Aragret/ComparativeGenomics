%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[157.56755066 551.83081055]
[161.59439087 537.32299805]
[168.54994202 523.96954346]
[178.13014221 512.35430908]
[189.91616821 502.98504639]
[203.39280701 496.27133179]
[199.63650513 481.74926758]
[195.88020325 467.22720337]
[192.12390137 452.70513916]
[187.72290039 438.36529541]
[182.68598938 424.23626709]
[177.64906311 410.10723877]
[172.61215210 395.97821045]
[167.57524109 381.84918213]
[162.53831482 367.72015381]
[150.23843384 363.88058472]
[142.27694702 353.50289917]
[141.73826599 340.23937988]
[149.04292297 328.92318726]
[144.21693420 314.72073364]
[139.39093018 300.51828003]
[134.56494141 286.31582642]
[129.73893738 272.11337280]
[124.02159882 285.98101807]
[111.30576324 293.93762207]
[96.33412933 293.01556396]
[84.69074249 283.55874634]
[80.71830750 269.09429932]
[85.89842987 255.01715088]
[98.29906464 246.57769775]
[113.29507446 246.92366028]
[125.29399872 255.92695618]
[122.18988800 241.25164795]
[111.98628235 230.40104675]
[116.70027924 215.29843140]
[104.11546326 207.41439819]
[100.75839996 192.57577515]
[109.11322784 179.42912292]
[106.00911713 164.75381470]
[95.80551147 153.90321350]
[100.51950836 138.80059814]
[97.41539764 124.12529755]
[94.31128693 109.44998932]
[84.06610870 120.40610504]
[69.10128784 119.37945557]
[60.44832230 107.12685394]
[64.48586273 92.68045807]
[78.23758698 86.68962097]
[91.56523132 93.56924438]
[89.56121826 78.70371246]
[87.55720520 63.83818436]
[85.55318451 48.97265625]
[83.54917145 34.10712814]
[79.30130768 26.02050972]
[81.62769318 19.00554657]
[79.84523010 4.11182928]
[78.06275940 -10.78188801]
[76.28029633 -25.67560577]
[66.95793152 -38.45856476]
[73.12801361 -52.01509094]
[61.94623184 -42.01669693]
[47.13267517 -44.37434769]
[39.60734177 -57.35006714]
[44.91762543 -71.37863922]
[59.14898682 -76.11872101]
[71.80971527 -68.07750702]
[71.13993073 -83.06254578]
[70.47014618 -98.04758453]
[69.80036163 -113.03262329]
[69.13057709 -128.01765442]
[68.46078491 -143.00270081]
[67.79100037 -157.98773193]
[58.42997742 -146.26719666]
[43.99861145 -142.17626953]
[29.87944794 -147.24076843]
[21.33858681 -159.57177734]
[21.56155777 -174.57011414]
[30.46519852 -186.64178467]
[44.72866821 -191.28434753]
[59.03205109 -186.76625061]
[68.04091644 -174.77151489]
[69.15656281 -189.72996521]
[70.27221680 -204.68841553]
[71.38786316 -219.64686584]
[72.50350952 -234.60531616]
[73.61916351 -249.56378174]
[74.73480988 -264.52221680]
[75.85045624 -279.48068237]
[76.85471344 -294.44702148]
[77.74753571 -309.42044067]
[70.84535217 -323.65667725]
[79.32647705 -335.90084839]
[80.21929169 -350.87423706]
[65.70292664 -354.87036133]
[52.33479309 -361.79760742]
[40.69929123 -371.35314941]
[31.30507851 -383.11932373]
[24.56282616 -396.58169556]
[20.76727486 -411.15179443]
[20.08435249 -426.19262695]
[22.54391289 -441.04675293]
[28.03843498 -455.06472778]
[36.32772064 -467.63378906]
[47.04940033 -478.20446777]
[59.73476410 -486.31466675]
[73.82926178 -491.60983276]
[88.71675110 -493.85845947]
[103.74640656 -492.96231079]
[118.26119995 -488.96047974]
[131.62660217 -482.02798462]
[143.25834656 -472.46783447]
[152.64793396 -460.69799805]
[159.38488770 -447.23297119]
[163.17471313 -432.66137695]
[163.85171509 -417.62026978]
[161.38630676 -402.76712036]
[155.88627625 -388.75131226]
[147.59204102 -376.18548584]
[136.86621094 -365.61904907]
[124.17765045 -357.51382446]
[110.08106995 -352.22421265]
[95.19269562 -349.98144531]
[94.29988098 -335.00802612]
[101.26592255 -321.84277344]
[92.72093964 -308.52761841]
[91.82812500 -293.55419922]
[94.56792450 -286.69015503]
[90.80891418 -278.36502075]
[89.69326019 -263.40658569]
[88.57761383 -248.44812012]
[87.46196747 -233.48966980]
[86.34631348 -218.53121948]
[85.23066711 -203.57276917]
[84.11502075 -188.61431885]
[82.99936676 -173.65585327]
[82.77603912 -158.65751648]
[83.44582367 -143.67248535]
[84.11561584 -128.68743896]
[84.78540039 -113.70240784]
[85.45518494 -98.71736908]
[86.12496948 -83.73233032]
[86.79475403 -68.74729156]
[88.02172852 -53.79755402]
[97.21659851 -42.07989502]
[91.17401123 -27.45807076]
[92.95648193 -12.56435394]
[94.73894501 2.32936335]
[96.52140808 17.22308159]
[98.41470337 32.10311508]
[100.41871643 46.96864319]
[102.42272949 61.83417130]
[104.42674255 76.69969940]
[106.43075562 91.56523132]
[108.98658752 106.34587860]
[112.09069824 121.02118683]
[115.19480896 135.69648743]
[125.62044525 147.59677124]
[120.68441772 161.64970398]
[123.78852844 176.32501221]
[136.75114441 184.96261597]
[139.69009399 199.88967896]
[131.37557983 212.19432068]
[141.80120850 224.09460449]
[136.86518860 238.14753723]
[139.96929932 252.82284546]
[143.94139099 267.28735352]
[148.76739502 281.48980713]
[153.59338379 295.69229126]
[158.41938782 309.89474487]
[163.24539185 324.09719849]
[179.07611084 331.54080200]
[184.51823425 347.81036377]
[176.66734314 362.68322754]
[181.70426941 376.81225586]
[186.74118042 390.94128418]
[191.77809143 405.07031250]
[196.81501770 419.19934082]
[201.85192871 433.32836914]
[209.24282837 420.27560425]
[223.66125488 416.13934326]
[236.84770203 423.28900146]
[241.24835205 437.62896729]
[234.34233093 450.94464111]
[220.08570862 455.60818481]
[206.64595032 448.94885254]
[210.40225220 463.47091675]
[214.15855408 477.99295044]
[217.91485596 492.51501465]
[232.95660400 491.85211182]
[247.80741882 494.33145142]
[261.81808472 499.84463501]
[274.37609863 508.15066528]
[284.93249512 518.88641357]
[293.02578735 531.58258057]
[298.30218506 545.68408203]
[300.53100586 560.57458496]
[299.61480713 575.60302734]
[295.59368896 590.11248779]
[288.64337158 603.46862793]
[279.06774902 615.08764648]
[267.28543091 624.46154785]
[253.81143188 631.18054199]
[239.23481750 634.95098877]
[224.19279480 635.60797119]
[209.34297180 633.12274170]
[195.33448792 627.60406494]
[182.77973938 619.29309082]
[172.22755432 608.55322266]
[164.13926697 595.85388184]
[158.86842346 581.75024414]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 188]
[7 187]
[8 186]
[9 185]
[10 178]
[11 177]
[12 176]
[13 175]
[14 174]
[15 173]
[19 170]
[20 169]
[21 168]
[22 167]
[23 166]
[32 165]
[33 164]
[35 162]
[38 159]
[39 158]
[41 156]
[42 155]
[43 154]
[49 153]
[50 152]
[51 151]
[52 150]
[53 149]
[55 148]
[56 147]
[57 146]
[58 145]
[60 143]
[66 142]
[67 141]
[68 140]
[69 139]
[70 138]
[71 137]
[72 136]
[81 135]
[82 134]
[83 133]
[84 132]
[85 131]
[86 130]
[87 129]
[88 128]
[89 126]
[90 125]
[92 123]
[93 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
