%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[106.83994293 824.91870117]
[91.95692444 823.02587891]
[77.18177795 820.42169189]
[62.54848099 817.11206055]
[48.09069061 813.10467529]
[33.84165955 808.40875244]
[19.83416176 803.03503418]
[6.10041714 796.99584961]
[-7.32798767 790.30523682]
[-20.42016602 782.97845459]
[-33.14600754 775.03234863]
[-45.47623825 766.48529053]
[-57.38250351 757.35693359]
[-68.83740997 747.66815186]
[-79.81462097 737.44134521]
[-90.28888702 726.69995117]
[-100.23610687 715.46881104]
[-109.63341522 703.77362061]
[-118.45919037 691.64129639]
[-126.69313049 679.09979248]
[-134.31629944 666.17797852]
[-141.31117249 652.90545654]
[-147.66163635 639.31286621]
[-153.35311890 625.43145752]
[-158.37249756 611.29309082]
[-162.70825195 596.93035889]
[-166.35040283 582.37628174]
[-169.29055786 567.66430664]
[-171.52197266 552.82830811]
[-173.03952026 537.90234375]
[-173.83967590 522.92077637]
[-173.92063904 507.91812134]
[-173.28221130 492.92880249]
[-171.92584229 477.98733521]
[-169.85467529 463.12811279]
[-167.07345581 448.38525391]
[-163.58859253 433.79269409]
[-159.40811157 419.38400269]
[-154.54159546 405.19232178]
[-149.00025940 391.25027466]
[-142.79685974 377.58993530]
[-135.94563293 364.24273682]
[-128.46237183 351.23937988]
[-120.36425781 338.60974121]
[-111.66993713 326.38290405]
[-102.39939880 314.58697510]
[-92.57395935 303.24908447]
[-82.21623230 292.39529419]
[-71.35003662 282.05062866]
[-60.00035477 272.23880005]
[-48.19330215 262.98242188]
[-35.95603180 254.30279541]
[-23.31668663 246.21984863]
[-10.30434418 238.75219727]
[3.05107069 231.91700745]
[16.71883965 225.73001099]
[30.66752434 220.20541382]
[44.86504745 215.35595703]
[59.27874756 211.19276428]
[73.87547302 207.72541809]
[88.62165833 204.96191406]
[103.48337555 202.90858459]
[102.14514160 187.96839905]
[100.80690765 173.02821350]
[99.46867371 158.08802795]
[98.13043976 143.14784241]
[96.79220581 128.20765686]
[94.78819275 113.34213257]
[85.90407562 102.54564667]
[90.45059204 89.32366180]
[87.78479004 74.56244659]
[77.65312958 66.58045959]
[75.73667145 54.23092270]
[82.52384186 44.21789169]
[80.07811737 29.41861916]
[77.63238525 14.61934853]
[75.18666077 -0.17992257]
[68.86178589 13.42139816]
[56.99677658 22.59863091]
[42.24231339 25.30155945]
[27.89457893 20.92634201]
[17.15889359 10.45041370]
[12.43363762 -3.78587627]
[14.77444458 -18.60210419]
[23.65837097 -30.68828773]
[37.10072708 -37.34434128]
[52.09845734 -37.08328629]
[65.30102539 -29.96344376]
[73.75895691 -17.57538414]
[73.75895691 -32.57538223]
[73.75895691 -47.57538223]
[73.75895691 -62.57538223]
[73.75895691 -77.57538605]
[59.11973953 -81.17493439]
[45.76766968 -88.17391205]
[34.47901535 -98.16539001]
[25.91008568 -110.56848907]
[20.55906487 -124.66210938]
[18.73705864 -139.62686157]
[20.54999352 -154.59271240]
[25.89246559 -168.68957520]
[34.45387650 -181.09785461]
[45.73646927 -191.09619141]
[59.08429718 -198.10325623]
[73.72132874 -201.71168518]
[88.79658508 -201.71168518]
[103.43361664 -198.10325623]
[116.78144073 -191.09619141]
[128.06404114 -181.09785461]
[136.62544250 -168.68957520]
[141.96792603 -154.59271240]
[143.78085327 -139.62686157]
[141.95884705 -124.66210938]
[136.60783386 -110.56848907]
[128.03889465 -98.16539001]
[116.75024414 -88.17391205]
[103.39817047 -81.17493439]
[88.75895691 -77.57538605]
[88.75895691 -62.57538223]
[88.75895691 -47.57538223]
[88.75895691 -32.57538223]
[88.75895691 -17.57538414]
[89.98593140 -2.62564993]
[92.43165588 12.17362118]
[94.87738800 26.97289085]
[97.32311249 41.77216339]
[109.17289734 54.71625900]
[102.54601288 71.89665222]
[105.21180725 86.65786743]
[114.09592438 97.45435333]
[109.54940796 110.67633820]
[118.96963501 99.00331879]
[133.86953735 97.27330017]
[145.71377563 106.47732544]
[147.71743774 121.34290314]
[138.73272705 133.35435486]
[123.90649414 135.63098145]
[111.73239136 126.86942291]
[113.07062531 141.80961609]
[114.40885925 156.74980164]
[115.74709320 171.68998718]
[117.08532715 186.63017273]
[118.42356110 201.57035828]
[133.41362000 200.94976807]
[148.41618347 201.04859924]
[163.39677429 201.86662292]
[178.32090759 203.40194702]
[193.15426636 205.65103149]
[207.86273193 208.60871887]
[222.41247559 212.26820374]
[236.77003479 216.62106323]
[250.90238953 221.65728760]
[264.77700806 227.36529541]
[278.36203003 233.73194885]
[291.62615967 240.74263000]
[304.53894043 248.38119507]
[317.07061768 256.63006592]
[329.19238281 265.47027588]
[340.87637329 274.88153076]
[352.09570312 284.84210205]
[362.82458496 295.32916260]
[373.03829956 306.31854248]
[382.71340942 317.78500366]
[391.82760620 329.70211792]
[400.35998535 342.04254150]
[408.29089355 354.77783203]
[415.60205078 367.87872314]
[422.27670288 381.31509399]
[428.29946899 395.05603027]
[433.65652466 409.06991577]
[438.33551025 423.32452393]
[442.32565308 437.78707886]
[445.61782837 452.42431641]
[448.20443726 467.20254517]
[450.07952881 482.08782959]
[451.23876953 497.04586792]
[451.67953491 512.04229736]
[451.40078735 527.04260254]
[450.40316772 542.01226807]
[448.68896484 556.91693115]
[446.26214600 571.72222900]
[443.12829590 586.39416504]
[439.29455566 600.89898682]
[434.76983643 615.20330811]
[429.56448364 629.27423096]
[423.69049072 643.07940674]
[417.16134644 656.58709717]
[409.99212646 669.76623535]
[402.19924927 682.58642578]
[393.80065918 695.01831055]
[384.81570435 707.03320312]
[375.26504517 718.60345459]
[365.17059326 729.70251465]
[354.55563354 740.30487061]
[343.44454956 750.38604736]
[331.86288452 759.92297363]
[319.83731079 768.89355469]
[307.39547729 777.27734375]
[294.56597900 785.05493164]
[281.37832642 792.20849609]
[267.86288452 798.72149658]
[254.05072021 804.57904053]
[239.97358704 809.76763916]
[225.66387939 814.27532959]
[211.15451050 818.09173584]
[196.47885132 821.20812988]
[181.67065430 823.61730957]
[166.76397705 825.31378174]
[151.79310608 826.29351807]
[136.79248047 826.55444336]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 143]
[63 142]
[64 141]
[65 140]
[66 139]
[67 138]
[68 131]
[70 129]
[71 128]
[74 126]
[75 125]
[76 124]
[77 123]
[89 122]
[90 121]
[91 120]
[92 119]
[93 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
