%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[50.00522614 712.17889404]
[35.15900421 714.36694336]
[20.19359779 715.47796631]
[5.18703365 715.50622559]
[-9.78245068 714.45153809]
[-24.63681030 712.31945801]
[-39.29860306 709.12109375]
[-53.69138336 704.87310791]
[-67.74011993 699.59759521]
[-81.37155914 693.32214355]
[-94.51464081 686.07940674]
[-107.10083771 677.90716553]
[-119.06453705 668.84802246]
[-130.34335327 658.94927979]
[-140.87849426 648.26239014]
[-150.61503601 636.84326172]
[-159.50219727 624.75128174]
[-167.49366760 612.04949951]
[-174.54776001 598.80426025]
[-180.62773132 585.08447266]
[-185.70184326 570.96173096]
[-189.74365234 556.50970459]
[-192.73211670 541.80371094]
[-194.65161133 526.92041016]
[-195.49215698 511.93734741]
[-195.24937439 496.93273926]
[-193.92449951 481.98474121]
[-191.52447510 467.17129517]
[-188.06179810 452.56967163]
[-183.55450439 438.25598145]
[-178.02612305 424.30480957]
[-171.50546265 410.78894043]
[-164.02651978 397.77883911]
[-155.62829590 385.34228516]
[-146.35455322 373.54415894]
[-136.25366211 362.44598389]
[-125.37828064 352.10559082]
[-113.78510284 342.57690430]
[-101.53456879 333.90957642]
[-88.69055939 326.14883423]
[-75.32003021 319.33514404]
[-61.49268723 313.50396729]
[-47.28062439 308.68579102]
[-32.75793839 304.90563965]
[-18.00034523 302.18331909]
[-3.08478022 300.53295898]
[11.91098881 299.96316528]
[26.90878296 300.47692871]
[41.83040619 302.07156372]
[44.49620056 287.31036377]
[47.16199875 272.54913330]
[49.82779312 257.78793335]
[44.47554779 243.88818359]
[54.54224396 231.68276978]
[57.20803833 216.92153931]
[59.87383270 202.16032410]
[49.01289749 212.50634766]
[34.45761490 216.13177490]
[20.01270103 212.08894348]
[9.45402527 201.43463135]
[5.54159737 186.95385742]
[9.29811764 172.43185425]
[19.74164009 161.66464233]
[34.14225388 157.46673584]
[48.73567200 160.93548584]
[59.70721054 171.16413879]
[64.18889618 185.47807312]
[69.01489258 171.27560425]
[73.73503113 157.03762817]
[78.34903717 142.76489258]
[82.96304321 128.49215698]
[79.51580048 114.00196075]
[91.12290192 103.25087738]
[89.85386658 98.16133118]
[91.52674866 92.72306061]
[96.09260559 88.62551880]
[101.12952423 74.49649048]
[106.16643524 60.36745834]
[111.20335388 46.23843002]
[116.24027252 32.10939789]
[121.06626892 17.90694427]
[125.68027496 3.63421035]
[122.56305695 -11.87686634]
[133.84013367 -21.60706520]
[138.45414734 -35.87979889]
[143.06816101 -50.15253067]
[147.04025269 -64.61705780]
[150.36250305 -79.24451447]
[153.68476868 -93.87197876]
[157.00703430 -108.49943542]
[160.32928467 -123.12689972]
[163.21456909 -137.84678650]
[165.66029358 -152.64605713]
[160.27662659 -167.52311707]
[169.98554993 -178.81851196]
[172.43127441 -193.61778259]
[174.87699890 -208.41705322]
[177.32272339 -223.21632385]
[179.76846313 -238.01559448]
[165.96398926 -244.08911133]
[154.10414124 -253.40548706]
[144.93444824 -265.37908936]
[139.03129578 -279.25726318]
[136.76577759 -294.16760254]
[138.28031921 -309.17285156]
[143.47969055 -323.32971191]
[152.03706360 -335.74835205]
[163.41452026 -345.64804077]
[176.89686584 -352.40655518]
[191.63658142 -355.59899902]
[206.70710754 -355.02468872]
[221.16111755 -350.71975708]
[234.09001160 -342.95480347]
[244.68106079 -332.21795654]
[252.26852417 -319.18408203]
[256.37542725 -304.67257690]
[256.74362183 -289.59561157]
[253.34992981 -274.90090942]
[246.40773010 -261.51223755]
[236.35337830 -250.27119446]
[223.81892395 -241.88441467]
[209.59226990 -236.87910461]
[194.56773376 -235.56987000]
[192.12200928 -220.77059937]
[189.67626953 -205.97132874]
[187.23054504 -191.17205811]
[184.78482056 -176.37278748]
[190.34341431 -162.55427551]
[180.45956421 -150.20033264]
[178.01383972 -135.40106201]
[179.53477478 -133.04631042]
[180.21461487 -129.94720459]
[179.76515198 -126.42110443]
[178.01832581 -122.88371277]
[174.95675659 -119.80463409]
[171.63449097 -105.17717743]
[168.31222534 -90.54972076]
[164.98997498 -75.92225647]
[161.66770935 -61.29479599]
[174.90417480 -68.35143280]
[189.29312134 -64.11373138]
[196.59191895 -51.00923920]
[192.61947632 -36.54481125]
[179.65139771 -29.00632286]
[165.11637878 -32.71216583]
[157.34088135 -45.53852463]
[152.72688293 -31.26578903]
[148.11286926 -16.99305725]
[151.56011963 -2.50286078]
[139.95301819 8.24821949]
[135.33900452 22.52095222]
[136.67736816 27.10547066]
[135.14999390 32.57941818]
[130.36929321 37.14631653]
[125.33238220 51.27534485]
[120.29547119 65.40437317]
[115.25855255 79.53340149]
[110.22163391 93.66243744]
[105.39563751 107.86489105]
[108.51285553 123.37596893]
[97.23577881 133.10617065]
[92.62177277 147.37890625]
[88.00775909 161.65162659]
[88.34572601 170.77981567]
[83.21734619 176.10160828]
[78.39134979 190.30406189]
[74.63504791 204.82612610]
[71.96925354 219.58734131]
[69.30345917 234.34855652]
[74.46502686 249.30412292]
[64.58901215 260.45370483]
[61.92321396 275.21493530]
[59.25741959 289.97616577]
[56.59162521 304.73736572]
[71.12844849 308.46276855]
[85.35855865 313.22738647]
[99.20776367 319.00640869]
[112.60386658 325.76971436]
[125.47702026 333.48202515]
[137.76011658 342.10311890]
[149.38909912 351.58807373]
[160.30335999 361.88745117]
[170.44598389 372.94750977]
[179.76409912 384.71060181]
[188.20912170 397.11541748]
[195.73701477 410.09725952]
[202.30854797 423.58847046]
[207.88943481 437.51870728]
[212.45060730 451.81533813]
[215.96826172 466.40380859]
[218.42407227 481.20809937]
[219.80523682 496.15100098]
[220.10455322 511.15460205]
[219.32044983 526.14068604]
[217.45703125 541.03112793]
[214.52398682 555.74829102]
[210.53663635 570.21545410]
[205.51576233 584.35717773]
[199.48751831 598.09979248]
[192.48336792 611.37152100]
[184.53979492 624.10327148]
[175.69824219 636.22863770]
[166.00479126 647.68444824]
[155.50997925 658.41088867]
[144.26852417 668.35205078]
[132.33905029 677.45617676]
[119.78372192 685.67578125]
[106.66801453 692.96795654]
[93.06030273 699.29473877]
[79.03153992 704.62310791]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 174]
[50 173]
[51 172]
[52 171]
[54 169]
[55 168]
[56 167]
[67 166]
[68 165]
[69 163]
[70 162]
[71 161]
[73 159]
[76 158]
[77 157]
[78 156]
[79 155]
[80 154]
[81 151]
[82 150]
[84 148]
[85 147]
[86 146]
[87 139]
[88 138]
[89 137]
[90 136]
[91 135]
[92 130]
[93 129]
[95 127]
[96 126]
[97 125]
[98 124]
[99 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
