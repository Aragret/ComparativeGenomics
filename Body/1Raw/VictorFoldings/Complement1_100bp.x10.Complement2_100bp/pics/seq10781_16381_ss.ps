%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[40.84694290 566.87109375]
[29.14062881 576.25976562]
[16.80790520 584.80895996]
[3.90886140 592.47705078]
[-9.49366188 599.22662354]
[-23.33436584 605.02490234]
[-37.54582214 609.84350586]
[-52.05879211 613.65905762]
[-66.80257416 616.45294189]
[-81.70532227 618.21154785]
[-96.69445038 618.92626953]
[-111.69692230 618.59368896]
[-126.63964081 617.21539307]
[-141.44981384 614.79803467]
[-156.05529785 611.35351562]
[-170.38491821 606.89855957]
[-184.36886597 601.45483398]
[-197.93901062 595.04895020]
[-211.02925110 587.71203613]
[-223.57579041 579.47985840]
[-235.51753235 570.39251709]
[-246.79626465 560.49426270]
[-257.35705566 549.83337402]
[-267.14846802 538.46179199]
[-276.12277222 526.43487549]
[-284.23626709 513.81127930]
[-291.44940186 500.65240479]
[-297.72705078 487.02246094]
[-303.03863525 472.98779297]
[-307.35824585 458.61679077]
[-310.66485596 443.97946167]
[-312.94238281 429.14715576]
[-314.17968750 414.19207764]
[-314.37078857 399.18716431]
[-313.51470947 384.20544434]
[-311.61563110 369.31991577]
[-308.68283081 354.60314941]
[-304.73056030 340.12683105]
[-299.77810669 325.96145630]
[-293.84957886 312.17602539]
[-286.97387695 298.83776855]
[-279.18447876 286.01162720]
[-270.51934814 273.76007080]
[-261.02072144 262.14282227]
[-250.73481750 251.21649170]
[-239.71179199 241.03425598]
[-228.00534058 231.64576721]
[-215.67250061 223.09675598]
[-202.77334595 215.42886353]
[-189.37072754 208.67945862]
[-175.52993774 202.88140869]
[-161.31840515 198.06298828]
[-146.80538940 194.24763489]
[-132.06156921 191.45397949]
[-117.15879059 189.69558716]
[-102.16965485 188.98106384]
[-87.16719055 189.31387329]
[-72.22448730 190.69239807]
[-57.41434097 193.10990906]
[-42.80891418 196.55465698]
[-28.47935867 201.00982666]
[-14.49548817 206.45373535]
[-0.92543173 212.85984802]
[12.16469860 220.19696045]
[20.39350700 207.65556335]
[28.62231445 195.11415100]
[36.85112381 182.57275391]
[37.36403656 167.68698120]
[51.40373993 160.39334106]
[59.63254547 147.85194397]
[67.86135101 135.31053162]
[58.52620697 123.65695190]
[53.24708557 109.68977356]
[52.54027176 94.77497101]
[56.47489166 80.37115479]
[64.66614532 67.88699341]
[76.31295013 58.54339218]
[90.27629089 53.25413132]
[105.19058228 52.53649139]
[119.59724426 56.46065521]
[127.82605743 43.91925430]
[136.05485535 31.37785339]
[144.28367615 18.83645439]
[152.51248169 6.29505348]
[137.64385986 8.27606297]
[125.64611053 -0.72693312]
[123.39207458 -15.55661011]
[132.17297363 -27.71785545]
[146.95870972 -30.24415588]
[159.27932739 -21.68833160]
[162.07722473 -6.95247698]
[171.39210510 -18.70972824]
[180.70700073 -30.46697998]
[190.02188110 -42.22423172]
[179.15246582 -52.57657242]
[169.26947021 -63.87444305]
[160.45481873 -76.02421570]
[152.78152466 -88.92522430]
[146.31320190 -102.47055054]
[141.10342407 -116.54795837]
[137.19537354 -131.04080200]
[134.62142944 -145.82897949]
[133.40292358 -160.78993225]
[133.54995728 -175.79972839]
[135.06130981 -190.73394775]
[137.92445374 -205.46885681]
[142.11566162 -219.88235474]
[147.60021973 -233.85501099]
[154.33265686 -247.27102661]
[162.25720215 -260.01922607]
[171.30818176 -271.99401855]
[181.41058350 -283.09609985]
[192.48071289 -293.23352051]
[204.42683411 -302.32229614]
[217.14996338 -310.28704834]
[230.54464722 -317.06182861]
[244.49990845 -322.59048462]
[258.90008545 -326.82720947]
[273.62588501 -329.73687744]
[288.55526733 -331.29537964]
[303.56451416 -331.48980713]
[318.52923584 -330.31857300]
[333.32546997 -327.79135132]
[347.83059692 -323.92910767]
[361.92437744 -318.76379395]
[375.49008179 -312.33828735]
[388.41525269 -304.70578003]
[400.59280396 -295.92956543]
[411.92184448 -286.08230591]
[422.30844116 -275.24563599]
[431.66659546 -263.50933838]
[439.91873169 -250.97070312]
[446.99645996 -237.73359680]
[452.84112549 -223.90769958]
[457.40429688 -209.60762024]
[460.64819336 -194.95181274]
[462.54589844 -180.06175232]
[463.08172607 -165.06082153]
[462.25119019 -150.07330322]
[460.06121826 -135.22341919]
[456.52990723 -120.63420868]
[451.68655396 -106.42655945]
[445.57128906 -92.71821594]
[438.23477173 -79.62276459]
[429.73782349 -67.24872589]
[420.15081787 -55.69862747]
[409.55322266 -45.06818771]
[398.03283691 -35.44549179]
[385.68515015 -26.91028023]
[372.61248779 -19.53327751]
[358.92312622 -13.37561512]
[344.73052979 -8.48831749]
[330.15231323 -4.91188383]
[315.30926514 -2.67594886]
[300.32440186 -1.79904175]
[285.32186890 -2.28842854]
[270.42602539 -4.14005375]
[255.76025391 -7.33857441]
[241.44610596 -11.85748577]
[227.60220337 -17.65934181]
[214.34326172 -24.69606590]
[201.77912903 -32.90934753]
[192.46424866 -21.15209770]
[183.14936829 -9.39484596]
[173.83448792 2.36240554]
[165.05387878 14.52386189]
[156.82507324 27.06526184]
[148.59626770 39.60666275]
[140.36744690 52.14806366]
[132.13864136 64.68946075]
[141.47378540 76.34304810]
[146.75291443 90.31022644]
[147.45973206 105.22502899]
[143.52511597 119.62884521]
[135.33386230 132.11300659]
[123.68704987 141.45660400]
[109.72370911 146.74586487]
[94.80941772 147.46350098]
[80.40275574 143.53935242]
[72.17394257 156.08074951]
[63.94513702 168.62214661]
[62.84364700 184.40496826]
[49.39252090 190.80155945]
[41.16371536 203.34297180]
[32.93490601 215.88436890]
[24.70609856 228.42576599]
[36.64796448 237.51293945]
[47.92684555 247.41099548]
[58.48779678 258.07171631]
[68.27935791 269.44317627]
[77.25383759 281.46994019]
[85.36750793 294.09347534]
[92.58083344 307.25222778]
[98.85867310 320.88208008]
[104.17044830 334.91668701]
[108.49027252 349.28762817]
[111.79711151 363.92489624]
[114.07483673 378.75717163]
[115.31236267 393.71221924]
[115.50366211 408.71713257]
[114.64779663 423.69888306]
[112.74893951 438.58441162]
[109.81634521 453.30120850]
[105.86428833 467.77761841]
[100.91204071 481.94305420]
[94.98371124 495.72854614]
[88.10820007 509.06692505]
[80.31899261 521.89318848]
[71.65403748 534.14483643]
[62.15555573 545.76220703]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 186]
[65 185]
[66 184]
[67 183]
[69 181]
[70 180]
[71 179]
[80 170]
[81 169]
[82 168]
[83 167]
[84 166]
[91 165]
[92 164]
[93 163]
[94 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
