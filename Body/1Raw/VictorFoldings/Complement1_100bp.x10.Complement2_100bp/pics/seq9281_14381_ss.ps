%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[35.42863083 335.29083252]
[29.39661026 349.03021240]
[22.49669456 362.35488892]
[14.75723839 375.21008301]
[6.21004486 387.54302979]
[-3.10976386 399.30297852]
[-13.16389084 410.44168091]
[-23.91102028 420.91329956]
[-35.30698776 430.67483521]
[-47.30496979 439.68615723]
[-59.85565948 447.91024780]
[-72.90748596 455.31332397]
[-86.40681458 461.86495972]
[-100.29816437 467.53823853]
[-114.52446747 472.30981445]
[-129.02726746 476.16009521]
[-143.74694824 479.07327271]
[-158.62303162 481.03738403]
[-173.59439087 482.04431152]
[-188.59951782 482.08996582]
[-203.57673645 481.17413330]
[-218.46449280 479.30059814]
[-233.20162964 476.47705078]
[-247.72758484 472.71505737]
[-261.98266602 468.03015137]
[-275.90826416 462.44152832]
[-289.44720459 455.97213745]
[-302.54385376 448.64862061]
[-315.14434814 440.50103760]
[-327.19692993 431.56289673]
[-338.65209961 421.87088013]
[-349.46273804 411.46484375]
[-359.58447266 400.38754272]
[-368.97564697 388.68450928]
[-377.59771729 376.40380859]
[-385.41525269 363.59591675]
[-392.39611816 350.31347656]
[-398.51165771 336.61108398]
[-403.73666382 322.54498291]
[-408.04974365 308.17303467]
[-411.43313599 293.55426025]
[-413.87292480 278.74874878]
[-415.35913086 263.81735229]
[-415.88562012 248.82141113]
[-415.45022583 233.82254028]
[-414.05474854 218.88238525]
[-411.70489502 204.06233215]
[-408.41036987 189.42327881]
[-404.18466187 175.02539062]
[-399.04516602 160.92782593]
[-393.01300049 147.18852234]
[-386.11294556 133.86393738]
[-378.37335205 121.00880432]
[-369.82601929 108.67597198]
[-360.50607300 96.91610718]
[-350.45181274 85.77753448]
[-339.70455933 75.30603790]
[-328.30850220 65.54462433]
[-316.31042480 56.53342819]
[-303.75964355 48.30946350]
[-290.70773315 40.90653229]
[-277.20834351 34.35505295]
[-263.31689453 28.68194580]
[-249.09054565 23.91052628]
[-234.58772278 20.06039619]
[-219.86801147 17.14738274]
[-204.99189758 15.18345070]
[-190.02052307 14.17667389]
[-175.01539612 14.13118744]
[-160.03819275 15.04718018]
[-145.15045166 16.92088699]
[-130.41334534 19.74460793]
[-115.88744354 23.50674057]
[-101.63241577 28.19182396]
[-87.70685577 33.78060532]
[-74.16799164 40.25012589]
[-61.07144165 47.57379150]
[-48.47103119 55.72151184]
[-36.41854095 64.65980530]
[-24.96349144 74.35194397]
[-14.15295792 84.75809479]
[-4.03136349 95.83551025]
[5.35970068 107.53865051]
[13.98164368 119.81944275]
[21.79903603 132.62741089]
[35.07688141 125.64895630]
[48.35472870 118.67050171]
[61.63257599 111.69204712]
[74.91042328 104.71360016]
[88.18827057 97.73514557]
[101.36074066 90.55977631]
[114.42492676 83.18908691]
[118.76792145 68.22994232]
[132.12185669 60.94111633]
[146.35635376 65.17368317]
[159.42054749 57.80298996]
[172.48472595 50.43230057]
[185.54891968 43.06161118]
[198.61309814 35.69092178]
[211.67727661 28.32023239]
[205.31242371 14.72957897]
[199.99362183 0.69647962]
[195.75138855 -13.69868469]
[192.60998535 -28.37345886]
[190.58741760 -43.24378586]
[189.69528198 -58.22449112]
[189.93869019 -73.22975922]
[191.31622314 -88.17364502]
[193.82000732 -102.97055817]
[197.43569946 -117.53572083]
[202.14257812 -131.78572083]
[207.91371155 -145.63894653]
[214.71600342 -159.01600647]
[222.51052856 -171.84031677]
[231.25260925 -184.03840637]
[240.89219666 -195.54040527]
[251.37405396 -206.28042603]
[262.63815308 -216.19694519]
[274.61996460 -225.23318481]
[287.25085449 -233.33735657]
[300.45849609 -240.46305847]
[314.16723633 -246.56945801]
[328.29852295 -251.62159729]
[342.77142334 -255.59053040]
[357.50305176 -258.45352173]
[372.40899658 -260.19418335]
[387.40390015 -260.80252075]
[402.40188599 -260.27508545]
[417.31701660 -258.61483765]
[432.06387329 -255.83135986]
[446.55795288 -251.94055176]
[460.71627808 -246.96470642]
[474.45776367 -240.93232727]
[487.70364380 -233.87797546]
[500.37808228 -225.84204102]
[512.40844727 -216.87057495]
[523.72589111 -207.01495361]
[534.26550293 -196.33161926]
[543.96697998 -184.88179016]
[552.77478027 -172.73103333]
[560.63830566 -159.94895935]
[567.51269531 -146.60876465]
[573.35845947 -132.78688049]
[578.14215088 -118.56247711]
[581.83630371 -104.01702118]
[584.41992188 -89.23383331]
[585.87799072 -74.29759216]
[586.20233154 -59.29385757]
[585.39105225 -44.30855942]
[583.44873047 -29.42753792]
[580.38647461 -14.73603344]
[576.22198486 -0.31819624]
[570.97894287 13.74338818]
[564.68750000 27.36817551]
[557.38360596 40.47812271]
[549.10913086 52.99813461]
[539.91149902 64.85649872]
[529.84338379 75.98529816]
[518.96240234 86.32077026]
[507.33093262 95.80372620]
[495.01559448 104.37985229]
[482.08694458 112.00000763]
[468.61898804 118.62055969]
[454.68890381 124.20358276]
[440.37646484 128.71708679]
[425.76367188 132.13523865]
[410.93423462 134.43843079]
[395.97305298 135.61349487]
[380.96588135 135.65370178]
[365.99862671 134.55880737]
[351.15704346 132.33508301]
[336.52615356 128.99526978]
[322.18972778 124.55850220]
[308.22994995 119.05019379]
[294.72671509 112.50189209]
[281.75741577 104.95110321]
[269.39630127 96.44108582]
[257.71420288 87.02057648]
[246.77803040 76.74353790]
[236.65042114 65.66884613]
[227.38938904 53.85992050]
[219.04797363 41.38441849]
[205.98379517 48.75510788]
[192.91960144 56.12579727]
[179.85542297 63.49648666]
[166.79122925 70.86717224]
[153.72705078 78.23786163]
[149.98927307 92.61022186]
[136.84532166 100.27125549]
[121.79561615 96.25327301]
[108.73143005 103.62396240]
[106.21623230 108.22697449]
[101.30109406 111.09310913]
[95.16671753 111.01299286]
[81.88887024 117.99144745]
[68.61103058 124.96989441]
[55.33318329 131.94834900]
[42.05533600 138.92680359]
[28.77748871 145.90525818]
[34.89315033 159.60760498]
[40.11833572 173.67362976]
[44.43156433 188.04553223]
[47.81511688 202.66426086]
[50.25508881 217.46974182]
[51.74145508 232.40113831]
[52.26810837 247.39707947]
[51.83287811 262.39596558]
[50.43756104 277.33612061]
[48.08788681 292.15618896]
[44.79351044 306.79528809]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[85 199]
[86 198]
[87 197]
[88 196]
[89 195]
[90 194]
[91 191]
[92 190]
[95 187]
[96 186]
[97 185]
[98 184]
[99 183]
[100 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
