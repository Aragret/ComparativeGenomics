%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUGxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[198.67182922 273.36526489]
[205.57376099 260.03280640]
[213.78912354 247.46704102]
[223.23361206 235.79687500]
[212.58760071 225.22982788]
[201.94158936 214.66278076]
[189.84802246 214.39422607]
[180.89218140 205.67778015]
[180.25555420 192.79531860]
[165.82522583 189.10551453]
[161.70845032 173.82929993]
[151.22094727 163.10491943]
[140.73344421 152.38053894]
[126.30310822 148.69073486]
[122.18634033 133.41450500]
[111.69883728 122.69013214]
[101.21133423 111.96575165]
[90.56533051 101.39870453]
[79.76317596 90.99133301]
[68.88383484 80.66466522]
[57.92792892 70.41927338]
[46.97201920 60.17388153]
[36.01610947 49.92848969]
[24.18984032 40.70138931]
[8.39926147 39.71742249]
[1.90269864 26.31429100]
[-10.69961357 18.17907524]
[-23.30192566 10.04385948]
[-35.90423584 1.90864372]
[-48.50654984 -6.22657204]
[-57.55422592 5.74617863]
[-67.46141815 17.01803589]
[-78.17401123 27.52743721]
[-89.63350677 37.21697998]
[-101.77730560 46.03374863]
[-114.53908539 53.92958069]
[-127.84914398 60.86135864]
[-141.63479614 66.79122162]
[-155.82072449 71.68677521]
[-170.32946777 75.52128601]
[-185.08178711 78.27381897]
[-199.99710083 79.92932892]
[-214.99394226 80.47878265]
[-229.99040222 79.91917419]
[-244.90460205 78.25355530]
[-259.65502930 75.49103546]
[-274.16119385 71.64669037]
[-288.34381104 66.74152374]
[-302.12542725 60.80232620]
[-315.43078613 53.86153412]
[-328.18722534 45.95705795]
[-340.32504272 37.13206482]
[-351.77795410 27.43476105]
[-362.48342896 16.91810608]
[-372.38299561 5.63953972]
[-381.42254639 -6.33933735]
[-389.55276489 -18.95310020]
[-396.72918701 -32.13285446]
[-402.91268921 -45.80662155]
[-408.06942749 -59.89971161]
[-412.17126465 -74.33515930]
[-415.19580078 -89.03411865]
[-417.12652588 -103.91630554]
[-417.95288086 -118.90044403]
[-417.67034912 -133.90469360]
[-416.28048706 -148.84709167]
[-413.79089355 -163.64605713]
[-410.21514893 -178.22073364]
[-405.57278442 -192.49153137]
[-399.88916016 -206.38049316]
[-393.19528198 -219.81178284]
[-385.52777100 -232.71203613]
[-376.92849731 -245.01078796]
[-367.44436646 -256.64086914]
[-357.12725830 -267.53878784]
[-346.03344727 -277.64495850]
[-334.22360229 -286.90423584]
[-321.76214600 -295.26605225]
[-308.71719360 -302.68469238]
[-295.15997314 -309.11965942]
[-281.16455078 -314.53582764]
[-266.80731201 -318.90362549]
[-252.16673279 -322.19912720]
[-237.32273865 -324.40441895]
[-222.35643005 -325.50738525]
[-207.34951782 -325.50204468]
[-192.38398743 -324.38842773]
[-177.54158020 -322.17260742]
[-162.90333557 -318.86663818]
[-148.54922485 -314.48867798]
[-134.55764771 -309.06253052]
[-121.00501251 -302.61791992]
[-107.96533203 -295.18997192]
[-95.50984192 -286.81930542]
[-83.70656586 -277.55163574]
[-72.61996460 -267.43756104]
[-62.31060028 -256.53231812]
[-52.83476639 -244.89550781]
[-44.24422455 -232.59063721]
[-36.58589172 -219.68493652]
[-29.90159988 -206.24888611]
[-24.22785187 -192.35586548]
[-19.59563637 -178.08177185]
[-16.03025627 -163.50454712]
[-13.55118275 -148.70382690]
[-12.17195511 -133.76043701]
[-11.90010834 -118.75599670]
[-12.73712540 -103.77244568]
[-14.67843533 -88.89163971]
[-17.71343422 -74.19483185]
[-21.82554817 -59.76231003]
[-26.99231720 -45.67289352]
[-33.18552017 -32.00353241]
[-40.37133408 -18.82888412]
[-27.76902199 -10.69366837]
[-15.16670895 -2.55845213]
[-2.56439734 5.57676363]
[10.03791428 13.71197987]
[24.92709160 14.11406136]
[32.32505798 28.09907913]
[26.14262009 14.43242264]
[26.41563225 -0.56509310]
[33.09137344 -13.99768257]
[44.88087082 -23.27172279]
[59.50774765 -26.59654236]
[74.14778900 -23.33017159]
[85.97422791 -14.10329437]
[92.70357513 -0.69747621]
[93.03648376 14.29882908]
[86.90868378 27.99007034]
[75.50335693 37.73268127]
[61.02268982 41.64551926]
[46.26150131 38.97257996]
[57.21741104 49.21797180]
[68.17331696 59.46336365]
[79.12922668 69.70875549]
[86.16178894 71.98139191]
[90.17054749 80.18917847]
[100.97270203 90.59654999]
[106.10310364 91.68875122]
[110.25636292 95.57768250]
[111.93571472 101.47824860]
[122.42321777 112.20262909]
[132.91072083 122.92700958]
[148.09118652 127.38390350]
[151.45782471 141.89303589]
[161.94532776 152.61741638]
[172.43283081 163.34179688]
[187.61329651 167.79869080]
[190.97993469 182.30781555]
[208.82275391 186.85922241]
[212.50863647 204.01676941]
[223.15464783 214.58381653]
[233.80065918 225.15086365]
[245.40019226 215.61976624]
[257.90444946 207.31108093]
[271.18518066 200.31008911]
[285.10601807 194.68862915]
[299.52416992 190.50436401]
[314.29165649 187.80026245]
[329.25695801 186.60404968]
[344.26647949 186.92802429]
[359.16622925 188.76882935]
[373.80328369 192.10760498]
[388.02746582 196.91006470]
[401.69281006 203.12695312]
[414.65908813 210.69445801]
[426.79321289 219.53492737]
[437.97067261 229.55764771]
[448.07681274 240.65975952]
[457.00790405 252.72734070]
[464.67230225 265.63656616]
[470.99133301 279.25497437]
[475.90020752 293.44277954]
[479.34848022 308.05444336]
[481.30081177 322.93997192]
[481.73718262 337.94665527]
[480.65307617 352.92050171]
[478.05963135 367.70782471]
[473.98345947 382.15692139]
[468.46636963 396.11947632]
[461.56503296 409.45220947]
[453.35021973 422.01837158]
[443.90625000 433.68893433]
[433.33004761 444.34420776]
[421.73007202 453.87478638]
[409.22543335 462.18292236]
[395.94442749 469.18331909]
[382.02334595 474.80416870]
[367.60501099 478.98779297]
[352.83740234 481.69125366]
[337.87203979 482.88681030]
[322.86251831 482.56219482]
[307.96286011 480.72073364]
[293.32592773 477.38131714]
[279.10195923 472.57821655]
[265.43692017 466.36071777]
[252.47097778 458.79266357]
[240.33724976 449.95166016]
[229.16020203 439.92843628]
[219.05455017 428.82586670]
[210.12399292 416.75790405]
[202.46017456 403.84832764]
[196.14172363 390.22964478]
[191.23350525 376.04162598]
[187.78585815 361.42980957]
[185.83418274 346.54418945]
[185.39848328 331.53747559]
[186.48326111 316.56369019]
[189.07734680 301.77648926]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 154]
[5 153]
[6 152]
[9 150]
[11 148]
[12 147]
[13 146]
[15 144]
[16 143]
[17 142]
[18 139]
[19 138]
[20 136]
[21 135]
[22 134]
[23 133]
[24 120]
[26 118]
[27 117]
[28 116]
[29 115]
[30 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
