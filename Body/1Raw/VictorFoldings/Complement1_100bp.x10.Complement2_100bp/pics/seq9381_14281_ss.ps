%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[106.82881927 969.75646973]
[91.86774445 968.65148926]
[76.95958710 966.97772217]
[62.12595749 964.73760986]
[47.38836288 961.93438721]
[32.76817322 958.57214355]
[18.28658676 954.65570068]
[3.96460009 950.19079590]
[-10.17702198 945.18389893]
[-24.11777496 939.64221191]
[-37.83744431 933.57379150]
[-51.31614304 926.98748779]
[-64.53432465 919.89282227]
[-77.47282410 912.30010986]
[-90.11287689 904.22027588]
[-102.43616486 895.66503906]
[-114.42481232 886.64691162]
[-126.06144714 877.17889404]
[-137.32919312 867.27471924]
[-148.21170044 856.94873047]
[-158.69320679 846.21594238]
[-168.75851440 835.09191895]
[-178.39302063 823.59277344]
[-187.58276367 811.73510742]
[-196.31440735 799.53619385]
[-204.57531738 787.01373291]
[-212.35348511 774.18585205]
[-219.63764954 761.07116699]
[-226.41723633 747.68865967]
[-232.68243408 734.05773926]
[-238.42416382 720.19818115]
[-243.63407898 706.13006592]
[-248.30462646 691.87377930]
[-252.42904663 677.45007324]
[-256.00134277 662.87976074]
[-259.01635742 648.18408203]
[-261.46972656 633.38421631]
[-263.35784912 618.50164795]
[-264.67803955 603.55804443]
[-265.42834473 588.57501221]
[-265.60769653 573.57427979]
[-265.21582031 558.57757568]
[-264.25329590 543.60662842]
[-262.72149658 528.68322754]
[-260.62268066 513.82891846]
[-257.95986938 499.06533813]
[-254.73693848 484.41378784]
[-250.95854187 469.89559937]
[-246.63015747 455.53176880]
[-241.75808716 441.34310913]
[-236.34936523 427.35025024]
[-230.41183472 413.57342529]
[-223.95413208 400.03265381]
[-216.98559570 386.74752808]
[-209.51634216 373.73736572]
[-201.55718994 361.02096558]
[-193.11968994 348.61679077]
[-184.21606445 336.54284668]
[-174.85923767 324.81661987]
[-165.06275940 313.45510864]
[-154.84085083 302.47479248]
[-144.20832825 291.89160156]
[-133.18058777 281.72088623]
[-121.77365112 271.97735596]
[-110.00402832 262.67514038]
[-97.88880157 253.82777405]
[-85.44553375 245.44805908]
[-72.69226074 237.54814148]
[-59.64748383 230.13946533]
[-46.33010483 223.23278809]
[-32.75943756 216.83813477]
[-18.95516014 210.96475220]
[-4.93728638 205.62115479]
[9.27385998 200.81512451]
[23.65767288 196.55358887]
[38.19329834 192.84275818]
[52.85965729 189.68798828]
[67.63549042 187.09387207]
[82.49937439 185.06416321]
[97.42975616 183.60180664]
[96.53693390 168.62840271]
[95.64411926 153.65498352]
[94.75130463 138.68157959]
[93.85848999 123.70817566]
[92.96567535 108.73477173]
[83.07501221 120.01195526]
[68.26914215 122.41740417]
[55.31710434 114.85137939]
[50.14039612 100.77296448]
[55.10574341 86.61862946]
[67.94304657 78.85953522]
[82.78327179 81.04303741]
[92.84237671 92.17258453]
[93.51216125 77.18754578]
[94.18194580 62.20251083]
[94.85173035 47.21747208]
[80.50769043 42.51096725]
[67.96601105 34.10806274]
[58.15736389 22.63230705]
[51.80961227 8.93527508]
[49.39381027 -5.96661997]
[51.08921814 -20.96755791]
[56.77003098 -34.95437241]
[66.01469421 -46.88914490]
[78.13718414 -55.88624191]
[92.23794556 -61.27801132]
[107.27059937 -62.66435623]
[122.11962128 -59.94239426]
[135.68312073 -53.31411362]
[146.95458984 -43.27138138]
[155.09762573 -30.55943108]
[159.50793457 -16.12157631]
[159.85826111 -1.02919853]
[156.12261963 13.59774494]
[148.57818604 26.67383957]
[137.78483582 37.22874832]
[124.54350281 44.47923279]
[109.83676910 47.88725662]
[109.16698456 62.87229538]
[108.49720001 77.85733032]
[107.82741547 92.84236908]
[107.93907928 107.84195709]
[108.83189392 122.81536102]
[109.72470856 137.78877258]
[110.61752319 152.76217651]
[111.51034546 167.73558044]
[112.40316010 182.70898438]
[127.40151978 182.38679504]
[142.40127563 182.63583374]
[157.38067627 183.45573425]
[172.31800842 184.84533691]
[187.19160461 186.80259705]
[201.97990417 189.32467651]
[216.66145325 192.40794373]
[231.21499634 196.04791260]
[245.61940002 200.23930359]
[259.85379028 204.97604370]
[273.89755249 210.25125122]
[287.73028564 216.05729675]
[301.33193970 222.38577271]
[314.68280029 229.22746277]
[327.76354980 236.57247925]
[340.55514526 244.41017151]
[353.03909302 252.72915649]
[365.19729614 261.51739502]
[377.01211548 270.76211548]
[388.46640015 280.44995117]
[399.54354858 290.56683350]
[410.22750854 301.09808350]
[420.50280762 312.02847290]
[430.35452271 323.34210205]
[439.76840210 335.02261353]
[448.73074341 347.05300903]
[457.22857666 359.41592407]
[465.24960327 372.09338379]
[472.78216553 385.06701660]
[479.81533813 398.31802368]
[486.33895874 411.82717896]
[492.34353638 425.57489014]
[497.82037354 439.54122925]
[502.76153564 453.70596313]
[507.15985107 468.04855347]
[511.00894165 482.54818726]
[514.30322266 497.18383789]
[517.03796387 511.93429565]
[519.20910645 526.77813721]
[520.81359863 541.69390869]
[521.84906006 556.65997314]
[522.31402588 571.65460205]
[522.20776367 586.65606689]
[521.53045654 601.64257812]
[520.28314209 616.59246826]
[518.46752930 631.48400879]
[516.08630371 646.29565430]
[513.14294434 661.00585938]
[509.64169312 675.59338379]
[505.58758545 690.03704834]
[500.98657227 704.31591797]
[495.84527588 718.40924072]
[490.17114258 732.29656982]
[483.97244263 745.95788574]
[477.25814819 759.37329102]
[470.03796387 772.52331543]
[462.32238770 785.38897705]
[454.12261963 797.95153809]
[445.45050049 810.19281006]
[436.31866455 822.09509277]
[426.74029541 833.64105225]
[416.72930908 844.81402588]
[406.30023193 855.59777832]
[395.46813965 865.97662354]
[384.24880981 875.93560791]
[372.65844727 885.46020508]
[360.71386719 894.53668213]
[348.43243408 903.15179443]
[335.83187866 911.29315186]
[322.93054199 918.94885254]
[309.74710083 926.10784912]
[296.30065918 932.75976562]
[282.61071777 938.89489746]
[268.69711304 944.50445557]
[254.58006287 949.58020020]
[240.27999878 954.11486816]
[225.81767273 958.10180664]
[211.21403503 961.53521729]
[196.49028015 964.41021729]
[181.66773987 966.72259521]
[166.76791382 968.46899414]
[151.81240845 969.64685059]
[136.82289124 970.25451660]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[80 127]
[81 126]
[82 125]
[83 124]
[84 123]
[85 122]
[93 121]
[94 120]
[95 119]
[96 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
