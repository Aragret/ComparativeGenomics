%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[81.01956940 722.71972656]
[67.02565765 717.26538086]
[53.80810928 710.13262939]
[41.56730270 701.42962646]
[30.48880768 691.28826904]
[20.74056625 679.86236572]
[12.47036171 667.32513428]
[5.80356693 653.86651611]
[0.84124964 639.69067383]
[-2.34136295 625.01245117]
[-3.69602299 610.05432129]
[-3.20219445 595.04315186]
[-0.86736369 580.20642090]
[3.27307415 565.76910400]
[9.15635109 551.95001221]
[16.69327736 538.95874023]
[25.76959610 526.99212646]
[36.24771118 516.23156738]
[47.96878052 506.84030151]
[60.75511169 498.96063232]
[74.41287231 492.71200562]
[88.73500061 488.18914795]
[103.50439453 485.46066284]
[102.61157990 470.48727417]
[101.71876526 455.51385498]
[100.82595062 440.54046631]
[99.93313599 425.56704712]
[89.19253540 436.03793335]
[74.19263458 435.98513794]
[63.52603912 425.43884277]
[63.30307007 410.44052124]
[73.65145111 399.58181763]
[88.64315796 399.08316040]
[99.68985748 409.22927856]
[100.13646698 394.23593140]
[92.78153229 381.28393555]
[100.92628479 367.72024536]
[90.55735016 357.08914185]
[90.79668427 341.87738037]
[102.01788330 331.07357788]
[102.46448517 316.08023071]
[102.91109467 301.08688354]
[102.79942322 286.08728027]
[102.12963867 271.10223389]
[101.45985413 256.11721802]
[100.79006958 241.13217163]
[100.00875092 226.15252686]
[99.11592865 211.17912292]
[90.63481140 198.93495178]
[97.53698730 184.69871521]
[96.64417267 169.72531128]
[95.75135803 154.75190735]
[94.85854340 139.77850342]
[93.96572876 124.80509186]
[93.07291412 109.83168793]
[91.95726013 94.87322998]
[90.61902618 79.93304443]
[89.16960907 65.00323486]
[87.60908508 50.08463287]
[86.04856110 35.16602707]
[84.48803711 20.24742317]
[72.49436951 10.30812359]
[71.12429810 -4.84369326]
[80.67381287 -16.21656990]
[79.11329651 -31.13517570]
[77.10927582 -46.00070190]
[74.66355133 -60.79997253]
[72.21782684 -75.59924316]
[69.77209473 -90.39851379]
[57.20809555 -99.60631561]
[54.93860245 -114.64971924]
[63.79426193 -126.57083130]
[61.34853363 -141.37010193]
[56.86177826 -149.32666016]
[58.97827148 -156.40777588]
[56.75315475 -171.24182129]
[54.52803802 -186.07586670]
[42.72600174 -200.21069336]
[49.78118896 -216.27903748]
[47.33546066 -231.07830811]
[44.88973236 -245.87757874]
[42.44400787 -260.67684937]
[39.77820969 -275.43804932]
[36.89293671 -290.15795898]
[34.00766754 -304.87783813]
[31.12239265 -319.59774780]
[16.06391907 -320.18005371]
[1.54580605 -324.22000122]
[-11.64900494 -331.49966431]
[-22.80893326 -341.62649536]
[-31.33213997 -354.05435181]
[-36.75897598 -368.11303711]
[-38.79678345 -383.04434204]
[-37.33565903 -398.04306030]
[-32.45440674 -412.30035400]
[-24.41626167 -425.04730225]
[-13.65471172 -435.59652710]
[-0.75011533 -443.37905884]
[13.60160065 -447.97525024]
[28.62646484 -449.13723755]
[43.51420593 -446.80230713]
[57.46194839 -441.09640503]
[69.71750641 -432.32727051]
[79.61994934 -420.96774292]
[86.63526154 -407.63049316]
[90.38510132 -393.03479004]
[90.66725922 -377.96768188]
[87.46650696 -363.24179077]
[80.95546722 -349.65124512]
[71.48526764 -337.92895508]
[59.56661606 -328.70709229]
[45.84228516 -322.48300171]
[48.72755814 -307.76312256]
[51.61283112 -293.04321289]
[54.49810410 -278.32333374]
[57.89156723 -274.96276855]
[59.20996475 -269.43475342]
[57.24327850 -263.12255859]
[59.68900299 -248.32330322]
[62.13473129 -233.52403259]
[64.58045959 -218.72476196]
[74.22828674 -211.42776489]
[76.38697815 -199.11827087]
[69.36208344 -188.30099487]
[71.58719635 -173.46694946]
[73.81231689 -158.63290405]
[76.14780426 -143.81582642]
[78.59352875 -129.01655579]
[90.81375885 -120.57845306]
[93.50489044 -105.60472870]
[84.57136536 -92.84424591]
[87.01709747 -78.04497528]
[89.46282196 -63.24570084]
[91.90855408 -48.44643021]
[94.10623169 -46.70621490]
[95.74700165 -43.99061584]
[96.45590973 -40.50739288]
[95.94004822 -36.59607315]
[94.03189850 -32.69569778]
[95.59242249 -17.77709389]
[107.28873444 -8.62658215]
[109.08384705 6.48077393]
[99.40664673 18.68689919]
[100.96717072 33.60550308]
[102.52769470 48.52410889]
[104.08821106 63.44271469]
[107.91052246 69.76819611]
[105.55921173 78.59481049]
[106.89744568 93.53499603]
[110.05667114 97.72226715]
[110.64495850 103.38153076]
[108.04631805 108.93886566]
[108.93913269 123.91227722]
[109.83194733 138.88568115]
[110.72476196 153.85908508]
[111.61757660 168.83248901]
[112.51039886 183.80589294]
[121.05538177 197.12106323]
[114.08934021 210.28631592]
[114.98215485 225.25971985]
[118.61680603 233.63987732]
[115.77510834 240.46238708]
[116.44489288 255.44741821]
[117.11467743 270.43246460]
[117.78446198 285.41751099]
[129.67890930 276.27847290]
[144.27609253 279.73135376]
[150.81549072 293.23086548]
[144.47651672 306.82562256]
[129.93202209 310.49407959]
[117.90444183 301.53347778]
[117.45783997 316.52682495]
[117.01123047 331.52017212]
[127.56948090 342.97274780]
[126.90296936 358.17175293]
[115.91963959 368.16687012]
[123.24262238 382.19128418]
[115.12981415 394.68255615]
[114.68321228 409.67590332]
[114.90653992 424.67422485]
[115.79935455 439.64764404]
[116.69216919 454.62103271]
[117.58498383 469.59445190]
[118.47779846 484.56784058]
[133.46678162 485.52194214]
[148.22488403 488.31082153]
[162.52839661 492.89221191]
[176.16049194 499.19665527]
[188.91447449 507.12857056]
[200.59703064 516.56768799]
[211.03105164 527.37097168]
[220.05834961 539.37463379]
[227.54206848 552.39666748]
[233.36877441 566.23968506]
[237.45011902 580.69384766]
[239.72424316 595.53997803]
[240.15667725 610.55303955]
[238.74084473 625.50549316]
[235.49821472 640.17059326]
[230.47795105 654.32604980]
[223.75616455 667.75720215]
[215.43475342 680.26055908]
[205.63986206 691.64648438]
[194.51997375 701.74243164]
[182.24366760 710.39532471]
[168.99707031 717.47393799]
[154.98095703 722.87103271]
[140.40783691 726.50469971]
[125.49863434 728.31994629]
[110.47935486 728.28924561]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 184]
[24 183]
[25 182]
[26 181]
[27 180]
[34 179]
[35 178]
[37 176]
[40 173]
[41 172]
[42 171]
[43 165]
[44 164]
[45 163]
[46 162]
[47 160]
[48 159]
[50 157]
[51 156]
[52 155]
[53 154]
[54 153]
[55 152]
[56 149]
[57 148]
[58 146]
[59 145]
[60 144]
[61 143]
[64 140]
[65 139]
[66 134]
[67 133]
[68 132]
[69 131]
[72 128]
[73 127]
[75 126]
[76 125]
[77 124]
[79 121]
[80 120]
[81 119]
[82 118]
[83 115]
[84 114]
[85 113]
[86 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
