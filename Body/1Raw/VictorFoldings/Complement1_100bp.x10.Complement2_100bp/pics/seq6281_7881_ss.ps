%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxUUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUG\
) } def
/len { sequence length } bind def

/coor [
[72.79744720 536.05767822]
[58.67630768 530.93432617]
[45.34473801 524.01159668]
[33.03085327 515.40789795]
[21.94536209 505.27050781]
[12.27794933 493.77285767]
[4.19403887 481.11169434]
[-2.16804361 467.50363159]
[-6.69943380 453.18157959]
[-9.32259464 438.39056396]
[-9.99263954 423.38369751]
[-8.69810390 408.41775513]
[-5.46113825 393.74884033]
[-0.33713168 379.62796021]
[6.58623743 366.29672241]
[15.19050121 353.98324585]
[25.32842827 342.89822388]
[36.82654572 333.23135376]
[49.48810959 325.14807129]
[63.09645844 318.78662109]
[77.41873932 314.25592041]
[92.20987701 311.63345337]
[91.54009247 296.64840698]
[90.87030792 281.66339111]
[90.20052338 266.67834473]
[89.53073120 251.69329834]
[81.23284912 239.32421875]
[88.34622192 225.19232178]
[87.67643738 210.20727539]
[77.61897278 221.33595276]
[62.77893066 223.52070618]
[49.94097519 215.76268005]
[44.97444916 201.60874939]
[50.14997864 187.52990723]
[63.10138321 179.96279907]
[77.90745544 182.36701965]
[87.79973602 193.64509583]
[80.83369446 180.47985840]
[89.37867737 167.16468811]
[90.16000366 152.18504333]
[90.82978821 137.20001221]
[91.49957275 122.21496582]
[92.16935730 107.22992706]
[91.49957275 92.24488831]
[89.49555969 77.37936401]
[79.98390198 64.73661041]
[85.95146942 51.08972931]
[83.94745636 36.22420120]
[81.94344330 21.35867310]
[79.93942261 6.49314451]
[77.93540955 -8.37238407]
[75.93139648 -23.23791122]
[66.41974640 -35.88065720]
[72.38730621 -49.52754211]
[67.61702728 -35.30627823]
[59.93927002 -22.42015839]
[49.70333099 -11.45541573]
[37.37487793 -2.91087365]
[23.51476860 2.82474804]
[8.75354576 5.49051714]
[-6.23725128 4.96515894]
[-20.77564240 1.27257347]
[-34.20022583 -5.41925097]
[-45.90027618 -14.80588150]
[-55.34351730 -26.46028709]
[-62.10034561 -39.85227203]
[-65.86337280 -54.37259293]
[-66.46139526 -69.36066437]
[-63.86722183 -84.13463593]
[-58.19886017 -98.02239227]
[-49.71418381 -110.39212799]
[-38.79919434 -120.68109894]
[-25.95044899 -128.42123413]
[-11.75247574 -133.26040649]
[3.14880872 -134.97846985]
[18.07549667 -133.49725342]
[32.34852219 -128.88414001]
[45.31855774 -121.34901428]
[56.39555740 -111.23466492]
[65.07558441 -99.00122070]
[70.96376038 -85.20523071]
[73.79257202 -70.47000122]
[77.76467133 -84.93452454]
[81.73676300 -99.39904785]
[85.70886230 -113.86357117]
[89.68095398 -128.32809448]
[93.54526520 -142.82179260]
[97.30156708 -157.34384155]
[101.05786133 -171.86590576]
[97.02293396 -187.16394043]
[107.70086670 -197.54811096]
[93.78741455 -203.21372986]
[80.75328827 -210.68334961]
[68.83110809 -219.82363892]
[58.23362350 -230.47148132]
[49.14996719 -242.43688965]
[41.74224854 -255.50628662]
[36.14266586 -269.44644165]
[32.45114899 -284.00857544]
[30.73358154 -298.93283081]
[31.02060890 -313.95288086]
[33.30711365 -328.80059814]
[37.55229187 -343.21109009]
[43.68037796 -356.92712402]
[51.58201218 -369.70397949]
[61.11618042 -381.31359863]
[72.11273193 -391.54879761]
[84.37541962 -400.22689819]
[97.68540955 -407.19308472]
[111.80516815 -412.32299805]
[126.48269653 -415.52508545]
[141.45606995 -416.74224854]
[156.45808411 -415.95269775]
[171.22097778 -413.17056274]
[185.48130798 -408.44549561]
[198.98458862 -401.86181641]
[211.48983765 -393.53701782]
[222.77386475 -383.61965942]
[232.63529968 -372.28671265]
[240.89817810 -359.74047852]
[247.41500854 -346.20480347]
[252.06950378 -331.92126465]
[254.77861023 -317.14480591]
[255.49395752 -302.13906860]
[254.20278931 -287.17190552]
[250.92814636 -272.51037598]
[245.72848511 -258.41616821]
[238.69657898 -245.14077759]
[229.95791626 -232.92115784]
[219.66847229 -221.97534180]
[208.01185608 -212.49870300]
[195.19610596 -204.66033936]
[181.44992065 -198.60014343]
[167.01863098 -194.42628479]
[152.15975952 -192.21322632]
[137.13850403 -192.00047302]
[122.22293091 -193.79180908]
[126.52653503 -179.53248596]
[115.57992554 -168.10960388]
[111.82362366 -153.58753967]
[108.06732178 -139.06549072]
[109.43564606 -131.80259705]
[104.14547729 -124.35599518]
[100.17338562 -109.89147186]
[96.20128632 -95.42694855]
[92.22919464 -80.96242523]
[88.25709534 -66.49790192]
[87.25283813 -51.53155899]
[96.62114716 -39.95209122]
[90.79692841 -25.24192619]
[92.80094147 -10.37639713]
[94.80495453 4.48913050]
[96.80896759 19.35465813]
[98.81298065 34.22018814]
[100.81699371 49.08571625]
[110.18531036 60.66518021]
[104.36108398 75.37534332]
[106.36509705 90.24087524]
[112.73708344 76.66156006]
[124.31504059 67.12474060]
[138.86344910 63.47183228]
[153.57324219 66.40814972]
[165.60418701 75.36673737]
[172.63330078 88.61783600]
[173.30335999 103.60286713]
[167.48500061 117.42844391]
[156.30165100 127.42507935]
[141.91264343 131.66256714]
[127.09626007 129.32272339]
[114.71332550 120.85733032]
[107.15439606 107.89971161]
[106.48461151 122.88475037]
[105.81482697 137.86979675]
[105.14504242 152.85482788]
[107.88813782 161.56764221]
[104.35208130 168.05749512]
[111.25426483 182.29373169]
[102.77313995 194.53790283]
[102.66147614 209.53749084]
[103.33126068 224.52253723]
[111.67705536 237.96345520]
[104.51576996 251.02351379]
[105.18556213 266.00854492]
[105.85534668 280.99359131]
[106.52513123 295.97863770]
[107.19491577 310.96368408]
[122.16103363 312.25607300]
[136.83041382 315.49093628]
[150.95202637 320.61294556]
[164.28425598 327.53439331]
[176.59896851 336.13690186]
[187.68542480 346.27325439]
[197.35392761 357.76998901]
[205.43904114 370.43038940]
[211.80242920 384.03784180]
[216.33517456 398.35946655]
[218.95974731 413.15023804]
[219.63122559 428.15704346]
[218.33810425 443.12307739]
[215.10253906 457.79232788]
[209.97987366 471.91369629]
[203.05778503 485.24560547]
[194.45468140 497.55987549]
[184.31781006 508.64587402]
[172.82061768 518.31384277]
[160.15982056 526.39831543]
[146.55207825 532.76104736]
[132.23022461 537.29315186]
[117.43934631 539.91699219]
[102.43251038 540.58776855]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 186]
[23 185]
[24 184]
[25 183]
[26 182]
[28 180]
[29 179]
[37 178]
[39 176]
[40 174]
[41 173]
[42 172]
[43 171]
[44 158]
[45 157]
[47 155]
[48 154]
[49 153]
[50 152]
[51 151]
[52 150]
[54 148]
[82 147]
[83 146]
[84 145]
[85 144]
[86 143]
[87 141]
[88 140]
[89 139]
[91 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
