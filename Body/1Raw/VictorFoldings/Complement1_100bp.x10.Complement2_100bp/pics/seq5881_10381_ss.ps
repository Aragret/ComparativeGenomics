%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[104.69016266 606.14196777]
[91.68838501 598.64294434]
[79.37940979 590.05401611]
[67.85434723 580.43865967]
[57.19853592 569.86816406]
[47.49087143 558.42077637]
[38.80322266 546.18127441]
[31.19991302 533.24023438]
[24.73723602 519.69342041]
[19.46303749 505.64123535]
[15.41637039 491.18765259]
[12.62719154 476.43969727]
[11.11615372 461.50659180]
[10.89444447 446.49884033]
[11.96370316 431.52758789]
[14.31601524 416.70370483]
[17.93396378 402.13687134]
[22.79076195 387.93502808]
[28.85045242 374.20324707]
[36.06816864 361.04324341]
[44.39047623 348.55239868]
[53.75575256 336.82324219]
[64.09466553 325.94262695]
[75.33065796 315.99102783]
[87.38055420 307.04220581]
[100.15513611 299.16238403]
[113.55981445 292.40991211]
[127.49535370 286.83477783]
[141.85858154 282.47824097]
[138.75447083 267.80294800]
[135.65036011 253.12765503]
[132.54624939 238.45234680]
[129.44213867 223.77703857]
[125.68583679 209.25498962]
[121.28483582 194.91514587]
[116.88384247 180.57528687]
[112.48284149 166.23544312]
[108.08184814 151.89559937]
[93.13889313 152.07104492]
[78.75141144 148.03089905]
[66.08419037 140.10220337]
[56.16275787 128.92689514]
[49.79033279 115.40969086]
[47.48283005 100.64494324]
[49.42705536 85.82797241]
[55.46560669 72.15835571]
[65.10961151 60.74276733]
[77.57830811 52.50540161]
[73.17730713 38.16555405]
[68.77631378 23.82570648]
[64.37531281 9.48585987]
[59.97431564 -4.85398769]
[48.52856827 -15.77668858]
[52.19116592 -30.21395493]
[47.79016876 -44.55380249]
[43.38917160 -58.89365005]
[38.98817444 -73.23349762]
[36.60047913 -58.42475128]
[31.12653351 -44.45922470]
[22.81535721 -31.97225761]
[12.04505444 -21.53192329]
[-0.69439554 -13.61318493]
[-14.82343388 -8.57629395]
[-29.69928360 -6.65039539]
[-44.64519501 -7.92310381]
[-58.98122406 -12.33652020]
[-72.05518341 -19.68986320]
[-83.27228546 -29.64860535]
[-92.12223816 -41.75968933]
[-98.20242310 -55.47214508]
[-101.23622894 -70.16213989]
[-101.08563995 -85.16138458]
[-97.75750732 -99.78751373]
[-91.40324402 -113.37512970]
[-82.31192017 -125.30608368]
[-70.89713287 -135.03761292]
[-57.67817307 -142.12698364]
[-43.25642395 -146.25167847]
[-28.28797531 -147.22406006]
[-13.45379066 -144.99987793]
[0.57127333 -139.68034363]
[13.14916897 -131.50741577]
[23.70768738 -120.85295105]
[31.76648331 -108.20163727]
[36.95999527 -94.12482452]
[38.52051926 -109.04342651]
[40.08104324 -123.96203613]
[41.64156723 -138.88064575]
[43.20208740 -153.79924011]
[44.76261139 -168.71784973]
[30.25485039 -172.65751648]
[16.56698418 -178.87350464]
[4.05356503 -187.20480347]
[-6.96128178 -197.43560791]
[-16.19224548 -209.30091858]
[-23.40022087 -222.49339294]
[-28.39850235 -236.67131042]
[-31.05762672 -251.46742249]
[-31.30871391 -266.49850464]
[-29.14525986 -281.37518311]
[-24.62330246 -295.71212769]
[-17.85997391 -309.13796997]
[-9.03045750 -321.30496216]
[1.63653803 -331.89794922]
[13.86471367 -340.64254761]
[27.33732986 -347.31225586]
[41.70541382 -351.73428345]
[56.59679413 -353.79409790]
[71.62575531 -353.43838501]
[86.40300751 -350.67630005]
[100.54577637 -345.57943726]
[113.68774414 -338.27978516]
[125.48849487 -328.96643066]
[135.64236450 -317.88061523]
[143.88633728 -305.30950928]
[150.00688171 -291.57870483]
[153.84544373 -277.04385376]
[155.30262756 -262.08148193]
[154.34065247 -247.07911682]
[150.98446655 -232.42536926]
[145.32098389 -218.49981689]
[137.49690247 -205.66314697]
[127.71489716 -194.24787903]
[116.22834015 -184.54966736]
[103.33475494 -176.81974792]
[89.36812592 -171.25833130]
[74.69021606 -168.00947571]
[59.68121719 -167.15733337]
[58.12069321 -152.23872375]
[56.56016922 -137.32011414]
[54.99964523 -122.40151215]
[53.43912506 -107.48291016]
[51.87860107 -92.56430054]
[53.32801819 -77.63449097]
[57.72901917 -63.29464722]
[62.13001633 -48.95479965]
[66.53101349 -34.61495209]
[77.66197205 -24.71793365]
[74.31416321 -9.25498581]
[78.71516418 5.08486128]
[83.11615753 19.42470932]
[87.51715851 33.76455688]
[91.91815186 48.10440445]
[106.86110687 47.92894745]
[121.24858856 51.96910477]
[133.91580200 59.89778900]
[143.83724976 71.07310486]
[150.20967102 84.59030914]
[152.51716614 99.35505676]
[150.57295227 114.17202759]
[144.53439331 127.84164429]
[134.89038086 139.25723267]
[122.42169189 147.49459839]
[126.82269287 161.83444214]
[131.22369385 176.17428589]
[135.62467957 190.51414490]
[140.02568054 204.85398865]
[147.99205017 192.14425659]
[162.58079529 188.65592957]
[175.43482971 196.38728333]
[179.19078064 210.90942383]
[171.69706726 223.90344238]
[157.24642944 227.92575073]
[144.11744690 220.67292786]
[147.22155762 235.34823608]
[150.32565308 250.02354431]
[153.42976379 264.69885254]
[156.53387451 279.37414551]
[171.43096924 277.54156494]
[186.43043518 276.99636841]
[201.42124939 277.74264526]
[216.29241943 279.77487183]
[230.93382263 283.07797241]
[245.23709106 287.62750244]
[259.09631348 293.38977051]
[272.40884399 300.32211304]
[285.07617188 308.37322998]
[297.00448608 317.48348999]
[308.10546875 327.58544922]
[318.29693604 338.60430908]
[327.50344849 350.45849609]
[335.65679932 363.06024170]
[342.69665527 376.31625366]
[348.57092285 390.12838745]
[353.23605347 404.39434814]
[356.65753174 419.00854492]
[358.81002808 433.86279297]
[359.67761230 448.84707642]
[359.25384521 463.85046387]
[357.54187012 478.76187134]
[354.55438232 493.47094727]
[350.31347656 507.86871338]
[344.85055542 521.84863281]
[338.20605469 535.30718994]
[330.42916870 548.14465332]
[321.57751465 560.26611328]
[311.71661377 571.58178711]
[300.91943359 582.00781250]
[289.26596069 591.46710205]
[276.84243774 599.88952637]
[263.74087524 607.21282959]
[250.05825806 613.38269043]
[235.89588928 618.35351562]
[221.35864258 622.08843994]
[206.55413818 624.55987549]
[191.59196472 625.74945068]
[176.58293152 625.64843750]
[161.63813782 624.25744629]
[146.86824036 621.58697510]
[132.38259888 617.65661621]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 168]
[30 167]
[31 166]
[32 165]
[33 164]
[34 157]
[35 156]
[36 155]
[37 154]
[38 153]
[48 143]
[49 142]
[50 141]
[51 140]
[52 139]
[54 137]
[55 136]
[56 135]
[57 134]
[85 133]
[86 132]
[87 131]
[88 130]
[89 129]
[90 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
