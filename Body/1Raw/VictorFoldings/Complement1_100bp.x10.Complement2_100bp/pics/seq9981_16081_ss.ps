%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[151.76721191 647.57391357]
[161.36251831 635.81402588]
[174.55995178 628.31787109]
[172.33483887 613.48382568]
[170.10972595 598.64978027]
[167.88459778 583.81573486]
[159.03948975 595.93035889]
[144.50726318 599.64715576]
[130.93186951 593.26678467]
[124.51978302 579.70635986]
[128.20254517 565.16552734]
[140.29643250 556.29205322]
[155.27227783 557.14288330]
[166.28419495 567.33062744]
[165.61441040 552.34558105]
[164.94462585 537.36053467]
[164.27484131 522.37548828]
[161.60903931 507.61428833]
[156.99502563 493.34155273]
[152.38102722 479.06881714]
[147.76701355 464.79608154]
[143.15299988 450.52334595]
[129.81626892 443.99136353]
[124.93367767 429.58251953]
[131.87545776 415.63800049]
[127.26145172 401.36526489]
[122.64743805 387.09252930]
[118.03343201 372.81979370]
[113.41942596 358.54705811]
[108.80541229 344.27432251]
[104.19140625 330.00158691]
[99.57739258 315.72885132]
[94.96338654 301.45611572]
[90.34938049 287.18338013]
[88.12173462 302.01705933]
[82.32219696 315.85055542]
[73.30539703 327.83792114]
[61.62271881 337.24618530]
[47.98856735 343.49996948]
[33.23667526 346.21688843]
[18.26912308 345.23077393]
[4.00118494 340.60195923]
[-8.69465065 332.61349487]
[-19.04202843 321.75384521]
[-26.40820122 308.68713379]
[-30.34272766 294.21234131]
[-30.60500526 279.21463013]
[-27.17899895 264.61111450]
[-20.27420807 251.29481506]
[-10.31286621 240.08001709]
[2.09588838 231.65251160]
[16.19325638 226.52764893]
[31.11717606 225.01881409]
[45.95504761 227.21826172]
[59.79952621 232.99151611]
[71.80401611 241.98551941]
[81.23444366 253.65029907]
[87.51413727 267.27258301]
[87.96073914 252.27923584]
[88.40734863 237.28587341]
[88.85395050 222.29252625]
[89.30056000 207.29917908]
[89.74716949 192.30583191]
[90.19377136 177.31248474]
[90.64038086 162.31912231]
[91.08698273 147.32577515]
[91.53359222 132.33242798]
[78.35987091 125.47097778]
[69.46018982 113.57888031]
[66.59227753 99.00488281]
[70.32256317 84.62742615]
[79.91429901 73.28613281]
[93.47306061 67.22096252]
[93.36139679 52.22138214]
[92.69160461 37.23634338]
[92.02182007 22.25130272]
[91.35203552 7.26626444]
[90.68225098 -7.71877432]
[90.01246643 -22.70381355]
[88.67423248 -37.64399719]
[86.67021942 -52.50952530]
[84.55559540 -67.35972595]
[82.33048248 -82.19376373]
[72.63164520 -94.69349670]
[78.39537048 -108.42771912]
[68.69654083 -120.92745209]
[74.46025848 -134.66166687]
[72.23513794 -149.49571228]
[57.22392654 -150.88385010]
[42.98134232 -155.82472229]
[30.33543587 -164.03108215]
[20.02141953 -175.02583313]
[12.63893986 -188.16975403]
[8.61720276 -202.69865417]
[8.19002819 -217.76786804]
[11.38224983 -232.50126648]
[18.00827599 -246.04228210]
[27.68288040 -257.60366821]
[39.84359360 -266.51324463]
[53.78340530 -272.25302124]
[68.69187164 -274.48928833]
[83.70224762 -273.09207153]
[97.94182587 -268.14254761]
[110.58275604 -259.92852783]
[120.89010620 -248.92752075]
[128.26461792 -235.77912903]
[132.27754211 -221.24780273]
[132.69558716 -206.17832947]
[129.49443054 -191.44686890]
[122.86019135 -177.90986633]
[113.17858124 -166.35435486]
[101.01247406 -157.45216370]
[87.06918335 -151.72082520]
[89.29429626 -136.88677979]
[98.83397675 -125.44808960]
[93.22940826 -110.65283203]
[102.76908875 -99.21413422]
[97.16452026 -84.41888428]
[99.38964081 -69.58483887]
[103.49058533 -63.43634415]
[101.53575134 -54.51353836]
[103.53976440 -39.64801025]
[113.47181702 -50.88875198]
[128.43411255 -51.95172501]
[139.85554504 -42.22801208]
[141.19342041 -27.28779411]
[131.68133545 -15.68950939]
[116.76824188 -14.07718182]
[104.99750519 -23.37359810]
[105.66728973 -8.38855934]
[106.33707428 6.59647942]
[107.00685883 21.58151817]
[107.67664337 36.56655884]
[108.34643555 51.55159760]
[120.24088287 42.41255951]
[134.83805847 45.86545944]
[141.37745667 59.36495209]
[135.03848267 72.95970917]
[120.49398804 76.62818146]
[108.46640778 67.66757202]
[121.64012909 74.52902222]
[130.53981018 86.42111969]
[133.40771484 100.99511719]
[129.67742920 115.37257385]
[120.08570099 126.71386719]
[106.52693939 132.77903748]
[106.08032990 147.77238464]
[105.63372803 162.76573181]
[105.18711853 177.75907898]
[104.74051666 192.75244141]
[104.29390717 207.74578857]
[103.84730530 222.73913574]
[103.40069580 237.73248291]
[102.95409393 252.72583008]
[102.50748444 267.71917725]
[104.62210846 282.56939697]
[109.23612213 296.84210205]
[113.85012817 311.11483765]
[118.46413422 325.38757324]
[123.07814789 339.66030884]
[127.69215393 353.93304443]
[132.30616760 368.20578003]
[136.92018127 382.47851562]
[141.53417969 396.75125122]
[146.14819336 411.02398682]
[159.93908691 418.26614380]
[164.41502380 432.80645752]
[157.42573547 445.90933228]
[162.03974915 460.18206787]
[166.65374756 474.45480347]
[171.26776123 488.72753906]
[175.88177490 503.00027466]
[178.46675110 488.22470093]
[185.43550110 474.94174194]
[196.12382507 464.41751099]
[209.51296997 457.65505981]
[224.32676697 455.29895020]
[239.15327454 457.57376099]
[252.57931519 464.26269531]
[263.32519531 474.72814941]
[270.36669922 487.97268677]
[273.03265381 502.73385620]
[271.06900024 517.60479736]
[264.66284180 531.16802979]
[254.42483521 542.13079834]
[241.33076477 549.44824219]
[226.62867737 552.42291260]
[211.71987915 550.77130127]
[198.02540588 544.65069580]
[186.85049438 534.64465332]
[179.25987244 521.70568848]
[179.92965698 536.69073486]
[180.59944153 551.67578125]
[181.26922607 566.66082764]
[182.71864319 581.59063721]
[184.94377136 596.42468262]
[187.16888428 611.25872803]
[189.39399719 626.09277344]
[204.20997620 629.38690186]
[216.83334351 637.81390381]
[225.55685425 650.23425293]
[229.20075989 664.96813965]
[227.27224731 680.02282715]
[220.03210449 693.36248779]
[208.45953369 703.18286133]
[194.11961365 708.15588379]
[178.95172119 707.60906982]
[165.00715637 701.61621094]
[154.17182922 690.98797607]
[147.91111755 677.16162109]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 198]
[4 197]
[5 196]
[6 195]
[14 194]
[15 193]
[16 192]
[17 191]
[18 172]
[19 171]
[20 170]
[21 169]
[22 168]
[25 165]
[26 164]
[27 163]
[28 162]
[29 161]
[30 160]
[31 159]
[32 158]
[33 157]
[34 156]
[58 155]
[59 154]
[60 153]
[61 152]
[62 151]
[63 150]
[64 149]
[65 148]
[66 147]
[67 146]
[73 140]
[74 134]
[75 133]
[76 132]
[77 131]
[78 130]
[79 129]
[80 122]
[81 121]
[82 119]
[83 118]
[85 116]
[87 114]
[88 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
