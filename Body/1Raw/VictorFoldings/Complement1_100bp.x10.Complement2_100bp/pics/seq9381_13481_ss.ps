%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[192.87217712 719.06176758]
[179.35247803 712.55712891]
[166.17098999 705.39184570]
[153.36000061 697.58343506]
[140.95083618 689.15106201]
[128.97386169 680.11535645]
[117.45839691 670.49835205]
[106.43261719 660.32360840]
[95.92351532 649.61608887]
[85.95679474 638.40197754]
[76.55684662 626.70861816]
[67.74668884 614.56475830]
[59.54786301 602.00006104]
[51.98044205 589.04528809]
[45.06294632 575.73211670]
[38.81230545 562.09313965]
[33.24380875 548.16168213]
[28.37108612 533.97192383]
[24.20606422 519.55859375]
[20.75893593 504.95687866]
[18.03813362 490.20257568]
[16.05031776 475.33175659]
[14.80035114 460.38082886]
[14.29129505 445.38638306]
[14.52439404 430.38510132]
[15.49907684 415.41372681]
[17.21295929 400.50885010]
[19.66184807 385.70700073]
[22.83974838 371.04434204]
[26.73888588 356.55676270]
[31.34971428 342.27978516]
[36.66095352 328.24826050]
[42.65960693 314.49658203]
[49.33099365 301.05838013]
[56.65878677 287.96655273]
[64.62505341 275.25314331]
[73.21029663 262.94924927]
[82.39351654 251.08496094]
[92.15222931 239.68934631]
[102.46255493 228.79028320]
[113.29927063 218.41444397]
[124.63584900 208.58721924]
[136.44454956 199.33264160]
[148.69647217 190.67338562]
[140.65530396 178.01086426]
[132.61413574 165.34832764]
[124.57295990 152.68580627]
[116.53178406 140.02328491]
[108.49061584 127.36075592]
[93.70720673 127.94821167]
[80.60219574 121.08142853]
[72.67088318 108.59190369]
[72.02867126 93.81077576]
[78.84686279 80.68041229]
[70.80568695 68.01789093]
[62.76451874 55.35536575]
[54.72334290 42.69284058]
[46.68217087 30.03031540]
[38.64099884 17.36779022]
[25.14377213 23.94843483]
[10.99460316 28.97646141]
[-3.62856531 32.38863754]
[-18.54183388 34.14205170]
[-33.55764771 34.21465302]
[-48.48717499 32.60552597]
[-63.14265442 29.33491135]
[-77.33978271 24.44393539]
[-90.90000916 17.99411201]
[-103.65280151 10.06655312]
[-115.43778992 0.76095515]
[-126.10675049 -9.80565357]
[-135.52552795 -21.50038719]
[-143.57565308 -34.17617035]
[-150.15588379 -47.67359543]
[-155.18348694 -61.82291412]
[-158.59523010 -76.44618225]
[-160.34820557 -91.35950470]
[-160.42034912 -106.37532043]
[-158.81077576 -121.30480194]
[-155.53971863 -135.96017456]
[-150.64833069 -150.15716553]
[-144.19808960 -163.71719360]
[-136.27015686 -176.46975708]
[-126.96420288 -188.25445557]
[-116.39727783 -198.92311096]
[-104.70226288 -208.34152222]
[-92.02623749 -216.39128113]
[-78.52861786 -222.97111511]
[-64.37915039 -227.99829102]
[-49.75577545 -231.40959167]
[-34.84240341 -233.16210938]
[-19.82658195 -233.23382568]
[-4.89715385 -231.62379456]
[9.75813007 -228.35231018]
[23.95496368 -223.46047974]
[37.51480484 -217.00985718]
[50.26712799 -209.08152771]
[62.05155563 -199.77522278]
[72.71988678 -189.20797729]
[82.13795471 -177.51268005]
[90.18732452 -164.83641052]
[96.76676178 -151.33859253]
[101.79351807 -137.18898010]
[105.20438385 -122.56550598]
[106.95645905 -107.65207672]
[107.02770996 -92.63626099]
[105.41724396 -77.70687866]
[102.14531708 -63.05168915]
[97.25306702 -48.85500336]
[90.80202484 -35.29535294]
[82.87332153 -22.54326820]
[73.56666565 -10.75911903]
[62.99909973 -0.09110360]
[51.30352402 9.32661724]
[59.34469604 21.98914146]
[67.38587189 34.65166855]
[75.42704010 47.31419373]
[83.46821594 59.97671509]
[91.50938416 72.63924408]
[106.29279327 72.05178833]
[119.39780426 78.91857147]
[127.32911682 91.40809631]
[127.97132874 106.18922424]
[121.15313721 119.31958771]
[129.19430542 131.98211670]
[137.23548889 144.64463806]
[145.27665710 157.30715942]
[153.31782532 169.96968079]
[161.35900879 182.63221741]
[174.40634155 175.22549438]
[187.80401611 168.47308350]
[201.51921082 162.39151001]
[215.51840210 156.99563599]
[229.76728821 152.29867554]
[244.23103333 148.31213379]
[258.87423706 145.04576111]
[273.66104126 142.50753784]
[288.55529785 140.70367432]
[303.52053833 139.63861084]
[318.52011108 139.31492615]
[333.51736450 139.73344421]
[348.47555542 140.89309692]
[363.35812378 142.79109192]
[378.12857056 145.42274475]
[392.75082397 148.78164673]
[407.18908691 152.85955811]
[421.40798950 157.64649963]
[435.37280273 163.13076782]
[449.04928589 169.29895020]
[462.40399170 176.13592529]
[475.40423584 183.62498474]
[488.01821899 191.74778748]
[500.21505737 200.48445129]
[511.96490479 209.81362915]
[523.23901367 219.71244812]
[534.00982666 230.15670776]
[544.25091553 241.12084961]
[553.93725586 252.57803345]
[563.04516602 264.50021362]
[571.55236816 276.85824585]
[579.43792725 289.62185669]
[586.68267822 302.75982666]
[593.26885986 316.23999023]
[599.18029785 330.02938843]
[604.40258789 344.09423828]
[608.92291260 358.40014648]
[612.73022461 372.91210938]
[615.81518555 387.59460449]
[618.17028809 402.41168213]
[619.78973389 417.32711792]
[620.66961670 432.30435181]
[620.80773926 447.30682373]
[620.20373535 462.29772949]
[618.85906982 477.24044800]
[616.77716064 492.09835815]
[613.96295166 506.83514404]
[610.42346191 521.41473389]
[606.16723633 535.80145264]
[601.20477295 549.96002197]
[595.54815674 563.85589600]
[589.21124268 577.45507812]
[582.20959473 590.72418213]
[574.56030273 603.63079834]
[566.28204346 616.14331055]
[557.39514160 628.23114014]
[547.92138672 639.86468506]
[537.88385010 651.01550293]
[527.30712891 661.65625000]
[516.21716309 671.76092529]
[504.64099121 681.30480957]
[492.60705566 690.26452637]
[480.14474487 698.61816406]
[467.28454590 706.34527588]
[454.05795288 713.42694092]
[440.49734497 719.84582520]
[426.63589478 725.58624268]
[412.50750732 730.63409424]
[398.14675903 734.97711182]
[383.58880615 738.60461426]
[368.86929321 741.50775146]
[354.02420044 743.67938232]
[339.08987427 745.11419678]
[324.10287476 745.80871582]
[309.09988403 745.76116943]
[294.11758423 744.97180176]
[279.19265747 743.44244385]
[264.36160278 741.17681885]
[249.66076660 738.18054199]
[235.12608337 734.46093750]
[220.79313660 730.02709961]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 129]
[45 128]
[46 127]
[47 126]
[48 125]
[49 124]
[54 119]
[55 118]
[56 117]
[57 116]
[58 115]
[59 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
