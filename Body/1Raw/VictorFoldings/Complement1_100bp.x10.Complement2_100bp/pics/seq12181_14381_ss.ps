%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUGxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[85.25231934 430.07168579]
[76.07348633 441.94360352]
[66.07110596 453.13046265]
[55.29615021 463.57522583]
[43.80352020 473.22473145]
[31.65177917 482.02975464]
[18.90285492 489.94543457]
[5.62171221 496.93145752]
[-8.12397099 502.95220947]
[-22.26414871 507.97702026]
[-36.72676849 511.98025513]
[-51.43812561 514.94152832]
[-66.32325745 516.84582520]
[-81.30630493 517.68328857]
[-96.31092834 517.44976807]
[-111.26066589 516.14642334]
[-126.07933044 513.77984619]
[-140.69140625 510.36221313]
[-155.02244568 505.91082764]
[-168.99940491 500.44842529]
[-182.55105591 494.00280762]
[-195.60836792 486.60687256]
[-208.10478210 478.29827881]
[-219.97662354 469.11935425]
[-231.16340637 459.11688232]
[-241.60810852 448.34185791]
[-251.25750732 436.84915161]
[-260.06243896 424.69732666]
[-267.97802734 411.94836426]
[-274.96395874 398.66714478]
[-280.98458862 384.92141724]
[-286.00930786 370.78121948]
[-290.01242065 356.31857300]
[-292.97360229 341.60717773]
[-294.87774658 326.72204590]
[-295.71511841 311.73898315]
[-295.48147583 296.73434448]
[-294.17800903 281.78463745]
[-291.81134033 266.96600342]
[-288.39355469 252.35394287]
[-283.94207764 238.02293396]
[-278.47955322 224.04602051]
[-272.03387451 210.49441528]
[-264.63781738 197.43716431]
[-256.32913208 184.94081116]
[-247.15011597 173.06903076]
[-237.14756775 161.88233948]
[-226.37245178 151.43771362]
[-214.87966919 141.78839111]
[-202.72779846 132.98355103]
[-189.97874451 125.06806183]
[-176.69749451 118.08224487]
[-162.95172119 112.06169891]
[-148.81146240 107.03711700]
[-134.34878540 103.03409576]
[-119.63738251 100.07302856]
[-104.75222015 98.16901398]
[-89.76915741 97.33175659]
[-74.76453400 97.56551361]
[-59.81482315 98.86909485]
[-44.99619675 101.23586273]
[-30.38417244 104.65375519]
[-16.05320740 109.10534668]
[-2.07633185 114.56797028]
[11.47523117 121.01377106]
[24.53242493 128.40991211]
[37.02871323 136.71870422]
[48.90041733 145.89781189]
[58.89859009 134.71583557]
[68.89675903 123.53386688]
[78.89493561 112.35189056]
[88.89310455 101.16991425]
[98.80775452 89.91381836]
[108.63833618 78.58422852]
[118.46891785 67.25463104]
[128.29949951 55.92504120]
[138.13008118 44.59544754]
[147.96066284 33.26585388]
[137.24191284 22.76601982]
[127.17668152 11.63815880]
[117.80169678 -0.07712591]
[109.15117645 -12.33708477]
[101.25667572 -25.09698296]
[94.14700317 -38.31026077]
[87.84810638 -51.92870712]
[82.38295746 -65.90261841]
[77.77151489 -80.18102264]
[74.03058624 -94.71180725]
[71.17384338 -109.44194794]
[69.21169281 -124.31770325]
[68.15129852 -139.28479004]
[67.99653625 -154.28860474]
[68.74796295 -169.27436829]
[70.40284729 -184.18743896]
[72.95513916 -198.97337341]
[76.39552307 -213.57823181]
[80.71146393 -227.94871521]
[85.88719177 -242.03239441]
[91.90383148 -255.77787781]
[98.73943329 -269.13500977]
[106.36904907 -282.05502319]
[114.76483154 -294.49081421]
[123.89616394 -306.39700317]
[133.72970581 -317.73010254]
[144.22958374 -328.44882202]
[155.35749817 -338.51400757]
[167.07283020 -347.88891602]
[179.33282471 -356.53939819]
[192.09275818 -364.43383789]
[205.30607605 -371.54342651]
[218.92454529 -377.84228516]
[232.89848328 -383.30734253]
[247.17691040 -387.91873169]
[261.70770264 -391.65957642]
[276.43786621 -394.51626587]
[291.31362915 -396.47836304]
[306.28073120 -397.53866577]
[321.28451538 -397.69335938]
[336.27029419 -396.94186401]
[351.18334961 -395.28692627]
[365.96929932 -392.73455811]
[380.57412720 -389.29409790]
[394.94458008 -384.97808838]
[409.02825928 -379.80230713]
[422.77371216 -373.78561401]
[436.13079834 -366.94995117]
[449.05078125 -359.32025146]
[461.48654175 -350.92440796]
[473.39266968 -341.79302979]
[484.72573853 -331.95944214]
[495.44439697 -321.45950317]
[505.50952148 -310.33154297]
[514.88439941 -298.61618042]
[523.53479004 -286.35614014]
[531.42919922 -273.59616089]
[538.53875732 -260.38281250]
[544.83752441 -246.76432800]
[550.30255127 -232.79035950]
[554.91381836 -218.51191711]
[558.65460205 -203.98109436]
[561.51123047 -189.25093079]
[563.47326660 -174.37515259]
[564.53350830 -159.40805054]
[564.68811035 -144.40425110]
[563.93658447 -129.41847229]
[562.28155518 -114.50542450]
[559.72912598 -99.71951294]
[556.28857422 -85.11468506]
[551.97253418 -70.74423981]
[546.79663086 -56.66061020]
[540.77990723 -42.91518784]
[533.94415283 -29.55813026]
[526.31445312 -16.63817215]
[517.91851807 -4.20245790]
[508.78707886 7.70363331]
[498.95343018 19.03665924]
[488.45346069 29.75526428]
[477.32543945 39.82033920]
[465.61004639 49.19515610]
[453.34997559 57.84550858]
[440.58996582 65.73983002]
[427.37658691 72.84931946]
[413.75805664 79.14803314]
[399.78405762 84.61298370]
[385.50558472 89.22422791]
[370.97476196 92.96495056]
[356.24456787 95.82149506]
[341.36877441 97.78343201]
[326.40167236 98.84362030]
[311.39788818 98.99817657]
[296.41210938 98.24653625]
[281.49905396 96.59145355]
[266.71316528 94.03895569]
[252.10835266 90.59835815]
[237.73793030 86.28222656]
[223.65432739 81.10630035]
[209.90893555 75.08946228]
[196.55189514 68.25367737]
[183.63197327 60.62388611]
[171.19630432 52.22792816]
[159.29025269 43.09643555]
[149.45967102 54.42602921]
[139.62908936 65.75562286]
[129.79850769 77.08521271]
[119.96793365 88.41481018]
[110.13735199 99.74440002]
[107.65315247 107.41259766]
[100.07508087 111.16808319]
[90.07691193 122.35005951]
[80.07873535 133.53204346]
[70.08056641 144.71400452]
[60.08239365 155.89598083]
[70.52725983 166.67086792]
[80.17684174 178.16342163]
[88.98195648 190.31509399]
[96.89775085 203.06394958]
[103.88387299 216.34504700]
[109.90473175 230.09068298]
[114.92964172 244.23081970]
[118.93299103 258.69342041]
[121.89439392 273.40475464]
[123.79875183 288.28985596]
[124.63636017 303.27291870]
[124.40294647 318.27752686]
[123.09970856 333.22726440]
[120.73328400 348.04595947]
[117.31572723 362.65805054]
[112.86445618 376.98913574]
[107.40216064 390.96612549]
[100.95666504 404.51785278]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 192]
[69 191]
[70 190]
[71 189]
[72 188]
[73 186]
[74 185]
[75 184]
[76 183]
[77 182]
[78 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
