%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxAGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUA\
) } def
/len { sequence length } bind def

/coor [
[133.45573425 870.53167725]
[118.69806671 867.83013916]
[104.08690643 864.42413330]
[89.65584564 860.32153320]
[75.43807983 855.53173828]
[61.46631241 850.06579590]
[47.77267456 843.93627930]
[34.38866806 837.15722656]
[21.34507561 829.74432373]
[8.67189312 821.71453857]
[-3.60172725 813.08636475]
[-15.44755554 803.87963867]
[-26.83834648 794.11560059]
[-37.74790192 783.81665039]
[-48.15112686 773.00646973]
[-58.02409744 761.70996094]
[-67.34410095 749.95306396]
[-76.08970642 737.76287842]
[-84.24079132 725.16735840]
[-91.77861023 712.19555664]
[-98.68582916 698.87719727]
[-104.94656372 685.24304199]
[-110.54640198 671.32440186]
[-115.47248077 657.15332031]
[-119.71345520 642.76226807]
[-123.25957489 628.18450928]
[-126.10269165 613.45349121]
[-128.23625183 598.60302734]
[-129.65536499 583.66741943]
[-130.35675049 568.68090820]
[-130.33880615 553.67803955]
[-129.60157776 538.69329834]
[-128.14674377 523.76110840]
[-125.97766876 508.91580200]
[-123.09932709 494.19161987]
[-119.51834106 479.62234497]
[-115.24295807 465.24151611]
[-110.28299713 451.08221436]
[-104.64987946 437.17700195]
[-98.35655212 423.55786133]
[-91.41749573 410.25613403]
[-83.84867096 397.30236816]
[-75.66748047 384.72640991]
[-66.89274597 372.55715942]
[-57.54464340 360.82257080]
[-47.64468384 349.54971313]
[-37.21562958 338.76446533]
[-26.28147125 328.49160767]
[-14.86735630 318.75485229]
[-2.99953961 309.57650757]
[9.29468346 300.97772217]
[21.98703575 292.97827148]
[35.04832458 285.59658813]
[48.44850922 278.84957886]
[62.15676498 272.75280762]
[76.14157104 267.32028198]
[90.37075043 262.56451416]
[104.81157684 258.49642944]
[119.43084717 255.12539673]
[116.76505280 240.36418152]
[114.09925842 225.60296631]
[111.43346405 210.84175110]
[101.55744171 199.69215393]
[106.71900940 184.73658752]
[104.05321503 169.97537231]
[101.38742065 155.21415710]
[97.10523224 149.19049072]
[98.79353333 140.21343994]
[96.34780884 125.41416931]
[93.90208435 110.61489868]
[89.15388489 124.84355164]
[80.29182434 136.94577026]
[68.16057587 145.76806641]
[53.91641235 150.46954346]
[38.91699600 150.60208130]
[24.59197998 146.15304565]
[12.30672836 137.54649353]
[3.23219538 125.60276031]
[-1.76669264 111.46023560]
[-2.21347380 96.46688843]
[1.93443656 82.05179596]
[10.28168583 69.58891296]
[22.03266716 60.26612473]
[36.06735229 54.97201538]
[51.04804611 54.21118546]
[65.54688263 58.05615234]
[78.18192291 66.14044189]
[87.74887848 77.69351196]
[93.33614349 91.61529541]
[94.89666748 76.69669342]
[96.45718384 61.77808762]
[94.23754883 52.91744232]
[98.15361786 46.64957047]
[99.93608093 31.75585175]
[101.71854401 16.86213493]
[103.50101471 1.96841681]
[105.28347778 -12.92530060]
[106.51045227 -27.87503433]
[107.18023682 -42.86007309]
[107.85002136 -57.84511185]
[94.20935822 -64.61653900]
[84.50718689 -76.35483551]
[80.42445374 -91.02627563]
[82.66853333 -106.08894348]
[90.85061646 -118.93314362]
[103.55310822 -127.33353424]
[118.57522583 -129.83470154]
[133.31430054 -126.00330353]
[145.21669006 -116.50315094]
[152.22024536 -102.98020172]
[153.11154175 -87.77738953]
[147.73617554 -73.52869415]
[137.02545166 -62.70278931]
[122.83506012 -57.17532730]
[122.16527557 -42.19028854]
[121.49549103 -27.20524979]
[134.15785217 -35.24666977]
[148.38877869 -30.50524330]
[153.69772339 -16.47616768]
[146.17117310 -3.50115776]
[131.35739136 -1.14490795]
[120.17719269 -11.14283466]
[118.39472961 3.75088263]
[116.61226654 18.64459991]
[114.82979584 33.53831863]
[113.04733276 48.43203354]
[111.37579346 63.33860779]
[109.81526947 78.25720978]
[108.25474548 93.17581940]
[108.70135498 108.16916656]
[111.14707947 122.96843719]
[113.59280396 137.76771545]
[116.14863586 152.54837036]
[118.81443787 167.30958557]
[121.48023224 182.07080078]
[131.54692078 194.27621460]
[126.19467926 208.17594910]
[128.86047363 222.93717957]
[131.52627563 237.69839478]
[134.19206238 252.45960999]
[149.06698608 250.50415039]
[164.01853943 249.26412964]
[179.01235962 248.74238586]
[194.01396179 248.94010925]
[208.98881531 249.85687256]
[223.90251160 251.49053955]
[238.72071838 253.83735657]
[253.40936279 256.89193726]
[267.93466187 260.64724731]
[282.26321411 265.09466553]
[296.36206055 270.22396851]
[310.19876099 276.02331543]
[323.74151611 282.47937012]
[336.95916748 289.57733154]
[349.82128906 297.30087280]
[362.29830933 305.63217163]
[374.36154175 314.55209351]
[385.98324585 324.04016113]
[397.13665771 334.07449341]
[407.79617310 344.63204956]
[417.93722534 355.68853760]
[427.53652954 367.21850586]
[436.57199097 379.19546509]
[445.02282715 391.59185791]
[452.86959839 404.37915039]
[460.09423828 417.52795410]
[466.68017578 431.00802612]
[472.61224365 444.78836060]
[477.87677002 458.83724976]
[482.46166992 473.12240601]
[486.35641479 487.61096191]
[489.55203247 502.26956177]
[492.04113770 517.06457520]
[493.81805420 531.96185303]
[494.87869263 546.92718506]
[495.22058105 561.92620850]
[494.84295654 576.92437744]
[493.74667358 591.88714600]
[491.93426514 606.78015137]
[489.40988159 621.56915283]
[486.17938232 636.22009277]
[482.25012207 650.69934082]
[477.63119507 664.97351074]
[472.33319092 679.00982666]
[466.36831665 692.77600098]
[459.75030518 706.24035645]
[452.49432373 719.37188721]
[444.61709595 732.14050293]
[436.13674927 744.51666260]
[427.07278442 756.47210693]
[417.44604492 767.97912598]
[407.27865601 779.01141357]
[396.59402466 789.54357910]
[385.41674805 799.55126953]
[373.77246094 809.01165771]
[361.68801880 817.90277100]
[349.19116211 826.20434570]
[336.31066895 833.89721680]
[323.07617188 840.96362305]
[309.51809692 847.38745117]
[295.66760254 853.15380859]
[281.55657959 858.24945068]
[267.21746826 862.66271973]
[252.68324280 866.38342285]
[237.98736572 869.40301514]
[223.16360474 871.71453857]
[208.24606323 873.31262207]
[193.26905823 874.19372559]
[178.26704407 874.35571289]
[163.27450562 873.79821777]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 140]
[60 139]
[61 138]
[62 137]
[64 135]
[65 134]
[66 133]
[68 132]
[69 131]
[70 130]
[89 129]
[90 128]
[91 127]
[93 126]
[94 125]
[95 124]
[96 123]
[97 122]
[98 116]
[99 115]
[100 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
