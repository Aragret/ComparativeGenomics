%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[65.21347809 502.49328613]
[50.94711685 497.79986572]
[37.35052490 491.42098999]
[24.62197495 483.44970703]
[12.94709301 474.00225830]
[2.49612904 463.21640015]
[-6.57850933 451.24942017]
[-14.14448738 438.27584839]
[-20.09147072 424.48489380]
[-24.33273697 410.07763672]
[-26.80643272 395.26419067]
[-27.47648621 380.26058960]
[-26.33312416 365.28558350]
[-23.39302254 350.55761719]
[-18.69905663 336.29144287]
[-12.31967640 322.69506836]
[-4.34791279 309.96682739]
[5.09998178 298.29229736]
[15.88623047 287.84173584]
[27.85353661 278.76754761]
[40.82738113 271.20205688]
[54.61856842 265.25558472]
[69.02598572 261.01486206]
[83.83952332 258.54171753]
[83.16973877 243.55668640]
[82.49995422 228.57164001]
[81.83016968 213.58660889]
[81.16038513 198.60156250]
[80.49060059 183.61653137]
[73.45580292 196.86460876]
[61.93574905 206.47129822]
[47.63936234 211.01147461]
[32.68742371 209.81164551]
[19.29796982 203.04980469]
[9.45724392 191.72903442]
[4.62505913 177.52867126]
[5.51824236 162.55529785]
[12.00429535 149.03009033]
[23.12104988 138.95945740]
[37.21940231 133.83729553]
[52.20794296 134.42346191]
[65.86321259 140.63099670]
[76.15953827 151.53906250]
[81.56918335 165.52760315]
[84.01490784 150.72833252]
[86.46063995 135.92906189]
[88.90636444 121.12979889]
[91.35208893 106.33052826]
[91.68706512 91.33426666]
[89.90460205 76.44055176]
[88.12213898 61.54683304]
[86.33966827 46.65311432]
[84.55720520 31.75939751]
[82.77473450 16.86568069]
[67.95542145 13.89159203]
[54.79874802 6.49263954]
[44.58702850 -4.59560633]
[38.31107330 -18.27871513]
[36.57406998 -33.21141052]
[39.53362274 -47.92983246]
[46.88756180 -60.99504471]
[57.90472412 -71.13369751]
[71.49764252 -77.36214447]
[69.71517944 -92.25585938]
[67.93270874 -107.14957428]
[66.15024567 -122.04329681]
[64.25695038 -136.92332458]
[62.25293732 -151.78884888]
[60.24892426 -166.65438843]
[45.24756241 -166.09346008]
[30.26209641 -166.98301697]
[15.43244362 -169.31472778]
[0.89706916 -173.06684875]
[-13.20831013 -178.20434570]
[-26.75199318 -184.67922974]
[-39.60752487 -192.43106079]
[-51.65487289 -201.38745117]
[-62.78155136 -211.46478271]
[-72.88366699 -222.56895447]
[-81.86690521 -234.59629822]
[-89.64738464 -247.43450928]
[-96.15245819 -260.96371460]
[-101.32138824 -275.05761719]
[-105.10591888 -289.58456421]
[-107.47070312 -304.40899658]
[-108.39367676 -319.39242554]
[-107.86620331 -334.39501953]
[-105.89322662 -349.27664185]
[-102.49314880 -363.89837646]
[-97.69773102 -378.12368774]
[-91.55175018 -391.81976318]
[-84.11257935 -404.85870361]
[-75.44967651 -417.11880493]
[-65.64393616 -428.48553467]
[-54.78691483 -438.85281372]
[-42.97998047 -448.12384033]
[-30.33337021 -456.21203613]
[-16.96516800 -463.04187012]
[-3.00019360 -468.54959106]
[11.43116379 -472.68377686]
[26.19416046 -475.40579224]
[41.15095139 -476.69027710]
[56.16189194 -476.52520752]
[71.08681488 -474.91210938]
[85.78638458 -471.86605835]
[100.12332916 -467.41552734]
[113.96380615 -461.60202026]
[127.17857361 -454.47982788]
[139.64425659 -446.11547852]
[151.24444580 -436.58706665]
[161.87084961 -425.98352051]
[171.42424011 -414.40386963]
[179.81542969 -401.95623779]
[186.96604919 -388.75683594]
[192.80934143 -374.92892456]
[197.29075623 -360.60159302]
[200.36845398 -345.90863037]
[202.01368713 -330.98721313]
[202.21109009 -315.97665405]
[200.95883179 -301.01712036]
[198.26860046 -286.24829102]
[194.16551208 -271.80807495]
[188.68788147 -257.83126831]
[181.88685608 -244.44839478]
[173.82592773 -231.78439331]
[164.58035278 -219.95751953]
[154.23648071 -209.07818604]
[142.89088440 -199.24798584]
[130.64947510 -190.55870056]
[117.62657928 -183.09147644]
[103.94377899 -176.91600037]
[89.72882843 -172.08995056]
[75.11445618 -168.65840149]
[77.11846924 -153.79287720]
[79.12248230 -138.92733765]
[83.13143158 -132.71847534]
[81.04396057 -123.82575989]
[82.82643127 -108.93204498]
[84.60889435 -94.03832245]
[86.39135742 -79.14460754]
[101.07016754 -76.29969788]
[114.16868591 -69.04718781]
[124.39804077 -58.08632660]
[130.74723816 -44.48196411]
[132.58308411 -29.56109810]
[129.71328735 -14.78343582]
[122.40654755 -1.59859753]
[111.36743164 8.69608307]
[97.66845703 15.08321381]
[99.45092010 29.97693062]
[101.23339081 44.87064743]
[103.01585388 59.76436615]
[104.79831696 74.65808105]
[106.58078766 89.55180359]
[111.85919952 75.51120758]
[120.99409485 63.61357498]
[133.19522095 54.88816833]
[147.40704346 50.08982849]
[162.40010071 49.63365555]
[176.87734985 53.55911255]
[189.58636475 61.52661133]
[199.42768860 72.84687805]
[205.54992676 86.54060364]
[207.42347717 101.42313385]
[204.88624573 116.20699310]
[198.15771484 129.61322021]
[187.81999207 140.48205566]
[174.76737976 147.87321472]
[160.12905884 151.14730835]
[145.17140198 150.02107239]
[131.18838501 144.59196472]
[119.38967896 135.32963562]
[110.79599762 123.03539276]
[106.15135956 108.77625275]
[103.70563507 123.57552338]
[101.25991058 138.37480164]
[98.81417847 153.17407227]
[96.36845398 167.97334290]
[95.47563934 182.94674683]
[96.14542389 197.93177795]
[96.81520844 212.91682434]
[97.48499298 227.90185547]
[98.15477753 242.88690186]
[98.82456207 257.87194824]
[113.79967499 259.01361084]
[128.52796936 261.95205688]
[142.79469299 266.64443970]
[156.39175415 273.02227783]
[169.12089539 280.99261475]
[180.79649353 290.43920898]
[191.24826050 301.22427368]
[200.32379150 313.19058228]
[207.89074707 326.16357422]
[213.83876038 339.95410156]
[218.08110046 354.36102295]
[220.55590820 369.17428589]
[221.22708130 384.17785645]
[220.08483887 399.15292358]
[217.14584351 413.88110352]
[212.45294189 428.14764404]
[206.07456970 441.74447632]
[198.10375977 454.47332764]
[188.65673828 466.14855957]
[177.87127686 476.59994507]
[165.90464783 485.67501831]
[152.93136597 493.24148560]
[139.14062500 499.18896484]
[124.73352814 503.43078613]
[109.92017365 505.90502930]
[94.91658783 506.57565308]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 184]
[25 183]
[26 182]
[27 181]
[28 180]
[29 179]
[44 178]
[45 177]
[46 176]
[47 175]
[48 174]
[49 154]
[50 153]
[51 152]
[52 151]
[53 150]
[54 149]
[63 140]
[64 139]
[65 138]
[66 137]
[67 135]
[68 134]
[69 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
