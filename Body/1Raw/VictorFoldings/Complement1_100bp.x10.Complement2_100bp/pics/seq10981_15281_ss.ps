%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAUxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[149.49748230 218.05505371]
[153.83503723 203.68635559]
[159.37553406 189.73727417]
[166.07904053 176.30831909]
[173.89726257 163.49624634]
[161.80151367 154.62535095]
[149.70576477 145.75445557]
[137.61000061 136.88356018]
[122.77115631 135.59597778]
[116.21871185 121.19541931]
[104.12296295 112.32452393]
[91.76845551 103.81769562]
[79.16613770 95.68247986]
[66.56382751 87.54726410]
[53.96151733 79.41204834]
[41.35920715 71.27683258]
[28.75689507 63.14161682]
[34.93933105 76.80827332]
[34.66631699 91.80578613]
[27.99057579 105.23838043]
[16.20108032 114.51242065]
[1.57420278 117.83723450]
[-13.06583881 114.57086945]
[-24.89228058 105.34398651]
[-31.62162209 91.93817139]
[-31.95453453 76.94186401]
[-25.82673454 63.25062561]
[-14.42140770 53.50801086]
[0.05925908 49.59517288]
[14.82044888 52.26811600]
[3.86453915 42.02272415]
[-11.70829201 42.37582397]
[-22.67319298 31.82946968]
[-22.91385078 16.98097992]
[-33.86975861 6.73558760]
[-44.82566833 -3.50980377]
[-55.78157806 -13.75519562]
[-66.73748779 -24.00058746]
[-77.69339752 -34.24597931]
[-88.78255463 -24.13307953]
[-100.64012909 -14.93319225]
[-113.19116211 -6.70447969]
[-126.35629272 0.50103205]
[-140.05229187 6.63778687]
[-154.19256592 11.66698551]
[-168.68769836 15.55683136]
[-183.44607544 18.28273010]
[-198.37437439 19.82744980]
[-213.37820435 20.18122292]
[-228.36270142 19.34181404]
[-243.23315430 17.31452751]
[-257.89553833 14.11218262]
[-272.25711060 9.75502491]
[-286.22711182 4.27060366]
[-299.71722412 -2.30640817]
[-312.64215088 -9.93442726]
[-324.92016602 -18.56522560]
[-336.47363281 -28.14423752]
[-347.22952271 -38.61089706]
[-357.11981201 -49.89903641]
[-366.08200073 -61.93727875]
[-374.05941772 -74.64952087]
[-381.00158691 -87.95538330]
[-386.86468506 -101.77075195]
[-391.61160278 -116.00827026]
[-395.21231079 -130.57792664]
[-397.64410400 -145.38760376]
[-398.89154053 -160.34367371]
[-398.94677734 -175.35156250]
[-397.80944824 -190.31640625]
[-395.48675537 -205.14358521]
[-391.99334717 -219.73934937]
[-387.35134888 -234.01142883]
[-381.59011841 -247.86956787]
[-374.74606323 -261.22616577]
[-366.86242676 -273.99679565]
[-357.98910522 -286.10067749]
[-348.18215942 -297.46130371]
[-337.50360107 -308.00683594]
[-326.02093506 -317.67062378]
[-313.80679321 -326.39157104]
[-300.93838501 -334.11450195]
[-287.49703979 -340.79064941]
[-273.56777954 -346.37774658]
[-259.23864746 -350.84048462]
[-244.60025024 -354.15066528]
[-229.74511719 -356.28735352]
[-214.76719666 -357.23703003]
[-199.76116943 -356.99371338]
[-184.82191467 -355.55889893]
[-170.04388428 -352.94171143]
[-155.52049255 -349.15866089]
[-141.34359741 -344.23367310]
[-127.60279846 -338.19787598]
[-114.38498688 -331.08947754]
[-101.77372742 -322.95336914]
[-89.84875488 -313.84100342]
[-78.68546295 -303.80999756]
[-68.35443115 -292.92376709]
[-58.92097855 -281.25115967]
[-50.44474411 -268.86593628]
[-42.97931671 -255.84643555]
[-36.57189941 -242.27496338]
[-31.26300049 -228.23730469]
[-27.08618546 -213.82223511]
[-24.06786156 -199.12088013]
[-22.22711182 -184.22619629]
[-21.57557487 -169.23234558]
[-22.11736870 -154.23411560]
[-23.84906960 -139.32635498]
[-26.75972748 -124.60330963]
[-30.83094215 -110.15805817]
[-36.03697205 -96.08193207]
[-42.34490204 -82.46392822]
[-49.71485138 -69.39013672]
[-58.10022354 -56.94322968]
[-67.44800568 -45.20188904]
[-56.49209595 -34.95649719]
[-45.53618622 -24.71110535]
[-34.58027649 -14.46571350]
[-23.62436867 -4.22032166]
[-12.66845894 6.02506971]
[2.16282821 5.27107096]
[13.41962814 15.50528431]
[14.10993099 31.06681442]
[25.06583977 41.31220627]
[36.89210892 50.53930283]
[49.49442291 58.67451859]
[62.09673309 66.80973816]
[74.69904327 74.94495392]
[87.30136108 83.08016968]
[99.90367126 91.21538544]
[102.92687225 90.82840729]
[106.15769958 91.53289795]
[109.19215393 93.40786743]
[111.60272217 96.38199615]
[112.99385834 100.22876740]
[125.08960724 109.09966278]
[140.79362488 111.02175903]
[146.48089600 124.78781128]
[158.57666016 133.65870667]
[170.67240906 142.52960205]
[182.76815796 151.40049744]
[192.63861084 140.09350586]
[203.43240356 129.66432190]
[215.07177734 120.18809509]
[227.47285461 111.73310852]
[240.54631042 104.36027527]
[254.19793701 98.12271118]
[268.32934570 93.06537628]
[282.83877563 89.22469330]
[297.62161255 86.62834167]
[312.57141113 85.29502869]
[327.58041382 85.23435974]
[342.54049683 86.44676971]
[357.34384155 88.92352295]
[371.88385010 92.64678192]
[386.05569458 97.58971405]
[399.75729370 103.71670532]
[412.88992310 110.98360443]
[425.35894775 119.33806610]
[437.07455444 128.71987915]
[447.95230103 139.06146240]
[457.91384888 150.28829956]
[466.88739014 162.31947327]
[474.80825806 175.06834412]
[481.61941528 188.44300842]
[487.27178955 202.34713745]
[491.72463989 216.68052673]
[494.94586182 231.33990479]
[496.91226196 246.21966553]
[497.60971069 261.21258545]
[497.03311157 276.21063232]
[495.18667603 291.10574341]
[492.08367920 305.79061890]
[487.74649048 320.15942383]
[482.20635986 334.10864258]
[475.50320435 347.53775024]
[467.68530273 360.35003662]
[458.80902100 372.45315552]
[448.93826294 383.75988770]
[438.14422607 394.18878174]
[426.50460815 403.66470337]
[414.10330200 412.11938477]
[401.02963257 419.49188232]
[387.37786865 425.72909546]
[373.24630737 430.78607178]
[358.73678589 434.62637329]
[343.95388794 437.22235107]
[329.00405884 438.55526733]
[313.99505615 438.61553955]
[299.03500366 437.40274048]
[284.23171997 434.92562866]
[269.69183350 431.20199585]
[255.52009583 426.25869751]
[241.81866455 420.13134766]
[228.68621826 412.86410522]
[216.21739197 404.50930786]
[204.50202942 395.12719727]
[193.62454224 384.78533936]
[183.66329956 373.55825806]
[174.69007874 361.52682495]
[166.76951599 348.77777100]
[159.95870972 335.40292358]
[154.30670166 321.49865723]
[149.85423279 307.16513062]
[146.63337708 292.50567627]
[144.66735840 277.62588501]
[143.97030640 262.63293457]
[144.54728699 247.63490295]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 143]
[6 142]
[7 141]
[8 140]
[10 138]
[11 137]
[12 132]
[13 131]
[14 130]
[15 129]
[16 128]
[17 127]
[30 126]
[31 125]
[34 122]
[35 121]
[36 120]
[37 119]
[38 118]
[39 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
