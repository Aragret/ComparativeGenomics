%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[166.04272461 434.82766724]
[162.13772583 420.33737183]
[159.33979797 405.59326172]
[157.66496277 390.67977905]
[157.12283325 375.68231201]
[157.71649170 360.68682861]
[159.44255066 345.77917480]
[162.29112244 331.04473877]
[166.24588013 316.56796265]
[171.28417969 302.43173218]
[177.37716675 288.71704102]
[184.48992920 275.50244141]
[192.58172607 262.86358643]
[201.60623169 250.87294006]
[211.51171875 239.59913635]
[201.02421570 228.87475586]
[190.53671265 218.15037537]
[180.04920959 207.42599487]
[169.56170654 196.70161438]
[159.07421875 185.97723389]
[152.15014648 183.39285278]
[148.51188660 175.01425171]
[138.18521118 164.13491821]
[127.85855103 153.25558472]
[130.64134216 167.99519348]
[126.83695984 182.50473022]
[117.17995453 193.98262024]
[103.53494263 200.21269226]
[88.53656769 199.99198914]
[75.08078003 193.36312866]
[65.76567841 181.60604858]
[62.38986206 166.99085999]
[65.60515594 152.33952332]
[74.79072571 140.48097229]
[88.17298889 133.70491028]
[103.16804504 133.31970215]
[116.88159943 139.40046692]
[108.65279388 126.85906982]
[100.42398071 114.31766510]
[88.02384186 107.85793304]
[87.03461456 93.91114044]
[78.80580902 81.36973572]
[70.57700348 68.82833862]
[62.34819412 56.28693771]
[48.30849075 48.99328995]
[47.79557800 34.10751724]
[39.56676865 21.56611824]
[39.68575287 36.56564713]
[33.36329651 50.16809464]
[21.82016945 59.74703979]
[7.28516626 63.45293808]
[-7.43522978 60.57024384]
[-19.49874115 51.65555573]
[-26.57609367 38.43016052]
[-27.30076218 23.44767380]
[-21.53282166 9.60098267]
[-10.38597298 -0.43633652]
[3.98750162 -4.72623396]
[18.81231117 -2.44039750]
[31.22688675 5.98074341]
[25.35792542 -7.82343340]
[19.48896599 -21.62760925]
[13.62000465 -35.43178558]
[7.75104380 -49.23596573]
[1.88208294 -63.04014206]
[-3.98687792 -76.84431458]
[-18.40517426 -72.64323425]
[-33.21915436 -70.17697906]
[-48.22084808 -69.48017120]
[-63.19965744 -70.56259155]
[-77.94530487 -73.40904236]
[-92.25077820 -77.97956848]
[-105.91526031 -84.21000671]
[-118.74691772 -92.01288605]
[-130.56561279 -101.27867126]
[-141.20542908 -111.87728119]
[-150.51701355 -123.65993500]
[-158.36962891 -136.46121216]
[-164.65303040 -150.10142517]
[-169.27903748 -164.38905334]
[-172.18269348 -179.12353516]
[-173.32322693 -194.09803772]
[-172.68463135 -209.10232544]
[-170.27587891 -223.92575073]
[-166.13078308 -238.36024475]
[-160.30752563 -252.20315552]
[-152.88786316 -265.26013184]
[-143.97595215 -277.34793091]
[-133.69691467 -288.29678345]
[-122.19503021 -297.95303345]
[-109.63178253 -306.18109131]
[-96.18354034 -312.86550903]
[-82.03909302 -317.91235352]
[-67.39700317 -321.25085449]
[-52.46282578 -322.83413696]
[-37.44621277 -322.63992310]
[-22.55797577 -320.67098999]
[-8.00712013 -316.95492554]
[6.00208235 -311.54397583]
[19.27296257 -304.51403809]
[31.61922073 -295.96380615]
[42.86753464 -286.01333618]
[52.85999298 -274.80230713]
[61.45631790 -262.48809814]
[68.53583527 -249.24360657]
[73.99915314 -235.25473022]
[77.76957703 -220.71788025]
[79.79417419 -205.83711243]
[80.04452515 -190.82131958]
[78.51712036 -175.88133240]
[75.23339081 -161.22686768]
[70.23944855 -147.06364441]
[63.60538483 -133.59049988]
[55.42434311 -120.99657440]
[45.81117249 -109.45866394]
[34.90081787 -99.13875580]
[22.84645462 -90.18170929]
[9.81729889 -82.71327972]
[15.68626022 -68.90910339]
[21.55522156 -55.10492325]
[27.42418098 -41.30074692]
[33.29314041 -27.49657059]
[39.16210175 -13.69239426]
[45.03106308 0.11178283]
[52.10816956 13.33731079]
[60.33697891 25.87870979]
[73.78810120 32.27531433]
[74.88959503 48.05813217]
[83.11840057 60.59952927]
[91.34720612 73.14093018]
[99.57601929 85.68233490]
[111.97615814 92.14206696]
[112.96538544 106.08885956]
[121.19419098 118.63026428]
[129.42300415 131.17166138]
[138.73788452 142.92890930]
[149.06454468 153.80824280]
[159.39122009 164.68757629]
[169.79859924 175.48973083]
[180.28608704 186.21411133]
[190.77359009 196.93849182]
[201.26109314 207.66287231]
[211.74859619 218.38725281]
[222.23609924 229.11163330]
[233.72830200 219.46037292]
[245.91749573 210.70590210]
[258.73388672 202.89836121]
[272.10403442 196.08248901]
[285.95138550 190.29728699]
[300.19659424 185.57592773]
[314.75808716 181.94544983]
[329.55242920 179.42663574]
[344.49493408 178.03392029]
[359.49993896 177.77528381]
[374.48153687 178.65220642]
[389.35391235 180.65966797]
[404.03186035 183.78616333]
[418.43133545 188.01377869]
[432.46981812 193.31831360]
[446.06695557 199.66937256]
[459.14477539 207.03057861]
[471.62844849 215.35977173]
[483.44644165 224.60923767]
[494.53103638 234.72599792]
[504.81878662 245.65211487]
[514.25073242 257.32498169]
[522.77282715 269.67773438]
[530.33630371 282.63964844]
[536.89782715 296.13647461]
[542.41979980 310.09085083]
[546.87060547 324.42291260]
[550.22473145 339.05053711]
[552.46301270 353.88992310]
[553.57257080 368.85610962]
[553.54705811 383.86331177]
[552.38665771 398.82562256]
[550.09796143 413.65731812]
[546.69415283 428.27346802]
[542.19464111 442.59030151]
[536.62524414 456.52584839]
[530.01788330 470.00027466]
[522.41040039 482.93640137]
[513.84631348 495.26013184]
[504.37478638 506.90087891]
[494.04995728 517.79193115]
[482.93103027 527.87097168]
[471.08166504 537.08020020]
[458.56976318 545.36694336]
[445.46697998 552.68365479]
[431.84835815 558.98846436]
[417.79190063 564.24523926]
[403.37817383 568.42388916]
[388.68966675 571.50048828]
[373.81054688 573.45733643]
[358.82604980 574.28332520]
[343.82199097 573.97369385]
[328.88433838 572.53021240]
[314.09863281 569.96112061]
[299.54956055 566.28118896]
[285.32049561 561.51141357]
[271.49288940 555.67919922]
[258.14596558 548.81793213]
[245.35620117 540.96685791]
[233.19682312 532.17102051]
[221.73750305 522.48071289]
[211.04386902 511.95156860]
[201.17716980 500.64379883]
[192.19392395 488.62219238]
[184.14558411 475.95562744]
[177.07826233 462.71667480]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 144]
[16 143]
[17 142]
[18 141]
[19 140]
[20 139]
[22 138]
[23 137]
[24 136]
[37 135]
[38 134]
[39 133]
[41 131]
[42 130]
[43 129]
[44 128]
[46 126]
[47 125]
[60 124]
[61 123]
[62 122]
[63 121]
[64 120]
[65 119]
[66 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
