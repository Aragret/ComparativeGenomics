%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[17.53882790 444.72656250]
[29.46586037 434.80056763]
[28.35021019 419.84210205]
[27.23456192 404.88366699]
[14.03373623 394.46362305]
[12.42185497 377.38391113]
[23.88260269 364.16760254]
[22.54436874 349.22741699]
[21.20613289 334.28723145]
[19.86789894 319.34704590]
[18.52966499 304.40686035]
[8.97915459 315.97354126]
[-5.74853325 318.81875610]
[-18.92009735 311.64172363]
[-24.51367569 297.72366333]
[-19.97196198 283.42776489]
[-7.37136269 275.28988647]
[7.52729511 277.03057861]
[17.91330147 287.85571289]
[18.13662910 272.85736084]
[18.35995674 257.85903931]
[11.51642895 271.20690918]
[2.15859723 282.93002319]
[-9.34081745 292.56140137]
[-22.52379799 299.71743774]
[-36.86527252 304.11312866]
[-51.79402542 305.57339478]
[-66.71544647 304.04006958]
[-81.03523254 299.57418823]
[-94.18301392 292.35369873]
[-105.63513184 282.66613770]
[-114.93545532 270.89733887]
[-121.71354675 257.51611328]
[-125.69944763 243.05538940]
[-126.73439026 228.09114075]
[-124.77716064 213.21937561]
[-119.90570831 199.03244019]
[-112.31407166 186.09539795]
[-102.30461121 174.92353821]
[-90.27600861 165.96179199]
[-76.70735168 159.56713867]
[-62.13908005 155.99426270]
[-47.15143967 155.38548279]
[-32.34138107 157.76501465]
[-18.29878807 163.03811646]
[-5.58296728 170.99475098]
[5.29961300 181.31799316]
[13.91550446 193.59669495]
[19.92153931 207.34178162]
[23.07849884 222.00579834]
[23.26101112 237.00053406]
[29.74050522 223.47219849]
[36.22000122 209.94384766]
[42.69949722 196.41549683]
[35.40483856 186.71173096]
[32.91339874 174.75657654]
[35.75806046 162.80630493]
[43.45868301 153.14297485]
[54.60189056 147.63867188]
[67.10018921 147.39295959]
[73.97959900 134.06353760]
[80.85900879 120.73410034]
[87.73842621 107.40467072]
[87.27133179 93.43064117]
[98.93214417 85.71591187]
[103.75814056 71.51345825]
[106.42394257 56.75224304]
[109.08973694 41.99102402]
[111.75553131 27.22980690]
[113.20494843 12.29999924]
[113.42827606 -2.69833851]
[113.65160370 -17.69667625]
[104.31216431 -33.56665802]
[113.89285278 -48.26962662]
[113.89285278 -63.26962662]
[113.89285278 -78.26962280]
[99.13950348 -81.22436523]
[85.25057220 -86.99887085]
[72.75913239 -95.36948395]
[62.14425278 -106.01293182]
[53.81256104 -118.51882172]
[48.08272171 -132.40547180]
[45.17322159 -147.13845825]
[45.19404602 -162.15116882]
[48.14252090 -176.86660767]
[53.90348816 -190.71958923]
[62.25380707 -203.17839050]
[72.87098694 -213.76524353]
[85.34564209 -222.07455444]
[99.19729614 -227.78854370]
[113.89285278 -230.68933105]
[113.89285278 -245.68933105]
[113.89285278 -260.68933105]
[113.89285278 -275.68933105]
[113.78118896 -290.68890381]
[113.55786133 -305.68725586]
[99.15815735 -310.36990356]
[87.06062317 -319.47640991]
[78.57751465 -332.01895142]
[74.62900543 -346.63702393]
[75.64340973 -361.74496460]
[81.51068878 -375.70394897]
[91.59440613 -386.99987793]
[104.80075073 -394.40737915]
[119.69719696 -397.12298584]
[134.66789246 -394.85211182]
[148.08894348 -387.84106445]
[158.50450134 -376.85040283]
[164.78479004 -363.07229614]
[166.24856567 -348.00125122]
[162.73704529 -333.27209473]
[154.63113403 -320.48254395]
[142.81010437 -311.01989746]
[128.55619812 -305.91058350]
[128.77952576 -290.91223145]
[132.02226257 -284.27096558]
[128.89285278 -275.68933105]
[128.89285278 -260.68933105]
[128.89285278 -245.68933105]
[128.89285278 -230.68933105]
[143.58842468 -227.78854370]
[157.44007874 -222.07455444]
[169.91473389 -213.76524353]
[180.53190613 -203.17839050]
[188.88221741 -190.71958923]
[194.64318848 -176.86660767]
[197.59167480 -162.15116882]
[197.61248779 -147.13845825]
[194.70298767 -132.40547180]
[188.97314453 -118.51882172]
[180.64146423 -106.01293182]
[170.02658081 -95.36948395]
[157.53514099 -86.99887085]
[143.64620972 -81.22436523]
[128.89285278 -78.26962280]
[128.89285278 -63.26962662]
[128.89285278 -48.26962662]
[137.22181702 -39.49722290]
[137.34457397 -27.00047684]
[128.64994812 -17.47334862]
[128.42662048 -2.47501063]
[128.20329285 12.52332687]
[136.84469604 0.26257929]
[150.15180969 -6.65991735]
[165.15176392 -6.69765949]
[178.49353027 0.15778433]
[187.19653320 12.37489033]
[189.31649780 27.22432709]
[184.37982178 41.38869095]
[173.48936462 51.70362473]
[159.07807922 55.86475372]
[144.36549377 52.94246292]
[132.63842773 43.58959961]
[126.51674652 29.89560318]
[123.85095215 44.65682220]
[121.18515778 59.41803741]
[118.51936340 74.17925262]
[127.61544037 62.25192261]
[139.66918945 53.32403183]
[153.72999573 48.09967422]
[168.68894958 46.99086761]
[183.36634827 50.08505630]
[196.60466003 57.13821793]
[207.35986328 67.59410858]
[214.78373718 80.62814331]
[218.29083252 95.21238708]
[217.60455322 110.19667816]
[212.77902222 124.39929199]
[204.19479370 136.70014954]
[192.52885437 146.12915039]
[178.70124817 151.94268799]
[163.80245972 153.68228149]
[149.00747681 151.21073914]
[135.48309326 144.72297668]
[124.29590607 134.73065186]
[116.32816315 122.02178192]
[112.20825195 107.59867096]
[112.26157379 92.59532928]
[112.72866821 106.56935883]
[101.06785583 114.28408813]
[94.18843842 127.61351776]
[87.30902863 140.94294739]
[80.42961884 154.27236938]
[89.05627441 170.22036743]
[86.40602112 187.99832153]
[73.72672272 200.51576233]
[56.22784424 202.89500427]
[49.74834824 216.42333984]
[43.26885223 229.95169067]
[36.78935623 243.48002625]
[33.35829544 258.08236694]
[33.13496780 273.08068848]
[32.91164017 288.07904053]
[33.46984863 303.06863403]
[34.80808640 318.00881958]
[36.14632034 332.94900513]
[37.48455429 347.88919067]
[38.82278824 362.82937622]
[50.08399582 370.21853638]
[54.96213913 382.56414795]
[51.88471603 395.27682495]
[42.19301605 403.76800537]
[43.30866623 418.72647095]
[44.42431259 433.68490601]
[57.69182205 441.73184204]
[63.66454697 456.05334473]
[60.04585266 471.14257812]
[48.22719955 481.19738770]
[32.75310135 482.35150146]
[19.57366753 474.16113281]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 204]
[3 203]
[4 202]
[7 198]
[8 197]
[9 196]
[10 195]
[11 194]
[19 193]
[20 192]
[21 191]
[51 190]
[52 189]
[53 188]
[54 187]
[60 183]
[61 182]
[62 181]
[63 180]
[65 178]
[66 157]
[67 156]
[68 155]
[69 154]
[70 142]
[71 141]
[72 140]
[74 137]
[75 136]
[76 135]
[91 120]
[92 119]
[93 118]
[94 117]
[95 115]
[96 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
