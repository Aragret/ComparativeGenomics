%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[34.28416824 251.96636963]
[41.67963409 265.04269409]
[47.26614761 278.98812866]
[50.94400787 293.55371094]
[52.64758682 308.47958374]
[52.34647751 323.49932861]
[50.04605484 338.34490967]
[45.78737259 352.75140381]
[39.64643097 366.46170044]
[31.73282433 379.23114014]
[22.18777847 390.83178711]
[11.18163586 401.05667114]
[-1.08918583 409.72329712]
[-14.40569878 416.67700195]
[-28.53025436 421.79367065]
[-43.21078491 424.98202515]
[-58.18529510 426.18511963]
[-73.18654633 425.38153076]
[-87.94683075 422.58554077]
[-102.20273590 417.84710693]
[-115.69983673 411.25079346]
[-128.19726562 402.91424561]
[-139.47200012 392.98632812]
[-149.32281494 381.64413452]
[-157.57391357 369.09014893]
[-164.07806396 355.54837036]
[-168.71916199 341.26049805]
[-171.41441345 326.48150635]
[-172.11569214 311.47509766]
[-170.81050110 296.50915527]
[-167.52212524 281.85070801]
[-162.30923462 267.76138306]
[-155.26489258 254.49258423]
[-146.51478577 242.28115845]
[-136.21508789 231.34500122]
[-124.54959106 221.87928772]
[-111.72649384 214.05294800]
[-97.97463226 208.00564575]
[-83.53943634 203.84530640]
[-68.67850494 201.64617920]
[-53.65705109 201.44749451]
[-38.74315643 203.25282288]
[-24.20297623 207.02993774]
[-10.29599190 212.71141052]
[2.72960591 220.19587708]
[11.86840820 208.30125427]
[21.00720978 196.40661621]
[30.14601326 184.51197815]
[39.28481674 172.61735535]
[40.90346146 157.81095886]
[55.44675446 151.58174133]
[64.22735596 139.42028809]
[72.64197540 127.00278473]
[81.05659485 114.58528900]
[89.47121429 102.16779327]
[95.44277191 88.40769196]
[98.76503754 73.78023529]
[102.08729553 59.15277100]
[105.40955353 44.52531052]
[107.52417755 29.67511368]
[108.41699219 14.70170879]
[109.30980682 -0.27169701]
[110.20262909 -15.24510288]
[111.09544373 -30.21850777]
[104.19326019 -44.45474625]
[112.67438507 -56.69892120]
[113.56719971 -71.67232513]
[101.65843964 -62.55194092]
[86.77108765 -64.38683319]
[77.43330383 -76.12590027]
[78.99417877 -91.04447174]
[90.55958557 -100.59650421]
[105.50433350 -99.31016541]
[115.26708221 -87.92323303]
[117.49220276 -102.75727844]
[119.71731567 -117.59132385]
[121.94243622 -132.42536926]
[124.16754913 -147.25941467]
[126.39266968 -162.09344482]
[111.83616638 -165.76426697]
[97.70955658 -170.84422302]
[84.14891052 -177.28436279]
[71.28481293 -185.02270508]
[59.24115753 -193.98469543]
[48.13394165 -204.08401489]
[38.07012939 -215.22343445]
[29.14664459 -227.29563904]
[21.44943047 -240.18438721]
[15.05261326 -253.76553345]
[10.01780128 -267.90829468]
[6.39348459 -282.47644043]
[4.21456718 -297.32968140]
[3.50203395 -312.32498169]
[4.26274681 -327.31793213]
[6.48938036 -342.16409302]
[10.16048908 -356.72052002]
[15.24071884 -370.84704590]
[21.68114090 -384.40756226]
[29.41973114 -397.27148438]
[38.38196182 -409.31497192]
[48.48151398 -420.42199707]
[59.62112808 -430.48556519]
[71.69351196 -439.40881348]
[84.58241272 -447.10577393]
[98.16368103 -453.50231934]
[112.30653381 -458.53686523]
[126.87476349 -462.16088867]
[141.72805786 -464.33950806]
[156.72337341 -465.05172729]
[171.71629333 -464.29071045]
[186.56242371 -462.06378174]
[201.11878967 -458.39239502]
[215.24519348 -453.31188965]
[228.80557251 -446.87118530]
[241.66937256 -439.13232422]
[253.71266174 -430.16986084]
[264.81948853 -420.07009888]
[274.88284302 -408.93026733]
[283.80584717 -396.85769653]
[291.50253296 -383.96865845]
[297.89880371 -370.38726807]
[302.93307495 -356.24429321]
[306.55679321 -341.67599487]
[308.73510742 -326.82266235]
[309.44705200 -311.82733154]
[308.68572998 -296.83444214]
[306.45852661 -281.98834229]
[302.78683472 -267.43206787]
[297.70602417 -253.30575562]
[291.26507568 -239.74549866]
[283.52597046 -226.88186646]
[274.56326294 -214.83874512]
[264.46325684 -203.73213196]
[253.32324219 -193.66899109]
[241.25048828 -184.74623108]
[228.36128235 -177.04978943]
[214.77975464 -170.65379333]
[200.63670349 -165.61982727]
[186.06832886 -161.99638367]
[171.21495056 -159.81835938]
[156.21960449 -159.10671997]
[141.22671509 -159.86833191]
[139.00160217 -145.03428650]
[136.77647400 -130.20024109]
[134.55136108 -115.36620331]
[132.32624817 -100.53215790]
[130.10112000 -85.69811249]
[128.54060364 -70.77951050]
[127.64778900 -55.80610657]
[134.61383057 -42.64086533]
[126.06884766 -29.32569313]
[125.17603302 -14.35228729]
[124.28321838 0.62111884]
[123.39039612 15.59452438]
[122.49758148 30.56793022]
[131.67785645 18.70527077]
[145.28079224 12.38387299]
[160.26747131 13.01595116]
[173.28982544 20.46029854]
[181.43862915 33.05382919]
[182.89341736 47.98311615]
[177.32917786 61.91291809]
[165.98899841 71.73127747]
[151.40629578 75.24475861]
[136.83886719 71.66843414]
[125.54113007 61.80125809]
[120.03701019 47.84757233]
[116.71475220 62.47503281]
[113.39249420 77.10249329]
[110.07023621 91.72994995]
[119.52276611 80.08307648]
[131.37738037 70.89242554]
[145.01220703 64.64012146]
[159.71200562 61.65414429]
[174.70564270 62.09113693]
[189.20657349 65.92816925]
[202.45413208 72.96396637]
[213.75335693 82.82944489]
[222.51150513 95.00707245]
[228.26918030 108.85803986]
[230.72430420 123.65575409]
[229.74810791 138.62394714]
[225.39179993 152.97743225]
[217.88391113 165.96325684]
[207.61827087 176.90019226]
[195.13339233 185.21452332]
[181.08422852 190.47009277]
[166.20776367 192.39118958]
[151.28437805 190.87705994]
[137.09692383 186.00712585]
[124.38965607 178.03684998]
[113.82917023 167.38433838]
[105.96944427 154.60838318]
[101.22278595 140.37922668]
[99.83818817 125.44326019]
[101.88871002 110.58241272]
[93.47409058 122.99990845]
[85.05947113 135.41740417]
[76.64485168 147.83489990]
[76.48704529 152.17414856]
[75.09649658 155.86614990]
[72.82804108 158.60284424]
[70.10012817 160.22306824]
[67.34138489 160.72053528]
[65.06907654 176.37771606]
[51.17944717 181.75614929]
[42.04064560 193.65078735]
[32.90184402 205.54542542]
[23.76304054 217.44004822]
[14.62423897 229.33468628]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 210]
[46 209]
[47 208]
[48 207]
[49 206]
[51 204]
[52 199]
[53 198]
[54 197]
[55 196]
[56 170]
[57 169]
[58 168]
[59 167]
[60 155]
[61 154]
[62 153]
[63 152]
[64 151]
[66 149]
[67 148]
[74 147]
[75 146]
[76 145]
[77 144]
[78 143]
[79 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
