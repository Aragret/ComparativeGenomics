%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[30.75822830 73.87299347]
[37.43447876 60.47027588]
[46.67187881 48.68572617]
[58.09228897 39.00174713]
[71.22821045 31.81475830]
[66.82720947 17.47491074]
[62.42621231 3.13506413]
[58.02521133 -11.20478249]
[53.62421417 -25.54463005]
[49.22321701 -39.88447571]
[44.82221985 -54.22432327]
[40.42121887 -68.56417084]
[25.92515182 -64.70195007]
[11.29480648 -61.38445663]
[-3.44935226 -58.61632919]
[-18.28670502 -56.40143967]
[-33.19649887 -54.74288559]
[-48.15788269 -53.64298630]
[-63.14992905 -53.10327911]
[-78.15167236 -53.12452316]
[-93.14212799 -53.70668411]
[-108.10034180 -54.84894943]
[-123.00537872 -56.54972458]
[-137.83639526 -58.80662537]
[-152.57266235 -61.61649704]
[-167.19354248 -64.97541046]
[-181.67861938 -68.87866974]
[-196.00761414 -73.32081604]
[-210.16049194 -78.29563141]
[-224.11746216 -83.79615784]
[-237.85899353 -89.81471252]
[-251.36587524 -96.34286499]
[-264.61923218 -103.37149811]
[-277.60049438 -110.89076996]
[-290.29153442 -118.89017487]
[-302.67459106 -127.35851288]
[-314.73233032 -136.28395081]
[-326.44790649 -145.65399170]
[-337.80496216 -155.45555115]
[-348.78756714 -165.67491150]
[-359.38037109 -176.29776001]
[-369.56857300 -187.30928040]
[-379.33789062 -198.69403076]
[-388.67471313 -210.43612671]
[-397.56594849 -222.51911926]
[-405.99917603 -234.92610168]
[-413.96258545 -247.63975525]
[-421.44506836 -260.64227295]
[-428.43612671 -273.91546631]
[-434.92596436 -287.44079590]
[-440.90557861 -301.19934082]
[-446.36654663 -315.17181396]
[-451.30123901 -329.33874512]
[-455.70275879 -343.68026733]
[-459.56497192 -358.17633057]
[-462.88244629 -372.80670166]
[-465.65057373 -387.55084229]
[-467.86544800 -402.38821411]
[-469.52395630 -417.29800415]
[-470.62384033 -432.25939941]
[-471.16354370 -447.25143433]
[-471.14227295 -462.25317383]
[-470.56011963 -477.24362183]
[-469.41781616 -492.20184326]
[-467.71704102 -507.10687256]
[-465.46011353 -521.93786621]
[-462.65023804 -536.67413330]
[-459.29129028 -551.29504395]
[-455.38803101 -565.78009033]
[-450.94586182 -580.10906982]
[-445.97103882 -594.26196289]
[-440.47048950 -608.21893311]
[-434.45193481 -621.96044922]
[-427.92373657 -635.46734619]
[-420.89511108 -648.72070312]
[-413.37582397 -661.70190430]
[-405.37640381 -674.39294434]
[-396.90805054 -686.77600098]
[-387.98260498 -698.83374023]
[-378.61254883 -710.54931641]
[-368.81097412 -721.90637207]
[-358.59161377 -732.88891602]
[-347.96871948 -743.48175049]
[-336.95721436 -753.66992188]
[-325.57244873 -763.43927002]
[-313.83035278 -772.77606201]
[-301.74734497 -781.66729736]
[-289.34033203 -790.10046387]
[-276.62667847 -798.06390381]
[-263.62414551 -805.54632568]
[-250.35095215 -812.53735352]
[-236.82562256 -819.02722168]
[-223.06707764 -825.00677490]
[-209.09457397 -830.46777344]
[-194.92765808 -835.40246582]
[-180.58612061 -839.80395508]
[-166.09004211 -843.66613770]
[-151.45970154 -846.98358154]
[-136.71553040 -849.75170898]
[-121.87817383 -851.96655273]
[-106.96837616 -853.62506104]
[-92.00698853 -854.72491455]
[-77.01494598 -855.26458740]
[-62.01319885 -855.24334717]
[-47.02274323 -854.66113281]
[-32.06453705 -853.51885986]
[-17.15950394 -851.81805420]
[-2.32848883 -849.56109619]
[12.40776539 -846.75122070]
[27.02864838 -843.39227295]
[41.51371384 -839.48895264]
[55.84270096 -835.04681396]
[69.99556732 -830.07196045]
[83.95252228 -824.57141113]
[97.69404602 -818.55279541]
[111.20091248 -812.02459717]
[124.45424652 -804.99597168]
[137.43548584 -797.47668457]
[150.12651062 -789.47723389]
[162.50953674 -781.00885010]
[174.56727600 -772.08337402]
[186.28283691 -762.71331787]
[197.63986206 -752.91174316]
[208.62243652 -742.69238281]
[219.21522522 -732.06945801]
[229.40339661 -721.05792236]
[239.17271423 -709.67315674]
[248.50950623 -697.93103027]
[257.40072632 -685.84802246]
[265.83392334 -673.44104004]
[273.79730225 -660.72735596]
[281.27972412 -647.72485352]
[288.27075195 -634.45159912]
[294.76058960 -620.92626953]
[300.74014282 -607.16772461]
[306.20108032 -593.19525146]
[311.13577271 -579.02832031]
[315.53726196 -564.68676758]
[319.39941406 -550.19067383]
[322.71688843 -535.56030273]
[325.48495483 -520.81616211]
[327.69979858 -505.97879028]
[329.35830688 -491.06900024]
[330.45816040 -476.10760498]
[330.99780273 -461.11557007]
[330.97650146 -446.11383057]
[330.39431763 -431.12338257]
[329.25198364 -416.16516113]
[327.55117798 -401.26013184]
[325.29421997 -386.42910767]
[322.48428345 -371.69287109]
[319.12533569 -357.07199097]
[315.22201538 -342.58691406]
[310.77984619 -328.25793457]
[305.80496216 -314.10507202]
[300.30441284 -300.14813232]
[294.28579712 -286.40661621]
[287.75759888 -272.89974976]
[280.72891235 -259.64642334]
[273.20962524 -246.66519165]
[265.21017456 -233.97418213]
[256.74179077 -221.59115601]
[247.81631470 -209.53344727]
[238.44622803 -197.81788635]
[228.64463806 -186.46087646]
[218.42524719 -175.47831726]
[207.80235291 -164.88554382]
[196.79080200 -154.69737244]
[185.40600586 -144.92807007]
[173.66389465 -135.59129333]
[161.58087158 -126.70009613]
[149.17385864 -118.26691437]
[136.46017456 -110.30354309]
[123.45763397 -102.82112122]
[110.18441010 -95.83010864]
[96.65906525 -89.34029388]
[82.90051270 -83.36074066]
[68.92800140 -77.89981842]
[54.76106644 -72.96517181]
[59.16206741 -58.62532425]
[63.56306458 -44.28547668]
[67.96406555 -29.94562721]
[72.36505890 -15.60578060]
[76.76605988 -1.26593387]
[81.16705322 13.07391357]
[85.56805420 27.41376114]
[100.47412109 25.99447060]
[115.36077881 27.60462952]
[129.61863708 32.17832565]
[142.66403198 39.52832794]
[153.96296692 49.35376740]
[163.05290222 61.25243378]
[169.56175232 74.73725128]
[173.22303772 89.25620270]
[173.88691711 104.21496582]
[171.52621460 119.00118256]
[166.23753357 133.00956726]
[158.23739624 145.66670227]
[147.85330200 156.45445251]
[135.51028442 164.93121338]
[121.71366119 170.74998474]
[107.02816772 173.67257690]
[92.05497742 173.57934570]
[77.40701294 170.47410583]
[63.68391037 164.48399353]
[51.44742203 155.85418701]
[41.19845200 144.93797302]
[33.35654831 132.18218994]
[28.24272728 118.10903168]
[26.06632042 103.29456329]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 186]
[6 185]
[7 184]
[8 183]
[9 182]
[10 181]
[11 180]
[12 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
