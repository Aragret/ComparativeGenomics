%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[45.69675827 739.65942383]
[30.76473236 741.11688232]
[15.77945328 741.84558105]
[0.77646583 741.84387207]
[-14.20864487 741.11169434]
[-29.14033508 739.65081787]
[-43.98318863 737.46459961]
[-58.70200348 734.55841064]
[-73.26186371 730.93896484]
[-87.62823486 726.61499023]
[-101.76703644 721.59661865]
[-115.64474487 715.89587402]
[-129.22843933 709.52618408]
[-142.48590088 702.50268555]
[-155.38566589 694.84204102]
[-167.89717102 686.56243896]
[-179.99072266 677.68347168]
[-191.63761902 668.22625732]
[-202.81027222 658.21313477]
[-213.48214722 647.66796875]
[-223.62796021 636.61572266]
[-233.22361755 625.08264160]
[-242.24638367 613.09600830]
[-250.67485046 600.68426514]
[-258.48901367 587.87689209]
[-265.67034912 574.70428467]
[-272.20184326 561.19763184]
[-278.06796265 547.38903809]
[-283.25482178 533.31115723]
[-287.75012207 518.99743652]
[-291.54318237 504.48187256]
[-294.62500000 489.79882812]
[-296.98828125 474.98312378]
[-298.62744141 460.06994629]
[-299.53854370 445.09466553]
[-299.71948242 430.09277344]
[-299.16976929 415.09985352]
[-297.89074707 400.15148926]
[-295.88543701 385.28311157]
[-293.15859985 370.52999878]
[-289.71670532 355.92718506]
[-285.56793213 341.50921631]
[-280.72207642 327.31036377]
[-275.19067383 313.36428833]
[-268.98681641 299.70407104]
[-262.12524414 286.36209106]
[-254.62222290 273.36999512]
[-246.49552917 260.75863647]
[-237.76446533 248.55789185]
[-228.44973755 236.79670715]
[-218.57341003 225.50299072]
[-208.15895081 214.70353699]
[-197.23103333 204.42391968]
[-185.81558228 194.68856812]
[-173.93968201 185.52055359]
[-161.63150024 176.94160461]
[-148.92021179 168.97210693]
[-135.83599854 161.63093567]
[-122.40986633 154.93550110]
[-108.67367554 148.90170288]
[-94.66000366 143.54385376]
[-80.40209198 138.87463379]
[-65.93375397 134.90515137]
[-51.28931046 131.64479065]
[-36.50349426 129.10131836]
[-21.61137772 127.28073883]
[-6.64828300 126.18737793]
[8.35029984 125.82383728]
[23.34879494 126.19097900]
[38.31162643 127.28791809]
[53.20330811 129.11206055]
[67.98851013 131.65908813]
[82.63217163 134.92295837]
[86.60427094 120.45843506]
[90.57636261 105.99390411]
[94.44067383 91.50021362]
[98.19697571 76.97815704]
[101.95326996 62.45609665]
[105.70957184 47.93403625]
[109.46587372 33.41197586]
[113.22217560 18.88991737]
[112.34149170 9.79804134]
[117.14401245 4.18042946]
[121.11611176 -10.28409481]
[125.08821106 -24.74861908]
[129.06030273 -39.21314240]
[115.09588623 -44.73059464]
[101.80988312 -51.72554779]
[89.35807037 -60.11598969]
[77.88642883 -69.80354309]
[67.52946472 -80.67462921]
[58.40860748 -92.60179138]
[50.63079453 -105.44519043]
[44.28721619 -119.05424500]
[39.45224762 -133.26937866]
[36.18257523 -147.92396545]
[34.51653671 -162.84614563]
[34.47366714 -177.86097717]
[36.05446243 -192.79243469]
[39.24039078 -207.46543884]
[43.99410629 -221.70796204]
[50.25986481 -235.35301208]
[57.96420670 -248.24061584]
[67.01679993 -260.21966553]
[77.31151581 -271.14971924]
[88.72764587 -280.90264893]
[101.13134766 -289.36404419]
[114.37718964 -296.43475342]
[128.30987549 -302.03186035]
[142.76603699 -306.08975220]
[157.57620239 -308.56082153]
[172.56672668 -309.41613770]
[187.56184387 -308.64562988]
[202.38574219 -306.25839233]
[216.86463928 -302.28234863]
[230.82876587 -296.76412964]
[244.11439514 -289.76846313]
[256.56576538 -281.37734985]
[268.03686523 -271.68917847]
[278.39324951 -260.81753540]
[287.51345825 -248.88989258]
[295.29058838 -236.04606628]
[301.63342285 -222.43667603]
[306.46765137 -208.22126770]
[309.73651123 -193.56652832]
[311.40176392 -178.64425659]
[311.44381714 -163.62940979]
[309.86221313 -148.69804382]
[306.67550659 -134.02520752]
[301.92102051 -119.78294373]
[295.65454102 -106.13822174]
[287.94949341 -93.25103760]
[278.89624023 -81.27246857]
[268.60095215 -70.34296417]
[257.18429565 -60.59067535]
[244.78013611 -52.12992859]
[231.53392029 -45.05993271]
[217.60093689 -39.46357346]
[203.14454651 -35.40646744]
[188.33424377 -32.93618393]
[173.34368896 -32.08168411]
[158.34860229 -32.85298538]
[143.52482605 -35.24104691]
[139.55273438 -20.77652168]
[135.58064270 -6.31199837]
[131.60853577 8.15252590]
[127.74423218 22.64621925]
[123.98793030 37.16827774]
[120.23163605 51.69033813]
[116.47533417 66.21239471]
[112.71903229 80.73445892]
[108.96273041 95.25651550]
[110.15348816 103.22863007]
[105.04089355 109.96600342]
[101.06879425 124.43052673]
[97.09669495 138.89505005]
[111.35353851 143.56753540]
[125.36597443 148.92861938]
[139.10078430 154.96557617]
[152.52536011 161.66409302]
[165.60789490 169.00827026]
[178.31733704 176.98071289]
[190.62355042 185.56246948]
[202.49734497 194.73323059]
[213.91055298 204.47120667]
[224.83610535 214.75332642]
[235.24809265 225.55519104]
[245.12181091 236.85118103]
[254.43383789 248.61450195]
[263.16210938 260.81726074]
[271.28588867 273.43048096]
[278.78591919 286.42428589]
[285.64443970 299.76785278]
[291.84515381 313.42950439]
[297.37335205 327.37686157]
[302.21591187 341.57681274]
[306.36138916 355.99572754]
[309.79992676 370.59936523]
[312.52337646 385.35308838]
[314.52523804 400.22192383]
[315.80084229 415.17059326]
[316.34707642 430.16360474]
[316.16271973 445.16546631]
[315.24816895 460.14056396]
[313.60559082 475.05334473]
[311.23889160 489.86849976]
[308.15368652 504.55084229]
[304.35726929 519.06555176]
[299.85870361 533.37823486]
[294.66860962 547.45489502]
[288.79928589 561.26214600]
[282.26470947 574.76733398]
[275.08035278 587.93829346]
[267.26321411 600.74383545]
[258.83190918 613.15362549]
[249.80639648 625.13818359]
[240.20806885 636.66906738]
[230.05972290 647.71899414]
[219.38542175 658.26171875]
[208.21047974 668.27221680]
[196.56138611 677.72674561]
[184.46580505 686.60296631]
[171.95239258 694.87969971]
[159.05085754 702.53735352]
[145.79179382 709.55780029]
[132.20663452 715.92437744]
[118.32761383 721.62194824]
[104.18765259 726.63702393]
[89.82028961 730.95776367]
[75.25959778 734.57379150]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 156]
[74 155]
[75 154]
[76 152]
[77 151]
[78 150]
[79 149]
[80 148]
[81 147]
[83 146]
[84 145]
[85 144]
[86 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
