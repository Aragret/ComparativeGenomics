%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[3.30929780 880.61712646]
[-11.68114567 881.20690918]
[-26.68317986 881.19256592]
[-41.67247009 880.57421875]
[-56.62470245 879.35278320]
[-71.51563263 877.53027344]
[-86.32109833 875.10961914]
[-101.01708221 872.09478760]
[-115.57975769 868.49066162]
[-129.98550415 864.30310059]
[-144.21093750 859.53887939]
[-158.23300171 854.20568848]
[-172.02896118 848.31219482]
[-185.57641602 841.86804199]
[-198.85339355 834.88354492]
[-211.83837891 827.37011719]
[-224.51029968 819.33996582]
[-236.84858704 810.80603027]
[-248.83325195 801.78222656]
[-260.44485474 792.28314209]
[-271.66452026 782.32427979]
[-282.47412109 771.92163086]
[-292.85604858 761.09222412]
[-302.79351807 749.85351562]
[-312.27038574 738.22381592]
[-321.27130127 726.22192383]
[-329.78161621 713.86737061]
[-337.78759766 701.18017578]
[-345.27618408 688.18084717]
[-352.23529053 674.89056396]
[-358.65362549 661.33081055]
[-364.52072144 647.52362061]
[-369.82711792 633.49139404]
[-374.56417847 619.25689697]
[-378.72424316 604.84320068]
[-382.30056763 590.27362061]
[-385.28732300 575.57189941]
[-387.67965698 560.76184082]
[-389.47372437 545.86749268]
[-390.66659546 530.91296387]
[-391.25634766 515.92248535]
[-391.24200439 500.92047119]
[-390.62362671 485.93118286]
[-389.40216064 470.97894287]
[-387.57965088 456.08801270]
[-385.15899658 441.28256226]
[-382.14416504 426.58657837]
[-378.54000854 412.02389526]
[-374.35241699 397.61816406]
[-369.58813477 383.39273071]
[-364.25494385 369.37066650]
[-358.36145020 355.57473755]
[-351.91723633 342.02728271]
[-344.93273926 328.75030518]
[-337.41931152 315.76535034]
[-329.38909912 303.09344482]
[-320.85516357 290.75515747]
[-311.83135986 278.77050781]
[-302.33227539 267.15893555]
[-292.37335205 255.93925476]
[-281.97073364 245.12968445]
[-271.14129639 234.74775696]
[-259.90258789 224.81031799]
[-248.27287292 215.33346558]
[-236.27098083 206.33258057]
[-223.91639709 197.82225037]
[-211.22915649 189.81631470]
[-198.22984314 182.32771301]
[-184.93954468 175.36863708]
[-171.37979126 168.95033264]
[-157.57260132 163.08323669]
[-143.54037476 157.77687073]
[-129.30584717 153.03981018]
[-114.89213562 148.87977600]
[-100.32259369 145.30348206]
[-85.62087250 142.31675720]
[-70.81080627 139.92442322]
[-55.91642761 138.13038635]
[-40.96188736 136.93753052]
[-25.97144127 136.34780884]
[-10.96940804 136.36215210]
[4.01988077 136.98057556]
[18.97211266 138.20204163]
[33.86303329 140.02459717]
[48.66849136 142.44526672]
[63.36447144 145.46012878]
[77.92713928 149.06428528]
[82.11415100 134.66050720]
[86.30116272 120.25672150]
[90.48816681 105.85293579]
[94.56784058 91.41838837]
[98.53993225 76.95386505]
[102.51203156 62.48933792]
[106.48412323 48.02481461]
[110.45622253 33.56029129]
[114.42832184 19.09576607]
[100.78198242 12.78487492]
[88.36058807 4.31381655]
[77.50299835 -6.08631229]
[68.50542450 -18.13178825]
[61.61331940 -31.49400139]
[57.01470566 -45.80842209]
[54.83504105 -60.68453979]
[55.13378143 -75.71652985]
[57.90278244 -90.49429321]
[63.06650543 -104.61470032]
[70.48406982 -117.69252777]
[79.95313263 -129.37100220]
[91.21536255 -139.33152771]
[103.96351624 -147.30236816]
[117.84982300 -153.06608582]
[132.49545288 -156.46543884]
[147.50085449 -157.40766907]
[162.45666504 -155.86709595]
[176.95489502 -151.88575745]
[190.60002136 -145.57223511]
[203.01977539 -137.09878540]
[213.87536621 -126.69655609]
[222.87062073 -114.64934540]
[229.76014709 -101.28580475]
[234.35600281 -86.97050476]
[236.53280640 -72.09396362]
[236.23117065 -57.06203461]
[233.45932007 -42.28479767]
[228.29287720 -28.16538811]
[220.87278748 -15.08899117]
[211.40147400 -3.41234136]
[200.13732910 6.54601336]
[187.38763428 14.51440144]
[173.50022888 20.27544022]
[158.85394287 23.67196465]
[143.84835815 24.61131477]
[128.89283752 23.06786346]
[124.92074585 37.53238678]
[120.94864655 51.99691010]
[116.97655487 66.46143341]
[113.00445557 80.92595673]
[109.03236389 95.39048004]
[110.10429382 103.37944031]
[104.89195251 110.03994751]
[100.70494080 124.44373322]
[96.51792908 138.84751892]
[92.33091736 153.25129700]
[106.55637360 158.01550293]
[120.57845306 163.34864807]
[134.37442017 169.24208069]
[147.92189026 175.68624878]
[161.19889832 182.67068481]
[174.18389893 190.18406677]
[186.85583496 198.21420288]
[199.19415283 206.74809265]
[211.17884827 215.77186584]
[222.79046631 225.27088928]
[234.01017761 235.22976685]
[244.81977844 245.63233948]
[255.20175171 256.46173096]
[265.13925171 267.70040894]
[274.61614990 279.33007812]
[283.61709595 291.33193970]
[292.12744141 303.68649292]
[300.13345337 316.37368774]
[307.62210083 329.37298584]
[314.58123779 342.66323853]
[320.99960327 356.22296143]
[326.86672974 370.03012085]
[332.17318726 384.06234741]
[336.91027832 398.29684448]
[341.07037354 412.71054077]
[344.64672852 427.28005981]
[347.63351440 441.98178101]
[350.02590942 456.79183960]
[351.82000732 471.68621826]
[353.01293945 486.64074707]
[353.60272217 501.63119507]
[353.58843994 516.63323975]
[352.97006226 531.62249756]
[351.74865723 546.57476807]
[349.92617798 561.46569824]
[347.50555420 576.27111816]
[344.49075317 590.96716309]
[340.88665771 605.52984619]
[336.69909668 619.93554688]
[331.93487549 634.16101074]
[326.60171509 648.18310547]
[320.70825195 661.97906494]
[314.26406860 675.52648926]
[307.27963257 688.80352783]
[299.76623535 701.78851318]
[291.73605347 714.46044922]
[283.20217896 726.79870605]
[274.17837524 738.78338623]
[264.67932129 750.39501953]
[254.72044373 761.61468506]
[244.31784058 772.42431641]
[233.48843384 782.80627441]
[222.24977112 792.74371338]
[210.62007141 802.22064209]
[198.61820984 811.22155762]
[186.26364136 819.73187256]
[173.57643127 827.73785400]
[160.57713318 835.22650146]
[147.28684998 842.18560791]
[133.72711182 848.60394287]
[119.91994476 854.47106934]
[105.88772583 859.77752686]
[91.65322113 864.51458740]
[77.23950958 868.67468262]
[62.66998672 872.25097656]
[47.96826935 875.23779297]
[33.15821457 877.63012695]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[87 143]
[88 142]
[89 141]
[90 140]
[91 138]
[92 137]
[93 136]
[94 135]
[95 134]
[96 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
