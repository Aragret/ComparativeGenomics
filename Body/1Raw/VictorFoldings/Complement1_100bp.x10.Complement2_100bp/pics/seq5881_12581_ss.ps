%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[147.00469971 793.58068848]
[137.77618408 781.74139404]
[129.69686890 769.08990479]
[122.83776855 755.73748779]
[117.25916290 741.80145264]
[113.01007843 727.40423584]
[110.12785339 712.67236328]
[108.63782501 697.73535156]
[108.55307770 682.72448730]
[109.87436676 667.77160645]
[112.59007263 653.00811768]
[116.67633820 638.56384277]
[122.09723663 624.56573486]
[128.80514526 611.13671875]
[136.74110413 598.39483643]
[145.83537292 586.45208740]
[156.00802612 575.41345215]
[167.16966248 565.37591553]
[179.22219849 556.42767334]
[192.05970764 548.64739990]
[205.56936646 542.10345459]
[200.32264709 528.05096436]
[195.07592773 513.99847412]
[189.82920837 499.94601440]
[184.58248901 485.89355469]
[177.38674927 499.05490112]
[163.03149414 503.40539551]
[149.74006653 496.45285034]
[145.12640381 482.17999268]
[151.83341980 468.76300049]
[166.01902771 463.88769531]
[179.55642700 470.34619141]
[175.58433533 455.88168335]
[171.61224365 441.41714478]
[167.64013672 426.95263672]
[157.28552246 420.69894409]
[153.85792542 408.68081665]
[159.71932983 397.19140625]
[155.96302795 382.66934204]
[151.99093628 368.20483398]
[147.80392456 353.80102539]
[136.82154846 343.73937988]
[140.39921570 328.32800293]
[132.24450684 340.91772461]
[117.60543823 344.18844604]
[104.86793518 336.26657104]
[101.32861328 321.69012451]
[109.01495361 308.80911255]
[123.52388000 305.00241089]
[136.54342651 312.44989014]
[133.65815735 297.73001099]
[130.77288818 283.01010132]
[127.88761139 268.29022217]
[115.65769196 255.70466614]
[121.77011108 238.33459473]
[118.66600037 223.65928650]
[115.56188965 208.98397827]
[112.45778656 194.30868530]
[109.35367584 179.63337708]
[106.24956512 164.95806885]
[103.14545441 150.28277588]
[100.04134369 135.60746765]
[96.93723297 120.93216705]
[93.83312225 106.25686646]
[91.42871857 104.38381195]
[89.65269470 101.59449768]
[88.84574890 98.11997986]
[89.25841522 94.31393433]
[91.00858307 90.61665344]
[88.78347015 75.78261566]
[86.55834961 60.94857025]
[79.08897400 73.95658112]
[65.82201385 80.95570374]
[50.86837769 79.77718353]
[38.86162186 70.78620148]
[33.52216721 56.76870346]
[36.50449753 42.06816864]
[46.88451004 31.23971939]
[61.44584274 27.63866425]
[75.67650604 32.38083267]
[85.16708374 43.99704742]
[84.94375610 28.99870872]
[84.72042847 14.00037098]
[84.49710083 -0.99796623]
[84.27377319 -15.99630356]
[84.05044556 -30.99464035]
[80.99326324 -36.85682297]
[81.30824280 -42.53113556]
[84.05044556 -46.44129562]
[84.27377319 -61.43963242]
[76.74279022 -75.35346985]
[84.66872406 -87.96413422]
[77.13774872 -101.87797546]
[85.06368256 -114.48863983]
[74.33609009 -125.78273773]
[74.77622986 -140.99000549]
[85.60953522 -151.14752197]
[85.83286285 -166.14585876]
[85.94453430 -181.14544678]
[85.94453430 -196.14544678]
[72.60340118 -203.75529480]
[64.86843109 -217.02427673]
[64.82028961 -232.38308716]
[72.47192383 -245.70030212]
[85.76508331 -253.39363098]
[101.12397766 -253.39363098]
[114.41713715 -245.70030212]
[122.06877136 -232.38308716]
[122.02062988 -217.02427673]
[114.28565979 -203.75529480]
[100.94453430 -196.14544678]
[100.94453430 -181.14544678]
[104.08802795 -174.45663452]
[100.83119965 -165.92253113]
[100.60787201 -150.92419434]
[111.13394928 -140.44862366]
[111.12111664 -125.23500061]
[100.06201935 -114.26531219]
[107.60897064 -101.42425537]
[99.66706085 -87.74080658]
[107.21401215 -74.89974976]
[99.27210999 -61.21630478]
[99.04878235 -46.21796799]
[99.04878235 -31.21796799]
[99.27210999 -16.21963120]
[99.49543762 -1.22129393]
[99.71876526 13.77704334]
[99.94209290 28.77538109]
[100.16542053 43.77371979]
[101.39239502 58.72345352]
[103.61751556 73.55749512]
[105.84262848 88.39154053]
[108.50842285 103.15275574]
[111.61253357 117.82805634]
[114.71664429 132.50335693]
[117.82075500 147.17866516]
[120.92486572 161.85397339]
[124.02897644 176.52926636]
[127.13308716 191.20457458]
[130.23719788 205.87986755]
[133.34130859 220.55517578]
[136.44541931 235.23048401]
[146.81024170 242.90727234]
[149.09353638 255.19427490]
[142.60749817 265.40493774]
[145.49278259 280.12484741]
[148.37805176 294.84472656]
[151.26332092 309.56460571]
[154.80299377 324.14099121]
[166.08485413 335.23287964]
[162.20770264 349.61401367]
[166.39471436 364.01782227]
[170.89511108 368.86117554]
[172.09396362 374.41632080]
[170.48509216 378.91305542]
[174.24139404 393.43508911]
[187.44990540 406.26541138]
[182.10466003 422.98052979]
[186.07676697 437.44506836]
[190.04885864 451.90957642]
[194.02095032 466.37411499]
[198.63496399 480.64685059]
[203.88168335 494.69931030]
[209.12840271 508.75177002]
[214.37512207 522.80426025]
[219.62184143 536.85675049]
[234.11450195 532.94555664]
[248.90972900 530.40869141]
[263.87750244 529.26849365]
[278.88629150 529.53485107]
[293.80416870 531.20556641]
[308.50006104 534.26586914]
[322.84478760 538.68884277]
[336.71231079 544.43566895]
[349.98077393 551.45587158]
[362.53350830 559.68768311]
[374.26025391 569.05883789]
[385.05792236 579.48687744]
[394.83166504 590.88024902]
[403.49551392 603.13879395]
[410.97341919 616.15478516]
[417.19958496 629.81384277]
[422.11932373 643.99584961]
[425.68939209 658.57629395]
[427.87844849 673.42700195]
[428.66723633 688.41735840]
[428.04879761 703.41577148]
[426.02859497 718.29034424]
[422.62438965 732.91040039]
[417.86605835 747.14746094]
[411.79547119 760.87634277]
[404.46594238 773.97644043]
[395.94189453 786.33258057]
[386.29821777 797.83624268]
[375.61972046 808.38635254]
[364.00018311 817.89007568]
[351.54174805 826.26397705]
[338.35394287 833.43444824]
[324.55258179 839.33843994]
[310.25903320 843.92413330]
[295.59884644 847.15118408]
[280.70089722 848.99121094]
[265.69610596 849.42810059]
[250.71635437 848.45794678]
[235.89324951 846.08935547]
[221.35710144 842.34307861]
[207.23562622 837.25207520]
[193.65293884 830.86108398]
[180.72839355 823.22619629]
[168.57560730 814.41461182]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 166]
[22 165]
[23 164]
[24 163]
[25 162]
[32 161]
[33 160]
[34 159]
[35 158]
[38 156]
[39 155]
[40 152]
[41 151]
[43 149]
[50 148]
[51 147]
[52 146]
[53 145]
[55 142]
[56 141]
[57 140]
[58 139]
[59 138]
[60 137]
[61 136]
[62 135]
[63 134]
[64 133]
[69 132]
[70 131]
[71 130]
[81 129]
[82 128]
[83 127]
[84 126]
[85 125]
[86 124]
[89 123]
[90 122]
[92 120]
[94 118]
[97 115]
[98 114]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
