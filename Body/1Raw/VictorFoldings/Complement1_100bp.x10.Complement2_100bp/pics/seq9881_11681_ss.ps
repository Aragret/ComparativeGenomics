%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[40.17803955 350.47894287]
[43.05965805 365.22604370]
[43.81313324 380.23315430]
[42.42312241 395.19473267]
[38.91792679 409.80618286]
[33.36890030 423.77001953]
[25.88901901 436.80200195]
[16.63056564 448.63674927]
[5.78202629 459.03338623]
[-6.43573427 467.78021240]
[-19.77397919 474.69918823]
[-33.96115875 479.64941406]
[-48.70843887 482.53012085]
[-63.71558380 483.28265381]
[-78.67707062 481.89172363]
[-93.28829956 478.38562012]
[-107.25180054 472.83572388]
[-120.28330994 465.35504150]
[-132.11750793 456.09585571]
[-142.51345825 445.24667358]
[-151.25953674 433.02838135]
[-158.17767334 419.68969727]
[-163.12702942 405.50222778]
[-166.00682068 390.75476074]
[-166.75843811 375.74755859]
[-165.36657715 360.78616333]
[-161.85957336 346.17517090]
[-156.30880737 332.21200562]
[-148.82731628 319.18096924]
[-139.56739807 307.34732056]
[-128.71757507 296.95202637]
[-116.49873352 288.20672607]
[-103.15962982 281.28939819]
[-88.97183990 276.34094238]
[-74.22420502 273.46206665]
[-59.21696472 272.71136475]
[-44.25564957 274.10415649]
[-29.64485550 277.61206055]
[-15.68203735 283.16369629]
[-8.21429634 270.15472412]
[-8.58830929 255.26483154]
[4.99237633 247.14845276]
[12.46011734 234.13949585]
[19.92785835 221.13055420]
[11.53097916 210.08697510]
[7.96622133 196.63465881]
[9.80370522 182.79620361]
[16.79873657 170.66525269]
[27.92381859 162.08981323]
[41.51945114 158.39076233]
[55.54164886 160.15841675]
[63.20224762 147.26210022]
[70.86284637 134.36576843]
[78.52343750 121.46943665]
[86.18403625 108.57311249]
[83.99480438 97.13420868]
[90.01712799 87.16561890]
[101.16123199 83.78178406]
[109.01298523 71.00093842]
[116.86473846 58.22009659]
[124.71649170 45.43925476]
[124.79176331 27.02524185]
[140.53771973 19.27721214]
[148.19831848 6.38088560]
[145.77697754 -6.28797150]
[152.42300415 -16.87164307]
[164.11166382 -19.98642731]
[171.96340942 -32.76726913]
[179.81517029 -45.54811096]
[187.66693115 -58.32895279]
[195.51867676 -71.10979462]
[197.34431458 -80.05992889]
[203.58367920 -84.02124786]
[211.62486267 -96.68377686]
[219.66603088 -109.34629822]
[207.52928162 -118.16949463]
[195.97050476 -127.73735809]
[185.03529358 -138.01213074]
[174.76683044 -148.95324707]
[165.20562744 -160.51754761]
[156.38941956 -172.65937805]
[148.35301208 -185.33081055]
[141.12811279 -198.48187256]
[134.74322510 -212.06063843]
[129.22355652 -226.01350403]
[124.59090424 -240.28543091]
[120.86352539 -254.82009888]
[118.05615234 -269.56011963]
[116.17984772 -284.44732666]
[115.24202728 -299.42297363]
[115.24639130 -314.42794800]
[116.19291687 -329.40304565]
[118.07787323 -344.28915405]
[120.89382172 -359.02752686]
[124.62964630 -373.56002808]
[129.27059937 -387.82925415]
[134.79837036 -401.77893066]
[141.19114685 -415.35397339]
[148.42370605 -428.50082397]
[156.46748352 -441.16760254]
[165.29074097 -453.30429077]
[174.85865784 -464.86303711]
[185.13348389 -475.79818726]
[196.07466125 -486.06658936]
[207.63900757 -495.62771606]
[219.78088379 -504.44387817]
[232.45236206 -512.48022461]
[245.60345459 -519.70501709]
[259.18225098 -526.08984375]
[273.13516235 -531.60943604]
[287.40710449 -536.24206543]
[301.94177246 -539.96936035]
[316.68182373 -542.77661133]
[331.56903076 -544.65283203]
[346.54467773 -545.59057617]
[361.54965210 -545.58618164]
[376.52474976 -544.63958740]
[391.41085815 -542.75451660]
[406.14923096 -539.93847656]
[420.68170166 -536.20257568]
[434.95089722 -531.56158447]
[448.90054321 -526.03369141]
[462.47555542 -519.64086914]
[475.62237549 -512.40826416]
[488.28909302 -504.36441040]
[500.42575073 -495.54107666]
[511.98443604 -485.97311401]
[522.91955566 -475.69821167]
[533.18786621 -464.75698853]
[542.74896240 -453.19259644]
[551.56506348 -441.05068970]
[559.60131836 -428.37915039]
[566.82611084 -415.22802734]
[573.21081543 -401.64920044]
[578.73034668 -387.69625854]
[583.36285400 -373.42428589]
[587.09008789 -358.88958740]
[589.89733887 -344.14953613]
[591.77343750 -329.26232910]
[592.71112061 -314.28665161]
[592.70660400 -299.28167725]
[591.75994873 -284.30657959]
[589.87481689 -269.42050171]
[587.05871582 -254.68214417]
[583.32275391 -240.14970398]
[578.68164062 -225.88050842]
[573.15368652 -211.93090820]
[566.76080322 -198.35592651]
[559.52807617 -185.20915222]
[551.48419189 -172.54246521]
[542.66082764 -160.40585327]
[533.09277344 -148.84721375]
[522.81781006 -137.91217041]
[511.87655640 -127.64388275]
[500.31210327 -118.08286285]
[488.17013550 -109.26684570]
[475.49856567 -101.23063660]
[462.34738159 -94.00593567]
[448.76852417 -87.62126923]
[434.81555176 -82.10182190]
[420.54357910 -77.46938324]
[406.00885010 -73.74223328]
[391.26879883 -70.93508911]
[376.38156128 -69.05902100]
[361.40588379 -68.12143707]
[346.40090942 -68.12602997]
[331.42584229 -69.07279205]
[316.53973389 -70.95797729]
[301.80139160 -73.77416229]
[287.26898193 -77.51020813]
[272.99981689 -82.15139008]
[259.05023193 -87.67938232]
[245.47529602 -94.07237244]
[232.32855225 -101.30513000]
[224.28738403 -88.64260101]
[216.24621582 -75.98007965]
[208.29953003 -63.25804138]
[200.44776917 -50.47719955]
[192.59600830 -37.69635773]
[184.74426270 -24.91551399]
[176.89250183 -12.13467121]
[177.35951233 5.40810013]
[161.09463501 14.04148293]
[153.43405151 26.93780899]
[156.11479187 38.73358154]
[149.83816528 49.54041672]
[137.49734497 53.29100800]
[129.64558411 66.07185364]
[121.79382324 78.85269165]
[113.94207001 91.63353729]
[113.91718292 108.40779114]
[99.08036804 116.23371124]
[91.41976929 129.13003540]
[83.75917053 142.02636719]
[76.09857178 154.92268372]
[68.43797302 167.81901550]
[77.54469299 181.30239868]
[79.85147095 197.34989929]
[74.94670105 212.74157715]
[63.86069870 224.41137695]
[48.84970093 230.05792236]
[32.93680954 228.59828186]
[25.46907043 241.60723877]
[18.00132942 254.61619568]
[17.84119987 270.43658447]
[4.79465628 277.62246704]
[-2.67308521 290.63143921]
[9.16225815 299.88916016]
[19.55956268 310.73706055]
[28.30715179 322.95425415]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 207]
[40 206]
[42 204]
[43 203]
[44 202]
[51 196]
[52 195]
[53 194]
[54 193]
[55 192]
[58 190]
[59 189]
[60 188]
[61 187]
[63 184]
[64 183]
[67 181]
[68 180]
[69 179]
[70 178]
[71 177]
[73 176]
[74 175]
[75 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
