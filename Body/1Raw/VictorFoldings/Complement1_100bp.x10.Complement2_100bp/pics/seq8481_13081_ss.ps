%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[117.34573364 919.21820068]
[102.43565369 917.55700684]
[87.61084747 915.25592041]
[72.89875793 912.31915283]
[58.32664490 908.75219727]
[43.92148209 904.56158447]
[29.70994568 899.75512695]
[15.71835136 894.34167480]
[1.97261131 888.33129883]
[-11.50182247 881.73510742]
[-24.67999840 874.56536865]
[-37.53750992 866.83526611]
[-50.05055618 858.55920410]
[-62.19595718 849.75244141]
[-73.95122528 840.43127441]
[-85.29459381 830.61303711]
[-96.20505524 820.31585693]
[-106.66240692 809.55883789]
[-116.64728546 798.36187744]
[-126.14120483 786.74572754]
[-135.12657166 774.73181152]
[-143.58676147 762.34252930]
[-151.50608826 749.60070801]
[-158.86991882 736.52996826]
[-165.66459656 723.15454102]
[-171.87753296 709.49914551]
[-177.49722290 695.58911133]
[-182.51329041 681.45019531]
[-186.91641235 667.10858154]
[-190.69844055 652.59075928]
[-193.85238647 637.92370605]
[-196.37240601 623.13458252]
[-198.25382996 608.25067139]
[-199.49316406 593.29962158]
[-200.08813477 578.30908203]
[-200.03761292 563.30682373]
[-199.34172058 548.32067871]
[-198.00172424 533.37829590]
[-196.02011108 518.50738525]
[-193.40055847 503.73553467]
[-190.14791870 489.09005737]
[-186.26820374 474.59808350]
[-181.76860046 460.28640747]
[-176.65744019 446.18161011]
[-170.94419861 432.30972290]
[-164.63943481 418.69650269]
[-157.75485229 405.36712646]
[-150.30317688 392.34628296]
[-142.29820251 379.65808105]
[-133.75477600 367.32601929]
[-124.68871307 355.37292480]
[-115.11678314 343.82095337]
[-105.05673218 332.69146729]
[-94.52717590 322.00509644]
[-83.54761505 311.78164673]
[-72.13838959 302.04000854]
[-60.32061768 292.79824829]
[-48.11618423 284.07345581]
[-35.54769135 275.88183594]
[-22.63841248 268.23849487]
[-9.41225433 261.15765381]
[4.10629416 254.65235901]
[17.89219856 248.73468018]
[31.91992950 243.41560364]
[46.16350937 238.70494080]
[60.59656906 234.61143494]
[75.19237518 231.14266968]
[89.92389679 228.30505371]
[104.76387024 226.10385132]
[103.20334625 211.18524170]
[101.64282227 196.26664734]
[100.08229828 181.34803772]
[90.88590240 173.48974609]
[89.46370697 161.07357788]
[97.12001038 150.69360352]
[95.78177643 135.75341797]
[94.44354248 120.81323242]
[93.10530853 105.87304688]
[90.52626801 103.00582886]
[89.22357941 99.01573181]
[89.67039490 94.49827576]
[92.05619049 90.23825073]
[91.38640594 75.25321198]
[90.71662140 60.26817322]
[90.04683685 45.28313446]
[77.26516724 36.68458557]
[72.05829620 22.37578011]
[76.22608948 7.91571331]
[87.96881866 -1.20823419]
[87.29902649 -16.19327354]
[86.62924194 -31.17831230]
[85.84792328 -46.15794754]
[84.95510864 -61.13135529]
[70.23077393 -64.50340271]
[57.05356979 -71.88838959]
[46.49171448 -82.68763733]
[39.40140533 -96.02571106]
[36.35742188 -110.82135010]
[37.60653305 -125.87512970]
[43.04747391 -139.96672058]
[52.23917007 -151.95376587]
[64.43649292 -160.86454773]
[78.65066528 -165.97669983]
[93.72940063 -166.87579346]
[108.45034027 -163.48895264]
[121.62011719 -156.09072876]
[132.17112732 -145.28088379]
[139.24803162 -131.93568420]
[142.27714539 -117.13700104]
[141.01290894 -102.08448029]
[135.55781555 -87.99836731]
[126.35408020 -76.02055359]
[114.14781189 -67.12203217]
[99.92851257 -62.02416992]
[100.82132721 -47.05076599]
[104.35738373 -40.56091690]
[101.61428070 -31.84809685]
[102.28406525 -16.86305809]
[102.95385742 -1.87801933]
[115.46375275 6.16191101]
[120.90498352 20.19248199]
[116.99545288 34.90876389]
[105.03187561 44.61334991]
[105.70166016 59.59838867]
[106.37144470 74.58342743]
[107.04122925 89.56846619]
[108.04549408 104.53481293]
[109.38372803 119.47499847]
[110.72196198 134.41517639]
[112.06019592 149.35536194]
[122.99998474 164.16760254]
[115.00090027 179.78752136]
[116.56142426 194.70611572]
[118.12194824 209.62472534]
[119.68247223 224.54333496]
[134.65672302 223.62588501]
[149.65658569 223.35353088]
[164.65426636 223.72674561]
[179.62200928 224.74485779]
[194.53210449 226.40596008]
[209.35691833 228.70700073]
[224.06900024 231.64370728]
[238.64112854 235.21064758]
[253.04631042 239.40119934]
[267.25787354 244.20762634]
[281.24948120 249.62100220]
[294.99523926 255.63133240]
[308.46969604 262.22744751]
[321.64788818 269.39718628]
[334.50543213 277.12722778]
[347.01849365 285.40328979]
[359.16394043 294.21002197]
[370.91921997 303.53109741]
[382.26263428 313.34930420]
[393.17312622 323.64645386]
[403.63052368 334.40344238]
[413.61544800 345.60037231]
[423.10937500 357.21652222]
[432.09478760 369.23034668]
[440.55502319 381.61962891]
[448.47439575 394.36145020]
[455.83828735 407.43215942]
[462.63299561 420.80755615]
[468.84597778 434.46292114]
[474.46572876 448.37292480]
[479.48181152 462.51184082]
[483.88500977 476.85345459]
[487.66708374 491.37121582]
[490.82107544 506.03826904]
[493.34115601 520.82745361]
[495.22262573 535.71130371]
[496.46200562 550.66235352]
[497.05700684 565.65289307]
[497.00656128 580.65515137]
[496.31069946 595.64129639]
[494.97076416 610.58367920]
[492.98919678 625.45458984]
[490.36968994 640.22644043]
[487.11709595 654.87194824]
[483.23742676 669.36395264]
[478.73788452 683.67559814]
[473.62677002 697.78045654]
[467.91357422 711.65234375]
[461.60885620 725.26556396]
[454.72430420 738.59497070]
[447.27267456 751.61584473]
[439.26776123 764.30407715]
[430.72436523 776.63616943]
[421.65835571 788.58929443]
[412.08645630 800.14129639]
[402.02642822 811.27081299]
[391.49691772 821.95721436]
[380.51739502 832.18072510]
[369.10818481 841.92236328]
[357.29046631 851.16418457]
[345.08605957 859.88897705]
[332.51757812 868.08068848]
[319.60833740 875.72406006]
[306.38220215 882.80499268]
[292.86367798 889.31030273]
[279.07778931 895.22802734]
[265.05007935 900.54711914]
[250.80650330 905.25787354]
[236.37345886 909.35137939]
[221.77766418 912.82019043]
[207.04615784 915.65789795]
[192.20619202 917.85913086]
[177.28527832 919.41992188]
[162.31101990 920.33728027]
[147.31115723 920.60961914]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 135]
[70 134]
[71 133]
[72 132]
[75 130]
[76 129]
[77 128]
[78 127]
[82 126]
[83 125]
[84 124]
[85 123]
[89 119]
[90 118]
[91 117]
[92 115]
[93 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
