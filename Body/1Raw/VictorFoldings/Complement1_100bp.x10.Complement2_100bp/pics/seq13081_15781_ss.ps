%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[140.34034729 468.76098633]
[140.36422729 453.72949219]
[142.73936462 438.88681030]
[147.40728760 424.59848022]
[154.25303650 411.21630859]
[163.10804749 399.06988525]
[173.75424194 388.45834351]
[185.92944336 379.64294434]
[199.33383179 372.84085083]
[194.71981812 358.56811523]
[190.10580444 344.29537964]
[185.49180603 330.02264404]
[180.87779236 315.74990845]
[176.26377869 301.47717285]
[171.64978027 287.20443726]
[166.61285400 273.07540894]
[161.15750122 259.10260010]
[155.70214844 245.12982178]
[149.93611145 231.28233337]
[143.86227417 217.56706238]
[137.78843689 203.85179138]
[131.71461487 190.13653564]
[125.64077759 176.42126465]
[113.41261292 167.91706848]
[114.89922333 152.16586304]
[102.67105865 143.66168213]
[104.15766907 127.91046906]
[98.08383179 114.19519806]
[86.90288544 105.80008698]
[88.20089722 91.87863159]
[87.58801270 106.86610413]
[83.69975281 121.35339355]
[76.72584534 134.63362122]
[67.00654602 146.05883789]
[55.01609802 155.07154846]
[41.33953094 161.23202515]
[26.64415741 164.23968506]
[11.64699936 163.94776917]
[-2.92020178 160.37052917]
[-16.34667778 153.68249512]
[-27.97732162 144.21000671]
[-37.24464798 132.41523743]
[-43.69648743 118.87368011]
[-47.01803207 104.24605560]
[-47.04722595 89.24608612]
[-43.78263474 74.60564423]
[-37.38355255 61.03907776]
[-28.16220474 49.20832443]
[-16.56851768 39.69063568]
[-3.16817355 32.95039749]
[11.38499355 29.31648445]
[26.38090324 28.96620178]
[41.08787155 31.91663933]
[54.78831100 38.02384186]
[66.81375122 46.98982239]
[76.57743835 58.37710953]
[83.60055542 71.62394714]
[83.15394592 56.63059616]
[82.70734406 41.63724518]
[72.66858673 26.20011902]
[81.58319855 11.08401680]
[80.91341400 -3.90102196]
[80.24362946 -18.88606071]
[79.57384491 -33.87110138]
[78.90406036 -48.85614014]
[77.45464325 -63.78594589]
[75.22952271 -78.61998749]
[73.00440979 -93.45403290]
[70.77928925 -108.28807831]
[68.55417633 -123.12212372]
[58.85534286 -135.62185669]
[64.61906433 -149.35607910]
[62.39394379 -164.19010925]
[60.16882706 -179.02415466]
[57.94371033 -193.85820007]
[55.71859360 -208.69224548]
[53.49347687 -223.52629089]
[38.47411346 -223.25468445]
[23.54779816 -224.94587708]
[8.96993828 -228.57092285]
[-5.01001930 -234.06781006]
[-18.15285873 -241.34248352]
[-30.23369026 -250.27044678]
[-41.04579544 -260.69894409]
[-50.40415955 -272.44952393]
[-58.14865875 -285.32110596]
[-64.14676666 -299.09344482]
[-68.29584503 -313.53091431]
[-70.52490997 -328.38641357]
[-70.79580688 -343.40579224]
[-69.10390472 -358.33203125]
[-65.47815704 -372.90972900]
[-59.98059845 -386.88940430]
[-52.70530701 -400.03192139]
[-43.77676773 -412.11230469]
[-33.34776306 -422.92391968]
[-21.59674263 -432.28173828]
[-8.72478580 -440.02560425]
[5.04785395 -446.02307129]
[19.48550797 -450.17144775]
[34.34112930 -452.39981079]
[49.36051559 -452.66998291]
[64.28666687 -450.97738647]
[78.86418152 -447.35095215]
[92.84362030 -441.85272217]
[105.98576355 -434.57681274]
[118.06575012 -425.64770508]
[128.87686157 -415.21817017]
[138.23410034 -403.46670532]
[145.97737122 -390.59439087]
[151.97416687 -376.82144165]
[156.12188721 -362.38360596]
[158.34953308 -347.52786255]
[158.61898804 -332.50848389]
[156.92567444 -317.58239746]
[153.29853821 -303.00506592]
[147.79965210 -289.02587891]
[140.52310181 -275.88409424]
[131.59341431 -263.80453491]
[121.16338348 -252.99391174]
[109.41147614 -243.63722229]
[96.53878021 -235.89456177]
[82.76556396 -229.89842224]
[68.32752228 -225.75140381]
[70.55263519 -210.91735840]
[72.77775574 -196.08332825]
[75.00286865 -181.24928284]
[77.22798920 -166.41523743]
[79.45310211 -151.58119202]
[88.99278259 -140.14248657]
[83.38821411 -125.34723663]
[85.61333466 -110.51319885]
[87.83844757 -95.67915344]
[90.06356812 -80.84510803]
[92.28868866 -66.01106262]
[101.13380432 -78.12567902]
[115.66603088 -81.84245300]
[129.24142456 -75.46212006]
[135.65350342 -61.90169144]
[131.97074890 -47.36080551]
[119.87686920 -38.48736572]
[104.90101624 -39.33818436]
[93.88909912 -49.52592468]
[94.55888367 -34.54088593]
[95.22866821 -19.55584526]
[95.89845276 -4.57080698]
[96.56823730 10.41423130]
[105.28059387 18.80597687]
[105.96124268 31.28477859]
[97.70069122 41.19063950]
[98.14730072 56.18399048]
[98.59390259 71.17733765]
[101.91616821 85.80480194]
[113.09711456 94.19991302]
[111.79910278 108.12136841]
[117.87293243 121.83663177]
[130.53553772 131.32182312]
[128.61448669 146.09202576]
[141.27709961 155.57722473]
[139.35604858 170.34742737]
[145.42987061 184.06269836]
[151.50370789 197.77796936]
[157.57754517 211.49322510]
[163.65138245 225.20849609]
[167.86927795 228.28361511]
[170.24800110 232.27047729]
[170.74819946 236.31582642]
[169.67494202 239.67445374]
[175.13029480 253.64726257]
[180.58566284 267.62005615]
[184.07011414 270.21090698]
[186.32235718 273.45004272]
[187.28990173 276.87045288]
[187.07731628 280.03610229]
[185.92250061 282.59042358]
[190.53651428 296.86315918]
[195.15052795 311.13589478]
[199.76454163 325.40863037]
[204.37854004 339.68136597]
[208.99255371 353.95410156]
[213.60656738 368.22683716]
[228.45613098 365.89517212]
[243.48764038 365.91531372]
[258.33090210 368.28677368]
[272.62042236 372.95117188]
[286.00427246 379.79360962]
[298.15286255 388.64559937]
[308.76705933 399.28918457]
[317.58544922 411.46218872]
[324.39089966 424.86489868]
[329.01577759 439.16723633]
[331.34622192 454.01699829]
[331.32482910 469.04849243]
[328.95214844 483.89157104]
[324.28656006 498.18069458]
[317.44302368 511.56399536]
[308.59002686 523.71185303]
[297.94558716 534.32519531]
[285.77185059 543.14257812]
[272.36856079 549.94689941]
[258.06585693 554.57061768]
[243.21588135 556.89984131]
[228.18438721 556.87719727]
[213.34150696 554.50329590]
[199.05278015 549.83654785]
[185.67005920 542.99188232]
[173.52290344 534.13787842]
[162.91047668 523.49255371]
[154.09408569 511.31808472]
[147.29086304 497.91424561]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 181]
[10 180]
[11 179]
[12 178]
[13 177]
[14 176]
[15 175]
[16 170]
[17 169]
[18 168]
[19 164]
[20 163]
[21 162]
[22 161]
[23 160]
[25 158]
[27 156]
[28 155]
[30 153]
[57 152]
[58 151]
[59 150]
[61 147]
[62 146]
[63 145]
[64 144]
[65 143]
[66 135]
[67 134]
[68 133]
[69 132]
[70 131]
[72 129]
[73 128]
[74 127]
[75 126]
[76 125]
[77 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
