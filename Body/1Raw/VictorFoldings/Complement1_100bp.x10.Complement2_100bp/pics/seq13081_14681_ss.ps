%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCGxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[176.06915283 310.83996582]
[172.42857361 296.28341675]
[169.70001221 281.52871704]
[167.89404297 266.63290405]
[167.01762390 251.65364075]
[167.07415771 236.64886475]
[168.06343079 221.67663574]
[169.98159790 206.79486084]
[172.82127380 192.06112671]
[176.57144165 177.53244019]
[181.21759033 163.26501465]
[186.74176025 149.31402588]
[173.16555786 142.93540955]
[159.58935547 136.55680847]
[146.01315308 130.17820740]
[132.43693542 123.79959869]
[118.86073303 117.42099762]
[105.28452301 111.04238892]
[114.31092072 123.02255249]
[119.25286102 137.18507385]
[119.63929749 152.18009949]
[115.43341827 166.57838440]
[107.03607941 179.00756836]
[95.24768066 188.28300476]
[81.19180298 193.52059937]
[66.20817566 194.22113037]
[51.72492599 190.31785583]
[39.12252045 182.18278503]
[29.60213280 170.59130859]
[24.07118797 156.64825439]
[23.05685806 141.68260193]
[26.65582466 127.12074280]
[34.52505493 114.35065460]
[45.91450882 104.58949280]
[59.73860931 98.76761627]
[74.67974091 97.43994141]
[89.31484985 100.73342896]
[77.91239166 90.98746490]
[66.50992584 81.24150085]
[55.10746384 71.49553680]
[43.70500183 61.74956894]
[32.99573898 72.26627350]
[21.41063118 81.80957031]
[9.03784657 90.30683899]
[-4.02844715 97.69340515]
[-17.68880653 103.91304779]
[-31.83926582 108.91843414]
[-46.37212753 112.67147064]
[-61.17678833 115.14358521]
[-76.14057159 116.31597137]
[-91.14959717 116.17971039]
[-106.08963013 114.73583221]
[-120.84696960 111.99532318]
[-135.30929565 107.97904205]
[-149.36654663 102.71756744]
[-162.91172791 96.25092316]
[-175.84175110 88.62834167]
[-188.05821228 79.90783691]
[-199.46813965 70.15576172]
[-209.98469543 59.44635391]
[-219.52783203 47.86111069]
[-228.02493286 35.48820877]
[-235.41131592 22.42181015]
[-241.63076782 8.76136398]
[-246.63595581 -5.38916492]
[-250.38877869 -19.92208099]
[-252.86068726 -34.72677612]
[-254.03286743 -49.69057846]
[-253.89639282 -64.69960022]
[-252.45230103 -79.63961029]
[-249.71159363 -94.39691162]
[-245.69511414 -108.85918427]
[-240.43344116 -122.91635132]
[-233.96661377 -136.46144104]
[-226.34384155 -149.39137268]
[-217.62316895 -161.60771179]
[-207.87092590 -173.01750183]
[-197.16137695 -183.53390503]
[-185.57600403 -193.07688904]
[-173.20297241 -201.57380676]
[-160.13647461 -208.96000671]
[-146.47593689 -215.17926025]
[-132.32534790 -220.18424988]
[-117.79237366 -223.93687439]
[-102.98764038 -226.40858459]
[-88.02382660 -227.58055115]
[-73.01480103 -227.44386292]
[-58.07481003 -225.99955750]
[-43.31755066 -223.25863647]
[-28.85533905 -219.24195862]
[-14.79823875 -213.98008728]
[-1.25323832 -207.51306152]
[11.67657566 -199.89012146]
[23.89279747 -191.16926575]
[35.30245209 -181.41688538]
[45.81870651 -170.70716858]
[55.36152267 -159.12165833]
[63.85826874 -146.74851990]
[71.24428558 -133.68191528]
[77.46334839 -120.02129364]
[82.46813965 -105.87062836]
[86.22056580 -91.33760834]
[88.69205475 -76.53283691]
[89.86381531 -61.56900406]
[89.72692108 -46.55998611]
[88.28240967 -31.62001419]
[85.54128265 -16.86279297]
[81.52439880 -2.40063643]
[76.26232910 11.65638924]
[69.79512024 25.20129967]
[62.17199326 38.13100815]
[53.45096970 50.34710693]
[64.85343170 60.09307098]
[76.25588989 69.83903503]
[87.65835571 79.58500671]
[99.06082153 89.33097076]
[111.66313171 97.46618652]
[125.23933411 103.84478760]
[138.81555176 110.22339630]
[152.39175415 116.60199738]
[165.96795654 122.98060608]
[179.54415894 129.35920715]
[193.12037659 135.73780823]
[200.33288574 122.58007050]
[208.34945679 109.89617920]
[217.13908386 97.73521423]
[226.66773987 86.14422607]
[236.89859009 75.16805267]
[247.79202271 64.84915924]
[259.30590820 55.22747040]
[271.39572144 46.34021378]
[284.01464844 38.22176743]
[297.11386108 30.90354156]
[310.64276123 24.41385078]
[324.54891968 18.77780151]
[338.77856445 14.01719856]
[353.27667236 10.15046024]
[367.98712158 7.19254637]
[382.85299683 5.15490055]
[397.81680298 4.04540539]
[412.82064819 3.86835456]
[427.80645752 4.62443209]
[442.71630859 6.31071329]
[457.49246216 8.92067432]
[472.07775879 12.44421673]
[486.41580200 16.86771011]
[500.45108032 22.17403984]
[514.12933350 28.34267616]
[527.39758301 35.34975433]
[540.20458984 43.16816711]
[552.50073242 51.76766205]
[564.23846436 61.11497116]
[575.37237549 71.17392731]
[585.85937500 81.90562439]
[595.65893555 93.26853943]
[604.73303223 105.21870422]
[613.04669189 117.70989227]
[620.56768799 130.69377136]
[627.26690674 144.12011719]
[633.11846924 157.93698120]
[638.09973145 172.09091187]
[642.19140625 186.52714539]
[645.37768555 201.18981934]
[647.64617920 216.02223206]
[648.98822021 230.96697998]
[649.39849854 245.96624756]
[648.87548828 260.96200562]
[647.42120361 275.89627075]
[645.04125977 290.71121216]
[641.74493408 305.34951782]
[637.54486084 319.75460815]
[632.45739746 333.87069702]
[626.50213623 347.64318848]
[619.70220947 361.01879883]
[612.08386230 373.94580078]
[603.67657471 386.37414551]
[594.51287842 398.25576782]
[584.62823486 409.54473877]
[574.06085205 420.19729614]
[562.85168457 430.17230225]
[551.04400635 439.43115234]
[538.68359375 447.93798828]
[525.81817627 455.65991211]
[512.49761963 462.56707764]
[498.77340698 468.63275146]
[484.69863892 473.83346558]
[470.32775879 478.14907837]
[455.71640015 481.56289673]
[440.92105103 484.06173706]
[425.99896240 485.63592529]
[411.00787354 486.27935791]
[396.00579834 485.98953247]
[381.05075073 484.76760864]
[366.20059204 482.61831665]
[351.51278687 479.54992676]
[337.04415894 475.57434082]
[322.85067749 470.70693970]
[308.98727417 464.96652222]
[295.50753784 458.37533569]
[282.46368408 450.95889282]
[269.90612793 442.74581909]
[257.88345337 433.76794434]
[246.44219971 424.05999756]
[235.62661743 413.65954590]
[225.47856140 402.60678101]
[216.03727722 390.94451904]
[207.33929443 378.71783447]
[199.41827393 365.97406006]
[192.30485535 352.76248169]
[186.02655029 339.13421631]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 123]
[13 122]
[14 121]
[15 120]
[16 119]
[17 118]
[18 117]
[37 116]
[38 115]
[39 114]
[40 113]
[41 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
