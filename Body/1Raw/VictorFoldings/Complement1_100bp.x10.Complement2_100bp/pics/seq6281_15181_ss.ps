%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[79.00752258 629.72058105]
[65.27396393 635.86096191]
[50.64590073 639.37298584]
[35.62156296 640.13708496]
[20.71266747 638.12725830]
[6.42701244 633.41186523]
[-6.74884129 626.15161133]
[-18.36612892 616.59368896]
[-28.02916908 605.06372070]
[-35.40884399 591.95440674]
[-40.25379944 577.71215820]
[-42.39902496 562.82214355]
[-41.77145386 547.79150391]
[-38.39245605 533.13214111]
[-32.37712097 519.34332275]
[-23.93033218 506.89477539]
[-13.33978081 496.21044922]
[-0.96617794 487.65426636]
[12.76903629 481.51760864]
[27.39804459 478.00949097]
[42.42259216 477.24945068]
[44.42660522 462.38391113]
[46.43061829 447.51840210]
[48.43463135 432.65286255]
[36.56272125 423.65713501]
[30.74887085 409.83486938]
[32.64678574 394.85940552]
[41.84609222 382.76519775]
[55.95590973 376.86096191]
[57.95992279 361.99542236]
[59.96393585 347.12988281]
[53.99637604 333.48300171]
[63.50802612 320.84027100]
[65.51203918 305.97473145]
[56.34292603 296.92172241]
[54.02762985 284.04843140]
[59.63195038 272.01507568]
[71.31300354 265.30929565]
[73.53812408 250.47523499]
[75.76323700 235.64120483]
[77.87786102 220.79100037]
[79.77115631 205.91096497]
[81.55361938 191.01724243]
[83.33609009 176.12353516]
[85.11855316 161.22981262]
[86.90101624 146.33609009]
[88.68348694 131.44238281]
[90.46595001 116.54866028]
[81.59315491 105.09354401]
[83.31495667 90.70668793]
[94.64032745 81.66887665]
[96.42279816 66.77515411]
[98.20526123 51.88143921]
[88.63577271 63.43241119]
[75.03851318 69.76600647]
[60.03889465 69.65930939]
[46.53310776 63.13292313]
[37.12891006 51.44698715]
[33.64210510 36.85787582]
[36.74594116 22.18251419]
[45.84111404 10.25448895]
[59.17149353 3.37691164]
[74.16318512 2.87773585]
[87.92153168 8.85334492]
[97.79000854 20.14994049]
[101.86324310 34.58760452]
[106.26424408 20.24775696]
[110.66523743 5.90790987]
[107.31742859 -9.55503750]
[118.44838715 -19.45205688]
[122.84938812 -33.79190445]
[127.25038147 -48.13175201]
[123.90257263 -63.59469986]
[135.03353882 -73.49171448]
[139.43452454 -87.83156586]
[143.83552551 -102.17140961]
[142.71325684 -106.36598969]
[142.95938110 -110.30348969]
[144.32504272 -113.58531189]
[146.45753479 -115.93459320]
[148.94889832 -117.21958923]
[154.19561768 -131.27206421]
[159.44233704 -145.32452393]
[164.68905640 -159.37699890]
[169.72596741 -173.50602722]
[174.55197144 -187.70848083]
[179.37797546 -201.91093445]
[179.17594910 -211.04313660]
[184.38299561 -216.28799438]
[189.41990662 -230.41702271]
[175.94184875 -237.03819275]
[163.30642700 -245.15260315]
[151.67835999 -254.65449524]
[141.20924377 -265.41995239]
[132.03556824 -277.30868530]
[124.27691650 -290.16561890]
[118.03446198 -303.82321167]
[113.38957977 -318.10336304]
[110.40282440 -332.81991577]
[109.11312866 -347.78100586]
[109.53730774 -362.79159546]
[111.66983795 -377.65600586]
[115.48291016 -392.18038940]
[120.92681885 -406.17544556]
[127.93059540 -419.45870972]
[136.40292358 -431.85699463]
[146.23333740 -443.20867920]
[157.29370117 -453.36575317]
[169.43981934 -462.19580078]
[182.51332092 -469.58370972]
[196.34378052 -475.43316650]
[210.75088501 -479.66790771]
[225.54681396 -482.23272705]
[240.53866577 -483.09417725]
[255.53099060 -482.24105835]
[270.32833862 -479.68444824]
[284.73779297 -475.45770264]
[298.57150269 -469.61593628]
[311.64910889 -462.23526001]
[323.80010986 -453.41195679]
[334.86611938 -443.26104736]
[344.70285034 -431.91482544]
[353.18203735 -419.52124023]
[360.19320679 -406.24188232]
[365.64486694 -392.24984741]
[369.46600342 -377.72756958]
[371.60681152 -362.86434937]
[372.03930664 -347.85400391]
[370.75793457 -332.89218140]
[367.77932739 -318.17398071]
[363.14239502 -303.89123535]
[356.90750122 -290.23019409]
[349.15600586 -277.36895752]
[339.98892212 -265.47512817]
[329.52578735 -254.70385742]
[317.90301514 -245.19552612]
[305.27209473 -237.07409668]
[291.79769897 -230.44544983]
[277.65554810 -225.39599609]
[263.02996826 -221.99159241]
[248.11161804 -220.27659607]
[233.09504700 -220.27337646]
[218.17597961 -221.98196411]
[203.54893494 -225.38011169]
[198.51202393 -211.25108337]
[193.58042908 -197.08494568]
[188.75442505 -182.88249207]
[183.92843628 -168.68003845]
[185.19839478 -164.07609558]
[183.58967590 -158.62548828]
[178.74153137 -154.13027954]
[173.49481201 -140.07780457]
[168.24809265 -126.02533722]
[163.00137329 -111.97286987]
[158.17536926 -97.77041626]
[153.77438354 -83.43056488]
[149.37338257 -69.09072113]
[153.03598022 -54.65345383]
[141.59022522 -43.73075104]
[137.18923950 -29.39090538]
[132.78823853 -15.05105877]
[136.45083618 -0.61379343]
[125.00508881 10.30890751]
[120.60408783 24.64875412]
[116.20308685 38.98860168]
[113.09898376 53.66390610]
[111.31651306 68.55762482]
[109.53404999 83.45133972]
[118.40684509 94.90645599]
[116.68504333 109.29331207]
[105.35967255 118.33112335]
[103.57720184 133.22483826]
[101.79473877 148.11856079]
[100.01226807 163.01228333]
[98.22980499 177.90599060]
[96.44734192 192.79971313]
[94.66487122 207.69343567]
[96.75234222 216.58613586]
[92.74339294 222.79501343]
[94.69823456 231.71781921]
[90.59728241 237.86631775]
[88.37216949 252.70036316]
[86.14704895 267.53439331]
[96.80082703 281.40942383]
[94.17520142 298.36291504]
[80.37757111 307.97875977]
[78.37355804 322.84426880]
[84.19777679 337.55444336]
[74.82946777 349.13391113]
[72.82545471 363.99942017]
[70.82144165 378.86495972]
[82.86406708 388.29483032]
[88.53235626 402.39331055]
[86.39691925 417.33673096]
[77.13039398 429.12603760]
[63.30015945 434.65689087]
[61.29614639 449.52239990]
[59.29213333 464.38793945]
[57.28812027 479.25347900]
[71.57504272 483.96499634]
[84.75285339 491.22171021]
[96.37271881 500.77645874]
[106.03886414 512.30383301]
[113.42207336 525.41119385]
[118.27087402 539.65209961]
[120.42011261 554.54156494]
[119.79658508 569.57238770]
[116.42153931 584.23266602]
[110.40992737 598.02307129]
[101.96649170 610.47387695]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 199]
[22 198]
[23 197]
[24 196]
[29 191]
[30 190]
[31 189]
[33 187]
[34 186]
[38 183]
[39 182]
[40 181]
[41 179]
[42 177]
[43 176]
[44 175]
[45 174]
[46 173]
[47 172]
[48 171]
[51 168]
[52 167]
[53 166]
[66 165]
[67 164]
[68 163]
[70 161]
[71 160]
[72 159]
[74 157]
[75 156]
[76 155]
[81 154]
[82 153]
[83 152]
[84 151]
[85 148]
[86 147]
[87 146]
[89 145]
[90 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
