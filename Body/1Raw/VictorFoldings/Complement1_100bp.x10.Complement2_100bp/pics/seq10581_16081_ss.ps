%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[94.56278992 841.27056885]
[79.62710571 839.84228516]
[64.79277802 837.59332275]
[50.10486984 834.53057861]
[35.60798645 830.66339111]
[21.34614944 826.00347900]
[7.36267424 820.56500244]
[-6.29997110 814.36444092]
[-19.60029411 807.42059326]
[-32.49790192 799.75469971]
[-44.95362473 791.38989258]
[-56.92963409 782.35162354]
[-68.38955688 772.66735840]
[-79.29859924 762.36651611]
[-89.62361908 751.48034668]
[-99.33325958 740.04187012]
[-108.39804077 728.08593750]
[-116.79043579 715.64880371]
[-124.48493958 702.76818848]
[-131.45820618 689.48333740]
[-137.68904114 675.83447266]
[-143.15852356 661.86303711]
[-147.85005188 647.61157227]
[-151.74937439 633.12329102]
[-154.84465027 618.44219971]
[-157.12646484 603.61291504]
[-158.58790588 588.68041992]
[-159.22453308 573.69012451]
[-159.03440857 558.68750000]
[-158.01809692 543.71813965]
[-156.17871094 528.82745361]
[-153.52182007 514.06079102]
[-150.05549622 499.46282959]
[-145.79026794 485.07803345]
[-140.73907471 470.95004272]
[-134.91728210 457.12173462]
[-128.34255981 443.63516235]
[-121.03487396 430.53125000]
[-113.01641846 417.84979248]
[-104.31154633 405.62930298]
[-94.94668579 393.90692139]
[-84.95028687 382.71823120]
[-74.35270691 372.09719849]
[-63.18612671 362.07611084]
[-51.48446274 352.68536377]
[-39.28325272 343.95352173]
[-26.61955070 335.90704346]
[-13.53181458 328.57043457]
[-0.05979363 321.96591187]
[13.75559807 316.11358643]
[27.87240410 311.03118896]
[42.24775314 306.73419189]
[56.83798599 303.23562622]
[71.59879303 300.54611206]
[86.48534393 298.67382812]
[101.45243073 297.62445068]
[101.22910309 282.62609863]
[101.00577545 267.62777710]
[100.78244781 252.62942505]
[100.55912018 237.63108826]
[100.33579254 222.63275146]
[100.11246490 207.63441467]
[99.44268036 192.64938354]
[98.32702637 177.69091797]
[97.21138000 162.73246765]
[88.54889679 150.61592102]
[95.23835754 136.27850342]
[94.12271118 121.32004547]
[93.00706482 106.36159515]
[89.91053009 102.12774658]
[89.40657043 96.46035767]
[92.08766174 90.94232178]
[91.41787720 75.95728302]
[83.07208252 62.51636505]
[90.23336029 49.45629883]
[89.56357574 34.47126007]
[88.89379120 19.48622322]
[77.97376251 11.60158634]
[73.65174103 -0.94953287]
[77.29374695 -13.51209259]
[87.35493469 -21.56206322]
[86.90832520 -36.55541229]
[71.65775299 -39.79129410]
[57.62923813 -46.57211304]
[45.63293457 -56.50163651]
[36.36052704 -69.00193787]
[30.34535980 -83.34701538]
[27.93174362 -98.70496368]
[29.25525856 -114.18621063]
[34.23514938 -128.89505005]
[42.57922745 -141.98149109]
[53.80102158 -152.69032288]
[67.24813843 -160.40472412]
[82.14018250 -164.68180847]
[81.47039795 -179.66685486]
[80.80061340 -194.65188599]
[66.40773010 -199.46949768]
[54.72957993 -209.16409302]
[47.34554291 -222.42457581]
[45.25424576 -237.45758057]
[48.73852158 -252.22999573]
[57.32714844 -264.74398804]
[69.85858917 -273.30712891]
[84.63806152 -276.76135254]
[99.66677094 -274.63946533]
[112.91220093 -267.22845459]
[122.58302307 -255.53060913]
[127.37133026 -241.12796021]
[126.62955475 -225.96833801]
[120.45800781 -212.10195923]
[109.69133759 -201.40414429]
[95.78565216 -195.32167053]
[96.45543671 -180.33663940]
[97.12522125 -165.35159302]
[111.33952332 -162.73217773]
[124.61857605 -157.00575256]
[136.29217529 -148.45768738]
[145.77037048 -137.51582336]
[152.57316589 -124.72913361]
[156.35499573 -110.74008942]
[156.92208862 -96.25244141]
[154.24256897 -81.99581146]
[148.44808960 -68.68891144]
[139.82743835 -57.00335312]
[128.81214905 -47.52972794]
[115.95487976 -40.74775696]
[101.90167999 -37.00201797]
[102.34828186 -22.00866890]
[115.07066345 -11.00958633]
[115.91828918 6.12506866]
[103.87882996 18.81643677]
[104.54861450 33.80147552]
[105.21839905 48.78651428]
[113.51628876 61.15560532]
[106.40291595 75.28749847]
[107.07270050 90.27253723]
[107.96551514 105.24594879]
[109.08116150 120.20439911]
[110.19681549 135.16285706]
[118.93909454 148.34933472]
[112.16983795 161.61682129]
[113.28548431 176.57527161]
[114.40113068 191.53372192]
[116.97208405 195.03289795]
[118.17485046 198.79026794]
[118.09626007 202.34403992]
[116.96422577 205.30799866]
[115.11080170 207.41108704]
[115.33412933 222.40942383]
[115.55745697 237.40776062]
[115.78078461 252.40609741]
[116.00411224 267.40444946]
[116.22743988 282.40277100]
[116.45076752 297.40112305]
[131.44245911 298.00439453]
[146.37815857 299.43261719]
[161.21249390 301.68145752]
[175.90042114 304.74407959]
[190.39733887 308.61117554]
[204.65921021 313.27099609]
[218.64273071 318.70941162]
[232.30540466 324.90988159]
[245.60578918 331.85357666]
[258.50344849 339.51940918]
[270.95922852 347.88412476]
[282.93530273 356.92230225]
[294.39529419 366.60650635]
[305.30441284 376.90728760]
[315.62948608 387.79339600]
[325.33923340 399.23175049]
[334.40408325 411.18762207]
[342.79656982 423.62472534]
[350.49118042 436.50524902]
[357.46453857 449.79010010]
[363.69546509 463.43890381]
[369.16503906 477.41027832]
[373.85665894 491.66171265]
[377.75610352 506.14996338]
[380.85147095 520.83099365]
[383.13339233 535.66027832]
[384.59494019 550.59277344]
[385.23165894 565.58306885]
[385.04165649 580.58569336]
[384.02545166 595.55511475]
[382.18615723 610.44573975]
[379.52935791 625.21246338]
[376.06314087 639.81042480]
[371.79803467 654.19525146]
[366.74694824 668.32330322]
[360.92523193 682.15167236]
[354.35061646 695.63824463]
[347.04302979 708.74224854]
[339.02465820 721.42376709]
[330.31985474 733.64428711]
[320.95507812 745.36676025]
[310.95877075 756.55548096]
[300.36126709 767.17657471]
[289.19476318 777.19775391]
[277.49316406 786.58862305]
[265.29199219 795.32055664]
[252.62835693 803.36706543]
[239.54067993 810.70379639]
[226.06869507 817.30841064]
[212.25334167 823.16082764]
[198.13658142 828.24334717]
[183.76126099 832.54040527]
[169.17105103 836.03912354]
[154.41026306 838.72869873]
[139.52372742 840.60113525]
[124.55664825 841.65063477]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 154]
[57 153]
[58 152]
[59 151]
[60 150]
[61 149]
[62 148]
[63 143]
[64 142]
[65 141]
[67 139]
[68 138]
[69 137]
[72 136]
[73 135]
[75 133]
[76 132]
[77 131]
[81 128]
[82 127]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
