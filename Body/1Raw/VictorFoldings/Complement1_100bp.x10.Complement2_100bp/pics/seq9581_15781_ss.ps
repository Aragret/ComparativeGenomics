%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[85.33089447 694.16937256]
[71.20697784 689.08312988]
[57.63989258 682.65740967]
[44.75632858 674.95227051]
[32.67657089 666.03961182]
[21.51341248 656.00268555]
[11.37108040 644.93524170]
[2.34427571 632.94055176]
[-5.48272085 620.13067627]
[-12.03682804 606.62512207]
[-17.25684929 592.55010986]
[-21.09404945 578.03692627]
[-23.51259613 563.22119141]
[-24.48991013 548.24121094]
[-24.01686478 533.23681641]
[-22.09787941 518.34814453]
[-18.75086784 503.71417236]
[-14.00708389 489.47155762]
[-7.91081858 475.75326538]
[-0.51899344 462.68743896]
[8.09937477 450.39599609]
[17.86381721 438.99374390]
[28.68316269 428.58715820]
[40.45639038 419.27337646]
[53.07357788 411.13937378]
[66.41691589 404.26107788]
[80.36182404 398.70272827]
[94.77809143 394.51623535]
[109.53111267 391.74066162]
[100.68919373 379.75442505]
[107.16445160 365.31900024]
[105.82621765 350.37881470]
[104.48798370 335.43862915]
[103.14974976 320.49844360]
[101.81151581 305.55825806]
[100.47328186 290.61807251]
[98.01657104 288.08886719]
[96.66285706 284.24404907]
[97.01712036 279.61505127]
[99.42416382 274.98327637]
[91.12628174 262.61419678]
[98.23965454 248.48229980]
[97.56987000 233.49725342]
[96.90008545 218.51222229]
[96.23030090 203.52717590]
[95.56051636 188.54214478]
[94.89073181 173.55709839]
[94.22093964 158.57206726]
[93.32812500 143.59866333]
[92.21247864 128.64021301]
[83.20456696 140.63426208]
[68.90139771 145.15306091]
[54.63770676 140.51116943]
[45.73349380 128.43992615]
[45.50980759 113.44159698]
[54.05008316 101.11018372]
[68.16900635 96.04500580]
[82.60056305 100.13524628]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[93.72218323 72.48873901]
[94.39196777 57.50370407]
[94.95018005 42.51409149]
[95.39678192 27.52074242]
[82.85554504 35.74979782]
[68.55561829 31.22077179]
[63.03837585 17.27229309]
[70.37092590 4.18666315]
[85.14797974 1.61011922]
[96.47578430 11.44048119]
[98.03630829 -3.47812343]
[99.59683228 -18.39672852]
[101.15735626 -33.31533432]
[102.71788025 -48.23393631]
[93.57853699 -36.33972168]
[80.43054199 -29.11959839]
[65.48955536 -27.79028511]
[51.27341080 -32.57579803]
[40.17776489 -42.66968918]
[34.07243347 -56.37096405]
[33.98627472 -71.37071991]
[39.93380356 -85.14122772]
[50.91276169 -95.36191559]
[65.07299805 -100.31042480]
[80.02826691 -99.15283966]
[93.25833893 -92.08423615]
[102.53371429 -80.29579163]
[106.29141235 -65.77241516]
[110.69241333 -80.11226654]
[107.34459686 -95.57521057]
[118.47555542 -105.47222900]
[122.87655640 -119.81208038]
[126.41622925 -134.38845825]
[121.25466156 -149.34400940]
[131.13067627 -160.49360657]
[133.79647827 -175.25482178]
[136.46226501 -190.01605225]
[139.12806702 -204.77726746]
[125.36160278 -210.92118835]
[113.46593475 -220.18167114]
[104.13266754 -232.02032471]
[97.90441895 -245.74884033]
[95.14329529 -260.56909180]
[96.00981903 -275.61941528]
[100.45362091 -290.02484131]
[108.21633911 -302.94784546]
[118.84665680 -313.63705444]
[131.72654724 -321.47109985]
[146.10717773 -325.99444580]
[161.15249634 -326.94415283]
[175.98777771 -324.26498413]
[189.75051880 -318.11270142]
[201.64056396 -308.84500122]
[210.96665955 -297.00070190]
[217.18658447 -283.26840210]
[219.93872070 -268.44647217]
[219.06306458 -253.39668274]
[214.61053467 -238.99395752]
[206.83998108 -226.07568359]
[196.20318604 -215.39288330]
[183.31854248 -207.56668091]
[168.93516541 -203.05204773]
[153.88928223 -202.11146545]
[151.22348022 -187.35025024]
[148.55769348 -172.58903503]
[145.89189148 -157.82781982]
[151.24414062 -143.92807007]
[141.17744446 -131.72265625]
[152.90190125 -141.07879639]
[167.88092041 -141.87179565]
[180.52770996 -133.80590820]
[186.12533569 -119.88948822]
[182.58599854 -105.31303406]
[171.22981262 -95.51319122]
[156.29234314 -94.14505768]
[143.34487915 -101.71892548]
[137.21640015 -115.41107941]
[132.81539917 -101.07123566]
[136.47801208 -86.63396454]
[125.03225708 -75.71126556]
[120.63125610 -61.37141800]
[117.63648224 -46.67341614]
[116.07595825 -31.75481033]
[114.51544189 -16.83620453]
[112.95491791 -1.91760039]
[111.39439392 13.00100422]
[110.39012909 27.96734810]
[109.94352722 42.96069717]
[112.88648224 49.74013901]
[109.37700653 58.17348862]
[108.70722198 73.15852356]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[107.17092896 127.52455902]
[108.28658295 142.48301697]
[111.68726349 148.15283203]
[111.71058655 153.83583069]
[109.20598602 157.90228271]
[109.87577057 172.88731384]
[110.54555511 187.87236023]
[111.21533966 202.85739136]
[111.88512421 217.84243774]
[112.55490875 232.82746887]
[113.22469330 247.81251526]
[121.57048798 261.25341797]
[114.40920258 274.31350708]
[115.41346741 289.27984619]
[116.75170135 304.22003174]
[118.08993530 319.16021729]
[119.42816925 334.10040283]
[120.76640320 349.04058838]
[122.10463715 363.98077393]
[131.04226685 377.03561401]
[124.47129822 390.40243530]
[139.48274231 390.51190186]
[154.41354370 392.06970215]
[169.12428284 395.06127930]
[183.47763062 399.45870972]
[197.33953857 405.22091675]
[210.58059692 412.29409790]
[223.07716370 420.61221313]
[234.71257019 430.09762573]
[245.37817383 440.66174316]
[254.97438049 452.20590210]
[263.41162109 464.62237549]
[270.61108398 477.79519653]
[276.50555420 491.60137939]
[281.04000854 505.91201782]
[284.17208862 520.59350586]
[285.87258911 535.50872803]
[286.12557983 550.51843262]
[284.92874146 565.48248291]
[282.29321289 580.26116943]
[278.24365234 594.71649170]
[272.81781006 608.71350098]
[266.06640625 622.12145996]
[258.05242920 634.81524658]
[248.85073853 646.67626953]
[238.54722595 657.59387207]
[227.23809814 667.46600342]
[215.02897644 676.20056152]
[202.03381348 683.71600342]
[188.37397766 689.94207764]
[174.17700195 694.82073975]
[159.57543945 698.30639648]
[144.70562744 700.36651611]
[129.70639038 700.98187256]
[114.71779633 700.14666748]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 176]
[31 174]
[32 173]
[33 172]
[34 171]
[35 170]
[36 169]
[40 168]
[42 166]
[43 165]
[44 164]
[45 163]
[46 162]
[47 161]
[48 160]
[49 157]
[50 156]
[59 155]
[61 153]
[62 152]
[63 151]
[64 149]
[65 148]
[71 147]
[72 146]
[73 145]
[74 144]
[75 143]
[89 142]
[90 141]
[92 139]
[93 138]
[94 129]
[96 127]
[97 126]
[98 125]
[99 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
