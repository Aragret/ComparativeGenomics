%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[112.56418610 615.69781494]
[100.25837708 624.79864502]
[85.13098145 627.12683105]
[70.65814972 622.14727783]
[60.16564178 611.00433350]
[56.06455612 596.25848389]
[59.29729080 581.29827881]
[69.12099457 569.56140137]
[83.27824402 563.74499512]
[84.61647797 548.80480957]
[85.95471191 533.86462402]
[87.29294586 518.92443848]
[75.96774292 506.49145508]
[77.16224670 489.37750244]
[90.62452698 478.20669556]
[91.74017334 463.24826050]
[92.85582733 448.28979492]
[93.97147369 433.33135986]
[95.08712006 418.37289429]
[96.09138489 403.40655518]
[96.98419952 388.43313599]
[97.87701416 373.45974731]
[98.32362366 358.46640015]
[98.32362366 343.46640015]
[98.32362366 328.46640015]
[98.32362366 313.46640015]
[84.08688354 308.89733887]
[71.94299316 300.13970947]
[63.08861160 288.04092407]
[58.40102005 273.77850342]
[58.35124969 258.74517822]
[62.95676041 244.41325378]
[71.77849579 232.19010925]
[83.96271515 223.28015137]
[98.32362366 218.56614685]
[98.32362366 203.56614685]
[97.87701416 188.57279968]
[96.98419952 173.59939575]
[88.50307465 161.35522461]
[95.40525818 147.11897278]
[86.92413330 134.87480164]
[93.82631683 120.63856506]
[92.93350220 105.66516113]
[90.44097137 102.72242737]
[89.25765991 98.69531250]
[89.83877563 94.19316864]
[92.35035706 90.00606537]
[92.12702942 75.00772858]
[84.18511963 61.32427979]
[91.73207855 48.48322296]
[91.39710236 33.48696136]
[90.95049286 18.49361229]
[90.50389099 3.50026298]
[90.05728149 -11.49308681]
[89.61067200 -26.48643684]
[89.16407013 -41.47978592]
[74.43778229 -44.67698288]
[60.91286850 -51.30186081]
[49.37360001 -60.96542358]
[40.48794937 -73.10261536]
[34.76892853 -87.00535583]
[32.54495239 -101.86384583]
[33.94100571 -116.81374359]
[38.87162018 -130.98641968]
[47.04607773 -143.55949402]
[57.98557663 -153.80445862]
[71.05124664 -161.12896729]
[85.48147583 -165.11102295]
[85.03486633 -180.10437012]
[84.58826447 -195.09773254]
[69.86197662 -198.29492188]
[56.33705902 -204.91979980]
[44.79779053 -214.58335876]
[35.91214371 -226.72056580]
[30.19311905 -240.62329102]
[27.96914482 -255.48178101]
[29.36520004 -270.43167114]
[34.29581070 -284.60437012]
[42.47027206 -297.17742920]
[53.40976715 -307.42239380]
[66.47543335 -314.74688721]
[80.90567017 -318.72897339]
[80.45906067 -333.72232056]
[72.31430817 -347.28601074]
[79.66924286 -360.23800659]
[79.22263336 -375.23135376]
[78.77602386 -390.22470093]
[78.32942200 -405.21804810]
[77.88281250 -420.21139526]
[67.84405518 -435.64852905]
[76.75867462 -450.76461792]
[76.08889008 -465.74966431]
[67.74309540 -479.19058228]
[74.90437317 -492.25064087]
[74.23458862 -507.23568726]
[65.88879395 -520.67663574]
[73.05007935 -533.73669434]
[58.85969162 -539.26416016]
[48.14896393 -550.09002686]
[42.77359390 -564.33874512]
[43.66489792 -579.54156494]
[50.66844940 -593.06451416]
[62.57084274 -602.56463623]
[77.30991364 -606.39605713]
[92.33203125 -603.89489746]
[105.03452301 -595.49450684]
[113.21660614 -582.65032959]
[115.46068573 -567.58764648]
[111.37796021 -552.91619873]
[101.67578125 -541.17791748]
[88.03511810 -534.40649414]
[96.33300018 -522.03735352]
[89.21962738 -507.90548706]
[89.88941193 -492.92044067]
[98.18730164 -480.55136108]
[91.07392883 -466.41946411]
[91.74371338 -451.43441772]
[100.45606995 -443.04266357]
[101.13671875 -430.56387329]
[92.87616730 -420.65802002]
[93.32276917 -405.66467285]
[93.76937866 -390.67129517]
[94.21598053 -375.67794800]
[94.66259003 -360.68460083]
[102.77539825 -348.19335938]
[95.45240784 -334.16891479]
[95.89901733 -319.17556763]
[110.54067993 -316.05947876]
[124.01914215 -309.52563477]
[135.54904175 -299.94998169]
[144.45736694 -287.88574219]
[150.22280884 -274.03164673]
[152.50622559 -259.19137573]
[151.17057800 -244.22685242]
[146.28919983 -230.00834656]
[138.14172363 -217.36380005]
[127.19810486 -207.03053284]
[114.09149170 -199.61238098]
[99.58161163 -195.54432678]
[100.02822113 -180.55097961]
[100.47482300 -165.55763245]
[115.11648560 -162.44152832]
[128.59495544 -155.90769958]
[140.12484741 -146.33203125]
[149.03317261 -134.26780701]
[154.79861450 -120.41371918]
[157.08203125 -105.57342529]
[155.74639893 -90.60890198]
[150.86502075 -76.39041138]
[142.71754456 -63.74585342]
[131.77391052 -53.41259384]
[118.66729736 -45.99444580]
[104.15741730 -41.92639160]
[104.60402679 -26.93304253]
[105.05062866 -11.93969250]
[105.49723816 3.05365705]
[105.94384003 18.04700661]
[106.39044952 33.04035568]
[109.73170471 39.63261032]
[106.73041534 48.25989532]
[114.65634918 60.87055969]
[107.12536621 74.78440094]
[107.34869385 89.78273773]
[107.90690613 104.77234650]
[108.79972076 119.74575043]
[117.34470367 133.06092834]
[110.37866211 146.22616577]
[118.92364502 159.54133606]
[111.95760345 172.70657349]
[112.85041809 187.67997742]
[115.36898804 191.21704102]
[116.51567841 194.99191284]
[116.38419342 198.54411316]
[115.20815277 201.49089050]
[113.32362366 203.56614685]
[113.32362366 218.56614685]
[127.68452454 223.28015137]
[139.86874390 232.19010925]
[148.69047546 244.41325378]
[153.29598999 258.74517822]
[153.24621582 273.77850342]
[148.55862427 288.04092407]
[139.70423889 300.13970947]
[127.56035614 308.89733887]
[113.32362366 313.46640015]
[113.32362366 328.46640015]
[113.32362366 343.46640015]
[113.32362366 358.46640015]
[115.62718964 362.14709473]
[116.54716492 365.98352051]
[116.20448303 369.52157593]
[114.85513306 372.39315796]
[112.85041809 374.35253906]
[111.95760345 389.32595825]
[111.06478882 404.29937744]
[113.67786407 413.05206299]
[110.04557800 419.48852539]
[108.92992401 434.44699097]
[107.81427765 449.40545654]
[106.69863129 464.36389160]
[105.58298492 479.32235718]
[115.48870087 488.44876099]
[118.28863525 501.42453003]
[113.17961121 513.46533203]
[102.23313141 520.26263428]
[100.89489746 535.20281982]
[99.55665588 550.14300537]
[98.21842194 565.08319092]
[111.11661530 573.32305908]
[118.69805908 586.61895752]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 208]
[10 207]
[11 206]
[12 205]
[15 201]
[16 200]
[17 199]
[18 198]
[19 197]
[20 195]
[21 194]
[22 193]
[23 188]
[24 187]
[25 186]
[26 185]
[35 176]
[36 175]
[37 170]
[38 169]
[40 167]
[42 165]
[43 164]
[47 163]
[48 162]
[50 160]
[51 158]
[52 157]
[53 156]
[54 155]
[55 154]
[56 153]
[68 141]
[69 140]
[70 139]
[82 127]
[83 126]
[85 124]
[86 123]
[87 122]
[88 121]
[89 120]
[91 117]
[92 116]
[94 114]
[95 113]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
