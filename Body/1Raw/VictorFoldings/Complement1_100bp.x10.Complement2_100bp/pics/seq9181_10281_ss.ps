%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[110.99195862 680.83032227]
[97.27618408 674.74279785]
[84.01306915 667.72351074]
[71.26583862 659.80590820]
[59.09522247 651.02770996]
[47.55922699 641.43072510]
[36.71282959 631.06079102]
[26.60771370 619.96716309]
[17.29203796 608.20288086]
[8.81019592 595.82391357]
[1.20260656 582.88928223]
[-5.49447489 569.46057129]
[-11.24913406 555.60180664]
[-16.03394699 541.37908936]
[-19.82611275 526.86010742]
[-22.60755730 512.11413574]
[-24.36502838 497.21139526]
[-25.09014702 482.22290039]
[-24.77946281 467.22009277]
[-23.43445206 452.27447510]
[-21.06152725 437.45727539]
[-17.67199516 422.83905029]
[-13.28200817 408.48953247]
[-7.91248798 394.47708130]
[-1.58902192 380.86846924]
[5.65825510 367.72854614]
[13.79480553 355.11993408]
[22.78185654 343.10272217]
[32.57658005 331.73416138]
[43.13229370 321.06842041]
[54.39870453 311.15637207]
[66.32211304 302.04522705]
[78.84570312 293.77841187]
[91.90979004 286.39532471]
[105.45212555 279.93112183]
[119.40816498 274.41662598]
[133.71141052 269.87811279]
[130.17173767 255.30174255]
[119.64958954 244.75973511]
[123.91183472 229.52346802]
[120.37216187 214.94709778]
[116.83248901 200.37072754]
[113.29281616 185.79434204]
[100.47884369 178.28851318]
[96.68146515 163.55641174]
[104.64116669 150.16682434]
[101.10149384 135.59045410]
[97.56182098 121.01407623]
[94.02214813 106.43770599]
[91.56304169 104.63706970]
[89.70475769 101.90186310]
[88.79471588 98.45291138]
[89.09387970 94.63626862]
[90.73319244 90.88852692]
[88.06739807 76.12730408]
[85.40160370 61.36608887]
[82.73580933 46.60487366]
[80.07001495 31.84365463]
[75.78769684 46.21939087]
[67.83243561 58.93606567]
[56.77853775 69.07566071]
[43.42398834 75.90618134]
[28.73286629 78.93453217]
[13.76573372 77.94209290]
[-0.39691797 73.00050354]
[-12.73267555 64.46650696]
[-22.35100937 52.95617676]
[-28.55756187 39.30045700]
[-30.90428162 24.48516464]
[-29.22175217 9.57982635]
[-23.63143730 -4.33952713]
[-14.53690910 -16.26804543]
[-2.59470797 -25.34459877]
[11.33304882 -30.91394424]
[26.24090385 -32.57402420]
[41.05264664 -30.20499611]
[54.69900131 -23.97788429]
[66.19483185 -14.34222698]
[74.71024323 -1.99363112]
[79.63072205 12.17758656]
[81.63474274 -2.68794131]
[83.63875580 -17.55346870]
[85.64276886 -32.41899872]
[87.64678192 -47.28452682]
[88.09338379 -62.27787781]
[86.97773743 -77.23632812]
[85.86209106 -92.19478607]
[84.74643707 -107.15323639]
[83.63079071 -122.11168671]
[68.72162628 -124.24024963]
[54.61875916 -129.52450562]
[41.98181915 -137.71730042]
[31.40185165 -148.43542480]
[23.37370491 -161.17759705]
[18.27286530 -175.34783936]
[16.33791161 -190.28335571]
[17.65934372 -205.28562927]
[22.17535591 -219.65293884]
[29.67472839 -232.71331787]
[39.80669785 -243.85589600]
[52.09737778 -252.55953979]
[65.97190857 -258.41714478]
[80.78135681 -261.15472412]
[95.83304596 -260.64428711]
[110.42299652 -256.90963745]
[123.86880493 -250.12551880]
[135.54158020 -240.60920715]
[144.89537048 -228.80578613]
[151.49269104 -215.26733398]
[155.02494812 -200.62707520]
[155.32695007 -185.56976318]
[152.38458252 -170.79963684]
[146.33544922 -157.00753784]
[137.46246338 -144.83854675]
[126.18066406 -134.86181641]
[113.01770782 -127.54399872]
[98.58924103 -123.22734070]
[99.70489502 -108.26888275]
[100.82054138 -93.31043243]
[101.93618774 -78.35197449]
[103.05184174 -63.39352417]
[109.68906403 -76.84518433]
[120.91799164 -86.79060364]
[135.07286072 -91.75443268]
[150.05389404 -91.00031281]
[163.63873291 -84.64012146]
[173.81216431 -73.61735535]
[179.06500244 -59.56717300]
[178.61802673 -44.57383347]
[172.53755188 -30.86151123]
[161.72555542 -20.46434975]
[147.78596497 -14.92470455]
[132.78662109 -15.06434917]
[118.95257568 -20.86256790]
[108.33604431 -31.45923042]
[102.51230621 -45.28051376]
[100.50829315 -30.41498375]
[98.50428009 -15.54945564]
[96.50026703 -0.68392766]
[94.49625397 14.18160057]
[94.83123016 29.17786026]
[97.49702454 43.93907547]
[100.16281891 58.70029449]
[102.82861328 73.46150970]
[105.49441528 88.22273254]
[108.59851837 102.89803314]
[112.13819122 117.47440338]
[115.67786407 132.05078125]
[119.21753693 146.62715149]
[132.43157959 154.87498474]
[135.81367493 169.70793152]
[127.86919403 182.25466919]
[131.40885925 196.83105469]
[134.94853210 211.40742493]
[138.48820496 225.98379517]
[149.26353455 237.56840515]
[144.74810791 251.76206970]
[148.28778076 266.33843994]
[163.07952881 263.81164551]
[178.01036072 262.31134033]
[193.00912476 261.84472656]
[208.00434875 262.41403198]
[222.92456055 264.01647949]
[237.69866943 266.64450073]
[252.25625610 270.28555298]
[266.52795410 274.92227173]
[280.44577026 280.53256226]
[293.94332886 287.08972168]
[306.95635986 294.56243896]
[319.42285156 302.91516113]
[331.28332520 312.10803223]
[342.48135376 322.09729004]
[352.96350098 332.83532715]
[362.67984009 344.27093506]
[371.58407593 356.34967041]
[379.63375854 369.01391602]
[386.79055786 382.20333862]
[393.02032471 395.85510254]
[398.29339600 409.90414429]
[402.58462524 424.28347778]
[405.87359619 438.92465210]
[408.14462280 453.75781250]
[409.38687134 468.71234131]
[409.59442139 483.71691895]
[408.76626587 498.70007324]
[406.90640259 513.59039307]
[404.02365112 528.31689453]
[400.13177490 542.80944824]
[395.24932861 556.99896240]
[389.39953613 570.81781006]
[382.61029053 584.20019531]
[374.91397095 597.08221436]
[366.34722900 609.40258789]
[356.95092773 621.10260010]
[346.76977539 632.12646484]
[335.85235596 642.42163086]
[324.25067139 651.93902588]
[312.01998901 660.63336182]
[299.21865845 668.46319580]
[285.90759277 675.39111328]
[272.15029907 681.38421631]
[258.01229858 686.41394043]
[243.56098938 690.45623779]
[228.86523438 693.49188232]
[213.99504089 695.50646973]
[199.02131653 696.49029541]
[184.01538086 696.43872070]
[169.04876709 695.35198975]
[154.19277954 693.23522949]
[139.51823425 690.09863281]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 158]
[38 157]
[40 155]
[41 154]
[42 153]
[43 152]
[46 149]
[47 148]
[48 147]
[49 146]
[54 145]
[55 144]
[56 143]
[57 142]
[58 141]
[80 140]
[81 139]
[82 138]
[83 137]
[84 136]
[85 121]
[86 120]
[87 119]
[88 118]
[89 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
