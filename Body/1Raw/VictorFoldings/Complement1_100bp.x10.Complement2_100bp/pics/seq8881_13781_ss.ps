%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[25.98816299 827.05511475]
[11.01357365 827.97039795]
[-3.98700094 828.21295166]
[-18.98335075 827.78216553]
[-33.94527817 826.67907715]
[-48.84264755 824.90582275]
[-63.64545822 822.46600342]
[-78.32389832 819.36450195]
[-92.84841156 815.60754395]
[-107.18975067 811.20275879]
[-121.31902313 806.15899658]
[-135.20777893 800.48632812]
[-148.82804871 794.19635010]
[-162.15240479 787.30157471]
[-175.15400696 779.81597900]
[-187.80668640 771.75457764]
[-200.08494568 763.13366699]
[-211.96406555 753.97058105]
[-223.42012024 744.28375244]
[-234.43003845 734.09265137]
[-244.97164917 723.41790771]
[-255.02372742 712.28094482]
[-264.56604004 700.70422363]
[-273.57934570 688.71105957]
[-282.04547119 676.32556152]
[-289.94744873 663.57269287]
[-297.26928711 650.47814941]
[-303.99627686 637.06835938]
[-310.11483765 623.37017822]
[-315.61270142 609.41131592]
[-320.47875977 595.21990967]
[-324.70321655 580.82440186]
[-328.27755737 566.25384521]
[-331.19461060 551.53765869]
[-333.44848633 536.70538330]
[-335.03463745 521.78692627]
[-335.94989014 506.81234741]
[-336.19235229 491.81176758]
[-335.76159668 476.81542969]
[-334.65847778 461.85351562]
[-332.88519287 446.95614624]
[-330.44531250 432.15332031]
[-327.34378052 417.47488403]
[-323.58682251 402.95037842]
[-319.18200684 388.60906982]
[-314.13818359 374.47979736]
[-308.46554565 360.59106445]
[-302.17550659 346.97079468]
[-295.28073120 333.64645386]
[-287.79510498 320.64486694]
[-279.73370361 307.99221802]
[-271.11273193 295.71395874]
[-261.94961548 283.83486938]
[-252.26275635 272.37881470]
[-242.07167053 261.36892700]
[-231.39689636 250.82733154]
[-220.25991821 240.77526855]
[-208.68316650 231.23298645]
[-196.68997192 222.21971130]
[-184.30447388 213.75358582]
[-171.55160522 205.85165405]
[-158.45706177 198.52983093]
[-145.04721069 191.80287170]
[-131.34906006 185.68432617]
[-117.39019012 180.18649292]
[-103.19872284 175.32046509]
[-88.80323029 171.09603882]
[-74.23270416 167.52171326]
[-59.51648331 164.60469055]
[-44.68421555 162.35084534]
[-29.76576042 160.76472473]
[-14.79116726 159.84951782]
[0.20940885 159.60705566]
[15.20575809 160.03784180]
[30.16767883 161.14100647]
[45.06504059 162.91432190]
[59.86784363 165.35421753]
[74.54627228 168.45578003]
[78.30257416 153.93371582]
[82.05887604 139.41166687]
[85.81517792 124.88960266]
[75.28865814 114.49314117]
[71.35304260 100.23112488]
[75.05802155 85.90747070]
[85.41542816 75.34251404]
[99.66276550 71.35409546]
[103.41906738 56.83203506]
[107.17536163 42.30997849]
[110.93166351 27.78791809]
[96.96290588 22.26946449]
[83.77819061 15.07620144]
[71.57741547 6.31717491]
[60.54552078 -3.87483025]
[50.84975815 -15.34530544]
[42.63711166 -27.92036247]
[36.03208160 -41.40936661]
[31.13479614 -55.60782242]
[28.01950264 -70.30049133]
[26.73342514 -85.26464081]
[27.29605865 -100.27340698]
[29.69887733 -115.09926605]
[33.90545273 -129.51745605]
[39.85201263 -143.30941772]
[47.44841385 -156.26605225]
[56.57949066 -168.19093323]
[67.10682678 -178.90330505]
[78.87081909 -188.24076843]
[91.69313812 -196.06175232]
[105.37939453 -202.24769592]
[119.72210693 -206.70483398]
[134.50386047 -209.36558533]
[149.50053406 -210.18963623]
[164.48481750 -209.16445923]
[179.22953796 -206.30563354]
[193.51116943 -201.65646362]
[207.11318970 -195.28744507]
[219.82942200 -187.29513550]
[231.46708679 -177.80068970]
[241.84974670 -166.94804382]
[250.82002258 -154.90171814]
[258.24191284 -141.84432983]
[264.00289917 -127.97383881]
[268.01562500 -113.50050354]
[270.21932983 -98.64373779]
[270.58053589 -83.62877655]
[269.09381104 -68.68323517]
[265.78167725 -54.03367996]
[260.69433594 -39.90220642]
[253.90893555 -26.50303268]
[245.52832031 -14.03929329]
[235.67953491 -2.69993377]
[224.51188660 7.34314489]
[212.19468689 15.93769073]
[198.91465759 22.95341492]
[184.87310791 28.28395844]
[170.28292847 31.84851265]
[155.36528015 33.59304047]
[140.34631348 33.49109268]
[125.45372772 31.54421806]
[121.69742584 46.06627655]
[117.94112396 60.58833694]
[114.18482208 75.11039734]
[124.71134186 85.50685883]
[128.64695740 99.76887512]
[124.94197845 114.09252930]
[114.58457184 124.65748596]
[100.33723450 128.64590454]
[96.58093262 143.16796875]
[92.82463837 157.69001770]
[89.06833649 172.21208191]
[103.40968323 176.61682129]
[117.53897858 181.66055298]
[131.42774963 187.33309937]
[145.04804993 193.62306213]
[158.37243652 200.51777649]
[171.37406921 208.00332642]
[184.02676392 216.06466675]
[196.30505371 224.68554688]
[208.18421936 233.84861755]
[219.64030457 243.53540039]
[230.65026855 253.72642517]
[241.19192505 264.40115356]
[251.24404907 275.53805542]
[260.78637695 287.11474609]
[269.79974365 299.10791016]
[278.26593018 311.49334717]
[286.16793823 324.24618530]
[293.48983765 337.34066772]
[300.21685791 350.75048828]
[306.33551025 364.44860840]
[311.83340454 378.40744019]
[316.69952393 392.59887695]
[320.92401123 406.99435425]
[324.49844360 421.56484985]
[327.41552734 436.28106689]
[329.66946411 451.11331177]
[331.25567627 466.03176880]
[332.17095947 481.00634766]
[332.41351318 496.00692749]
[331.98281860 511.00326538]
[330.87973022 525.96520996]
[329.10650635 540.86254883]
[326.66668701 555.66540527]
[323.56521606 570.34381104]
[319.80828857 584.86834717]
[315.40353394 599.20971680]
[310.35977173 613.33898926]
[304.68719482 627.22772217]
[298.39721680 640.84802246]
[291.50247192 654.17242432]
[284.01690674 667.17401123]
[275.95553589 679.82672119]
[267.33462524 692.10498047]
[258.17153931 703.98413086]
[248.48472595 715.44018555]
[238.29368591 726.45013428]
[227.61895752 736.99176025]
[216.48202515 747.04388428]
[204.90530396 756.58618164]
[192.91213989 765.59948730]
[180.52667236 774.06567383]
[167.77383423 781.96765137]
[154.67932129 789.28955078]
[141.26950073 796.01654053]
[127.57136536 802.13513184]
[113.61252594 807.63305664]
[99.42107391 812.49914551]
[85.02559662 816.72363281]
[70.45507812 820.29797363]
[55.73887253 823.21508789]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[78 150]
[79 149]
[80 148]
[81 147]
[86 142]
[87 141]
[88 140]
[89 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
