%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[157.46629333 719.26629639]
[146.14743042 709.41119385]
[135.64733887 698.68792725]
[126.03240967 687.16430664]
[117.36344147 674.91326904]
[109.69522858 662.01214600]
[103.07626343 648.54254150]
[97.54839325 634.58966064]
[93.14655304 620.24169922]
[89.89859009 605.58941650]
[87.82502747 590.72534180]
[86.93898773 575.74353027]
[87.24605560 560.73864746]
[88.74430847 545.80560303]
[91.42426300 531.03881836]
[95.26897430 516.53167725]
[100.25413513 502.37579346]
[106.34823608 488.66076660]
[113.51273346 475.47326660]
[121.70234680 462.89669800]
[130.86528015 451.01052856]
[140.94361877 439.88995361]
[151.87362671 429.60525513]
[163.58621216 420.22149658]
[176.00732422 411.79794312]
[189.05842590 404.38787842]
[202.65699768 398.03817749]
[197.41027832 383.98571777]
[192.16357422 369.93322754]
[186.91685486 355.88076782]
[175.21653748 346.66381836]
[177.63804626 331.02902222]
[172.39132690 316.97656250]
[167.14460754 302.92407227]
[155.44430542 293.70712280]
[157.86581421 278.07232666]
[152.61909485 264.01986694]
[147.37237549 249.96739197]
[142.12565613 235.91491699]
[136.87893677 221.86245728]
[125.17862701 212.64550781]
[127.60013580 197.01071167]
[122.35341644 182.95823669]
[117.10669708 168.90576172]
[111.85997772 154.85328674]
[106.61326599 140.80082703]
[101.36654663 126.74835205]
[96.11982727 112.69587708]
[94.61779785 127.62049103]
[89.98480225 141.88706970]
[82.43159485 154.84658813]
[72.30181122 165.90946960]
[60.05627823 174.57243347]
[46.25209045 180.44137573]
[31.51724625 183.24928284]
[16.52208138 182.86842346]
[1.94877744 179.31613159]
[-11.53967857 172.75399780]
[-23.32965088 163.48056030]
[-32.88477707 151.91770935]
[-39.77035904 138.59147644]
[-43.67315292 124.10809326]
[-44.41560364 109.12648010]
[-41.96393585 94.32819366]
[-36.42968369 80.38645172]
[-28.06462288 67.93552399]
[-17.24930191 57.54182816]
[-4.47574902 49.67821884]
[9.67492485 44.70243454]
[24.55895996 42.84084320]
[39.49922943 44.17813110]
[53.81605148 48.65346146]
[66.85810852 56.06323624]
[78.03207397 66.07035828]
[86.82959747 78.21957397]
[92.85176849 91.96231079]
[85.73839569 77.83041382]
[94.03628540 65.46132660]
[94.70606995 50.47628403]
[95.37585449 35.49124527]
[96.04563904 20.50620651]
[88.93226624 6.37431049]
[97.23015594 -5.99477863]
[97.89994049 -20.97981834]
[98.56972504 -35.96485519]
[97.89994049 -50.94989395]
[95.89592743 -65.81542206]
[93.89190674 -80.68095398]
[91.88789368 -95.54647827]
[89.88388062 -110.41201019]
[74.93174744 -112.49436951]
[61.09635544 -118.53460693]
[49.40438080 -128.08448792]
[40.72344971 -140.43536377]
[35.69774246 -154.67070007]
[34.70019913 -169.73414612]
[37.80484772 -184.50790405]
[44.78129959 -197.89564514]
[55.11185455 -208.90393066]
[68.02992249 -216.71585083]
[82.57688904 -220.75172424]
[97.67327881 -220.71205139]
[112.19884491 -216.59979248]
[125.07567596 -208.72009277]
[135.34823608 -197.65766907]
[142.25424194 -184.23344421]
[145.28120422 -169.44358826]
[144.20451355 -154.38558960]
[139.10406494 -140.17686462]
[130.35835266 -127.87178040]
[118.61635590 -118.38346863]
[104.74941254 -112.41602325]
[106.75342560 -97.55049133]
[108.75743866 -82.68496704]
[110.76145172 -67.81943512]
[112.76546478 -52.95390701]
[119.13745117 -66.53322601]
[130.71540833 -76.07004547]
[145.26380920 -79.72295380]
[159.97360229 -76.78663635]
[172.00456238 -67.82804108]
[179.03366089 -54.57694626]
[179.70373535 -39.59191895]
[173.88537598 -25.76633835]
[162.70202637 -15.76970673]
[148.31300354 -11.53221607]
[133.49662781 -13.87205982]
[121.11369324 -22.33745003]
[113.55476379 -35.29507065]
[112.88497925 -20.31003189]
[112.21519470 -5.32499361]
[119.37647247 7.73507261]
[111.03067780 21.17599106]
[110.36089325 36.16102982]
[109.69110870 51.14606857]
[109.02132416 66.13111115]
[116.18260193 79.19117737]
[107.83680725 92.63209534]
[110.17229462 107.44916534]
[115.41901398 121.50163269]
[120.66573334 135.55410767]
[125.91245270 149.60658264]
[131.15916443 163.65904236]
[136.40588379 177.71151733]
[141.65260315 191.76399231]
[153.72819519 201.98606873]
[150.93141174 216.61573792]
[156.17813110 230.66819763]
[161.42485046 244.72067261]
[166.67156982 258.77313232]
[171.91827393 272.82562256]
[183.99386597 283.04769897]
[181.19708252 297.67736816]
[186.44380188 311.72982788]
[191.69052124 325.78231812]
[203.76611328 336.00436401]
[200.96931458 350.63403320]
[206.21603394 364.68652344]
[211.46275330 378.73898315]
[216.70947266 392.79147339]
[231.14198303 388.67529297]
[245.85591125 385.71884155]
[260.75820923 383.94073486]
[275.75466919 383.35226440]
[290.75045776 383.95715332]
[305.65081787 385.75152588]
[320.36148071 388.72406006]
[334.78948975 392.85601807]
[348.84359741 398.12118530]
[362.43496704 404.48632812]
[375.47763062 411.91119385]
[387.88916016 420.34884644]
[399.59109497 429.74594116]
[410.50942993 440.04302979]
[420.57510376 451.17504883]
[429.72454834 463.07159424]
[437.89987183 475.65747070]
[445.04940796 488.85308838]
[451.12789917 502.57504272]
[456.09698486 516.73651123]
[459.92523193 531.24804688]
[462.58840942 546.01788330]
[464.06970215 560.95263672]
[464.35974121 575.95782471]
[463.45666504 590.93859863]
[461.36624146 605.80029297]
[458.10162354 620.44897461]
[453.68350220 634.79193115]
[448.13980103 648.73846436]
[441.50552368 662.20056152]
[433.82266235 675.09295654]
[425.13980103 687.33416748]
[415.51177979 698.84686279]
[404.99954224 709.55816650]
[393.66949463 719.40045166]
[381.59326172 728.31140137]
[368.84725952 736.23474121]
[355.51202393 743.12030029]
[341.67187500 748.92468262]
[327.41433716 753.61108398]
[312.82949829 757.14984131]
[298.00964355 759.51867676]
[283.04840088 760.70257568]
[268.04040527 760.69409180]
[253.08052063 759.49316406]
[238.26335144 757.10754395]
[223.68255615 753.55218506]
[209.43032837 748.84960938]
[195.59678650 743.02954102]
[182.26937866 736.12878418]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 160]
[28 159]
[29 158]
[30 157]
[32 155]
[33 154]
[34 153]
[36 151]
[37 150]
[38 149]
[39 148]
[40 147]
[42 145]
[43 144]
[44 143]
[45 142]
[46 141]
[47 140]
[48 139]
[76 138]
[78 136]
[79 135]
[80 134]
[81 133]
[83 131]
[84 130]
[85 129]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
