%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[198.53930664 281.01702881]
[202.72767639 266.60440063]
[208.10739136 252.59278870]
[214.64071655 239.08049011]
[222.28181458 226.16227722]
[210.05532837 217.47244263]
[197.82884216 208.78262329]
[182.97247314 207.71611023]
[176.20634460 193.41470337]
[182.53051758 207.01635742]
[183.58685303 221.97911072]
[179.23637390 236.33436584]
[170.05148315 248.19343567]
[157.24058533 255.99606323]
[142.48918152 258.71566772]
[127.73808289 255.99446106]
[114.92804718 248.19042969]
[105.74443817 236.33035278]
[101.39553833 221.97462463]
[102.45351410 207.01197815]
[108.77915955 193.41101074]
[119.54024506 182.96118164]
[133.32095337 177.03732300]
[148.30819702 176.41882324]
[162.53222656 181.18821716]
[152.53405762 170.00624084]
[142.53587341 158.82426453]
[132.53770447 147.64228821]
[122.53953552 136.46031189]
[112.54136658 125.27834320]
[102.54319000 114.09636688]
[89.32199860 109.54755402]
[86.27483368 95.90180206]
[81.31552124 94.27321625]
[77.82578278 91.21134949]
[76.10547638 87.51599884]
[76.09358215 83.99006653]
[66.60468292 72.37280273]
[57.11578369 60.75554276]
[47.62688446 49.13827896]
[38.13798523 37.52101517]
[28.64908791 25.90375137]
[19.16018867 14.28648853]
[9.67129040 2.66922498]
[-5.05102205 -3.12422705]
[-7.10979080 -17.87586212]
[-16.59869003 -29.49312592]
[-26.08758736 -41.11038971]
[-38.51686096 -32.69496536]
[-51.65045929 -25.42757988]
[-65.38262939 -19.36675072]
[-79.60282135 -14.56127548]
[-94.19651794 -11.04984665]
[-109.04623413 -8.86073589]
[-124.03240204 -8.01156807]
[-139.03434753 -8.50918198]
[-153.93130493 -10.34957123]
[-168.60331726 -13.51791573]
[-182.93225098 -17.98870659]
[-196.80273438 -23.72594833]
[-210.10308838 -30.68344498]
[-222.72622681 -38.80517960]
[-234.57051086 -48.02575684]
[-245.54058838 -58.27093887]
[-255.54811096 -69.45823669]
[-264.51254272 -81.49757385]
[-272.36163330 -94.29200745]
[-279.03225708 -107.73853302]
[-284.47067261 -121.72888947]
[-288.63308716 -136.15042114]
[-291.48602295 -150.88700867]
[-293.00646973 -165.82000732]
[-293.18218994 -180.82917786]
[-292.01177979 -195.79368591]
[-289.50466919 -210.59303284]
[-285.68103027 -225.10806274]
[-280.57165527 -239.22189331]
[-274.21768188 -252.82092285]
[-266.67025757 -265.79562378]
[-257.99017334 -278.04153442]
[-248.24729919 -289.46005249]
[-237.52011108 -299.95925903]
[-225.89494324 -309.45462036]
[-213.46540833 -317.86965942]
[-200.33158875 -325.13665771]
[-186.59922791 -331.19705200]
[-172.37889099 -336.00210571]
[-157.78509521 -339.51309204]
[-142.93530273 -341.70175171]
[-127.94911957 -342.55044556]
[-112.94718170 -342.05236816]
[-98.05027771 -340.21154785]
[-83.37837219 -337.04275513]
[-69.04957581 -332.57150269]
[-55.17926788 -326.83386230]
[-41.87912369 -319.87594604]
[-29.25622940 -311.75381470]
[-17.41222191 -302.53289795]
[-6.44246197 -292.28738403]
[3.56472564 -281.09976196]
[12.52876854 -269.06015015]
[20.37749100 -256.26547241]
[27.04769897 -242.81875610]
[32.48568726 -228.82823181]
[36.64767075 -214.40658569]
[39.50013733 -199.66990662]
[41.02012253 -184.73686218]
[41.19538879 -169.72767639]
[40.02452469 -154.76319885]
[37.51695633 -139.96394348]
[33.69287491 -125.44902802]
[28.58306694 -111.33534241]
[22.22867584 -97.73651886]
[14.68086720 -84.76204681]
[6.00041056 -72.51640320]
[-3.74280262 -61.09816742]
[-14.47032452 -50.59928894]
[-4.98142576 -38.98202515]
[4.50747252 -27.36475945]
[18.55107498 -22.40225220]
[21.28855324 -6.81967354]
[30.77745247 4.79758978]
[40.26634979 16.41485405]
[49.75524902 28.03211594]
[59.24414825 39.64937973]
[68.73304749 51.26664352]
[78.22194672 62.88390732]
[87.71084595 74.50116730]
[97.45681000 85.90363312]
[110.67800140 90.45244598]
[113.72516632 104.09819794]
[123.72333527 115.28016663]
[133.72151184 126.46214294]
[143.71968079 137.64411926]
[153.71784973 148.82609558]
[163.71603394 160.00807190]
[173.71420288 171.19004822]
[184.89617920 181.18821716]
[200.62705994 182.87628174]
[206.51866150 196.55613708]
[218.74514771 205.24595642]
[230.97163391 213.93579102]
[240.65953064 202.47230530]
[251.27268982 191.85971069]
[262.73666382 182.17240906]
[274.97106934 173.47837830]
[287.89004517 165.83860779]
[301.40301514 159.30665588]
[315.41519165 153.92837524]
[329.82824707 149.74147034]
[344.54110718 146.77529907]
[359.45059204 145.05068970]
[374.45205688 144.57972717]
[389.44036865 145.36572266]
[404.31030273 147.40316772]
[418.95761108 150.67774963]
[433.27954102 155.16651917]
[447.17562866 160.83796692]
[460.54840088 167.65234375]
[473.30404663 175.56182861]
[485.35308838 184.51095581]
[496.61105347 194.43693542]
[506.99893188 205.27014160]
[516.44384766 216.93461609]
[524.87957764 229.34851074]
[532.24700928 242.42474365]
[538.49432373 256.07162476]
[543.57781982 270.19342041]
[547.46179199 284.69104004]
[550.11895752 299.46282959]
[551.53076172 314.40518188]
[551.68731689 329.41323853]
[550.58740234 344.38174438]
[548.23876953 359.20574951]
[544.65802002 373.78121948]
[539.87011719 388.00595093]
[533.90869141 401.78012085]
[526.81561279 415.00717163]
[518.64056396 427.59426880]
[509.44091797 439.45315552]
[499.28118896 450.50064087]
[488.23269653 460.65921021]
[476.37286377 469.85763550]
[463.78491211 478.03140259]
[450.55715942 485.12316895]
[436.78237915 491.08316040]
[422.55715942 495.86959839]
[407.98132324 499.44891357]
[393.15710449 501.79598999]
[378.18847656 502.89437866]
[363.18041992 502.73635864]
[348.23822021 501.32302856]
[333.46670532 498.66430664]
[318.96945190 494.77886963]
[304.84820557 489.69393921]
[291.20196533 483.44522095]
[278.12646484 476.07650757]
[265.71343994 467.63949585]
[254.04992676 458.19335938]
[243.21777344 447.80438232]
[233.29293823 436.54541016]
[224.34504700 424.49545288]
[216.43685913 411.73898315]
[209.62385559 398.36553955]
[203.95381165 384.46887207]
[199.46650696 370.14648438]
[196.19340515 355.49884033]
[194.15748596 340.62869263]
[193.37301636 325.64031982]
[193.84550476 310.63888550]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 142]
[6 141]
[7 140]
[9 138]
[25 137]
[26 136]
[27 135]
[28 134]
[29 133]
[30 132]
[31 131]
[33 129]
[37 128]
[38 127]
[39 126]
[40 125]
[41 124]
[42 123]
[43 122]
[44 121]
[46 119]
[47 118]
[48 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
