%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[168.20565796 800.48522949]
[154.02304077 795.59112549]
[140.10882568 789.97924805]
[126.49929810 783.66424561]
[113.22997284 776.66253662]
[100.33547211 768.99243164]
[87.84943390 760.67395020]
[75.80442810 751.72875977]
[64.23188019 742.18017578]
[53.16199112 732.05316162]
[42.62363052 721.37414551]
[32.64429092 710.17095947]
[23.25001526 698.47283936]
[14.46530724 686.31030273]
[6.31308699 673.71508789]
[-1.18537831 660.72003174]
[-8.01052570 647.35900879]
[-14.14454842 633.66693115]
[-19.57144356 619.67956543]
[-24.27705383 605.43328857]
[-28.24910164 590.96533203]
[-31.47722626 576.31347656]
[-33.95300293 561.51586914]
[-35.66997528 546.61114502]
[-36.62366104 531.63818359]
[-36.81157684 516.63610840]
[-36.23322678 501.64395142]
[-34.89012527 486.70089722]
[-32.78577042 471.84591675]
[-29.92565727 457.11776733]
[-26.31724358 442.55487061]
[-21.96994781 428.19522095]
[-16.89510727 414.07626343]
[-11.10596466 400.23486328]
[-4.61762142 386.70712280]
[2.55299425 373.52832031]
[10.38717461 360.73284912]
[18.86448097 348.35406494]
[27.96279907 336.42431641]
[37.65839005 324.97467041]
[47.92596054 314.03503418]
[58.73871994 303.63394165]
[70.06846619 293.79852295]
[81.88563538 284.55444336]
[94.15939331 275.92578125]
[106.85773468 267.93511963]
[119.94751740 260.60324097]
[133.39459229 253.94932556]
[147.16387939 247.99069214]
[141.91716003 233.93821716]
[136.67044067 219.88574219]
[131.42372131 205.83328247]
[126.17700958 191.78080750]
[114.47669983 182.56385803]
[116.89820862 166.92906189]
[111.65148926 152.87658691]
[106.40476990 138.82412720]
[101.15805054 124.77165222]
[95.91133118 110.71917725]
[91.85736084 125.16097260]
[81.19491577 135.71142578]
[66.71112823 139.61268616]
[52.19202423 135.84497070]
[41.43286896 125.39315796]
[37.24607468 110.98931122]
[40.72606277 96.39857483]
[50.96316910 85.43492126]
[65.28144073 80.96423340]
[79.93811798 84.15513611]
[91.10149384 94.17279053]
[87.99738312 79.49748993]
[83.86968994 74.33282471]
[83.08732605 68.70388794]
[85.02619171 64.33927917]
[82.36039734 49.57806396]
[79.69460297 34.81684494]
[77.02880859 20.05562973]
[74.36301422 5.29441166]
[71.69721985 -9.46680546]
[69.03141785 -24.22802353]
[66.36562347 -38.98923874]
[51.33204269 -38.78620911]
[36.47010040 -41.06054688]
[22.18524933 -45.75020218]
[8.86718845 -52.72724152]
[-3.12075758 -61.80132675]
[-13.45154762 -72.72490692]
[-21.84334946 -85.19998169]
[-28.06723022 -98.88622284]
[-31.95339584 -113.41025543]
[-33.39583206 -128.37585449]
[-32.35518265 -143.37475586]
[-28.85984421 -157.99777222]
[-23.00516701 -171.84596252]
[-14.95087337 -184.54156494]
[-4.91668892 -195.73822021]
[6.82364607 -205.13047791]
[19.94984627 -212.46209717]
[34.10382080 -217.53308105]
[48.89943314 -220.20509338]
[63.93305588 -220.40522766]
[78.79455566 -218.12802124]
[93.07850647 -213.43562317]
[106.39522552 -206.45600891]
[118.38142395 -197.37962341]
[128.71011353 -186.45404053]
[137.09950256 -173.97735596]
[143.32075500 -160.28991699]
[147.20411682 -145.76513672]
[148.64366150 -130.79925537]
[147.60012817 -115.80055237]
[144.10197449 -101.17821503]
[138.24462891 -87.33114624]
[130.18789673 -74.63710022]
[120.15155029 -63.44238281]
[108.40940094 -54.05239105]
[95.28179169 -46.72329712]
[81.12684631 -41.65503693]
[83.79264069 -26.89381790]
[86.45843506 -12.13260078]
[89.12422943 2.62861609]
[91.79002380 17.38983345]
[94.45581818 32.15105057]
[97.12161255 46.91226959]
[99.78741455 61.67348480]
[102.67268372 76.39337921]
[105.77679443 91.06867981]
[109.96380615 105.47245789]
[115.21052551 119.52493286]
[120.45724487 133.57740784]
[125.70395660 147.62986755]
[130.95068359 161.68234253]
[143.02626038 171.90441895]
[140.22947693 186.53408813]
[145.47619629 200.58656311]
[150.72291565 214.63903809]
[155.96963501 228.69149780]
[161.21635437 242.74397278]
[175.52149963 238.22055054]
[190.03895569 234.43347168]
[204.73085022 231.39259338]
[219.55885315 229.10586548]
[234.48426819 227.57925415]
[249.46817017 226.81672668]
[264.47146606 226.82028198]
[279.45498657 227.58992004]
[294.37966919 229.12361145]
[309.20660400 231.41737366]
[323.89703369 234.46520996]
[338.41268921 238.25918579]
[352.71569824 242.78938293]
[366.76873779 248.04399109]
[380.53512573 254.00930786]
[393.97897339 260.66976929]
[407.06518555 268.00799561]
[419.75964355 276.00482178]
[432.02923584 284.63943481]
[443.84188843 293.88925171]
[455.16687012 303.73016357]
[465.97457886 314.13650513]
[476.23684692 325.08111572]
[485.92687988 336.53546143]
[495.01940918 348.46963501]
[503.49069214 360.85253906]
[511.31866455 373.65182495]
[518.48284912 386.83410645]
[524.96466064 400.36499023]
[530.74707031 414.20919800]
[535.81506348 428.33062744]
[540.15539551 442.69238281]
[543.75671387 457.25701904]
[546.60968018 471.98657227]
[548.70684814 486.84255981]
[550.04266357 501.78625488]
[550.61376953 516.77868652]
[550.41857910 531.78070068]
[549.45758057 546.75317383]
[547.73339844 561.65704346]
[545.25042725 576.45343018]
[542.01519775 591.10375977]
[538.03613281 605.56976318]
[533.32360840 619.81378174]
[527.88989258 633.79852295]
[521.74926758 647.48760986]
[514.91760254 660.84527588]
[507.41284180 673.83666992]
[499.25448608 686.42797852]
[490.46389771 698.58624268]
[481.06393433 710.27984619]
[471.07916260 721.47814941]
[460.53561401 732.15209961]
[449.46081543 742.27368164]
[437.88363647 751.81665039]
[425.83428955 760.75598145]
[413.34420776 769.06842041]
[400.44598389 776.73223877]
[387.17324829 783.72747803]
[373.56066895 790.03588867]
[359.64373779 795.64105225]
[345.45874023 800.52825928]
[331.04272461 804.68475342]
[316.43325806 808.09979248]
[301.66848755 810.76434326]
[286.78689575 812.67156982]
[271.82736206 813.81640625]
[256.82888794 814.19592285]
[241.83058167 813.80914307]
[226.87159729 812.65704346]
[211.99095154 810.74261475]
[197.22746277 808.07080078]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 138]
[50 137]
[51 136]
[52 135]
[53 134]
[55 132]
[56 131]
[57 130]
[58 129]
[59 128]
[70 127]
[71 126]
[74 125]
[75 124]
[76 123]
[77 122]
[78 121]
[79 120]
[80 119]
[81 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
