%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[264.16918945 312.24462891]
[272.73910522 299.91842651]
[261.33663940 290.17248535]
[249.93417358 280.42651367]
[238.53170776 270.68054199]
[227.12925720 260.93457031]
[215.72679138 251.18861389]
[204.32432556 241.44264221]
[192.36198425 232.39263916]
[179.88220215 224.07069397]
[187.37370300 237.06597900]
[191.58483887 251.46272278]
[192.27748108 266.44671631]
[189.41241455 281.17056274]
[183.15168762 294.80154419]
[173.84939575 306.56875610]
[162.03160095 315.80670166]
[148.36666870 321.99295044]
[133.62741089 324.77761841]
[118.64741516 324.00323486]
[104.27386475 319.71359253]
[91.31965637 312.15127563]
[80.51741028 301.74398804]
[72.47805023 289.08032227]
[67.65623474 274.87643433]
[66.32466888 259.93566895]
[68.55865479 245.10295105]
[74.23184967 231.21717834]
[83.02340698 219.06364441]
[94.43611908 209.32968140]
[107.82454681 202.56581116]
[122.43151093 199.15454102]
[137.43090820 199.28881836]
[151.97445679 202.96104431]
[165.24052429 209.96414185]
[156.45993042 197.80267334]
[147.67932129 185.64122009]
[138.89871216 173.47976685]
[130.11811829 161.31831360]
[121.33750916 149.15686035]
[117.88385773 163.75384521]
[105.19309998 171.75039673]
[90.53507996 168.56568909]
[82.30657196 156.02409363]
[85.22124481 141.30999756]
[97.60943604 132.85229492]
[112.37383270 135.49545288]
[104.71323395 122.59912109]
[97.05263519 109.70279694]
[90.55570221 104.93180084]
[89.37563324 96.55693817]
[90.26589966 111.53050232]
[87.45461273 126.26470184]
[81.11367035 139.85853577]
[71.63083649 151.48074341]
[59.58597946 160.42062378]
[45.71565247 166.13150024]
[30.86803246 168.26414490]
[15.95105553 166.68814087]
[1.87689924 161.49987793]
[-10.49379539 153.01660156]
[-20.40455437 141.75708008]
[-27.24933243 128.40983582]
[-30.60956955 113.79105377]
[-30.27978516 98.79467773]
[-26.28014374 84.33774567]
[-18.85522652 71.30430603]
[-8.45907116 60.49135208]
[4.27259445 52.56010437]
[18.56122398 47.99556351]
[33.53306198 47.07684708]
[48.27257919 49.86014175]
[61.87844086 56.17524338]
[73.51864624 65.63597870]
[82.48140717 77.66385651]
[79.81561279 62.90263748]
[77.14981842 48.14142227]
[67.08312225 35.93600082]
[72.43537140 22.03626251]
[69.76957703 7.27504539]
[59.70288086 -4.93037319]
[65.05512238 -18.83011246]
[50.01628113 -18.76469231]
[35.19458008 -21.31192017]
[21.04044342 -26.39439011]
[7.98399353 -33.85765076]
[-3.57799625 -43.47489929]
[-13.29417038 -54.95388412]
[-20.86926651 -67.94577026]
[-26.07308388 -82.05574036]
[-28.74748802 -96.85502625]
[-28.81120300 -111.89387512]
[-26.26229286 -126.71528625]
[-21.17821884 -140.86885071]
[-13.71347809 -153.92445374]
[-4.09491587 -165.48535156]
[7.38516998 -175.20022583]
[20.37791252 -182.77384949]
[34.48847961 -187.97605896]
[49.28806305 -190.64878845]
[64.32691956 -190.71080017]
[79.14804077 -188.16020203]
[93.30102539 -183.07452393]
[106.35578156 -175.60830688]
[117.91558838 -165.98843384]
[127.62915802 -154.50724792]
[135.20130920 -141.51364136]
[140.40193176 -127.40248871]
[143.07296753 -112.60260010]
[143.13327026 -97.56373596]
[140.58100891 -82.74290466]
[135.49372864 -68.59049225]
[128.02601624 -55.53658676]
[118.40483856 -43.97786713]
[106.92254639 -34.26560211]
[93.92808533 -26.69492531]
[79.81634521 -21.49590874]
[89.69235992 -10.34631062]
[84.53079224 4.60925007]
[87.19658661 19.37046623]
[97.07260132 30.52006531]
[91.91103363 45.47562408]
[94.57682800 60.23684311]
[97.24263000 74.99806213]
[102.38459015 89.08920288]
[109.94896698 102.04219818]
[117.60956573 114.93852234]
[125.27015686 127.83485413]
[133.49896240 140.37625122]
[142.27957153 152.53770447]
[151.06018066 164.69915771]
[159.84077454 176.86062622]
[168.62138367 189.02207947]
[177.40197754 201.18353271]
[188.20414734 211.59091187]
[200.68392944 219.91284180]
[196.76872253 205.43281555]
[202.00448608 191.37626648]
[214.43838501 182.98591614]
[229.43292236 183.39117432]
[241.39546204 192.44090271]
[245.86430359 206.75975037]
[241.17268372 221.00715637]
[229.07043457 229.86918640]
[214.07029724 230.04017639]
[225.47276306 239.78614807]
[236.87521362 249.53210449]
[248.27767944 259.27807617]
[259.68014526 269.02404785]
[271.08261108 278.77001953]
[282.48507690 288.51596069]
[293.32659912 278.13137817]
[305.14825439 268.87789917]
[317.83251953 260.84747314]
[331.25335693 254.11988831]
[345.27734375 248.76205444]
[359.76510620 244.82719421]
[374.57266235 242.35443115]
[389.55285645 241.36833191]
[404.55679321 241.87869263]
[419.43536377 243.88044739]
[434.04067993 247.35369873]
[448.22756958 252.26393127]
[461.85507202 258.56234741]
[474.78771973 266.18634033]
[486.89700317 275.06015015]
[498.06253052 285.09555054]
[508.17337036 296.19284058]
[517.12896729 308.24169922]
[524.84045410 321.12237549]
[531.23101807 334.70690918]
[536.23730469 348.86019897]
[539.80938721 363.44165039]
[541.91192627 378.30630493]
[542.52392578 393.30642700]
[541.63934326 408.29296875]
[539.26696777 423.11694336]
[535.43035889 437.63104248]
[530.16766357 451.69100952]
[523.53118896 465.15710449]
[515.58685303 477.89550781]
[506.41369629 489.77957153]
[496.10281372 500.69122314]
[484.75668335 510.52200317]
[472.48812866 519.17419434]
[459.41900635 526.56188965]
[445.67929077 532.61151123]
[431.40545654 537.26306152]
[416.73944092 540.47021484]
[401.82693481 542.20117188]
[386.81619263 542.43872070]
[371.85641479 541.18048096]
[357.09622192 538.43896484]
[342.68237305 534.24139404]
[328.75811768 528.62951660]
[315.46179199 521.65905762]
[302.92559814 513.39935303]
[291.27410889 503.93252563]
[280.62313843 493.35256958]
[271.07852173 481.76470947]
[262.73513794 469.28405762]
[255.67590332 456.03469849]
[249.97096252 442.14828491]
[245.67704773 427.76284790]
[242.83680725 413.02133179]
[241.47848511 398.07031250]
[241.61557007 383.05831909]
[243.24670410 368.13458252]
[246.35566711 353.44741821]
[250.91159058 339.14279175]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 136]
[10 135]
[35 134]
[36 133]
[37 132]
[38 131]
[39 130]
[40 129]
[47 128]
[48 127]
[49 126]
[51 125]
[75 124]
[76 123]
[77 122]
[79 120]
[80 119]
[82 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
