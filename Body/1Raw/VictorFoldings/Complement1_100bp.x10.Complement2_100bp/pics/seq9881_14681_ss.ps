%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[59.33509064 819.65075684]
[44.54912567 822.21545410]
[29.61539459 823.69396973]
[14.61357594 824.07849121]
[-0.37628803 823.36688232]
[-15.27421951 821.56298828]
[-30.00073051 818.67639160]
[-44.47724533 814.72259521]
[-58.62652969 809.72253418]
[-72.37308502 803.70306396]
[-85.64357758 796.69616699]
[-98.36718750 788.73925781]
[-110.47603607 779.87481689]
[-121.90551758 770.15014648]
[-132.59465027 759.61712646]
[-142.48638916 748.33190918]
[-151.52798462 736.35473633]
[-159.67115784 723.74957275]
[-166.87249756 710.58355713]
[-173.09356689 696.92706299]
[-178.30117798 682.85284424]
[-182.46752930 668.43603516]
[-185.57040405 653.75360107]
[-187.59323120 638.88378906]
[-188.52525330 623.90600586]
[-188.36146545 608.90014648]
[-187.10275269 593.94628906]
[-184.75582886 579.12420654]
[-181.33322144 564.51300049]
[-176.85319519 550.19055176]
[-171.33963013 536.23339844]
[-164.82196045 522.71588135]
[-157.33497620 509.71023560]
[-148.91859436 497.28576660]
[-139.61773682 485.50881958]
[-129.48202515 474.44223022]
[-118.56552887 464.14501953]
[-106.92651367 454.67211914]
[-94.62706757 446.07409668]
[-81.73281097 438.39682007]
[-68.31254578 431.68124390]
[-54.43787384 425.96319580]
[-40.18282700 421.27322388]
[-25.62345886 417.63629150]
[-10.83745098 415.07183838]
[4.09630489 413.59356689]
[19.09812927 413.20932007]
[34.08798218 413.92117310]
[48.98588562 415.72531128]
[51.87115860 401.00540161]
[54.75642776 386.28552246]
[57.64170074 371.56564331]
[60.52697372 356.84573364]
[63.41224670 342.12585449]
[66.29752350 327.40594482]
[69.07312775 312.66500854]
[71.73892975 297.90377808]
[74.40472412 283.14254761]
[77.07051849 268.38134766]
[79.73631287 253.62011719]
[82.40210724 238.85890198]
[77.04986572 224.95916748]
[87.11655426 212.75375366]
[89.78235626 197.99253845]
[91.23177338 183.06272888]
[91.45510101 168.06439209]
[91.67842865 153.06605530]
[91.90175629 138.06771851]
[92.12508392 123.06937408]
[92.34841156 108.07103729]
[80.85877228 117.71408081]
[65.90434265 116.54576874]
[56.05169296 105.23536682]
[56.94486618 90.26197815]
[68.07221985 80.20304871]
[83.05949402 80.82078552]
[93.32096100 91.76043701]
[94.88148499 76.84182739]
[96.44200897 61.92322540]
[96.55367279 46.92364120]
[95.21543884 31.98345757]
[83.37107849 21.86669159]
[82.22674561 6.69615555]
[91.94453430 -4.53328323]
[90.60630035 -19.47346878]
[89.26806641 -34.41365433]
[78.32826996 -49.22589111]
[86.32735443 -64.84580231]
[84.76683044 -79.76440430]
[83.20630646 -94.68301392]
[81.64578247 -109.60161591]
[66.76227570 -112.12823486]
[53.11285782 -118.57772827]
[41.71040344 -128.47149658]
[33.40105057 -141.07534790]
[28.80141068 -155.45401001]
[28.25280762 -170.54048157]
[31.79594803 -185.21525574]
[39.16791153 -198.38934326]
[49.82164383 -209.08515930]
[62.96657562 -216.50900269]
[77.62725830 -220.10997009]
[92.71577454 -219.62083435]
[107.11245728 -215.07792664]
[119.74897003 -206.81832886]
[129.68762207 -195.45495605]
[136.19087219 -181.83106995]
[138.77613831 -166.95764160]
[137.25160217 -151.93836975]
[131.73036194 -137.88780212]
[122.62215424 -125.84857178]
[110.60285950 -116.71407318]
[96.56439209 -111.16213989]
[98.12490845 -96.24353790]
[99.68543243 -81.32492828]
[101.24595642 -66.40632629]
[110.44235229 -58.54802704]
[111.86454773 -46.13186264]
[104.20824432 -35.75188828]
[105.54648590 -20.81170273]
[106.88471985 -5.87151718]
[118.44349670 3.45212030]
[120.01348114 18.58452797]
[110.15562439 30.64522171]
[111.49385834 45.58540726]
[118.17465973 32.15533447]
[129.68833923 22.54100418]
[144.09461975 18.36259460]
[158.96578979 20.32424355]
[171.79580688 28.09538078]
[180.42259216 40.36643219]
[183.39236450 55.06950760]
[180.20468140 69.72688293]
[171.39671326 81.86853027]
[158.45275879 89.44837189]
[143.55409241 91.18907166]
[129.21142578 86.79728699]
[117.84172821 77.01311493]
[111.36061096 63.48374939]
[109.80008698 78.40235138]
[108.23956299 93.32096100]
[107.34674835 108.29436493]
[107.12342072 123.29270172]
[106.90009308 138.29104614]
[106.67676544 153.28938293]
[106.45343781 168.28771973]
[106.23011017 183.28605652]
[114.87152863 171.02529907]
[128.17863464 164.10281372]
[143.17858887 164.06506348]
[156.52035522 170.92050171]
[165.22335815 183.13761902]
[167.34332275 197.98704529]
[162.40664673 212.15141296]
[151.51618958 222.46635437]
[137.10490417 226.62747192]
[122.39231873 223.70518494]
[110.66526031 214.35232544]
[104.54357147 200.65832520]
[101.87777710 215.41954041]
[107.03934479 230.37510681]
[97.16332245 241.52470398]
[94.49752808 256.28591919]
[91.83173370 271.04714966]
[89.16593933 285.80834961]
[86.50014496 300.56958008]
[83.83435059 315.33078003]
[85.38881683 324.33197021]
[81.01741028 330.29122925]
[78.13214111 345.01110840]
[75.24686432 359.73101807]
[72.36159515 374.45089722]
[69.47631836 389.17080688]
[66.59104919 403.89068604]
[63.70577621 418.61056519]
[78.18235779 422.56417847]
[92.33172607 427.56396484]
[106.07837677 433.58325195]
[119.34898376 440.58993530]
[132.07272339 448.54660034]
[144.18171692 457.41085815]
[155.61135864 467.13534546]
[166.30065918 477.66821289]
[176.19259644 488.95324707]
[185.23437500 500.93023682]
[193.37777710 513.53527832]
[200.57933044 526.70117188]
[206.80061340 540.35760498]
[212.00845337 554.43170166]
[216.17503357 568.84844971]
[219.27815247 583.53082275]
[221.30123901 598.40057373]
[222.23348999 613.37835693]
[222.06996155 628.38421631]
[220.81149292 643.33807373]
[218.46481323 658.16021729]
[215.04244995 672.77154541]
[210.56263733 687.09399414]
[205.04931641 701.05126953]
[198.53187561 714.56890869]
[191.04508972 727.57464600]
[182.62892151 739.99926758]
[173.32824707 751.77636719]
[163.19271851 762.84313965]
[152.27639771 773.14050293]
[140.63754272 782.61358643]
[128.33822632 791.21185303]
[115.44409943 798.88934326]
[102.02394867 805.60510254]
[88.14937592 811.32336426]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 175]
[50 174]
[51 173]
[52 172]
[53 171]
[54 170]
[55 169]
[56 167]
[57 166]
[58 165]
[59 164]
[60 163]
[61 162]
[63 160]
[64 159]
[65 147]
[66 146]
[67 145]
[68 144]
[69 143]
[70 142]
[77 141]
[78 140]
[79 139]
[80 125]
[81 124]
[84 121]
[85 120]
[86 119]
[88 116]
[89 115]
[90 114]
[91 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
