%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[24.80195618 555.78906250]
[22.61841011 570.68261719]
[17.48119164 584.83160400]
[9.60066795 597.65667725]
[-0.70045990 608.63262939]
[-13.00036621 617.30999756]
[-26.79537773 623.33349609]
[-41.52059937 626.45642090]
[-56.57304001 626.55096436]
[-71.33631134 623.61315918]
[-85.20587158 617.76336670]
[-97.61376190 609.24108887]
[-108.05189514 598.39532471]
[-116.09282684 585.67022705]
[-121.40730286 571.58685303]
[-123.77767944 556.72192383]
[-123.10690308 541.68414307]
[-119.42243958 527.08929443]
[-112.87516785 513.53503418]
[-103.73318481 501.57638550]
[-92.37085724 491.70306396]
[-79.25346375 484.31936646]
[-64.91815186 479.72766113]
[-49.95194626 478.11596680]
[-34.96770096 479.55029297]
[-30.56670380 465.21044922]
[-26.16570473 450.87060547]
[-21.76470757 436.53076172]
[-17.36370850 422.19091797]
[-12.96271133 407.85107422]
[-8.56171322 393.51123047]
[-22.14308167 386.27520752]
[-34.06120682 376.53280640]
[-43.85969925 364.65475464]
[-51.16289139 351.09356689]
[-55.69022369 336.36642456]
[-57.26703644 321.03533936]
[-55.83129883 305.68572998]
[-51.43606186 290.90411377]
[-44.24747467 277.25558472]
[-34.53852463 265.26232910]
[-22.67867470 255.38363647]
[-9.11977863 247.99821472]
[5.62110472 243.38975525]
[20.98144913 241.73600769]
[36.37472153 243.10195923]
[32.49757767 228.72082520]
[43.77943420 217.62892151]
[47.96644592 203.22514343]
[52.15345764 188.82136536]
[40.27510834 197.98132324]
[25.42163467 200.07281494]
[11.47570229 194.54914856]
[2.08274102 182.85417175]
[-0.30195057 168.04495239]
[4.94498014 153.99255371]
[16.45199776 144.37026978]
[31.21119690 141.69331360]
[45.36455536 146.66145325]
[55.21242142 157.97602844]
[58.18064117 172.67854309]
[64.45800018 159.05522156]
[70.73535919 145.43190002]
[77.01272583 131.80859375]
[83.29008484 118.18527222]
[89.56744385 104.56195831]
[76.18631744 111.34026337]
[61.25426865 109.91410065]
[49.39815903 100.72537231]
[44.29172897 86.62132263]
[47.51726151 71.97222900]
[58.07529449 61.31727982]
[72.69430542 57.95802307]
[86.84442902 62.93536758]
[96.14110565 74.70702362]
[97.70359802 89.62567139]
[98.56999207 73.82820129]
[111.92438507 67.23204041]
[119.96556091 54.56951523]
[128.00672913 41.90699005]
[136.04789734 29.24446487]
[144.08908081 16.58194160]
[136.17427063 4.87286663]
[133.32867432 -8.92665577]
[135.94958496 -22.72652245]
[143.60887146 -34.44940567]
[155.12248230 -42.34344864]
[168.73345947 -45.24405289]
[182.37991333 -42.74557495]
[190.60871887 -55.28697586]
[198.83752441 -67.82837677]
[200.92883301 -76.72018433]
[207.28337097 -80.49398041]
[215.69799805 -92.91147614]
[224.11260986 -105.32897186]
[232.52723694 -117.74646759]
[240.94184875 -130.16395569]
[242.27819824 -145.92863464]
[255.82307434 -152.12425232]
[244.45275879 -161.93406677]
[234.29820251 -172.99758911]
[225.49673462 -185.16520691]
[218.16738892 -198.27235413]
[212.40928650 -212.14176941]
[208.30027771 -226.58589172]
[205.89596558 -241.40937805]
[205.22885132 -256.41174316]
[206.30793762 -271.39013672]
[209.11866760 -286.14196777]
[213.62300110 -300.46774292]
[219.76002502 -314.17370605]
[227.44676208 -327.07449341]
[236.57923889 -338.99566650]
[247.03395081 -349.77600098]
[258.66952515 -359.26968384]
[271.32858276 -367.34832764]
[284.83993530 -373.90270996]
[299.02087402 -378.84414673]
[313.67959595 -382.10583496]
[328.61785889 -383.64364624]
[343.63363647 -383.43682861]
[358.52386475 -381.48812866]
[373.08718872 -377.82391357]
[387.12661743 -372.49374390]
[400.45230103 -365.56970215]
[412.88406372 -357.14541626]
[424.25372314 -347.33483887]
[434.40753174 -336.27066040]
[443.20819092 -324.10244751]
[450.53665161 -310.99481201]
[456.29382324 -297.12503052]
[460.40185547 -282.68063354]
[462.80520630 -267.85696411]
[463.47131348 -252.85455322]
[462.39123535 -237.87623596]
[459.57952881 -223.12458801]
[455.07421875 -208.79913330]
[448.93627930 -195.09358215]
[441.24868774 -182.19329834]
[432.11541748 -170.27272034]
[421.65997314 -159.49310303]
[410.02377319 -150.00019836]
[397.36416626 -141.92237854]
[383.85238647 -135.36891174]
[369.67111206 -130.42842102]
[355.01217651 -127.16770935]
[340.07382202 -125.63088226]
[325.05804443 -125.83872223]
[310.16796875 -127.78842163]
[295.60488892 -131.45359802]
[281.56579590 -136.78471375]
[268.24057007 -143.70964050]
[267.50607300 -128.83316040]
[253.35934448 -121.74934387]
[244.94473267 -109.33184814]
[236.53010559 -96.91435242]
[228.11549377 -84.49685669]
[219.70086670 -72.07936096]
[211.37893677 -59.59956741]
[203.15011597 -47.05816650]
[194.92131042 -34.51676941]
[203.41595459 -20.98193741]
[205.16409302 -5.03961182]
[199.76528931 10.12404537]
[188.25257874 21.45621300]
[172.89524841 26.65199471]
[156.75160217 24.62311363]
[148.71043396 37.28563690]
[140.66925049 49.94816208]
[132.62808228 62.61068726]
[124.58691406 75.27321625]
[124.29568481 90.16497040]
[110.36612701 97.66683960]
[103.19075775 110.83931732]
[96.91339874 124.46263123]
[90.63603973 138.08595276]
[84.35868073 151.70925903]
[78.08131409 165.33258057]
[71.80395508 178.95590210]
[66.55723572 193.00837708]
[62.37022781 207.41215515]
[58.18321609 221.81593323]
[61.76087570 237.22732544]
[50.77850342 247.28897095]
[63.81491470 253.94514465]
[75.39782715 262.88763428]
[85.13124084 273.80880737]
[92.68275452 286.33337402]
[97.79489899 300.03140259]
[100.29390717 314.43295288]
[100.09564972 329.04425049]
[97.20843506 343.36459351]
[91.73268890 356.90356445]
[83.85747528 369.19781494]
[73.85392761 379.82684326]
[62.06595612 388.42745972]
[48.89841080 394.70617676]
[34.80316544 398.44918823]
[20.26362228 399.52969360]
[5.77813387 397.91223145]
[1.37713587 412.25207520]
[-3.02386212 426.59191895]
[-7.42486000 440.93176270]
[-11.82585812 455.27160645]
[-16.22685623 469.61145020]
[-20.62785530 483.95129395]
[-7.41878319 491.16970825]
[4.06662035 500.89956665]
[13.35803604 512.74249268]
[20.07498550 526.21343994]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 206]
[26 205]
[27 204]
[28 203]
[29 202]
[30 201]
[31 200]
[46 184]
[48 182]
[49 181]
[50 180]
[61 179]
[62 178]
[63 177]
[64 176]
[65 175]
[66 174]
[76 173]
[78 171]
[79 170]
[80 169]
[81 168]
[82 167]
[89 161]
[90 160]
[91 159]
[93 158]
[94 157]
[95 156]
[96 155]
[97 154]
[99 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
