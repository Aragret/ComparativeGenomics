%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[45.46052170 518.05206299]
[52.08287811 531.61846924]
[54.79835892 546.46868896]
[53.40545654 561.50073242]
[48.00753403 575.59912109]
[39.00514984 587.71771240]
[27.06634140 596.95715332]
[13.07704926 602.63183594]
[-1.92462802 604.32073975]
[-16.82546616 601.89837646]
[-30.51972580 595.54467773]
[-41.99120331 585.73101807]
[-50.38863373 573.18566895]
[-55.08887482 558.83959961]
[-55.74313736 543.75732422]
[-52.30287170 529.05810547]
[-45.02336884 515.83270264]
[-34.44481277 505.06253052]
[-21.35220718 497.54678345]
[-6.71710634 493.84323120]
[8.37446594 494.22665405]
[12.77546406 479.88681030]
[7.93026781 463.01992798]
[21.51492882 450.58859253]
[25.70194054 436.18481445]
[29.88895226 421.78103638]
[34.07596207 407.37722778]
[38.26297379 392.97344971]
[42.44998550 378.56967163]
[33.67075729 370.18515015]
[29.26338768 358.79620361]
[30.12150955 346.54202271]
[36.14349365 335.75244141]
[46.24011230 328.50491333]
[58.53109360 326.22467041]
[63.14510345 311.95193481]
[67.75911713 297.67919922]
[72.37312317 283.40646362]
[76.98712921 269.13372803]
[79.65293121 254.37251282]
[80.32271576 239.38746643]
[80.99250031 224.40243530]
[81.66228485 209.41738892]
[79.87229919 207.26005554]
[78.82901001 204.26370239]
[78.85626984 200.70916748]
[80.17037201 196.98927307]
[82.84436798 193.56819153]
[84.40489197 178.64959717]
[85.96540833 163.73098755]
[87.52593231 148.81237793]
[89.08645630 133.89378357]
[90.64698029 118.97517395]
[92.20750427 104.05657196]
[90.49582672 101.53472900]
[89.66390991 98.33435059]
[89.96485138 94.78007507]
[91.52825165 91.28549957]
[94.33084869 88.30583954]
[96.77658081 73.50656891]
[99.22230530 58.70729446]
[101.66802979 43.90802383]
[104.11376190 29.10875511]
[105.22940826 14.15030098]
[105.00608063 -0.84803635]
[104.78275299 -15.84637356]
[104.55942535 -30.84471130]
[94.75161743 -46.42958832]
[103.89030457 -61.41128922]
[103.44369507 -76.40464020]
[102.99708557 -91.39798737]
[102.55048370 -106.39134216]
[101.76915741 -121.37097931]
[100.65351105 -136.32943726]
[99.53786469 -151.28788757]
[98.42221832 -166.24633789]
[83.75047302 -169.87918091]
[70.93730927 -177.85823059]
[61.23089218 -189.39138794]
[55.57218170 -203.34107971]
[54.50368500 -218.33644104]
[58.11750031 -232.90803528]
[66.04749298 -245.63185120]
[77.50638580 -255.26844788]
[91.36386108 -260.88372803]
[90.24821472 -275.84216309]
[89.13256073 -290.80062866]
[80.39028168 -303.98709106]
[87.15953827 -317.25460815]
[72.25037384 -319.38314819]
[58.14751053 -324.66741943]
[45.51057053 -332.86019897]
[34.93060303 -343.57833862]
[26.90245438 -356.32049561]
[21.80161667 -370.49075317]
[19.86666298 -385.42626953]
[21.18809509 -400.42852783]
[25.70410728 -414.79583740]
[33.20347977 -427.85623169]
[43.33544922 -438.99880981]
[55.62612915 -447.70245361]
[69.50065613 -453.56005859]
[84.31010437 -456.29763794]
[99.36180115 -455.78720093]
[113.95174408 -452.05255127]
[127.39755249 -445.26843262]
[139.07032776 -435.75210571]
[148.42411804 -423.94869995]
[155.02143860 -410.41024780]
[158.55369568 -395.76998901]
[158.85571289 -380.71267700]
[155.91333008 -365.94253540]
[149.86419678 -352.15045166]
[140.99122620 -339.98144531]
[129.70941162 -330.00473022]
[116.54645538 -322.68692017]
[102.11799622 -318.37023926]
[110.78047943 -306.25369263]
[104.09101868 -291.91629028]
[105.20666504 -276.95782471]
[106.32231140 -261.99935913]
[120.85945129 -258.50186157]
[133.62106323 -250.67169189]
[143.35078430 -239.26501465]
[149.08618164 -225.39071655]
[150.25393677 -210.40275574]
[146.72715759 -195.76797485]
[138.83897400 -182.92254639]
[127.35118103 -173.13105774]
[113.38066864 -167.36198425]
[114.49631500 -152.40353394]
[115.61196899 -137.44508362]
[116.72761536 -122.48662567]
[119.14639282 -119.92111969]
[120.44271851 -116.05658722]
[120.01956940 -111.43335724]
[117.54383087 -106.83794403]
[117.99044037 -91.84459686]
[118.43704224 -76.85124969]
[118.88365173 -61.85789490]
[127.47010040 -53.33736801]
[127.96488190 -40.84981537]
[119.55776215 -31.06803894]
[119.78108978 -16.06970215]
[120.00441742 -1.07136405]
[120.22774506 13.92697334]
[128.16822815 1.20106232]
[140.79742432 -6.89236164]
[155.67681885 -8.79058552]
[169.93347168 -4.12709093]
[180.81460571 6.19767284]
[186.21926880 20.19015694]
[185.10389709 35.14863205]
[177.68385315 48.18484879]
[165.39183044 56.78171921]
[150.60122681 59.27932358]
[136.16787720 55.19541550]
[124.87863159 45.31852722]
[118.91303253 31.55448151]
[116.46730804 46.35375214]
[114.02157593 61.15302277]
[111.57585144 75.95229340]
[109.13011932 90.75156403]
[107.12610626 105.61709595]
[105.56558228 120.53569794]
[104.00506592 135.45429993]
[102.44454193 150.37290955]
[100.88401794 165.29151917]
[99.32349396 180.21011353]
[97.76296997 195.12872314]
[96.64732361 210.08717346]
[95.97753906 225.07221985]
[95.30775452 240.05725098]
[94.63796997 255.04229736]
[102.22786713 242.10423279]
[113.40254211 232.09790039]
[127.09687805 225.97703552]
[142.00563049 224.32502747]
[156.70779419 227.29934692]
[169.80203247 234.61650085]
[180.04031372 245.57905579]
[186.44676208 259.14215088]
[188.41078186 274.01300049]
[185.74516296 288.77426147]
[178.70396423 302.01895142]
[167.95832825 312.48464966]
[154.53245544 319.17388916]
[139.70599365 321.44906616]
[124.89214325 319.09329224]
[111.50283813 312.33117676]
[100.81427002 301.80715942]
[93.84519958 288.52438354]
[91.25986481 273.74774170]
[86.64585876 288.02047729]
[82.03184509 302.29321289]
[77.41783905 316.56594849]
[72.80382538 330.83865356]
[83.91534424 345.16668701]
[84.19922638 363.13885498]
[73.73055267 377.55612183]
[56.85376740 382.75668335]
[52.66675568 397.16046143]
[48.47974396 411.56423950]
[44.29273224 425.96804810]
[40.10572433 440.37182617]
[35.91871262 454.77560425]
[41.43543243 466.43444824]
[37.65153122 478.34518433]
[27.11531067 484.28781128]
[22.71431351 498.62765503]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 210]
[22 209]
[24 206]
[25 205]
[26 204]
[27 203]
[28 202]
[29 201]
[35 197]
[36 196]
[37 195]
[38 194]
[39 193]
[40 174]
[41 173]
[42 172]
[43 171]
[48 170]
[49 169]
[50 168]
[51 167]
[52 166]
[53 165]
[54 164]
[59 163]
[60 162]
[61 161]
[62 160]
[63 159]
[64 146]
[65 145]
[66 144]
[67 143]
[69 140]
[70 139]
[71 138]
[72 137]
[73 133]
[74 132]
[75 131]
[76 130]
[85 121]
[86 120]
[87 119]
[89 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
