%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxGUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAG\
) } def
/len { sequence length } bind def

/coor [
[180.79029846 329.68103027]
[186.06811523 315.62429810]
[192.83482361 302.22061157]
[201.01109314 289.62713623]
[210.50103760 277.99148560]
[221.19340515 267.45010376]
[207.22525024 262.27908325]
[204.72007751 246.65747070]
[195.40519714 234.90020752]
[186.09031677 223.14295959]
[176.77542114 211.38571167]
[167.46054077 199.62846375]
[154.57933044 199.95033264]
[143.70230103 192.68588257]
[138.92495728 180.30090332]
[142.20042419 167.23623657]
[128.31080627 161.85778809]
[126.03849030 146.20062256]
[116.89968872 134.30598450]
[107.76088715 122.41135406]
[98.62208557 110.51671600]
[88.96127319 99.04201508]
[78.79772949 88.01013947]
[68.63417816 76.97826385]
[58.47063446 65.94638824]
[48.30708694 54.91450882]
[48.69475174 69.90950012]
[40.28982544 82.33355713]
[26.22713089 87.55281067]
[11.75170803 83.62061310]
[2.26253366 72.00357819]
[1.29883337 57.03456497]
[9.22004414 44.29665375]
[23.07174873 38.54076385]
[37.68861008 41.91430283]
[28.90800667 29.75284576]
[20.12740326 17.59139061]
[7.31874132 20.83788109]
[-5.79911375 19.54154968]
[-17.66693687 13.87829208]
[-26.88150024 4.54176950]
[-32.36148453 -7.34148788]
[-33.47433472 -20.34797859]
[-30.10922432 -32.92774582]
[-22.68765068 -43.58908081]
[-31.10227013 -56.00657654]
[-39.51688766 -68.42407227]
[-48.20671463 -80.65055847]
[-57.16740799 -92.67993164]
[-66.12810516 -104.70931244]
[-75.08879852 -116.73869324]
[-84.04949951 -128.76806641]
[-98.49843597 -135.21313477]
[-99.89645386 -150.04197693]
[-112.79464722 -142.35818481]
[-126.41453552 -136.04133606]
[-140.61175537 -131.15840149]
[-155.23579407 -127.76114655]
[-170.13165283 -125.88557434]
[-185.14138794 -125.55156708]
[-200.10592651 -126.76268005]
[-214.86660767 -129.50605774]
[-229.26698303 -133.75262451]
[-243.15438843 -139.45736694]
[-256.38159180 -146.55981445]
[-268.80841064 -154.98466492]
[-280.30310059 -164.64262390]
[-290.74383545 -175.43130493]
[-300.01986694 -187.23634338]
[-308.03292847 -199.93260193]
[-314.69805908 -213.38548279]
[-319.94461060 -227.45239258]
[-323.71694946 -241.98419189]
[-325.97509766 -256.82687378]
[-326.69512939 -271.82305908]
[-325.86938477 -286.81378174]
[-323.50662231 -301.64016724]
[-319.63192749 -316.14501953]
[-314.28631592 -330.17456055]
[-307.52648926 -343.58013916]
[-299.42410278 -356.21957397]
[-290.06506348 -367.95889282]
[-279.54852295 -378.67370605]
[-267.98602295 -388.25036621]
[-255.50010681 -396.58740234]
[-242.22314453 -403.59640503]
[-228.29586792 -409.20306396]
[-213.86590576 -413.34799194]
[-199.08624268 -415.98724365]
[-184.11354065 -417.09280396]
[-169.10652161 -416.65295410]
[-154.22427368 -414.67239380]
[-139.62454224 -411.17211914]
[-125.46211243 -406.18920898]
[-111.88709259 -399.77648926]
[-99.04340363 -392.00192261]
[-87.06719208 -382.94796753]
[-76.08540344 -372.71057129]
[-66.21445465 -361.39825439]
[-57.55898666 -349.13092041]
[-50.21075439 -336.03866577]
[-44.24764633 -322.26022339]
[-39.73287964 -307.94168091]
[-36.71430969 -293.23480225]
[-35.22393799 -278.29550171]
[-35.27756500 -263.28213501]
[-36.87461472 -248.35385132]
[-39.99816513 -233.66891479]
[-44.61510468 -219.38298035]
[-50.67648315 -205.64749146]
[-58.11805725 -192.60804749]
[-66.86093140 -180.40287781]
[-76.81243896 -169.16136169]
[-87.86708069 -159.00267029]
[-74.05906677 -153.41802979]
[-72.02011871 -137.72875977]
[-63.05942154 -125.69938660]
[-54.09872818 -113.67000580]
[-45.13803101 -101.64063263]
[-36.17733383 -89.61125183]
[-32.76016235 -88.74218750]
[-29.59415817 -86.17480469]
[-27.47295189 -82.04518127]
[-27.09939384 -76.83869171]
[-18.68477440 -64.42119598]
[-10.27015591 -52.00370026]
[6.36522055 -54.95737839]
[22.67152405 -50.32724380]
[35.35489273 -38.99827576]
[41.83134842 -23.21363068]
[40.75312805 -6.13062811]
[32.28886032 8.81078720]
[41.06946182 20.97224236]
[49.85006714 33.13369751]
[59.33896637 44.75096130]
[69.50251007 55.78284073]
[79.66606140 66.81472015]
[89.82960510 77.84659576]
[99.99314880 88.87847137]
[101.68775940 73.97450256]
[113.33835602 64.52656555]
[128.27096558 65.94687653]
[137.93150330 77.42180634]
[136.78596497 92.37799835]
[125.49058533 102.24787140]
[110.51671600 101.37791443]
[119.65551758 113.27254486]
[128.79432678 125.16718292]
[137.93312073 137.06181335]
[152.47642517 143.29103088]
[154.09506226 158.09742737]
[171.47892761 160.05201721]
[181.86616516 173.70559692]
[179.21780396 190.31356812]
[188.53268433 202.07083130]
[197.84756470 213.82807922]
[207.16244507 225.58532715]
[216.47732544 237.34257507]
[231.11175537 243.35458374]
[232.95066833 258.13522339]
[245.65830994 250.13754272]
[259.15615845 243.56069946]
[273.28601074 238.48181152]
[287.88214111 234.96041870]
[302.77343750 233.03782654]
[317.78530884 232.73655701]
[332.74176025 234.06015015]
[347.46740723 236.99308777]
[361.78964233 241.50099182]
[375.54049683 247.53099060]
[388.55880737 255.01240540]
[400.69186401 263.85751343]
[411.79748535 273.96258545]
[421.74539185 285.20916748]
[430.41903687 297.46542358]
[437.71664429 310.58761597]
[443.55270386 324.42190552]
[447.85876465 338.80609131]
[450.58435059 353.57156372]
[451.69754028 368.54513550]
[451.18521118 383.55130005]
[449.05340576 398.41409302]
[445.32714844 412.95925903]
[440.05007935 427.01626587]
[433.28408813 440.42031860]
[425.10848999 453.01425171]
[415.61917114 464.65042114]
[404.92736816 475.19235229]
[393.15844727 484.51647949]
[380.45037842 492.51348877]
[366.95214844 499.08963013]
[352.82205200 504.16775513]
[338.22573853 507.68835449]
[323.33432007 509.61013794]
[308.32241821 509.91061401]
[293.36605835 508.58621216]
[278.64053345 505.65246582]
[264.31857300 501.14379883]
[250.56802368 495.11306763]
[237.55014038 487.63095093]
[225.41754150 478.78518677]
[214.31248474 468.67950439]
[204.36515808 457.43237305]
[195.69219971 445.17568970]
[188.39527893 432.05310059]
[182.55996704 418.21847534]
[178.25466919 403.83404541]
[175.52987671 389.06845093]
[174.41751099 374.09481812]
[174.93064880 359.08868408]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 160]
[8 158]
[9 157]
[10 156]
[11 155]
[12 154]
[16 151]
[18 149]
[19 148]
[20 147]
[21 146]
[22 139]
[23 138]
[24 137]
[25 136]
[26 135]
[35 134]
[36 133]
[37 132]
[45 126]
[46 125]
[47 124]
[48 120]
[49 119]
[50 118]
[51 117]
[52 116]
[54 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
