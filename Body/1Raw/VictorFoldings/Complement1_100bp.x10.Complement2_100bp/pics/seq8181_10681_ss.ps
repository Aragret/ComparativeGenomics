%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[167.19117737 575.94152832]
[175.88400269 563.63781738]
[187.09706116 553.57720947]
[200.26792908 546.26452637]
[196.08091736 531.86071777]
[191.89390564 517.45690918]
[187.70689392 503.05316162]
[183.51988220 488.64938354]
[179.33287048 474.24560547]
[175.14585876 459.84179688]
[166.99116516 472.43151855]
[152.35209656 475.70223999]
[139.61457825 467.78039551]
[136.07525635 453.20391846]
[143.76161194 440.32293701]
[158.27053833 436.51620483]
[171.29008484 443.96368408]
[168.40481567 429.24380493]
[165.51953125 414.52392578]
[162.63426208 399.80401611]
[159.74899292 385.08413696]
[156.42672729 370.45666504]
[152.67042542 355.93460083]
[148.91413879 341.41253662]
[145.15783691 326.89050293]
[141.40153503 312.36843872]
[130.72360229 301.98425293]
[134.75852966 286.68621826]
[131.00222778 272.16415405]
[127.24592590 257.64212036]
[116.56799316 247.25793457]
[120.60292053 231.95989990]
[116.84661865 217.43783569]
[113.09031677 202.91578674]
[108.37197113 197.22729492]
[109.38791656 188.14953613]
[105.84824371 173.57315063]
[102.30857086 158.99678040]
[98.76889801 144.42041016]
[91.83714294 157.72268677]
[78.46216583 164.51312256]
[63.63249588 162.25901794]
[52.87923813 151.80113220]
[50.21309280 137.03997803]
[56.62846375 123.48110962]
[69.73257446 116.18164062]
[84.63792419 117.86410522]
[95.78575897 127.90198517]
[94.00329590 113.00826263]
[85.77754974 101.70213318]
[91.10298920 88.77420044]
[89.32051849 73.88048553]
[71.84433746 70.24576569]
[56.68046570 60.87367249]
[45.64379883 46.90501404]
[40.04873657 30.02958298]
[40.55265808 12.28175259]
[47.07872009 -4.20477390]
[58.82705688 -17.45348740]
[74.37277985 -25.88202286]
[71.70698547 -40.64324188]
[69.04119110 -55.40445709]
[66.37539673 -70.16567230]
[63.70959854 -84.92689514]
[60.60548782 -99.60219574]
[57.06581497 -114.17857361]
[53.52614212 -128.75494385]
[49.98646927 -143.33131409]
[46.44679642 -157.90769958]
[42.90712738 -172.48406982]
[39.36745453 -187.06044006]
[35.82778168 -201.63682556]
[25.05245590 -213.22142029]
[29.56788254 -227.41508484]
[19.65345383 -216.15879822]
[4.66469622 -216.73942566]
[-4.34923601 -228.72897339]
[-0.74360710 -243.28916931]
[12.82364750 -249.68679810]
[26.35021400 -243.20703125]
[23.90448570 -258.00631714]
[21.45875931 -272.80557251]
[19.01303101 -287.60485840]
[9.42005730 -276.07336426]
[-5.50395012 -274.56539917]
[-17.20984077 -283.94473267]
[-18.99194908 -298.83850098]
[-9.82940388 -310.71484375]
[5.02907467 -312.77047729]
[17.07138252 -303.82864380]
[15.95573425 -318.78710938]
[14.84008503 -333.74554443]
[6.09780598 -346.93203735]
[12.86706448 -360.19952393]
[-1.78582561 -364.01678467]
[-14.40393925 -372.38708496]
[-23.61855698 -384.40246582]
[-28.43014526 -398.75961304]
[-28.31678009 -413.90115356]
[-23.29075813 -428.18463135]
[-13.89726639 -440.06069946]
[-1.15523732 -448.24111938]
[13.55316734 -451.83856201]
[28.63249016 -450.46276855]
[42.44703674 -444.26303101]
[53.49831390 -433.91180420]
[60.58755493 -420.53192139]
[62.94577789 -405.57470703]
[60.31717682 -390.66265869]
[52.98688507 -377.41329956]
[41.75003433 -367.26382446]
[27.82551765 -361.31518555]
[36.48799896 -349.19863892]
[29.79853821 -334.86120605]
[30.91418648 -319.90274048]
[32.02983475 -304.94430542]
[33.81230164 -290.05056763]
[36.25802994 -275.25131226]
[38.70375824 -260.45202637]
[41.14948273 -245.65277100]
[44.14425659 -230.95475769]
[54.66640472 -220.41276550]
[50.40415573 -205.17649841]
[53.94382858 -190.60011292]
[57.48350143 -176.02374268]
[61.02317429 -161.44737244]
[64.56284332 -146.87098694]
[68.10251617 -132.29461670]
[71.64218903 -117.71823883]
[75.18186188 -103.14186859]
[77.50288391 -101.56993103]
[79.34109497 -98.98388672]
[80.30710602 -95.56303406]
[80.08358765 -91.62418365]
[78.47081757 -87.59268951]
[81.13661194 -72.83147430]
[83.80240631 -58.07025146]
[86.46820068 -43.30903625]
[89.13399506 -28.54781914]
[101.41010284 -27.48338509]
[113.08276367 -23.50122643]
[123.46841431 -16.82893372]
[131.95753479 -7.85179186]
[138.05041504 2.90946245]
[141.38650513 14.82884502]
[141.76583862 27.21154022]
[139.16096497 39.33439636]
[133.71884155 50.48817062]
[125.75260162 60.01901245]
[115.72350311 67.36679077]
[104.21424103 72.09801483]
[105.99670410 86.99173737]
[114.22245026 98.29786682]
[108.89701080 111.22579956]
[110.67948151 126.11951447]
[113.34527588 140.88073730]
[116.88494873 155.45710754]
[120.42462158 170.03347778]
[123.96429443 184.60986328]
[127.61238098 199.15948486]
[131.36868286 213.68153381]
[135.12498474 228.20359802]
[146.07159424 239.62648010]
[141.76799011 253.88580322]
[145.52429199 268.40786743]
[149.28059387 282.92993164]
[160.22718811 294.35281372]
[155.92358398 308.61212158]
[159.67988586 323.13418579]
[163.43618774 337.65625000]
[167.19248962 352.17831421]
[170.94879150 366.70037842]
[174.10069275 369.68692017]
[175.95207214 373.17074585]
[176.50630188 376.68188477]
[175.91903687 379.79986572]
[174.46888733 382.19885254]
[177.35415649 396.91876221]
[180.23942566 411.63864136]
[183.12469482 426.35852051]
[186.00997925 441.07843018]
[189.54965210 455.65478516]
[193.73666382 470.05859375]
[197.92367554 484.46237183]
[202.11068726 498.86614990]
[206.29769897 513.26989746]
[210.48471069 527.67370605]
[214.67170715 542.07751465]
[229.71034241 541.19006348]
[244.56930542 543.67175293]
[258.50329590 549.39819336]
[270.81335449 558.08209229]
[280.88208008 569.28784180]
[288.20437622 582.45336914]
[292.41296387 596.91833496]
[293.29678345 611.95715332]
[290.81143188 626.81555176]
[285.08163452 640.74810791]
[276.39480591 653.05609131]
[265.18661499 663.12207031]
[252.01928711 670.44122314]
[237.55328369 674.64630127]
[222.51423645 675.52642822]
[207.65647888 673.03753662]
[193.72528076 667.30438232]
[181.41940308 658.61450195]
[171.35612488 647.40386963]
[164.04020691 634.23480225]
[159.83862305 619.76776123]
[158.96211243 604.72851562]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 188]
[5 187]
[6 186]
[7 185]
[8 184]
[9 183]
[10 182]
[17 181]
[18 180]
[19 179]
[20 178]
[21 177]
[22 172]
[23 171]
[24 170]
[25 169]
[26 168]
[28 166]
[29 165]
[30 164]
[32 162]
[33 161]
[34 160]
[36 159]
[37 158]
[38 157]
[39 156]
[48 155]
[49 154]
[51 152]
[52 151]
[60 139]
[61 138]
[62 137]
[63 136]
[64 135]
[65 130]
[66 129]
[67 128]
[68 127]
[69 126]
[70 125]
[71 124]
[72 123]
[74 121]
[80 120]
[81 119]
[82 118]
[83 117]
[90 116]
[91 115]
[92 114]
[94 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
