%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAUxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[127.19612122 914.62811279]
[112.30303955 912.82135010]
[97.50005341 910.38421631]
[82.81385040 907.32098389]
[68.27088165 903.63720703]
[53.89736557 899.33953857]
[39.71919632 894.43572998]
[25.76192474 888.93457031]
[12.05070591 882.84600830]
[-1.38975215 876.18103027]
[-14.53522968 868.95159912]
[-27.36203766 861.17077637]
[-39.84706116 852.85260010]
[-51.96779633 844.01202393]
[-63.70241165 834.66497803]
[-75.02974701 824.82836914]
[-85.92940521 814.51983643]
[-96.38172913 803.75799561]
[-106.36789703 792.56225586]
[-115.86990356 780.95281982]
[-124.87062073 768.95050049]
[-133.35385132 756.57702637]
[-141.30427551 743.85467529]
[-148.70759583 730.80633545]
[-155.55044556 717.45556641]
[-161.82051086 703.82635498]
[-167.50648499 689.94335938]
[-172.59812927 675.83154297]
[-177.08625793 661.51635742]
[-180.96279907 647.02362061]
[-184.22074890 632.37933350]
[-186.85424805 617.61004639]
[-188.85853577 602.74224854]
[-190.23001099 587.80279541]
[-190.96620178 572.81860352]
[-191.06579590 557.81671143]
[-190.52857971 542.82403564]
[-189.35556030 527.86767578]
[-187.54881287 512.97460938]
[-185.11163330 498.17166138]
[-182.04837036 483.48544312]
[-178.36457825 468.94247437]
[-174.06689453 454.56896973]
[-169.16304016 440.39080811]
[-163.66186523 426.43356323]
[-157.57328796 412.72235107]
[-150.90827942 399.28189087]
[-143.67883301 386.13644409]
[-135.89801025 373.30963135]
[-127.57979584 360.82461548]
[-118.73920441 348.70388794]
[-109.39215851 336.96929932]
[-99.55550385 325.64196777]
[-89.24697113 314.74234009]
[-78.48512268 304.29003906]
[-67.28937531 294.30389404]
[-55.67988205 284.80191040]
[-43.67757416 275.80120850]
[-31.30407906 267.31799316]
[-18.58169746 259.36758423]
[-5.53335333 251.96429443]
[7.81743860 245.12145996]
[21.44661903 238.85140991]
[35.32962799 233.16545105]
[49.44144821 228.07383728]
[63.75664520 223.58572388]
[78.24942780 219.70921326]
[92.89367676 216.45129395]
[107.66299438 213.81782532]
[105.65898132 198.95230103]
[103.65496826 184.08676147]
[101.65095520 169.22123718]
[99.64694214 154.35571289]
[97.64292908 139.49018860]
[95.63891602 124.62465668]
[93.63490295 109.75912476]
[87.26291656 123.33843994]
[75.68495941 132.87525940]
[61.13655090 136.52816772]
[46.42675781 133.59185791]
[34.39580917 124.63326263]
[27.36669922 111.38216400]
[26.69663429 96.39713287]
[32.51499557 82.57155609]
[43.69834518 72.57492065]
[58.08735657 68.33743286]
[72.90373993 70.67727661]
[85.28667450 79.14266968]
[92.84560394 92.10028839]
[93.51538849 77.11524963]
[94.18517303 62.13021088]
[94.85495758 47.14517212]
[95.52474213 32.16013336]
[80.97415924 28.27497864]
[67.59915161 21.35230827]
[56.02530670 11.71590900]
[46.79395294 -0.18350929]
[40.33685303 -13.78938770]
[36.95602036 -28.46535683]
[36.80958176 -43.52499008]
[39.90438461 -58.26392746]
[46.09568405 -71.99279785]
[55.09389877 -84.06948090]
[66.47816467 -93.92912292]
[79.71601868 -101.11057281]
[94.18830872 -105.27794647]
[109.21813202 -106.23632050]
[124.10251617 -103.94087219]
[138.14529419 -98.49897003]
[150.68966675 -90.16513062]
[161.14891052 -79.32914734]
[169.03381348 -66.49784088]
[173.97558594 -52.27135849]
[175.74310303 -37.31509018]
[174.25369263 -22.32857323]
[169.57702637 -8.01275063]
[161.93180847 4.96279860]
[151.67565918 15.99118519]
[139.28823853 24.55659103]
[125.34896851 30.25839615]
[110.50978088 32.82991791]
[109.83999634 47.81495667]
[109.17021179 62.79999542]
[108.50042725 77.78503418]
[107.83064270 92.77007294]
[108.50042725 107.75511169]
[110.50444031 122.62063599]
[112.50845337 137.48616028]
[114.51246643 152.35169983]
[116.51648712 167.21722412]
[118.52050018 182.08274841]
[120.52451324 196.94828796]
[122.52852631 211.81381226]
[137.46797180 210.44226074]
[152.45214844 209.70599365]
[167.45408630 209.60633850]
[182.44674683 210.14346313]
[197.40307617 211.31642151]
[212.29617310 213.12309265]
[227.09915161 215.56021118]
[241.78536987 218.62339783]
[256.32833862 222.30711365]
[270.70187378 226.60473633]
[284.88006592 231.50851440]
[298.83737183 237.00962830]
[312.54858398 243.09814453]
[325.98907471 249.76309204]
[339.13458252 256.99246216]
[351.96139526 264.77322388]
[364.44647217 273.09136963]
[376.56723022 281.93191528]
[388.30187988 291.27890015]
[399.62924194 301.11550903]
[410.52893066 311.42398071]
[420.98129272 322.18579102]
[430.96749878 333.38150024]
[440.46954346 344.99093628]
[449.47030640 356.99319458]
[457.95355225 369.36663818]
[465.90402222 382.08898926]
[473.30737305 395.13729858]
[480.15026855 408.48806763]
[486.42037964 422.11721802]
[492.10641479 436.00018311]
[497.19808960 450.11199951]
[501.68627930 464.42715454]
[505.56286621 478.91992188]
[508.82086182 493.56414795]
[511.45440674 508.33346558]
[513.45874023 523.20123291]
[514.83026123 538.14068604]
[515.56652832 553.12487793]
[515.66613770 568.12683105]
[515.12896729 583.11944580]
[513.95599365 598.07580566]
[512.14929199 612.96887207]
[509.71215820 627.77185059]
[506.64895630 642.45806885]
[502.96520996 657.00103760]
[498.66757202 671.37457275]
[493.76376343 685.55273438]
[488.26263428 699.51000977]
[482.17410278 713.22125244]
[475.50912476 726.66174316]
[468.27972412 739.80718994]
[460.49893188 752.63403320]
[452.18078613 765.11907959]
[443.34020996 777.23980713]
[433.99322510 788.97442627]
[424.15658569 800.30181885]
[413.84808350 811.20147705]
[403.08627319 821.65380859]
[391.89056396 831.64001465]
[380.28109741 841.14202881]
[368.27883911 850.14276123]
[355.90536499 858.62603760]
[343.18301392 866.57647705]
[330.13467407 873.97979736]
[316.78390503 880.82269287]
[303.15475464 887.09277344]
[289.27175903 892.77874756]
[275.15994263 897.87042236]
[260.84475708 902.35858154]
[246.35200500 906.23516846]
[231.70776367 909.49310303]
[216.93846130 912.12664795]
[202.07067871 914.13092041]
[187.13124084 915.50244141]
[172.14704895 916.23864746]
[157.14511108 916.33825684]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 133]
[70 132]
[71 131]
[72 130]
[73 129]
[74 128]
[75 127]
[76 126]
[89 125]
[90 124]
[91 123]
[92 122]
[93 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
