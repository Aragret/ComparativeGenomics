%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[138.49526978 316.93777466]
[132.48823547 330.69326782]
[125.28899384 343.86401367]
[116.95388794 356.34695435]
[107.54814148 368.04434204]
[97.14537048 378.86471558]
[85.82700348 388.72332764]
[73.68161011 397.54299927]
[60.80425262 405.25476074]
[47.29571152 411.79824829]
[33.26171875 417.12222290]
[18.81210709 421.18499756]
[4.05996466 423.95483398]
[-10.87924767 425.41003418]
[-25.88860893 425.53915405]
[-40.85065079 424.34127808]
[-55.64826965 421.82568359]
[-70.16564941 418.01214600]
[-84.28917694 412.93045044]
[-97.90830994 406.62039185]
[-110.91646576 399.13134766]
[-123.21182251 390.52194214]
[-134.69815063 380.85955811]
[-145.28556824 370.21981812]
[-154.89120483 358.68597412]
[-163.43988037 346.34832764]
[-170.86468506 333.30340576]
[-177.10752869 319.65332031]
[-182.11952209 305.50491333]
[-185.86145020 290.96890259]
[-188.30403137 276.15905762]
[-189.42814636 261.19128418]
[-189.22500610 246.18275452]
[-187.69618225 231.25090027]
[-184.85365295 216.51258850]
[-180.71965027 202.08319092]
[-175.32655334 188.07560730]
[-168.71656799 174.59950256]
[-160.94140625 161.76033020]
[-152.06192017 149.65856934]
[-142.14764404 138.38893127]
[-131.27612305 128.03964233]
[-119.53247070 118.69168854]
[-107.00859833 110.41822815]
[-93.80251312 103.28401184]
[-80.01758575 97.34488678]
[-65.76168823 92.64731598]
[-51.14640808 89.22808838]
[-36.28612137 87.11394501]
[-21.29714203 86.32144928]
[-6.29677391 86.85678864]
[8.59757996 88.71578217]
[23.26934814 91.88387299]
[37.60370636 96.33627319]
[51.48846054 102.03813934]
[64.81494141 108.94483185]
[77.47885895 117.00231171]
[86.61766052 105.10767365]
[88.64146423 91.27308655]
[101.48770905 85.75352478]
[110.62651062 73.85888672]
[119.76531219 61.96425629]
[122.03762817 46.30707932]
[135.92724609 40.92864227]
[145.06605530 29.03400993]
[154.20484924 17.13937759]
[142.78584290 7.40781450]
[131.87438965 -2.88962197]
[121.49850464 -13.72649860]
[111.68480682 -25.07499695]
[102.45849609 -36.90598679]
[93.84326935 -49.18909836]
[85.86122131 -61.89279556]
[78.53285217 -74.98447418]
[71.87697601 -88.43052673]
[65.91067505 -102.19644165]
[60.64926147 -116.24687195]
[56.10624695 -130.54574585]
[52.29328918 -145.05638123]
[49.22018051 -159.74151611]
[46.89480591 -174.56344604]
[45.32313538 -189.48413086]
[44.50920486 -204.46527100]
[44.45510101 -219.46841431]
[45.16096878 -234.45503235]
[46.62498856 -249.38665771]
[48.84340286 -264.22497559]
[51.81052399 -278.93188477]
[55.51873016 -293.46963501]
[59.95849991 -307.80093384]
[65.11844635 -321.88891602]
[70.98530579 -335.69750977]
[77.54403687 -349.19122314]
[84.77780151 -362.33541870]
[92.66801453 -375.09634399]
[101.19444275 -387.44125366]
[110.33518219 -399.33850098]
[120.06677246 -410.75747681]
[130.36424255 -421.66888428]
[141.20114136 -432.04476929]
[152.54966736 -441.85842896]
[164.38069153 -451.08468628]
[176.66381836 -459.69989014]
[189.36753845 -467.68191528]
[202.45924377 -475.01025391]
[215.90530396 -481.66607666]
[229.67123413 -487.63235474]
[243.72167969 -492.89370728]
[258.02056885 -497.43670654]
[272.53121948 -501.24960327]
[287.21636963 -504.32269287]
[302.03829956 -506.64801025]
[316.95898438 -508.21963501]
[331.94012451 -509.03353882]
[346.94326782 -509.08758545]
[361.92987061 -508.38168335]
[376.86151123 -506.91763306]
[391.69982910 -504.69918823]
[406.40673828 -501.73202515]
[420.94445801 -498.02377319]
[435.27572632 -493.58395386]
[449.36373901 -488.42398071]
[463.17230225 -482.55706787]
[476.66598511 -475.99829102]
[489.81015015 -468.76449585]
[502.57107544 -460.87426758]
[514.91595459 -452.34780884]
[526.81317139 -443.20703125]
[538.23211670 -433.47540283]
[549.14349365 -423.17791748]
[559.51934814 -412.34097290]
[569.33300781 -400.99243164]
[578.55920410 -389.16137695]
[587.17437744 -376.87823486]
[595.15637207 -364.17446899]
[602.48468018 -351.08276367]
[609.14044189 -337.63668823]
[615.10668945 -323.87072754]
[620.36804199 -309.82028198]
[624.91094971 -295.52136230]
[628.72387695 -281.01071167]
[631.79687500 -266.32556152]
[634.12219238 -251.50361633]
[635.69378662 -236.58293152]
[636.50762939 -221.60177612]
[636.56164551 -206.59864807]
[635.85565186 -191.61203003]
[634.39160156 -176.68040466]
[632.17309570 -161.84210205]
[629.20587158 -147.13520813]
[625.49761963 -132.59747314]
[621.05773926 -118.26622009]
[615.89770508 -104.17823792]
[610.03076172 -90.36968994]
[603.47198486 -76.87601471]
[596.23815918 -63.73186493]
[588.34783936 -50.97097015]
[579.82135010 -38.62609482]
[570.68054199 -26.72892189]
[560.94891357 -15.30999374]
[550.65136719 -4.39862394]
[539.81445312 5.97718000]
[528.46582031 15.79078197]
[516.63476562 25.01699066]
[504.35159302 33.63212585]
[491.64782715 41.61406708]
[478.55609131 48.94232559]
[465.10998535 55.59809494]
[451.34402466 61.56428528]
[437.29354858 66.82557678]
[422.99462891 71.36847687]
[408.48397827 75.18131256]
[393.79882812 78.25430298]
[378.97686768 80.57955933]
[364.05618286 82.15110779]
[349.07501221 82.96491241]
[334.07189941 83.01889038]
[319.08526611 82.31290436]
[304.15365601 80.84876251]
[289.31533813 78.63022614]
[274.60845947 75.66298676]
[260.07073975 71.95465851]
[245.73950195 67.51477051]
[231.65153503 62.35471344]
[217.84300232 56.48773193]
[204.34934998 49.92889404]
[191.20521545 42.69502640]
[178.44433594 34.80470276]
[166.09948730 26.27817917]
[156.96069336 38.17281342]
[147.82188416 50.06744385]
[146.20323181 64.87384033]
[131.65994263 71.10305786]
[122.52114105 82.99768829]
[113.38233948 94.89232635]
[111.35853577 108.72691345]
[98.51229095 114.24647522]
[89.37348938 126.14111328]
[100.42147827 136.30180359]
[110.52822113 147.39915466]
[119.61461639 159.34632874]
[127.60955811 172.04981995]
[134.45045471 185.41020203]
[140.08378601 199.32289124]
[144.46546936 213.67903137]
[147.56118774 228.36624146]
[149.34671021 243.26957703]
[149.80809021 258.27239990]
[148.94169617 273.25729370]
[146.75430298 288.10696411]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 198]
[58 197]
[60 195]
[61 194]
[62 193]
[64 191]
[65 190]
[66 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
