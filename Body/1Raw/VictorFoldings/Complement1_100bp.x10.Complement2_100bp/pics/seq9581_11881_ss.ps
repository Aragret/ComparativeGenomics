%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[199.09988403 673.36383057]
[187.97151184 663.29846191]
[177.50392151 652.54754639]
[167.73927307 641.15435791]
[158.71688843 629.16485596]
[150.47309875 616.62719727]
[143.04110718 603.59191895]
[136.45080566 590.11157227]
[130.72877502 576.24035645]
[125.89801788 562.03411865]
[121.97801208 547.55010986]
[118.98453522 532.84667969]
[116.92963409 517.98297119]
[115.82158661 503.01885986]
[115.66486359 488.01458740]
[116.46008301 473.03057861]
[118.20404816 458.12719727]
[120.88973999 443.36441040]
[124.50634003 428.80169678]
[129.03927612 414.49768066]
[134.47032166 400.50994873]
[140.77758789 386.89486694]
[147.93568420 373.70721436]
[155.91577148 361.00009155]
[164.68574524 348.82470703]
[174.21026611 337.23004150]
[184.45098877 326.26281738]
[195.36668396 315.96719360]
[206.91339111 306.38461304]
[219.04463196 297.55364990]
[211.00346375 284.89111328]
[202.96228027 272.22860718]
[186.99263000 264.95281982]
[186.36914062 246.54920959]
[178.14031982 234.00781250]
[169.91151428 221.46641541]
[161.68270874 208.92501831]
[153.45390320 196.38360596]
[140.00277710 189.98701477]
[138.90129089 174.20419312]
[130.67248535 161.66279602]
[122.44367218 149.12138367]
[116.14601135 145.25340271]
[114.18733215 136.33145142]
[106.14615631 123.66892242]
[98.10498810 111.00639343]
[89.96977234 98.40408325]
[81.74095917 85.86268616]
[73.51215363 73.32128143]
[65.28334808 60.77988052]
[66.22763824 75.75012970]
[61.76982498 90.07241821]
[52.49640274 101.86239624]
[39.62745667 109.56890106]
[24.85611153 112.17800140]
[10.12579632 109.34642792]
[-2.62546444 101.44672394]
[-11.72002316 89.51822662]
[-15.96133423 75.13034058]
[-14.79137993 60.17603683]
[-8.36408806 46.62281036]
[2.47492075 36.25382614]
[16.29958916 30.43329430]
[31.29104233 29.92701149]
[45.47689819 34.80158615]
[56.99228287 44.41751862]
[51.74556351 30.36504745]
[39.66997910 20.14297485]
[42.46676254 5.51330423]
[37.22004318 -8.53916740]
[25.83110809 -14.59349632]
[21.75040245 -26.40584564]
[26.65001678 -37.46569824]
[21.61310005 -51.59472656]
[16.57618523 -65.72375488]
[1.78997743 -63.01004410]
[-13.24006557 -62.70348358]
[-28.12462997 -64.81201935]
[-42.47816849 -69.28102875]
[-55.92889404 -75.99475861]
[-68.12839508 -84.77931213]
[-78.76068115 -95.40713501]
[-87.55034637 -107.60295105]
[-94.26971436 -121.05086517]
[-98.74474335 -135.40252686]
[-100.85951996 -150.28620911]
[-100.55925751 -165.31637573]
[-97.85173798 -180.10371399]
[-92.80709839 -194.26521301]
[-85.55600739 -207.43402100]
[-76.28627777 -219.26907349]
[-65.23801422 -229.46379089]
[-52.69740677 -237.75410461]
[-38.98928070 -243.92527771]
[-24.46870804 -247.81745911]
[-9.51180840 -249.32984924]
[5.49399900 -248.42326355]
[20.16002846 -245.12117004]
[34.10639191 -239.50912476]
[46.97184753 -231.73248291]
[58.42314911 -221.99267578]
[68.16368103 -210.54199219]
[75.94113922 -197.67701721]
[81.55406189 -183.73100281]
[84.85707092 -169.06518555]
[85.76461029 -154.05943298]
[84.25316620 -139.10244751]
[80.36188507 -124.58162689]
[74.19157410 -110.87310791]
[65.90205383 -98.33197784]
[55.70803452 -87.28307343]
[43.87357712 -78.01259613]
[30.70521355 -70.76067352]
[35.74213028 -56.63164520]
[40.77904510 -42.50261688]
[54.74061584 -31.87051392]
[51.27251434 -13.78588486]
[56.51923370 0.26658610]
[68.21954346 9.48353195]
[65.79803467 25.11833000]
[71.04475403 39.17079926]
[77.82474518 52.55107498]
[86.05355072 65.09247589]
[94.28236389 77.63387299]
[102.51116943 90.17527771]
[109.21466064 94.65140533]
[110.76750946 102.96522522]
[118.80868530 115.62774658]
[126.84985352 128.29026794]
[134.98507690 140.89257812]
[143.21388245 153.43399048]
[151.44268799 165.97538757]
[165.48239136 173.26902771]
[165.99530029 188.15480042]
[174.22410583 200.69619751]
[182.45291138 213.23760986]
[190.68173218 225.77900696]
[198.91053772 238.32040405]
[211.35755920 241.70190430]
[217.95315552 252.31706238]
[215.62480164 264.18743896]
[223.66598511 276.84994507]
[231.70715332 289.51248169]
[244.85856628 282.28802490]
[258.44171143 275.91220093]
[272.40188599 270.41073608]
[286.68286133 265.80578613]
[301.22717285 262.11581421]
[315.97622681 259.35577393]
[330.87063599 257.53671265]
[345.85043335 256.66598511]
[360.85531616 256.74710083]
[375.82482910 257.77972412]
[390.69869995 259.75967407]
[405.41705322 262.67901611]
[419.92062378 266.52597046]
[434.15100098 271.28506470]
[448.05087280 276.93713379]
[461.56430054 283.45941162]
[474.63684082 290.82562256]
[487.21588135 299.00613403]
[499.25073242 307.96795654]
[510.69296265 317.67507935]
[521.49652100 328.08834839]
[531.61779785 339.16583252]
[541.01617432 350.86297607]
[549.65374756 363.13265991]
[557.49572754 375.92547607]
[564.51055908 389.18988037]
[570.66998291 402.87249756]
[575.94915771 416.91824341]
[580.32690430 431.27050781]
[583.78558350 445.87155151]
[586.31115723 460.66256714]
[587.89361572 475.58398438]
[588.52648926 490.57571411]
[588.20721436 505.57739258]
[586.93713379 520.52862549]
[584.72137451 535.36920166]
[581.56878662 550.03936768]
[577.49212646 564.48004150]
[572.50775146 578.63311768]
[566.63580322 592.44152832]
[559.89990234 605.84973145]
[552.32714844 618.80371094]
[543.94799805 631.25134277]
[534.79626465 643.14245605]
[524.90881348 654.42913818]
[514.32537842 665.06604004]
[503.08862305 675.01031494]
[491.24380493 684.22180176]
[478.83856201 692.66357422]
[465.92291260 700.30151367]
[452.54882812 707.10491943]
[438.77017212 713.04638672]
[424.64242554 718.10205078]
[410.22247314 722.25140381]
[395.56838989 725.47790527]
[380.73916626 727.76843262]
[365.79449463 729.11383057]
[350.79461670 729.50866699]
[335.79989624 728.95141602]
[320.87069702 727.44415283]
[306.06713867 724.99316406]
[291.44888306 721.60809326]
[277.07470703 717.30279541]
[263.00256348 712.09442139]
[249.28906250 706.00402832]
[235.98945618 699.05615234]
[223.15728760 691.27874756]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 143]
[31 142]
[32 141]
[34 138]
[35 137]
[36 136]
[37 135]
[38 134]
[40 132]
[41 131]
[42 130]
[44 129]
[45 128]
[46 127]
[47 125]
[48 124]
[49 123]
[50 122]
[66 121]
[67 120]
[69 118]
[70 117]
[73 115]
[74 114]
[75 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
