%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGAxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[89.15293121 842.57116699]
[74.23606873 840.94915771]
[59.44735718 838.41192627]
[44.84288406 834.96911621]
[30.47805786 830.63372803]
[16.40736580 825.42224121]
[2.68418455 819.35449219]
[-10.63942909 812.45343018]
[-23.51293373 804.74517822]
[-35.88749313 796.25909424]
[-47.71617126 787.02728271]
[-58.95409393 777.08483887]
[-69.55863190 766.46942139]
[-79.48956299 755.22125244]
[-88.70920563 743.38311768]
[-97.18259430 730.99981689]
[-104.87757874 718.11840820]
[-111.76498413 704.78771973]
[-117.81866455 691.05834961]
[-123.01567078 676.98229980]
[-127.33628845 662.61303711]
[-130.76411438 648.00500488]
[-133.28616333 633.21374512]
[-134.89285278 618.29522705]
[-135.57809448 603.30609131]
[-135.33929443 588.30316162]
[-134.17733765 573.34344482]
[-132.09666443 558.48364258]
[-129.10514832 543.78009033]
[-125.21413422 529.28857422]
[-120.43838501 515.06408691]
[-114.79602051 501.16058350]
[-108.30844879 487.63079834]
[-101.00026703 474.52606201]
[-92.89920807 461.89608765]
[-84.03599548 449.78875732]
[-74.44425964 438.25003052]
[-64.16037750 427.32366943]
[-53.22335815 417.05111694]
[-41.67469788 407.47134399]
[-29.55819702 398.62069702]
[-16.91982269 390.53274536]
[-3.80751562 383.23815918]
[9.72898483 376.76458740]
[23.63832855 371.13665771]
[37.86775589 366.37564087]
[52.36328506 362.49966431]
[67.06993103 359.52337646]
[81.93190765 357.45812988]
[96.89282990 356.31167603]
[96.66950226 341.31335449]
[96.44617462 326.31500244]
[96.22284698 311.31668091]
[95.99951935 296.31832886]
[95.77619171 281.32000732]
[87.85025787 268.70932007]
[95.38124084 254.79548645]
[95.15791321 239.79714966]
[94.93458557 224.79881287]
[94.71125793 209.80047607]
[94.48793030 194.80213928]
[86.56199646 182.19146729]
[94.09297180 168.27763367]
[93.86964417 153.27929688]
[84.07110596 138.72059631]
[93.17323303 122.71332550]
[92.72663116 107.71997833]
[91.72236633 92.75363159]
[90.16184235 77.83502960]
[88.60131836 62.91642380]
[87.04080200 47.99781799]
[77.53086853 39.28437805]
[76.53823853 26.82651329]
[84.05134583 17.34601974]
[82.71311188 2.40583396]
[81.37487793 -12.53435135]
[72.43724060 -25.58920479]
[79.00821686 -38.95601273]
[76.78309631 -53.79005814]
[73.67898560 -68.46536255]
[70.57487488 -83.14066315]
[67.47076416 -97.81596375]
[52.43130493 -97.45643616]
[37.58189392 -99.86676025]
[23.42830086 -104.96484375]
[10.45258904 -112.57703400]
[-0.90329319 -122.44408417]
[-10.25256729 -134.22990417]
[-17.27680206 -147.53309631]
[-21.73675346 -161.90054321]
[-23.48051834 -176.84289551]
[-22.44870377 -191.85122681]
[-18.67645264 -206.41435242]
[-12.29224777 -220.03627014]
[-3.51353192 -232.25302124]
[7.36069489 -242.64848328]
[19.96006012 -250.86862183]
[33.85543442 -256.63345337]
[48.57354736 -259.74661255]
[63.61310577 -260.10208130]
[78.46186829 -257.68774414]
[92.61408234 -252.58586121]
[105.58774567 -244.97016907]
[116.94096375 -235.10006714]
[126.28706360 -223.31172180]
[133.30770874 -210.00663757]
[137.76379395 -195.63798523]
[139.50352478 -180.69515991]
[138.46766663 -165.68711853]
[134.69149780 -151.12500000]
[128.30361938 -137.50480652]
[119.52160645 -125.29042816]
[108.64457703 -114.89788818]
[96.04299927 -106.68115234]
[82.14606476 -100.92007446]
[85.25017548 -86.24477386]
[88.35428619 -71.56946564]
[91.45839691 -56.89416504]
[98.78314209 -69.98416901]
[112.35437012 -76.37335968]
[127.11035156 -73.67873383]
[137.54747009 -62.90531921]
[139.77293396 -48.07132721]
[132.95671082 -34.70947647]
[119.64107513 -27.80340385]
[104.79243469 -29.92890549]
[93.94840240 -40.29424667]
[102.79031372 -28.30801582]
[96.31506348 -13.87258530]
[97.65329742 1.06759977]
[98.99153137 16.00778389]
[109.84574890 29.79737473]
[101.95940399 46.43729782]
[103.51992798 61.35589981]
[105.08045197 76.27450562]
[106.64097595 91.19310760]
[117.97037506 81.36230469]
[132.74719238 83.94024658]
[140.07849121 97.02657318]
[134.55993652 110.97452545]
[120.25958252 115.50220490]
[107.71997833 107.27336884]
[108.16658020 122.26672363]
[117.00209808 131.66334534]
[117.06540680 144.16053772]
[108.86798096 153.05596924]
[109.09130859 168.05430603]
[117.03321838 181.73774719]
[109.48626709 194.57881165]
[109.70959473 209.57714844]
[109.93292236 224.57548523]
[110.15625000 239.57382202]
[110.37957764 254.57215881]
[118.32147980 268.25561523]
[110.77452850 281.09667969]
[110.99785614 296.09500122]
[111.22118378 311.09335327]
[111.44451141 326.09167480]
[111.66783905 341.09002686]
[111.89116669 356.08834839]
[126.87959290 356.78884888]
[141.79647827 358.41070557]
[156.58522034 360.94778442]
[171.18971252 364.39047241]
[185.55458069 368.72567749]
[199.62533569 373.93701172]
[213.34857178 380.00466919]
[226.67225647 386.90560913]
[239.54583740 394.61370850]
[251.92047119 403.09967041]
[263.74923706 412.33135986]
[274.98727417 422.27371216]
[285.59191895 432.88903809]
[295.52294922 444.13705444]
[304.74270630 455.97512817]
[313.21621704 468.35830688]
[320.91134644 481.23965454]
[327.79885864 494.57028198]
[333.85269165 508.29962158]
[339.04983521 522.37561035]
[343.37057495 536.74481201]
[346.79855347 551.35278320]
[349.32073975 566.14410400]
[350.92758179 581.06256104]
[351.61297607 596.05169678]
[351.37432861 611.05462646]
[350.21252441 626.01434326]
[348.13198853 640.87420654]
[345.14059448 655.57775879]
[341.24972534 670.06933594]
[336.47412109 684.29382324]
[330.83190918 698.19738770]
[324.34445190 711.72723389]
[317.03640747 724.83203125]
[308.93548584 737.46209717]
[300.07238770 749.56951904]
[290.48077393 761.10833740]
[280.19699097 772.03479004]
[269.26007080 782.30749512]
[257.71151733 791.88732910]
[245.59509277 800.73809814]
[232.95678711 808.82623291]
[219.84455872 816.12091064]
[206.30812073 822.59460449]
[192.39883423 828.22271729]
[178.16944885 832.98382568]
[163.67396545 836.85998535]
[148.96734619 839.83636475]
[134.10539246 841.90179443]
[119.14447784 843.04840088]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 160]
[51 159]
[52 158]
[53 157]
[54 156]
[55 155]
[57 153]
[58 152]
[59 151]
[60 150]
[61 149]
[63 147]
[64 146]
[66 143]
[67 142]
[68 136]
[69 135]
[70 134]
[71 133]
[74 131]
[75 130]
[76 129]
[78 127]
[79 118]
[80 117]
[81 116]
[82 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
