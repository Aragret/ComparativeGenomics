%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxUUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGC\
) } def
/len { sequence length } bind def

/coor [
[112.04724884 300.84130859]
[109.89803314 315.70394897]
[106.03787231 330.21655273]
[100.51896667 344.18286133]
[93.41594696 357.41403198]
[84.82489014 369.73110962]
[74.86196899 380.96749878]
[63.66191864 390.97128296]
[51.37621307 399.60711670]
[38.17099762 406.75827026]
[24.22486305 412.32800293]
[9.72641182 416.24096680]
[-5.12828112 418.44427490]
[-20.13832283 418.90814209]
[-35.10071945 417.62628174]
[-49.81312180 414.61599731]
[-64.07656097 409.91802979]
[-77.69814301 403.59594727]
[-90.49364471 395.73516846]
[-102.29003143 386.44207764]
[-112.92776489 375.84228516]
[-122.26297760 364.07919312]
[-130.16943359 351.31188965]
[-136.54019165 337.71298218]
[-141.28909302 323.46643066]
[-144.35194397 308.76486206]
[-145.68728638 293.80715942]
[-145.27708435 278.79556274]
[-143.12687683 263.93307495]
[-139.26574707 249.42073059]
[-133.74591064 235.45477295]
[-126.64201355 222.22409058]
[-118.05013275 209.90759277]
[-108.08646393 198.67185974]
[-96.88574219 188.66883850]
[-84.59946442 180.03379822]
[-71.39377594 172.88352966]
[-57.44726562 167.31474304]
[-42.94855499 163.40272522]
[-28.09371376 161.20040894]
[-13.08364010 160.73754883]
[1.87867117 162.02041626]
[16.59087181 165.03167725]
[30.85399818 169.73057556]
[44.47515869 176.05360413]
[52.32691193 163.27275085]
[60.17866898 150.49191284]
[68.03042603 137.71107483]
[64.33051300 123.32891846]
[72.11124420 110.25547791]
[87.22164917 106.47219086]
[87.79519653 92.50212860]
[99.99750519 85.67605591]
[107.84925842 72.89521027]
[114.32875824 59.36686707]
[119.36566925 45.23783875]
[124.40258789 31.10880852]
[129.43949890 16.97977829]
[134.47642517 2.85074925]
[139.51333618 -11.27828026]
[144.55024719 -25.40731049]
[149.58717346 -39.53633881]
[154.62408447 -53.66536713]
[151.97007751 -69.26238251]
[163.53186035 -78.65250397]
[168.56877136 -92.78153229]
[154.76872253 -98.67215729]
[141.35345459 -105.39313507]
[128.37287903 -112.91945648]
[115.87528229 -121.22312927]
[103.90716553 -130.27326965]
[92.51303864 -140.03619385]
[81.73529053 -150.47558594]
[71.61402893 -161.55262756]
[62.18688583 -173.22610474]
[53.48894501 -185.45257568]
[45.55255890 -198.18656921]
[38.40725327 -211.38072205]
[32.07960510 -224.98593140]
[26.59316063 -238.95158386]
[21.96832466 -253.22575378]
[18.22230339 -267.75531006]
[15.36903191 -282.48623657]
[13.41912556 -297.36367798]
[12.37983799 -312.33233643]
[12.25503540 -327.33651733]
[13.04518127 -342.32040405]
[14.74733639 -357.22824097]
[17.35516930 -372.00454712]
[20.85897827 -386.59442139]
[25.24572945 -400.94354248]
[30.49910355 -414.99853516]
[36.59955597 -428.70712280]
[43.52439499 -442.01831055]
[51.24785614 -454.88256836]
[59.74121094 -467.25204468]
[68.97286224 -479.08068848]
[78.90847015 -490.32458496]
[89.51106262 -500.94180298]
[100.74121094 -510.89291382]
[112.55712891 -520.14086914]
[124.91487122 -528.65130615]
[137.76844788 -536.39251709]
[151.07005310 -543.33575439]
[164.77021790 -549.45507812]
[178.81794739 -554.72784424]
[193.16099548 -559.13439941]
[207.74601746 -562.65832520]
[222.51873779 -565.28656006]
[237.42420959 -567.00927734]
[252.40698242 -567.82012939]
[267.41131592 -567.71600342]
[282.38137817 -566.69738770]
[297.26153564 -564.76800537]
[311.99636841 -561.93511963]
[326.53106689 -558.20910645]
[340.81161499 -553.60400391]
[354.78482056 -548.13684082]
[368.39877319 -541.82794189]
[381.60275269 -534.70086670]
[394.34768677 -526.78204346]
[406.58615112 -518.10101318]
[418.27261353 -508.69000244]
[429.36361694 -498.58401489]
[439.81790161 -487.82070923]
[449.59652710 -476.44006348]
[458.66317749 -464.48443604]
[466.98410034 -451.99832153]
[474.52832031 -439.02813721]
[481.26779175 -425.62216187]
[487.17745972 -411.83026123]
[492.23532104 -397.70373535]
[496.42257690 -383.29510498]
[499.72360229 -368.65805054]
[502.12615967 -353.84695435]
[503.62130737 -338.91693115]
[504.20349121 -323.92352295]
[503.87051392 -308.92254639]
[502.62365723 -293.96972656]
[500.46749878 -279.12075806]
[497.41012573 -264.43087769]
[493.46286011 -249.95466614]
[488.64044189 -235.74604797]
[482.96075439 -221.85784912]
[476.44494629 -208.34175110]
[469.11724854 -195.24801636]
[461.00494385 -182.62536621]
[452.13821411 -170.52073669]
[442.55001831 -158.97920227]
[432.27603149 -148.04365540]
[421.35449219 -137.75479126]
[409.82598877 -128.15089417]
[397.73345947 -119.26768494]
[385.12185669 -111.13821411]
[372.03811646 -103.79271698]
[358.53088379 -97.25852203]
[344.65042114 -91.55993652]
[330.44839478 -86.71816254]
[315.97756958 -82.75120544]
[301.29183960 -79.67383575]
[286.44583130 -77.49748993]
[271.49475098 -76.23026276]
[256.49420166 -75.87687683]
[241.50003052 -76.43864441]
[226.56799316 -77.91347504]
[211.75364685 -80.29587555]
[197.11209106 -83.57699585]
[182.69779968 -87.74462128]
[177.66088867 -73.61558533]
[180.67517090 -59.02917862]
[168.75311279 -48.62845230]
[163.71620178 -34.49942398]
[158.67927551 -20.37039375]
[153.64236450 -6.24136400]
[148.60545349 7.88766527]
[143.56852722 22.01669502]
[138.53161621 36.14572525]
[133.49470520 50.27475357]
[128.45777893 64.40378571]
[139.97341919 54.79180145]
[154.26771545 50.24504089]
[169.22019958 51.43798447]
[182.61277771 58.19366074]
[192.45870972 69.50991821]
[197.29742432 83.70803833]
[196.41113281 98.68183136]
[189.93130493 112.21002197]
[178.81918335 122.28577423]
[164.72319031 127.41442108]
[149.73437500 126.83514404]
[136.07624817 120.63388824]
[125.77490997 109.73057556]
[120.35849762 95.74263000]
[120.63010406 80.74697113]
[112.77835083 93.52780914]
[112.20480347 107.49787140]
[100.00249481 114.32394409]
[103.45762634 129.51275635]
[95.31276703 142.36248779]
[80.81126404 145.56283569]
[72.95951080 158.34367371]
[65.10775757 171.12451172]
[57.25600052 183.90534973]
[69.05300140 193.19767761]
[79.69144440 203.79673767]
[89.02744293 215.55920410]
[96.93474579 228.32600403]
[103.30641174 241.92446899]
[108.05627441 256.17071533]
[111.12009430 270.87207031]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 203]
[46 202]
[47 201]
[48 200]
[51 197]
[53 195]
[54 194]
[55 179]
[56 178]
[57 177]
[58 176]
[59 175]
[60 174]
[61 173]
[62 172]
[63 171]
[65 169]
[66 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
