%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[145.05616760 845.76171875]
[130.45426941 842.31536865]
[116.04067230 838.15112305]
[101.85065460 833.27917480]
[87.91893005 827.71142578]
[74.27960205 821.46154785]
[60.96604538 814.54479980]
[48.01083755 806.97808838]
[35.44568634 798.77996826]
[23.30133629 789.97045898]
[11.60750866 780.57116699]
[0.39282101 770.60504150]
[-10.31528187 760.09649658]
[-20.49059677 749.07128906]
[-30.10822296 737.55633545]
[-39.14462280 725.57989502]
[-47.57768250 713.17120361]
[-55.38676834 700.36059570]
[-62.55276489 687.17950439]
[-69.05814362 673.66015625]
[-74.88697052 659.83569336]
[-80.02500153 645.73980713]
[-84.45964813 631.40710449]
[-88.18006134 616.87261963]
[-91.17713165 602.17193604]
[-93.44353485 587.34106445]
[-94.97372437 572.41619873]
[-95.76394653 557.43395996]
[-95.81227112 542.43090820]
[-95.11858368 527.44390869]
[-93.68457794 512.50952148]
[-91.51376343 497.66430664]
[-88.61145020 482.94461060]
[-84.98474884 468.38647461]
[-80.64253235 454.02548218]
[-75.59542084 439.89682007]
[-69.85576630 426.03506470]
[-63.43761826 412.47409058]
[-56.35668564 399.24710083]
[-48.63029099 386.38650513]
[-40.27733994 373.92373657]
[-31.31828308 361.88928223]
[-21.77503777 350.31262207]
[-11.67096043 339.22207642]
[-1.03077662 328.64480591]
[10.11947536 318.60665894]
[21.75250816 309.13220215]
[33.83985519 300.24465942]
[46.35193253 291.96575928]
[59.25812531 284.31573486]
[72.52684784 277.31335449]
[86.12563324 270.97570801]
[100.02119446 265.31835938]
[114.17953491 260.35510254]
[128.56600952 256.09808350]
[125.02632904 241.52171326]
[121.48665619 226.94534302]
[117.94698334 212.36897278]
[113.31385040 206.61085510]
[114.46483612 197.54922485]
[104.10081482 186.85174561]
[108.58943176 171.68061829]
[105.26717377 157.05316162]
[90.32512665 156.47303772]
[76.04206085 152.04635620]
[63.39083481 144.07466125]
[53.23316956 133.10090637]
[46.26092529 119.87255096]
[42.94900894 105.29062653]
[43.52299881 90.34833527]
[47.94380188 76.06344604]
[55.91030121 63.40895081]
[66.87987518 53.24677658]
[80.10536194 46.26910019]
[76.78310394 31.64163780]
[66.18144989 19.89789391]
[70.90769958 5.77302933]
[67.58544159 -8.85443115]
[64.26318359 -23.48189163]
[59.31079865 -31.15728760]
[61.00206375 -38.35182953]
[57.89795685 -53.02713013]
[54.79384613 -67.70243073]
[39.74554443 -67.51580811]
[24.95003700 -70.26885223]
[10.97602749 -75.85573578]
[-1.63936150 -84.06172180]
[-12.41122913 -94.57138824]
[-20.92553139 -106.98077393]
[-26.85500526 -120.81289673]
[-29.97173309 -135.53608704]
[-30.15591812 -150.58441162]
[-27.40048218 -165.37947083]
[-21.81133461 -179.35258484]
[-13.60330772 -191.96664429]
[-3.09189725 -202.73681641]
[9.31886673 -211.24909973]
[23.15194893 -217.17634583]
[37.87564087 -220.29067993]
[52.92399979 -220.47242737]
[67.71861267 -217.71459961]
[81.69081879 -212.12319946]
[94.30355072 -203.91313171]
[105.07201385 -193.39997864]
[113.58229828 -180.98782349]
[119.50729370 -167.15379333]
[122.61925507 -152.42959595]
[122.79856873 -137.38121033]
[120.03834534 -122.58703613]
[114.44467163 -108.61573792]
[106.23255920 -96.00434113]
[95.71766663 -85.23757172]
[83.30414581 -76.72930145]
[69.46914673 -70.80654144]
[72.57325745 -56.13124084]
[75.67736816 -41.45593643]
[78.89064026 -26.80415154]
[82.21289825 -12.17669106]
[85.53516388 2.45076966]
[95.89918518 13.14825916]
[91.41056824 28.31937790]
[94.73282623 42.94683838]
[109.67487335 43.52696991]
[123.95793915 47.95364380]
[136.60916138 55.92534256]
[146.76683044 66.89909363]
[153.73907471 80.12744904]
[157.05099487 94.70937347]
[156.47700500 109.65166473]
[152.05619812 123.93655396]
[144.08970642 136.59104919]
[133.12011719 146.75321960]
[119.89463806 153.73089600]
[123.21689606 168.35836792]
[133.81854248 180.10211182]
[129.09230042 194.22697449]
[132.52336121 208.82929993]
[136.06303406 223.40567017]
[139.60270691 237.98204041]
[143.14237976 252.55842590]
[157.87898254 249.74328613]
[172.73677063 247.66036987]
[187.67939758 246.31477356]
[202.67027283 245.70980835]
[217.67272949 245.84692383]
[232.65005493 246.72581482]
[247.56558228 248.34431458]
[262.38281250 250.69845581]
[277.06549072 253.78248596]
[291.57769775 257.58886719]
[305.88391113 262.10824585]
[319.94909668 267.32962036]
[333.73889160 273.24017334]
[347.21948242 279.82543945]
[360.35791016 287.06933594]
[373.12203979 294.95410156]
[385.48062134 303.46044922]
[397.40341187 312.56759644]
[408.86120605 322.25320435]
[419.82601929 332.49359131]
[430.27096558 343.26370239]
[440.17053223 354.53717041]
[449.50045776 366.28643799]
[458.23791504 378.48269653]
[466.36154175 391.09616089]
[473.85144043 404.09591675]
[480.68930054 417.45019531]
[486.85836792 431.12628174]
[492.34353638 445.09069824]
[497.13140869 459.30929565]
[501.21026611 473.74728394]
[504.57009888 488.36932373]
[507.20272827 503.13961792]
[509.10168457 518.02203369]
[510.26229858 532.98016357]
[510.68179321 547.97741699]
[510.35906982 562.97698975]
[509.29498291 577.94232178]
[507.49209595 592.83666992]
[504.95483398 607.62365723]
[501.68942261 622.26708984]
[497.70379639 636.73107910]
[493.00778198 650.98028564]
[487.61282349 664.97979736]
[481.53210449 678.69537354]
[474.78057861 692.09350586]
[467.37472534 705.14129639]
[459.33264160 717.80694580]
[450.67407227 730.05932617]
[441.42013550 741.86853027]
[431.59353638 753.20568848]
[421.21826172 764.04296875]
[410.31976318 774.35388184]
[398.92468262 784.11322021]
[387.06091309 793.29705811]
[374.75747681 801.88299561]
[362.04449463 809.84997559]
[348.95309448 817.17846680]
[335.51525879 823.85058594]
[321.76388550 829.84997559]
[307.73269653 835.16198730]
[293.45593262 839.77362061]
[278.96859741 843.67352295]
[264.30612183 846.85223389]
[249.50437927 849.30194092]
[234.59959412 851.01666260]
[219.62826538 851.99212646]
[204.62699890 852.22607422]
[189.63253784 851.71783447]
[174.68154907 850.46868896]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 140]
[56 139]
[57 138]
[58 137]
[60 136]
[62 134]
[63 133]
[74 122]
[75 121]
[77 119]
[78 118]
[79 117]
[81 116]
[82 115]
[83 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
