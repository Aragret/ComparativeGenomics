%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[99.83191681 669.21459961]
[92.56333923 656.07293701]
[86.90013123 642.16375732]
[82.92179108 627.68243408]
[80.68416595 612.83221436]
[80.21867371 597.82153320]
[81.53184509 582.86120605]
[84.60524750 568.16119385]
[89.39572906 553.92785645]
[95.83604431 540.36102295]
[103.83578491 527.65118408]
[113.28263855 515.97668457]
[124.04399109 505.50152588]
[135.96876526 496.37265015]
[148.88957214 488.71829224]
[162.62500000 482.64587402]
[158.22399902 468.30603027]
[153.82299805 453.96618652]
[149.42201233 439.62634277]
[145.02101135 425.28649902]
[140.62001038 410.94665527]
[129.48904419 401.04962158]
[132.83686829 385.58666992]
[129.90992737 383.62060547]
[127.78987885 380.13916016]
[127.17854309 375.53704834]
[128.57498169 370.50741577]
[124.81867981 355.98538208]
[121.06237793 341.46331787]
[117.30608368 326.94125366]
[113.54978180 312.41918945]
[109.79347992 297.89712524]
[103.71791840 311.61163330]
[91.25109863 319.95300293]
[76.25600433 320.33657837]
[63.37902832 312.64349365]
[56.61023712 299.25756836]
[58.04701614 284.32653809]
[67.24416351 272.47695923]
[81.35184479 267.38055420]
[95.99864197 270.61651611]
[106.64620972 281.18234253]
[104.86374664 266.28860474]
[103.08127594 251.39489746]
[99.16521454 245.12702942]
[101.38484955 236.26638794]
[99.82432556 221.34777832]
[98.26380157 206.42916870]
[91.22719574 202.88648987]
[86.10330963 196.77919006]
[83.78331757 189.05409241]
[84.71602631 180.94769287]
[88.82328796 173.78837585]
[95.50070953 168.77870178]
[94.83092499 153.79365540]
[94.16114044 138.80862427]
[93.49135590 123.82357788]
[92.82157135 108.83853912]
[84.03943634 120.99889374]
[70.11631012 126.57981110]
[55.36643219 123.85198975]
[44.36020660 113.66066742]
[40.50802994 99.16374969]
[45.00354767 84.85324860]
[56.45376968 75.16343689]
[71.31072235 73.09680939]
[84.97081757 79.29373169]
[93.20140076 91.83426666]
[94.53963470 76.89408112]
[95.87786865 61.95389557]
[97.21610260 47.01371002]
[98.33174896 32.05525589]
[91.42957306 17.81901741]
[99.91069031 5.57484341]
[100.80351257 -9.39856243]
[88.02281952 -1.54655492]
[73.86408234 -6.49933529]
[68.76457977 -20.60589790]
[76.48348999 -33.46741104]
[91.33070374 -35.60284424]
[102.36080170 -25.43956947]
[104.36482239 -40.30509567]
[106.36883545 -55.17062378]
[108.37284851 -70.03615570]
[102.54862213 -84.74632263]
[111.91693878 -96.32578278]
[113.92095184 -111.19131470]
[104.61145782 -123.68015289]
[106.85558319 -138.72737122]
[118.81915283 -147.52557373]
[120.82316589 -162.39109802]
[122.82717896 -177.25663757]
[108.47807312 -181.75230408]
[95.09521484 -188.60847473]
[83.06365204 -197.62788391]
[72.72956848 -208.55101013]
[64.39028931 -221.06358337]
[58.28574753 -234.80558777]
[54.59159470 -249.38163757]
[53.41410828 -264.37234497]
[54.78717041 -279.34640503]
[58.67127991 -293.87298584]
[64.95467377 -307.53414917]
[73.45657349 -319.93679810]
[83.93236542 -330.72409058]
[96.08063507 -339.58566284]
[109.55184937 -346.26657104]
[123.95841980 -350.57455444]
[138.88583374 -352.38568115]
[153.90460205 -351.64785767]
[168.58262634 -348.38229370]
[182.49755859 -342.68292236]
[195.24905396 -334.71377563]
[206.47021484 -324.70413208]
[215.83821106 -312.94195557]
[223.08348083 -299.76568604]
[227.99757385 -285.55441284]
[230.43910217 -270.71707153]
[230.33782959 -255.68052673]
[227.69664001 -240.87741089]
[222.59155273 -226.73364258]
[215.16944885 -213.65617371]
[205.64385986 -202.02125549]
[194.28886414 -192.16366577]
[181.43118286 -184.36700439]
[167.44073486 -178.85562134]
[152.72006226 -175.78807068]
[137.69270325 -175.25262451]
[135.68869019 -160.38708496]
[133.68467712 -145.52156067]
[142.89135742 -133.86940002]
[141.07075500 -118.76509857]
[128.78648376 -109.18730164]
[126.78246307 -94.32176971]
[132.75003052 -80.67488861]
[123.23837280 -68.03214264]
[121.23435974 -53.16661072]
[119.23034668 -38.30108261]
[117.22633362 -23.43555450]
[115.77691650 -8.50574684]
[114.88410187 6.46765900]
[121.85014343 19.63289833]
[113.30516052 32.94807053]
[115.74893951 37.05135727]
[115.64100647 42.73337936]
[112.15628815 48.35194397]
[110.81805420 63.29212952]
[109.47982025 78.23231506]
[108.14158630 93.17250061]
[107.80661011 108.16875458]
[108.47639465 123.15379333]
[109.14617920 138.13883972]
[109.81596375 153.12387085]
[110.48574829 168.10891724]
[123.89508820 186.06242371]
[113.18241119 204.86865234]
[114.74293518 219.78724670]
[116.30345154 234.70585632]
[117.97499847 249.61242676]
[119.75746155 264.50616455]
[121.53992462 279.39987183]
[124.31553650 294.14083862]
[128.07183838 308.66290283]
[131.82814026 323.18493652]
[135.58444214 337.70700073]
[139.34074402 352.22906494]
[143.09704590 366.75112915]
[147.17671204 381.18566895]
[158.62245178 392.10836792]
[154.95985413 406.54565430]
[159.36085510 420.88549805]
[163.76185608 435.22534180]
[168.16285706 449.56518555]
[172.56384277 463.90502930]
[176.96484375 478.24487305]
[191.74195862 475.56658936]
[206.73213196 474.65490723]
[221.72491455 475.52258301]
[236.50984192 478.15744019]
[250.87933350 482.52249146]
[264.63168335 488.55648804]
[277.57385254 496.17471313]
[289.52410889 505.27017212]
[300.31469727 515.71527100]
[309.79415894 527.36328125]
[317.82940674 540.05072021]
[324.30761719 553.59948730]
[329.13787842 567.81933594]
[332.25238037 582.51074219]
[333.60736084 597.46734619]
[333.18383789 612.47924805]
[330.98773193 627.33563232]
[327.04989624 641.82806396]
[321.42559814 655.75299072]
[314.19381714 668.91497803]
[305.45602417 681.12921143]
[295.33493042 692.22424316]
[283.97259521 702.04431152]
[271.52853394 710.45153809]
[258.17745972 717.32794189]
[244.10678101 722.57696533]
[229.51403809 726.12493896]
[214.60408020 727.92205811]
[199.58622742 727.94305420]
[184.67131042 726.18762207]
[170.06869507 722.68048096]
[155.98339844 717.47082520]
[142.61314392 710.63177490]
[130.14562988 702.25933838]
[118.75588989 692.47106934]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 175]
[17 174]
[18 173]
[19 172]
[20 171]
[21 170]
[23 168]
[27 167]
[28 166]
[29 165]
[30 164]
[31 163]
[32 162]
[42 161]
[43 160]
[44 159]
[46 158]
[47 157]
[48 156]
[54 154]
[55 153]
[56 152]
[57 151]
[58 150]
[68 149]
[69 148]
[70 147]
[71 146]
[72 143]
[74 141]
[75 140]
[81 139]
[82 138]
[83 137]
[84 136]
[86 134]
[87 133]
[90 130]
[91 129]
[92 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
