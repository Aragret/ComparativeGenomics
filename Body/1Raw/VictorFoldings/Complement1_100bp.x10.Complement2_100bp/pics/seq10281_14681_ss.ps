%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[152.53446960 564.52929688]
[146.47883606 550.79650879]
[141.57792664 536.61059570]
[137.86523438 522.06835938]
[135.36611938 507.26925659]
[134.09765625 492.31433105]
[134.06849670 477.30569458]
[135.27883911 462.34594727]
[137.72044373 447.53720093]
[141.37660217 432.98071289]
[146.22235107 418.77584839]
[152.22457886 405.01965332]
[159.34230042 391.80612183]
[167.52688599 379.22549438]
[176.72242737 367.36370850]
[186.86608887 356.30181885]
[197.88861084 346.11535645]
[209.71467590 336.87396240]
[201.48587036 324.33255005]
[193.25706482 311.79116821]
[185.02824402 299.24975586]
[176.79943848 286.70834351]
[163.34831238 280.31173706]
[162.24682617 264.52893066]
[162.36581421 279.52847290]
[156.04335022 293.13092041]
[144.50022888 302.70986938]
[129.96522522 306.41577148]
[115.24482727 303.53305054]
[103.18131256 294.61837769]
[96.10396576 281.39297485]
[95.37929535 266.41049194]
[101.14723206 252.56379700]
[112.29408264 242.52647400]
[126.66755676 238.23658752]
[141.49237061 240.52241516]
[153.90693665 248.94355774]
[148.03797913 235.13938904]
[142.16902161 221.33520508]
[136.30006409 207.53103638]
[130.43110657 193.72685242]
[117.92448425 190.62622070]
[109.35942078 180.74078369]
[108.03224182 167.53286743]
[114.65039825 155.80194092]
[108.98761749 141.91191101]
[103.32482910 128.02188110]
[97.66204071 114.13185883]
[86.73600006 105.40756226]
[88.44792938 91.53092957]
[82.78514862 77.64090729]
[79.26250458 75.10221100]
[76.96228027 71.89698792]
[75.94391632 68.49134827]
[76.10934448 65.32287598]
[77.22599792 62.75164413]
[72.40000153 48.54918671]
[67.57400513 34.34673309]
[62.74800491 20.14427757]
[57.92200851 5.94182110]
[53.09601212 -8.26063442]
[48.27001190 -22.46309090]
[43.44401550 -36.66554642]
[38.61801910 -50.86800003]
[26.85213280 -61.44507599]
[30.08325958 -75.98499298]
[25.25726128 -90.18744659]
[20.43126297 -104.38990021]
[8.66537952 -114.96697998]
[11.89650440 -129.50689697]
[7.07050705 -143.70935059]
[2.24450922 -157.91180420]
[-2.58148837 -172.11425781]
[-7.40748596 -186.31671143]
[-12.23348331 -200.51916504]
[-27.04669571 -197.96667480]
[-42.07683182 -197.76301575]
[-56.95376587 -199.91323853]
[-71.31113434 -204.36434937]
[-84.79537201 -211.00677490]
[-97.07442474 -219.67691040]
[-107.84590912 -230.16127014]
[-116.84455872 -242.20164490]
[-123.84878540 -255.50154114]
[-128.68609619 -269.73342896]
[-131.23738098 -284.54687500]
[-131.43978882 -299.57702637]
[-129.28834534 -314.45376587]
[-124.83604431 -328.81076050]
[-118.19251251 -342.29446411]
[-109.52135468 -354.57281494]
[-99.03611755 -365.34341431]
[-86.99499512 -374.34109497]
[-73.69451904 -381.34420776]
[-59.46221924 -386.18035889]
[-44.64858627 -388.73040771]
[-29.61841583 -388.93157959]
[-14.74184036 -386.77890015]
[-0.38520694 -382.32540894]
[13.09793758 -375.68078613]
[25.37556076 -367.00860596]
[36.14531326 -356.52246094]
[45.14197922 -344.48062134]
[52.14400864 -331.17956543]
[56.97897339 -316.94686890]
[59.52780151 -302.13302612]
[59.72773361 -287.10284424]
[57.57384109 -272.22644043]
[53.11916733 -257.87017822]
[46.47340775 -244.38757324]
[37.80022812 -232.11065674]
[27.31320953 -221.34178162]
[15.27060413 -212.34609985]
[1.96897185 -205.34516907]
[6.79496956 -191.14271545]
[11.62096691 -176.94026184]
[16.44696426 -162.73780823]
[21.27296257 -148.53533936]
[26.09896088 -134.33288574]
[37.51965714 -124.77166748]
[34.63372040 -109.21589661]
[39.45971680 -95.01344299]
[44.28571320 -80.81098938]
[55.70640945 -71.24977112]
[52.82047272 -55.69400024]
[57.64646912 -41.49154282]
[62.47246933 -27.28908730]
[67.29846954 -13.08663177]
[72.12446594 1.11582363]
[76.95046234 15.31827927]
[81.77645874 29.52073479]
[86.60245514 43.72319031]
[91.42845154 57.92564774]
[96.67517090 71.97811890]
[102.33795929 85.86814117]
[113.26399994 94.59243774]
[111.55207062 108.46907043]
[117.21485138 122.35909271]
[122.87763977 136.24913025]
[128.54042053 150.13914490]
[144.78613281 156.62731934]
[151.18699646 172.54409790]
[144.23527527 187.85789490]
[150.10423279 201.66206360]
[155.97320557 215.46624756]
[161.84216309 229.27041626]
[167.71112061 243.07460022]
[174.78822327 256.30014038]
[188.82792664 263.59378052]
[189.34083557 278.47955322]
[197.56965637 291.02093506]
[205.79846191 303.56234741]
[214.02726746 316.10375977]
[222.25607300 328.64514160]
[235.44160461 321.47567749]
[249.17414856 315.41952515]
[263.35989380 310.51812744]
[277.90197754 306.80490112]
[292.70098877 304.30526733]
[307.65591431 303.03625488]
[322.66452026 303.00656128]
[337.62432861 304.21640015]
[352.43313599 306.65744019]
[366.98977661 310.31307983]
[381.19482422 315.15832520]
[394.95123291 321.16006470]
[408.16500854 328.27731323]
[420.74594116 336.46145630]
[432.60803223 345.65655518]
[443.67028809 355.79983521]
[453.85711670 366.82199097]
[463.09896851 378.64773560]
[471.33267212 391.19625854]
[478.50198364 404.38186646]
[484.55795288 418.11450195]
[489.45919800 432.30029297]
[493.17224121 446.84240723]
[495.67172241 461.64147949]
[496.94052124 476.59640503]
[496.97006226 491.60501099]
[495.76004028 506.56481934]
[493.31881714 521.37359619]
[489.66299438 535.93017578]
[484.81759644 550.13519287]
[478.81567383 563.89147949]
[471.69827271 577.10522461]
[463.51400757 589.68603516]
[454.31875610 601.54803467]
[444.17532349 612.61016846]
[433.15307617 622.79687500]
[421.32720947 632.03857422]
[408.77859497 640.27209473]
[395.59289551 647.44128418]
[381.86019897 653.49707031]
[367.67431641 658.39813232]
[353.13217163 662.11102295]
[338.33309937 664.61029053]
[323.37814331 665.87896729]
[308.36953735 665.90832520]
[293.40975952 664.69812012]
[278.60101318 662.25671387]
[264.04443359 658.60070801]
[249.83952332 653.75512695]
[236.08326721 647.75305176]
[222.86964417 640.63549805]
[210.28890991 632.45104980]
[198.42703247 623.25567627]
[187.36502075 613.11212158]
[177.17843628 602.08972168]
[167.93688965 590.26379395]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 154]
[19 153]
[20 152]
[21 151]
[22 150]
[24 148]
[37 147]
[38 146]
[39 145]
[40 144]
[41 143]
[45 140]
[46 139]
[47 138]
[48 137]
[50 135]
[51 134]
[56 133]
[57 132]
[58 131]
[59 130]
[60 129]
[61 128]
[62 127]
[63 126]
[64 125]
[66 123]
[67 122]
[68 121]
[70 119]
[71 118]
[72 117]
[73 116]
[74 115]
[75 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
