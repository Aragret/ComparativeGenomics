%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCGxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[-17.46831703 847.65716553]
[-31.69858742 852.41723633]
[-46.20713425 856.24621582]
[-60.93310165 859.12799072]
[-75.81472778 861.05053711]
[-90.78958893 862.00579834]
[-105.79487610 861.98968506]
[-120.76764679 861.00231934]
[-135.64511108 859.04785156]
[-150.36486816 856.13439941]
[-164.86515808 852.27435303]
[-179.08517456 847.48370361]
[-192.96527100 841.78271484]
[-206.44723511 835.19519043]
[-219.47451782 827.74877930]
[-231.99247742 819.47473145]
[-243.94859314 810.40771484]
[-255.29273987 800.58587646]
[-265.97732544 790.05029297]
[-275.95751953 778.84515381]
[-285.19146729 767.01751709]
[-293.64047241 754.61700439]
[-301.26907349 741.69555664]
[-308.04525757 728.30743408]
[-313.94061279 714.50872803]
[-318.93041992 700.35736084]
[-322.99374390 685.91271973]
[-326.11352539 671.23529053]
[-328.27673340 656.38677979]
[-329.47421265 641.42932129]
[-329.70101929 626.42572021]
[-328.95614624 611.43896484]
[-327.24276733 596.53179932]
[-324.56802368 581.76684570]
[-320.94314575 567.20593262]
[-316.38333130 552.91021729]
[-310.90774536 538.93969727]
[-304.53930664 525.35284424]
[-297.30477905 512.20672607]
[-289.23443604 499.55648804]
[-280.36218262 487.45513916]
[-270.72521973 475.95352173]
[-260.36398315 465.09979248]
[-249.32188416 454.93951416]
[-237.64527893 445.51528931]
[-225.38313293 436.86666870]
[-212.58686829 429.02993774]
[-199.31018066 422.03790283]
[-185.60873413 415.91995239]
[-171.54000854 410.70172119]
[-157.16300964 406.40512085]
[-142.53805542 403.04812622]
[-127.72645569 400.64486694]
[-112.79036713 399.20541382]
[-97.79241943 398.73577881]
[-82.79553223 399.23794556]
[-67.86259460 400.70980835]
[-53.05625153 403.14520264]
[-38.43860245 406.53387451]
[-24.07096100 410.86166382]
[-18.82424164 396.80920410]
[-13.57752419 382.75674438]
[-8.33080578 368.70425415]
[-3.08408761 354.65179443]
[2.16263056 340.59930420]
[7.40934849 326.54684448]
[-2.17530155 315.14508057]
[-4.78334570 300.37844849]
[0.38425478 286.19528198]
[12.03375912 276.43893433]
[27.10084343 273.80642700]
[32.34756088 259.75393677]
[37.59428024 245.70147705]
[34.79749680 231.07180786]
[46.87308121 220.84973145]
[52.11980057 206.79725647]
[57.36651993 192.74479675]
[62.61323547 178.69232178]
[67.85995483 164.63984680]
[73.10667419 150.58737183]
[78.35339355 136.53489685]
[65.99134827 125.43199921]
[58.83599091 110.43547821]
[57.98279572 93.84130096]
[63.56238937 78.19001770]
[74.72053528 65.87781525]
[89.74894714 58.78967667]
[106.34677887 58.01079559]
[111.17277527 43.80833817]
[115.99877167 29.60588455]
[118.66456604 14.84466648]
[111.34157562 0.82024401]
[119.45439148 -11.67101669]
[119.90099335 -26.66436768]
[120.34760284 -41.65771866]
[109.78935242 -53.11027908]
[110.45585632 -68.30930328]
[121.43919373 -78.30440521]
[121.88579559 -93.29775238]
[122.33240509 -108.29109955]
[108.76042938 -115.27425385]
[99.56923676 -127.45967865]
[96.58373260 -142.42796326]
[100.39669800 -157.20713806]
[110.25106812 -168.86279297]
[124.19024658 -175.08067322]
[139.44659424 -174.62623596]
[152.99096680 -167.58970642]
[162.13409424 -155.36816406]
[165.06063843 -140.38824463]
[161.18949890 -125.62419891]
[151.28930664 -114.00744629]
[137.32575989 -107.84449768]
[136.87915039 -92.85114288]
[136.43254089 -77.85779572]
[146.80148315 -67.22667694]
[146.56214905 -52.01492691]
[135.34094238 -41.21111298]
[134.89434814 -26.21776199]
[134.44773865 -11.22441101]
[141.80267334 1.72758651]
[133.65791321 15.29127216]
[140.88404846 2.14657617]
[151.48005676 -8.47060394]
[164.61030579 -15.72295380]
[179.23928833 -19.03852272]
[194.21328735 -18.15583038]
[208.35140991 -13.14449024]
[220.53865051 -4.39971638]
[229.81388855 7.38884020]
[235.44561768 21.29148674]
[236.98971558 36.21179962]
[234.32440186 50.97310257]
[227.65988159 64.41126251]
[217.52172852 75.46647644]
[204.70948792 83.26689911]
[190.23358154 87.19734955]
[175.23565674 86.94785309]
[160.89851379 82.53809357]
[148.35281372 74.31584167]
[138.58798218 62.92953110]
[132.37409973 49.27713776]
[130.20123291 34.43188095]
[125.37522888 48.63433838]
[120.54923248 62.83679199]
[130.99160767 70.96734619]
[138.42398071 81.91762543]
[142.12451172 94.62413025]
[141.73379517 107.85274506]
[137.28974915 120.31868744]
[129.22402954 130.81121826]
[118.31998444 138.31126404]
[105.63665009 142.09040833]
[92.40586090 141.78161621]
[87.15914154 155.83409119]
[81.91242981 169.88656616]
[76.66571045 183.93904114]
[71.41899109 197.99150085]
[66.17227173 212.04397583]
[60.92555237 226.09645081]
[63.34705734 241.73124695]
[51.64675140 250.94819641]
[46.40003204 265.00067139]
[41.15331650 279.05313110]
[50.80829239 290.91604614]
[53.21321487 305.91983032]
[47.82108307 320.01916504]
[36.17355728 329.46325684]
[21.46182060 331.79357910]
[16.21510124 345.84603882]
[10.96838379 359.89849854]
[5.72166538 373.95098877]
[0.47494724 388.00344849]
[-4.77177095 402.05590820]
[-10.01848888 416.10839844]
[3.66979265 422.25573730]
[16.93144989 429.27624512]
[29.71085739 437.14044189]
[41.95441437 445.81536865]
[53.61076355 455.26461792]
[64.63101959 465.44854736]
[74.96895599 476.32449341]
[84.58121490 487.84680176]
[93.42746735 499.96713257]
[101.47062683 512.63470459]
[108.67694092 525.79626465]
[115.01618958 539.39672852]
[120.46179199 553.37902832]
[124.99089050 567.68450928]
[128.58450317 582.25311279]
[131.22755432 597.02380371]
[132.90895081 611.93463135]
[133.62164307 626.92297363]
[133.36264038 641.92602539]
[132.13304138 656.88085938]
[129.93798828 671.72473145]
[126.78669739 686.39538574]
[122.69237518 700.83129883]
[117.67221069 714.97192383]
[111.74724579 728.75793457]
[104.94234467 742.13146973]
[97.28604126 755.03649902]
[88.81044769 767.41888428]
[79.55111694 779.22668457]
[69.54689026 790.41033936]
[58.83972549 800.92297363]
[47.47452927 810.72045898]
[35.49897385 819.76177979]
[22.96329308 828.00891113]
[9.92006111 835.42736816]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 175]
[61 174]
[62 173]
[63 172]
[64 171]
[65 170]
[66 169]
[71 164]
[72 163]
[73 162]
[75 160]
[76 159]
[77 158]
[78 157]
[79 156]
[80 155]
[81 154]
[88 145]
[89 144]
[90 143]
[91 122]
[93 120]
[94 119]
[95 118]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
