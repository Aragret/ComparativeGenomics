%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[101.68348694 515.87756348]
[87.55435944 520.93927002]
[73.05966949 524.83239746]
[58.29587555 527.53118896]
[43.36123657 529.01757812]
[28.35513496 529.28167725]
[13.37743950 528.32171631]
[-1.47217560 526.14416504]
[-16.09488678 522.76348877]
[-30.39338112 518.20214844]
[-44.27250290 512.49053955]
[-57.63988876 505.66659546]
[-70.40657806 497.77581787]
[-82.48760986 488.87069702]
[-93.80258942 479.01046753]
[-104.27620697 468.26074219]
[-113.83877563 456.69311523]
[-122.42664337 444.38452148]
[-129.98266602 431.41690063]
[-136.45654297 417.87652588]
[-141.80522156 403.85354614]
[-145.99308777 389.44122314]
[-148.99226379 374.73553467]
[-150.78280640 359.83428955]
[-151.35279846 344.83670044]
[-150.69842529 329.84252930]
[-148.82406616 314.95162964]
[-145.74220276 300.26303101]
[-141.47331238 285.87451172]
[-136.04582214 271.88183594]
[-129.49584961 258.37811279]
[-121.86698151 245.45318604]
[-113.20999908 233.19311523]
[-103.58249664 221.67947388]
[-93.04856110 210.98887634]
[-81.67828369 201.19245911]
[-69.54733276 192.35543823]
[-56.73645020 184.53662109]
[-43.33087921 177.78802490]
[-29.41984177 172.15457153]
[-15.09590816 167.67375183]
[-0.45440602 164.37539673]
[14.40722656 162.28141785]
[29.39008522 161.40579224]
[44.39446259 161.75433350]
[59.32050323 163.32472229]
[74.06887817 166.10649109]
[78.04096985 151.64196777]
[82.01306915 137.17744446]
[85.98516846 122.71292114]
[89.95726013 108.24839783]
[93.49693298 93.67201996]
[96.60104370 78.99671936]
[99.70515442 64.32141876]
[102.80926514 49.64611435]
[105.91337585 34.97081375]
[109.01748657 20.29551125]
[112.12159729 5.62020874]
[115.22570801 -9.05509377]
[118.32981110 -23.73039627]
[121.43392181 -38.40569687]
[124.53803253 -53.08100128]
[127.64214325 -67.75630188]
[115.23033905 -78.68053436]
[110.05094910 -94.28404236]
[113.42774963 -110.27823639]
[124.34643555 -122.31726074]
[139.75674438 -127.17883301]
[142.64201355 -141.89872742]
[145.52729797 -156.61860657]
[131.05395508 -160.58468628]
[116.91304779 -165.60884094]
[103.18180847 -171.66362000]
[89.93523407 -178.71594238]
[77.24566650 -186.72731018]
[65.18241119 -195.65397644]
[53.81136322 -205.44715881]
[43.19462204 -216.05337524]
[33.39017105 -227.41471863]
[24.45156670 -239.46911621]
[16.42762375 -252.15074158]
[9.36216831 -265.39031982]
[3.29378939 -279.11557007]
[-1.74436915 -293.25146484]
[-5.72479010 -307.72088623]
[-8.62573338 -322.44473267]
[-10.43135548 -337.34262085]
[-11.13179493 -352.33316040]
[-10.72322464 -367.33450317]
[-9.20787811 -382.26470947]
[-6.59402990 -397.04220581]
[-2.89595675 -411.58633423]
[1.86614347 -425.81762695]
[7.66626120 -439.65835571]
[14.47271824 -453.03292847]
[22.24834061 -465.86831665]
[30.95065689 -478.09439087]
[40.53214264 -489.64437866]
[50.94046021 -500.45523071]
[62.11877060 -510.46783447]
[74.00601196 -519.62756348]
[86.53726196 -527.88439941]
[99.64408875 -535.19317627]
[113.25489044 -541.51403809]
[127.29534149 -546.81243896]
[141.68875122 -551.05944824]
[156.35650635 -554.23181152]
[171.21850586 -556.31231689]
[186.19355774 -557.28955078]
[201.19989014 -557.15808105]
[216.15553284 -555.91876221]
[230.97880554 -553.57830811]
[245.58874512 -550.14953613]
[259.90557861 -545.65112305]
[273.85107422 -540.10760498]
[287.34909058 -533.54937744]
[300.32589722 -526.01214600]
[312.71063232 -517.53710938]
[324.43560791 -508.17062378]
[335.43685913 -497.96374512]
[345.65423584 -486.97229004]
[355.03198242 -475.25625610]
[363.51882935 -462.87963867]
[371.06848145 -449.91006470]
[377.63964844 -436.41833496]
[383.19647217 -422.47811890]
[387.70858765 -408.16561890]
[391.15139771 -393.55895996]
[393.50601196 -378.73794556]
[394.75964355 -363.78347778]
[394.90542603 -348.77728271]
[393.94256592 -333.80130005]
[391.87631226 -318.93731689]
[388.71792603 -304.26654053]
[384.48471069 -289.86907959]
[379.19976807 -275.82354736]
[372.89193726 -262.20672607]
[365.59567261 -249.09291077]
[357.35086060 -236.55375671]
[348.20251465 -224.65774536]
[338.20059204 -213.46986389]
[327.39971924 -203.05120850]
[315.85891724 -193.45867920]
[303.64117432 -184.74465942]
[290.81323242 -176.95675659]
[277.44519043 -170.13749695]
[263.61001587 -164.32414246]
[249.38327026 -159.54843140]
[234.84269714 -155.83644104]
[220.06768799 -153.20845032]
[205.13894653 -151.67881775]
[190.13800049 -151.25588989]
[175.14678955 -151.94197083]
[160.24717712 -153.73333740]
[157.36190796 -139.01344299]
[154.47663879 -124.29355621]
[165.33901978 -116.01553345]
[171.60510254 -103.80632019]
[172.00134277 -90.02256012]
[166.39340210 -77.35253906]
[155.82356262 -68.29193115]
[142.31744385 -64.65219116]
[139.21333313 -49.97689056]
[136.10922241 -35.30158997]
[133.00511169 -20.62628555]
[129.90100098 -5.95098352]
[126.79689789 8.72431850]
[123.69278717 23.39962196]
[120.58867645 38.07492447]
[117.48456573 52.75022507]
[114.38045502 67.42552948]
[111.27634430 82.10083008]
[108.17223358 96.77613068]
[109.61226654 99.46236420]
[110.10671234 102.73192596]
[109.43763733 106.23560333]
[107.51916504 109.54856873]
[104.42178345 112.22049713]
[100.44969177 126.68502045]
[96.47759247 141.14953613]
[92.50549316 155.61405945]
[88.53340149 170.07858276]
[102.63406372 175.21903992]
[116.26880646 181.49171448]
[129.34689331 188.85488892]
[141.78129578 197.25956726]
[153.48925781 206.64979553]
[164.39286804 216.96308899]
[174.41955566 228.13081360]
[183.50260925 240.07865906]
[191.58157349 252.72711182]
[198.60266113 265.99200439]
[204.51918030 279.78500366]
[209.29174805 294.01440430]
[212.88859558 308.58544922]
[215.28579712 323.40118408]
[216.46739197 338.36303711]
[216.42550659 353.37139893]
[215.16043091 368.32641602]
[212.68058777 383.12854004]
[209.00248718 397.67929077]
[204.15058899 411.88183594]
[198.15718079 425.64163208]
[191.06216431 438.86709595]
[182.91273499 451.47027588]
[173.76315308 463.36724854]
[163.67430115 474.47885132]
[152.71330261 484.73114014]
[140.95310974 494.05587769]
[128.47200012 502.39102173]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 182]
[48 181]
[49 180]
[50 179]
[51 178]
[52 173]
[53 172]
[54 171]
[55 170]
[56 169]
[57 168]
[58 167]
[59 166]
[60 165]
[61 164]
[62 163]
[63 162]
[68 156]
[69 155]
[70 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
