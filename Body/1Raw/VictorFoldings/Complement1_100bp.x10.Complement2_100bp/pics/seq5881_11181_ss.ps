%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[126.07877350 994.12725830]
[111.17366028 992.42150879]
[96.35713959 990.06726074]
[81.65740967 987.06896973]
[67.10245514 983.43231201]
[52.71997833 979.16430664]
[38.53736115 974.27294922]
[24.58160400 968.76757812]
[10.87926674 962.65875244]
[-2.54356480 955.95806885]
[-15.66133976 948.67822266]
[-28.44908714 940.83312988]
[-40.88246536 932.43774414]
[-52.93780518 923.50799561]
[-64.59216309 914.06085205]
[-75.82334900 904.11437988]
[-86.60998535 893.68750000]
[-96.93154144 882.79998779]
[-106.76836395 871.47265625]
[-116.10173035 859.72698975]
[-124.91387939 847.58544922]
[-133.18803406 835.07104492]
[-140.90843201 822.20764160]
[-148.06040955 809.01971436]
[-154.63031006 795.53234863]
[-160.60565186 781.77130127]
[-165.97505188 767.76269531]
[-170.72830200 753.53320312]
[-174.85633850 739.10992432]
[-178.35131836 724.52026367]
[-181.20657349 709.79211426]
[-183.41668701 694.95336914]
[-184.97743225 680.03240967]
[-185.88584900 665.05755615]
[-186.14019775 650.05731201]
[-185.74002075 635.06024170]
[-184.68605042 620.09490967]
[-182.98030090 605.18981934]
[-180.62602234 590.37329102]
[-177.62770081 575.67352295]
[-173.99104309 561.11859131]
[-169.72296143 546.73614502]
[-164.83158875 532.55352783]
[-159.32623291 518.59777832]
[-153.21737671 504.89544678]
[-146.51663208 491.47262573]
[-139.23678589 478.35485840]
[-131.39167786 465.56713867]
[-122.99624634 453.13375854]
[-114.06645966 441.07843018]
[-104.61933136 429.42410278]
[-94.67283630 418.19293213]
[-84.24591827 407.40631104]
[-73.35841370 397.08477783]
[-62.03104782 387.24798584]
[-50.28538895 377.91461182]
[-38.14379501 369.10250854]
[-25.62937927 360.82836914]
[-12.76595879 353.10797119]
[0.42197630 345.95605469]
[13.90932274 339.38616943]
[27.67040634 333.41085815]
[41.67903519 328.04147339]
[55.90853882 323.28823853]
[70.33183289 319.16021729]
[84.92145538 315.66528320]
[99.64964294 312.81002808]
[114.48835754 310.59997559]
[112.92783356 295.68136597]
[111.36730957 280.76275635]
[109.80678558 265.84414673]
[96.84052277 258.56307983]
[90.57382202 244.88124084]
[93.60049438 229.95835876]
[104.96523285 219.55888367]
[103.40471649 204.64028931]
[101.84419250 189.72167969]
[100.28366852 174.80307007]
[98.72314453 159.88447571]
[97.16262054 144.96586609]
[95.60209656 130.04725647]
[94.04157257 115.12865448]
[85.45252991 107.26293182]
[84.32715607 95.67092133]
[91.24282074 86.29996490]
[89.90458679 71.35977936]
[88.56635284 56.41959763]
[87.22811890 41.47941208]
[85.77870178 26.54960251]
[84.21817780 11.63099861]
[82.65765381 -3.28760624]
[81.09712982 -18.20621109]
[66.26455688 -21.11929893]
[52.95038605 -28.27641106]
[42.33850479 -39.04114151]
[35.37252045 -52.45629883]
[32.67184067 -67.32901764]
[34.47660446 -82.33682251]
[40.62633896 -96.14523315]
[50.57421112 -107.52641296]
[63.43566513 -115.46835327]
[78.06707001 -119.26486969]
[93.16740417 -118.57836914]
[107.39395905 -113.46989441]
[119.48172760 -104.39369965]
[128.35586548 -92.15682220]
[133.22727966 -77.84736633]
[133.66284180 -62.73770905]
[129.62377930 -48.17139816]
[121.46926880 -35.44365692]
[109.92440033 -25.68622589]
[96.01573944 -19.76673317]
[97.57626343 -4.84812927]
[99.13677979 10.07047558]
[100.69730377 24.98908043]
[104.51961517 31.31456184]
[102.16830444 40.14117813]
[103.50653839 55.08136368]
[104.84477234 70.02154541]
[106.18300629 84.96173096]
[116.18365479 98.42885590]
[108.96018219 113.56813049]
[110.52070618 128.48674011]
[112.08122253 143.40534973]
[113.64174652 158.32394409]
[115.20227051 173.24255371]
[116.76279449 188.16116333]
[118.32331848 203.07975769]
[119.88384247 217.99836731]
[133.15464783 225.82089233]
[139.20394897 239.79441833]
[135.90423584 254.47691345]
[124.72539520 264.28363037]
[126.28591919 279.20223999]
[127.84644318 294.12081909]
[129.40696716 309.03942871]
[144.38182068 308.13095093]
[159.38206482 307.87649536]
[174.37911987 308.27661133]
[189.34445190 309.33050537]
[204.24957275 311.03619385]
[219.06610107 313.39038086]
[233.76585388 316.38861084]
[248.32081604 320.02520752]
[262.70330811 324.29321289]
[276.88592529 329.18450928]
[290.84170532 334.68978882]
[304.54406738 340.79858398]
[317.96691895 347.49923706]
[331.08471680 354.77902222]
[343.87249756 362.62405396]
[356.30590820 371.01943970]
[368.36129761 379.94915771]
[380.01568604 389.39624023]
[391.24688721 399.34265137]
[402.03356934 409.76953125]
[412.35516357 420.65698242]
[422.19201660 431.98428345]
[431.52542114 443.72988892]
[440.33761597 455.87145996]
[448.61181641 468.38583374]
[456.33227539 481.24920654]
[463.48428345 494.43710327]
[470.05422974 507.92440796]
[476.02963257 521.68548584]
[481.39907837 535.69409180]
[486.15237427 549.92352295]
[490.28045654 564.34680176]
[493.77548218 578.93640137]
[496.63079834 593.66461182]
[498.84097290 608.50329590]
[500.40176392 623.42425537]
[501.31024170 638.39916992]
[501.56463623 653.39941406]
[501.16448975 668.39642334]
[500.11059570 683.36175537]
[498.40487671 698.26690674]
[496.05065918 713.08343506]
[493.05239868 727.78314209]
[489.41577148 742.33813477]
[485.14773560 756.72058105]
[480.25640869 770.90319824]
[474.75112915 784.85900879]
[468.64230347 798.56134033]
[461.94161987 811.98419189]
[454.66183472 825.10198975]
[446.81674194 837.88970947]
[438.42135620 850.32312012]
[429.49160767 862.37847900]
[420.04452515 874.03283691]
[410.09808350 885.26403809]
[399.67120361 896.05072021]
[388.78372192 906.37231445]
[377.45639038 916.20910645]
[365.71078491 925.54254150]
[353.56921387 934.35467529]
[341.05480957 942.62884521]
[328.19143677 950.34930420]
[315.00350952 957.50128174]
[301.51620483 964.07122803]
[287.75512695 970.04656982]
[273.74652100 975.41601562]
[259.51702881 980.16925049]
[245.09375000 984.29736328]
[230.50413513 987.79235840]
[215.77597046 990.64764404]
[200.93725586 992.85778809]
[186.01626587 994.41851807]
[171.04139709 995.32696533]
[156.04116821 995.58135986]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 136]
[69 135]
[70 134]
[71 133]
[75 129]
[76 128]
[77 127]
[78 126]
[79 125]
[80 124]
[81 123]
[82 122]
[85 120]
[86 119]
[87 118]
[88 117]
[89 115]
[90 114]
[91 113]
[92 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
