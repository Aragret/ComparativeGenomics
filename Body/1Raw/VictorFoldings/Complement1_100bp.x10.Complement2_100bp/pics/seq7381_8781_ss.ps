%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[2.15495801 508.40682983]
[-8.15906239 497.46475220]
[-16.47536469 484.93688965]
[-22.55467033 471.18371582]
[-26.22206879 456.60092163]
[-27.37203789 441.60806274]
[-25.97149277 426.63653564]
[-22.06073189 412.11709595]
[-15.75227165 398.46752930]
[-7.22762156 386.08050537]
[3.26794815 375.31243896]
[15.43245888 366.47317505]
[28.91591263 359.81701660]
[43.33036423 355.53546143]
[41.54789734 340.64175415]
[39.76543427 325.74804688]
[37.98296738 310.85430908]
[36.20050049 295.96060181]
[27.00562859 284.24295044]
[33.04821777 269.62112427]
[31.26575089 254.72740173]
[26.24916649 268.86364746]
[18.60585785 281.77023315]
[8.62157726 292.96463013]
[-3.33040762 302.02828979]
[-16.80326080 308.62237549]
[-31.29329300 312.50039673]
[-46.25878143 313.51733398]
[-61.14022827 311.63519287]
[-75.38128662 306.92431641]
[-88.44953918 299.56085205]
[-99.85641479 289.82003784]
[-109.17546844 278.06610107]
[-116.05829620 264.73843384]
[-120.24758148 250.33531189]
[-121.58670044 235.39521790]
[-120.02558899 220.47666931]
[-115.62261200 206.13743591]
[-108.54238129 192.91357422]
[-99.04959869 181.29948425]
[-87.49914551 171.72937012]
[-74.32285309 164.56101990]
[-60.01332855 160.06240845]
[-45.10553741 158.40173340]
[-30.15682602 159.64108276]
[-15.72605705 163.73411560]
[-2.35273790 170.52781677]
[9.46316147 179.76818848]
[19.27989388 191.10978699]
[26.73045349 204.12858582]
[31.53629684 218.33787537]
[33.51753616 233.20033264]
[38.34353256 218.99787903]
[43.16952896 204.79541016]
[47.99552917 190.59295654]
[52.82152557 176.39050293]
[57.64752197 162.18804932]
[46.10078430 171.76264954]
[31.68019104 175.89137268]
[16.81586266 173.87849426]
[4.01270008 166.06318665]
[-4.57173777 153.76246643]
[-7.49082279 139.04924011]
[-4.25263786 124.40294647]
[4.59712601 112.29172516]
[17.56712914 104.75653839]
[32.47169495 103.06719971]
[46.79914474 107.50838470]
[58.13505554 117.33168030]
[64.56911469 130.88169861]
[65.01679230 145.87663269]
[72.48453522 132.86769104]
[79.95227814 119.85873413]
[87.42002106 106.84977722]
[87.57736206 92.86883545]
[99.57102966 85.68247986]
[107.03877258 72.67353058]
[93.53614807 79.20645905]
[78.54143524 78.80835724]
[65.40447998 71.56816101]
[57.06011963 59.10334396]
[55.37250137 44.19858170]
[60.71864700 30.18363571]
[71.90420532 20.18947983]
[86.43030548 16.44883347]
[101.05177307 19.79736710]
[112.50213623 29.48701096]
[118.22335815 43.35307312]
[116.93728638 58.29786301]
[126.42618561 46.68059921]
[135.91508484 35.06333542]
[138.65255737 19.48075485]
[152.69616699 14.51824760]
[162.18505859 2.90098429]
[171.67396545 -8.71627903]
[181.16285706 -20.33354187]
[190.56501770 -32.02112198]
[199.87989807 -43.77837372]
[209.19477844 -55.53562546]
[218.50965881 -67.29287720]
[207.83692932 -77.85488892]
[198.39091492 -89.52690887]
[190.28627014 -102.16723633]
[183.62138367 -115.62243652]
[178.47715759 -129.72918701]
[174.91604614 -144.31622314]
[172.98126221 -159.20648193]
[172.69631958 -174.21920776]
[174.06463623 -189.17216492]
[177.06964111 -203.88383484]
[181.67483521 -218.17562866]
[187.82432556 -231.87405396]
[195.44345093 -244.81283569]
[204.43972778 -256.83489990]
[214.70396423 -267.79431152]
[226.11154175 -277.55804443]
[238.52398682 -286.00756836]
[251.79063416 -293.04028320]
[265.75042725 -298.57089233]
[280.23391724 -302.53216553]
[295.06527710 -304.87609863]
[310.06445312 -305.57418823]
[325.04940796 -304.61798096]
[339.83822632 -302.01910400]
[354.25137329 -297.80905151]
[368.11389160 -292.03897095]
[381.25747681 -284.77886963]
[393.52264404 -276.11691284]
[404.76043701 -266.15826416]
[414.83447266 -255.02377319]
[423.62246704 -242.84860229]
[431.01773071 -229.78057861]
[436.93048096 -215.97831726]
[441.28894043 -201.60935974]
[444.04022217 -186.84814453]
[445.15093994 -171.87384033]
[444.60757446 -156.86824036]
[442.41674805 -142.01350403]
[438.60504150 -127.48992920]
[433.21871948 -113.47383881]
[426.32318115 -100.13536835]
[418.00213623 -87.63643646]
[408.35659790 -76.12876892]
[397.50363159 -65.75205231]
[385.57498169 -56.63225555]
[372.71545410 -48.88008499]
[359.08117676 -42.58964539]
[344.83764648 -37.83729553]
[330.15774536 -34.68072128]
[315.21969604 -33.15824890]
[300.20483398 -33.28834915]
[285.29541016 -35.06945419]
[270.67242432 -38.47993469]
[256.51339722 -43.47838974]
[242.99015808 -50.00415039]
[230.26690674 -57.97799301]
[220.95202637 -46.22074509]
[211.63714600 -34.46349335]
[202.32226562 -22.70624161]
[200.63249207 -15.51134968]
[192.78012085 -10.84464455]
[183.29122925 0.77261925]
[173.80232239 12.38988304]
[164.31343079 24.00714684]
[162.25465393 38.75878143]
[147.53234863 44.55223465]
[138.04344177 56.16949463]
[128.55455017 67.78675842]
[120.04772186 80.14126587]
[112.57997894 93.15022278]
[112.42263794 107.13116455]
[100.42897034 114.31752014]
[92.96122742 127.32646942]
[85.49349213 140.33541870]
[78.02574921 153.34437561]
[71.84997559 167.01405334]
[67.02397919 181.21650696]
[62.19798279 195.41896057]
[57.37198639 209.62141418]
[52.54598999 223.82386780]
[47.71998978 238.02632141]
[46.15946960 252.94493103]
[47.94193268 267.83865356]
[57.26430130 280.62161255]
[51.09421921 294.17813110]
[52.87668228 309.07183838]
[54.65914917 323.96557617]
[56.44161606 338.85928345]
[58.22408295 353.75299072]
[73.24179840 354.51211548]
[87.91516113 357.79849243]
[101.82200623 363.51757812]
[114.56218719 371.50479126]
[125.76915741 381.53036499]
[135.12045288 393.30581665]
[142.34704590 406.49234009]
[147.24098206 420.71054077]
[149.66148376 435.55133057]
[149.53887939 450.58773804]
[146.87670898 465.38708496]
[141.75157166 479.52359009]
[134.31092834 492.59054565]
[124.76885986 504.21191406]
[113.39990234 514.05340576]
[100.53117371 521.83184814]
[86.53292847 527.32336426]
[71.80792236 530.37005615]
[56.77982712 530.88421631]
[41.88102722 528.85101318]
[27.54019547 524.32904053]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 189]
[15 188]
[16 187]
[17 186]
[18 185]
[20 183]
[21 182]
[52 181]
[53 180]
[54 179]
[55 178]
[56 177]
[57 176]
[71 175]
[72 174]
[73 173]
[74 172]
[76 170]
[77 169]
[89 168]
[90 167]
[91 166]
[93 164]
[94 163]
[95 162]
[96 161]
[97 159]
[98 158]
[99 157]
[100 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
