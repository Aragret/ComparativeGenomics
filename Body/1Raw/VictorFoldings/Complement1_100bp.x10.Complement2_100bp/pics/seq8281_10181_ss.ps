%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[87.55381012 469.21240234]
[79.86613464 456.31652832]
[73.54518890 442.69854736]
[68.65798187 428.50277710]
[65.25632477 413.87976074]
[63.37626648 398.98449707]
[63.03774643 383.97485352]
[64.24435425 369.00994873]
[66.98329163 354.24844360]
[71.22552490 339.84677124]
[76.92608643 325.95767212]
[84.02455139 312.72830200]
[92.44566345 300.29895020]
[102.10016632 288.80136108]
[112.88570404 278.35739136]
[124.68794250 269.07778931]
[137.38179016 261.06091309]
[150.83267212 254.39173889]
[145.58595276 240.33926392]
[140.33923340 226.28680420]
[135.09251404 212.23432922]
[129.74131775 198.22129822]
[124.28596497 184.24850464]
[118.83061218 170.27571106]
[113.37525177 156.30291748]
[107.91989899 142.33010864]
[102.55900574 137.24261475]
[102.48903656 128.10845947]
[97.24231720 114.05598450]
[86.58087921 105.01024628]
[88.70520782 91.19073486]
[83.45848846 77.13826752]
[81.53586578 92.01454163]
[75.16717529 105.59539795]
[64.95944214 116.58641052]
[51.88561249 123.93997192]
[37.19178772 126.95519257]
[22.27849579 125.34468079]
[8.56717777 119.26194000]
[-2.63529420 109.28674316]
[-10.26117039 96.36985016]
[-13.58360100 81.74243164]
[-12.28591251 66.79866791]
[-6.49179316 52.96290970]
[3.24649858 41.55389404]
[16.00077057 33.65905380]
[30.55536842 30.03087044]
[45.52304077 31.01516724]
[59.47716141 36.51811981]
[71.08771515 46.01522827]
[79.24851990 58.60232162]
[77.91028595 43.66213608]
[76.57205200 28.72195244]
[75.23381805 13.78176689]
[73.56227112 -1.12480724]
[71.55825806 -15.99033546]
[69.55424500 -30.85586357]
[57.96396255 -45.16484070]
[65.25760651 -61.12635040]
[63.03248596 -75.96039581]
[60.80736923 -90.79443359]
[58.58225250 -105.62847900]
[56.35713577 -120.46252441]
[41.38140106 -119.46907043]
[26.37478065 -119.71571350]
[11.43978119 -121.20075226]
[-3.32157159 -123.91405487]
[-17.80844116 -127.83708191]
[-31.92186737 -132.94302368]
[-45.56543732 -139.19702148]
[-58.64595413 -146.55635071]
[-71.07405853 -154.97073364]
[-82.76486206 -164.38267517]
[-93.63848877 -174.72790527]
[-103.62067413 -185.93574524]
[-112.64321136 -197.92962646]
[-120.64448547 -210.62762451]
[-127.56983185 -223.94299316]
[-133.37193298 -237.78477478]
[-138.01116943 -252.05842590]
[-141.45584106 -266.66644287]
[-143.68241882 -281.50900269]
[-144.67568970 -296.48474121]
[-144.42887878 -311.49136353]
[-142.94364929 -326.42636108]
[-140.23017883 -341.18768311]
[-136.30697632 -355.67449951]
[-131.20086670 -369.78787231]
[-124.94670105 -383.43136597]
[-117.58721924 -396.51177979]
[-109.17269897 -408.93978882]
[-99.76061249 -420.63046265]
[-89.41525269 -431.50396729]
[-78.20729828 -441.48602295]
[-66.21331024 -450.50842285]
[-53.51521301 -458.50955200]
[-40.19975662 -465.43472290]
[-26.35790062 -471.23666382]
[-12.08419609 -475.87573242]
[2.52384901 -479.32025146]
[17.36644554 -481.54663086]
[32.34220123 -482.53973389]
[47.34881973 -482.29272461]
[62.28378296 -480.80734253]
[77.04506683 -478.09368896]
[91.53184509 -474.17031860]
[105.64514923 -469.06402588]
[119.28857422 -462.80969238]
[132.36891174 -455.45007324]
[144.79681396 -447.03540039]
[156.48739624 -437.62316895]
[167.36077881 -427.27767944]
[177.34269714 -416.06961060]
[186.36494446 -404.07550049]
[194.36592102 -391.37731934]
[201.29093933 -378.06179810]
[207.09271240 -364.21984863]
[211.73161316 -349.94610596]
[215.17593384 -335.33801270]
[217.40216064 -320.49539185]
[218.39508057 -305.51962280]
[218.14790344 -290.51300049]
[216.66232300 -275.57806396]
[213.94850159 -260.81680298]
[210.02494812 -246.33007812]
[204.91850281 -232.21682739]
[198.66401672 -218.57348633]
[191.30422974 -205.49324036]
[182.88940430 -193.06542969]
[173.47703552 -181.37496948]
[163.13142395 -170.50170898]
[151.92323303 -160.51992798]
[139.92901611 -151.49781799]
[127.23073578 -143.49699402]
[113.91511536 -136.57212830]
[100.07312012 -130.77050781]
[85.79930878 -126.13179016]
[71.19117737 -122.68764496]
[73.41629791 -107.85359955]
[75.64141083 -93.01955414]
[77.86653137 -78.18550873]
[80.09164429 -63.35146713]
[89.62976074 -55.91164780]
[91.60494995 -43.57137299]
[84.41977692 -32.85987854]
[86.42378998 -17.99434853]
[88.42780304 -3.12882090]
[90.99499512 -0.71182781]
[92.51904297 3.06869245]
[92.37182617 7.70891094]
[90.17400360 12.44353294]
[91.51223755 27.38371849]
[92.85047150 42.32390213]
[94.18870544 57.26408768]
[97.51096344 71.89154816]
[102.75768280 85.94401550]
[113.41912079 94.98975372]
[111.29479218 108.80926514]
[116.54151154 122.86173248]
[121.89269257 136.87475586]
[127.34805298 150.84754944]
[132.80340576 164.82035828]
[138.25875854 178.79315186]
[143.71412659 192.76594543]
[149.75028992 199.62178040]
[149.14498901 206.98760986]
[154.39169312 221.04008484]
[159.63841248 235.09255981]
[164.88513184 249.14501953]
[179.41546631 245.36695862]
[194.25723267 243.10298157]
[209.25314331 242.37705994]
[224.24420166 243.19689941]
[239.07150269 245.55381775]
[253.57788086 249.42282104]
[267.60952759 254.76290894]
[281.01776123 261.51745605]
[293.66036987 269.61486816]
[305.40338135 278.96929932]
[316.12231445 289.48159790]
[325.70355225 301.04034424]
[334.04547119 313.52297974]
[341.05969238 326.79718018]
[346.67187500 340.72225952]
[350.82244873 355.15057373]
[353.46749878 369.92919922]
[354.57894897 384.90148926]
[354.14505005 399.90866089]
[352.17034912 414.79168701]
[348.67578125 429.39279175]
[343.69845581 443.55718994]
[337.29104614 457.13473511]
[329.52157593 469.98147583]
[320.47232056 481.96124268]
[310.23922729 492.94705200]
[298.93078613 502.82244873]
[286.66690063 511.48275757]
[273.57751465 518.83612061]
[259.80142212 524.80468750]
[245.48464966 529.32507324]
[230.77896118 532.34942627]
[215.84024048 533.84564209]
[200.82685852 533.79797363]
[185.89796448 532.20678711]
[171.21179199 529.08898926]
[156.92404175 524.47766113]
[143.18617249 518.42169189]
[130.14379883 510.98526001]
[117.93518829 502.24719238]
[106.68976593 492.30010986]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 169]
[19 168]
[20 167]
[21 166]
[22 164]
[23 163]
[24 162]
[25 161]
[26 160]
[28 159]
[29 158]
[31 156]
[32 155]
[51 154]
[52 153]
[53 152]
[54 151]
[55 147]
[56 146]
[57 145]
[59 142]
[60 141]
[61 140]
[62 139]
[63 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
