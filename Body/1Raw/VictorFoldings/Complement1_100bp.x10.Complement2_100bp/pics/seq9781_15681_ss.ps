%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[78.12586212 405.05447388]
[84.44812012 418.77328491]
[86.64788818 433.71777344]
[84.54682922 448.67645264]
[78.31526947 462.43670654]
[68.45838165 473.88302612]
[55.77521133 482.08752441]
[41.29393005 486.38510132]
[26.18847275 486.42736816]
[11.68336582 482.21090698]
[-1.04552293 474.07751465]
[-10.96632099 462.68655396]
[-17.27479362 448.96139526]
[-19.45954132 434.01470947]
[-17.34345627 419.05813599]
[-11.09807873 405.30413818]
[-1.22969532 393.86773682]
[11.46170902 385.67596436]
[25.94729996 381.39294434]
[41.05279160 381.36584473]
[45.23980331 366.96206665]
[49.42681503 352.55828857]
[53.61382675 338.15451050]
[57.80083847 323.75073242]
[52.70505524 306.95785522]
[66.10312653 294.32562256]
[70.07522583 279.86111450]
[65.98439789 265.53930664]
[77.09986115 254.28065491]
[81.07196045 239.81613159]
[85.04405212 225.35160828]
[89.01615143 210.88708496]
[92.88045502 196.39338684]
[96.63675690 181.87133789]
[100.39305878 167.34927368]
[101.06284332 152.36422729]
[98.61711121 137.56495667]
[96.17138672 122.76569366]
[93.72566223 107.96642303]
[89.40879822 101.15927124]
[91.35540009 92.92874146]
[89.13027954 78.09469604]
[74.93412781 72.40116119]
[65.55577087 60.44527435]
[63.43510437 45.49973297]
[69.04251862 31.59243774]
[80.77918243 22.42094231]
[78.55406189 7.58689880]
[76.32894135 -7.24714518]
[74.10382843 -22.08118820]
[71.21855164 -36.80107880]
[60.44322968 -48.38567734]
[64.95865631 -62.57934570]
[61.41898346 -77.15572357]
[57.87931442 -91.73209381]
[54.33964157 -106.30847168]
[50.79996872 -120.88484955]
[47.26029587 -135.46122742]
[43.72062302 -150.03759766]
[28.70000267 -149.25201416]
[13.79475594 -151.23944092]
[-0.48768207 -155.93074036]
[-13.66135406 -163.16474915]
[-25.27831078 -172.69380188]
[-34.94384384 -184.19224548]
[-42.32989502 -197.26753235]
[-47.18619919 -211.47363281]
[-49.34874725 -226.32627869]
[-48.74534607 -241.31939697]
[-45.39800262 -255.94244385]
[-39.42214966 -269.69772339]
[-31.02264977 -282.11734009]
[-20.48678017 -292.77917480]
[-8.17440033 -301.32113647]
[5.49433184 -307.45352173]
[-5.28099346 -319.03811646]
[-0.76556569 -333.23178101]
[-4.30523825 -347.80816650]
[-7.84491062 -362.38452148]
[-11.38458252 -376.96090698]
[-14.92425537 -391.53729248]
[-29.94634438 -390.73013306]
[-44.86093521 -392.69726562]
[-59.16004562 -397.37167358]
[-72.35664368 -404.59417725]
[-84.00127411 -414.11874390]
[-93.69731140 -425.62097168]
[-101.11451721 -438.70910645]
[-106.00026703 -452.93740845]
[-108.18814087 -467.82122803]
[-107.60363770 -482.85360718]
[-104.26666260 -497.52261353]
[-98.29086304 -511.32855225]
[-89.87977600 -523.80126953]
[-79.31988525 -534.51586914]
[-66.97084808 -543.10748291]
[-53.25327301 -549.28350830]
[-38.63437271 -552.83349609]
[-23.61206818 -553.63659668]
[-8.69800758 -551.66546631]
[5.59984016 -546.98718262]
[18.79449654 -539.76110840]
[30.43655396 -530.23339844]
[40.12948990 -518.72857666]
[47.54316711 -505.63842773]
[52.42507935 -491.40881348]
[54.60894775 -476.52441406]
[54.02039337 -461.49218750]
[50.67945862 -446.82409668]
[44.69993973 -433.01974487]
[36.28549194 -420.54931641]
[25.72270966 -409.83752441]
[13.37135887 -401.24923706]
[-0.34788004 -395.07696533]
[3.19179249 -380.50057983]
[6.73146486 -365.92419434]
[10.27113724 -351.34783936]
[13.81081009 -336.77145386]
[24.33295441 -326.22946167]
[20.07070732 -310.99319458]
[35.02960968 -311.81265259]
[49.88831711 -309.86880493]
[64.14060211 -305.22644043]
[77.30062103 -298.04223633]
[88.91948700 -288.55960083]
[98.60056305 -277.10031128]
[106.01301575 -264.05374146]
[110.90314484 -249.86346436]
[113.10300446 -235.01228333]
[112.53623199 -220.00575256]
[109.22066498 -205.35502625]
[103.26779175 -191.55938721]
[94.87900543 -179.08923340]
[84.33877563 -168.37008667]
[72.00504303 -159.76805115]
[58.29699707 -153.57727051]
[61.83666992 -139.00090027]
[65.37634277 -124.42452240]
[68.91601562 -109.84814453]
[72.45568848 -95.27176666]
[75.99536133 -80.69539642]
[79.53503418 -66.11901855]
[90.05717468 -55.57701874]
[85.79492950 -40.34075165]
[94.50366211 -52.55377579]
[109.27417755 -55.16758347]
[121.64524841 -46.68486023]
[124.53016663 -31.96489906]
[116.27632141 -19.43996239]
[101.61188507 -16.28490257]
[88.93787384 -24.30630493]
[91.16298676 -9.47226238]
[93.38810730 5.36178160]
[95.61322021 20.19582558]
[109.52426910 25.52014542]
[118.96529388 37.17016602]
[121.32298279 52.08015442]
[115.86522675 66.26146698]
[103.96432495 75.86958313]
[106.18944550 90.70362854]
[108.52493286 105.52069092]
[110.97065735 120.31996155]
[113.41638184 135.11923218]
[115.86211395 149.91850281]
[120.21243286 135.56320190]
[127.41462708 122.40537262]
[137.16244507 111.00450134]
[149.04142761 101.84535217]
[162.54643250 95.31737518]
[177.10327148 91.69814301]
[192.09294128 91.14155579]
[206.87808228 93.67127228]
[220.83003235 99.17972565]
[233.35554504 107.43270111]
[243.92201233 118.07927704]
[252.08016968 130.66674805]
[257.48312378 144.65989685]
[259.90112305 159.46372986]
[259.23135376 174.44876099]
[255.50228882 188.97784424]
[248.87251282 202.43318176]
[239.62393188 214.24264526]
[228.14976501 223.90409851]
[214.93792725 231.00672913]
[200.55018616 235.24851990]
[185.59831238 236.44912720]
[170.71806335 234.55747986]
[156.54216003 229.65402222]
[143.67338562 221.94725037]
[132.65888977 211.76484680]
[123.96704865 199.53981018]
[117.96742249 185.79191589]
[114.91511536 171.10557556]
[111.15881348 185.62762451]
[107.40251160 200.14968872]
[108.28319550 209.24156189]
[103.48067474 214.85917664]
[99.50857544 229.32369995]
[95.53648376 243.78822327]
[91.56438446 258.25274658]
[95.37110138 273.60916138]
[84.53974915 283.83322144]
[80.56764984 298.29772949]
[86.25734711 309.87313843]
[82.65119171 321.83889771]
[72.20462036 327.93774414]
[68.01760864 342.34152222]
[63.83059692 356.74530029]
[59.64358521 371.14907837]
[55.45657349 385.55285645]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 210]
[21 209]
[22 208]
[23 207]
[24 206]
[26 203]
[27 202]
[29 200]
[30 199]
[31 198]
[32 197]
[33 195]
[34 194]
[35 193]
[36 164]
[37 163]
[38 162]
[39 161]
[41 160]
[42 159]
[47 154]
[48 153]
[49 152]
[50 151]
[51 144]
[53 142]
[54 141]
[55 140]
[56 139]
[57 138]
[58 137]
[59 136]
[75 120]
[77 118]
[78 117]
[79 116]
[80 115]
[81 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
