%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGGxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[49.77583694 759.57470703]
[36.03684616 765.61682129]
[21.84044647 770.48803711]
[7.28622055 774.15423584]
[-7.52374315 776.58972168]
[-22.48556137 777.77734375]
[-37.49428940 777.70886230]
[-52.44464493 776.38470459]
[-67.23175812 773.81414795]
[-81.75192261 770.01525879]
[-95.90326691 765.01464844]
[-109.58654022 758.84747314]
[-122.70575714 751.55688477]
[-135.16889954 743.19403076]
[-146.88854980 733.81768799]
[-157.78248596 723.49353027]
[-167.77430725 712.29394531]
[-176.79393005 700.29754639]
[-184.77807617 687.58850098]
[-191.67074585 674.25592041]
[-197.42358398 660.39337158]
[-201.99624634 646.09802246]
[-205.35665894 631.47015381]
[-207.48126221 616.61236572]
[-208.35511780 601.62896729]
[-207.97213745 586.62500000]
[-206.33497620 571.70562744]
[-203.45513916 556.97564697]
[-199.35281372 542.53826904]
[-194.05677795 528.49481201]
[-187.60418701 514.94378662]
[-180.04028320 501.98022461]
[-171.41815186 489.69506836]
[-161.79824829 478.17446899]
[-151.24804688 467.49926758]
[-139.84156799 457.74432373]
[-127.65882874 448.97808838]
[-114.78525543 441.26199341]
[-101.31117249 434.65023804]
[-87.33107758 429.18914795]
[-72.94303894 424.91705322]
[-58.24797440 421.86389160]
[-43.34897232 420.05111694]
[-28.35052872 419.49142456]
[-13.35785294 420.18872070]
[1.52388954 422.13815308]
[16.19031334 425.32601929]
[20.59131241 410.98617554]
[24.99230957 396.64633179]
[29.39330673 382.30648804]
[33.79430389 367.96664429]
[38.19530487 353.62680054]
[42.59630203 339.28695679]
[46.02736282 324.68463135]
[48.47309113 309.88534546]
[50.91881943 295.08609009]
[53.36454391 280.28680420]
[55.81027222 265.48754883]
[58.25600052 250.68827820]
[56.24516678 243.57643127]
[60.84988403 235.68754578]
[63.51568222 220.92633057]
[62.02996445 218.54919434]
[61.39634705 215.44030762]
[61.89825058 211.92129517]
[63.69755554 208.41030884]
[66.80463409 205.37715149]
[70.34430695 190.80078125]
[73.88397980 176.22439575]
[77.42365265 161.64802551]
[80.96332550 147.07165527]
[84.50299835 132.49526978]
[88.04267120 117.91889954]
[91.58234406 103.34252930]
[90.06291199 99.79799652]
[90.11322784 95.60092926]
[91.98970032 91.46742249]
[95.61923981 88.20149231]
[99.80625153 73.79771423]
[98.56018066 68.72875214]
[99.30826569 64.14686584]
[101.53103638 60.73009491]
[104.51520538 58.85203934]
[109.34120178 44.64958191]
[114.16719818 30.44712830]
[118.99319458 16.24467278]
[123.71333313 2.00668311]
[128.32734680 -12.26605034]
[118.17991638 -25.79844856]
[118.09874725 -42.54642487]
[127.91773224 -55.90865326]
[143.60757446 -60.73634720]
[148.00856018 -75.07619476]
[152.40956116 -89.41603851]
[156.81056213 -103.75588989]
[160.02383423 -118.40767670]
[162.02784729 -133.27320862]
[164.03186035 -148.13873291]
[150.05268860 -153.79853821]
[137.92071533 -162.75767517]
[128.39857483 -174.45295715]
[122.08483887 -188.14921570]
[119.37639618 -202.98550415]
[120.44349670 -218.02917480]
[125.21906281 -232.33457947]
[133.40289307 -245.00248718]
[144.48056030 -255.23655701]
[157.75569153 -262.39346313]
[172.39381409 -266.02334595]
[187.47477722 -265.89801025]
[202.05055237 -262.02536011]
[215.20489502 -254.64877319]
[226.11093140 -244.23200989]
[234.08309937 -231.42984009]
[238.62023926 -217.04702759]
[239.43716431 -201.98770142]
[236.48249817 -187.19848633]
[229.94200134 -173.60905457]
[220.22680664 -162.07363892]
[207.94760132 -153.31738281]
[193.87628174 -147.89070129]
[178.89738464 -146.13471985]
[176.89337158 -131.26919556]
[174.88935852 -116.40366364]
[184.92651367 -127.55066681]
[198.96192932 -132.84281921]
[213.86009216 -131.09782410]
[226.29269409 -122.70554352]
[233.48225403 -109.54081726]
[233.82263184 -94.54467773]
[227.23776245 -81.06730652]
[215.19873047 -72.11958313]
[200.39509583 -69.70044708]
[186.13400269 -74.35034180]
[175.60145569 -85.03047180]
[171.15040588 -99.35488892]
[166.74940491 -85.01504517]
[162.34841919 -70.67519379]
[157.94741821 -56.33534622]
[166.92617798 -46.45485687]
[169.87391663 -33.32264709]
[165.91633606 -20.34547043]
[155.98486328 -10.94417381]
[142.60008240 -7.65204096]
[137.98606873 6.62069225]
[138.91967773 13.95214272]
[133.19564819 21.07066917]
[128.36965942 35.27312469]
[123.54365540 49.47558212]
[118.71765900 63.67803574]
[114.21002960 77.98472595]
[110.02301788 92.38850403]
[106.15871429 106.88220215]
[102.61904144 121.45857239]
[99.07936859 136.03494263]
[95.53969574 150.61132812]
[92.00002289 165.18769836]
[88.46035004 179.76406860]
[84.92068481 194.34045410]
[81.38101196 208.91682434]
[78.27690125 223.59213257]
[75.61109924 238.35334778]
[73.05526733 253.13400269]
[70.60954285 267.93325806]
[68.16381836 282.73254395]
[65.71808624 297.53179932]
[63.27236176 312.33108521]
[60.82663345 327.13034058]
[71.93513489 317.05062866]
[86.71179199 314.47177124]
[100.57788849 320.19290161]
[109.23687744 332.44122314]
[110.00566101 347.42150879]
[102.64603424 360.49194336]
[89.43844604 367.60247803]
[74.47542572 366.54986572]
[62.39342117 357.66024780]
[56.93614960 343.68795776]
[52.53515244 358.02780151]
[48.13415146 372.36764526]
[43.73315430 386.70748901]
[39.33215714 401.04733276]
[34.93115997 415.38717651]
[30.53016090 429.72702026]
[44.45982742 435.31549072]
[57.87300873 442.04995728]
[70.67561340 449.88320923]
[82.77783966 458.76031494]
[94.09481049 468.61895752]
[104.54712677 479.38998413]
[114.06147766 490.99792480]
[122.57112885 503.36126709]
[130.01638794 516.39331055]
[136.34503174 530.00268555]
[141.51266479 544.09387207]
[145.48304749 558.56811523]
[148.22833252 573.32379150]
[149.72924805 588.25744629]
[149.97528076 603.26428223]
[148.96469116 618.23913574]
[146.70457458 633.07684326]
[143.21078491 647.67340088]
[138.50782776 661.92645264]
[132.62870789 675.73596191]
[125.61463165 689.00506592]
[117.51482391 701.64068604]
[108.38608551 713.55426025]
[98.29246521 724.66217041]
[87.30474854 734.88647461]
[75.50000763 744.15551758]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 184]
[48 183]
[49 182]
[50 181]
[51 180]
[52 179]
[53 178]
[54 168]
[55 167]
[56 166]
[57 165]
[58 164]
[59 163]
[61 162]
[62 161]
[67 160]
[68 159]
[69 158]
[70 157]
[71 156]
[72 155]
[73 154]
[74 153]
[78 152]
[79 151]
[83 150]
[84 149]
[85 148]
[86 147]
[87 145]
[88 144]
[92 139]
[93 138]
[94 137]
[95 136]
[96 124]
[97 123]
[98 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
