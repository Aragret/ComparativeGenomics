%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[77.34365845 299.16040039]
[74.45422363 313.88784790]
[70.38909149 328.33502197]
[65.17461395 342.40826416]
[58.84461594 356.01623535]
[51.44014740 369.07073975]
[43.00923157 381.48712158]
[33.60654449 393.18478394]
[23.29307175 404.08795166]
[12.13569641 414.12582397]
[0.20678109 423.23336792]
[-12.41630936 431.35150146]
[-25.65170860 438.42755127]
[-39.41357803 444.41564941]
[-53.61266708 449.27694702]
[-68.15688324 452.97991943]
[-82.95191193 455.50054932]
[-97.90178680 456.82247925]
[-112.90955353 456.93716431]
[-127.87789154 455.84384155]
[-142.70970154 453.54962158]
[-157.30882263 450.06936646]
[-171.58053589 445.42562866]
[-185.43232727 439.64855957]
[-198.77430725 432.77560425]
[-211.52000427 424.85134888]
[-223.58670044 415.92718506]
[-234.89617920 406.06097412]
[-245.37509155 395.31671143]
[-254.95544434 383.76409912]
[-263.57513428 371.47802734]
[-271.17825317 358.53820801]
[-277.71545410 345.02853394]
[-283.14440918 331.03665161]
[-287.42987061 316.65328979]
[-290.54403687 301.97174072]
[-292.46670532 287.08718872]
[-293.18545532 272.09619141]
[-292.69555664 257.09597778]
[-291.00024414 242.18383789]
[-288.11050415 227.45645142]
[-284.04504395 213.00936890]
[-278.83026123 198.93626404]
[-272.49996948 185.32839966]
[-265.09521484 172.27406311]
[-256.66403198 159.85789490]
[-247.26107788 148.16041565]
[-236.94735718 137.25749207]
[-225.78976440 127.21984863]
[-213.86064148 118.11257172]
[-201.23738098 109.99472809]
[-188.00181580 102.91896820]
[-174.23982239 96.93117523]
[-160.04061890 92.07019043]
[-145.49632263 88.36753845]
[-130.70124817 85.84722900]
[-115.75134277 84.52561188]
[-100.74356842 84.41126251]
[-85.77526093 85.50490570]
[-70.94348907 87.79946899]
[-56.34445572 91.28005219]
[-42.07283401 95.92409515]
[-28.22118568 101.70147705]
[-14.87934208 108.57472229]
[-2.13383389 116.49926758]
[9.93267918 125.42370605]
[21.24193954 135.29016113]
[31.72060204 146.03463745]
[43.26690292 136.45951843]
[54.81320572 126.88440704]
[57.95531464 120.19493866]
[66.60343933 117.25422668]
[78.29101562 107.85207367]
[89.97859955 98.44992065]
[93.78604126 91.34528351]
[101.91090393 88.99635315]
[113.73717499 79.76925659]
[125.56344604 70.54216003]
[137.38970947 61.31505966]
[149.14695740 52.00017548]
[160.83454895 42.59802246]
[172.52212524 33.19587326]
[184.20970154 23.79372215]
[195.89729309 14.39157104]
[190.53788757 1.71395636]
[188.64947510 -11.90691090]
[190.35458374 -25.53908157]
[195.53010559 -38.25156021]
[203.81613159 -49.17789459]
[214.64103699 -57.57521439]
[227.26081848 -62.87475586]
[240.81030273 -64.72037506]
[254.36244202 -62.99246597]
[266.99172974 -57.81569290]
[277.83740234 -49.55003738]
[289.79974365 -58.60003662]
[301.76208496 -67.65003967]
[313.72442627 -76.70003510]
[325.68676758 -85.75003815]
[317.65060425 -98.42597961]
[310.68865967 -111.72225189]
[304.84848022 -125.54802704]
[300.17001343 -139.80885315]
[296.68515015 -154.40733337]
[294.41775513 -169.24371338]
[293.38330078 -184.21667480]
[293.58883667 -199.22392273]
[295.03295898 -214.16293335]
[297.70581055 -228.93165588]
[301.58914185 -243.42921448]
[306.65643311 -257.55657959]
[312.87304688 -271.21722412]
[320.19650269 -284.31784058]
[328.57681274 -296.76895142]
[337.95669556 -308.48547363]
[348.27209473 -319.38742065]
[359.45254517 -329.40023804]
[371.42169189 -338.45562744]
[384.09771729 -346.49163818]
[397.39407349 -353.45343018]
[411.21990967 -359.29342651]
[425.48080444 -363.97174072]
[440.07931519 -367.45639038]
[454.91574097 -369.72363281]
[469.88870239 -370.75790405]
[484.89593506 -370.55218506]
[499.83493042 -369.10787964]
[514.60363770 -366.43484497]
[529.10113525 -362.55136108]
[543.22845459 -357.48391724]
[556.88903809 -351.26712036]
[569.98956299 -343.94351196]
[582.44055176 -335.56304932]
[594.15698242 -326.18301392]
[605.05877686 -315.86749268]
[615.07147217 -304.68692017]
[624.12670898 -292.71768188]
[632.16259766 -280.04156494]
[639.12420654 -266.74511719]
[644.96405029 -252.91920471]
[649.64221191 -238.65824890]
[653.12670898 -224.05969238]
[655.39373779 -209.22325134]
[656.42785645 -194.25027466]
[656.22192383 -179.24304199]
[654.77746582 -164.30406189]
[652.10424805 -149.53540039]
[648.22058105 -135.03793335]
[643.15295410 -120.91069031]
[636.93603516 -107.25019073]
[629.61224365 -94.14974213]
[621.23162842 -81.69883728]
[611.85144043 -69.98252869]
[601.53582764 -59.08084869]
[590.35510254 -49.06827164]
[578.38574219 -40.01319504]
[565.70953369 -31.97747803]
[552.41302490 -25.01600647]
[538.58703613 -19.17634010]
[524.32604980 -14.49836826]
[509.72744751 -11.01404762]
[494.89096069 -8.74717999]
[479.91796875 -7.71324921]
[464.91073608 -7.91931963]
[449.97177124 -9.36398315]
[435.20315552 -12.03737164]
[420.70571899 -15.92122173]
[406.57855225 -20.98900223]
[392.91812134 -27.20609665]
[379.81774902 -34.53003311]
[367.36694336 -42.91078186]
[355.65075684 -52.29109192]
[344.74920654 -62.60688782]
[334.73675537 -73.78769684]
[322.77441406 -64.73770142]
[310.81210327 -55.68770218]
[298.84976196 -46.63769913]
[286.88742065 -37.58769989]
[292.47805786 -22.27225494]
[293.06811523 -5.96035576]
[288.58847046 9.75485420]
[279.46566772 23.33495712]
[266.58142090 33.44685364]
[251.18727112 39.09362793]
[234.78318787 39.71282578]
[218.97129822 35.23246002]
[205.29943848 26.07915115]
[193.61186218 35.48130417]
[181.92427063 44.88345337]
[170.23669434 54.28560638]
[158.54911804 63.68775558]
[155.30775452 70.32969666]
[146.61680603 73.14132690]
[134.79054260 82.36842346]
[122.96427155 91.59552765]
[111.13800049 100.82262421]
[99.38075256 110.13750458]
[87.69316864 119.53965759]
[76.00559235 128.94180298]
[64.38832855 138.43070984]
[52.84202194 148.00582886]
[41.29572296 157.58094788]
[49.91567993 169.86682129]
[57.51907730 182.80647278]
[64.05660248 196.31599426]
[69.48584747 210.30775452]
[73.77162170 224.69102478]
[76.88610840 239.37252808]
[78.80912781 254.25701904]
[79.52819061 269.24798584]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 202]
[69 201]
[70 200]
[72 199]
[73 198]
[74 197]
[76 196]
[77 195]
[78 194]
[79 193]
[80 191]
[81 190]
[82 189]
[83 188]
[84 187]
[95 178]
[96 177]
[97 176]
[98 175]
[99 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
