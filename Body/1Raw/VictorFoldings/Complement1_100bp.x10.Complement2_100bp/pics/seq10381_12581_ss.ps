%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAAxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[77.18249512 589.18438721]
[67.12664032 600.37707520]
[55.13411713 609.46423340]
[41.63844681 616.11724854]
[27.12748337 620.09576416]
[12.12579727 621.25592041]
[-2.82431412 619.55572510]
[-17.18241310 615.05664062]
[-30.42946243 607.92138672]
[-42.08658981 598.40783691]
[-51.73239899 586.85986328]
[-59.01819611 573.69500732]
[-63.68061066 559.38909912]
[-65.55109406 544.45935059]
[-64.56202698 529.44543457]
[-60.74917221 514.89007568]
[-54.25035858 501.31942749]
[-45.30051041 489.22412109]
[-34.22315979 479.04135132]
[-21.41875076 471.13922119]
[-7.35015011 465.80340576]
[7.47406912 463.22677612]
[22.51802063 463.50247192]
[25.62213135 448.82717896]
[28.72624016 434.15185547]
[31.83035088 419.47656250]
[19.95891190 410.44692993]
[13.15724087 397.10351562]
[12.82213306 382.06860352]
[19.07360268 368.32308960]
[30.72046471 358.61547852]
[45.48692703 354.91238403]
[48.59103775 340.23706055]
[51.69514847 325.56176758]
[54.79925537 310.88647461]
[57.90336609 296.21115112]
[61.00747681 281.53585815]
[63.78308868 266.79489136]
[58.22449112 252.97637939]
[68.10834503 240.62243652]
[70.55407715 225.82316589]
[64.99547577 212.00465393]
[74.87933350 199.65071106]
[77.32506561 184.85144043]
[79.77079010 170.05216980]
[82.21651459 155.25289917]
[84.66224670 140.45362854]
[82.65860748 136.11837769]
[83.35707855 130.47840881]
[87.40741730 125.25286865]
[90.29269409 110.53297424]
[85.94354248 97.24476624]
[94.98741913 86.58174896]
[97.87268829 71.86186218]
[100.75795746 57.14196777]
[90.35585785 67.94920349]
[76.32518768 73.25393677]
[61.37504578 72.03191376]
[48.39207840 64.51908875]
[39.88308716 52.16607285]
[37.49103165 37.35803223]
[41.67777252 22.95417023]
[51.63492203 11.73565006]
[65.43990326 5.86858988]
[80.42720032 6.48582745]
[93.70299530 13.46818352]
[102.70394135 25.46747589]
[105.69206238 40.16810226]
[111.14742279 26.19530487]
[116.60278320 12.22250652]
[122.05813599 -1.75029135]
[127.51349640 -15.72308922]
[132.96885681 -29.69588661]
[138.42420959 -43.66868591]
[143.87956238 -57.64148331]
[140.68110657 -75.77574158]
[154.79942322 -86.19879913]
[160.04614258 -100.25126648]
[165.29286194 -114.30374146]
[170.53958130 -128.35621643]
[175.78630066 -142.40867615]
[171.15199280 -154.44554138]
[175.81129456 -166.04187012]
[186.76033020 -171.18437195]
[192.21568298 -185.15716553]
[190.02722168 -200.82629395]
[201.86346436 -209.86801147]
[207.31881714 -223.84080505]
[212.56553650 -237.89328003]
[217.60244751 -252.02230835]
[222.63937378 -266.15133667]
[227.67628479 -280.28036499]
[214.25555420 -287.02304077]
[201.76518250 -295.36392212]
[190.39448547 -305.17651367]
[180.31587219 -316.31207275]
[171.68212891 -328.60183716]
[164.62411499 -341.85943604]
[159.24885559 -355.88394165]
[155.63781738 -370.46267700]
[153.84576416 -385.37469482]
[153.89985657 -400.39392090]
[155.79925537 -415.29263306]
[159.51519775 -429.84500122]
[164.99131775 -443.83041382]
[172.14462280 -457.03683472]
[180.86666870 -469.26409912]
[191.02522278 -480.32678223]
[202.46629333 -490.05725098]
[215.01641846 -498.30792236]
[228.48535156 -504.95376587]
[242.66891479 -509.89404297]
[257.35208130 -513.05377197]
[272.31228638 -514.38519287]
[287.32266235 -513.86798096]
[302.15573120 -511.51010132]
[316.58660889 -507.34719849]
[330.39651489 -501.44241333]
[343.37606812 -493.88528442]
[355.32858276 -484.79037476]
[366.07275391 -474.29550171]
[375.44580078 -462.55984497]
[383.30557251 -449.76126099]
[389.53292847 -436.09381104]
[394.03347778 -421.76464844]
[396.73898315 -406.99102783]
[397.60842896 -391.99691772]
[396.62866211 -377.00958252]
[393.81448364 -362.25628662]
[389.20858765 -347.96066284]
[382.88076782 -334.33938599]
[374.92700195 -321.59902954]
[365.46783447 -309.93267822]
[354.64669800 -299.51718140]
[342.62759399 -290.51049805]
[329.59274292 -283.04910278]
[315.73974609 -277.24612427]
[301.27862549 -273.18957520]
[286.42861938 -270.94091797]
[271.41479492 -270.53421021]
[256.46484375 -271.97567749]
[241.80531311 -275.24343872]
[236.76840210 -261.11441040]
[231.73149109 -246.98539734]
[226.69456482 -232.85636902]
[227.89584351 -228.23402405]
[226.20616150 -222.80798340]
[221.29161072 -218.38545227]
[215.83625793 -204.41265869]
[218.41491699 -189.74296570]
[206.18847656 -179.70181274]
[200.73312378 -165.72901917]
[204.31039429 -148.54850769]
[189.83876038 -137.16195679]
[184.59204102 -123.10948944]
[179.34532166 -109.05702209]
[174.09861755 -95.00454712]
[168.85189819 -80.95207977]
[173.58630371 -69.82050323]
[169.33018494 -58.07022095]
[157.85235596 -52.18612671]
[152.39700317 -38.21332932]
[146.94165039 -24.24053001]
[141.48629761 -10.26773262]
[136.03092957 3.70506573]
[130.57557678 17.67786407]
[125.12022400 31.65066147]
[119.66486359 45.62345886]
[115.47785187 60.02724075]
[112.59258270 74.74713135]
[109.70730591 89.46702576]
[114.05645752 102.75523376]
[105.01258087 113.41825104]
[102.12731171 128.13813782]
[99.46151733 142.89935303]
[97.01578522 157.69862366]
[94.57006073 172.49789429]
[92.12433624 187.29716492]
[89.67860413 202.09643555]
[95.06227112 216.97349548]
[85.35334778 228.26889038]
[82.90761566 243.06816101]
[88.29128265 257.94522095]
[78.58235931 269.24063110]
[80.42195129 274.12561035]
[80.22364044 278.76391602]
[78.42263031 282.42059326]
[75.68277740 284.63995361]
[72.57866669 299.31527710]
[69.47455597 313.99057007]
[66.37045288 328.66586304]
[63.26633835 343.34118652]
[60.16222763 358.01647949]
[72.16448975 367.38168335]
[78.88298798 380.97390747]
[79.03315735 396.07351685]
[72.63877869 409.68499756]
[61.01662064 419.13143921]
[46.50565338 422.58068848]
[43.40154266 437.25598145]
[40.29743195 451.93127441]
[37.19332123 466.60659790]
[51.06041718 472.44613647]
[63.57162094 480.80471802]
[74.27466583 491.38021851]
[82.78264618 503.79034424]
[88.78800201 517.58642578]
[92.07364655 532.26977539]
[92.52079773 547.30963135]
[90.11329651 562.16223145]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 202]
[24 201]
[25 200]
[26 199]
[32 193]
[33 192]
[34 191]
[35 190]
[36 189]
[37 188]
[38 184]
[40 182]
[41 181]
[43 179]
[44 178]
[45 177]
[46 176]
[47 175]
[50 174]
[51 173]
[53 171]
[54 170]
[55 169]
[68 168]
[69 167]
[70 166]
[71 165]
[72 164]
[73 163]
[74 162]
[75 161]
[77 158]
[78 157]
[79 156]
[80 155]
[81 154]
[84 152]
[85 151]
[87 149]
[88 148]
[89 145]
[90 144]
[91 143]
[92 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
