%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[99.44986725 763.31372070]
[84.72158813 760.44830322]
[70.18893433 756.71539307]
[55.90293884 752.12805176]
[41.91379166 746.70251465]
[28.27062798 740.45776367]
[15.02136898 733.41571045]
[2.21255541 725.60113525]
[-10.11082172 717.04150391]
[-21.90547562 707.76684570]
[-33.12997818 697.80981445]
[-43.74490356 687.20526123]
[-53.71296310 675.99047852]
[-62.99914169 664.20489502]
[-71.57083130 651.88989258]
[-79.39791107 639.08874512]
[-86.45289612 625.84637451]
[-92.71099854 612.20935059]
[-98.15024567 598.22552490]
[-102.75151825 583.94403076]
[-106.49867249 569.41503906]
[-109.37853241 554.68957520]
[-111.38098145 539.81933594]
[-112.49899292 524.85662842]
[-112.72864532 509.85394287]
[-112.06911469 494.86401367]
[-110.52272797 479.93948364]
[-108.09492493 465.13278198]
[-104.79421234 450.49588013]
[-100.63220215 436.08026123]
[-95.62351227 421.93649292]
[-89.78572083 408.11428833]
[-83.13935089 394.66220093]
[-75.70774078 381.62747192]
[-67.51699829 369.05587769]
[-58.59588623 356.99160767]
[-48.97574615 345.47702026]
[-38.69036484 334.55255127]
[-27.77587700 324.25659180]
[-16.27061653 314.62530518]
[-4.21499634 305.69247437]
[8.34863758 297.48956299]
[21.37615395 290.04531860]
[34.82179260 283.38589478]
[48.63832855 277.53472900]
[62.77722549 272.51229858]
[77.18881989 268.33633423]
[91.82249451 265.02142334]
[106.62684631 262.57925415]
[105.06632233 247.66065979]
[103.50579834 232.74206543]
[101.94527435 217.82345581]
[100.38475037 202.90484619]
[97.30463409 199.25492859]
[96.48468018 193.63134766]
[99.00666809 187.51979065]
[97.89102173 172.56134033]
[96.77537537 157.60289001]
[95.65972900 142.64442444]
[94.54407501 127.68597412]
[93.42842865 112.72752380]
[85.71572876 101.06536865]
[91.61312103 88.38812256]
[90.49746704 73.42967224]
[83.86024475 86.88133240]
[72.63131714 96.82675171]
[58.47644806 101.79058075]
[43.49541473 101.03646088]
[29.91057205 94.67626953]
[19.73714638 83.65350342]
[14.48430729 69.60331726]
[14.93128109 54.60998154]
[21.01176262 40.89765930]
[31.82374763 30.50049782]
[45.76334381 24.96085358]
[60.76269150 25.10049820]
[74.59673309 30.89871597]
[85.21326447 41.49537659]
[91.03700256 55.31666183]
[93.04101562 40.45113373]
[95.04502869 25.58560371]
[97.04904175 10.72007561]
[99.05305481 -4.14545250]
[101.05706787 -19.01098061]
[103.06108093 -33.87651062]
[92.67295074 -23.05584717]
[78.29406738 -18.78410530]
[63.68304443 -22.17790794]
[52.65916061 -32.35012436]
[48.10403442 -46.64175797]
[51.20836639 -61.31701279]
[61.16069031 -72.53981018]
[75.35949707 -77.37654114]
[90.09324646 -74.56289673]
[101.51057434 -64.83435059]
[106.62693787 -50.73480988]
[110.81394958 -65.13858795]
[115.00096130 -79.54237366]
[119.18797302 -93.94615173]
[123.37498474 -108.34993744]
[110.05990601 -115.37087250]
[98.43091583 -124.92866516]
[88.96420288 -136.63192749]
[82.04743195 -150.00141907]
[77.96384430 -164.48965454]
[76.88065338 -179.50337219]
[78.84221649 -194.42774963]
[83.76820374 -208.65165710]
[91.45690918 -221.59263611]
[101.59347534 -232.72073364]
[113.76283264 -241.58029175]
[127.46662903 -247.80851746]
[142.14372253 -251.15034485]
[157.19308472 -251.46894836]
[171.99845886 -248.75128174]
[185.95358276 -243.10861206]
[198.48698425 -234.77201843]
[209.08543396 -224.08288574]
[217.31494141 -211.47891235]
[222.83850098 -197.47622681]
[225.42993164 -182.64823914]
[224.98312378 -167.60212708]
[221.51635742 -152.95404053]
[215.17161560 -139.30380249]
[206.20869446 -127.21038055]
[194.99462891 -117.16898346]
[181.98861694 -109.59082031]
[167.72325134 -104.78619385]
[152.78269958 -102.95185852]
[137.77876282 -104.16292572]
[133.59175110 -89.75914764]
[129.40473938 -75.35536194]
[125.21773529 -60.95158005]
[121.03072357 -46.54779816]
[117.92661285 -31.87249565]
[115.92259979 -17.00696754]
[113.91858673 -2.14143896]
[111.91457367 12.72408962]
[109.91055298 27.58961678]
[107.90653992 42.45514679]
[105.90252686 57.32067490]
[105.45592499 72.31402588]
[106.57157135 87.27247620]
[114.28427124 98.93463135]
[108.38687897 111.61187744]
[109.50253296 126.57032776]
[110.61817932 141.52877808]
[111.73382568 156.48722839]
[112.84947968 171.44569397]
[113.96512604 186.40414429]
[115.30335999 201.34432983]
[116.86388397 216.26292419]
[118.42440796 231.18153381]
[119.98492432 246.10014343]
[121.54544830 261.01873779]
[136.53472900 260.34442139]
[151.53761292 260.55926514]
[166.50143433 261.66250610]
[181.37361145 263.65026855]
[196.10191345 266.51559448]
[210.63459778 270.24841309]
[224.92063904 274.83560181]
[238.90983582 280.26101685]
[252.55305481 286.50567627]
[265.80236816 293.54757690]
[278.61126709 301.36203003]
[290.93469238 309.92153931]
[302.72943115 319.19610596]
[313.95404053 329.15307617]
[324.56906128 339.75753784]
[334.53720093 350.97219849]
[343.82348633 362.75769043]
[352.39529419 375.07260132]
[360.22247314 387.87371826]
[367.27758789 401.11599731]
[373.53579712 414.75299072]
[378.97515869 428.73678589]
[383.57656860 443.01824951]
[387.32385254 457.54721069]
[390.20382690 472.27264404]
[392.20642090 487.14285278]
[393.32455444 502.10556030]
[393.55435181 517.10821533]
[392.89495850 532.09814453]
[391.34869385 547.02270508]
[388.92102051 561.82946777]
[385.62042236 576.46636963]
[381.45855713 590.88201904]
[376.44998169 605.02581787]
[370.61230469 618.84808350]
[363.96606445 632.30023193]
[356.53457642 645.33502197]
[348.34393311 657.90667725]
[339.42291260 669.97100830]
[329.80288696 681.48571777]
[319.51760864 692.41027832]
[308.60321045 702.70629883]
[297.09802246 712.33770752]
[285.04248047 721.27062988]
[272.47891235 729.47369385]
[259.45147705 736.91802979]
[246.00588989 743.57757568]
[232.18940735 749.42889404]
[218.05055237 754.45141602]
[203.63899231 758.62750244]
[189.00534058 761.94250488]
[174.20101929 764.38482666]
[159.27799988 765.94580078]
[144.28872681 766.61999512]
[129.28584290 766.40502930]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 155]
[50 154]
[51 153]
[52 152]
[53 151]
[56 150]
[57 149]
[58 148]
[59 147]
[60 146]
[61 145]
[63 143]
[64 142]
[79 141]
[80 140]
[81 139]
[82 138]
[83 137]
[84 136]
[85 135]
[96 134]
[97 133]
[98 132]
[99 131]
[100 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
