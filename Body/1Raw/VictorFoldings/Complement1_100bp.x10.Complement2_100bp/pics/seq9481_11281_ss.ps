%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[186.58564758 250.49349976]
[197.35910034 240.02508545]
[188.39840698 227.99571228]
[174.59040833 222.41107178]
[172.55145264 206.72180176]
[163.59075928 194.69242859]
[149.78274536 189.10778809]
[147.74380493 173.41851807]
[138.78309631 161.38912964]
[129.64430237 149.49450684]
[120.32941437 137.73724365]
[111.01453400 125.98000336]
[101.69965363 114.22274780]
[88.77265167 108.89505768]
[86.54309845 95.09213257]
[77.22821045 83.33488464]
[72.37462616 81.41399384]
[69.07332611 78.14984894]
[67.57601929 74.35865784]
[67.77400970 70.83826447]
[58.99340439 58.67681122]
[50.21280289 46.51535416]
[52.40443802 61.35438156]
[50.18419266 76.18915558]
[43.74413300 89.73632050]
[33.64138794 100.82390594]
[20.74995232 108.49272919]
[6.18506145 112.07936096]
[-8.79327679 111.27352142]
[-22.88928604 106.14492798]
[-34.88352203 97.13724518]
[-43.73835754 85.02973175]
[-48.68776703 70.86981201]
[-49.30357361 55.88245773]
[-45.53250885 41.36422348]
[-37.70080185 28.57108688]
[-26.48597336 18.60977936]
[-12.85822201 12.34205341]
[2.00351715 10.31012917]
[16.81355476 12.68979073]
[30.29067421 19.27517128]
[41.26677704 29.49382210]
[36.22986221 15.36479187]
[31.19294357 1.23576260]
[26.15602875 -12.89326668]
[21.11911201 -27.02229691]
[16.08219528 -41.15132523]
[11.04527950 -55.28035736]
[6.00836325 -69.40938568]
[3.39333606 -54.63908768]
[-4.31832981 -41.77323532]
[-16.11203194 -32.50454712]
[-30.43610573 -28.05247688]
[-45.40597153 -29.00277710]
[-59.05208969 -35.23041534]
[-69.57907867 -45.91603851]
[-75.60192871 -59.65377045]
[-76.32822418 -74.63617706]
[-71.66242218 -88.89205933]
[-62.21838760 -100.54582214]
[-49.23863602 -108.06420135]
[-34.43088150 -110.45803070]
[-19.74333763 -107.41236115]
[-7.10840750 -99.32789612]
[1.81261444 -87.26615906]
[0.03014852 -102.15987396]
[-1.75231743 -117.05358887]
[-3.53478336 -131.94731140]
[-5.31724930 -146.84103394]
[-14.63961601 -159.62399292]
[-8.46953392 -173.18051147]
[-10.25199986 -188.07423401]
[-25.26435089 -187.85743713]
[-40.21712112 -189.21107483]
[-54.94648361 -192.12031555]
[-69.29104614 -196.55328369]
[-83.09365082 -202.46139526]
[-96.20306396 -209.77993774]
[-108.47565460 -218.42871094]
[-119.77695465 -228.31295776]
[-129.98313904 -239.32437134]
[-138.98239136 -251.34233093]
[-146.67610168 -264.23513794]
[-152.97998047 -277.86154175]
[-157.82495117 -292.07223511]
[-161.15794373 -306.71151733]
[-162.94242859 -321.61901855]
[-163.15884399 -336.63137817]
[-161.80484009 -351.58410645]
[-158.89524841 -366.31341553]
[-154.46194458 -380.65786743]
[-148.55348206 -394.46032715]
[-141.23463440 -407.56954956]
[-132.58555603 -419.84194946]
[-122.70104218 -431.14300537]
[-111.68936920 -441.34890747]
[-99.67119598 -450.34786987]
[-86.77819824 -458.04129028]
[-73.15164948 -464.34481812]
[-58.94083023 -469.18945312]
[-44.30145645 -472.52209473]
[-29.39392090 -474.30621338]
[-14.38155842 -474.52227783]
[0.57114738 -473.16790771]
[15.30036545 -470.25793457]
[29.64471626 -465.82427979]
[43.44703293 -459.91549683]
[56.55609131 -452.59631348]
[68.82826233 -443.94696045]
[80.12908173 -434.06216431]
[90.33473206 -423.05023193]
[99.33339691 -411.03186035]
[107.02648163 -398.13867188]
[113.32969666 -384.51196289]
[118.17398071 -370.30102539]
[121.50626373 -355.66156006]
[123.29001617 -340.75399780]
[123.50571442 -325.74163818]
[122.15098572 -310.78894043]
[119.24066925 -296.05981445]
[114.80666351 -281.71557617]
[108.89753723 -267.91339111]
[101.57804871 -254.80450439]
[92.92838287 -242.53254700]
[83.04331207 -231.23196411]
[72.03114319 -221.02658081]
[60.01253510 -212.02821350]
[47.11916733 -204.33543396]
[33.49230576 -198.03254700]
[19.28125381 -193.18861389]
[4.64171791 -189.85668945]
[6.42418385 -174.96298218]
[15.61905670 -163.24531555]
[9.57646847 -148.62348938]
[11.35893440 -133.72978210]
[13.14140034 -118.83605957]
[14.92386627 -103.94234467]
[16.70633125 -89.04862213]
[20.13739204 -74.44630432]
[25.17430878 -60.31727219]
[30.21122551 -46.18824387]
[35.24814224 -32.05921173]
[40.28505707 -17.93018341]
[45.32197571 -3.80115366]
[50.35889053 10.32787609]
[55.39580536 24.45690536]
[62.37425995 37.73475266]
[71.15486145 49.89620590]
[79.93546295 62.05766296]
[88.98546600 74.01999664]
[98.30034637 85.77725220]
[111.22734833 91.10494232]
[113.45690155 104.90786743]
[122.77178955 116.66511536]
[132.08666992 128.42236328]
[141.40155029 140.17962646]
[147.39736938 142.96559143]
[150.60470581 147.65707397]
[150.81248474 152.42843628]
[159.77317810 164.45782471]
[174.22210693 170.90287781]
[175.62013245 185.73171997]
[184.58082581 197.76110840]
[199.02976990 204.20616150]
[200.42779541 219.03501892]
[209.38848877 231.06439209]
[222.50292969 223.73866272]
[236.46141052 218.18745422]
[251.02505493 214.50573730]
[265.94470215 212.75651550]
[280.96499634 212.96971130]
[295.82894897 215.14169312]
[310.28225708 219.23529053]
[324.07754517 225.18045044]
[336.97879028 232.87544250]
[348.76522827 242.18859863]
[359.23516846 252.96057129]
[368.20947266 265.00701904]
[375.53457642 278.12182617]
[381.08511353 292.08056641]
[384.76614380 306.64437866]
[386.51464844 321.56408691]
[386.30075073 336.58438110]
[384.12805176 351.44824219]
[380.03375244 365.90133667]
[374.08795166 379.69635010]
[366.39233398 392.59722900]
[357.07861328 404.38320923]
[346.30615234 414.85266113]
[334.25927734 423.82638550]
[321.14413452 431.15084839]
[307.18511963 436.70074463]
[292.62112427 440.38107300]
[277.70132446 442.12887573]
[262.68106079 441.91424561]
[247.81729126 439.74084473]
[233.36439514 435.64587402]
[219.56967163 429.69940186]
[206.66915894 422.00317383]
[194.88360596 412.68890381]
[184.41468811 401.91595459]
[175.44152832 389.86865234]
[168.11767578 376.75314331]
[162.56846619 362.79388428]
[158.88882446 348.22970581]
[157.14172363 333.30981445]
[157.35707092 318.28955078]
[159.53117371 303.42590332]
[163.62683105 288.97317505]
[169.57395935 275.17874146]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 166]
[3 165]
[5 163]
[6 162]
[8 160]
[9 159]
[10 156]
[11 155]
[12 154]
[13 153]
[15 151]
[16 150]
[20 149]
[21 148]
[22 147]
[42 146]
[43 145]
[44 144]
[45 143]
[46 142]
[47 141]
[48 140]
[49 139]
[65 138]
[66 137]
[67 136]
[68 135]
[69 134]
[71 132]
[72 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
