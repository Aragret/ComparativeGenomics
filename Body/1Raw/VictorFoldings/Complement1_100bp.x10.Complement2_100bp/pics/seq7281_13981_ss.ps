%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[65.25021362 737.88018799]
[50.28225327 736.75085449]
[35.47900772 734.26507568]
[20.96314621 730.44342041]
[6.85495138 725.31756592]
[-6.72867012 718.93005371]
[-19.67515564 711.33374023]
[-31.87722588 702.59161377]
[-43.23376846 692.77612305]
[-53.65067673 681.96856689]
[-63.04163361 670.25854492]
[-71.32881927 657.74304199]
[-78.44355774 644.52575684]
[-84.32690430 630.71630859]
[-88.93009186 616.42901611]
[-92.21498871 601.78234863]
[-94.15436554 586.89770508]
[-94.73216248 571.89831543]
[-93.94358063 556.90850830]
[-91.79515839 542.05255127]
[-88.30470276 527.45355225]
[-83.50112915 513.23236084]
[-77.42425537 499.50698853]
[-70.12442017 486.39105225]
[-61.66212463 473.99328613]
[-52.10749054 462.41638184]
[-41.53969193 451.75634766]
[-30.04629517 442.10144043]
[-17.72254372 433.53170776]
[-4.67055559 426.11813354]
[9.00151157 419.92218018]
[23.18036652 414.99517822]
[37.74851608 411.37796021]
[52.58523941 409.10049438]
[67.56759644 408.18167114]
[68.01419830 393.18829346]
[68.46080780 378.19494629]
[68.90740967 363.20159912]
[69.35401917 348.20825195]
[69.80062103 333.21490479]
[70.24723053 318.22155762]
[60.04039764 329.21340942]
[45.34473419 332.21963501]
[31.64135933 326.11901855]
[24.04129219 313.18692017]
[25.37917137 298.24670410]
[35.15599823 286.87069702]
[49.72526169 283.30187988]
[63.65298462 288.87130737]
[71.74477386 301.50286865]
[73.96988678 286.66882324]
[76.19500732 271.83477783]
[78.42012024 257.00073242]
[64.98987579 263.68118286]
[51.32946396 257.48498535]
[47.50882339 242.97972107]
[56.34439850 230.85813904]
[71.32292175 230.05581665]
[81.40231323 241.16262817]
[84.72457886 226.53517151]
[88.04683685 211.90769958]
[91.36909485 197.28024292]
[94.69135284 182.65278625]
[98.01361084 168.02532959]
[98.79493713 153.04568481]
[97.01247406 138.15197754]
[95.23000336 123.25825500]
[93.44754028 108.36453247]
[90.67192841 93.62357330]
[86.91562653 79.10151672]
[83.15932465 64.57945251]
[79.40302277 50.05739594]
[68.45642090 38.63451004]
[72.76002502 24.37518692]
[69.00372314 9.85312748]
[58.05711365 -1.56975865]
[62.36071777 -15.82908058]
[58.60441589 -30.35113907]
[47.65781021 -41.77402496]
[51.96141434 -56.03334808]
[48.20511246 -70.55540466]
[44.44881058 -85.07746887]
[29.41546631 -84.31365967]
[14.53615284 -86.59201813]
[0.42017007 -91.81924438]
[-12.35444164 -99.78128815]
[-23.26456833 -110.15211487]
[-31.86345100 -122.50703430]
[-37.79896545 -136.34013367]
[-40.82806015 -151.08494568]
[-40.82669449 -166.13768005]
[-37.79492569 -180.88194275]
[-31.85689926 -194.71395874]
[-23.25577545 -207.06732178]
[-12.34376621 -217.43617249]
[0.43228936 -225.39590454]
[14.54922009 -230.62055969]
[29.42894745 -232.89622498]
[44.46215439 -232.12968445]
[59.03324127 -228.35234070]
[72.54553223 -221.71887207]
[84.44570160 -212.50091553]
[94.24645233 -201.07592773]
[101.54644775 -187.91177368]
[106.04676056 -173.54751587]
[107.56309509 -158.57135010]
[106.03337097 -143.59654236]
[101.52021790 -129.23629761]
[94.20845795 -116.07868195]
[84.39749908 -104.66246796]
[72.48908234 -95.45515442]
[58.97087097 -88.83376312]
[62.72717285 -74.31170654]
[66.48347473 -59.78964615]
[77.16140747 -49.40547562]
[73.12648010 -34.10744095]
[76.88277435 -19.58538055]
[87.56070709 -9.20120907]
[83.52577972 6.09682703]
[87.28208160 20.61888695]
[97.96001434 31.00305748]
[93.92508698 46.30109406]
[97.68138885 60.82315445]
[101.43768311 75.34521484]
[105.19398499 89.86727142]
[111.26954651 76.15277100]
[123.73636627 67.81140137]
[138.73146057 67.42782593]
[151.60844421 75.12090302]
[158.37722778 88.50684357]
[156.94044495 103.43787384]
[147.74330139 115.28744507]
[133.63562012 120.38385010]
[118.98882294 117.14790344]
[108.34125519 106.58206940]
[110.12372589 121.47578430]
[111.90618896 136.36950684]
[113.68865204 151.26321411]
[118.72797394 137.13505554]
[127.08010864 124.67543793]
[138.23431396 114.64630127]
[151.50852966 107.66092682]
[166.09100342 104.14646149]
[181.09001160 104.31783295]
[195.58839417 108.16454315]
[208.69953918 115.45138550]
[219.62168884 125.73274231]
[227.68698120 138.37992859]
[232.40219116 152.61955261]
[233.47898865 167.58084106]
[230.85154724 182.34893799]
[224.68051147 196.02075195]
[215.34324646 207.76023865]
[203.41073608 216.84951782]
[189.61265564 222.73280334]
[174.79277039 225.05032349]
[159.85729980 223.66033936]
[145.71958923 218.64787292]
[133.24412537 210.31942749]
[123.19382477 199.18429565]
[116.18323517 185.92338562]
[112.64107513 171.34757996]
[109.31881714 185.97505188]
[105.99655914 200.60250854]
[102.67429352 215.22996521]
[99.35203552 229.85742188]
[96.02977753 244.48487854]
[93.25416565 259.22586060]
[91.02905273 274.05990601]
[88.80393219 288.89392090]
[86.57881165 303.72796631]
[85.24057770 318.66815186]
[84.79397583 333.66149902]
[84.34736633 348.65487671]
[83.90076447 363.64822388]
[83.45415497 378.64157104]
[83.00755310 393.63491821]
[82.56094360 408.62826538]
[97.46204376 410.43725586]
[112.13690948 413.59378052]
[126.46392822 418.07168579]
[140.32438660 423.83389282]
[153.60342407 430.83264160]
[166.19100952 439.00991821]
[177.98283386 448.29797363]
[188.88117981 458.61987305]
[198.79574585 469.89004517]
[207.64437866 482.01507568]
[215.35372925 494.89456177]
[221.85995483 508.42175293]
[227.10910034 522.48449707]
[231.05769348 536.96636963]
[233.67301941 551.74725342]
[234.93339539 566.70477295]
[234.82836914 581.71490479]
[233.35881042 596.65332031]
[230.53692627 611.39617920]
[226.38606262 625.82135010]
[220.94064331 639.80926514]
[214.24577332 653.24407959]
[206.35694885 666.01440430]
[197.33952332 678.01446533]
[187.26821899 689.14483643]
[176.22650146 699.31317139]
[164.30586243 708.43530273]
[151.60508728 716.43566895]
[138.22941589 723.24792480]
[124.28968048 728.81561279]
[109.90140533 733.09259033]
[95.18380737 736.04345703]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 178]
[36 177]
[37 176]
[38 175]
[39 174]
[40 173]
[41 172]
[50 171]
[51 170]
[52 169]
[53 168]
[59 167]
[60 166]
[61 165]
[62 164]
[63 163]
[64 162]
[65 138]
[66 137]
[67 136]
[68 135]
[69 125]
[70 124]
[71 123]
[72 122]
[74 120]
[75 119]
[77 117]
[78 116]
[80 114]
[81 113]
[82 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
