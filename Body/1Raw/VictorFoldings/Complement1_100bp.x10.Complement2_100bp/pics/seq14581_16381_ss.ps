%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[83.39424896 304.25256348]
[83.80596161 319.29965210]
[81.17994690 334.12158203]
[75.62374115 348.11132812]
[67.36486053 360.69607544]
[56.74150085 371.36047363]
[44.18869019 379.66781616]
[30.22045135 385.27789307]
[15.40877819 387.96102905]
[0.36019775 387.60733032]
[-14.30906010 384.23126221]
[-27.99829674 377.97109985]
[-40.14694977 369.08319092]
[-50.25753403 357.93145752]
[-57.91603470 344.97259521]
[-62.80883408 330.73724365]
[-64.73558044 315.80831909]
[-63.61737061 300.79718018]
[-59.49999619 286.31848145]
[-52.55206299 272.96517944]
[-43.05808258 261.28402710]
[-31.40682602 251.75338745]
[-18.07540894 244.76351929]
[-3.60974050 240.60067749]
[11.39781761 239.43530273]
[26.33271408 241.31512451]
[31.15871239 227.11267090]
[35.98471069 212.91021729]
[23.38137436 221.04383850]
[8.38198090 221.17886353]
[-4.36574221 213.27345276]
[-10.91177559 199.77717590]
[-9.22776031 184.87200928]
[0.16449431 173.17646790]
[14.35469532 168.31455994]
[28.94585419 171.79278564]
[39.41674423 182.53338623]
[42.52282333 197.20852661]
[49.20301819 183.77815247]
[55.88321304 170.34777832]
[62.56340790 156.91740417]
[69.24359894 143.48703003]
[69.40788269 136.09819031]
[76.12454224 129.90753174]
[83.00395203 116.57810211]
[89.88336182 103.24867249]
[95.85492706 89.48857117]
[100.89184570 75.35954285]
[105.92875671 61.23051071]
[110.96567535 47.10148239]
[108.31166077 31.50447083]
[119.87344360 22.11434746]
[106.40493774 13.34603882]
[95.41903687 1.62753808]
[87.54550171 -12.36353683]
[83.23427582 -27.81946373]
[82.72978210 -43.84904861]
[86.05705261 -59.52901077]
[93.02055359 -73.95716858]
[103.21562958 -86.30434418]
[116.05205536 -95.86199951]
[130.78816223 -102.08293152]
[146.57374573 -104.61257935]
[162.49905396 -103.30920410]
[167.11306763 -117.58193970]
[171.72708130 -131.85467529]
[176.34109497 -146.12741089]
[180.95509338 -160.40013123]
[185.56910706 -174.67286682]
[171.62731934 -180.22195435]
[158.08276367 -186.68034363]
[144.99465942 -194.01977539]
[132.42024231 -202.20816040]
[120.41449738 -211.20970154]
[109.02992249 -220.98503113]
[98.31629181 -231.49140930]
[88.32046509 -242.68289185]
[79.08614349 -254.51052856]
[70.65370941 -266.92260742]
[63.06004333 -279.86486816]
[56.33834076 -293.28070068]
[50.51799774 -307.11141968]
[45.62446213 -321.29660034]
[41.67913818 -335.77416992]
[38.69927597 -350.48083496]
[36.69790649 -365.35229492]
[35.68377686 -380.32351685]
[35.66132355 -395.32901001]
[36.63064957 -410.30319214]
[38.58750916 -425.18057251]
[41.52334976 -439.89608765]
[45.42533493 -454.38540649]
[50.27639771 -468.58514404]
[56.05532837 -482.43325806]
[62.73685455 -495.86914062]
[70.29176331 -508.83404541]
[78.68701172 -521.27130127]
[87.88590240 -533.12652588]
[97.84819031 -544.34783936]
[108.53033447 -554.88623047]
[119.88561249 -564.69561768]
[131.86436462 -573.73303223]
[144.41423035 -581.95898438]
[157.48030090 -589.33758545]
[171.00547791 -595.83648682]
[184.93058777 -601.42724609]
[199.19476318 -606.08551025]
[213.73561096 -609.79083252]
[228.48954773 -612.52703857]
[243.39207458 -614.28216553]
[258.37802124 -615.04852295]
[273.38183594 -614.82275391]
[288.33795166 -613.60589600]
[303.18090820 -611.40319824]
[317.84585571 -608.22436523]
[332.26864624 -604.08331299]
[346.38623047 -598.99804688]
[360.13684082 -592.99084473]
[373.46038818 -586.08801270]
[386.29855347 -578.31970215]
[398.59527588 -569.71984863]
[410.29672241 -560.32617188]
[421.35174561 -550.17962646]
[431.71200562 -539.32464600]
[441.33218384 -527.80865479]
[450.17025757 -515.68206787]
[458.18753052 -502.99786377]
[465.34896851 -489.81152344]
[471.62326050 -476.18069458]
[476.98294067 -462.16503906]
[481.40463257 -447.82577515]
[484.86892700 -433.22561646]
[487.36074829 -418.42843628]
[488.86914062 -403.49890137]
[489.38751221 -388.50234985]
[488.91363525 -373.50430298]
[487.44955444 -358.57037354]
[485.00170898 -343.76586914]
[481.58074951 -329.15551758]
[477.20166016 -314.80319214]
[471.88357544 -300.77166748]
[465.64978027 -287.12228394]
[458.52749634 -273.91473389]
[450.54791260 -261.20681763]
[441.74588013 -249.05403137]
[432.15991211 -237.50955200]
[421.83190918 -226.62387085]
[410.80703735 -216.44456482]
[399.13351440 -207.01615906]
[386.86239624 -198.37988281]
[374.04733276 -190.57350159]
[360.74435425 -183.63114929]
[347.01162720 -177.58317566]
[332.90921021 -172.45602417]
[318.49877930 -168.27212524]
[303.84332275 -165.04978943]
[289.00695801 -162.80307007]
[274.05453491 -161.54182434]
[259.05145264 -161.27154541]
[244.06329346 -161.99342346]
[229.15562439 -163.70431519]
[214.39361572 -166.39671326]
[199.84184265 -170.05886841]
[195.22782898 -155.78613281]
[190.61381531 -141.51339722]
[185.99981689 -127.24066162]
[181.38580322 -112.96792603]
[176.77178955 -98.69519806]
[188.84831238 -91.64098358]
[199.18946838 -82.21537781]
[207.33714294 -70.83234406]
[212.92968750 -57.99262238]
[215.71789551 -44.26171112]
[215.57618713 -30.24496841]
[212.50813293 -16.56090736]
[206.64654541 -3.81392431]
[198.24768066 7.43241739]
[187.68002319 16.68028831]
[175.40814209 23.51963997]
[161.97222900 27.64637375]
[147.96438599 28.87587547]
[134.00247192 27.15126228]
[137.01676941 41.73767090]
[125.09470367 52.13840103]
[120.05779266 66.26742554]
[115.02087402 80.39646149]
[109.98395538 94.52548981]
[122.70699310 86.58040619]
[137.70674133 86.66870880]
[150.33534241 94.76303864]
[156.67971802 108.35528564]
[154.77397156 123.23372650]
[145.20863342 134.78813171]
[130.94761658 139.43823242]
[116.40985107 135.74314880]
[106.10003662 124.84784698]
[103.21279144 110.12808990]
[96.33338165 123.45751953]
[89.45397186 136.78694153]
[82.67398071 150.16722107]
[75.99378204 163.59759521]
[69.31359100 177.02796936]
[62.63339233 190.45834351]
[55.95319748 203.88871765]
[50.18716431 217.73620605]
[45.36116791 231.93865967]
[40.53517151 246.14111328]
[53.52346802 253.74960327]
[64.71408081 263.81713867]
[73.64877319 275.93142700]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 207]
[27 206]
[28 205]
[38 204]
[39 203]
[40 202]
[41 201]
[42 200]
[44 199]
[45 198]
[46 197]
[47 187]
[48 186]
[49 185]
[50 184]
[52 182]
[64 168]
[65 167]
[66 166]
[67 165]
[68 164]
[69 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
