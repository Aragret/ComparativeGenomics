%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[202.26980591 330.86636353]
[207.19940186 316.68572998]
[213.53834534 303.07659912]
[221.22160339 290.17858887]
[230.17031860 278.12405396]
[240.29267883 267.03674316]
[230.29450989 255.85476685]
[220.29634094 244.67279053]
[210.29817200 233.49081421]
[200.30000305 222.30883789]
[190.30181885 211.12686157]
[180.30364990 199.94488525]
[170.30548096 188.76290894]
[158.24934387 187.77502441]
[149.82818604 178.54095459]
[149.95947266 165.64344788]
[140.12889099 154.31385803]
[130.29830933 142.98426819]
[120.46772766 131.65467834]
[110.22233582 120.69876862]
[99.57632446 110.13171387]
[92.09164429 107.13970184]
[88.85194397 99.32720184]
[78.36444092 88.60282135]
[67.87694550 77.87844086]
[57.23093414 67.31139374]
[46.42877579 56.90402222]
[35.62662125 46.49664688]
[24.82446480 36.08927536]
[14.02230835 25.68190002]
[-1.28413153 21.67896652]
[-5.08126545 7.27649975]
[-15.88342190 -3.13087344]
[-27.13951683 -13.04552460]
[-38.82709885 -22.44767570]
[-50.51467896 -31.84982681]
[-62.20226288 -41.25197983]
[-73.88983917 -50.65412903]
[-84.23074341 -39.77638245]
[-95.43460083 -29.78973961]
[-107.42488861 -20.76242256]
[-120.11970520 -12.75609589]
[-133.43232727 -5.82545280]
[-147.27180481 -0.01783701]
[-161.54359436 4.62707901]
[-176.15022278 8.07756519]
[-190.99191284 10.31005001]
[-205.96725464 11.30928516]
[-220.97398376 11.06844234]
[-235.90954590 9.58916950]
[-250.67195129 6.88156891]
[-265.16033936 2.96413803]
[-279.27572632 -2.13636279]
[-292.92172241 -8.38509178]
[-306.00506592 -15.73936272]
[-318.43643188 -24.14893723]
[-330.13085938 -33.55636978]
[-341.00848389 -43.89739990]
[-350.99499512 -55.10137939]
[-360.02215576 -67.09177399]
[-368.02835083 -79.78668213]
[-374.95883179 -93.09938049]
[-380.76626587 -106.93892670]
[-385.41101074 -121.21078491]
[-388.86132812 -135.81745911]
[-391.09362793 -150.65916443]
[-392.09271240 -165.63452148]
[-391.85168457 -180.64123535]
[-390.37222290 -195.57679749]
[-387.66445923 -210.33915710]
[-383.74685669 -224.82749939]
[-378.64617920 -238.94284058]
[-372.39727783 -252.58874512]
[-365.04284668 -265.67202759]
[-356.63314819 -278.10327148]
[-347.22555542 -289.79757690]
[-336.88439941 -300.67507935]
[-325.68029785 -310.66146851]
[-313.68978882 -319.68850708]
[-300.99478149 -327.69451904]
[-287.68200684 -334.62484741]
[-273.84240723 -340.43212891]
[-259.57049561 -345.07672119]
[-244.96377563 -348.52685547]
[-230.12203979 -350.75897217]
[-215.14666748 -351.75784302]
[-200.13995361 -351.51666260]
[-185.20442200 -350.03701782]
[-170.44209290 -347.32907104]
[-155.95379639 -343.41128540]
[-141.83851624 -338.31045532]
[-128.19268799 -332.06140137]
[-115.10950470 -324.70681763]
[-102.67834473 -316.29696655]
[-90.98413849 -306.88925171]
[-80.10676575 -296.54794312]
[-70.12052155 -285.34375000]
[-61.09363174 -273.35311890]
[-53.08776093 -260.65802002]
[-46.15759277 -247.34515381]
[-40.35047150 -233.50547791]
[-35.70606613 -219.23350525]
[-32.25609970 -204.62675476]
[-30.02414703 -189.78498840]
[-29.02544785 -174.80960083]
[-29.26682663 -159.80290222]
[-30.74663353 -144.86738586]
[-33.45476151 -130.10507202]
[-37.37271118 -115.61683655]
[-42.47371674 -101.50161743]
[-48.72293091 -87.85585785]
[-56.07767105 -74.77276611]
[-64.48769379 -62.34170914]
[-52.80010986 -52.93955994]
[-41.11252975 -43.53740692]
[-29.42494774 -34.13525772]
[-17.73736572 -24.73310661]
[-18.27238274 -39.72356033]
[-8.15219784 -50.79523087]
[6.82588768 -51.60575867]
[18.08174515 -41.69083786]
[19.16750908 -26.73018456]
[9.46120453 -15.29394150]
[-5.47604847 -13.93303013]
[5.32610798 -3.52565646]
[19.85990524 -0.26712710]
[24.42968178 14.87974453]
[35.23183823 25.28711700]
[46.03399277 35.69449234]
[56.83615112 46.10186386]
[67.63830566 56.50923538]
[72.34528351 57.31759262]
[76.59442139 61.09142303]
[78.60131836 67.39093781]
[89.08882141 78.11531830]
[99.57632446 88.83969879]
[110.14337158 99.48571014]
[120.78938293 110.05275726]
[123.34492493 95.27204895]
[136.42012024 87.92091370]
[150.37641907 93.41832733]
[154.92576599 107.71180725]
[146.71453857 120.26472473]
[131.79731750 121.82409668]
[141.62789917 133.15368652]
[151.45848083 144.48327637]
[161.28906250 155.81286621]
[178.82934570 161.41822815]
[181.48745728 178.76473999]
[191.48562622 189.94671631]
[201.48379517 201.12869263]
[211.48197937 212.31066895]
[221.48014832 223.49264526]
[231.47831726 234.67462158]
[241.47648621 245.85658264]
[251.47465515 257.03857422]
[263.62094116 248.21478271]
[276.59756470 240.66510010]
[290.27142334 234.46699524]
[304.50219727 229.68408203]
[319.14382935 226.36543274]
[334.04611206 224.54508972]
[349.05606079 224.24176025]
[364.01971436 225.45852661]
[378.78347778 228.18292236]
[393.19586182 232.38699341]
[407.10897827 238.02757263]
[420.38003540 245.04681396]
[432.87289429 253.37266541]
[444.45932007 262.91970825]
[455.02041626 273.58993530]
[464.44781494 285.27389526]
[472.64480591 297.85168457]
[479.52722168 311.19421387]
[485.02447510 325.16458130]
[489.08016968 339.61941528]
[491.65261841 354.41043091]
[492.71551514 369.38577271]
[492.25787354 384.39181519]
[490.28442383 399.27459717]
[486.81542969 413.88134766]
[481.88644409 428.06216431]
[475.54809570 441.67160034]
[467.86541748 454.56994629]
[458.91723633 466.62484741]
[448.79534912 477.71261597]
[437.60366821 487.71948242]
[425.45700073 496.54272461]
[412.48004150 504.09182739]
[398.80587769 510.28933716]
[384.57492065 515.07165527]
[369.93313599 518.38964844]
[355.03079224 520.20928955]
[340.02081299 520.51202393]
[325.05722046 519.29455566]
[310.29357910 516.56951904]
[295.88137817 512.36480713]
[281.96850586 506.72360229]
[268.69775391 499.70379639]
[256.20529175 491.37738037]
[244.61927795 481.82986450]
[234.05863953 471.15914917]
[224.63174438 459.47476196]
[216.43531799 446.89663696]
[209.55348206 433.55380249]
[204.05683899 419.58319092]
[200.00180054 405.12817383]
[197.42997742 390.33706665]
[196.36776733 375.36166382]
[196.82606506 360.35562134]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 156]
[7 155]
[8 154]
[9 153]
[10 152]
[11 151]
[12 150]
[13 149]
[16 147]
[17 146]
[18 145]
[19 144]
[20 138]
[21 137]
[23 136]
[24 135]
[25 134]
[26 131]
[27 130]
[28 129]
[29 128]
[30 127]
[32 125]
[33 124]
[34 117]
[35 116]
[36 115]
[37 114]
[38 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
