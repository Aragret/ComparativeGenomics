%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[164.22639465 777.58850098]
[152.94847107 767.64575195]
[143.46099854 755.98223877]
[136.02281189 742.91613770]
[130.83682251 728.80389404]
[128.04450989 714.03051758]
[127.72205353 698.99902344]
[129.87825012 684.11944580]
[134.45428467 669.79779053]
[141.32530212 656.42474365]
[150.30386353 644.36511230]
[161.14503479 633.94787598]
[173.55305481 625.45721436]
[187.18940735 619.12481689]
[201.68211365 615.12335205]
[200.12159729 600.20477295]
[198.56106567 585.28619385]
[197.00054932 570.36755371]
[194.88592529 555.51733398]
[185.00990295 544.36773682]
[190.17147827 529.41223145]
[187.50567627 514.65100098]
[184.83988953 499.88977051]
[182.17408752 485.12854004]
[167.96084595 476.13842773]
[164.58082581 459.31906128]
[174.60443115 444.98217773]
[171.71916199 430.26226807]
[168.83387756 415.54238892]
[152.41503906 414.98684692]
[136.59046936 410.54406738]
[122.26747894 402.46478271]
[110.26823425 391.20828247]
[101.28253937 377.41638184]
[95.82825470 361.87680054]
[94.22137451 345.47821045]
[96.55779266 329.15933228]
[102.70752716 313.85528564]
[112.32198334 300.44393921]
[124.85371399 289.69558716]
[139.58755493 282.22872925]
[136.04788208 267.65237427]
[132.50820923 253.07598877]
[128.96853638 238.49960327]
[112.45997620 236.32633972]
[98.02059937 227.96055603]
[87.87968445 214.66122437]
[83.61540222 198.45143127]
[85.90922546 181.81069946]
[94.43726349 167.29570007]
[107.91558838 157.14747620]
[103.94349670 142.68295288]
[99.97139740 128.21842957]
[95.99930573 113.75389862]
[86.18740082 103.79307556]
[89.53617096 90.21819305]
[78.42070770 78.95955658]
[82.51153564 64.63774109]
[78.53943634 50.17321396]
[74.56734467 35.70869064]
[70.59524536 21.24416542]
[66.62315369 6.77964211]
[62.19537354 1.86982393]
[61.07935333 -3.70256543]
[62.75499725 -8.17484093]
[59.21532440 -22.75121689]
[55.67565536 -37.32759094]
[52.13598251 -51.90396881]
[48.53172684 -55.67973709]
[46.89942551 -60.02587128]
[47.12612152 -64.09571838]
[48.77919006 -67.21015167]
[45.89391708 -81.93004608]
[43.00864792 -96.64994049]
[40.12337494 -111.36982727]
[29.87607574 -123.42401886]
[35.02077866 -137.40190125]
[21.10500336 -144.00927734]
[13.83315945 -157.38737488]
[15.80981731 -172.30570984]
[26.06916618 -183.07064819]
[23.18389320 -197.79054260]
[20.29862022 -212.51043701]
[17.41334915 -227.23031616]
[14.52807617 -241.95021057]
[-0.52839249 -242.29202271]
[-15.15926266 -245.86297607]
[-28.68022156 -252.49604797]
[-40.45887375 -261.88101196]
[-49.94430161 -273.57891846]
[-56.69286346 -287.04260254]
[-60.38891220 -301.64236450]
[-60.85957718 -316.69537354]
[-58.08284378 -331.49752808]
[-52.18859100 -345.35650635]
[-43.45249557 -357.62414551]
[-32.28316498 -367.72662354]
[-19.20300674 -375.19143677]
[-4.82380486 -379.66946411]
[10.18189907 -380.95123291]
[25.11226082 -378.97680664]
[39.26895905 -373.83853149]
[51.98986435 -365.77673340]
[62.67999268 -355.16845703]
[70.83934784 -342.50991821]
[76.08630371 -328.39312744]
[78.17544556 -313.47839355]
[77.00907135 -298.46325684]
[72.64172363 -284.05007935]
[65.27767181 -270.91290283]
[55.26135254 -259.66625977]
[43.06124496 -250.83610535]
[29.24796677 -244.83547974]
[32.13323975 -230.11560059]
[35.01851273 -215.39570618]
[37.90378571 -200.67581177]
[40.78905869 -185.95591736]
[54.35319901 -179.86067200]
[61.81554794 -166.79249573]
[60.13229752 -151.65908813]
[49.74067307 -140.28717041]
[59.78159714 -129.28585815]
[54.84326553 -114.25510406]
[57.72853851 -99.53520966]
[60.61381149 -84.81531525]
[63.49908447 -70.09542847]
[66.71235657 -55.44363785]
[70.25202942 -40.86726379]
[73.79170227 -26.29088974]
[77.33137512 -11.71451378]
[81.08767700 2.80754566]
[85.05976868 17.27206993]
[89.03186798 31.73659325]
[93.00395966 46.20111847]
[96.97605896 60.66564178]
[107.80741119 70.88968658]
[104.00069427 86.24610138]
[113.81259918 96.20692444]
[110.46382904 109.78180695]
[114.43592072 124.24633026]
[118.40802002 138.71084595]
[122.38011932 153.17538452]
[135.78927612 154.09916687]
[148.24018860 159.10137939]
[158.52641296 167.68217468]
[165.65592957 178.99572754]
[168.94680786 191.93359375]
[168.09239197 205.23323059]
[163.18983459 217.60127258]
[154.72929382 227.83930969]
[143.54492188 234.95994568]
[147.08459473 249.53631592]
[150.62426758 264.11270142]
[154.16394043 278.68905640]
[167.79393005 278.30105591]
[181.22895813 280.59899902]
[193.94512939 285.49111938]
[205.44699097 292.78460693]
[215.28683472 302.19302368]
[223.08218384 313.34771729]
[228.53056335 325.81219482]
[231.42131042 339.09921265]
[231.64369202 352.68988037]
[229.19114685 366.05377197]
[224.16146851 378.66986084]
[216.75285339 390.04653931]
[207.25621033 399.74111938]
[196.04360962 407.37670898]
[183.55377197 412.65710449]
[186.43904114 427.37701416]
[189.32432556 442.09689331]
[201.29315186 448.27441406]
[207.42919922 460.04553223]
[205.69104004 473.00936890]
[196.93530273 482.46276855]
[199.60110474 497.22396851]
[202.26689148 511.98519897]
[204.93269348 526.74639893]
[214.99938965 538.95184326]
[209.64714050 552.85156250]
[220.21397400 542.20532227]
[235.14160156 543.67712402]
[243.42591858 556.18188477]
[238.96005249 570.50170898]
[225.03605652 576.08044434]
[211.91915894 568.80706787]
[213.47967529 583.72564697]
[215.04020691 598.64422607]
[216.60072327 613.56286621]
[231.60777283 614.47851562]
[246.25938416 617.85192871]
[260.15588379 623.59106445]
[272.91812134 631.53936768]
[284.19796753 641.47991943]
[293.68768311 653.14160156]
[301.12838745 666.20629883]
[306.31707764 680.31750488]
[309.11224365 695.09039307]
[309.43759155 710.12182617]
[307.28427124 725.00177002]
[302.71099854 739.32427979]
[295.84255981 752.69866943]
[286.86630249 764.76007080]
[276.02716064 775.17938232]
[263.62075806 783.67242432]
[249.98562622 790.00744629]
[235.49369812 794.01171875]
[220.54031372 795.57586670]
[205.53344727 794.65728760]
[190.88249207 791.28106689]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 189]
[16 188]
[17 187]
[18 186]
[19 180]
[21 178]
[22 177]
[23 176]
[24 175]
[27 171]
[28 170]
[29 169]
[41 154]
[42 153]
[43 152]
[44 151]
[51 142]
[52 141]
[53 140]
[54 139]
[56 137]
[58 135]
[59 134]
[60 133]
[61 132]
[62 131]
[65 130]
[66 129]
[67 128]
[68 127]
[72 126]
[73 125]
[74 124]
[75 123]
[77 121]
[81 117]
[82 116]
[83 115]
[84 114]
[85 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
