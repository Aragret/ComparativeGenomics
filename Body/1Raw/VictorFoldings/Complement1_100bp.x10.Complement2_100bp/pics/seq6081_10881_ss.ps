%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[102.69867706 872.63854980]
[87.79878998 870.86010742]
[73.05097198 868.09045410]
[58.52107620 864.34191895]
[44.27400208 859.63128662]
[30.37338448 853.97955322]
[16.88130188 847.41198730]
[3.85801744 839.95788574]
[-8.63830471 831.65063477]
[-20.55185318 822.52722168]
[-31.82941628 812.62841797]
[-42.42062759 801.99847412]
[-52.27818298 790.68487549]
[-61.35805511 778.73809814]
[-69.61969757 766.21154785]
[-77.02619934 753.16113281]
[-83.54448700 739.64520264]
[-89.14544678 725.72406006]
[-93.80406952 711.45983887]
[-97.49954224 696.91638184]
[-100.21536255 682.15856934]
[-101.93939972 667.25225830]
[-102.66394806 652.26416016]
[-102.38578033 637.26110840]
[-101.10614014 622.31011963]
[-98.83073425 607.47796631]
[-95.56972504 592.83099365]
[-91.33769226 578.43444824]
[-86.15351868 564.35278320]
[-80.04036713 550.64880371]
[-73.02553558 537.38378906]
[-65.14036560 524.61688232]
[-56.42006302 512.40521240]
[-46.90357971 500.80322266]
[-36.63341904 489.86279297]
[-25.65545082 479.63275146]
[-14.01870441 470.15884399]
[-1.77515268 461.48330688]
[11.02052116 453.64492798]
[24.31116676 446.67874146]
[38.03742599 440.61581421]
[52.13799286 435.48324585]
[66.54988861 431.30395508]
[81.20875549 428.09661865]
[96.04911041 425.87551880]
[111.00466919 424.65063477]
[110.78134155 409.65231323]
[110.55801392 394.65396118]
[110.33468628 379.65563965]
[110.11135864 364.65728760]
[109.88803101 349.65896606]
[109.66470337 334.66061401]
[93.85346985 321.70700073]
[92.72877502 301.00360107]
[107.45536041 285.99365234]
[106.33970642 271.03518677]
[105.22406006 256.07675171]
[104.10841370 241.11828613]
[93.46070099 227.16862488]
[101.59391785 210.64796448]
[100.25568390 195.70777893]
[98.91744995 180.76759338]
[90.07553101 168.78135681]
[96.55078888 154.34593201]
[92.82307434 147.96424866]
[95.30554199 139.17361450]
[94.18989563 124.21515656]
[93.07424164 109.25670624]
[85.56113434 122.23950958]
[72.92469025 130.32160950]
[57.98792267 131.69741821]
[44.08773804 126.05961609]
[34.32947922 114.66767120]
[30.89316559 100.06658173]
[34.54647827 85.51827240]
[44.47325516 74.27286530]
[58.45583344 68.84262085]
[73.37046814 70.44066620]
[85.88518524 78.70999908]
[93.20417786 91.80323792]
[94.54241180 76.86305237]
[95.88064575 61.92286682]
[89.40539551 47.48743820]
[98.24730682 35.50120544]
[99.58554077 20.56101990]
[100.92378235 5.62083578]
[102.15075684 -9.32889748]
[103.26640320 -24.28735161]
[91.59706879 -34.34383774]
[88.12742615 -49.16999435]
[93.98399353 -63.03234100]
[106.72772217 -70.69624329]
[107.84337616 -85.65469360]
[108.95902252 -100.61314392]
[110.07466888 -115.57160187]
[103.38520813 -129.90902710]
[112.04769135 -142.02557373]
[113.16333771 -156.98402405]
[114.27899170 -171.94247437]
[100.35446930 -177.89112854]
[89.11762238 -188.04061890]
[81.78733063 -201.28997803]
[79.15872955 -216.20202637]
[81.51695251 -231.15921021]
[88.60619354 -244.53909302]
[99.65747070 -254.89033508]
[113.47201538 -261.09008789]
[128.55134583 -262.46585083]
[143.25975037 -258.86843872]
[156.00177002 -250.68800354]
[165.39526367 -238.81192017]
[170.42127991 -224.52844238]
[170.53465271 -209.38691711]
[165.72306824 -195.02978516]
[156.50843811 -183.01438904]
[143.89033508 -174.64408875]
[129.23744202 -170.82682800]
[128.12179565 -155.86837769]
[127.00614166 -140.90992737]
[133.77540588 -127.64242554]
[125.03312683 -114.45594788]
[123.91747284 -99.49749756]
[122.80182648 -84.53904724]
[121.68618011 -69.58058929]
[133.15203857 -60.11106491]
[136.88745117 -45.53331757]
[131.25686646 -31.38588333]
[118.22485352 -23.17170334]
[117.10920715 -8.21324921]
[119.74651337 -1.30916154]
[115.86396027 6.95906973]
[114.52572632 21.89925385]
[113.18749237 36.83943939]
[119.75846863 50.20624924]
[110.82083130 63.26110077]
[109.48259735 78.20128632]
[108.14436340 93.14147186]
[108.03269958 108.14105225]
[109.14834595 123.09951019]
[110.26399231 138.05796814]
[111.49097443 153.00769043]
[120.42861176 166.06254578]
[113.85763550 179.42935181]
[115.19586945 194.36953735]
[116.53410339 209.30972290]
[125.91324615 218.16378784]
[126.72029114 230.63505554]
[119.06686401 240.00263977]
[120.18251038 254.96109009]
[121.29816437 269.91955566]
[122.41381073 284.87799072]
[131.28297424 288.81094360]
[138.06979370 295.66290283]
[141.87190247 304.46295166]
[142.20571899 313.98550415]
[139.06752014 322.92092896]
[132.92817688 330.05572510]
[124.66304016 334.43728638]
[124.88636780 349.43563843]
[125.10969543 364.43395996]
[125.33302307 379.43231201]
[125.55635071 394.43063354]
[125.77967834 409.42898560]
[126.00300598 424.42730713]
[140.98841858 425.20639038]
[155.88832092 426.98461914]
[170.63616943 429.75408936]
[185.16612244 433.50244141]
[199.41325378 438.21289062]
[213.31393433 443.86444092]
[226.80610657 450.43185425]
[239.82948303 457.88577271]
[252.32591248 466.19290161]
[264.23956299 475.31616211]
[275.51724243 485.21481323]
[286.10861206 495.84460449]
[295.96630859 507.15811157]
[305.04632568 519.10473633]
[313.30810547 531.63122559]
[320.71478271 544.68151855]
[327.23324585 558.19738770]
[332.83438110 572.11846924]
[337.49319458 586.38256836]
[341.18884277 600.92602539]
[343.90484619 615.68383789]
[345.62905884 630.59008789]
[346.35379028 645.57818604]
[346.07583618 660.58123779]
[344.79635620 675.53228760]
[342.52114868 690.36437988]
[339.26034546 705.01147461]
[335.02847290 719.40802002]
[329.84448242 733.48974609]
[323.73150635 747.19378662]
[316.71682739 760.45892334]
[308.83181763 773.22589111]
[300.11166382 785.43774414]
[290.59533691 797.03979492]
[280.32531738 807.98040771]
[269.34747314 818.21057129]
[257.71084595 827.68463135]
[245.46740723 836.36029053]
[232.67182922 844.19885254]
[219.38127136 851.16522217]
[205.65509033 857.22827148]
[191.55458069 862.36102295]
[177.14274597 866.54052734]
[162.48391724 869.74804688]
[147.64360046 871.96929932]
[132.68804932 873.19439697]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 164]
[47 163]
[48 162]
[49 161]
[50 160]
[51 159]
[52 158]
[55 151]
[56 150]
[57 149]
[58 148]
[60 145]
[61 144]
[62 143]
[64 141]
[66 140]
[67 139]
[68 138]
[80 137]
[81 136]
[82 135]
[84 133]
[85 132]
[86 131]
[87 129]
[88 128]
[92 124]
[93 123]
[94 122]
[95 121]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
