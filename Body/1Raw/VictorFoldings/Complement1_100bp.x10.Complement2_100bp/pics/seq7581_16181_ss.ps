%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[122.46455383 404.47833252]
[126.76339722 390.05252075]
[133.87844849 376.78747559]
[143.51835632 365.22647095]
[155.28836060 355.84286499]
[168.70649719 349.02096558]
[164.73440552 334.55642700]
[160.76229858 320.09191895]
[156.79020691 305.62738037]
[144.80995178 300.88363647]
[137.64237976 289.94253540]
[138.09169006 276.67568970]
[146.21778870 265.93414307]
[142.46148682 251.41207886]
[131.78355408 241.02790833]
[135.81848145 225.72987366]
[132.06217957 211.20780945]
[128.30587769 196.68574524]
[124.44157410 182.19206238]
[120.46947479 167.72753906]
[116.49737549 153.26301575]
[111.14619446 139.24998474]
[104.46599579 125.81961060]
[97.78580475 112.38923645]
[90.80735016 99.11138916]
[83.53411865 85.99269104]
[76.26089478 72.87400055]
[68.98766327 59.75530624]
[61.71443176 46.63661194]
[48.25609207 38.31893921]
[48.85175323 23.43625069]
[41.57852554 10.31755638]
[37.77916336 8.21545410]
[35.11435699 5.30627298]
[33.69851303 2.04578400]
[33.48626328 -1.11990082]
[34.28945923 -3.80560637]
[27.80996323 -17.33395195]
[21.33046722 -30.86229706]
[14.85097218 -44.39064407]
[8.17077732 -57.82101822]
[1.29136491 -71.15045166]
[-5.58804750 -84.47988129]
[-12.46746063 -97.80930328]
[-25.67218590 -106.52399445]
[-24.63367653 -121.38235474]
[-38.42574692 -115.46863556]
[-52.60455704 -110.55390167]
[-67.09785461 -106.66320038]
[-81.83178711 -103.81636047]
[-96.73126984 -102.02788544]
[-111.72038269 -101.30689240]
[-126.72274017 -101.65704346]
[-141.66188049 -103.07656860]
[-156.46170044 -105.55823517]
[-171.04676819 -109.08938599]
[-185.34277344 -113.65202332]
[-199.27685547 -119.22291565]
[-212.77799988 -125.77365875]
[-225.77742004 -133.27087402]
[-238.20886230 -141.67637634]
[-250.00900269 -150.94729614]
[-261.11767578 -161.03642273]
[-271.47830200 -171.89233398]
[-281.03808594 -183.45970154]
[-289.74829102 -195.67958069]
[-297.56454468 -208.48971558]
[-304.44702148 -221.82481384]
[-310.36062622 -235.61692810]
[-315.27523804 -249.79577637]
[-319.16583252 -264.28909302]
[-322.01257324 -279.02307129]
[-323.80093384 -293.92254639]
[-324.52182007 -308.91168213]
[-324.17153931 -323.91403198]
[-322.75189209 -338.85314941]
[-320.27011108 -353.65295410]
[-316.73886108 -368.23800659]
[-312.17611694 -382.53396606]
[-306.60510254 -396.46798706]
[-300.05426025 -409.96908569]
[-292.55694580 -422.96847534]
[-284.15136719 -435.39984131]
[-274.88034058 -447.19992065]
[-264.79113770 -458.30853271]
[-253.93515015 -468.66906738]
[-242.36770630 -478.22875977]
[-230.14775085 -486.93887329]
[-217.33757019 -494.75500488]
[-204.00241089 -501.63739014]
[-190.21025085 -507.55087280]
[-176.03137207 -512.46539307]
[-161.53800964 -516.35589600]
[-146.80403137 -519.20251465]
[-131.90452576 -520.99072266]
[-116.91539764 -521.71148682]
[-101.91304779 -521.36114502]
[-86.97392273 -519.94134521]
[-72.17414093 -517.45947266]
[-57.58912659 -513.92810059]
[-43.29319763 -509.36523438]
[-29.35920906 -503.79412842]
[-15.85816097 -497.24319458]
[-2.85885477 -489.74575806]
[9.57246780 -481.34008789]
[21.37245941 -472.06896973]
[32.48099136 -461.97967529]
[42.84144974 -451.12362671]
[52.40104675 -439.55612183]
[61.11106491 -427.33609009]
[68.92712402 -414.52584839]
[75.80938721 -401.19064331]
[81.72278595 -387.39843750]
[86.63719177 -373.21951294]
[90.52755737 -358.72610474]
[93.37406158 -343.99212646]
[95.16219330 -329.09259033]
[95.88284302 -314.10345459]
[95.53234100 -299.10110474]
[94.11247253 -284.16198730]
[91.63047791 -269.36224365]
[88.09899139 -254.77725220]
[83.53601837 -240.48135376]
[77.96480560 -226.54740906]
[71.41374969 -213.04641724]
[63.91623306 -200.04716492]
[55.51045609 -187.61590576]
[46.23925781 -175.81599426]
[36.14987946 -164.70753479]
[25.29373550 -154.34715271]
[13.72614861 -144.78764343]
[1.50606441 -136.07772827]
[-11.30424690 -128.26176453]
[1.40841687 -120.50048828]
[0.86196899 -104.68872070]
[7.74138165 -91.35929108]
[14.62079430 -78.02986145]
[21.50020599 -64.70043182]
[25.69683838 -62.42066574]
[28.50588799 -57.48039627]
[28.37931824 -50.87014008]
[34.85881424 -37.34179306]
[41.33831024 -23.81344795]
[47.81780624 -10.28510189]
[54.69721603 3.04432702]
[61.97044754 16.16302109]
[74.90855408 23.54235649]
[74.83312988 39.36338425]
[82.10635376 52.48207474]
[89.37958527 65.60076904]
[96.65281677 78.71946716]
[103.92604065 91.83815765]
[107.44519043 93.41549683]
[110.25198364 96.53635406]
[111.67266083 100.84781647]
[111.21617889 105.70903778]
[117.89636993 119.13941956]
[124.57656860 132.56979370]
[125.91548157 117.62966919]
[133.14405823 104.48631287]
[145.04414368 95.35461426]
[159.61036682 91.77342987]
[174.38807678 94.34623718]
[186.88696289 102.63948822]
[195.00073242 115.25561523]
[197.36209106 130.06858826]
[193.57308960 144.58213806]
[184.27224731 156.35050964]
[171.02693176 163.39050293]
[156.06919861 164.51576233]
[141.91969299 159.53666687]
[130.96189880 149.29090881]
[134.93399048 163.75543213]
[138.90609741 178.21995544]
[144.19625854 185.66656494]
[142.82794189 192.92944336]
[146.58422852 207.45150757]
[150.34053040 221.97357178]
[161.28713989 233.39645386]
[156.98353577 247.65577698]
[160.73983765 262.17782593]
[175.97308350 270.77828979]
[180.19006348 287.40753174]
[171.25473022 301.65527344]
[175.22682190 316.11981201]
[179.19892883 330.58432007]
[183.17102051 345.04885864]
[198.19132996 344.06130981]
[213.10292053 346.11788940]
[227.29515076 351.13436890]
[240.18688965 358.90533447]
[251.25021362 369.11257935]
[260.03210449 381.33810425]
[266.17291260 395.08129883]
[269.42120361 409.77935791]
[269.64395142 424.83047485]
[266.83203125 439.61822510]
[261.10058594 453.53710938]
[252.68435669 466.01718140]
[241.92793274 476.54733276]
[229.27178955 484.69638062]
[215.23422241 490.13067627]
[200.39001465 492.62759399]
[185.34706116 492.08496094]
[170.72135925 488.52499390]
[157.11180115 482.09344482]
[145.07571411 473.05368042]
[135.10594177 461.77587891]
[127.61076355 448.72186279]
[122.89708710 434.42620850]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 187]
[7 186]
[8 185]
[9 184]
[13 181]
[14 180]
[16 178]
[17 177]
[18 176]
[19 174]
[20 173]
[21 172]
[22 158]
[23 157]
[24 156]
[25 152]
[26 151]
[27 150]
[28 149]
[29 148]
[31 146]
[32 145]
[37 144]
[38 143]
[39 142]
[40 141]
[41 138]
[42 137]
[43 136]
[44 135]
[46 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
