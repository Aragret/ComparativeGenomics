%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[83.64105988 493.59948730]
[92.44330597 481.17208862]
[105.54254913 473.40487671]
[103.76008606 458.51113892]
[101.97762299 443.61743164]
[100.19515228 428.72372437]
[98.41268921 413.82998657]
[96.63022614 398.93627930]
[87.43534851 387.21862793]
[93.47793579 372.59680176]
[85.01457214 384.98110962]
[70.92745209 390.13406372]
[56.47071075 386.13372803]
[47.03636932 374.47210693]
[46.14319611 359.49871826]
[54.12432861 346.79827881]
[68.00299072 341.10769653]
[82.60279846 344.54946899]
[92.47884369 355.84091187]
[92.47884369 340.84091187]
[84.74153900 328.11364746]
[92.47884369 314.31347656]
[92.47884369 299.31347656]
[84.74153900 286.58621216]
[92.47884369 272.78604126]
[92.47884369 257.78604126]
[92.47884369 242.78604126]
[81.79796600 232.46835327]
[81.58428955 217.25622559]
[92.47884369 206.12309265]
[92.47884369 191.12309265]
[84.74153900 178.39582825]
[92.47884369 164.59565735]
[92.47884369 149.59565735]
[84.74153900 136.86837769]
[92.47884369 123.06820679]
[92.47884369 108.06820679]
[80.18817139 116.66701508]
[65.75973511 112.56575775]
[59.82964325 98.78773499]
[66.76933289 85.48958588]
[81.46312714 82.47421265]
[93.07859802 91.96295166]
[94.19424438 77.00449371]
[95.30989838 62.04604340]
[96.42554474 47.08758926]
[93.90354919 40.97603607]
[94.72351074 35.35245132]
[97.80362701 31.70252991]
[99.36415100 16.78392410]
[100.92467499 1.86531949]
[89.55993652 -8.53414631]
[86.53325653 -23.45703697]
[92.79996490 -37.13886642]
[105.76622772 -44.41993713]
[99.50660706 -58.95017624]
[108.52600098 -70.80343628]
[110.08652496 -85.72203827]
[111.64704895 -100.64064789]
[109.30814362 -106.82457733]
[110.29517365 -112.42125702]
[113.48258972 -115.97785187]
[115.48660278 -130.84338379]
[117.49062347 -145.70890808]
[107.10248566 -134.88824463]
[92.72360992 -130.61650085]
[78.11257935 -134.01031494]
[67.08869934 -144.18252563]
[62.53356934 -158.47415161]
[65.63790131 -173.14941406]
[75.59022522 -184.37220764]
[89.78903198 -189.20893860]
[104.52278137 -186.39529419]
[115.94010925 -176.66674805]
[121.05647278 -162.56721497]
[125.24348450 -176.97099304]
[129.43049622 -191.37477112]
[133.61750793 -205.77854919]
[126.26362610 -219.51020813]
[130.71504211 -234.05804443]
[143.85137939 -240.98422241]
[148.03839111 -255.38800049]
[152.22540283 -269.79177856]
[144.87152100 -283.52343750]
[149.32293701 -298.07125854]
[162.45928955 -304.99743652]
[166.64630127 -319.40124512]
[170.83331299 -333.80502319]
[156.98504639 -339.61221313]
[143.88905334 -346.96017456]
[131.71603394 -355.75308228]
[120.62470245 -365.87634277]
[110.75965881 -377.19793701]
[102.24951935 -389.57031250]
[95.20521545 -402.83212280]
[89.71859741 -416.81048584]
[85.86119080 -431.32318115]
[83.68328094 -446.18096924]
[83.21326447 -461.19021606]
[84.45726776 -476.15518188]
[87.39907074 -490.88076782]
[92.00033569 -505.17504883]
[98.20104980 -518.85162354]
[105.92039490 -531.73223877]
[115.05773163 -543.64886475]
[125.49392700 -554.44628906]
[137.09292603 -563.98364258]
[149.70350647 -572.13659668]
[163.16128540 -578.79888916]
[177.29078674 -583.88360596]
[191.90782166 -587.32458496]
[206.82182312 -589.07684326]
[221.83834839 -589.11755371]
[236.76164246 -587.44622803]
[251.39712524 -584.08465576]
[265.55401611 -579.07666016]
[279.04772949 -572.48748779]
[291.70236206 -564.40307617]
[303.35296631 -554.92877197]
[313.84756470 -544.18817139]
[323.04943848 -532.32122803]
[330.83853149 -519.48272705]
[337.11337280 -505.83999634]
[341.79211426 -491.57092285]
[344.81378174 -476.86148071]
[346.13897705 -461.90347290]
[345.75039673 -446.89193726]
[343.65313721 -432.02252197]
[339.87451172 -417.48910522]
[334.46380615 -403.48117065]
[327.49157715 -390.18136597]
[319.04867554 -377.76300049]
[309.24520874 -366.38803101]
[298.20898438 -356.20477295]
[286.08386230 -347.34591675]
[273.02789307 -339.92703247]
[259.21136475 -334.04476929]
[244.81434631 -329.77587891]
[230.02453613 -327.17596436]
[215.03477478 -326.27893066]
[200.04046631 -327.09649658]
[185.23709106 -329.61801147]
[181.05007935 -315.21423340]
[176.86306763 -300.81042480]
[184.23937988 -287.92147827]
[180.19834900 -273.25433350]
[166.62919617 -265.60476685]
[162.44218445 -251.20098877]
[158.25517273 -236.79721069]
[165.63148499 -223.90823364]
[161.59043884 -209.24110413]
[148.02128601 -201.59153748]
[143.83427429 -187.18775940]
[139.64726257 -172.78398132]
[135.46025085 -158.38020325]
[132.35615540 -143.70489502]
[130.35212708 -128.83937073]
[128.34811401 -113.97383881]
[126.56565857 -99.08012390]
[125.00513458 -84.16151428]
[123.44461060 -69.24291229]
[129.81584167 -55.77975464]
[120.68482971 -42.85941315]
[131.86366272 -33.05270386]
[135.16339111 -18.37020302]
[129.11407471 -4.39668465]
[115.84327698 3.42584252]
[114.28275299 18.34444809]
[112.72222900 33.26305389]
[111.38399506 48.20323563]
[110.26834869 63.16168976]
[109.15270233 78.12014008]
[108.03704834 93.07859802]
[107.47884369 108.06820679]
[107.47884369 123.06820679]
[115.21614075 136.86837769]
[107.47884369 149.59565735]
[107.47884369 164.59565735]
[115.21614075 178.39582825]
[107.47884369 191.12309265]
[107.47884369 206.12309265]
[118.37339020 217.25622559]
[118.15971375 232.46835327]
[107.47884369 242.78604126]
[107.47884369 257.78604126]
[107.47884369 272.78604126]
[115.21614075 286.58621216]
[107.47884369 299.31347656]
[107.47884369 314.31347656]
[115.21614075 328.11364746]
[107.47884369 340.84091187]
[107.47884369 355.84091187]
[108.37165833 370.81433105]
[117.69402313 383.59729004]
[111.52394104 397.15380859]
[113.30640411 412.04751587]
[115.08887482 426.94125366]
[116.87133789 441.83496094]
[118.65380096 456.72866821]
[120.43627167 471.62240601]
[134.99845886 476.07913208]
[146.48472595 486.07839966]
[152.90496826 499.88784790]
[153.14686584 515.11480713]
[147.16850281 529.12121582]
[136.00567627 539.48034668]
[121.59238434 544.39733887]
[106.42584991 543.02038574]
[93.13374329 535.58807373]
[84.01902008 523.38800049]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 200]
[4 199]
[5 198]
[6 197]
[7 196]
[8 195]
[10 193]
[19 192]
[20 191]
[22 189]
[23 188]
[25 186]
[26 185]
[27 184]
[30 181]
[31 180]
[33 178]
[34 177]
[36 175]
[37 174]
[43 173]
[44 172]
[45 171]
[46 170]
[49 169]
[50 168]
[51 167]
[55 163]
[57 161]
[58 160]
[59 159]
[62 158]
[63 157]
[64 156]
[75 155]
[76 154]
[77 153]
[78 152]
[81 149]
[82 148]
[83 147]
[86 144]
[87 143]
[88 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
