%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[212.52069092 504.54638672]
[216.70649719 490.11517334]
[222.90354919 476.42660522]
[230.98568726 463.75933838]
[240.78836060 452.37124634]
[252.11199951 442.49420166]
[264.72607422 434.32931519]
[258.44873047 420.70599365]
[252.17135620 407.08267212]
[245.89399719 393.45935059]
[239.61663818 379.83602905]
[225.59819031 374.93515015]
[219.03797913 361.20858765]
[224.27352905 346.53799438]
[217.99617004 332.91467285]
[211.31597900 319.48428345]
[204.23887634 306.25875854]
[187.94938660 302.07650757]
[179.55960083 287.11233521]
[184.68717957 270.38729858]
[177.41394043 257.26858521]
[170.14071655 244.14990234]
[162.86749268 231.03120422]
[155.59425354 217.91250610]
[148.32102966 204.79382324]
[141.04779053 191.67512512]
[133.77456665 178.55642700]
[122.23665619 174.92282104]
[116.06983948 164.05294800]
[119.05445862 151.50485229]
[111.97734833 138.27932739]
[104.90024567 125.05379486]
[97.82314301 111.82826233]
[90.54991150 98.70957184]
[83.08216858 85.70062256]
[75.61442566 72.69166565]
[68.14669037 59.68271255]
[54.11397171 62.90352631]
[39.75827408 62.03955078]
[26.24307632 57.16979980]
[14.66122341 48.69757843]
[5.94652605 37.31709671]
[0.79849118 23.95659828]
[-0.37382597 9.70264244]
[2.51568866 -4.28825617]
[9.22395134 -16.88346100]
[19.19910431 -27.06590843]
[11.92587376 -40.18460083]
[4.65264463 -53.30329514]
[-8.80569458 -61.62096786]
[-8.21003437 -76.50365448]
[-15.48326397 -89.62235260]
[-22.75649261 -102.74104309]
[-24.14687157 -87.80562592]
[-32.24127960 -75.17706299]
[-45.23139954 -67.67661285]
[-60.21520996 -66.97989655]
[-73.84529114 -73.24255371]
[-83.07663727 -85.06550598]
[-85.84696198 -99.80746460]
[-81.53734589 -114.17504120]
[-71.11058044 -124.95848083]
[-56.89603043 -129.74873352]
[-42.06926346 -127.47565460]
[-29.94259834 -118.64702606]
[-34.97951508 -132.77606201]
[-40.01642990 -146.90509033]
[-45.84579849 -153.93760681]
[-45.02145004 -161.28213501]
[-49.84744644 -175.48460388]
[-54.67344666 -189.68705750]
[-59.49944305 -203.88951111]
[-61.54728317 -189.02995300]
[-67.32226562 -175.18620300]
[-76.44135284 -163.27644348]
[-88.29972076 -154.09063721]
[-102.11083221 -148.23802185]
[-116.95865631 -146.10678101]
[-131.85838318 -147.83828735]
[-145.82177734 -153.31767273]
[-157.92268372 -162.18153381]
[-167.35848999 -173.84196472]
[-173.50337219 -187.52554321]
[-175.94975281 -202.32470703]
[-174.53536987 -217.25787354]
[-169.35403442 -231.33457947]
[-160.74942017 -243.62117004]
[-149.29220581 -253.30273438]
[-135.74234009 -259.73709106]
[-120.99852753 -262.49752808]
[-106.03867340 -261.40087891]
[-91.85499573 -256.51995850]
[-79.38826752 -248.17846680]
[-69.46535492 -236.92965698]
[-62.74271393 -223.51477051]
[-62.74271393 -238.51477051]
[-62.74271393 -253.51477051]
[-62.74271393 -268.51477051]
[-76.79990387 -274.29959106]
[-87.56977081 -285.02703857]
[-93.41000366 -299.06127930]
[-93.43000031 -314.26220703]
[-87.62671661 -328.31176758]
[-76.88510132 -339.06753540]
[-62.84318161 -344.88928223]
[-47.64224625 -344.88928223]
[-33.60032654 -339.06753540]
[-22.85871506 -328.31176758]
[-17.05542755 -314.26220703]
[-17.07542419 -299.06127930]
[-22.91565514 -285.02703857]
[-33.68552780 -274.29959106]
[-47.74271393 -268.51477051]
[-47.74271393 -253.51477051]
[-47.74271393 -238.51477051]
[-47.74271393 -223.51477051]
[-45.29698563 -208.71549988]
[-40.47098923 -194.51304626]
[-35.64499283 -180.31059265]
[-30.81899452 -166.10813904]
[-25.88739967 -151.94200134]
[-20.85048485 -137.81297302]
[-15.81356812 -123.68394470]
[-9.63779926 -110.01427460]
[-2.36457014 -96.89558411]
[4.90865946 -83.77688599]
[17.84676933 -76.39755249]
[17.77133942 -60.57652664]
[25.04456902 -47.45783234]
[32.31779861 -34.33913803]
[47.66036606 -37.49063492]
[63.24518585 -35.74454117]
[77.54533386 -29.25984573]
[89.15599823 -18.66039276]
[96.93253326 -4.97488880]
[100.10324860 10.46292877]
[98.34599304 26.14427567]
[91.82085419 40.53277206]
[81.15563965 52.21497345]
[88.62338257 65.22392273]
[96.09112549 78.23287964]
[103.55886078 91.24182892]
[108.18047333 93.72269440]
[111.08311462 98.61636353]
[111.04866791 104.75115967]
[118.12577057 117.97668457]
[125.20288086 131.20220947]
[132.27998352 144.42774963]
[148.14314270 153.77877808]
[146.89326477 171.28320312]
[154.16648865 184.40190125]
[161.43972778 197.52058411]
[168.71295166 210.63928223]
[175.98617554 223.75798035]
[183.25941467 236.87666321]
[190.53263855 249.99536133]
[197.80586243 263.11404419]
[211.09460449 265.31042480]
[220.55395508 274.62338257]
[222.88774109 287.49334717]
[217.46440125 299.18167114]
[224.54150391 312.40719604]
[228.30914307 314.56561279]
[230.93034363 317.51416016]
[232.29748535 320.79534912]
[232.46258545 323.96386719]
[231.61949158 326.63729858]
[237.89685059 340.26062012]
[252.45062256 345.81268311]
[258.62268066 359.71810913]
[253.23995972 373.55868530]
[259.51730347 387.18200684]
[265.79467773 400.80529785]
[272.07202148 414.42861938]
[278.34939575 428.05194092]
[292.75183105 423.76815796]
[307.61730957 421.57775879]
[322.64321899 421.52529907]
[337.52365112 423.61187744]
[351.95562744 427.79501343]
[365.64538574 433.98950195]
[378.31414795 442.06927490]
[389.70404053 451.86984253]
[399.58319092 463.19165039]
[407.75042725 475.80422974]
[414.03952026 489.45077515]
[418.32241821 503.85345459]
[420.51190186 518.71911621]
[420.56341553 533.74499512]
[418.47592163 548.62530518]
[414.29190063 563.05700684]
[408.09655762 576.74639893]
[400.01599121 589.41467285]
[390.21472168 600.80395508]
[378.89230347 610.68237305]
[366.27923584 618.84887695]
[352.63229370 625.13708496]
[338.22933960 629.41906738]
[323.36358643 631.60766602]
[308.33767700 631.65826416]
[293.45748901 629.56982422]
[279.02603149 625.38494873]
[265.33706665 619.18872070]
[252.66928101 611.10736084]
[241.28059387 601.30541992]
[231.40286255 589.98236084]
[223.23716736 577.36877441]
[216.94978333 563.72149658]
[212.66867065 549.31823730]
[210.48101807 534.45233154]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 175]
[8 174]
[9 173]
[10 172]
[11 171]
[14 168]
[15 167]
[16 162]
[17 161]
[20 157]
[21 156]
[22 155]
[23 154]
[24 153]
[25 152]
[26 151]
[27 150]
[30 148]
[31 147]
[32 146]
[33 145]
[34 142]
[35 141]
[36 140]
[37 139]
[47 130]
[48 129]
[49 128]
[51 126]
[52 125]
[53 124]
[65 123]
[66 122]
[67 121]
[69 120]
[70 119]
[71 118]
[72 117]
[95 116]
[96 115]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
