%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUGxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[135.07669067 603.24426270]
[125.74418640 591.49023438]
[117.40080261 579.01458740]
[110.10206604 565.90045166]
[103.89655304 552.23498535]
[98.82556152 538.10919189]
[94.92282867 523.61706543]
[92.21433258 508.85507202]
[90.71810150 493.92141724]
[90.44408417 478.91549683]
[91.39411163 463.93719482]
[93.56185913 449.08612061]
[96.93290710 434.46118164]
[101.48480988 420.15969849]
[107.18727875 406.27679443]
[114.00236511 392.90490723]
[121.88471985 380.13302612]
[130.78187561 368.04611206]
[140.63462830 356.72460938]
[151.37742615 346.24389648]
[162.93873596 336.67370605]
[175.24165344 328.07772827]
[188.20429993 320.51315308]
[181.72479248 306.98480225]
[175.24530029 293.45645142]
[168.76580811 279.92810059]
[153.86135864 280.81518555]
[139.71446228 275.91513062]
[128.49107361 265.94515991]
[121.92213440 252.40129089]
[121.03666687 237.33378601]
[126.00069427 223.03688049]
[136.08718872 211.69940186]
[129.60769653 198.17106628]
[123.12820435 184.64271545]
[118.22678375 198.81932068]
[105.42462158 206.63627625]
[90.57469177 204.51976013]
[80.46618652 193.43742371]
[79.72056580 178.45597839]
[88.67873383 166.42471313]
[103.24512482 162.84417725]
[116.76148224 169.35264587]
[111.72456360 155.22361755]
[106.68765259 141.09458923]
[95.12586975 131.70446777]
[97.77988434 116.10745239]
[84.72544861 105.57379150]
[87.92758179 89.10799408]
[82.68086243 75.05551910]
[77.43414307 61.00305176]
[72.18743134 46.95058060]
[70.67961121 61.87460327]
[66.14283752 76.17207336]
[58.77001953 89.23506165]
[48.87465286 100.50811005]
[36.87749100 109.51189423]
[23.28866196 115.86357117]
[8.68596935 119.29304504]
[-6.30967474 119.65451813]
[-21.06064606 116.93260193]
[-34.93972778 111.24304199]
[-47.35677338 102.82775879]
[-57.78380203 92.04457855]
[-65.77745819 79.35199738]
[-70.99783325 65.28971863]
[-73.22296906 50.45568085]
[-72.35824585 35.48062515]
[-68.44042969 21.00130653]
[-61.63611603 7.63338661]
[-52.23461533 -4.05471992]
[-40.63569641 -13.56603050]
[-27.33254242 -20.49611855]
[-12.89081383 -24.55031204]
[2.07541943 -25.55622673]
[16.92978668 -23.47109032]
[31.04067039 -18.38356400]
[43.80807114 -10.50997066]
[54.68911362 -0.18510012]
[63.22112656 12.15202904]
[69.04137421 25.97700119]
[69.93419647 11.00359631]
[70.82701111 -3.96980977]
[63.92482758 -18.20604706]
[72.40595245 -30.45022202]
[73.29876709 -45.42362976]
[74.19158173 -60.39703369]
[75.08439636 -75.37043762]
[75.08439636 -90.37043762]
[74.19158173 -105.34384155]
[73.29876709 -120.31725311]
[72.40595245 -135.29064941]
[71.51313782 -150.26406860]
[56.78880310 -153.63610840]
[43.61159897 -161.02108765]
[33.04973984 -171.82034302]
[25.95943260 -185.15841675]
[22.91545105 -199.95405579]
[24.16456032 -215.00784302]
[29.60549927 -229.09942627]
[38.79719543 -241.08648682]
[50.99452209 -249.99725342]
[65.20869446 -255.10940552]
[80.28742981 -256.00848389]
[95.00836945 -252.62165833]
[108.17814636 -245.22343445]
[118.72914886 -234.41358948]
[125.80605316 -221.06838989]
[128.83517456 -206.26971436]
[127.57093811 -191.21719360]
[122.11584473 -177.13107300]
[112.91210938 -165.15325928]
[100.70584106 -156.25474548]
[86.48654175 -151.15687561]
[87.37935638 -136.18347168]
[88.27217102 -121.21006775]
[89.16498566 -106.23666382]
[90.05780029 -91.26325226]
[99.24329376 -103.12187195]
[113.61215210 -107.42720795]
[127.80515289 -102.57347107]
[136.52865601 -90.37099457]
[136.52900696 -75.37099457]
[127.80609131 -63.16810226]
[113.61331940 -58.31369400]
[99.24425507 -62.61834335]
[90.05780029 -74.47762299]
[89.16498566 -59.50421906]
[88.27217102 -44.53081131]
[87.37935638 -29.55740547]
[94.34539795 -16.39216614]
[85.80041504 -3.07699394]
[84.90760040 11.89641190]
[84.01478577 26.86981773]
[86.23989868 41.70386124]
[91.48661804 55.75633240]
[96.73333740 69.80880737]
[101.98005676 83.86127472]
[112.26515961 89.32550812]
[116.25755310 100.26634979]
[111.90891266 111.07054138]
[123.83097076 121.47126770]
[120.81668091 136.05767822]
[125.85359955 150.18670654]
[130.89051819 164.31573486]
[136.65653992 178.16322327]
[143.13604736 191.69155884]
[149.61553955 205.21990967]
[164.77169800 204.46723938]
[179.02294922 209.56085205]
[190.20809937 219.69523621]
[196.64363098 233.30300903]
[197.37701416 248.29724121]
[192.32760620 262.39154053]
[182.29415894 273.44860840]
[188.77365112 286.97695923]
[195.25314331 300.50531006]
[201.73263550 314.03366089]
[215.75186157 308.67507935]
[230.16120911 304.47705078]
[244.86479187 301.46746826]
[259.76473999 299.66641235]
[274.76193237 299.08584595]
[289.75656128 299.72961426]
[304.64880371 301.59347534]
[319.33956909 304.66497803]
[333.73107910 308.92370605]
[347.72760010 314.34130859]
[361.23596191 320.88174438]
[374.16622925 328.50149536]
[386.43243408 337.14981079]
[397.95285034 346.76919556]
[408.65090942 357.29556274]
[418.45532227 368.65893555]
[427.30090332 380.78363037]
[435.12878418 393.58898926]
[441.88684082 406.98980713]
[447.53009033 420.89685059]
[452.02102661 435.21762085]
[455.32974243 449.85681152]
[457.43417358 464.71694946]
[458.32040405 479.69918823]
[457.98245239 494.70379639]
[456.42260742 509.63095093]
[453.65124512 524.38128662]
[449.68679810 538.85662842]
[444.55566406 552.96069336]
[438.29199219 566.59954834]
[430.93743896 579.68255615]
[422.54098511 592.12249756]
[413.15847778 603.83660889]
[402.85238647 614.74707031]
[391.69128418 624.78112793]
[379.74942017 633.87207031]
[367.10632324 641.95935059]
[353.84606934 648.98919678]
[340.05694580 654.91479492]
[325.83071899 659.69677734]
[311.26205444 663.30322266]
[296.44790649 665.71020508]
[281.48684692 666.90167236]
[266.47845459 666.86968994]
[251.52259827 665.61450195]
[236.71884155 663.14447021]
[222.16566467 659.47595215]
[207.95993042 654.63342285]
[194.19618225 648.64910889]
[180.96601868 641.56280518]
[168.35748291 633.42169189]
[156.45446777 624.27996826]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 158]
[24 157]
[25 156]
[26 155]
[33 148]
[34 147]
[35 146]
[43 145]
[44 144]
[45 143]
[47 141]
[49 138]
[50 137]
[51 136]
[52 135]
[81 134]
[82 133]
[83 132]
[85 130]
[86 129]
[87 128]
[88 127]
[89 118]
[90 117]
[91 116]
[92 115]
[93 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
