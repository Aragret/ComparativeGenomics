%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[166.90234375 687.84710693]
[156.43235779 698.69342041]
[143.67053223 706.71832275]
[129.35882568 711.45526123]
[114.32932281 712.62884521]
[99.45580292 710.17083740]
[85.60298920 704.22418213]
[73.57627869 695.13452148]
[64.07487488 683.43041992]
[57.65119171 669.79223633]
[54.67868042 655.01293945]
[55.33016586 639.95178223]
[59.56777191 625.48431396]
[67.14512634 612.45178223]
[77.62169647 601.61181641]
[90.38838196 593.59466553]
[104.70294952 588.86639404]
[119.73316193 587.70190430]
[122.17889404 572.90264893]
[124.62461853 558.10333252]
[127.07034302 543.30407715]
[118.17484283 533.98211670]
[116.24385834 521.04559326]
[122.20397186 509.18438721]
[134.07949829 502.82937622]
[136.74530029 488.06814575]
[139.41108704 473.30694580]
[134.05885315 459.40719604]
[144.12553406 447.20178223]
[146.79133606 432.44055176]
[149.45713806 417.67935181]
[151.57176208 402.82916260]
[153.13227844 387.91055298]
[154.69279480 372.99194336]
[156.25332642 358.07333374]
[155.13768005 343.11486816]
[151.38137817 328.59283447]
[147.62507629 314.07077026]
[143.86877441 299.54870605]
[140.11247253 285.02664185]
[136.35617065 270.50457764]
[132.59986877 255.98252869]
[128.84356689 241.46046448]
[118.16564178 231.07629395]
[122.20056915 215.77825928]
[118.44426727 201.25619507]
[114.68796539 186.73414612]
[110.93166351 172.21208191]
[107.17536163 157.69001770]
[103.41906738 143.16796875]
[99.66276550 128.64590454]
[85.41542816 124.65748596]
[75.05802155 114.09252930]
[71.35304260 99.76887512]
[75.28865814 85.50685883]
[85.81517792 75.11039734]
[82.05887604 60.58833694]
[78.30257416 46.06627655]
[67.35596466 34.64339066]
[71.65956879 20.38406944]
[59.34426880 14.92990685]
[52.51846695 3.54487705]
[53.48192978 -9.49942589]
[61.65946198 -19.45721054]
[58.11978912 -34.03358459]
[47.34446335 -45.61818695]
[51.85988998 -59.81185150]
[41.08456802 -71.39645386]
[45.59999466 -85.59011841]
[42.06032181 -100.16649628]
[38.52064896 -114.74286652]
[34.98097610 -129.31924438]
[31.44130516 -143.89561462]
[27.90163231 -158.47200012]
[22.97694969 -144.30345154]
[12.45397949 -133.61387634]
[-1.63545668 -128.46723938]
[-16.57090950 -129.85729980]
[-29.46857643 -137.51564026]
[-37.83812332 -149.96356201]
[-40.06351471 -164.79756165]
[-35.71507263 -179.15342712]
[-25.63240242 -190.25927734]
[-11.76231766 -195.97073364]
[3.21708918 -195.18501282]
[16.41352844 -188.05381775]
[25.27948380 -175.95289612]
[24.38666916 -190.92630005]
[13.89274025 -206.05769348]
[22.35334206 -221.43251038]
[21.23769188 -236.39096069]
[20.12204361 -251.34942627]
[19.00639534 -266.30786133]
[4.26712751 -269.66128540]
[-8.82804680 -277.21163940]
[-19.11471558 -288.28756714]
[-25.67819214 -301.90417480]
[-27.93486023 -316.85070801]
[-25.68405533 -331.79812622]
[-19.12591934 -345.41729736]
[-8.84359741 -356.49725342]
[4.24861479 -364.05273438]
[18.98656464 -367.41195679]
[34.05976486 -366.27615356]
[48.12791824 -360.74636841]
[59.94009399 -351.31430054]
[68.44595337 -338.81863403]
[72.88917542 -324.37048340]
[72.87466431 -309.25454712]
[68.40370178 -294.81497192]
[59.87385941 -282.33566284]
[48.04359436 -272.92626953]
[33.96484756 -267.42352295]
[35.08049774 -252.46507263]
[36.19614410 -237.50662231]
[37.31179428 -222.54815674]
[46.27014160 -214.41954041]
[47.32202911 -201.96653748]
[39.36007309 -191.81912231]
[40.25289154 -176.84570312]
[42.47800827 -162.01167297]
[46.01768112 -147.43528748]
[49.55735397 -132.85891724]
[53.09702301 -118.28253937]
[56.63669586 -103.70616913]
[60.17636871 -89.12979126]
[70.69851685 -78.58779144]
[66.43626404 -63.35152435]
[76.95841217 -52.80952454]
[72.69616699 -37.57325745]
[76.23583984 -22.99688339]
[90.95897675 -14.86867142]
[95.33411407 1.71967077]
[86.18163300 16.62776947]
[96.85956573 27.01194000]
[92.82463837 42.30997849]
[96.58093262 56.83203506]
[100.33723450 71.35409546]
[114.58457184 75.34251404]
[124.94197845 85.90747070]
[128.64695740 100.23112488]
[124.71134186 114.49314117]
[114.18482208 124.88960266]
[117.94112396 139.41166687]
[121.69742584 153.93371582]
[125.45372772 168.45578003]
[129.21002197 182.97784424]
[132.96632385 197.49989319]
[136.72262573 212.02195740]
[147.66923523 223.44483948]
[143.36563110 237.70416260]
[147.12193298 252.22622681]
[150.87823486 266.74829102]
[154.63453674 281.27035522]
[158.39083862 295.79241943]
[162.14714050 310.31445312]
[165.90342712 324.83651733]
[169.65972900 339.35858154]
[172.73701477 324.67764282]
[179.19383240 311.13845825]
[188.66500854 299.50674438]
[200.61491394 290.44030762]
[214.36770630 284.45196533]
[229.14562988 281.88031006]
[244.11288452 282.87081909]
[258.42303467 287.36749268]
[271.26672363 295.11599731]
[281.91763306 305.67810059]
[289.77337646 318.45651245]
[294.38967896 332.72848511]
[295.50543213 347.68695068]
[293.05758667 362.48587036]
[287.18457031 376.28829956]
[278.21850586 388.31369019]
[266.66647339 397.88189697]
[253.18182373 404.45181274]
[238.52714539 407.65188599]
[223.53125000 407.30114746]
[209.04222107 403.41937256]
[195.87948608 396.22616577]
[184.78746033 386.12829590]
[176.39344788 373.69683838]
[171.17193604 359.63385010]
[169.61140442 374.55245972]
[168.05088806 389.47106934]
[166.49035645 404.38967896]
[179.60891724 397.11618042]
[193.53237915 402.69625854]
[197.99690247 417.01644897]
[189.71139526 429.52044678]
[174.78363037 430.99081421]
[164.21835327 420.34515381]
[161.55255127 435.10635376]
[158.88676453 449.86758423]
[164.04832458 464.82315063]
[154.17230225 475.97274780]
[151.50651550 490.73394775]
[148.84071350 505.49517822]
[159.07666016 519.68127441]
[155.94743347 536.54907227]
[141.86961365 545.74981689]
[139.42388916 560.54907227]
[136.97816467 575.34832764]
[134.53244019 590.14764404]
[148.38885498 596.08587646]
[160.42106628 605.16827393]
[169.92956543 616.86663818]
[176.36151123 630.50091553]
[179.34298706 645.27838135]
[178.70063782 660.33996582]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 204]
[19 203]
[20 202]
[21 201]
[25 198]
[26 197]
[27 196]
[29 194]
[30 193]
[31 192]
[32 186]
[33 185]
[34 184]
[35 183]
[36 158]
[37 157]
[38 156]
[39 155]
[40 154]
[41 153]
[42 152]
[43 151]
[45 149]
[46 148]
[47 147]
[48 146]
[49 145]
[50 144]
[51 143]
[56 138]
[57 137]
[58 136]
[60 134]
[64 131]
[65 130]
[67 128]
[69 126]
[70 125]
[71 124]
[72 123]
[73 122]
[74 121]
[87 120]
[88 119]
[90 116]
[91 115]
[92 114]
[93 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
