%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[-40.55731201 787.83874512]
[-50.36596298 799.22167969]
[-61.69478989 809.09271240]
[-74.31315613 817.25103760]
[-87.96416473 823.53039551]
[-102.36989594 827.80303955]
[-117.23707581 829.98199463]
[-132.26303101 830.02282715]
[-147.14183044 827.92480469]
[-161.57058716 823.73052979]
[-175.25552368 817.52545166]
[-187.91806030 809.43585205]
[-199.30038452 799.62652588]
[-209.17077637 788.29705811]
[-217.32827759 775.67822266]
[-223.60682678 762.02679443]
[-227.87858582 747.62078857]
[-230.05659485 732.75347900]
[-230.09651184 717.72753906]
[-227.99752808 702.84887695]
[-223.80235291 688.42034912]
[-217.59643555 674.73583984]
[-209.50608826 662.07379150]
[-199.69602966 650.69207764]
[-188.36598206 640.82238770]
[-175.74659729 632.66564941]
[-162.09481812 626.38793945]
[-147.68855286 622.11706543]
[-132.82110596 619.94000244]
[-117.79515076 619.90100098]
[-102.91660309 622.00091553]
[-98.72959137 607.59710693]
[-94.54258728 593.19335938]
[-90.35557556 578.78955078]
[-86.16856384 564.38580322]
[-100.37091827 569.21203613]
[-113.08105469 561.24633789]
[-114.92952728 546.36065674]
[-104.55371094 535.52819824]
[-89.60227203 536.73425293]
[-81.09711456 549.08807373]
[-75.85039520 535.03564453]
[-70.60368347 520.98315430]
[-65.35696411 506.93066406]
[-60.11024475 492.87820435]
[-54.86352539 478.82574463]
[-59.59793091 467.69415283]
[-55.34181213 455.94387817]
[-43.86399460 450.05978394]
[-46.44265747 435.39007568]
[-34.21621704 425.34893799]
[-28.76086044 411.37612915]
[-23.30550385 397.40335083]
[-17.85014534 383.43054199]
[-12.39478874 369.45773315]
[-6.93943214 355.48495483]
[-1.48407495 341.51214600]
[3.97128224 327.53936768]
[0.39400515 310.35882568]
[14.86564159 298.97229004]
[20.11236000 284.91983032]
[25.35907745 270.86737061]
[24.75376892 263.50152588]
[30.78993797 256.64569092]
[36.24529266 242.67289734]
[41.70065308 228.70010376]
[47.15600967 214.72731018]
[52.61136627 200.75450134]
[58.06672287 186.78170776]
[63.52207947 172.80891418]
[57.32507706 159.31324768]
[62.65853882 145.06513977]
[76.85604095 138.65666199]
[82.31140137 124.68386078]
[87.76675415 110.71105957]
[83.74172211 99.78218079]
[88.05809784 88.96505737]
[98.50133514 83.80947876]
[104.16412354 69.91944885]
[102.20919800 54.21948624]
[114.17873383 45.35498810]
[113.65894318 38.76398468]
[116.16896057 33.66527557]
[120.22245789 31.13976479]
[126.29629517 17.42449760]
[124.80967712 1.67328930]
[137.03784180 -6.83090067]
[143.11167908 -20.54616737]
[149.08323669 -34.30627060]
[154.95220947 -48.11044693]
[160.82116699 -61.91462326]
[166.27651978 -75.88742065]
[171.31343079 -90.01644897]
[176.35035706 -104.14548492]
[181.38726807 -118.27451324]
[186.31886292 -132.44064331]
[191.14486694 -146.64309692]
[195.97085571 -160.84555054]
[200.79685974 -175.04801941]
[187.61247253 -182.28286743]
[175.88481140 -191.69738770]
[165.97029114 -203.00549316]
[158.17019653 -215.86355591]
[152.72154236 -229.88079834]
[149.78993225 -244.63128662]
[149.46443176 -259.66674805]
[151.75494385 -274.53027344]
[156.59187317 -288.77020264]
[163.82821655 -301.95376587]
[173.24407959 -313.68035889]
[184.55331421 -323.59359741]
[197.41224670 -331.39224243]
[211.43011475 -336.83929443]
[226.18093872 -339.76922607]
[241.21643066 -340.09301758]
[256.07971191 -337.80081177]
[270.31909180 -332.96228027]
[283.50183105 -325.72445679]
[295.22732544 -316.30725098]
[305.13931274 -304.99688721]
[312.93649292 -292.13708496]
[318.38195801 -278.11859131]
[321.31021118 -263.36743164]
[321.63232422 -248.33190918]
[319.33840942 -233.46888733]
[314.49826050 -219.23007202]
[307.25894165 -206.04814148]
[297.84042358 -194.32369995]
[286.52893066 -184.41302490]
[273.66821289 -176.61729431]
[259.64910889 -171.17341614]
[244.89764404 -168.24681091]
[229.86206055 -167.92643738]
[214.99931335 -170.22201538]
[210.17330933 -156.01956177]
[205.34732056 -141.81710815]
[200.52131653 -127.61464691]
[201.34567261 -120.27011108]
[195.51629639 -113.23759460]
[190.47938538 -99.10856628]
[185.44245911 -84.97953796]
[180.40554810 -70.85050964]
[181.48379517 -68.26293182]
[181.60203552 -65.09234619]
[180.53308105 -61.70225143]
[178.18539429 -58.53162384]
[174.62533569 -56.04566193]
[168.75637817 -42.24148560]
[162.88742065 -28.43730927]
[163.16322327 -21.05180168]
[156.82695007 -14.47233391]
[150.75311279 -0.75706685]
[152.67416382 14.01313400]
[140.01156616 23.49833107]
[133.93772888 37.21359634]
[128.06877136 51.01777649]
[130.42872620 65.72422791]
[118.05414581 75.58223724]
[112.39135742 89.47225952]
[115.10182190 106.02610016]
[101.73955536 116.16641998]
[96.28419495 130.13922119]
[90.82884216 144.11201477]
[96.92832184 158.44497681]
[91.19676208 172.53767395]
[77.49488068 178.26426697]
[72.03952026 192.23706055]
[66.58415985 206.20986938]
[61.12880707 220.18266296]
[55.67345047 234.15545654]
[50.21809387 248.12825012]
[44.76273346 262.10104370]
[39.41154861 276.11407471]
[34.16482925 290.16653442]
[28.91811371 304.21902466]
[33.55241013 316.25588989]
[28.89310837 327.85220337]
[17.94408035 332.99472046]
[12.48872280 346.96749878]
[7.03336573 360.94030762]
[1.57800877 374.91311646]
[-3.87734818 388.88589478]
[-9.33270550 402.85870361]
[-14.78806210 416.83151245]
[-20.24341965 430.80429077]
[-18.05496216 446.47341919]
[-29.89119720 455.51513672]
[-26.69273758 473.64938354]
[-40.81105423 484.07244873]
[-46.05777359 498.12490845]
[-51.30448914 512.17736816]
[-56.55120850 526.22985840]
[-61.79792786 540.28234863]
[-67.04464722 554.33477783]
[-71.76477814 568.57281494]
[-75.95178986 582.97656250]
[-80.13880157 597.38037109]
[-84.32581329 611.78411865]
[-88.51282501 626.18792725]
[-74.82711029 632.39129639]
[-62.16357803 640.47930908]
[-50.78003693 650.28723145]
[-40.90824509 661.61547852]
[-32.74917984 674.23333740]
[-26.46894455 687.88397217]
[-22.19540024 702.28942871]
[-20.01555061 717.15643311]
[-19.97377586 732.18243408]
[-22.07092285 747.06134033]
[-26.26429939 761.49035645]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 199]
[32 198]
[33 197]
[34 196]
[35 195]
[41 194]
[42 193]
[43 192]
[44 191]
[45 190]
[46 189]
[49 187]
[51 185]
[52 184]
[53 183]
[54 182]
[55 181]
[56 180]
[57 179]
[58 178]
[60 175]
[61 174]
[62 173]
[64 172]
[65 171]
[66 170]
[67 169]
[68 168]
[69 167]
[70 166]
[73 163]
[74 162]
[75 161]
[78 159]
[79 158]
[81 156]
[84 155]
[85 154]
[87 152]
[88 151]
[89 149]
[90 148]
[91 147]
[92 142]
[93 141]
[94 140]
[95 139]
[96 137]
[97 136]
[98 135]
[99 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
