%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[50.55056381 827.32409668]
[35.68217468 829.36950684]
[20.69653702 830.19622803]
[5.69337749 829.79870605]
[-9.22745609 828.17956543]
[-23.96666718 825.34967041]
[-38.42617035 821.32775879]
[-52.50973129 816.14068604]
[-66.12363434 809.82287598]
[-79.17727661 802.41644287]
[-91.58377838 793.97064209]
[-103.26058960 784.54168701]
[-114.12998962 774.19232178]
[-124.11965179 762.99145508]
[-133.16308594 751.01361084]
[-141.20011902 738.33850098]
[-148.17726135 725.05041504]
[-154.04808044 711.23791504]
[-158.77351379 696.99279785]
[-162.32209778 682.40991211]
[-164.67022705 667.58630371]
[-165.80226135 652.62066650]
[-165.71069336 637.61248779]
[-164.39611816 622.66174316]
[-161.86727905 607.86791992]
[-158.14100647 593.32940674]
[-153.24211121 579.14306641]
[-147.20318604 565.40313721]
[-140.06440735 552.20123291]
[-131.87330627 539.62512207]
[-122.68437958 527.75854492]
[-112.55878448 516.68035889]
[-101.56390381 506.46444702]
[-89.77291107 497.17868042]
[-77.26426697 488.88491821]
[-64.12122345 481.63830566]
[-50.43124390 475.48712158]
[-36.28543472 470.47225952]
[-21.77793312 466.62710571]
[-7.00528574 463.97726440]
[7.93419409 462.54034424]
[22.94108582 462.32589722]
[37.91552353 463.33541870]
[40.14064026 448.50137329]
[42.36575699 433.66732788]
[44.59087372 418.83328247]
[46.81599045 403.99923706]
[49.04110718 389.16519165]
[51.26622391 374.33114624]
[53.49134064 359.49710083]
[55.71645737 344.66305542]
[57.94157791 329.82901001]
[60.16669464 314.99496460]
[62.39181137 300.16091919]
[64.61692810 285.32687378]
[66.84204865 270.49285889]
[69.06716156 255.65879822]
[55.33142853 249.71917725]
[43.59224701 240.41926575]
[34.65357208 228.38827515]
[29.12954140 214.44276428]
[27.40229607 199.53111267]
[29.59553909 184.66912842]
[35.56570816 170.87077332]
[44.91135025 159.07901001]
[57.00010681 150.10137939]
[71.01151276 144.55467224]
[85.99267578 142.82260132]
[88.21778870 127.98854828]
[90.44290924 113.15451050]
[83.90264893 97.70778656]
[94.49465179 84.70064545]
[96.49866486 69.83512115]
[98.50267792 54.96958923]
[100.50669098 40.10406113]
[102.51071167 25.23853302]
[104.51472473 10.37300491]
[106.51873779 -4.49252272]
[100.69451141 -19.20269012]
[110.06282806 -30.78215408]
[112.06684113 -45.64768219]
[114.07085419 -60.51321030]
[116.07486725 -75.37873840]
[118.07888031 -90.24427032]
[120.08289337 -105.10979462]
[114.25867462 -119.81996155]
[123.62698364 -131.39942932]
[125.63099670 -146.26495361]
[127.63500977 -161.13047791]
[129.63902283 -175.99601746]
[131.64303589 -190.86154175]
[133.64704895 -205.72706604]
[119.29794312 -210.22274780]
[105.91508484 -217.07891846]
[93.88352966 -226.09831238]
[83.54943848 -237.02143860]
[75.21015930 -249.53401184]
[69.10562134 -263.27600098]
[65.41146851 -277.85205078]
[64.23397827 -292.84277344]
[65.60704803 -307.81683350]
[69.49114990 -322.34344482]
[75.77455139 -336.00457764]
[84.27645111 -348.40722656]
[94.75223541 -359.19451904]
[106.90050507 -368.05612183]
[120.37171936 -374.73699951]
[134.77828979 -379.04498291]
[149.70570374 -380.85614014]
[164.72448730 -380.11828613]
[179.40249634 -376.85272217]
[193.31742859 -371.15338135]
[206.06892395 -363.18420410]
[217.29010010 -353.17456055]
[226.65808105 -341.41238403]
[233.90335083 -328.23611450]
[238.81744385 -314.02487183]
[241.25898743 -299.18750000]
[241.15769958 -284.15097046]
[238.51651001 -269.34783936]
[233.41142273 -255.20408630]
[225.98931885 -242.12661743]
[216.46372986 -230.49169922]
[205.10873413 -220.63409424]
[192.25105286 -212.83744812]
[178.26060486 -207.32604980]
[163.53993225 -204.25849915]
[148.51258850 -203.72305298]
[146.50857544 -188.85752869]
[144.50454712 -173.99200439]
[142.50053406 -159.12646484]
[140.49652100 -144.26094055]
[138.49250793 -129.39541626]
[144.46006775 -115.74852753]
[134.94842529 -103.10578156]
[132.94441223 -88.24025726]
[130.94039917 -73.37472534]
[128.93638611 -58.50919724]
[126.93236542 -43.64366913]
[124.92835236 -28.77814102]
[130.89591980 -15.13125515]
[121.38426208 -2.48850918]
[119.38024902 12.37701893]
[117.37623596 27.24254799]
[115.37222290 42.10807419]
[113.36820984 56.97360229]
[111.36419678 71.83913422]
[109.36018372 86.70465851]
[115.85051727 96.37506866]
[114.20864868 107.90526581]
[105.27695465 115.37962341]
[103.05183411 130.21366882]
[100.82672119 145.04771423]
[114.64035797 151.09902954]
[126.40772247 160.51257324]
[135.33041382 172.64193726]
[140.80505371 186.65673828]
[142.46403503 201.59948730]
[140.20025635 216.45089722]
[134.17395020 230.19949341]
[124.80141449 241.91052246]
[112.72624207 250.78941345]
[98.77510834 256.23577881]
[83.90120697 257.88391113]
[81.67608643 272.71795654]
[79.45097351 287.55200195]
[77.22585297 302.38604736]
[75.00074005 317.22009277]
[72.77561951 332.05413818]
[70.55050659 346.88818359]
[68.32538605 361.72222900]
[66.10026550 376.55627441]
[63.87515259 391.39031982]
[61.65003586 406.22436523]
[59.42491531 421.05841064]
[57.19979858 435.89245605]
[54.97468185 450.72650146]
[52.74956512 465.56051636]
[67.36116028 468.98895264]
[81.64468384 473.59695435]
[95.50508118 479.35388184]
[108.85012054 486.22140503]
[121.59097290 494.15383911]
[133.64286804 503.09835815]
[144.92558289 512.99548340]
[155.36405945 523.77935791]
[164.88879395 535.37811279]
[173.43643188 547.71466064]
[180.95005798 560.70690918]
[187.37969971 574.26837158]
[192.68255615 588.30871582]
[196.82334900 602.73461914]
[199.77449036 617.45007324]
[201.51637268 632.35705566]
[202.03738403 647.35644531]
[201.33406067 662.34838867]
[199.41110229 677.23309326]
[196.28128052 691.91156006]
[191.96542358 706.28607178]
[186.49227905 720.26092529]
[179.89825439 733.74322510]
[172.22723389 746.64312744]
[163.53025818 758.87487793]
[153.86521912 770.35705566]
[143.29643250 781.01318359]
[131.89422607 790.77239990]
[119.73448944 799.56976318]
[106.89813995 807.34674072]
[93.47060394 814.05151367]
[79.54124451 819.63952637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 178]
[44 177]
[45 176]
[46 175]
[47 174]
[48 173]
[49 172]
[50 171]
[51 170]
[52 169]
[53 168]
[54 167]
[55 166]
[56 165]
[57 164]
[68 153]
[69 152]
[70 151]
[72 148]
[73 147]
[74 146]
[75 145]
[76 144]
[77 143]
[78 142]
[80 140]
[81 139]
[82 138]
[83 137]
[84 136]
[85 135]
[87 133]
[88 132]
[89 131]
[90 130]
[91 129]
[92 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
