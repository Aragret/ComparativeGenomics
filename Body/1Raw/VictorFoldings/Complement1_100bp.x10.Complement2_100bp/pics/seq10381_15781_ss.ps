%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[221.85783386 420.62927246]
[230.39042664 408.26486206]
[240.49493408 397.14810181]
[251.99105835 387.47738647]
[243.94987488 374.81488037]
[235.90870667 362.15234375]
[227.86753845 349.48983765]
[219.82635498 336.82730103]
[211.78518677 324.16476440]
[203.74401855 311.50225830]
[195.70285034 298.83972168]
[187.66166687 286.17721558]
[186.09927368 301.09561157]
[176.80270386 312.86734009]
[162.65263367 317.84481812]
[148.03358459 314.48571777]
[137.47544861 303.83087158]
[134.24978638 289.18179321]
[139.35607910 275.07769775]
[151.21209717 265.88885498]
[166.14413452 264.46255493]
[179.52551270 271.24090576]
[173.24815369 257.61758423]
[166.97079468 243.99427795]
[160.69343567 230.37097168]
[154.21392822 216.84262085]
[147.53373718 203.41224670]
[140.85354614 189.98187256]
[133.87509155 176.70402527]
[126.60186005 163.58532715]
[119.32863617 150.46662903]
[112.05540466 137.34793091]
[104.78217316 124.22924805]
[97.50894165 111.11054993]
[95.06135559 125.90951538]
[85.08061218 137.10704041]
[70.65935516 141.23347473]
[56.26617050 137.01017761]
[46.36094284 125.74578094]
[44.01291656 110.93069458]
[49.94964600 97.15553284]
[62.33158112 88.68866730]
[77.32203674 88.15366364]
[90.27623749 95.71646881]
[84.82087708 81.74367523]
[79.36552429 67.77087402]
[73.91016388 53.79807663]
[68.45481110 39.82527924]
[62.99945068 25.85248184]
[57.54409409 11.87968349]
[45.31765366 1.83853185]
[47.89631653 -12.83115673]
[44.41185760 -15.42201233]
[42.15961075 -18.66113472]
[41.19206619 -22.08155060]
[41.40465546 -25.24721336]
[42.55946350 -27.80153465]
[37.94545364 -42.07426834]
[33.33144379 -56.34700012]
[18.25985909 -58.49378204]
[5.66626787 -66.93702698]
[-1.98129261 -79.95758820]
[-3.21215796 -94.94578552]
[2.16442466 -108.92440033]
[13.03204727 -119.14009094]
[8.41803741 -133.41282654]
[3.80402851 -147.68556213]
[-7.80307436 -158.43664551]
[-4.35582972 -172.92683411]
[-8.96983910 -187.19956970]
[-13.58384800 -201.47230530]
[-18.19785690 -215.74504089]
[-22.81186676 -230.01776123]
[-27.42587662 -244.29049683]
[-32.03988647 -258.56323242]
[-46.87892914 -256.17510986]
[-61.90861511 -256.08023071]
[-76.77662659 -258.28085327]
[-91.13442993 -262.72540283]
[-104.64546204 -269.30966187]
[-116.99300385 -277.87930298]
[-127.88761139 -288.23342896]
[-137.07389832 -300.12933350]
[-144.33653259 -313.28814697]
[-149.50524902 -327.40142822]
[-152.45890808 -342.13833618]
[-153.12826538 -357.15341187]
[-151.49761963 -372.09466553]
[-147.60519409 -386.61187744]
[-141.54225159 -400.36474609]
[-133.45091248 -413.03085327]
[-123.52082825 -424.31332397]
[-111.98479462 -433.94766235]
[-99.11322784 -441.70800781]
[-85.20784760 -447.41247559]
[-70.59463501 -450.92733765]
[-55.61612320 -452.17019653]
[-40.62343979 -451.11193848]
[-25.96803856 -447.77731323]
[-11.99345684 -442.24456787]
[0.97271836 -434.64331055]
[12.62654209 -425.15179443]
[22.69483185 -413.99252319]
[30.94157219 -401.42700195]
[37.17344666 -387.74987793]
[41.24437714 -373.28170776]
[43.05892563 -358.36166382]
[42.57456207 -343.33947754]
[39.80264282 -328.56732178]
[34.80813980 -314.39144897]
[27.70813751 -301.14416504]
[18.66906357 -289.13601685]
[7.90281248 -278.64846802]
[-4.33824205 -269.92742920]
[-17.76715279 -263.17724609]
[-13.15314293 -248.90451050]
[-8.53913307 -234.63177490]
[-3.92512417 -220.35903931]
[0.68888515 -206.08630371]
[5.30289459 -191.81358337]
[9.91690350 -177.54084778]
[21.19398117 -167.81063843]
[18.07676125 -152.29956055]
[22.69077110 -138.02684021]
[27.30478096 -123.75409698]
[42.09584808 -121.83321381]
[54.63769913 -113.64716339]
[62.41345215 -100.77476501]
[63.83498001 -85.74148560]
[58.56700516 -71.52404785]
[47.60417938 -60.96100998]
[52.21818924 -46.68827820]
[56.83219910 -32.41554260]
[61.86911392 -18.28651428]
[73.70535278 -9.24479008]
[71.51689148 6.42432690]
[76.97225189 20.39712524]
[82.42760468 34.36992264]
[87.88296509 48.34272003]
[93.33831787 62.31551743]
[98.79367828 76.28831482]
[104.24903107 90.26111603]
[110.62763977 103.83731842]
[117.90087128 116.95601654]
[125.17409515 130.07470703]
[132.44732666 143.19340515]
[139.72055054 156.31210327]
[146.99378967 169.43078613]
[151.46922302 172.11734009]
[154.19413757 175.87608337]
[155.05325317 179.86067200]
[154.28392029 183.30166626]
[160.96411133 196.73205566]
[167.64431763 210.16242981]
[172.93382263 214.12886047]
[175.10086060 219.38252258]
[174.31674194 224.09359741]
[180.59410095 237.71691895]
[186.87147522 251.34024048]
[193.14883423 264.96356201]
[200.32418823 278.13601685]
[208.36537170 290.79855347]
[216.40653992 303.46109009]
[224.44770813 316.12359619]
[232.48889160 328.78613281]
[240.53005981 341.44863892]
[248.57122803 354.11117554]
[256.61239624 366.77371216]
[264.65356445 379.43621826]
[278.29495239 373.14370728]
[292.65338135 368.72558594]
[307.47253418 366.26074219]
[322.48803711 365.79318237]
[337.43185425 367.33120728]
[352.03732300 370.84738159]
[366.04379272 376.27899170]
[379.20132446 383.52905273]
[391.27505493 392.46820068]
[402.04953003 402.93692017]
[411.33248901 414.74835205]
[418.95825195 427.69174194]
[424.79071045 441.53607178]
[428.72583008 456.03430176]
[430.69332886 470.92767334]
[430.65811157 485.95037842]
[428.62081909 500.83438110]
[424.61782837 515.31396484]
[418.72052002 529.13085938]
[411.03417969 542.03833008]
[401.69595337 553.80615234]
[390.87252808 564.22424316]
[378.75701904 573.10668945]
[365.56567383 580.29504395]
[351.53390503 585.66088867]
[336.91210938 589.10858154]
[321.96124268 590.57653809]
[306.94812012 590.03863525]
[292.14065552 587.50433350]
[277.80310059 583.01898193]
[264.19137573 576.66259766]
[251.54833984 568.54858398]
[240.09963989 558.82177734]
[230.04960632 547.65570068]
[221.57759094 535.24975586]
[214.83476257 521.82525635]
[209.94148254 507.62173462]
[206.98507690 492.89276123]
[206.01828003 477.90112305]
[207.05836487 462.91439819]
[210.08677673 448.20004272]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 169]
[5 168]
[6 167]
[7 166]
[8 165]
[9 164]
[10 163]
[11 162]
[12 161]
[22 160]
[23 159]
[24 158]
[25 157]
[26 154]
[27 153]
[28 152]
[29 148]
[30 147]
[31 146]
[32 145]
[33 144]
[34 143]
[44 142]
[45 141]
[46 140]
[47 139]
[48 138]
[49 137]
[50 136]
[52 134]
[57 133]
[58 132]
[59 131]
[65 125]
[66 124]
[67 123]
[69 121]
[70 120]
[71 119]
[72 118]
[73 117]
[74 116]
[75 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
