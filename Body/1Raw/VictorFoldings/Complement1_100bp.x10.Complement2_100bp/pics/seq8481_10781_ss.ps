%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[85.86778259 556.43194580]
[72.26393890 562.76599121]
[58.25139236 568.13568115]
[43.89841080 572.51477051]
[29.27491951 575.88201904]
[14.45216274 578.22094727]
[-0.49764252 579.52020264]
[-15.50166225 579.77343750]
[-30.48679733 578.97943115]
[-45.38003922 577.14202881]
[-60.10883331 574.27020264]
[-74.60141754 570.37792969]
[-88.78718567 565.48419189]
[-102.59703064 559.61285400]
[-115.96366882 552.79241943]
[-128.82197571 545.05621338]
[-141.10929871 536.44195557]
[-152.76579285 526.99145508]
[-163.73464966 516.75091553]
[-173.96244812 505.77017212]
[-183.39935303 494.10272217]
[-191.99937439 481.80538940]
[-199.72064209 468.93811035]
[-206.52549744 455.56356812]
[-212.38082886 441.74691772]
[-217.25808716 427.55548096]
[-221.13351440 413.05838013]
[-223.98822021 398.32626343]
[-225.80831909 383.43087769]
[-226.58493042 368.44485474]
[-226.31427002 353.44113159]
[-224.99765015 338.49282837]
[-222.64149475 323.67282104]
[-219.25729370 309.05325317]
[-214.86151123 294.70535278]
[-209.47557068 280.69906616]
[-203.12573242 267.10256958]
[-195.84289551 253.98216248]
[-187.66256714 241.40174866]
[-178.62460327 229.42260742]
[-168.77302551 218.10310364]
[-158.15583801 207.49838257]
[-146.82475281 197.66012573]
[-134.83499146 188.63624573]
[-122.24496460 180.47071838]
[-109.11599731 173.20332336]
[-95.51206970 166.86947632]
[-81.49944305 161.50001526]
[-67.14640045 157.12110901]
[-52.52285767 153.75408936]
[-37.70006943 151.41535950]
[-22.75024414 150.11633301]
[-7.74622059 149.86331177]
[7.23890257 150.65753174]
[22.13212013 152.49514771]
[36.86087036 155.36718750]
[51.35340118 159.25965881]
[65.53910065 164.15359497]
[71.40806580 150.34941101]
[77.27702332 136.54524231]
[83.14598083 122.74105835]
[88.70520782 108.80926514]
[86.58087921 94.98975372]
[97.24231720 85.94401550]
[102.48903656 71.89154816]
[107.31503296 57.68909073]
[111.71603394 43.34924698]
[108.36822510 27.88629913]
[119.49918365 17.98927879]
[123.90017700 3.64943171]
[128.30117798 -10.69041538]
[132.70217896 -25.03026199]
[137.10317993 -39.37010956]
[123.11646271 -44.80833054]
[109.56402588 -51.25300980]
[96.51818085 -58.66976929]
[84.04852295 -67.01902771]
[72.22160339 -76.25624847]
[61.10050201 -86.33214569]
[50.74457169 -97.19294739]
[41.20905685 -108.78071594]
[32.54483795 -121.03362274]
[24.79814529 -133.88629150]
[18.01030731 -147.27015686]
[12.21753979 -161.11378479]
[7.45075321 -175.34333801]
[3.73537874 -189.88288879]
[1.09124029 -204.65484619]
[-0.46755439 -219.58041382]
[-0.93268842 -234.57995605]
[-0.30168012 -249.57342529]
[1.42210388 -264.48083496]
[4.22946644 -279.22265625]
[8.10542870 -293.72021484]
[13.02931023 -307.89617920]
[18.97484016 -321.67489624]
[25.91029549 -334.98284912]
[33.79867554 -347.74905396]
[42.59788513 -359.90539551]
[52.26098251 -371.38696289]
[62.73640823 -382.13256836]
[73.96826935 -392.08483887]
[85.89663696 -401.19067383]
[98.45787811 -409.40151978]
[111.58496094 -416.67352295]
[125.20784760 -422.96792603]
[139.25386047 -428.25109863]
[153.64804077 -432.49490356]
[168.31361389 -435.67666626]
[183.17230225 -437.77941895]
[198.14485168 -438.79193115]
[213.15136719 -438.70880127]
[228.11178589 -437.53048706]
[242.94627380 -435.26330566]
[257.57568359 -431.91928101]
[271.92199707 -427.51629639]
[285.90863037 -422.07785034]
[299.46093750 -415.63296509]
[312.50668335 -408.21597290]
[324.97619629 -399.86651611]
[336.80294800 -390.62908936]
[347.92388916 -380.55300903]
[358.27963257 -369.69204712]
[367.81497192 -358.10412598]
[376.47897339 -345.85107422]
[384.22546387 -332.99826050]
[391.01309204 -319.61431885]
[396.80563354 -305.77056885]
[401.57217407 -291.54095459]
[405.28732300 -277.00134277]
[407.93121338 -262.22933960]
[409.48974609 -247.30374146]
[409.95465088 -232.30419922]
[409.32339478 -217.31072998]
[407.59936523 -202.40335083]
[404.79174805 -187.66157532]
[400.91555786 -173.16407776]
[395.99145508 -158.98820496]
[390.04568481 -145.20957947]
[383.11001587 -131.90173340]
[375.22143555 -119.13565826]
[366.42202759 -106.97947693]
[356.75872803 -95.49803925]
[346.28314209 -84.75261688]
[335.05111694 -74.80052948]
[323.12258911 -65.69488525]
[310.56121826 -57.48426056]
[297.43402100 -50.21246338]
[283.81100464 -43.91829681]
[269.76492310 -38.63534164]
[255.37066650 -34.39178467]
[240.70504761 -31.21026802]
[225.84631348 -29.10776520]
[210.87374878 -28.09549332]
[195.86723328 -28.17885590]
[180.90684509 -29.35740662]
[166.07238770 -31.62485886]
[151.44302368 -34.96911240]
[147.04202271 -20.62926483]
[142.64102173 -6.28941727]
[138.24002075 8.05042934]
[133.83903503 22.39027786]
[137.50163269 36.82754135]
[126.05587769 47.75024414]
[121.65488434 62.09009171]
[122.84759521 64.62693787]
[123.10729218 67.78907776]
[122.19077301 71.22352600]
[119.98700714 74.49581909]
[116.54151154 77.13826752]
[111.29479218 91.19073486]
[113.41912079 105.01024628]
[102.75768280 114.05598450]
[103.62329102 119.20358276]
[102.53649139 123.71713257]
[100.06574249 126.95912170]
[96.95015717 128.61001587]
[91.08119965 142.41419983]
[85.21224213 156.21836853]
[79.34327698 170.02255249]
[92.71000671 176.84275818]
[105.56842804 184.57876587]
[117.85588074 193.19290161]
[129.51251221 202.64317322]
[140.48152161 212.88356018]
[150.70947266 223.86416626]
[160.14653015 235.53149414]
[168.74673462 247.82870483]
[176.46818542 260.69586182]
[183.27323914 274.07031250]
[189.12876892 287.88690186]
[194.00622559 302.07827759]
[197.88185120 316.57531738]
[200.73678589 331.30737305]
[202.55708313 346.20272827]
[203.33390808 361.18875122]
[203.06346130 376.19247437]
[201.74707031 391.14077759]
[199.39112854 405.96084595]
[196.00712585 420.58047485]
[191.61155701 434.92840576]
[186.22581482 448.93478394]
[179.87615967 462.53137207]
[172.59352112 475.65188599]
[164.41337585 488.23242188]
[155.37557983 500.21170044]
[145.52416992 511.53134155]
[134.90713501 522.13616943]
[123.57619476 531.97460938]
[111.58655548 540.99865723]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 180]
[59 179]
[60 178]
[61 177]
[62 173]
[64 171]
[65 170]
[66 165]
[67 164]
[69 162]
[70 161]
[71 160]
[72 159]
[73 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
