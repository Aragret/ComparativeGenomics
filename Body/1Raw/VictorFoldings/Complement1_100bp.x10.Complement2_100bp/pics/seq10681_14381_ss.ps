%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUUxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[155.72073364 189.83491516]
[156.73503113 174.86358643]
[158.74703979 159.99345398]
[161.74777222 145.29090881]
[165.72383118 130.82162476]
[151.55770874 125.89002991]
[137.39157104 120.95843506]
[123.22543335 116.02684021]
[109.05929565 111.09524536]
[95.29067230 113.52766418]
[86.00910950 103.07088470]
[71.84297180 98.13929749]
[57.67683792 93.20770264]
[43.51070404 88.27610779]
[29.34456825 83.34451294]
[23.52260399 97.17409515]
[16.83523369 110.60657501]
[9.30938339 123.58787537]
[0.97535765 136.06571960]
[-8.13328552 147.98985291]
[-17.97986794 159.31228638]
[-28.52474213 169.98739624]
[-39.72544479 179.97222900]
[-51.53687668 189.22656250]
[-63.91147614 197.71311951]
[-76.79941559 205.39776611]
[-90.14879608 212.24951172]
[-103.90586853 218.24079895]
[-118.01522827 223.34748840]
[-132.42007446 227.54902649]
[-147.06239319 230.82849121]
[-161.88323975 233.17268372]
[-176.82292175 234.57214355]
[-191.82128906 235.02125549]
[-206.81793213 234.51821899]
[-221.75248718 233.06501770]
[-236.56478882 230.66755676]
[-251.19522095 227.33544922]
[-265.58486938 223.08213806]
[-279.67578125 217.92472839]
[-293.41122437 211.88400269]
[-306.73587036 204.98428345]
[-319.59609985 197.25335693]
[-331.94009399 188.72233582]
[-343.71817017 179.42558289]
[-354.88287354 169.40054321]
[-365.38928223 158.68756104]
[-375.19509888 147.32980347]
[-384.26077271 135.37297058]
[-392.54989624 122.86524200]
[-400.02899170 109.85696411]
[-406.66802979 96.40051270]
[-412.44021606 82.55008698]
[-417.32232666 68.36145020]
[-421.29470825 53.89173126]
[-424.34136963 39.19920349]
[-426.45001221 24.34302330]
[-427.61221313 9.38301468]
[-427.82321167 -5.62058496]
[-427.08221436 -20.60736084]
[-425.39218140 -35.51696396]
[-422.75991821 -50.28936386]
[-419.19601440 -64.86506653]
[-414.71484375 -79.18539429]
[-409.33447266 -93.19267273]
[-403.07650757 -106.83049774]
[-395.96615601 -120.04396820]
[-388.03210449 -132.77986145]
[-379.30624390 -144.98690796]
[-369.82373047 -156.61595154]
[-359.62274170 -167.62014771]
[-348.74435425 -177.95520020]
[-337.23239136 -187.57951355]
[-325.13320923 -196.45429993]
[-312.49548340 -204.54383850]
[-299.37011719 -211.81555176]
[-285.80999756 -218.24015808]
[-271.86972046 -223.79179382]
[-257.60537720 -228.44810486]
[-243.07443237 -232.19032288]
[-228.33540344 -235.00340271]
[-213.44763184 -236.87602234]
[-198.47105408 -237.80061340]
[-183.46600342 -237.77346802]
[-168.49287415 -236.79469299]
[-153.61196899 -234.86824036]
[-138.88320923 -232.00184631]
[-124.36589813 -228.20707703]
[-110.11849976 -223.49919128]
[-96.19838715 -217.89715576]
[-82.66159058 -211.42352295]
[-69.56264496 -204.10437012]
[-56.95427322 -195.96916199]
[-44.88726044 -187.05065918]
[-33.41019058 -177.38478088]
[-22.56927681 -167.01042175]
[-12.40817356 -155.96939087]
[-2.96779656 -144.30612183]
[5.71384096 -132.06758118]
[13.60178089 -119.30307007]
[20.66426086 -106.06396484]
[26.87284470 -92.40358734]
[32.20252991 -78.37693024]
[36.63185501 -64.04048920]
[40.14298630 -49.45198441]
[42.72178650 -34.67015839]
[44.35786819 -19.75453758]
[45.04464722 -4.76517963]
[44.77935410 10.23755836]
[43.56306076 25.19326591]
[41.40066528 40.04171753]
[38.30086899 54.72312927]
[34.27616119 69.17837524]
[48.44229507 74.10997009]
[62.60843277 79.04156494]
[76.77456665 83.97315979]
[90.94070435 88.90475464]
[104.70932770 86.47233582]
[113.99089050 96.92911530]
[128.15702820 101.86070251]
[142.32316589 106.79229736]
[156.48930359 111.72389221]
[170.65542603 116.65548706]
[176.52424622 102.84511566]
[183.30238342 89.45758057]
[190.95957947 76.55267334]
[199.46162415 64.18803406]
[208.77056885 52.41887665]
[218.84480286 41.29777908]
[229.63935852 30.87439919]
[241.10601807 21.19529915]
[253.19357300 12.30370426]
[265.84802246 4.23932743]
[279.01284790 -2.96181273]
[292.62927246 -9.26755428]
[306.63647461 -14.64973450]
[320.97186279 -19.08431435]
[335.57147217 -22.55148697]
[350.37002563 -25.03576851]
[365.30148315 -26.52606392]
[380.29913330 -27.01571655]
[395.29598999 -26.50253868]
[410.22509766 -24.98882103]
[425.01974487 -22.48132896]
[439.61386108 -18.99125671]
[453.94229126 -14.53419495]
[467.94104004 -9.13004875]
[481.54754639 -2.80295467]
[494.70104980 4.41882849]
[507.34283447 12.50304604]
[519.41644287 21.41359138]
[530.86791992 31.11066818]
[541.64605713 41.55096817]
[551.70288086 52.68785858]
[560.99334717 64.47159576]
[569.47595215 76.84956360]
[577.11291504 89.76646423]
[583.87005615 103.16461945]
[589.71716309 116.98417664]
[594.62823486 131.16342163]
[598.58123779 145.63902283]
[601.55853271 160.34634399]
[603.54681396 175.21966553]
[604.53723145 190.19258118]
[604.52539062 205.19822693]
[603.51129150 220.16955566]
[601.49945068 235.03971863]
[598.49890137 249.74230957]
[594.52301025 264.21163940]
[589.58959961 278.38311768]
[583.72058105 292.19338989]
[576.94226074 305.58084106]
[569.28491211 318.48565674]
[560.78271484 330.85018921]
[551.47363281 342.61923218]
[541.39923096 353.74020386]
[530.60455322 364.16345215]
[519.13781738 373.84240723]
[507.05014038 382.73385620]
[494.39556885 390.79806519]
[481.23065186 397.99905396]
[467.61416626 404.30462646]
[453.60690308 409.68661499]
[439.27145386 414.12100220]
[424.67181396 417.58801270]
[409.87319946 420.07211304]
[394.94174194 421.56219482]
[379.94409180 422.05166626]
[364.94723511 421.53829956]
[350.01815796 420.02441406]
[335.22351074 417.51672363]
[320.62942505 414.02645874]
[306.30105591 409.56921387]
[292.30239868 404.16491699]
[278.69598389 397.83764648]
[265.54254150 390.61569214]
[252.90086365 382.53131104]
[240.82739258 373.62060547]
[229.37605286 363.92340088]
[218.59799194 353.48297119]
[208.54133606 342.34594727]
[199.25102234 330.56207275]
[190.76853943 318.18402100]
[183.13175964 305.26702881]
[176.37480164 291.86877441]
[170.52783203 278.04913330]
[165.61697388 263.86984253]
[161.66416931 249.39418030]
[158.68704224 234.68684387]
[156.69892883 219.81347656]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 123]
[6 122]
[7 121]
[8 120]
[9 119]
[11 117]
[12 116]
[13 115]
[14 114]
[15 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
