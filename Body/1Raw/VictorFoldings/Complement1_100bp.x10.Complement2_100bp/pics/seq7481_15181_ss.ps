%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[33.71104050 518.10528564]
[25.30596542 505.65979004]
[18.43189240 492.30749512]
[13.18532085 478.23590088]
[9.63990784 463.64251709]
[7.84542227 448.73226929]
[7.82705736 433.71438599]
[9.58507061 418.79977417]
[13.09478283 404.19778442]
[18.30692101 390.11340332]
[25.14831924 376.74435425]
[33.52293015 364.27828979]
[43.31319046 352.89025879]
[54.38165665 342.74014282]
[66.57295227 333.97036743]
[79.71591949 326.70410156]
[93.62606049 321.04333496]
[89.65396118 306.57879639]
[85.68186951 292.11428833]
[81.70977020 277.64974976]
[77.73767090 263.18524170]
[73.76557922 248.72070312]
[70.91991425 263.44830322]
[65.20635223 277.31753540]
[56.85246277 289.77593994]
[46.19097137 300.32739258]
[33.64653015 308.55154419]
[19.71877098 314.12088013]
[4.96243620 316.81356812]
[-10.03473663 316.52236938]
[-24.67541695 313.25885010]
[-38.37646866 307.15301514]
[-50.59218597 298.44805908]
[-60.83602524 287.49072266]
[-68.69997406 274.71737671]
[-73.87081146 260.63681030]
[-76.14259338 245.80982971]
[-75.42482758 230.82701111]
[-71.74610901 216.28511047]
[-65.25295258 202.76330566]
[-56.20398712 190.80018616]
[-44.95962143 180.87223816]
[-31.96772003 173.37487793]
[-17.74573898 168.60671997]
[-2.86013985 166.75769043]
[12.09619236 167.90142822]
[26.52755165 171.99237061]
[39.85914230 178.86759949]
[51.55997467 188.25325012]
[61.16400528 199.77551270]
[68.28871155 212.97546387]
[72.64950562 227.32324219]
[75.09523773 212.52397156]
[77.54096222 197.72470093]
[70.48577881 181.65637207]
[82.28781128 167.52154541]
[84.51293182 152.68750000]
[86.73804474 137.85345459]
[88.96316528 123.01940918]
[91.18828583 108.18536377]
[93.19229889 93.31983948]
[94.97476196 78.42611694]
[96.75722504 63.53240204]
[98.53969574 48.63868713]
[89.04529572 36.28983307]
[91.06513977 21.21087837]
[102.89639282 12.23552227]
[104.67885590 -2.65819502]
[106.46131897 -17.55191231]
[92.47363281 -23.18927002]
[80.43121338 -32.24827194]
[71.15133667 -44.10659409]
[65.26185608 -57.95219421]
[63.15870667 -72.83891296]
[64.97930908 -87.75113678]
[70.59358978 -101.67307281]
[79.61328888 -113.65795898]
[91.41874695 -122.89244080]
[105.20153809 -128.75175476]
[120.01977539 -130.84202576]
[121.80223846 -145.73574829]
[123.58470917 -160.62947083]
[125.36717224 -175.52317810]
[127.14963531 -190.41690063]
[128.93209839 -205.31062317]
[114.35944366 -208.94940186]
[100.35776520 -214.38597107]
[87.14790344 -221.53459167]
[74.93820190 -230.28253174]
[63.92121124 -240.49179077]
[54.27069473 -252.00138855]
[46.13885117 -264.62979126]
[39.65393448 -278.17782593]
[34.91822052 -292.43179321]
[32.00639343 -307.16696167]
[30.96438408 -322.15084839]
[31.80862236 -337.14721680]
[34.52579498 -351.91949463]
[39.07304764 -366.23471069]
[45.37866211 -379.86712646]
[53.34318924 -392.60168457]
[62.84102249 -404.23760986]
[73.72236633 -414.59133911]
[85.81559753 -423.49957275]
[98.92999268 -430.82186890]
[112.85872650 -436.44268799]
[127.38211823 -440.27340698]
[142.27110291 -442.25360107]
[157.29087830 -442.35205078]
[172.20454407 -440.56719971]
[186.77690125 -436.92718506]
[200.77812195 -431.48944092]
[213.98738098 -424.33972168]
[226.19635010 -415.59075928]
[237.21247864 -405.38055420]
[246.86203003 -393.87014771]
[254.99281311 -381.24105835]
[261.47659302 -367.69247437]
[266.21109009 -353.43811035]
[269.12167358 -338.70269775]
[270.16244507 -323.71871948]
[269.31692505 -308.72244263]
[266.59851074 -293.95037842]
[262.05004883 -279.63552856]
[255.74330139 -266.00366211]
[247.77769470 -253.26976013]
[238.27888489 -241.63464355]
[227.39666748 -231.28184509]
[215.30268860 -222.37460327]
[202.18768311 -215.05343628]
[188.25846863 -209.43377686]
[173.73475647 -205.60427856]
[158.84559631 -203.62533569]
[143.82582092 -203.52815247]
[142.04335022 -188.63442993]
[140.26089478 -173.74072266]
[138.47842407 -158.84700012]
[136.69595337 -143.95327759]
[134.91349792 -129.05957031]
[148.81997681 -123.53153992]
[160.83085632 -114.58526611]
[170.12376404 -102.82575226]
[176.06056213 -89.05088806]
[178.23101807 -74.19728088]
[176.48124695 -59.27658081]
[170.92454529 -45.30658340]
[161.93414307 -33.24179459]
[150.11804199 -23.90821838]
[136.27798462 -17.94680786]
[121.35504150 -15.76944637]
[119.57257080 -0.87572914]
[117.79010773 14.01798820]
[127.16924286 25.53178406]
[125.57373047 40.66152191]
[113.43341064 50.42115021]
[111.65094757 65.31487274]
[109.86847687 80.20858765]
[108.08601379 95.10230255]
[110.31033325 99.85270691]
[109.71475220 105.51120758]
[106.02232361 110.41048431]
[103.79721069 125.24452972]
[101.57209015 140.07856750]
[99.34697723 154.91261292]
[97.12185669 169.74665833]
[104.14675903 180.56393433]
[101.98806000 192.87344360]
[92.34023285 200.17042542]
[89.89450836 214.96969604]
[87.44878387 229.76896667]
[88.23010254 244.74861145]
[92.20220184 259.21313477]
[96.17429352 273.67764282]
[100.14639282 288.14218140]
[104.11848450 302.60668945]
[108.09058380 317.07122803]
[122.94089508 314.83410645]
[137.95155334 314.36911011]
[152.91186523 315.68280029]
[167.61177063 318.75668335]
[181.84494019 323.54766846]
[195.41154480 329.98843384]
[208.12113953 337.98861694]
[219.79528809 347.43585205]
[230.27011108 358.19757080]
[239.39855957 370.12265015]
[247.05249023 383.04370117]
[253.12445068 396.77935791]
[257.52917480 411.13674927]
[260.20486450 425.91433716]
[261.11395264 440.90466309]
[260.24365234 455.89727783]
[257.60620117 470.68173218]
[253.23861694 485.05047607]
[247.20222473 498.80178833]
[239.58174133 511.74258423]
[230.48417664 523.69128418]
[220.03721619 534.48004150]
[208.38755798 543.95745850]
[195.69869995 551.99047852]
[182.14880371 558.46630859]
[167.92808533 563.29406738]
[153.23616028 566.40600586]
[138.27931213 567.75836182]
[123.26749420 567.33221436]
[108.41144562 565.13354492]
[93.91973114 561.19317627]
[79.99578857 555.56640625]
[66.83508301 548.33233643]
[54.62237930 539.59240723]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 176]
[18 175]
[19 174]
[20 173]
[21 172]
[22 171]
[52 170]
[53 169]
[54 168]
[56 165]
[57 164]
[58 163]
[59 162]
[60 161]
[61 158]
[62 157]
[63 156]
[64 155]
[67 152]
[68 151]
[69 150]
[80 139]
[81 138]
[82 137]
[83 136]
[84 135]
[85 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
