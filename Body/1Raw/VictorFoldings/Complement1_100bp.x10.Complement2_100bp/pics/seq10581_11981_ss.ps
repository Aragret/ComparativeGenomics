%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCGxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[152.99389648 843.03649902]
[138.49415588 839.18261719]
[124.20634460 834.60504150]
[110.16658783 829.31530762]
[96.41033936 823.32690430]
[82.97235107 816.65490723]
[69.88656616 809.31610107]
[57.18604660 801.32910156]
[44.90286636 792.71405029]
[33.06805801 783.49273682]
[21.71151733 773.68841553]
[10.86193275 763.32592773]
[0.54671031 752.43133545]
[-9.20809174 741.03222656]
[-18.37783241 729.15740967]
[-26.93934822 716.83685303]
[-34.87101364 704.10174561]
[-42.15278625 690.98413086]
[-48.76628113 677.51721191]
[-54.69478226 663.73504639]
[-59.92332077 649.67242432]
[-64.43868256 635.36480713]
[-68.22946930 620.84844971]
[-71.28610229 606.15991211]
[-73.60086060 591.33636475]
[-75.16788483 576.41528320]
[-75.98323822 561.43426514]
[-76.04484558 546.43121338]
[-75.35255432 531.44396973]
[-73.90811157 516.51049805]
[-71.71517181 501.66845703]
[-68.77927399 486.95532227]
[-65.10783386 472.40829468]
[-60.71012115 458.06411743]
[-55.59724808 443.95901489]
[-49.78212738 430.12863159]
[-43.27945709 416.60787964]
[-36.10565186 403.43090820]
[-28.27884483 390.63104248]
[-19.81879997 378.24060059]
[-10.74688911 366.29089355]
[-1.08603001 354.81207275]
[9.13937283 343.83312988]
[19.90349007 333.38186646]
[31.17913055 323.48461914]
[42.93780899 314.16641235]
[55.14982605 305.45077515]
[67.78432465 297.35974121]
[80.80940247 289.91375732]
[94.19214630 283.13159180]
[107.89875031 277.03039551]
[121.89459229 271.62561035]
[136.14431763 266.93084717]
[132.17222595 252.46632385]
[128.20011902 238.00180054]
[124.22802734 223.53727722]
[112.24777985 218.79353333]
[105.08020782 207.85241699]
[105.52951813 194.58560181]
[113.65560150 183.84402466]
[109.89929962 169.32197571]
[106.14299774 154.79991150]
[102.38670349 140.27784729]
[98.63040161 125.75579071]
[94.87409973 111.23373413]
[91.51883698 125.85366058]
[84.05536652 138.86506653]
[73.12934875 149.14231873]
[59.68599701 155.79635620]
[44.88829041 158.25152588]
[30.01637840 156.29544067]
[16.35683632 150.09730530]
[5.09134579 140.19332886]
[-2.80551338 127.44030762]
[-6.65058374 112.94149780]
[-6.11122894 97.95119476]
[-1.23410833 83.76621246]
[7.55885839 71.61369324]
[19.50699234 62.54495239]
[33.57666016 57.34452057]
[48.55069351 56.46229172]
[63.13368607 59.97458649]
[76.06407166 67.57756042]
[86.22323608 78.61347198]
[92.73126984 92.12425232]
[93.17787170 77.13090515]
[93.62448120 62.13755035]
[94.07108307 47.14420319]
[86.74810028 33.11977768]
[94.86090851 20.62851715]
[95.30751038 5.63516808]
[80.64015961 2.26544809]
[66.91216278 -3.90125990]
[54.65118408 -12.62792397]
[44.32850647 -23.57911491]
[36.34090805 -36.33389664]
[30.99540710 -50.40201187]
[28.49747086 -65.24271393]
[28.94311333 -80.28557587]
[32.31520844 -94.95238495]
[38.48413849 -108.67938232]
[47.21278763 -120.93894958]
[58.16564560 -131.25985718]
[70.92172241 -139.24539185]
[84.99069977 -144.58860779]
[99.83181000 -147.08415222]
[114.87460327 -146.63606262]
[129.54086304 -143.26159668]
[143.26686096 -137.09045410]
[155.52500916 -128.35981750]
[165.84414673 -117.40528107]
[173.82762146 -104.64791870]
[179.16856384 -90.57807159]
[181.66169739 -75.73655701]
[181.21118164 -60.69384384]
[177.83433533 -46.02812958]
[171.66096497 -32.30312729]
[162.92834473 -20.04638863]
[151.97215271 -9.72903061]
[139.21348572 -1.74762499]
[125.14277649 3.59104466]
[110.30086517 6.08177376]
[109.85425568 21.07512474]
[117.20919037 34.02712250]
[109.06443787 47.59080887]
[108.61782837 62.58415604]
[108.17122650 77.57750702]
[107.72461700 92.57085419]
[109.39615631 107.47743225]
[113.15245819 121.99948883]
[116.90876007 136.52154541]
[120.66506195 151.04360962]
[124.42136383 165.56567383]
[128.17765808 180.08772278]
[143.41090393 188.68817139]
[147.62788391 205.31742859]
[138.69255066 219.56517029]
[142.66464233 234.02969360]
[146.63674927 248.49421692]
[150.60884094 262.95874023]
[165.25776672 259.71765137]
[180.05102539 257.21670532]
[194.95126343 255.46217346]
[209.92083740 254.45851135]
[224.92193604 254.20826721]
[239.91665649 254.71205139]
[254.86712646 255.96859741]
[269.73556519 257.97473145]
[284.48446655 260.72540283]
[299.07650757 264.21365356]
[313.47485352 268.43063354]
[327.64312744 273.36575317]
[341.54556274 279.00650024]
[355.14700317 285.33865356]
[368.41311646 292.34619141]
[381.31036377 300.01144409]
[393.80621338 308.31503296]
[405.86907959 317.23596191]
[417.46844482 326.75173950]
[428.57507324 336.83825684]
[439.16088867 347.47012329]
[449.19912720 358.62042236]
[458.66445923 370.26101685]
[467.53295898 382.36245728]
[475.78219604 394.89422607]
[483.39138794 407.82464600]
[490.34130859 421.12106323]
[496.61434937 434.74984741]
[502.19470215 448.67663574]
[507.06826782 462.86621094]
[511.22274780 477.28271484]
[514.64758301 491.88977051]
[517.33422852 506.65042114]
[519.27581787 521.52746582]
[520.46746826 536.48321533]
[520.90612793 551.47998047]
[520.59075928 566.47985840]
[519.52215576 581.44494629]
[517.70300293 596.33746338]
[515.13781738 611.11968994]
[511.83319092 625.75439453]
[507.79742432 640.20458984]
[503.04071045 654.43377686]
[497.57504272 668.40594482]
[491.41427612 682.08587646]
[484.57394409 695.43902588]
[477.07135010 708.43157959]
[468.92541504 721.03070068]
[460.15673828 733.20471191]
[450.78744507 744.92272949]
[440.84124756 756.15521240]
[430.34323120 766.87371826]
[419.31991577 777.05126953]
[407.79916382 786.66210938]
[395.81008911 795.68194580]
[383.38296509 804.08795166]
[370.54916382 811.85900879]
[357.34109497 818.97540283]
[343.79220581 825.41918945]
[329.93661499 831.17407227]
[315.80941772 836.22552490]
[301.44622803 840.56079102]
[286.88336182 844.16888428]
[272.15759277 847.04077148]
[257.30615234 849.16906738]
[242.36651611 850.54852295]
[227.37643433 851.17559814]
[212.37379456 851.04870605]
[197.39646912 850.16821289]
[182.48231506 848.53625488]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 140]
[54 139]
[55 138]
[56 137]
[60 134]
[61 133]
[62 132]
[63 131]
[64 130]
[65 129]
[85 128]
[86 127]
[87 126]
[88 125]
[90 123]
[91 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
