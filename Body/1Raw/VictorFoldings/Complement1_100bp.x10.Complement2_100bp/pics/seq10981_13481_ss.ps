%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAUxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[161.44966125 617.62017822]
[149.47061157 608.58551025]
[138.02687073 598.88165283]
[127.15577698 588.54034424]
[116.89279175 577.59527588]
[107.27138519 566.08215332]
[98.32294464 554.03857422]
[90.07665253 541.50372314]
[82.55941010 528.51855469]
[75.79573822 515.12542725]
[69.80770111 501.36798096]
[64.61482239 487.29113770]
[60.23404694 472.94079590]
[56.67966080 458.36376953]
[53.96326065 443.60760498]
[52.09370422 428.72042847]
[51.07708740 413.75079346]
[50.91673279 398.74752808]
[51.61315918 383.75958252]
[53.16409683 368.83584595]
[55.56448364 354.02499390]
[58.80649185 339.37530518]
[62.87954712 324.93463135]
[67.77036285 310.75000000]
[73.46298981 296.86773682]
[79.93885803 283.33309937]
[87.17684174 270.19021606]
[95.15333557 257.48199463]
[103.84231567 245.24986267]
[113.21544647 233.53372192]
[123.24214935 222.37179565]
[133.88972473 211.80049133]
[145.12344360 201.85427856]
[156.90666199 192.56561279]
[148.30809021 180.27478027]
[139.70953369 167.98394775]
[131.01969910 155.75746155]
[122.23909760 143.59599304]
[113.45849609 131.43453979]
[99.73516846 125.64494324]
[97.93003082 109.92705536]
[91.03335571 105.75471497]
[89.11082458 97.51853180]
[80.51226044 85.22769165]
[71.91369629 72.93685150]
[63.31513214 60.64601517]
[49.06449509 53.77361679]
[48.10860443 38.90971375]
[33.85796738 32.03731537]
[32.90207672 17.17341423]
[24.30351257 4.88257647]
[15.70494938 -7.40826178]
[7.10638523 -19.69910049]
[-5.96699905 -12.32060814]
[-19.69148636 -6.23834181]
[-33.93893051 -1.50909078]
[-48.57630920 1.82298851]
[-63.46694565 3.72678447]
[-78.47180939 4.18452120]
[-93.45080566 3.19192529]
[-108.26406860 0.75826418]
[-122.77329254 -3.09373903]
[-136.84300232 -8.32811832]
[-150.34184265 -14.89599991]
[-163.14375305 -22.73606110]
[-175.12921143 -31.77509880]
[-186.18630981 -41.92871475]
[-196.21182251 -53.10210800]
[-205.11212158 -65.19094849]
[-212.80412292 -78.08237457]
[-219.21598816 -91.65599823]
[-224.28787231 -105.78510284]
[-227.97239685 -120.33776093]
[-230.23516846 -135.17808533]
[-231.05506897 -150.16752625]
[-230.42442322 -165.16612244]
[-228.34913635 -180.03382874]
[-224.84858704 -194.63183594]
[-219.95544434 -208.82382202]
[-213.71540833 -222.47729492]
[-206.18673706 -235.46478271]
[-197.43972778 -247.66499329]
[-187.55603027 -258.96405029]
[-176.62796021 -269.25640869]
[-164.75755310 -278.44598389]
[-152.05560303 -286.44702148]
[-138.64074707 -293.18475342]
[-124.63822174 -298.59628296]
[-110.17877197 -302.63113403]
[-95.39740753 -305.25155640]
[-80.43213654 -306.43313599]
[-65.42268372 -306.16482544]
[-50.50920486 -304.44912720]
[-35.83094025 -301.30203247]
[-21.52493858 -296.75299072]
[-7.72477627 -290.84445190]
[5.44069481 -283.63153076]
[17.84855080 -275.18164062]
[29.38293839 -265.57366943]
[39.93616104 -254.89729309]
[49.40968704 -243.25221252]
[57.71505737 -230.74716187]
[64.77473450 -217.49890137]
[70.52278900 -203.63111877]
[74.90556335 -189.27330017]
[77.88212585 -174.55950928]
[79.42469788 -159.62713623]
[79.51885986 -144.61558533]
[78.16374207 -129.66502380]
[75.37200165 -114.91505432]
[71.16969299 -100.50337982]
[65.59606934 -86.56458282]
[58.70315170 -73.22879791]
[50.55531311 -60.62053299]
[41.22862244 -48.85752487]
[30.81016922 -38.04959488]
[19.39722252 -28.29766273]
[27.99578667 -16.00682640]
[36.59435272 -3.71598768]
[45.19291687 8.57485008]
[58.82852554 14.56812763]
[60.39944458 30.31115150]
[74.03505707 36.30442810]
[75.60597229 52.04745102]
[84.20453644 64.33828735]
[92.80310059 76.62912750]
[101.40166473 88.91996765]
[110.09149170 101.14645386]
[124.44286346 107.80592346]
[125.61994934 122.65393829]
[134.40055847 134.81539917]
[143.18115234 146.97685242]
[150.74183655 152.10266113]
[152.00036621 159.38537598]
[160.59892273 171.67620850]
[169.19749451 183.96705627]
[181.96260071 176.08192444]
[195.15705872 168.93840027]
[208.73780823 162.55978394]
[222.66055298 156.96687317]
[236.87988281 152.17793274]
[251.34942627 148.20855713]
[266.02197266 145.07171631]
[280.84967041 142.77763367]
[295.78414917 141.33377075]
[310.77670288 140.74487305]
[325.77841187 141.01284790]
[340.74038696 142.13681030]
[355.61376953 144.11309814]
[370.35006714 146.93527222]
[384.90121460 150.59413147]
[399.21978760 155.07772827]
[413.25900269 160.37144470]
[426.97311401 166.45800781]
[440.31741333 173.31758118]
[453.24832153 180.92776489]
[465.72369385 189.26376343]
[477.70281982 198.29835510]
[489.14660645 208.00209045]
[500.01779175 218.34332275]
[510.28085327 229.28831482]
[519.90234375 240.80136108]
[528.85089111 252.84490967]
[537.09729004 265.37969971]
[544.61462402 278.36480713]
[551.37841797 291.75787354]
[557.36657715 305.51525879]
[562.55957031 319.59207153]
[566.94042969 333.94235229]
[570.49493408 348.51937866]
[573.21142578 363.27551270]
[575.08111572 378.16268921]
[576.09783936 393.13229370]
[576.25830078 408.13555908]
[575.56201172 423.12350464]
[574.01116943 438.04727173]
[571.61090088 452.85815430]
[568.36901855 467.50784302]
[564.29608154 481.94854736]
[559.40539551 496.13320923]
[553.71289062 510.01553345]
[547.23712158 523.55023193]
[539.99920654 536.69317627]
[532.02282715 549.40142822]
[523.33392334 561.63366699]
[513.96087646 573.34985352]
[503.93429565 584.51184082]
[493.28680420 595.08325195]
[482.05316162 605.02954102]
[470.27001953 614.31829834]
[457.97579956 622.91925049]
[445.21063232 630.80426025]
[432.01611328 637.94769287]
[418.43533325 644.32617188]
[404.51254272 649.91900635]
[390.29318237 654.70782471]
[375.82360840 658.67706299]
[361.15103149 661.81378174]
[346.32330322 664.10778809]
[331.38882446 665.55151367]
[316.39627075 666.14031982]
[301.39456177 665.87219238]
[286.43258667 664.74810791]
[271.55923462 662.77172852]
[256.82293701 659.94940186]
[242.27180481 656.29046631]
[227.95329285 651.80676270]
[213.91410828 646.51293945]
[200.20004272 640.42626953]
[186.85580444 633.56658936]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 136]
[35 135]
[36 134]
[37 132]
[38 131]
[39 130]
[41 128]
[43 127]
[44 126]
[45 125]
[46 124]
[48 122]
[50 120]
[51 119]
[52 118]
[53 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
