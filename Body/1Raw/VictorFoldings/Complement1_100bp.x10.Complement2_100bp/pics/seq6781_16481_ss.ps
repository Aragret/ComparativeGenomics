%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[265.65191650 270.82254028]
[270.61206055 256.65698242]
[276.74017334 242.95614624]
[283.99325562 229.81616211]
[271.51345825 221.49421692]
[259.03366089 213.17227173]
[246.55387878 204.85032654]
[234.07408142 196.52838135]
[221.59429932 188.20643616]
[209.11450195 179.88449097]
[196.63470459 171.56254578]
[179.08670044 171.37640381]
[171.06459045 154.80151367]
[158.46228027 146.66629028]
[145.85995483 138.53108215]
[133.25764465 130.39585876]
[120.65533447 122.26065063]
[108.05302429 114.12543488]
[91.28350830 113.72595215]
[83.79087830 98.71807098]
[71.06884003 90.77138519]
[58.34680176 82.82469940]
[45.62476730 74.87801361]
[32.90272903 66.93132782]
[20.18069458 58.98464584]
[11.24440002 57.09243393]
[7.32963800 50.82374954]
[10.57410526 65.46865845]
[3.75773025 78.83043671]
[-10.00313091 84.80024719]
[-24.41719818 80.64878845]
[-32.89455414 68.27403259]
[-31.55946732 53.33356857]
[-21.02231789 42.65796661]
[-6.09875298 41.12841415]
[-17.78633499 31.72626305]
[-29.47391510 22.32411194]
[-41.16149521 12.92196083]
[-52.84907913 3.51980948]
[-63.21456146 14.37478733]
[-74.46327972 24.31159782]
[-86.51418304 33.25864410]
[-99.28043365 41.15146255]
[-112.67005920 47.93318558]
[-126.58658600 53.55494690]
[-140.92973328 57.97624207]
[-155.59617615 61.16521454]
[-170.48020935 63.09888458]
[-185.47462463 63.76332855]
[-200.47137451 63.15374756]
[-215.36238098 61.27454376]
[-230.04039001 58.13925171]
[-244.39962769 53.77046585]
[-258.33660889 48.19965744]
[-271.75097656 41.46696854]
[-284.54602051 33.62091064]
[-296.62957764 24.71801376]
[-307.91455078 14.82242489]
[-318.31970215 4.00544310]
[-327.76998901 -7.65499401]
[-336.19735718 -20.07487106]
[-343.54107666 -33.16469955]
[-349.74822998 -46.83016968]
[-354.77410889 -60.97281647]
[-358.58248901 -75.49073792]
[-361.14593506 -90.27933502]
[-362.44595337 -105.23205566]
[-362.47323608 -120.24114990]
[-361.22750854 -135.19850159]
[-358.71780396 -149.99630737]
[-354.96221924 -164.52796936]
[-349.98773193 -178.68878174]
[-343.83026123 -192.37670898]
[-336.53414917 -205.49313354]
[-328.15194702 -217.94354248]
[-318.74407959 -229.63822937]
[-308.37832642 -240.49295044]
[-297.12936401 -250.42945862]
[-285.07821655 -259.37619019]
[-272.31176758 -267.26867676]
[-258.92196655 -274.05004883]
[-245.00529480 -279.67147827]
[-230.66201782 -284.09237671]
[-215.99551392 -287.28097534]
[-201.11141968 -289.21426392]
[-186.11698914 -289.87832642]
[-171.12025452 -289.26837158]
[-156.22929382 -287.38876343]
[-141.55136108 -284.25311279]
[-127.19225311 -279.88394165]
[-113.25539398 -274.31277466]
[-99.84121704 -267.57974243]
[-87.04637909 -259.73333740]
[-74.96305084 -250.83013916]
[-63.67831039 -240.93426514]
[-53.27346039 -230.11700439]
[-43.82346725 -218.45632935]
[-35.39642334 -206.03623962]
[-28.05304146 -192.94621277]
[-21.84623718 -179.28057861]
[-16.82072830 -165.13780212]
[-13.01272678 -150.61978149]
[-10.44966698 -135.83113098]
[-9.15001774 -120.87837219]
[-9.12314224 -105.86927032]
[-10.36923504 -90.91196442]
[-12.87931728 -76.11421967]
[-16.63530350 -61.58264923]
[-21.61013222 -47.42196655]
[-27.76795769 -33.73419952]
[-35.06441498 -20.61796570]
[-43.44692612 -8.16777134]
[-31.75934601 1.23437929]
[-20.07176399 10.63653088]
[-8.38418293 20.03868103]
[3.30339813 29.44083214]
[15.46485424 38.22143555]
[28.12737846 46.26260757]
[40.84941483 54.20929337]
[53.57145309 62.15597916]
[66.29348755 70.10266113]
[79.01552582 78.04934692]
[91.73755646 85.99603271]
[103.22250366 84.06278992]
[113.05411530 90.30623627]
[116.18824005 101.52311707]
[128.79055786 109.65833282]
[141.39286804 117.79354858]
[153.99517822 125.92876434]
[166.59748840 134.06398010]
[179.19979858 142.19920349]
[191.94999695 140.25100708]
[202.27900696 147.28628540]
[204.95664978 159.08276367]
[217.43644714 167.40470886]
[229.91622925 175.72663879]
[242.39602661 184.04858398]
[254.87582397 192.37052917]
[267.35562134 200.69247437]
[279.83541870 209.01441956]
[292.31521606 217.33636475]
[301.65750122 205.58952332]
[311.94998169 194.66563416]
[323.12045288 184.64131165]
[335.09054565 175.58686829]
[347.77636719 167.56584167]
[361.08886719 160.63446045]
[374.93466187 154.84135437]
[389.21667480 150.22717285]
[403.83471680 146.82426453]
[418.68621826 144.65650940]
[433.66705322 143.73910522]
[448.67208862 144.07850647]
[463.59609985 145.67230225]
[478.33441162 148.50932312]
[492.78363037 152.56968689]
[506.84240723 157.82489014]
[520.41217041 164.23808289]
[533.39764404 171.76428223]
[545.70782471 180.35069275]
[557.25628662 189.93707275]
[567.96209717 200.45620728]
[577.75012207 211.83428955]
[586.55175781 223.99151611]
[594.30523682 236.84260559]
[600.95611572 250.29742432]
[606.45776367 264.26159668]
[610.77166748 278.63714600]
[613.86749268 293.32327271]
[615.72357178 308.21694946]
[616.32684326 323.21371460]
[615.67309570 338.20834351]
[613.76696777 353.09570312]
[610.62170410 367.77133179]
[606.25946045 382.13229370]
[600.71081543 396.07785034]
[594.01464844 409.51022339]
[586.21801758 422.33514404]
[577.37548828 434.46267700]
[567.54925537 445.80773926]
[556.80804443 456.29080200]
[545.22735596 465.83825684]
[532.88836670 474.38317871]
[519.87762451 481.86563110]
[506.28640747 488.23312378]
[492.21002197 493.44097900]
[477.74722290 497.45269775]
[462.99942017 500.24011230]
[448.07012939 501.78366089]
[433.06402588 502.07254028]
[418.08639526 501.10473633]
[403.24224854 498.88699341]
[388.63577271 495.43493652]
[374.36935425 490.77270508]
[360.54312134 484.93304443]
[347.25402832 477.95687866]
[334.59530640 469.89318848]
[322.65573120 460.79852295]
[311.51904297 450.73666382]
[301.26339722 439.77819824]
[291.96069336 427.99996948]
[283.67620850 415.48464966]
[276.46804810 402.31994629]
[270.38674927 388.59826660]
[265.47500610 374.41583252]
[261.76724243 359.87216187]
[259.28948975 345.06921387]
[258.05911255 330.11083984]
[258.08474731 315.10195923]
[259.36621094 300.14788818]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 141]
[5 140]
[6 139]
[7 138]
[8 137]
[9 136]
[10 135]
[11 134]
[13 131]
[14 130]
[15 129]
[16 128]
[17 127]
[18 126]
[20 123]
[21 122]
[22 121]
[23 120]
[24 119]
[25 118]
[27 117]
[35 116]
[36 115]
[37 114]
[38 113]
[39 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
