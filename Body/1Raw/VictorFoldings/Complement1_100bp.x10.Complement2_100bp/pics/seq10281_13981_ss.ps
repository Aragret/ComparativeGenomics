%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[54.25937271 951.93225098]
[39.25742340 951.77551270]
[24.27930641 950.91583252]
[9.35794926 949.35504150]
[-5.47384930 947.09655762]
[-20.18348503 944.14532471]
[-34.73862457 940.50787354]
[-49.10726929 936.19219971]
[-63.25783539 931.20776367]
[-77.15921783 925.56555176]
[-90.78085327 919.27795410]
[-104.09280396 912.35876465]
[-117.06581116 904.82324219]
[-129.67134094 896.68792725]
[-141.88169861 887.97070312]
[-153.67004395 878.69067383]
[-165.01045227 868.86834717]
[-175.87800598 858.52526855]
[-186.24880981 847.68420410]
[-196.10006714 836.36889648]
[-205.41012573 824.60430908]
[-214.15850830 812.41619873]
[-222.32600403 799.83148193]
[-229.89463806 786.87780762]
[-236.84777832 773.58355713]
[-243.17015076 759.97802734]
[-248.84785461 746.09106445]
[-253.86840820 731.95330811]
[-258.22076416 717.59570312]
[-261.89535522 703.04992676]
[-264.88412476 688.34783936]
[-267.18048096 673.52191162]
[-268.77941895 658.60455322]
[-269.67733765 643.62866211]
[-269.87234497 628.62719727]
[-269.36398315 613.63305664]
[-268.15338135 598.67919922]
[-266.24316406 583.79852295]
[-263.63754272 569.02374268]
[-260.34228516 554.38732910]
[-256.36459351 539.92150879]
[-251.71324158 525.65795898]
[-246.39842224 511.62817383]
[-240.43183899 497.86288452]
[-233.82661438 484.39239502]
[-226.59724426 471.24633789]
[-218.75962830 458.45355225]
[-210.33100891 446.04220581]
[-201.32989502 434.03958130]
[-191.77609253 422.47204590]
[-181.69059753 411.36505127]
[-171.09556580 400.74295044]
[-160.01429749 390.62918091]
[-148.47116089 381.04592896]
[-136.49151611 372.01425171]
[-124.10170746 363.55401611]
[-111.32895660 355.68380737]
[-98.20136261 348.42095947]
[-84.74775696 341.78140259]
[-70.99773407 335.77972412]
[-56.98151016 330.42916870]
[-42.72990036 325.74145508]
[-28.27422905 321.72689819]
[-13.64627647 318.39434814]
[1.12180519 315.75106812]
[15.99755096 313.80294800]
[30.94825935 312.55419922]
[45.94106674 312.00759888]
[60.94301605 312.16436768]
[75.92112732 313.02413940]
[77.48165131 298.10552979]
[79.04217529 283.18692017]
[80.60269928 268.26831055]
[81.82967377 253.31857300]
[82.72248840 238.34516907]
[83.61530304 223.37176514]
[84.50811768 208.39836121]
[81.76831818 201.53430176]
[85.52733612 193.20918274]
[86.64298248 178.25073242]
[87.75862885 163.29228210]
[80.98937225 150.02478027]
[89.73165131 136.83830261]
[90.84729767 121.87985992]
[91.96295166 106.92140198]
[92.52115631 91.93179321]
[92.52115631 76.93179321]
[92.52115631 61.93179321]
[84.78385925 48.13162231]
[92.52115631 35.40435028]
[92.52115631 20.40434837]
[92.52115631 5.40434885]
[89.39175415 -3.17729545]
[92.63449097 -9.81856346]
[92.85781860 -24.81690025]
[85.32683563 -38.73073959]
[93.25276947 -51.34140396]
[93.47609711 -66.33974457]
[85.94512177 -80.25357819]
[93.87105560 -92.86424255]
[80.39573669 -100.12196350]
[71.84638977 -112.81713104]
[70.18757629 -128.03248596]
[75.80049133 -142.27163696]
[87.39531708 -152.26255798]
[102.30766296 -155.70939636]
[117.11076355 -151.82009888]
[128.40298462 -141.48838806]
[133.58946228 -127.08841705]
[131.47836304 -111.92919922]
[122.55481720 -99.49420929]
[108.86939240 -92.64091492]
[116.41634369 -79.79985809]
[108.47443390 -66.11641693]
[108.25110626 -51.11807632]
[115.79806519 -38.27701950]
[107.85615540 -24.59357262]
[107.63282776 -9.59523582]
[107.52115631 5.40434885]
[107.52115631 20.40434837]
[107.52115631 35.40435028]
[115.25846100 48.13162231]
[107.52115631 61.93179321]
[107.52115631 76.93179321]
[107.52115631 91.93179321]
[119.81182861 83.33298492]
[134.24026489 87.43424225]
[140.17034912 101.21226501]
[133.23066711 114.51041412]
[118.53687286 117.52578735]
[106.92140198 108.03704834]
[105.80575562 122.99550629]
[104.69010162 137.95396423]
[111.37956238 152.29138184]
[102.71708679 164.40792847]
[101.60143280 179.36637878]
[100.48578644 194.32482910]
[99.48152924 209.29118347]
[98.58871460 224.26458740]
[97.69589233 239.23799133]
[96.80307770 254.21139526]
[99.14089966 258.87847900]
[99.42620850 263.51226807]
[98.01539612 267.33648682]
[95.52130127 269.82882690]
[93.96077728 284.74743652]
[92.40025330 299.66604614]
[90.83973694 314.58465576]
[105.67153931 316.84307861]
[120.38118744 319.79421997]
[134.93634033 323.43161011]
[149.30500793 327.74722290]
[163.45559692 332.73159790]
[177.35700989 338.37374878]
[190.97866821 344.66131592]
[204.29064941 351.58041382]
[217.26368713 359.11590576]
[229.86926270 367.25115967]
[242.07965088 375.96835327]
[253.86804199 385.24829102]
[265.20849609 395.07055664]
[276.07608032 405.41360474]
[286.44692993 416.25463867]
[296.29824829 427.56988525]
[305.60833740 439.33447266]
[314.35678101 451.52249146]
[322.52432251 464.10717773]
[330.09301758 477.06085205]
[337.04623413 490.35507202]
[343.36865234 503.96057129]
[349.04641724 517.84747314]
[354.06701660 531.98522949]
[358.41946411 546.34277344]
[362.09411621 560.88861084]
[365.08294678 575.59063721]
[367.37936401 590.41662598]
[368.97833252 605.33392334]
[369.87634277 620.30981445]
[370.07141113 635.31127930]
[369.56311035 650.30541992]
[368.35256958 665.25927734]
[366.44241333 680.13995361]
[363.83688354 694.91473389]
[360.54168701 709.55114746]
[356.56405640 724.01702881]
[351.91275024 738.28057861]
[346.59799194 752.31042480]
[340.63146973 766.07574463]
[334.02630615 779.54620361]
[326.79699707 792.69232178]
[318.95944214 805.48510742]
[310.53085327 817.89648438]
[301.52981567 829.89916992]
[291.97604370 841.46673584]
[281.89059448 852.57379150]
[271.29562378 863.19592285]
[260.21441650 873.30975342]
[248.67131042 882.89306641]
[236.69169617 891.92480469]
[224.30192566 900.38507080]
[211.52920532 908.25537109]
[198.40164185 915.51824951]
[184.94807434 922.15789795]
[171.19807434 928.15960693]
[157.18186951 933.51025391]
[142.93028259 938.19799805]
[128.47462463 942.21258545]
[113.84668732 945.54522705]
[99.07862091 948.18853760]
[84.20288086 950.13677979]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 148]
[71 147]
[72 146]
[73 145]
[74 141]
[75 140]
[76 139]
[77 138]
[79 137]
[80 136]
[81 135]
[83 133]
[84 132]
[85 131]
[86 125]
[87 124]
[88 123]
[90 121]
[91 120]
[92 119]
[94 118]
[95 117]
[97 115]
[98 114]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
