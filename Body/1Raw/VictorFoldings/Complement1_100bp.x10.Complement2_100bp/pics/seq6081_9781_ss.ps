%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[7.01734352 512.35485840]
[3.42595649 526.93041992]
[-1.53467858 541.09857178]
[-7.81963587 554.73107910]
[-15.37199688 567.70434570]
[-24.12336540 579.90100098]
[-33.99448395 591.21057129]
[-44.89595795 601.53057861]
[-56.72905731 610.76757812]
[-69.38661957 618.83795166]
[-82.75401306 625.66857910]
[-96.71017456 631.19763184]
[-111.12871552 635.37500000]
[-125.87905884 638.16284180]
[-140.82762146 639.53594971]
[-155.83900452 639.48193359]
[-170.77728271 638.00115967]
[-185.50715637 635.10711670]
[-199.89523315 630.82598877]
[-213.81120300 625.19653320]
[-227.12904358 618.26977539]
[-239.72814941 610.10845947]
[-251.49440002 600.78643799]
[-262.32125854 590.38818359]
[-272.11065674 579.00781250]
[-280.77392578 566.74847412]
[-288.23263550 553.72106934]
[-294.41925049 540.04370117]
[-299.27767944 525.84014893]
[-302.76397705 511.23913574]
[-304.84655762 496.37280273]
[-305.50656128 481.37582397]
[-304.73800659 466.38403320]
[-302.54785156 451.53317261]
[-298.95593262 436.95773315]
[-293.99478149 422.78976440]
[-287.70932007 409.15753174]
[-280.15649414 396.18450928]
[-271.40469360 383.98815918]
[-261.53314209 372.67898560]
[-250.63130188 362.35937500]
[-238.79786682 353.12277222]
[-226.14001465 345.05288696]
[-212.77236938 338.22271729]
[-198.81600952 332.69421387]
[-184.39730835 328.51736450]
[-169.64686584 325.73004150]
[-154.69825745 324.35745239]
[-139.68687439 324.41207886]
[-124.74864960 325.89337158]
[-110.01888275 328.78796387]
[-95.63095856 333.06961060]
[-81.71518707 338.69955444]
[-68.39759827 345.62677002]
[-55.79879761 353.78857422]
[-46.48391724 342.03131104]
[-37.16903305 330.27407837]
[-27.85415077 318.51681519]
[-18.53926659 306.75958252]
[-9.22438431 295.00231934]
[-0.99557662 282.46090698]
[-1.81275213 267.58874512]
[11.52025795 259.07162476]
[18.59736443 245.84609985]
[25.67446899 232.62055969]
[19.32365799 215.45132446]
[27.68283844 198.80690002]
[45.86005783 193.46807861]
[52.54025269 180.03770447]
[59.22044754 166.60733032]
[65.90064240 153.17695618]
[59.87274170 137.47653198]
[67.20964050 121.96896362]
[83.81272888 116.45925903]
[90.29222107 102.93090820]
[90.65715027 94.87862396]
[96.97022247 89.25048065]
[103.65041351 75.82009888]
[110.33060455 62.38972473]
[117.01080322 48.95935059]
[123.69099426 35.52897263]
[130.37118530 22.09859848]
[124.50192261 5.61918688]
[132.21514893 -9.70468235]
[148.30165100 -14.61012936]
[154.78114319 -28.13847542]
[161.26063538 -41.66682053]
[167.33447266 -55.38208771]
[172.99725342 -69.27211761]
[171.04232788 -84.97207642]
[183.01187134 -93.83657837]
[181.05694580 -109.53653717]
[193.02648926 -118.40103912]
[198.68928528 -132.29106140]
[203.93600464 -146.34353638]
[208.76199341 -160.54598999]
[213.58799744 -174.74844360]
[218.41398621 -188.95089722]
[223.23999023 -203.15335083]
[228.06597900 -217.35581970]
[214.95211792 -224.72746277]
[203.41622925 -234.38343811]
[193.85122681 -245.99487305]
[186.58288574 -259.16629028]
[181.85877991 -273.44903564]
[179.83978271 -288.35668945]
[180.59469604 -303.38150024]
[184.09777832 -318.01171875]
[190.22972107 -331.74902344]
[198.78167725 -344.12557983]
[209.46237183 -354.71978760]
[221.90803528 -363.17083740]
[235.69474792 -369.19088745]
[250.35295105 -372.57492065]
[265.38339233 -373.20764160]
[280.27413940 -371.06753540]
[294.51803589 -366.22744751]
[307.62991333 -358.85226440]
[319.16320801 -349.19317627]
[328.72506714 -337.57916260]
[335.98986816 -324.40579224]
[340.71011353 -310.12176514]
[342.72509766 -295.21356201]
[341.96615601 -280.18896484]
[338.45910645 -265.55969238]
[332.32345581 -251.82403564]
[323.76818848 -239.44979858]
[313.08462524 -228.85847473]
[300.63668823 -220.41076660]
[286.84835815 -214.39442444]
[272.18923950 -211.01435852]
[257.15863037 -210.38568115]
[242.26844788 -212.52981567]
[237.44244385 -198.32736206]
[232.61643982 -184.12490845]
[227.79045105 -169.92245483]
[222.96444702 -155.71998596]
[218.13845825 -141.51753235]
[219.25511169 -138.94630432]
[219.42053223 -135.77783203]
[218.40217590 -132.37219238]
[216.10194397 -129.16696167]
[212.57929993 -126.62828064]
[206.91651917 -112.73825073]
[209.27648926 -98.03179169]
[196.90190125 -88.17378998]
[199.26187134 -73.46733093]
[186.88728333 -63.60932922]
[181.22450256 -49.71929932]
[182.18612671 -47.08616257]
[182.16267395 -43.91345978]
[180.94340515 -40.57447815]
[178.45648193 -37.51184082]
[174.78898621 -35.18732452]
[168.30949402 -21.65897942]
[161.82998657 -8.13063431]
[167.76983643 3.30386376]
[166.01304626 16.26518250]
[156.97897339 25.99123001]
[143.80157471 28.77879143]
[137.12136841 42.20916748]
[130.44117737 55.63954544]
[123.76098633 69.06992340]
[117.08078766 82.50029755]
[110.40059662 95.93067169]
[103.82056427 109.41040802]
[97.34107208 122.93875122]
[103.24925995 135.04280090]
[101.13828278 148.14830017]
[92.00001526 157.50640869]
[79.33101654 159.85714722]
[72.65082550 173.28752136]
[65.97062683 186.71789551]
[59.29043579 200.14826965]
[65.19482422 210.46693420]
[65.38313293 222.23406982]
[59.92422867 232.52456665]
[50.27646637 238.83616638]
[38.89999771 239.69767761]
[31.82289124 252.92320251]
[24.74578476 266.14871216]
[25.05675888 281.96688843]
[12.22995090 289.53802490]
[25.34509659 282.25839233]
[40.31468582 281.30371094]
[54.24832535 286.85833740]
[64.45565033 297.84970093]
[68.96578217 312.15560913]
[66.90789032 327.01376343]
[58.67931366 339.55532837]
[45.86886978 347.35870361]
[30.95005035 348.91717529]
[16.80344582 343.92980957]
[6.16054440 333.35964966]
[1.07632399 319.24755859]
[2.53286695 304.31719971]
[-6.78201580 316.07446289]
[-16.09689903 327.83169556]
[-25.41178131 339.58895874]
[-34.72666550 351.34619141]
[-44.04154587 363.10345459]
[-33.21431732 373.50134277]
[-23.42450714 384.88131714]
[-14.76077652 397.14038086]
[-7.30158854 410.16748047]
[-1.11449599 423.84463501]
[3.74446893 438.04800415]
[7.23130131 452.64892578]
[9.31442356 467.51516724]
[9.97496986 482.51211548]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 201]
[56 200]
[57 199]
[58 198]
[59 197]
[60 196]
[61 183]
[63 181]
[64 180]
[65 179]
[68 174]
[69 173]
[70 172]
[71 171]
[74 167]
[75 166]
[77 165]
[78 164]
[79 163]
[80 162]
[81 161]
[82 160]
[85 156]
[86 155]
[87 154]
[88 149]
[89 148]
[91 146]
[93 144]
[94 143]
[95 138]
[96 137]
[97 136]
[98 135]
[99 134]
[100 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
