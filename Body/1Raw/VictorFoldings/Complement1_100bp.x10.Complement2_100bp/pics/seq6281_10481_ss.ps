%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[43.06724930 316.39566040]
[41.05651093 331.26898193]
[37.82440186 345.92550659]
[33.39300156 360.26501465]
[27.79257584 374.18963623]
[21.06138611 387.60421753]
[13.24541187 400.41708374]
[4.39804554 412.54077148]
[-5.42027521 423.89242554]
[-16.14248085 434.39453125]
[-27.69532585 443.97531128]
[-39.99988937 452.56930542]
[-52.97212219 460.11788940]
[-66.52340698 466.56939697]
[-80.56117249 471.87982178]
[-94.98953247 476.01287842]
[-109.70991516 478.94033813]
[-124.62176514 480.64215088]
[-139.62321472 481.10675049]
[-154.61180115 480.33096313]
[-169.48512268 478.32003784]
[-184.14158630 475.08776855]
[-198.48106384 470.65618896]
[-212.40560913 465.05560303]
[-225.82009888 458.32424927]
[-238.63288879 450.50811768]
[-250.75646973 441.66061401]
[-262.10800171 431.84216309]
[-272.60995483 421.11981201]
[-282.19061279 409.56686401]
[-290.78448486 397.26217651]
[-298.33288574 384.28985596]
[-304.78424072 370.73849487]
[-310.09451294 356.70068359]
[-314.22738647 342.27227783]
[-317.15466309 327.55184937]
[-318.85632324 312.63998413]
[-319.32073975 297.63851929]
[-318.54473877 282.64993286]
[-316.53366089 267.77664185]
[-313.30120850 253.12022400]
[-308.86944580 238.78079224]
[-303.26870728 224.85632324]
[-296.53720093 211.44190979]
[-288.72091675 198.62921143]
[-279.87326050 186.50573730]
[-270.05465698 175.15431213]
[-259.33221436 164.65248108]
[-247.77914429 155.07197571]
[-235.47436523 146.47825623]
[-222.50195312 138.93000793]
[-208.95051575 132.47880554]
[-194.91262817 127.16870880]
[-180.48417664 123.03600311]
[-165.76371765 120.10890961]
[-150.85182190 118.40743256]
[-135.85035706 117.94319153]
[-120.86179352 118.71935272]
[-105.98851776 120.73062134]
[-91.33213043 123.96325684]
[-76.99275970 128.39517212]
[-63.06834793 133.99609375]
[-49.65402222 140.72776794]
[-36.84141541 148.54418945]
[-24.71804810 157.39199829]
[-13.36674309 167.21072388]
[-2.86503792 177.93330383]
[8.68126392 168.35818481]
[20.22756577 158.78306580]
[31.77386665 149.20794678]
[43.32016754 139.63282776]
[54.72262955 129.88685608]
[59.15908051 115.66830444]
[74.62899780 112.35282898]
[85.88509369 102.43817902]
[90.53220367 89.25122070]
[104.20025635 86.30572510]
[115.45635223 76.39107513]
[126.71244812 66.47641754]
[137.96855164 56.56176758]
[148.29521179 45.68243408]
[157.61009216 33.92518234]
[166.92497253 22.16793251]
[176.23986816 10.41068077]
[185.55474854 -1.34657025]
[194.86962891 -13.10382175]
[202.72138977 -25.88466454]
[208.99874878 -39.50798035]
[215.27610779 -53.13129807]
[221.55346680 -66.75461578]
[227.83082581 -80.37792969]
[214.93919373 -88.07453918]
[202.93870544 -97.09786987]
[191.96534729 -107.34566498]
[182.14343262 -118.70182800]
[173.58428955 -131.03767395]
[166.38487244 -144.21342468]
[160.62675476 -158.07978821]
[156.37519836 -172.47966003]
[153.67834473 -187.24987793]
[152.56678772 -202.22306824]
[153.05311584 -217.22958374]
[155.13180542 -232.09939575]
[158.77929688 -246.66400146]
[163.95426941 -260.75839233]
[170.59809875 -274.22283936]
[178.63549805 -286.90481567]
[187.97538757 -298.66061401]
[198.51196289 -309.35699463]
[210.12580872 -318.87280273]
[222.68533325 -327.10021973]
[236.04824829 -333.94598389]
[250.06312561 -339.33258057]
[264.57116699 -343.19891357]
[279.40802002 -345.50122070]
[294.40548706 -346.21340942]
[309.39373779 -345.32739258]
[324.20288086 -342.85321045]
[338.66513062 -338.81890869]
[352.61660767 -333.27020264]
[365.89923096 -326.26995850]
[378.36254883 -317.89749146]
[389.86526489 -308.24765015]
[400.27713013 -297.42980957]
[409.48007202 -285.56652832]
[417.36990356 -272.79223633]
[423.85717773 -259.25164795]
[428.86837769 -245.09820557]
[432.34677124 -230.49227905]
[434.25289917 -215.59938049]
[434.56521606 -200.58822632]
[433.28012085 -185.62892151]
[430.41220093 -170.89097595]
[425.99398804 -156.54136658]
[420.07546997 -142.74269104]
[412.72378540 -129.65129089]
[404.02218628 -117.41551971]
[394.06927490 -106.17400360]
[382.97784424 -96.05411530]
[370.87353516 -87.17053223]
[357.89352417 -79.62390900]
[344.18487549 -73.49974823]
[329.90295410 -68.86745453]
[315.20953369 -65.77949524]
[300.27111816 -64.27088165]
[285.25695801 -64.35868835]
[270.33721924 -66.04193115]
[255.68092346 -69.30153656]
[241.45414734 -74.10057068]
[235.17678833 -60.47725296]
[228.89941406 -46.85393524]
[222.62205505 -33.23062134]
[216.34469604 -19.60730362]
[228.43014526 -28.49222755]
[242.80598450 -32.77422714]
[257.78332520 -31.95025253]
[271.60269165 -26.11710548]
[282.64053345 -15.96006012]
[289.60018921 -2.67235374]
[291.66403198 12.18498611]
[288.58959961 26.86653519]
[280.73809814 39.64751816]
[269.03186035 49.02643967]
[254.84616089 53.90147018]
[239.84751892 53.69990158]
[225.79794312 48.44540787]
[214.34799194 38.75528717]
[206.84277344 25.76791954]
[204.16398621 11.00905228]
[206.62687683 -3.78893876]
[197.31199646 7.96831274]
[187.99711609 19.72556305]
[178.68223572 31.48281479]
[169.36735535 43.24006653]
[160.05245972 54.99731827]
[174.25256348 50.16439438]
[189.15351868 51.88530350]
[201.87818909 59.82777405]
[209.96963501 72.45822906]
[211.86553955 87.33793640]
[207.19981384 101.59384918]
[196.87335205 112.47337341]
[182.88002014 117.87584686]
[167.92172241 116.75814056]
[154.88665771 109.33605957]
[146.29171753 97.04269409]
[143.79641724 82.25170135]
[147.88319397 67.81786346]
[136.62710571 77.73251343]
[125.37100220 87.64717102]
[114.11490631 97.56182098]
[109.46779633 110.74877930]
[95.79974365 113.69427490]
[84.54364777 123.60892487]
[79.30208588 138.53663635]
[64.63728333 141.14295959]
[62.16740799 147.27575684]
[57.64934921 150.72309875]
[52.89528656 151.17912292]
[41.34898758 160.75424194]
[29.80268478 170.32936096]
[18.25638390 179.90447998]
[6.71008158 189.47959900]
[15.30424976 201.78407288]
[22.85296059 214.75621033]
[29.30464935 228.30741882]
[34.61524582 242.34512329]
[38.74846649 256.77343750]
[41.67608261 271.49377441]
[43.37809372 286.40560913]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 203]
[68 202]
[69 201]
[70 200]
[71 199]
[72 196]
[74 194]
[75 193]
[77 191]
[78 190]
[79 189]
[80 188]
[81 175]
[82 174]
[83 173]
[84 172]
[85 171]
[86 170]
[87 153]
[88 152]
[89 151]
[90 150]
[91 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
