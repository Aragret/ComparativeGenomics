%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[42.62703323 520.41094971]
[47.12822723 534.88562012]
[46.40424728 550.02667236]
[40.54252243 564.00579834]
[30.25087738 575.13494873]
[16.77208328 582.07019043]
[1.73376954 583.97412109]
[-13.04811573 580.61676025]
[-25.78858566 572.40362549]
[-34.94916916 560.32635498]
[-39.42367935 545.84350586]
[-38.67179871 530.70379639]
[-32.78432083 516.73547363]
[-22.47218513 505.62530518]
[-8.98063278 498.71490479]
[6.06116438 496.83868408]
[9.38342381 482.21124268]
[12.70568371 467.58377075]
[16.02794266 452.95632935]
[9.84879112 442.55706787]
[12.49690723 430.34347534]
[23.08570671 422.97869873]
[26.62537956 408.40231323]
[30.16505051 393.82595825]
[33.70472336 379.24957275]
[37.24439621 364.67318726]
[40.78406906 350.09683228]
[36.26864243 335.90316772]
[47.04396439 324.31854248]
[50.58363724 309.74218750]
[54.12331009 295.16580200]
[52.44766235 290.69354248]
[53.56368637 285.12112427]
[57.99146271 280.21133423]
[61.96355820 265.74679565]
[65.93565369 251.28227234]
[69.90775299 236.81774902]
[72.90252686 222.11975098]
[74.90653992 207.25421143]
[72.77471161 202.98052979]
[73.30495453 197.32228088]
[77.19791412 191.97845459]
[79.64363861 177.17918396]
[82.08937073 162.37991333]
[84.53509521 147.58064270]
[71.75842285 141.29763794]
[61.26897812 131.66999817]
[53.91628265 119.47747803]
[50.29581833 105.70751953]
[50.70080185 91.47531128]
[55.09843063 77.93350220]
[63.13254929 66.17881775]
[74.15249634 57.16324615]
[87.26577759 51.61693573]
[101.41037750 49.98907852]
[104.07617188 35.22786331]
[106.74196625 20.46664619]
[109.40776062 5.70542860]
[112.07356262 -9.05578899]
[114.73935699 -23.81700516]
[117.40515137 -38.57822418]
[115.79238129 -42.60971832]
[115.56886292 -46.54856873]
[116.53487396 -49.96942139]
[118.37307739 -52.55546188]
[120.69409943 -54.12740326]
[124.23377228 -68.70378113]
[126.67950439 -83.50305176]
[128.01773071 -98.44323730]
[129.35597229 -113.38341522]
[130.69419861 -128.32360840]
[131.80986023 -143.28205872]
[132.70266724 -158.25546265]
[125.80048370 -172.49169922]
[134.28161621 -184.73587036]
[134.95140076 -199.72091675]
[135.39799500 -214.71426392]
[135.84460449 -229.70761108]
[136.29121399 -244.70095825]
[128.03065491 -254.60682678]
[128.71130371 -267.08563232]
[137.42366028 -275.47738647]
[138.09344482 -290.46240234]
[138.76324463 -305.44744873]
[139.43302917 -320.43249512]
[124.66230011 -323.18420410]
[110.41831207 -327.96487427]
[96.97832489 -334.68148804]
[84.60394287 -343.20327759]
[73.53604889 -353.36437988]
[63.99007797 -364.96697998]
[56.15184402 -377.78524780]
[50.17391968 -391.56967163]
[46.17267227 -406.05194092]
[44.22598267 -420.95016479]
[44.37174225 -435.97430420]
[46.60711670 -450.83193970]
[50.88859558 -465.23385620]
[57.13283539 -478.89971924]
[65.21829224 -491.56350708]
[74.98757935 -502.97869873]
[86.25053406 -512.92315674]
[98.78791809 -521.20324707]
[112.35569000 -527.65783691]
[126.68975067 -532.16125488]
[141.51107788 -534.62585449]
[156.53118896 -535.00366211]
[171.45768738 -533.28735352]
[186.00003052 -529.51025391]
[199.87515259 -523.74597168]
[212.81297302 -516.10668945]
[224.56164551 -506.74108887]
[234.89248657 -495.83145142]
[243.60440063 -483.59017944]
[250.52781677 -470.25555420]
[255.52793884 -456.08709717]
[258.50747681 -441.36065674]
[259.40841675 -426.36282349]
[258.21319580 -411.38558960]
[254.94511414 -396.72045898]
[249.66777039 -382.65292358]
[242.48390198 -369.45678711]
[233.53334045 -357.38891602]
[222.99029541 -346.68423462]
[211.06001282 -337.55108643]
[197.97470093 -330.16726685]
[183.98907471 -324.67648315]
[169.37538147 -321.18566895]
[154.41806030 -319.76269531]
[153.74827576 -304.77767944]
[153.07849121 -289.79263306]
[152.40870667 -274.80758667]
[161.32331848 -259.69149780]
[151.28456116 -244.25436401]
[150.83795166 -229.26100159]
[150.39135742 -214.26765442]
[149.94474792 -199.27430725]
[152.50961304 -195.24560547]
[152.57090759 -189.56288147]
[149.25502014 -183.84306335]
[156.22105408 -170.67782593]
[147.67607117 -157.36264038]
[146.78326416 -142.38923645]
[149.22703552 -138.28594971]
[149.11911011 -132.60392761]
[145.63438416 -126.98536682]
[144.29615784 -112.04518127]
[142.95791626 -97.10499573]
[141.61968994 -82.16481781]
[151.51428223 -93.43853760]
[165.68807983 -98.34806824]
[180.43608093 -95.61006927]
[191.90318298 -85.94023895]
[197.09191895 -71.86625671]
[194.64596558 -57.06702423]
[185.20469666 -45.41102219]
[171.23602295 -39.94510651]
[156.39132690 -42.09805298]
[144.55099487 -51.30708313]
[138.81015015 -65.16410828]
[135.27047729 -50.58773041]
[132.16636658 -35.91242599]
[129.50056458 -21.15121078]
[126.83477783 -6.38999319]
[124.16898346 8.37122440]
[121.50318909 23.13244057]
[118.83738708 37.89365768]
[116.17159271 52.65487671]
[130.00308228 59.96380997]
[140.90110779 71.18714905]
[147.80017090 85.22756958]
[150.02572632 100.71231079]
[147.36019897 116.12741089]
[140.06416321 129.96571350]
[128.85099792 140.87420654]
[114.81703186 147.78636169]
[99.33436584 150.02636719]
[96.88864136 164.82565308]
[94.44290924 179.62492371]
[91.99718475 194.42419434]
[89.77207184 209.25822449]
[87.76805115 224.12376404]
[98.57151794 213.71774292]
[113.26484680 210.70008850]
[127.29513550 216.00582886]
[136.31495667 227.99093628]
[137.52941895 242.94169617]
[130.56221008 256.22543335]
[117.57218933 263.72607422]
[102.58446503 263.11941528]
[90.24314117 254.59349060]
[84.37227631 240.78984070]
[80.40017700 255.25436401]
[76.42808533 269.71890259]
[72.45598602 284.18341064]
[68.69968414 298.70547485]
[65.16001129 313.28186035]
[61.62034225 327.85821533]
[65.88259125 343.09448242]
[55.36044312 353.63650513]
[51.82077026 368.21286011]
[48.28109741 382.78924561]
[44.74142838 397.36563110]
[41.20175552 411.94198608]
[37.66208267 426.51837158]
[43.25462341 444.06274414]
[30.65540314 456.27856445]
[27.33314323 470.90603638]
[24.01088333 485.53350830]
[20.68862534 500.16094971]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 210]
[17 209]
[18 208]
[19 207]
[22 205]
[23 204]
[24 203]
[25 202]
[26 201]
[27 200]
[29 198]
[30 197]
[31 196]
[34 195]
[35 194]
[36 193]
[37 192]
[38 182]
[39 181]
[42 180]
[43 179]
[44 178]
[45 177]
[55 168]
[56 167]
[57 166]
[58 165]
[59 164]
[60 163]
[61 162]
[66 161]
[67 160]
[68 149]
[69 148]
[70 147]
[71 146]
[72 143]
[73 142]
[75 140]
[76 137]
[77 136]
[78 135]
[79 134]
[82 132]
[83 131]
[84 130]
[85 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
