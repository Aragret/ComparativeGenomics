%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[174.98175049 399.06970215]
[178.36447144 384.44500732]
[183.08216858 370.19479370]
[189.09460449 356.44070435]
[196.35046387 343.30004883]
[204.78787231 330.88491821]
[214.33479309 319.30130005]
[203.68879700 308.73425293]
[193.04278564 298.16720581]
[182.39677429 287.60015869]
[171.75076294 277.03311157]
[161.10475159 266.46606445]
[150.45874023 255.89900208]
[154.81338501 270.25299072]
[154.33715820 285.24545288]
[149.08033752 299.29412842]
[139.59768677 310.91650391]
[126.88992310 318.88598633]
[112.29813385 322.36157227]
[97.36222076 320.97644043]
[83.65840912 314.87680054]
[72.63289642 304.70635986]
[65.44923401 291.53839111]
[62.86552048 276.76260376]
[65.15442657 261.93826294]
[72.07440948 248.62983704]
[82.89516449 238.24182129]
[96.47476959 231.87045288]
[111.38013458 230.18812561]
[126.03825378 233.37239075]
[138.90237427 241.08732605]
[131.24177551 228.19099426]
[123.58117676 215.29467773]
[115.92057800 202.39834595]
[117.03368378 217.35697937]
[114.44207001 232.13140869]
[108.30422974 245.81814575]
[98.99547577 257.58026123]
[87.08506012 266.69848633]
[73.30130005 272.61523438]
[58.48707581 274.96868896]
[43.54828644 273.61495972]
[29.39844513 268.63681030]
[16.90281868 260.33865356]
[6.82552004 249.22793579]
[-0.21722050 235.98408508]
[-3.79473639 221.41694641]
[-3.68826151 206.41732788]
[0.09569373 191.90245056]
[7.32573843 178.75990295]
[17.55975342 167.79336548]
[30.17192268 159.67344666]
[44.39101028 154.89666748]
[59.34751129 153.75514221]
[74.12683105 156.31867981]
[87.82521057 162.43051147]
[99.60498047 171.71690369]
[108.74582672 183.61000061]
[105.86055756 168.89010620]
[102.97528076 154.17021179]
[100.09001160 139.45031738]
[90.04908752 128.44900513]
[94.98741913 113.41825104]
[85.94354248 102.75523376]
[90.29269409 89.46702576]
[87.40741730 74.74713135]
[84.52214813 60.02724075]
[67.76808929 54.72301865]
[56.06785965 41.73012543]
[52.57769394 24.68833160]
[58.17072678 8.31056404]
[71.22075653 -2.92042089]
[67.89849854 -17.54788208]
[64.57624054 -32.17534256]
[61.25397873 -46.80280304]
[57.93172073 -61.43026352]
[47.33006668 -73.17400360]
[52.05631638 -87.29887390]
[48.73405838 -101.92633057]
[38.13240433 -113.67007446]
[42.85865402 -127.79493713]
[39.53639221 -142.42239380]
[28.93474007 -154.16613770]
[33.66099167 -168.29101562]
[30.33872986 -182.91847229]
[15.26959515 -183.05218506]
[0.63763344 -186.65808105]
[-12.76807117 -193.54167175]
[-24.22456551 -203.33174133]
[-33.11401749 -215.50032043]
[-38.95702744 -229.39117432]
[-41.43848801 -244.25520325]
[-40.42458344 -259.29077148]
[-35.96998596 -273.68707275]
[-28.31492996 -286.66769409]
[-17.87224007 -297.53265381]
[-5.20508003 -305.69595337]
[9.00342751 -310.71743774]
[23.98703384 -312.32623291]
[38.93769455 -310.43560791]
[53.04913712 -305.14749146]
[65.56035614 -296.74713135]
[75.79662323 -285.68750000]
[83.20591736 -272.56503296]
[87.38867188 -258.08743286]
[88.11930847 -243.03541565]
[85.35842133 -228.22074890]
[79.25490570 -214.44236755]
[70.13791656 -202.44331360]
[58.49912262 -192.87069702]
[44.96619034 -186.24072266]
[48.28844833 -171.61326599]
[58.65247345 -160.91577148]
[54.16385269 -145.74465942]
[57.48611450 -131.11720276]
[67.85013580 -120.41970825]
[63.36151505 -105.24858856]
[66.68377686 -90.62113190]
[77.04779816 -79.92363739]
[72.55918121 -64.75251770]
[75.88143921 -50.12506104]
[79.20369720 -35.49760056]
[82.52595520 -20.87014008]
[85.84822083 -6.24268055]
[98.24901581 -3.82640958]
[108.85391998 3.12606549]
[116.06810760 13.61145115]
[118.79075623 26.09209442]
[116.58287048 38.72143173]
[109.73763275 49.61720276]
[99.24204254 57.14196777]
[102.12731171 71.86186218]
[105.01258087 86.58174896]
[114.05645752 97.24476624]
[109.70730591 110.53297424]
[119.95460510 122.58716583]
[114.80989838 136.56504822]
[117.69517517 151.28494263]
[120.58044434 166.00483704]
[123.46572113 180.72471619]
[128.81690979 194.73774719]
[136.47750854 207.63407898]
[144.13809204 220.53039551]
[151.79869080 233.42672729]
[161.02580261 245.25299072]
[171.67179871 255.82003784]
[182.31781006 266.38708496]
[192.96382141 276.95413208]
[203.60983276 287.52117920]
[214.25584412 298.08822632]
[224.90184021 308.65527344]
[236.41409302 299.02236938]
[248.76605225 290.49279785]
[261.85232544 283.13931274]
[275.56127930 277.02465820]
[289.77597046 272.20098877]
[304.37509155 268.70947266]
[319.23406982 266.57992554]
[334.22616577 265.83047485]
[349.22344971 266.46755981]
[364.09799194 268.48568726]
[378.72286987 271.86767578]
[392.97329712 276.58465576]
[406.72769165 282.59640503]
[419.86871338 289.85162354]
[432.28424072 298.28839111]
[443.86837769 307.83474731]
[454.52221680 318.40924072]
[464.15493774 329.92166138]
[472.68432617 342.27374268]
[480.03759766 355.36016846]
[486.15203857 369.06921387]
[490.97543335 383.28396606]
[494.46670532 397.88314819]
[496.59600830 412.74215698]
[497.34521484 427.73428345]
[496.70788574 442.73156738]
[494.68951416 457.60607910]
[491.30728149 472.23086548]
[486.59005737 486.48123169]
[480.57806396 500.23553467]
[473.32263184 513.37640381]
[464.88565063 525.79180908]
[455.33911133 537.37579346]
[444.76443481 548.02947998]
[433.25186157 557.66198730]
[420.89962769 566.19116211]
[407.81311035 573.54418945]
[394.10394287 579.65844727]
[379.88909912 584.48162842]
[365.28988647 587.97259521]
[350.43081665 590.10168457]
[335.43869019 590.85064697]
[320.44140625 590.21307373]
[305.56695557 588.19439697]
[290.94219971 584.81195068]
[276.69192505 580.09448242]
[262.93774414 574.08227539]
[249.79695129 566.82659912]
[237.38169861 558.38946533]
[225.79789734 548.84271240]
[215.14437866 538.26782227]
[205.51205444 526.75512695]
[196.98309326 514.40277100]
[189.63024902 501.31610107]
[183.51628113 487.60681152]
[178.69332886 473.39190674]
[175.20256042 458.79263306]
[173.07374573 443.93353271]
[172.32504272 428.94137573]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 151]
[8 150]
[9 149]
[10 148]
[11 147]
[12 146]
[13 145]
[31 144]
[32 143]
[33 142]
[34 141]
[58 140]
[59 139]
[60 138]
[61 137]
[63 135]
[65 133]
[66 132]
[67 131]
[72 124]
[73 123]
[74 122]
[75 121]
[76 120]
[78 118]
[79 117]
[81 115]
[82 114]
[84 112]
[85 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
