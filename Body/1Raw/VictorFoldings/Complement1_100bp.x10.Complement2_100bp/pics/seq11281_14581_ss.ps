%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUGxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[119.72954559 653.96887207]
[106.07543945 647.74884033]
[92.79869080 640.75946045]
[79.94261932 633.02355957]
[67.54914856 624.56628418]
[55.65870285 615.41528320]
[44.31007004 605.60040283]
[33.54027176 595.15362549]
[23.38442993 584.10906982]
[13.87567425 572.50274658]
[5.04502010 560.37249756]
[-3.07872891 547.75787354]
[-10.46907425 534.70007324]
[-17.10191154 521.24163818]
[-22.95560265 507.42654419]
[-28.01105690 493.29977417]
[-32.25178528 478.90740967]
[-35.66394806 464.29644775]
[-38.23642731 449.51449585]
[-39.96081924 434.60980225]
[-40.83150864 419.63098145]
[-40.84565353 404.62686157]
[-40.00320435 389.64642334]
[-38.30691147 374.73849487]
[-35.76231003 359.95175171]
[-32.37769699 345.33435059]
[-28.16411018 330.93405151]
[-23.13529778 316.79776001]
[-17.30766106 302.97161865]
[-10.70021057 289.50073242]
[-3.33449554 276.42901611]
[4.76545668 263.79913330]
[13.57322598 251.65223694]
[23.06008339 240.02799988]
[33.19508362 228.96430969]
[43.94517136 218.49726868]
[55.27527618 208.66099548]
[67.14844513 199.48760986]
[79.52595520 191.00698853]
[92.36742401 183.24682617]
[105.63096619 176.23243713]
[119.27332306 169.98667908]
[113.81797028 156.01387024]
[108.36260986 142.04107666]
[102.90725708 128.06828308]
[97.45189667 114.09548187]
[86.65695953 105.20948029]
[88.57530212 91.35987854]
[83.11994934 77.38707733]
[77.66458893 63.41427994]
[72.20923615 49.44148254]
[57.86517334 53.85228348]
[43.23453522 57.19168854]
[28.39722443 59.44145966]
[13.43428135 60.58930588]
[-1.57257175 60.62896347]
[-16.54137230 59.56020737]
[-31.39036560 57.38888550]
[-46.03844833 54.12685013]
[-60.40562057 49.79191971]
[-74.41340637 44.40776825]
[-87.98530579 38.00380325]
[-101.04719543 30.61500359]
[-113.52772522 22.28172302]
[-125.35873413 13.04947472]
[-136.47561646 2.96868443]
[-146.81762695 -7.90559053]
[-156.32830811 -19.51395798]
[-164.95570374 -31.79301643]
[-172.65269470 -44.67570114]
[-179.37724304 -58.09164810]
[-185.09262085 -71.96759033]
[-189.76760864 -86.22772980]
[-193.37667847 -100.79419708]
[-195.90011597 -115.58741760]
[-197.32414246 -130.52661133]
[-197.64097595 -145.53016663]
[-196.84889221 -160.51615906]
[-194.95220947 -175.40272522]
[-191.96128845 -190.10855103]
[-187.89245605 -204.55334473]
[-182.76795959 -218.65818787]
[-176.61576843 -232.34605408]
[-169.46948242 -245.54219055]
[-161.36814880 -258.17449951]
[-152.35600281 -270.17404175]
[-142.48226929 -281.47521973]
[-131.80087280 -292.01632690]
[-120.37014771 -301.73977661]
[-108.25253296 -310.59249878]
[-95.51421356 -318.52612305]
[-82.22476196 -325.49734497]
[-68.45675659 -331.46804810]
[-54.28539276 -336.40560913]
[-39.78807831 -340.28311157]
[-25.04398537 -343.07937622]
[-10.13364792 -344.77908325]
[4.86150169 -345.37298584]
[19.85956192 -344.85781860]
[34.77862167 -343.23641968]
[49.53719330 -340.51763916]
[64.05467224 -336.71630859]
[78.25176239 -331.85321045]
[92.05092621 -325.95489502]
[105.37680817 -319.05355835]
[118.15660858 -311.18695068]
[130.32054138 -302.39797974]
[141.80215454 -292.73464966]
[152.53875732 -282.24978638]
[162.47169495 -271.00061035]
[171.54673767 -259.04858398]
[179.71429443 -246.45896912]
[186.92976379 -233.30053711]
[193.15374756 -219.64517212]
[198.35223389 -205.56742859]
[202.49685669 -191.14419556]
[205.56495667 -176.45426941]
[207.53977966 -161.57786560]
[208.41055298 -146.59625244]
[208.17250061 -131.59123230]
[206.82695007 -116.64477539]
[204.38122559 -101.83850098]
[200.84867859 -87.25328827]
[196.24864197 -72.96879578]
[190.60620117 -59.06303406]
[183.95219421 -45.61196136]
[176.32295227 -32.68903732]
[167.76014709 -20.36484718]
[158.31056213 -8.70670033]
[148.02578735 2.22172999]
[136.96199036 12.36075497]
[125.17962646 21.65499878]
[112.74302673 30.05369949]
[99.72011566 37.51098633]
[86.18202972 43.98612595]
[91.63739014 57.95892334]
[97.09274292 71.93172455]
[102.54810333 85.90451813]
[113.34304047 94.79051971]
[111.42469788 108.64012146]
[116.88005066 122.61292267]
[122.33541107 136.58572388]
[127.79076385 150.55851746]
[133.24612427 164.53131104]
[147.51144409 159.88116455]
[162.01898193 156.05297852]
[176.72140503 153.05926514]
[191.57073975 150.90977478]
[206.51858521 149.61154175]
[221.51617432 149.16876221]
[236.51457214 149.58290100]
[251.46485901 150.85261536]
[266.31826782 152.97375488]
[281.02639771 155.93940735]
[295.54119873 159.73988342]
[309.81536865 164.36279297]
[323.80236816 169.79307556]
[337.45651245 176.01298523]
[350.73330688 183.00227356]
[363.58944702 190.73811340]
[375.98300171 199.19526672]
[387.87350464 208.34617615]
[399.22219849 218.16098022]
[409.99209595 228.60765076]
[420.14801025 239.65213013]
[429.65686035 251.25839233]
[438.48760986 263.38858032]
[446.61145020 276.00311279]
[454.00192261 289.06085205]
[460.63485718 302.51922607]
[466.48864746 316.33428955]
[471.54421997 330.46102905]
[475.78506470 344.85336304]
[479.19732666 359.46429443]
[481.76992798 374.24621582]
[483.49444580 389.15090942]
[484.36523438 404.12973022]
[484.37951660 419.13381958]
[483.53717041 434.11428833]
[481.84100342 449.02221680]
[479.29650879 463.80899048]
[475.91201782 478.42639160]
[471.69854736 492.82675171]
[466.66983032 506.96307373]
[460.84231567 520.78924561]
[454.23495483 534.26019287]
[446.86935425 547.33197021]
[438.76950073 559.96191406]
[429.96182251 572.10888672]
[420.47506714 583.73321533]
[410.34014893 594.79693604]
[399.59014893 605.26409912]
[388.26010132 615.10046387]
[376.38702393 624.27392578]
[364.00958252 632.75463867]
[351.16815186 640.51489258]
[337.90466309 647.52941895]
[324.26235962 653.77526855]
[310.28573608 659.23211670]
[296.02038574 663.88220215]
[281.51281738 667.71026611]
[266.81036377 670.70385742]
[251.96101379 672.85321045]
[237.01315308 674.15136719]
[222.01557922 674.59399414]
[207.01718140 674.17974854]
[192.06689453 672.90991211]
[177.21348572 670.78863525]
[162.50540161 667.82287598]
[147.99061584 664.02227783]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 144]
[43 143]
[44 142]
[45 141]
[46 140]
[48 138]
[49 137]
[50 136]
[51 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
