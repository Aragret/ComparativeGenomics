%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[-28.13958549 230.17289734]
[-23.48958015 244.44499207]
[-20.15668678 259.08081055]
[-18.16851997 273.95904541]
[-17.54155731 288.95645142]
[-18.28099251 303.94873047]
[-20.38069725 318.81167603]
[-23.82327652 333.42205811]
[-28.58020020 347.65887451]
[-34.61204910 361.40414429]
[-41.86884308 374.54394531]
[-50.29044724 386.96939087]
[-59.80707932 398.57751465]
[-70.33987427 409.27215576]
[-81.80155945 418.96469116]
[-94.09715271 427.57479858]
[-107.12476349 435.03109741]
[-120.77644348 441.27185059]
[-134.93907166 446.24530029]
[-149.49528503 449.91024780]
[-164.32446289 452.23635864]
[-179.30372620 453.20431519]
[-194.30894470 452.80609131]
[-209.21578979 451.04501343]
[-223.90071106 447.93569946]
[-238.24205017 443.50384521]
[-252.12097168 437.78622437]
[-265.42242432 430.83020020]
[-278.03622437 422.69342041]
[-289.85784912 413.44332886]
[-300.78933716 403.15652466]
[-310.74008179 391.91830444]
[-319.62762451 379.82174683]
[-327.37835693 366.96710205]
[-333.92800903 353.46090698]
[-339.22235107 339.41510010]
[-343.21749878 324.94601440]
[-345.88031006 310.17358398]
[-347.18875122 295.22021484]
[-347.13198853 280.20980835]
[-345.71044922 265.26678467]
[-342.93597412 250.51492310]
[-338.83151245 236.07647705]
[-333.43106079 222.07109070]
[-326.77941895 208.61483765]
[-318.93170166 195.81921387]
[-309.95288086 183.79022217]
[-299.91741943 172.62759399]
[-288.90844727 162.42378235]
[-277.01718140 153.26335144]
[-264.34219360 145.22222900]
[-250.98849487 138.36701965]
[-237.06672668 132.75454712]
[-222.69227600 128.43132019]
[-207.98423767 125.43315125]
[-193.06451416 123.78489685]
[-178.05670166 123.50020599]
[-163.08518982 124.58143616]
[-148.27403259 127.01963806]
[-133.74595642 130.79460144]
[-119.62136078 135.87504578]
[-106.01727295 142.21887207]
[-93.04644012 149.77351379]
[-80.81632996 158.47636414]
[-69.42829132 168.25532532]
[-58.97669601 179.02932739]
[-49.54814529 190.70913696]
[-37.06835175 182.38719177]
[-24.58855820 174.06524658]
[-12.10876465 165.74330139]
[0.37102884 157.42135620]
[12.85082245 149.09941101]
[25.33061600 140.77746582]
[37.81040955 132.45552063]
[50.29020309 124.13358307]
[62.76999664 115.81163788]
[59.55287170 100.33295441]
[62.51474380 84.80340576]
[71.20313263 71.59539795]
[84.29074097 62.72668457]
[99.77820587 59.55210876]
[115.29956055 62.55664825]
[128.48364258 71.28130341]
[140.83815002 62.77447891]
[153.19265747 54.26765060]
[154.91780090 50.28294754]
[157.55587769 47.34950638]
[160.66429138 45.62523270]
[163.79464722 45.10807800]
[166.54541016 45.64800262]
[179.38433838 37.89161301]
[192.22328186 30.13522148]
[205.06222534 22.37882996]
[217.90116882 14.62243843]
[230.74011230 6.86604691]
[243.57904053 -0.89034426]
[236.74455261 -14.24993706]
[230.86947632 -28.05835152]
[225.98306274 -42.24679184]
[222.10966492 -56.74457550]
[219.26856995 -71.47946930]
[217.47395325 -86.37806702]
[216.73474121 -101.36614990]
[217.05461121 -116.36903381]
[218.43199158 -131.31198120]
[220.85998535 -146.12055969]
[224.32653809 -160.72096252]
[228.81434631 -175.04048157]
[234.30107117 -189.00775146]
[240.75935364 -202.55320740]
[248.15705872 -215.60935974]
[256.45727539 -228.11116028]
[265.61871338 -239.99632263]
[275.59570312 -251.20564270]
[286.33853149 -261.68325806]
[297.79367065 -271.37701416]
[309.90408325 -280.23855591]
[322.60940552 -288.22375488]
[335.84634399 -295.29287720]
[349.54898071 -301.41064453]
[363.64898682 -306.54660034]
[378.07620239 -310.67514038]
[392.75866699 -313.77572632]
[407.62329102 -315.83291626]
[422.59600830 -316.83639526]
[437.60220337 -316.78125000]
[452.56710815 -315.66769409]
[467.41622925 -313.50131226]
[482.07550049 -310.29287720]
[496.47195435 -306.05838013]
[510.53387451 -300.81890869]
[524.19116211 -294.60058594]
[537.37573242 -287.43435669]
[550.02203369 -279.35595703]
[562.06695557 -270.40563965]
[573.45056152 -260.62796021]
[584.11608887 -250.07164001]
[594.01037598 -238.78927612]
[603.08416748 -226.83708191]
[611.29229736 -214.27461243]
[618.59381104 -201.16442871]
[624.95233154 -187.57186890]
[630.33624268 -173.56463623]
[634.71868896 -159.21250916]
[638.07781982 -144.58702087]
[640.39685059 -129.76100159]
[641.66436768 -114.80832672]
[641.87396240 -99.80348969]
[641.02453613 -84.82125092]
[639.12048340 -69.93624878]
[636.17114258 -55.22263718]
[632.19128418 -40.75372314]
[627.20068359 -26.60158348]
[621.22424316 -12.83673191]
[614.29174805 0.47225907]
[606.43768311 13.25908279]
[597.70123291 25.46003532]
[588.12591553 37.01433182]
[577.75939941 47.86441040]
[566.65332031 57.95621109]
[554.86303711 67.23946381]
[542.44732666 75.66791534]
[529.46801758 83.19956970]
[515.98974609 89.79691315]
[502.07965088 95.42707825]
[487.80709839 100.06201172]
[473.24313354 103.67861938]
[458.46032715 106.25888062]
[443.53234863 107.78995514]
[428.53353882 108.26419830]
[413.53863525 107.67926025]
[398.62237549 106.03805542]
[383.85900879 103.34874725]
[369.32214355 99.62474823]
[355.08416748 94.88459778]
[341.21603394 89.15192413]
[327.78680420 82.45527649]
[314.86343384 74.82802582]
[302.51025391 66.30816650]
[290.78881836 56.93814850]
[279.75756836 46.76464844]
[269.47140503 35.83835602]
[259.98159790 24.21369934]
[251.33543396 11.94859600]
[238.49649048 19.70498848]
[225.65756226 27.46137810]
[212.81861877 35.21776962]
[199.97967529 42.97416306]
[187.14073181 50.73055267]
[174.30178833 58.48694611]
[161.69947815 66.62216187]
[149.34497070 75.12899017]
[136.99046326 83.63581085]
[140.35343933 97.22855377]
[138.88035583 111.15341949]
[132.74775696 123.74164581]
[122.69058228 133.48460388]
[109.91410828 139.21469116]
[95.94950104 140.24517822]
[82.47032166 136.45259094]
[71.09194183 128.29142761]
[58.61214828 136.61337280]
[46.13235474 144.93531799]
[33.65256119 153.25726318]
[21.17276573 161.57920837]
[8.69297218 169.90115356]
[-3.78682113 178.22309875]
[-16.26661491 186.54504395]
[-28.74640846 194.86698914]
[-41.22620392 203.18893433]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 210]
[68 209]
[69 208]
[70 207]
[71 206]
[72 205]
[73 204]
[74 203]
[75 202]
[76 201]
[83 193]
[84 192]
[85 191]
[90 190]
[91 189]
[92 188]
[93 187]
[94 186]
[95 185]
[96 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
