%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[-56.87251282 283.73336792]
[-50.91531754 297.51486206]
[-46.43134308 311.84353638]
[-43.46970749 326.56246948]
[-42.06287003 341.51031494]
[-42.22623825 356.52334595]
[-43.95802689 371.43707275]
[-47.23925781 386.08804321]
[-52.03398132 400.31576538]
[-58.28966522 413.96435547]
[-65.93776703 426.88427734]
[-74.89448547 438.93395996]
[-85.06169891 449.98138428]
[-96.32799530 459.90551758]
[-108.56993866 468.59759521]
[-121.65341187 475.96243286]
[-135.43504333 481.91928101]
[-149.76385498 486.40292358]
[-164.48284912 489.36419678]
[-179.43074036 490.77066040]
[-194.44375610 490.60693359]
[-209.35742188 488.87478638]
[-224.00833130 485.59320068]
[-238.23594666 480.79812622]
[-251.88438416 474.54211426]
[-264.80410767 466.89367676]
[-276.85357666 457.93667603]
[-287.90075684 447.76919556]
[-297.82461548 436.50265503]
[-306.51638794 424.26049805]
[-313.88088989 411.17684937]
[-319.83743286 397.39508057]
[-324.32070923 383.06616211]
[-327.28161621 368.34710693]
[-328.68774414 353.39916992]
[-328.52365112 338.38613892]
[-326.79113770 323.47253418]
[-323.50918579 308.82171631]
[-318.71377563 294.59420776]
[-312.45742798 280.94592285]
[-304.80868530 268.02636719]
[-295.85137939 255.97712708]
[-285.68365479 244.93019104]
[-274.41687012 235.00662231]
[-262.17449951 226.31512451]
[-249.09066772 218.95092773]
[-235.30874634 212.99475098]
[-220.97970581 208.51181030]
[-206.26057434 205.55125427]
[-191.31262207 204.14550781]
[-176.29960632 204.30996704]
[-161.38601685 206.04284668]
[-146.73527527 209.32513428]
[-132.50790405 214.12089539]
[-118.85975647 220.37757874]
[-105.94039917 228.02662659]
[-93.89137268 236.98422241]
[-82.84468842 247.15223694]
[-71.58859253 237.23757935]
[-60.33249664 227.32293701]
[-57.39094925 220.54287720]
[-48.83421707 217.34597778]
[-37.43175507 207.60002136]
[-26.02929306 197.85404968]
[-14.62683010 188.10809326]
[-19.32366753 173.93525696]
[-18.23352051 159.00350952]
[-11.49145126 145.59048462]
[-0.09702499 135.75408936]
[14.23377705 131.01681519]
[29.32694054 132.13011169]
[42.88021469 138.95539856]
[47.52786636 124.80447388]
[63.04542923 121.71969604]
[74.44789124 111.97372437]
[85.85035706 102.22776031]
[90.69329071 89.11145020]
[104.40367889 86.36977386]
[115.80614471 76.62380981]
[127.20860291 66.87784576]
[131.69879150 58.92322159]
[138.85415649 57.07319641]
[150.40045166 47.49807739]
[152.37384033 34.75176239]
[162.18791199 27.01432610]
[174.24378967 28.00538635]
[180.14668274 13.32661057]
[194.91323853 11.37771702]
[206.60081482 1.97556567]
[218.28839111 -7.42658567]
[209.70222473 -19.73326302]
[201.97590637 -32.59719467]
[195.14546204 -45.95840454]
[189.24275208 -59.75459290]
[184.29530334 -73.92143250]
[180.32615662 -88.39287567]
[177.35383606 -103.10144806]
[175.39221191 -117.97856903]
[174.45039368 -132.95487976]
[174.53280640 -147.96054077]
[175.63905334 -162.92559814]
[177.76397705 -177.78027344]
[180.89767456 -192.45530701]
[185.02552795 -206.88227844]
[190.12829590 -220.99392700]
[196.18217468 -234.72445679]
[203.15896606 -248.00982666]
[211.02610779 -260.78811646]
[219.74693298 -272.99975586]
[229.28079224 -284.58776855]
[239.58322144 -295.49816895]
[250.60618591 -305.68005371]
[262.29827881 -315.08599854]
[274.60504150 -323.67208862]
[287.46902466 -331.39831543]
[300.83026123 -338.22866821]
[314.62649536 -344.13128662]
[328.79336548 -349.07864380]
[343.26483154 -353.04766846]
[357.97341919 -356.01989746]
[372.85055542 -357.98144531]
[387.82687378 -358.92315674]
[402.83255005 -358.84063721]
[417.79757690 -357.73428345]
[432.65225220 -355.60925293]
[447.32727051 -352.47546387]
[461.75421143 -348.34753418]
[475.86581421 -343.24465942]
[489.59631348 -337.19067383]
[502.88162231 -330.21380615]
[515.65985107 -322.34658813]
[527.87145996 -313.62567139]
[539.45941162 -304.09173584]
[550.36975098 -293.78924561]
[560.55157471 -282.76620483]
[569.95739746 -271.07403564]
[578.54339600 -258.76724243]
[586.26953125 -245.90319824]
[593.09979248 -232.54190063]
[599.00231934 -218.74563599]
[603.94958496 -204.57873535]
[607.91857910 -190.10723877]
[610.89068604 -175.39862061]
[612.85211182 -160.52146912]
[613.79370117 -145.54515076]
[613.71112061 -130.53948975]
[612.60467529 -115.57444763]
[610.47955322 -100.71980286]
[607.34564209 -86.04480743]
[603.21759033 -71.61788940]
[598.11462402 -57.50630951]
[592.06054688 -43.77586746]
[585.08361816 -30.49058342]
[577.21630859 -17.71239662]
[568.49530029 -5.50088644]
[558.96130371 6.08701181]
[548.65869141 16.99726868]
[537.63562012 27.17901611]
[525.94335938 36.58478165]
[513.63653564 45.17070770]
[500.77243042 52.89676666]
[487.41110229 59.72693634]
[473.61477661 65.62936401]
[459.44784546 70.57653809]
[444.97631836 74.54538727]
[430.26770020 77.51741028]
[415.39053345 79.47874451]
[400.41421509 80.42025757]
[385.40853882 80.33753967]
[370.44351196 79.23099518]
[355.58886719 77.10576630]
[340.91390991 73.97177887]
[326.48699951 69.84363556]
[312.37545776 64.74059296]
[298.64508057 58.68642807]
[285.35983276 51.70938110]
[272.58169556 43.84197617]
[260.37023926 35.12089920]
[248.78240967 25.58681297]
[237.87222290 15.28416538]
[227.69055176 4.26099586]
[216.00296021 13.66314697]
[204.31538391 23.06529808]
[199.24847412 37.07156754]
[183.64593506 39.69296646]
[178.19508362 56.37394333]
[159.97557068 59.04437637]
[148.42927551 68.61949921]
[136.95457458 78.28030396]
[125.55210876 88.02627563]
[114.14964294 97.77223969]
[109.30670929 110.88854980]
[95.59632111 113.63022614]
[84.19385529 123.37619019]
[72.79139709 133.12216187]
[67.32816315 147.97016907]
[52.62618256 150.35786438]
[57.25798798 164.80853271]
[56.00771713 179.89097595]
[49.09692383 193.30941772]
[37.60638809 203.03335571]
[23.30720329 207.60481262]
[8.38782310 206.35679626]
[-4.88086462 199.51054382]
[-16.28332710 209.25651550]
[-27.68578911 219.00248718]
[-39.08825302 228.74844360]
[-50.41784668 238.57902527]
[-61.67394257 248.49368286]
[-72.93003845 258.40832520]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 210]
[59 209]
[60 208]
[62 207]
[63 206]
[64 205]
[65 204]
[72 197]
[74 195]
[75 194]
[76 193]
[78 191]
[79 190]
[80 189]
[82 188]
[83 187]
[86 185]
[88 183]
[89 182]
[90 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
