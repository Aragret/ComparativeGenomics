%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxUUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[87.62556458 599.09710693]
[79.57335663 611.79632568]
[69.49066925 622.95190430]
[57.66759872 632.24291992]
[44.44432068 639.40203857]
[30.20129967 644.22326660]
[15.34833145 646.56793213]
[0.31276557 646.36846924]
[-14.47279453 643.63073730]
[-28.58293724 638.43347168]
[-41.61168671 630.92614746]
[-53.18418121 621.32482910]
[-62.96745682 609.90576172]
[-70.68002319 596.99743652]
[-76.09998322 582.97131348]
[-79.07138824 568.23095703]
[-79.50875092 553.20043945]
[-77.39948273 538.31219482]
[-72.80426788 523.99462891]
[-65.85532379 510.65972900]
[-56.75258636 498.69110107]
[-45.75796127 488.43310547]
[-33.18778229 480.18093872]
[-19.40371895 474.17196655]
[-4.80236673 470.57913208]
[10.19616413 469.50576782]
[25.16033554 470.98278809]
[29.13243103 456.51824951]
[33.10452652 442.05374146]
[37.07662582 427.58920288]
[41.04872131 413.12469482]
[45.02081680 398.66015625]
[43.76077271 391.37771606]
[49.16122437 384.01068115]
[53.34823608 369.60690308]
[57.53524780 355.20312500]
[61.72225952 340.79934692]
[65.90927124 326.39556885]
[68.90404510 311.69757080]
[62.73396301 298.14105225]
[72.05632782 285.35809326]
[62.67719650 273.84426880]
[64.27270508 258.71453857]
[76.41302490 248.95491028]
[78.19548798 234.06120300]
[79.97795868 219.16748047]
[81.76042175 204.27375793]
[83.54288483 189.38005066]
[85.32535553 174.48632812]
[76.43578339 157.31477356]
[88.76469421 141.36608887]
[90.10292816 126.42590332]
[91.44116211 111.48571777]
[85.73317719 98.72208405]
[93.61865234 87.17604828]
[94.95688629 72.23586273]
[96.29512024 57.29567719]
[88.29941559 69.98696136]
[77.09024048 79.95463562]
[63.55160522 86.41259766]
[48.75121689 88.85155487]
[33.85629654 87.07916260]
[20.04152298 81.23519135]
[8.39638424 71.78051758]
[-0.16073602 59.46079254]
[-4.95498657 45.24758911]
[-5.60827255 30.26182175]
[-2.06907344 15.68533134]
[5.38349438 2.66768122]
[16.16169167 -7.76450348]
[29.41550255 -14.78849697]
[44.09967804 -17.85035706]
[59.05616379 -16.70861435]
[73.10542297 -11.45330906]
[85.13948059 -2.49889779]
[94.20927429 9.44843674]
[99.59952545 23.44647980]
[100.88494873 38.39474869]
[106.54773712 24.50472260]
[111.89891815 10.49169922]
[116.93583679 -3.63733029]
[121.97275543 -17.76635933]
[127.00966644 -31.89538956]
[124.35565186 -47.49240112]
[135.91743469 -56.88252640]
[140.95436096 -71.01155853]
[145.99127197 -85.14058685]
[150.60528564 -99.41331482]
[154.79229736 -113.81710052]
[158.97930908 -128.22088623]
[163.16630554 -142.62466431]
[167.35331726 -157.02844238]
[169.24661255 -171.90847778]
[168.80000305 -186.90182495]
[168.35340881 -201.89518738]
[167.90679932 -216.88853455]
[153.50677490 -221.62301636]
[141.59640503 -230.99949646]
[133.61389160 -243.88574219]
[130.52317810 -258.72567749]
[132.69747925 -273.72726440]
[139.87423706 -287.07904053]
[151.18682861 -297.16870117]
[165.26921082 -302.77786255]
[180.42083740 -303.22918701]
[194.81210327 -298.46817017]
[206.70520020 -289.06973267]
[214.66394043 -276.16879272]
[217.72731018 -261.32321167]
[215.52536011 -246.32563782]
[208.32400513 -232.98710632]
[196.99282837 -222.91831970]
[182.90014648 -217.33514404]
[183.34675598 -202.34178162]
[183.79336548 -187.34843445]
[184.23995972 -172.35508728]
[190.60742188 -185.93652344]
[200.36106873 -197.33241272]
[212.79678345 -205.72007751]
[227.01683044 -210.49400330]
[241.99464417 -211.30955505]
[256.64895630 -208.10784912]
[269.92187500 -201.12002563]
[280.85522461 -190.85055542]
[288.65966797 -178.04077148]
[292.77185059 -163.61544800]
[292.89489746 -148.61595154]
[289.01989746 -134.12510681]
[281.42663574 -121.18903351]
[270.66323853 -110.74158478]
[257.50674438 -103.53697205]
[242.90690613 -100.09529877]
[227.91772461 -100.66503906]
[213.62129211 -105.20504761]
[201.04965210 -113.38758087]
[191.11036682 -124.62193298]
[184.52098083 -138.09709167]
[181.75711060 -152.84143066]
[177.57009888 -138.43765259]
[173.38308716 -124.03386688]
[169.19607544 -109.63008881]
[165.00906372 -95.22630310]
[166.23941040 -92.70750427]
[166.54615784 -89.54957581]
[165.68087769 -86.10186005]
[163.52607727 -82.79711914]
[160.12030029 -80.10366821]
[155.08338928 -65.97463989]
[150.04646301 -51.84560776]
[153.06076050 -37.25920105]
[141.13870239 -26.85847282]
[136.10177612 -12.72944355]
[131.06486511 1.39958596]
[126.02795410 15.52861595]
[127.20073700 18.85381126]
[126.82118988 22.91225815]
[124.56224060 26.96817207]
[120.43775940 30.16750908]
[114.77497864 44.05753708]
[111.23530579 58.63391113]
[109.89707184 73.57409668]
[108.55883789 88.51428223]
[114.26682281 101.27791595]
[106.38134766 112.82395172]
[105.04311371 127.76413727]
[103.70487976 142.70433044]
[111.14996338 150.63397217]
[112.96453094 161.13577271]
[108.78739929 170.70132446]
[100.21907043 176.26879883]
[98.43660736 191.16250610]
[96.65413666 206.05622864]
[94.87167358 220.94995117]
[93.08921051 235.84365845]
[91.30673981 250.73738098]
[100.80113983 263.08624268]
[98.78130341 278.16519165]
[86.95004272 287.14053345]
[92.99263763 301.76235962]
[83.79776001 313.48004150]
[93.66783142 302.18481445]
[107.62290955 296.68429565]
[122.54539490 298.20727539]
[135.10156250 306.41351318]
[142.48634338 319.46975708]
[143.04994202 334.45916748]
[136.66645813 348.03308105]
[124.76198578 357.15905762]
[109.99600220 359.79830933]
[95.66727448 355.36126709]
[84.97686768 344.83914185]
[80.31304932 330.58258057]
[76.12603760 344.98635864]
[71.93902588 359.39013672]
[67.75202179 373.79391479]
[63.56500626 388.19769287]
[59.48534012 402.63226318]
[55.51324463 417.09677124]
[51.54114914 431.56130981]
[47.56904984 446.02581787]
[43.59695435 460.49035645]
[39.62485886 474.95486450]
[53.24470520 481.32730103]
[65.59159851 489.90997314]
[76.31029510 500.45593262]
[85.09239960 512.66180420]
[91.68523407 526.17633057]
[95.89910126 540.61071777]
[97.61276245 555.54962158]
[96.77692413 570.56329346]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 202]
[28 201]
[29 200]
[30 199]
[31 198]
[32 197]
[34 196]
[35 195]
[36 194]
[37 193]
[38 192]
[39 180]
[41 178]
[44 175]
[45 174]
[46 173]
[47 172]
[48 171]
[49 170]
[51 166]
[52 165]
[53 164]
[55 162]
[56 161]
[57 160]
[78 159]
[79 158]
[80 154]
[81 153]
[82 152]
[83 151]
[85 149]
[86 148]
[87 147]
[88 142]
[89 141]
[90 140]
[91 139]
[92 138]
[93 116]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
