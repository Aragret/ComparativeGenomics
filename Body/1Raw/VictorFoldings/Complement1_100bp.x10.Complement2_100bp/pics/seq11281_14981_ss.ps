%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUGxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[98.42018890 499.38702393]
[85.96139526 491.01171875]
[74.38353729 481.45559692]
[63.79809952 470.81060791]
[54.30704117 459.17935181]
[46.00176239 446.67376709]
[38.96225739 433.41436768]
[33.25631332 419.52877808]
[28.93888664 405.15078735]
[26.05155754 390.41885376]
[24.62213326 375.47485352]
[24.66438103 360.46267700]
[26.17789268 345.52694702]
[29.14809227 330.81149292]
[33.54637527 316.45803833]
[39.33037949 302.60479736]
[46.44440460 289.38522339]
[54.81993866 276.92657471]
[64.37631226 265.34890747]
[75.02149200 254.76370239]
[86.65295410 245.27287292]
[99.15869141 236.96783447]
[112.41824341 229.92860413]
[126.30393219 224.22293091]
[140.68200684 219.90579224]
[137.79673767 205.18589783]
[134.91145325 190.46601868]
[132.02618408 175.74612427]
[126.77947235 161.69364929]
[119.31172943 148.68469238]
[111.84398651 135.67575073]
[104.37624359 122.66679382]
[96.90850830 109.65783691]
[90.48332214 104.79064178]
[89.42807007 96.39913940]
[82.15484619 83.28044891]
[74.88161469 70.16175079]
[71.71984100 84.82473755]
[60.62047577 94.91454315]
[45.72330475 96.66790771]
[32.58460617 89.43087769]
[26.10478783 75.90268707]
[28.70066452 61.12901688]
[39.40403748 50.62007523]
[54.22280884 48.29544067]
[67.63078308 55.02296448]
[61.96799850 41.13293839]
[56.30521393 27.24291229]
[50.33364868 13.48280907]
[44.05628967 -0.14050750]
[37.77892685 -13.76382351]
[31.50156784 -27.38714027]
[17.41517830 -22.20894623]
[2.96190572 -18.16629601]
[-11.76686764 -15.28474617]
[-26.67802238 -13.58251858]
[-41.67728043 -13.07037354]
[-56.66981506 -13.75154877]
[-71.56083679 -15.62173843]
[-86.25619507 -18.66911697]
[-100.66297913 -22.87442017]
[-114.69010925 -28.21105766]
[-128.24890137 -34.64529037]
[-141.25361633 -42.13644028]
[-153.62205505 -50.63714218]
[-165.27600098 -60.09365082]
[-176.14178467 -70.44618225]
[-186.15069580 -81.62928009]
[-195.23947144 -93.57224274]
[-203.35063171 -106.19956207]
[-210.43290710 -119.43139648]
[-216.44151306 -133.18409729]
[-221.33847046 -147.37071228]
[-225.09280396 -161.90153503]
[-227.68077087 -176.68472290]
[-229.08604431 -191.62678528]
[-229.29971313 -206.63327026]
[-228.32041931 -221.60928345]
[-226.15437317 -236.46015930]
[-222.81526184 -251.09197998]
[-218.32420349 -265.41226196]
[-212.70957947 -279.33044434]
[-206.00689697 -292.75857544]
[-198.25852966 -305.61169434]
[-189.51345825 -317.80856323]
[-179.82699585 -329.27209473]
[-169.26036072 -339.92977905]
[-157.88037109 -349.71426392]
[-145.75897217 -358.56365967]
[-132.97279358 -366.42202759]
[-119.60269165 -373.23965454]
[-105.73318481 -378.97351074]
[-91.45196533 -383.58728027]
[-76.84931946 -387.05178833]
[-62.01758194 -389.34518433]
[-47.05051804 -390.45294189]
[-32.04275894 -390.36804199]
[-17.08918571 -389.09103394]
[-2.28434324 -386.62997437]
[12.27816582 -383.00045776]
[26.50627327 -378.22540283]
[40.31002045 -372.33502197]
[53.60213470 -365.36654663]
[66.29858398 -357.36401367]
[78.31908417 -348.37805176]
[89.58764648 -338.46545410]
[100.03302765 -327.68890381]
[109.58917999 -316.11651611]
[118.19569397 -303.82147217]
[125.79814911 -290.88150024]
[132.34848022 -277.37841797]
[137.80528259 -263.39761353]
[142.13403320 -249.02743530]
[145.30738831 -234.35876465]
[147.30528259 -219.48432922]
[148.11506653 -204.49819946]
[147.73162842 -189.49510193]
[146.15740967 -174.56988525]
[143.40234375 -159.81692505]
[139.48384094 -145.32949829]
[134.42669678 -131.19920349]
[128.26289368 -117.51536560]
[121.03136444 -104.36450195]
[112.77785492 -91.82975769]
[103.55455017 -79.99039459]
[93.41974640 -68.92124939]
[82.43753815 -58.69231415]
[70.67734528 -49.36825943]
[58.21352768 -41.00803757]
[45.12488556 -33.66450119]
[51.40224457 -20.04118347]
[57.67960739 -6.41786814]
[63.95696640 7.20544815]
[67.12032318 8.76285458]
[69.68650055 11.92983818]
[70.90720367 16.40903282]
[70.19523621 21.58012581]
[75.85802460 35.47015381]
[81.52081299 49.36017990]
[88.00030518 62.88852310]
[95.27353668 76.00721741]
[102.54676819 89.12591553]
[109.91745758 102.19010162]
[117.38520050 115.19905090]
[124.85294342 128.20800781]
[132.32067871 141.21694946]
[139.78842163 154.22590637]
[138.93975830 139.24993896]
[141.94403076 124.55387115]
[148.60197449 111.11244965]
[158.47200012 99.81719208]
[170.89944458 91.41728210]
[185.06005859 86.46984100]
[200.01460266 85.30302429]
[214.77120972 87.99421692]
[228.35112000 94.36492920]
[239.85363770 103.99260712]
[248.51582336 116.23868561]
[253.76316833 130.29092407]
[255.24760437 145.21730042]
[252.87071228 160.02777100]
[246.79011536 173.74005127]
[237.40911865 185.44461060]
[225.34994507 194.36517334]
[211.41241455 199.91003418]
[196.52098083 201.71144104]
[181.66331482 199.64990234]
[167.82489014 193.86216736]
[155.92355347 184.73210144]
[146.74607849 172.86083984]
[149.63134766 187.58073425]
[152.51661682 202.30062866]
[155.40190125 217.02052307]
[170.34582520 215.59019470]
[185.35798645 215.63154602]
[200.29380798 217.14416504]
[215.00944519 220.11347961]
[229.36317444 224.51089478]
[243.21675110 230.29408264]
[256.43676758 237.40730286]
[268.89590454 245.78208923]
[280.47415161 255.33776855]
[291.05999756 265.98233032]
[300.55151367 277.61322021]
[308.85729980 290.11843872]
[315.89733887 303.37759399]
[321.60385132 317.26290894]
[325.92184448 331.64074707]
[328.80975342 346.37255859]
[330.23977661 361.31652832]
[330.19812012 376.32867432]
[328.68521118 391.26446533]
[325.71560669 405.98004150]
[321.31790161 420.33370972]
[315.53445435 434.18716431]
[308.42095947 447.40704346]
[300.04592896 459.86599731]
[290.48999023 471.44403076]
[279.84524536 482.02969360]
[268.21417236 491.52096558]
[255.70875549 499.82650757]
[242.44947815 506.86627197]
[228.56402588 512.57250977]
[214.18612671 516.89019775]
[199.45423889 519.77783203]
[184.51025391 521.20758057]
[169.49809265 521.16558838]
[154.56233215 519.65240479]
[139.84681702 516.68249512]
[125.49326324 512.28448486]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 173]
[26 172]
[27 171]
[28 170]
[29 147]
[30 146]
[31 145]
[32 144]
[33 143]
[35 142]
[36 141]
[37 140]
[46 139]
[47 138]
[48 137]
[49 133]
[50 132]
[51 131]
[52 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
