%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[170.77560425 626.67596436]
[167.39111328 612.03936768]
[165.98773193 597.08233643]
[166.59053040 582.07165527]
[169.18873596 567.27526855]
[173.73599243 552.95727539]
[180.15113831 539.37310791]
[188.31968689 526.76519775]
[198.09587097 515.35864258]
[209.30520630 505.35696411]
[221.74766541 496.93859863]
[235.20118713 490.25384521]
[230.37519836 476.05139160]
[225.54919434 461.84893799]
[214.12849426 452.28768921]
[217.01443481 436.73193359]
[212.18844604 422.52947998]
[207.25685120 408.36334229]
[202.21992493 394.23431396]
[197.18301392 380.10528564]
[192.04106140 366.01412964]
[186.79434204 351.96166992]
[181.54762268 337.90921021]
[176.30090332 323.85671997]
[161.58915710 321.52642822]
[149.94163513 312.08230591]
[144.54949951 297.98297119]
[146.95442200 282.97921753]
[156.60940552 271.11630249]
[151.36268616 257.06384277]
[146.11596680 243.01135254]
[140.86924744 228.95887756]
[135.62252808 214.90641785]
[130.37580872 200.85394287]
[125.12909698 186.80146790]
[119.88237762 172.74899292]
[114.63565826 158.69653320]
[100.51734161 148.27346802]
[103.71580505 130.13922119]
[98.26044464 116.16641998]
[84.89817810 106.02610016]
[87.60864258 89.47225952]
[81.94585419 75.58223724]
[76.28306580 61.69220734]
[70.62027740 47.80218124]
[64.04025269 34.32244873]
[56.57250977 21.31349564]
[51.61900330 35.47198105]
[38.16519165 42.10484695]
[23.91802406 37.41248322]
[17.03893089 24.08288956]
[21.46856689 9.75186157]
[34.66943741 2.62886548]
[49.07873535 6.79368591]
[36.27630997 -2.50193334]
[37.97724533 -17.29909897]
[31.69988441 -30.92241478]
[25.42252350 -44.54573059]
[19.14516449 -58.16904831]
[12.86780262 -71.79236603]
[6.59044218 -85.41567993]
[0.31308162 -99.03899384]
[-5.96427917 -112.66230774]
[-18.76670265 -121.95793152]
[-17.06576729 -136.75509644]
[-23.34312820 -150.37841797]
[-29.62048912 -164.00172424]
[-30.01413536 -149.00689697]
[-33.47494507 -134.41159058]
[-39.85575867 -120.83642578]
[-48.88526917 -108.85861206]
[-60.17952728 -98.98745728]
[-73.25830078 -91.64269257]
[-87.56547546 -87.13661194]
[-102.49270630 -85.66082001]
[-117.40526581 -87.27806854]
[-131.66908264 -91.91958618]
[-144.67762756 -99.38802338]
[-155.87779236 -109.36581421]
[-164.79333496 -121.42869568]
[-171.04516602 -135.06375122]
[-174.36743164 -149.69120789]
[-174.61889648 -164.68910217]
[-171.78886414 -179.41970825]
[-165.99765015 -193.25668335]
[-157.49151611 -205.61166382]
[-146.63214111 -215.95932007]
[-133.88127136 -223.85966492]
[-119.78107452 -228.97674561]
[-104.93111420 -231.09301758]
[-89.96280670 -230.11846924]
[-75.51261139 -226.09455872]
[-62.19496155 -219.19236755]
[-50.57612991 -209.70538330]
[-41.15015411 -198.03701782]
[-34.31777191 -184.68322754]
[-34.54109955 -199.68156433]
[-34.76442719 -214.67990112]
[-48.78394699 -220.62741089]
[-59.16759872 -231.76741028]
[-64.11634827 -246.16983032]
[-62.77279663 -261.33935547]
[-55.36972046 -274.64779663]
[-43.18975067 -283.78936768]
[-28.34313583 -287.18023682]
[-13.40214634 -284.23291016]
[-0.95539659 -275.45803833]
[6.84063816 -262.37591553]
[8.63524818 -247.25311279]
[4.11750603 -232.70973206]
[-5.92986155 -221.26551819]
[-19.76608849 -214.90322876]
[-19.54276085 -199.90489197]
[-19.31943321 -184.90655518]
[-15.99717331 -170.27908325]
[-9.71981239 -156.65577698]
[-3.44245195 -143.03245544]
[8.91097260 -134.71127319]
[7.65903711 -118.93967438]
[13.93639755 -105.31635284]
[20.21375847 -91.69303894]
[26.49111938 -78.06972504]
[32.76847839 -64.44641113]
[39.04584122 -50.82308960]
[45.32320023 -37.19977570]
[51.60056305 -23.57645988]
[63.95398712 -15.25527096]
[62.70204926 0.51632500]
[69.58146667 13.84575462]
[77.04920197 26.85470581]
[79.27619171 12.02094364]
[89.08911133 0.67605311]
[103.44733429 -3.66462612]
[117.90180206 0.34391242]
[127.97364044 11.45957947]
[130.54197693 26.23806381]
[124.81100464 40.10009384]
[112.55650330 48.75036621]
[97.57566833 49.50849915]
[84.51030731 42.13939667]
[90.17309570 56.02942276]
[95.83587646 69.91944885]
[101.49866486 83.80947876]
[111.94190216 88.96505737]
[116.25827789 99.78218079]
[112.23324585 110.71105957]
[117.68859863 124.68386078]
[129.16641235 130.56794739]
[133.42253113 142.31823730]
[128.68812561 153.44981384]
[133.93484497 167.50228882]
[139.18156433 181.55474854]
[144.42828369 195.60722351]
[149.67500305 209.65969849]
[154.92172241 223.71217346]
[160.16844177 237.76463318]
[165.41516113 251.81710815]
[170.66188049 265.86956787]
[185.72895813 268.50210571]
[197.37846375 278.25842285]
[202.54606628 292.44158936]
[199.93801880 307.20825195]
[190.35337830 318.61001587]
[195.60009766 332.66247559]
[200.84680176 346.71496582]
[206.09352112 360.76742554]
[212.02694702 367.71237183]
[211.31204224 375.06835938]
[216.34895325 389.19738770]
[221.38587952 403.32641602]
[227.21524048 410.35894775]
[226.39089966 417.70349121]
[231.21688843 431.90594482]
[242.98277283 442.48300171]
[239.75164795 457.02291870]
[244.57765198 471.22537231]
[249.40365601 485.42782593]
[264.14468384 482.53207397]
[279.14016724 481.62701416]
[294.12246704 482.72879028]
[308.82421875 485.81774902]
[322.98306274 490.83877563]
[336.34631348 497.70220947]
[348.67547607 506.28564453]
[359.75054932 516.43585205]
[369.37384033 527.97167969]
[377.37365723 540.68725586]
[383.60720825 554.35571289]
[387.96325684 568.73309326]
[390.36404419 583.56274414]
[390.76675415 598.58013916]
[389.16418457 613.51715088]
[385.58493042 628.10729980]
[380.09289551 642.09020996]
[372.78604126 655.21624756]
[363.79483032 667.25128174]
[353.27966309 677.98040771]
[341.42822266 687.21228027]
[328.45202637 694.78204346]
[314.58261108 700.55468750]
[300.06753540 704.42712402]
[285.16580200 706.33026123]
[270.14337158 706.23016357]
[255.26834106 704.12860107]
[240.80615234 700.06304932]
[227.01490784 694.10614014]
[214.14073181 686.36407471]
[202.41337585 676.97515869]
[192.04212952 666.10681152]
[183.21209717 653.95306396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 177]
[13 176]
[14 175]
[16 173]
[17 172]
[18 170]
[19 169]
[20 168]
[21 166]
[22 165]
[23 164]
[24 163]
[29 158]
[30 157]
[31 156]
[32 155]
[33 154]
[34 153]
[35 152]
[36 151]
[37 150]
[39 147]
[40 146]
[42 143]
[43 142]
[44 141]
[45 140]
[46 130]
[47 129]
[54 128]
[56 126]
[57 125]
[58 124]
[59 123]
[60 122]
[61 121]
[62 120]
[63 119]
[65 117]
[66 116]
[67 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
