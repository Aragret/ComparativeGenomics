%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[114.37605286 428.91592407]
[106.82511902 415.94882202]
[100.13844299 402.51562500]
[94.34466553 388.67385864]
[89.46858215 374.48281860]
[85.53108978 360.00323486]
[82.54903412 345.29711914]
[80.53520203 330.42745972]
[79.49819946 315.45791626]
[79.44248199 300.45263672]
[80.36827850 285.47579956]
[82.27162170 270.59161377]
[85.14437103 255.86375427]
[88.97422028 241.35531616]
[93.74477386 227.12844849]
[99.43559265 213.24403381]
[106.02232361 199.76155090]
[113.47673798 186.73873901]
[121.76693726 174.23133850]
[130.85740662 162.29293823]
[140.70922852 150.97463989]
[130.06323242 140.40759277]
[115.57955170 136.93302917]
[111.23580170 121.71980286]
[100.58979034 111.15275574]
[89.86540985 100.66525269]
[79.06325531 90.25788116]
[68.26109314 79.85050964]
[57.45893860 69.44313812]
[46.65678406 59.03576279]
[31.35034370 55.03282547]
[27.55321121 40.63035965]
[16.75105476 30.22298813]
[5.94889784 19.81561470]
[-9.62746429 19.93681908]
[-20.43412971 9.22838211]
[-20.45368958 -5.62204552]
[-31.25584602 -16.02941895]
[-42.05800247 -26.43679237]
[-52.86015701 -36.84416580]
[-63.66231537 -47.25153732]
[-74.46446991 -57.65891266]
[-85.75705719 -47.77198410]
[-97.84743500 -38.87835693]
[-110.64849854 -31.04211617]
[-124.06800842 -24.31972122]
[-138.00927734 -18.75960732]
[-152.37185669 -14.40183544]
[-167.05226135 -11.27780437]
[-181.94471741 -9.41002369]
[-196.94192505 -8.81195068]
[-211.93582153 -9.48789406]
[-226.81837463 -11.43298435]
[-241.48236084 -14.63320732]
[-255.82211304 -19.06550217]
[-269.73431396 -24.69793701]
[-283.11874390 -31.48992920]
[-295.87893677 -39.39253616]
[-307.92297363 -48.34882736]
[-319.16406250 -58.29426193]
[-329.52120972 -69.15718842]
[-338.91979980 -80.85933685]
[-347.29211426 -93.31639099]
[-354.57785034 -106.43859100]
[-360.72445679 -120.13140106]
[-365.68768311 -134.29615784]
[-369.43176270 -148.83078003]
[-371.92974854 -163.63058472]
[-373.16357422 -178.58891296]
[-373.12442017 -193.59797668]
[-371.81253052 -208.54966736]
[-369.23736572 -223.33622742]
[-365.41748047 -237.85112000]
[-360.38040161 -251.98977661]
[-354.16238403 -265.65032959]
[-346.80828857 -278.73431396]
[-338.37109375 -291.14752197]
[-328.91156006 -302.80044556]
[-318.49783325 -313.60919189]
[-307.20501709 -323.49581909]
[-295.11441040 -332.38912964]
[-282.31314087 -340.22503662]
[-268.89346313 -346.94708252]
[-254.95204163 -352.50683594]
[-240.58934021 -356.86425781]
[-225.90885925 -359.98788452]
[-211.01635742 -361.85528564]
[-196.01913452 -362.45297241]
[-181.02525330 -361.77664185]
[-166.14274597 -359.83117676]
[-151.47885132 -356.63058472]
[-137.13920593 -352.19790649]
[-123.22714996 -346.56512451]
[-109.84290314 -339.77276611]
[-97.08290863 -331.86984253]
[-85.03910828 -322.91323853]
[-73.79827881 -312.96749878]
[-63.44140244 -302.10430908]
[-54.04310989 -290.40191650]
[-45.67111588 -277.94467163]
[-38.38574219 -264.82226562]
[-32.23947906 -251.12930298]
[-27.27661133 -236.96441650]
[-23.53289986 -222.42968750]
[-21.03531647 -207.62982178]
[-19.80185699 -192.67147827]
[-19.84140778 -177.66239929]
[-21.15368652 -162.71075439]
[-23.72923470 -147.92425537]
[-27.54949951 -133.40945435]
[-32.58695221 -119.27092743]
[-38.80529404 -105.61054993]
[-46.15972900 -92.52673340]
[-54.59725952 -80.11376190]
[-64.05709839 -68.46106720]
[-53.25494003 -58.05369568]
[-42.45278549 -47.64632034]
[-31.65062904 -37.23894882]
[-20.84847260 -26.83157539]
[-10.04631615 -16.42420197]
[4.79455280 -16.95730209]
[15.89773273 -6.55662584]
[16.35627174 9.01345730]
[27.15842819 19.42083168]
[37.96058273 29.82820320]
[52.49438095 33.08673477]
[57.06415558 48.23360443]
[67.86631012 58.64097977]
[78.66847229 69.04835510]
[89.47062683 79.45572662]
[100.27278137 89.86309814]
[107.80117798 92.74334717]
[111.15683746 100.50674438]
[121.80284882 111.07379150]
[137.04798889 115.30417633]
[140.63027954 129.76158142]
[151.27627563 140.32862854]
[162.52091980 130.39282227]
[174.39132690 121.21372223]
[186.83665466 112.83064270]
[199.80361938 105.27947998]
[213.23669434 98.59256744]
[227.07835388 92.79854584]
[241.26931763 87.92221069]
[255.74884033 83.98445892]
[270.45489502 81.00215149]
[285.32452393 78.98805237]
[300.29403687 77.95079041]
[315.29934692 77.89479828]
[330.27618408 78.82032776]
[345.16040039 80.72341156]
[359.88830566 83.59590149]
[374.39682007 87.42549896]
[388.62377930 92.19579315]
[402.50827026 97.88637543]
[415.99087524 104.47286224]
[429.01382446 111.92704773]
[441.52136230 120.21702576]
[453.45993042 129.30728149]
[464.77841187 139.15890503]
[475.42831421 149.72970581]
[485.36407471 160.97441101]
[494.54309082 172.84486389]
[502.92608643 185.29023743]
[510.47717285 198.25724792]
[517.16400146 211.69036865]
[522.95794678 225.53205872]
[527.83422852 239.72305298]
[531.77185059 254.20259094]
[534.75408936 268.90866089]
[536.76812744 283.77828979]
[537.80529785 298.74783325]
[537.86120605 313.75311279]
[536.93554688 328.72994995]
[535.03240967 343.61419678]
[532.15979004 358.34207153]
[528.33013916 372.85055542]
[523.55975342 387.07748413]
[517.86907959 400.96194458]
[511.28253174 414.44451904]
[503.82824707 427.46740723]
[495.53820801 439.97491455]
[486.44787598 451.91342163]
[476.59619141 463.23184204]
[466.02532959 473.88168335]
[454.78057861 483.81735229]
[442.91006470 492.99630737]
[430.46463013 501.37924194]
[417.49758911 508.93026733]
[404.06442261 515.61700439]
[390.22268677 521.41088867]
[376.03167725 526.28704834]
[361.55209351 530.22460938]
[346.84600830 533.20672607]
[331.97637939 535.22070312]
[317.00683594 536.25775146]
[302.00152588 536.31359863]
[287.02471924 535.38787842]
[272.14050293 533.48461914]
[257.41262817 530.61193848]
[242.90417480 526.78216553]
[228.67727661 522.01171875]
[214.79283142 516.32098389]
[201.31030273 509.73434448]
[188.28744507 502.27999878]
[175.77999878 493.98986816]
[163.84153748 484.89944458]
[152.52319336 475.04769897]
[141.87339783 464.47677612]
[131.93778992 453.23196411]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 137]
[22 136]
[24 134]
[25 133]
[26 131]
[27 130]
[28 129]
[29 128]
[30 127]
[32 125]
[33 124]
[34 123]
[37 120]
[38 119]
[39 118]
[40 117]
[41 116]
[42 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
