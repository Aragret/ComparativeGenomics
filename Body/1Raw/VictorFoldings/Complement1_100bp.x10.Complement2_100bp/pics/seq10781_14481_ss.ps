%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAAxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[293.31594849 95.29235077]
[293.09942627 110.28697968]
[291.72161865 125.21974182]
[289.19076538 140.00082397]
[285.52212524 154.54135132]
[280.73773193 168.75386047]
[274.86633301 182.55287170]
[267.94332886 195.85540771]
[260.01025391 208.58145142]
[251.11488342 220.65449524]
[241.31069946 232.00190735]
[230.65666199 242.55543518]
[219.21684265 252.25163269]
[207.06004333 261.03219604]
[194.25936890 268.84426880]
[180.89181519 275.64089966]
[167.03778076 281.38122559]
[152.78056335 286.03073120]
[138.20591736 289.56140137]
[123.40151215 291.95202637]
[108.45635986 293.18826294]
[93.46035004 293.26263428]
[78.50366974 292.17471313]
[63.67627716 289.93106079]
[49.06733322 286.54510498]
[34.76470184 282.03729248]
[20.85440063 276.43466187]
[7.42008877 269.77096558]
[-5.45744085 262.08621216]
[-17.70074081 253.42669678]
[-29.23617935 243.84445190]
[-39.99438095 233.39710999]
[-49.91064453 222.14750671]
[-58.92533493 210.16331482]
[-66.98423004 197.51657104]
[-74.03887939 184.28337097]
[-80.04683685 170.54327393]
[-84.97197723 156.37892151]
[-88.78469086 141.87550354]
[-91.46202850 127.12024689]
[-92.98789978 112.20188904]
[-93.35312653 97.21014404]
[-92.55551910 82.23517609]
[-90.59986115 67.36705017]
[-87.49791718 52.69517899]
[-83.26835632 38.30780411]
[-77.93659210 24.29145241]
[-71.53471375 10.73041630]
[-64.10120392 -2.29374552]
[-55.68078232 -14.70270348]
[-46.32408142 -26.42183113]
[-36.08737564 -37.38064575]
[-25.03223038 -47.51324463]
[-13.22513008 -56.75868607]
[-0.73708564 -65.06137085]
[12.35680008 -72.37136078]
[25.97777939 -78.64469147]
[40.04393387 -83.84364319]
[54.47066879 -87.93694305]
[69.17121887 -90.89997864]
[84.05717468 -92.71492767]
[99.03901672 -93.37086487]
[114.02663422 -92.86386108]
[128.92990112 -91.19696045]
[143.65917969 -88.38018036]
[158.12588501 -84.43046570]
[172.24301147 -79.37158203]
[185.92567444 -73.23393250]
[199.09156799 -66.05444336]
[211.66151428 -57.87628937]
[223.55992126 -48.74865723]
[234.71522522 -38.72643661]
[245.06034851 -27.86990356]
[254.53306580 -16.24435234]
[263.07641602 -3.91969728]
[276.02938843 -11.48407650]
[288.98239136 -19.04845428]
[301.93539429 -26.61283493]
[314.88839722 -34.17721176]
[327.84140015 -41.74159241]
[340.79440308 -49.30596924]
[353.74740601 -56.87034988]
[366.70037842 -64.43473053]
[379.65338135 -71.99910736]
[372.81219482 -85.35250092]
[366.71704102 -99.06248474]
[361.38635254 -113.08742523]
[356.83639526 -127.38471985]
[353.08093262 -141.91094971]
[350.13140869 -156.62200928]
[347.99673462 -171.47320557]
[346.68344116 -186.41944885]
[346.19552612 -201.41534424]
[346.53439331 -216.41534424]
[347.69909668 -231.37390137]
[349.68606567 -246.24557495]
[352.48925781 -260.98522949]
[356.10015869 -275.54806519]
[360.50784302 -289.88986206]
[365.69888306 -303.96707153]
[371.65750122 -317.73693848]
[378.36566162 -331.15768433]
[385.80291748 -344.18847656]
[393.94674683 -356.78979492]
[402.77236938 -368.92333984]
[412.25302124 -380.55227661]
[422.35986328 -391.64129639]
[433.06225586 -402.15670776]
[444.32766724 -412.06658936]
[456.12188721 -421.34082031]
[468.40908813 -429.95126343]
[481.15194702 -437.87173462]
[494.31179810 -445.07821655]
[507.84863281 -451.54879761]
[521.72137451 -457.26385498]
[535.88787842 -462.20599365]
[550.30517578 -466.36026001]
[564.92938232 -469.71395874]
[579.71612549 -472.25695801]
[594.62048340 -473.98153687]
[609.59729004 -474.88244629]
[624.60089111 -474.95693970]
[639.58587646 -474.20480347]
[654.50665283 -472.62832642]
[669.31793213 -470.23229980]
[683.97473145 -467.02395630]
[698.43249512 -463.01309204]
[712.64739990 -458.21188354]
[726.57623291 -452.63488770]
[740.17663574 -446.29904175]
[753.40740967 -439.22360229]
[766.22833252 -431.43005371]
[778.60040283 -422.94204712]
[790.48614502 -413.78540039]
[801.84942627 -403.98788452]
[812.65570068 -393.57928467]
[822.87219238 -382.59118652]
[832.46783447 -371.05694580]
[841.41351318 -359.01165771]
[849.68206787 -346.49182129]
[857.24835205 -333.53552246]
[864.08947754 -320.18206787]
[870.18457031 -306.47204590]
[875.51513672 -292.44708252]
[880.06500244 -278.14974976]
[883.82037354 -263.62350464]
[886.76977539 -248.91241455]
[888.90435791 -234.06120300]
[890.21752930 -219.11494446]
[890.70532227 -204.11904907]
[890.36633301 -189.11904907]
[889.20153809 -174.16050720]
[887.21447754 -159.28883362]
[884.41119385 -144.54922485]
[880.80017090 -129.98640442]
[876.39239502 -115.64463806]
[871.20129395 -101.56745911]
[865.24255371 -87.79762268]
[858.53430176 -74.37694550]
[851.09692383 -61.34619522]
[842.95300293 -48.74493790]
[834.12731934 -36.61145020]
[824.64660645 -24.98257256]
[814.53967285 -13.89362812]
[803.83715820 -3.37829256]
[792.57171631 6.53150034]
[780.77746582 15.80565357]
[768.49017334 24.41600418]
[755.74725342 32.33639908]
[742.58734131 39.54278564]
[729.05047607 46.01327896]
[715.17767334 51.72822952]
[701.01110840 56.67027664]
[686.59381104 60.82441711]
[671.96960449 64.17803192]
[657.18286133 66.72093201]
[642.27844238 68.44540405]
[627.30169678 69.34620667]
[612.29803467 69.42060089]
[597.31304932 68.66835785]
[582.39233398 67.09177399]
[567.58105469 64.69562531]
[552.92425537 61.48720169]
[538.46649170 57.47623444]
[524.25164795 52.67491150]
[510.32287598 47.09781265]
[496.72247314 40.76187515]
[483.49176025 33.68634415]
[470.67092896 25.89270210]
[458.29888916 17.40462303]
[446.41320801 8.24788284]
[435.05001831 -1.54970849]
[424.24383545 -11.95839596]
[414.02740479 -22.94656944]
[404.43185425 -34.48085785]
[395.48623657 -46.52622986]
[387.21777344 -59.04610825]
[374.26477051 -51.48173141]
[361.31176758 -43.91735077]
[348.35876465 -36.35297394]
[335.40576172 -28.78859329]
[322.45278931 -21.22421455]
[309.49978638 -13.65983582]
[296.54678345 -6.09545660]
[283.59378052 1.46892238]
[270.64077759 9.03330135]
[277.17684937 22.53016663]
[282.64739990 36.49294281]
[287.01947021 50.83765793]
[290.26678467 65.47803497]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[75 206]
[76 205]
[77 204]
[78 203]
[79 202]
[80 201]
[81 200]
[82 199]
[83 198]
[84 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
