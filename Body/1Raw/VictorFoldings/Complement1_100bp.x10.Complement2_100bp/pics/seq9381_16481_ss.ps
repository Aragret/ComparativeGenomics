%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[7.21659851 407.93307495]
[11.74075031 422.25741577]
[14.35643578 437.04974365]
[15.01889801 452.05694580]
[13.71679878 467.02224731]
[10.47242069 481.68951416]
[5.34127903 495.80780029]
[-1.58882582 509.13555908]
[-10.19931126 521.44470215]
[-20.34283829 532.52453613]
[-31.84584236 542.18560791]
[-44.51148605 550.26251221]
[-58.12305069 556.61706543]
[-72.44761658 561.14056396]
[-87.24007416 563.75555420]
[-102.24731445 564.41729736]
[-117.21253204 563.11444092]
[-131.87965393 559.86938477]
[-145.99771118 554.73760986]
[-159.32511902 547.80682373]
[-171.63383484 539.19573975]
[-182.71324158 529.05169678]
[-192.37373352 517.54827881]
[-200.45004272 504.88223267]
[-206.80395508 491.27035522]
[-211.32673645 476.94558716]
[-213.94102478 462.15298462]
[-214.60205078 447.14572144]
[-213.29852295 432.18057251]
[-210.05274963 417.51361084]
[-204.92027283 403.39578247]
[-197.98889160 390.06869507]
[-189.37724304 377.76040649]
[-179.23265076 366.68148804]
[-167.72872925 357.02151489]
[-155.06231689 348.94583130]
[-141.45014954 342.59255981]
[-127.12515259 338.07046509]
[-112.33244324 335.45687866]
[-97.32514954 334.79656982]
[-82.36005402 336.10079956]
[-67.69324493 339.34725952]
[-53.57567596 344.48043823]
[-40.24892426 351.41244507]
[-31.65036011 339.12161255]
[-23.05179596 326.83074951]
[-14.45323181 314.53991699]
[-5.85466814 302.24908447]
[2.74389601 289.95825195]
[11.06583977 277.47845459]
[19.10701180 264.81591797]
[27.14818573 252.15341187]
[26.94240761 234.60562134]
[43.33401871 226.21536255]
[49.91404724 212.73562622]
[55.16076660 198.68315125]
[60.40748596 184.63067627]
[65.65420532 170.57821655]
[56.06955338 159.17645264]
[53.46150970 144.40980530]
[58.62910843 130.22662354]
[70.27861023 120.47030640]
[85.34569550 117.83777618]
[90.59241486 103.78530884]
[90.23749542 95.73257446]
[96.02327728 89.56364441]
[101.47863007 75.59085083]
[106.93399048 61.61804962]
[112.38934326 47.64525223]
[117.84470367 33.67245483]
[123.30006409 19.69965744]
[109.16325378 24.71470642]
[95.56212616 18.38941574]
[90.28801727 4.34720135]
[96.36218262 -9.36791992]
[110.30505371 -14.89930344]
[124.12953186 -9.07832146]
[129.91632080 4.75955343]
[136.59651184 -8.67082214]
[143.27670288 -22.10119820]
[149.95689392 -35.53157425]
[156.63710022 -48.96195221]
[163.31729126 -62.39232635]
[169.99748230 -75.82270050]
[175.96903992 -89.58280182]
[173.54754639 -105.21760559]
[185.24784851 -114.43454742]
[190.49456787 -128.48701477]
[195.74128723 -142.53948975]
[195.81124878 -151.67366028]
[201.17214966 -156.76115417]
[198.98368835 -172.43026733]
[210.81991577 -181.47200012]
[216.27528381 -195.44479370]
[221.73063660 -209.41758728]
[227.18598938 -223.39038086]
[232.64135742 -237.36318970]
[219.58715820 -244.80670166]
[207.75593567 -254.07168579]
[197.39984131 -264.96063232]
[188.73962402 -277.24145508]
[181.95988464 -290.65237427]
[177.20512390 -304.90756226]
[174.57670593 -319.70312500]
[174.13063049 -334.72375488]
[175.87643433 -349.64923096]
[179.77688599 -364.16143799]
[185.74884033 -377.95108032]
[193.66503906 -390.72415161]
[203.35670471 -402.20846558]
[214.61729431 -412.15921021]
[227.20675659 -420.36425781]
[240.85678101 -426.64874268]
[255.27639771 -430.87872314]
[270.15823364 -432.96401978]
[285.18511963 -432.86019897]
[300.03671265 -430.56945801]
[314.39651489 -426.14059448]
[327.95837402 -419.66809082]
[340.43325806 -411.28982544]
[351.55526733 -401.18444824]
[361.08731079 -389.56729126]
[368.82623291 -376.68603516]
[374.60705566 -362.81521606]
[378.30661011 -348.25048828]
[379.84597778 -333.30230713]
[379.19238281 -318.28927612]
[376.35974121 -303.53143311]
[371.40844727 -289.34332275]
[364.44403076 -276.02737427]
[355.61492920 -263.86740112]
[345.10934448 -253.12258911]
[333.15121460 -244.02200317]
[319.99542236 -236.75958252]
[305.92236328 -231.49014282]
[291.23202515 -228.32601929]
[276.23751831 -227.33462524]
[261.25845337 -228.53710938]
[246.61415100 -231.90782166]
[241.15879822 -217.93502808]
[235.70343018 -203.96223450]
[230.24807739 -189.98944092]
[224.79272461 -176.01663208]
[227.37138367 -161.34695435]
[215.14494324 -151.30580139]
[209.79376221 -137.29277039]
[204.54704285 -123.24030304]
[199.30032349 -109.18782806]
[202.09710693 -94.55815887]
[190.02151489 -84.33609009]
[203.63143921 -90.64244080]
[218.14321899 -86.84664154]
[226.92227173 -74.68407440]
[225.95494080 -59.71529388]
[215.68347168 -48.78383636]
[200.80383301 -46.88740921]
[188.11880493 -54.89303970]
[183.42785645 -69.14250946]
[176.74766541 -55.71213150]
[170.06747437 -42.28175735]
[163.38728333 -28.85137939]
[156.70707703 -15.42100430]
[150.02688599 -1.99062788]
[143.34669495 11.43974781]
[137.27285767 25.15501404]
[131.81750488 39.12781143]
[126.36214447 53.10060883]
[120.90678406 67.07341003]
[115.45143127 81.04620361]
[109.99607086 95.01900482]
[104.64488983 109.03202820]
[99.39817047 123.08449554]
[109.05314636 134.94740295]
[111.45806885 149.95118713]
[106.06594086 164.05052185]
[94.41841125 173.49462891]
[79.70667267 175.82493591]
[74.45995331 189.87739563]
[69.21323395 203.92987061]
[63.96651840 217.98234558]
[75.79320526 208.75578308]
[90.33033752 205.05822754]
[105.12814331 207.51280212]
[117.69293976 215.70584106]
[125.90733337 228.25668335]
[128.38705444 243.05029297]
[124.71423340 257.59368896]
[115.50779724 269.43606567]
[102.31919861 276.58172607]
[87.37094116 277.82656860]
[73.18206787 272.96075439]
[62.14366531 262.80432129]
[56.11588669 249.06874084]
[56.11486435 234.06710815]
[58.34730911 246.77061462]
[51.54444504 257.25415039]
[39.81071091 260.19458008]
[31.76953697 272.85711670]
[23.72836494 285.51962280]
[23.50998878 290.73492432]
[21.51267624 294.92587280]
[18.42451477 297.58639526]
[15.03473377 298.55682373]
[6.43617010 310.84765625]
[-2.16239405 323.13848877]
[-10.76095772 335.42932129]
[-19.35952187 347.72015381]
[-27.95808601 360.01101685]
[-16.87771797 370.15399170]
[-7.21611738 381.65655518]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 208]
[45 207]
[46 206]
[47 205]
[48 204]
[49 203]
[50 199]
[51 198]
[52 197]
[54 194]
[55 180]
[56 179]
[57 178]
[58 177]
[63 172]
[64 171]
[66 170]
[67 169]
[68 168]
[69 167]
[70 166]
[71 165]
[78 164]
[79 163]
[80 162]
[81 161]
[82 160]
[83 159]
[84 158]
[85 150]
[87 148]
[88 147]
[89 146]
[91 145]
[93 143]
[94 142]
[95 141]
[96 140]
[97 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
