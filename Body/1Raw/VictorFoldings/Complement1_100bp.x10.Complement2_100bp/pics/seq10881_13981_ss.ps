%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGGxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[96.72655487 515.03765869]
[86.02182007 504.52172852]
[76.05967712 493.29974365]
[66.88658142 481.42410278]
[58.54529190 468.95016479]
[51.07470322 455.93603516]
[44.50965118 442.44244385]
[38.88074493 428.53231812]
[34.21422195 414.27044678]
[30.53184700 399.72341919]
[27.85078812 384.95895386]
[26.18354416 370.04598999]
[25.53788757 355.05398560]
[25.91683197 340.05288696]
[27.31860924 325.11260986]
[29.73668289 310.30282593]
[33.15977859 295.69259644]
[37.57193756 281.35000610]
[42.95258713 267.34194946]
[49.27663803 253.73376465]
[56.51460648 240.58885193]
[64.63274384 227.96853638]
[73.59320831 215.93164062]
[83.35420990 204.53428650]
[93.87023926 193.82962036]
[105.09226990 183.86755371]
[116.96797943 174.69453430]
[129.44198608 166.35333252]
[121.97425079 153.34437561]
[114.50650787 140.33541870]
[107.03877258 127.32646942]
[99.57102966 114.31752014]
[87.57736206 107.13116455]
[87.42002106 93.15022278]
[79.95227814 80.14126587]
[72.48453522 67.13231659]
[59.04828262 73.81082916]
[45.23667145 79.67384338]
[31.09914780 84.70037079]
[16.68632126 88.87241364]
[2.04978609 92.17504120]
[-12.75806332 94.59643555]
[-27.68421745 96.12791443]
[-42.67524338 96.76400757]
[-57.67748260 96.50242615]
[-72.63722229 95.34412384]
[-87.50091553 93.29323578]
[-102.21535492 90.35710144]
[-116.72785950 86.54623413]
[-130.98648071 81.87428284]
[-144.94018555 76.35796356]
[-158.53900146 70.01702881]
[-171.73428345 62.87417221]
[-184.47875977 54.95496750]
[-196.72682190 46.28776169]
[-208.43461609 36.90357971]
[-219.56025696 26.83602142]
[-230.06388855 16.12111855]
[-239.90792847 4.79723263]
[-249.05714417 -7.09510136]
[-257.47875977 -19.51331139]
[-265.14263916 -32.41294479]
[-272.02133179 -45.74781799]
[-278.09024048 -59.47020340]
[-283.32763672 -73.53097534]
[-287.71475220 -87.87979889]
[-291.23590088 -102.46530151]
[-293.87847900 -117.23528290]
[-295.63299561 -132.13687134]
[-296.49322510 -147.11669922]
[-296.45602417 -162.12117004]
[-295.52157593 -177.09657288]
[-293.69320679 -191.98927307]
[-290.97744751 -206.74597168]
[-287.38403320 -221.31384277]
[-282.92584229 -235.64074707]
[-277.61880493 -249.67538452]
[-271.48196411 -263.36752319]
[-264.53723145 -276.66812134]
[-256.80950928 -289.52960205]
[-248.32644653 -301.90591431]
[-239.11840820 -313.75274658]
[-229.21835327 -325.02770996]
[-218.66172791 -335.69039917]
[-207.48632812 -345.70269775]
[-195.73214722 -355.02871704]
[-183.44126892 -363.63510132]
[-170.65769958 -371.49105835]
[-157.42718506 -378.56838989]
[-143.79708862 -384.84185791]
[-129.81622314 -390.28894043]
[-115.53461456 -394.89016724]
[-101.00339508 -398.62902832]
[-86.27458191 -401.49218750]
[-71.40090942 -403.46936035]
[-56.43560791 -404.55349731]
[-41.43225861 -404.74072266]
[-26.44456863 -404.03033447]
[-11.52618980 -402.42486572]
[3.26947498 -399.93011475]
[17.88945961 -396.55496216]
[32.28142929 -392.31152344]
[46.39385986 -387.21499634]
[60.17623901 -381.28356934]
[73.57922363 -374.53854370]
[86.55484009 -367.00402832]
[99.05662537 -358.70700073]
[111.03984070 -349.67715454]
[122.46158600 -339.94683838]
[133.28097534 -329.55084229]
[143.45927429 -318.52642822]
[152.96003723 -306.91302490]
[161.74926758 -294.75222778]
[169.79550171 -282.08758545]
[177.06993103 -268.96438599]
[183.54652405 -255.42964172]
[189.20207214 -241.53178406]
[194.01635742 -227.32058716]
[197.97213745 -212.84690857]
[201.05523682 -198.16256714]
[203.25463867 -183.32011414]
[204.56245422 -168.37271118]
[204.97401428 -153.37384033]
[204.48783875 -138.37719727]
[203.10566711 -123.43647766]
[200.83245850 -108.60515594]
[197.67633057 -93.93633270]
[193.64860535 -79.48251343]
[188.76368713 -65.29544067]
[183.03904724 -51.42589951]
[176.49520874 -37.92354202]
[169.15557861 -24.83670235]
[161.04644775 -12.21222782]
[152.19682312 -0.09531058]
[142.63839722 11.47067261]
[132.40538025 22.44431877]
[121.53440857 32.78634644]
[110.06439209 42.45972824]
[98.03639984 51.42984390]
[85.49349213 59.66457367]
[92.96122742 72.67353058]
[100.42897034 85.68247986]
[112.42263794 92.86883545]
[112.57997894 106.84977722]
[120.04772186 119.85873413]
[127.51546478 132.86769104]
[134.98320007 145.87663269]
[142.45094299 158.88558960]
[155.94439697 152.32026672]
[169.85443115 146.69107056]
[184.11618042 142.02426147]
[198.66316223 138.34159851]
[213.42755127 135.66024780]
[228.34049988 133.99270630]
[243.33248901 133.34674072]
[258.33358765 133.72538757]
[273.27389526 135.12686157]
[288.08374023 137.54463196]
[302.69403076 140.96743774]
[317.03671265 145.37930298]
[331.04486084 150.75967407]
[344.65319824 157.08345032]
[357.79824829 164.32116699]
[370.41873169 172.43904114]
[382.45581055 181.39926147]
[393.85336304 191.16003418]
[404.55822754 201.67585754]
[414.52050781 212.89767456]
[423.69378662 224.77320862]
[432.03521729 237.24705505]
[439.50598145 250.26106262]
[446.07122803 263.75454712]
[451.70031738 277.66464233]
[456.36703491 291.92642212]
[460.04959106 306.47341919]
[462.73086548 321.23782349]
[464.39831543 336.15078735]
[465.04415894 351.14276123]
[464.66540527 366.14389038]
[463.26385498 381.08416748]
[460.84597778 395.89398193]
[457.42306519 410.50427246]
[453.01110840 424.84692383]
[447.63064575 438.85504150]
[441.30676270 452.46331787]
[434.06896973 465.60830688]
[425.95101929 478.22875977]
[416.99072266 490.26577759]
[407.22985840 501.66323853]
[396.71395874 512.36804199]
[385.49206543 522.33026123]
[373.61648560 531.50347900]
[361.14257812 539.84484863]
[348.12854004 547.31549072]
[334.63497925 553.88061523]
[320.72488403 559.50964355]
[306.46307373 564.17626953]
[291.91601562 567.85870361]
[277.15161133 570.53991699]
[262.23864746 572.20721436]
[247.24664307 572.85296631]
[232.24554443 572.47412109]
[217.30525208 571.07244873]
[202.49545288 568.65447998]
[187.88519287 565.23150635]
[173.54258728 560.81945801]
[159.53450012 555.43890381]
[145.92625427 549.11492920]
[132.78131104 541.87701416]
[120.16092682 533.75897217]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 148]
[29 147]
[30 146]
[31 145]
[32 144]
[34 142]
[35 141]
[36 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
