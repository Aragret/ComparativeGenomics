%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[74.61838531 284.15155029]
[69.54335785 298.27246094]
[63.57402420 312.03918457]
[56.73491287 325.39517212]
[49.05413437 338.28552246]
[40.56324387 350.65728760]
[31.29713440 362.45959473]
[21.29388237 373.64401245]
[10.59459591 384.16448975]
[-0.75676167 393.97787476]
[-12.71354389 403.04379272]
[-25.22661591 411.32504272]
[-38.24456024 418.78750610]
[-51.71388626 425.40060425]
[-65.57923889 431.13714600]
[-79.78364563 435.97351074]
[-94.26873779 439.88986206]
[-108.97498322 442.87011719]
[-123.84196472 444.90197754]
[-138.80857849 445.97717285]
[-153.81333923 446.09121704]
[-168.79457092 445.24365234]
[-183.69071960 443.43798828]
[-198.44058228 440.68164062]
[-212.98352051 436.98593140]
[-227.25979614 432.36602783]
[-241.21075439 426.84091187]
[-254.77903748 420.43331909]
[-267.90890503 413.16958618]
[-280.54641724 405.07952881]
[-292.63961792 396.19638062]
[-304.13885498 386.55670166]
[-314.99679565 376.20004272]
[-325.16891479 365.16900635]
[-334.61334229 353.50888062]
[-343.29132080 341.26760864]
[-351.16714478 328.49551392]
[-358.20849609 315.24502563]
[-364.38638306 301.57061768]
[-369.67547607 287.52850342]
[-374.05401611 273.17636108]
[-377.50399780 258.57315063]
[-380.01126099 243.77893066]
[-381.56552124 228.85444641]
[-382.16033936 213.86105347]
[-381.79333496 198.86036682]
[-380.46594238 183.91400146]
[-378.18368530 169.08338928]
[-374.95590210 154.42947388]
[-370.79589844 140.01248169]
[-365.72070312 125.89163971]
[-359.75122070 112.12497711]
[-352.91195679 98.76907349]
[-345.23101807 85.87879944]
[-336.73999023 73.50713348]
[-327.47375488 61.70491409]
[-317.47039795 50.52062988]
[-306.77099609 40.00024796]
[-295.41952515 30.18699837]
[-283.46264648 21.12120438]
[-270.94946289 12.84011936]
[-257.93145752 5.37777328]
[-244.46205139 -1.23517013]
[-230.59663391 -6.97153616]
[-216.39216614 -11.80775261]
[-201.90704346 -15.72394657]
[-187.20075989 -18.70402527]
[-172.33375549 -20.73574257]
[-157.36712646 -21.81074905]
[-142.36236572 -21.92462921]
[-127.38114166 -21.07691383]
[-112.48500824 -19.27108765]
[-97.73519135 -16.51456833]
[-83.19228363 -12.81868553]
[-68.91605377 -8.19862556]
[-54.96516800 -2.67337418]
[-41.39694595 3.73436451]
[-28.26715279 10.99825954]
[-15.62973690 19.08846283]
[-3.53662848 27.97172737]
[7.96247864 37.61154938]
[18.82033157 47.96832275]
[28.99231339 58.99948120]
[38.43662262 70.65969849]
[47.11445236 82.90106201]
[54.99014282 95.67326355]
[62.03133392 108.92382050]
[75.70100403 102.74805450]
[89.37067413 96.57228088]
[102.99398804 90.29492188]
[116.57019806 83.91632080]
[130.14640808 77.53771210]
[143.72261047 71.15911102]
[150.15893555 64.67748260]
[157.54876709 64.78828430]
[171.21842957 58.61251450]
[184.88810730 52.43674850]
[198.55776978 46.26097870]
[193.31674194 32.20023727]
[189.03691101 17.81774902]
[185.73779297 3.17914176]
[183.43446350 -11.64879131]
[182.13742065 -26.59839439]
[181.85258484 -41.60145569]
[182.58125305 -56.58951569]
[184.32011414 -71.49419403]
[187.06121826 -86.24747467]
[190.79205322 -100.78204346]
[195.49562073 -115.03158569]
[201.15043640 -128.93107605]
[207.73069763 -142.41711426]
[215.20640564 -155.42814636]
[223.54342651 -167.90480042]
[232.70372009 -179.79016113]
[242.64550781 -191.02999878]
[253.32341003 -201.57301331]
[264.68872070 -211.37112427]
[276.68954468 -220.37960815]
[289.27117920 -228.55735779]
[302.37619019 -235.86706543]
[315.94476318 -242.27537537]
[329.91503906 -247.75305176]
[344.22320557 -252.27510071]
[358.80401611 -255.82087708]
[373.59097290 -258.37423706]
[388.51654053 -259.92346191]
[403.51263428 -260.46157837]
[418.51086426 -259.98605347]
[433.44277954 -258.49908447]
[448.24023438 -256.00744629]
[462.83572388 -252.52252197]
[477.16265869 -248.06021118]
[491.15563965 -242.64086914]
[504.75082397 -236.28921509]
[517.88623047 -229.03424072]
[530.50183105 -220.90905762]
[542.54016113 -211.95072937]
[553.94628906 -202.20011902]
[564.66802979 -191.70173645]
[574.65661621 -180.50347900]
[583.86645508 -168.65643311]
[592.25543213 -156.21467590]
[599.78540039 -143.23493958]
[606.42187500 -129.77648926]
[612.13458252 -115.90070343]
[616.89758301 -101.67090607]
[620.68902588 -87.15202332]
[623.49163818 -72.41030884]
[625.29266357 -57.51301956]
[626.08386230 -42.52812958]
[625.86163330 -27.52400970]
[624.62695312 -12.56912613]
[622.38549805 2.26828766]
[619.14752197 16.92053032]
[614.92773438 31.32074928]
[609.74536133 45.40323639]
[603.62414551 59.10373688]
[596.59197998 72.35973358]
[588.68096924 85.11074829]
[579.92712402 97.29859924]
[570.37048340 108.86767578]
[560.05462646 119.76519012]
[549.02661133 129.94142151]
[537.33673096 139.34992981]
[525.03839111 147.94778442]
[512.18762207 155.69577026]
[498.84313965 162.55851746]
[485.06576538 168.50473022]
[470.91842651 173.50726318]
[456.46563721 177.54328918]
[441.77331543 180.59440613]
[426.90856934 182.64668274]
[411.93917847 183.69075012]
[396.93344116 183.72186279]
[381.95983887 182.73985291]
[367.08670044 180.74923706]
[352.38186646 177.75906372]
[337.91247559 173.78298950]
[323.74450684 168.83915710]
[309.94259644 162.95011902]
[296.56976318 156.14274597]
[283.68701172 148.44812012]
[271.35311890 139.90132141]
[259.62432861 130.54135132]
[248.55421448 120.41094208]
[238.19325256 109.55628967]
[228.58871460 98.02693939]
[219.78445435 85.87548828]
[211.82061768 73.15737915]
[204.73353577 59.93064880]
[191.06387329 66.10641479]
[177.39419556 72.28218842]
[163.72453308 78.45795441]
[150.10121155 84.73531342]
[136.52500916 91.11392212]
[122.94879913 97.49252319]
[109.37259674 103.87113190]
[103.99613953 109.87665558]
[95.54644012 110.24195099]
[81.87677002 116.41772461]
[68.20709991 122.59349060]
[73.49634552 136.63555908]
[77.87503815 150.98765564]
[81.32518768 165.59080505]
[83.83261871 180.38500977]
[85.38703156 195.30946350]
[85.98203278 210.30285645]
[85.61517334 225.30355835]
[84.28796387 240.24993896]
[82.00586700 255.08056641]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[87 201]
[88 200]
[89 199]
[90 197]
[91 196]
[92 195]
[93 194]
[95 193]
[96 192]
[97 191]
[98 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
