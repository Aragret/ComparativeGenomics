%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[104.84559631 541.13641357]
[89.75514221 540.46191406]
[75.46643829 535.56195068]
[63.13779449 526.83380127]
[53.76864624 514.98492432]
[48.11850739 500.97589111]
[46.64540863 485.94238281]
[49.46876526 471.10305786]
[56.35970688 457.66091919]
[66.75960541 446.70559692]
[79.82540131 439.12524414]
[94.49789429 435.53436279]
[95.16767883 420.54931641]
[95.83746338 405.56427002]
[96.50724792 390.57922363]
[97.06546021 375.58963013]
[97.51206970 360.59628296]
[97.95867157 345.60293579]
[97.95867157 330.60293579]
[89.84586334 318.11166382]
[97.16885376 304.08724976]
[96.72224426 289.09390259]
[96.27564240 274.10052490]
[95.82903290 259.10717773]
[95.38243103 244.11384583]
[81.60599518 240.45379639]
[69.40608215 233.05096436]
[59.77656174 222.49790955]
[53.50488281 209.64428711]
[51.10763550 195.52839661]
[52.78805542 181.29331970]
[58.41879654 168.09436035]
[67.55154419 157.00526428]
[79.45269012 148.93090820]
[93.16227722 144.53341675]
[92.93894958 129.53507996]
[92.71562195 114.53674316]
[84.86257172 105.93611145]
[84.77587128 94.28992462]
[92.50000000 85.57331848]
[92.50000000 70.57331848]
[92.50000000 55.57332230]
[89.37059021 46.99167633]
[92.61332703 40.35041046]
[92.83665466 25.35207176]
[93.05998230 10.35373402]
[86.22228241 23.70460701]
[76.52619934 35.14951706]
[64.48036957 44.08808136]
[50.71669006 50.05140686]
[35.95718765 52.72666931]
[20.97610664 51.97352600]
[6.55932713 47.83148575]
[-6.53687429 40.51783371]
[-17.62549782 30.41622925]
[-26.12485695 18.05658150]
[-31.58909225 4.08725262]
[-33.73155975 -10.75895309]
[-32.43987274 -25.70323372]
[-27.78178596 -39.96164322]
[-20.00165749 -52.78621292]
[-9.50761509 -63.50419235]
[3.14984441 -71.55333710]
[17.30673599 -76.51140594]
[32.22041702 -78.11830902]
[47.10854340 -76.28974915]
[61.19012070 -71.12164307]
[73.72644806 -62.88511658]
[84.05990601 -52.01222610]
[91.64840698 -39.07334518]
[96.09388733 -24.74722672]
[97.16307068 -9.78372860]
[102.82585907 -23.67375565]
[108.48863983 -37.56378174]
[114.15142822 -51.45380783]
[112.19650269 -67.15377045]
[124.16604614 -76.01827240]
[129.82882690 -89.90829468]
[127.87390900 -105.60826111]
[139.84344482 -114.47275543]
[145.50624084 -128.36277771]
[151.16902161 -142.25280762]
[156.83181763 -156.14283752]
[143.47941589 -162.99871826]
[130.77537537 -170.99224854]
[118.81636047 -180.06260681]
[107.69338989 -190.14074707]
[97.49112701 -201.14997864]
[88.28721619 -213.00651550]
[80.15170288 -225.62010193]
[73.14650726 -238.89476013]
[67.32493591 -252.72946167]
[62.73130417 -267.01889038]
[59.40057373 -281.65429688]
[57.35808563 -296.52432251]
[56.61939240 -311.51577759]
[57.19010925 -326.51458740]
[59.06589890 -341.40655518]
[62.23248291 -356.07836914]
[66.66576385 -370.41836548]
[72.33199310 -384.31738281]
[79.18805695 -397.66967773]
[87.18177032 -410.37362671]
[96.25228882 -422.33251953]
[106.33058929 -433.45532227]
[117.33996582 -443.65744019]
[129.19662476 -452.86117554]
[141.81033325 -460.99652100]
[155.08509827 -468.00152588]
[168.91986084 -473.82290649]
[183.20936584 -478.41635132]
[197.84483337 -481.74685669]
[212.71488953 -483.78915405]
[227.70634460 -484.52761841]
[242.70512390 -483.95669556]
[257.59707642 -482.08068848]
[272.26882935 -478.91390991]
[286.60876465 -474.48043823]
[300.50772095 -468.81399536]
[313.85992432 -461.95776367]
[326.56375122 -453.96386719]
[338.52252197 -444.89318848]
[349.64520264 -434.81472778]
[359.84713745 -423.80520630]
[369.05072021 -411.94842529]
[377.18588257 -399.33459473]
[384.19070435 -386.05972290]
[390.01190186 -372.22488403]
[394.60513306 -357.93530273]
[397.93545532 -343.29980469]
[399.97750854 -328.42971802]
[400.71578979 -313.43823242]
[400.14465332 -298.43948364]
[398.26843262 -283.54754639]
[395.10144043 -268.87582397]
[390.66775513 -254.53596497]
[385.00115967 -240.63708496]
[378.14471436 -227.28498840]
[370.15063477 -214.58126831]
[361.07977295 -202.62263489]
[351.00115967 -191.50009155]
[339.99151611 -181.29829407]
[328.13458252 -172.09487915]
[315.52066040 -163.95989990]
[302.24569702 -156.95526123]
[288.41076660 -151.13427734]
[274.12112427 -146.54124451]
[259.48556519 -143.21112061]
[244.61546326 -141.16926575]
[229.62397766 -140.43119812]
[214.62521362 -141.00254822]
[199.73332214 -142.87896729]
[185.06164551 -146.04617310]
[170.72183228 -150.48005676]
[165.05905151 -136.59002686]
[159.39627075 -122.69999695]
[153.73347473 -108.80997467]
[156.09344482 -94.10351562]
[143.71885681 -84.24551392]
[138.05607605 -70.35548401]
[140.41604614 -55.64902878]
[128.04145813 -45.79102325]
[122.37866974 -31.90099525]
[116.71588135 -18.01096916]
[111.05309296 -4.12094212]
[108.05831909 10.57706165]
[107.83499146 25.57539940]
[107.61166382 40.57373810]
[107.50000000 55.57332230]
[107.50000000 70.57331848]
[107.50000000 85.57331848]
[116.25928497 99.87895203]
[107.71395874 114.31341553]
[107.93728638 129.31175232]
[108.16061401 144.31008911]
[123.29626465 148.90711975]
[136.25459290 157.94528198]
[145.77395630 170.52995300]
[150.93211365 185.42201233]
[151.23547363 201.15971375]
[146.66635132 216.20228577]
[137.68350220 229.08071899]
[125.17611694 238.54119873]
[110.37577820 243.66723633]
[110.82238007 258.66058350]
[111.26898956 273.65393066]
[111.71559906 288.64727783]
[112.16220093 303.64062500]
[120.30695343 317.20431519]
[112.95201874 330.15631104]
[115.36415863 333.76678467]
[116.39794922 337.57412720]
[116.16075897 341.12084961]
[114.89750671 344.03131104]
[112.95201874 346.04953003]
[112.50541687 361.04287720]
[112.05880737 376.03622437]
[114.93132782 384.70724487]
[111.49228668 391.24902344]
[110.82250214 406.23406982]
[110.15271759 421.21908569]
[109.48293304 436.20413208]
[123.77655792 441.08972168]
[136.11395264 449.80554199]
[145.49501038 461.64498901]
[151.15921021 475.64831543]
[152.64741516 490.68035889]
[149.83897400 505.52249146]
[142.96153259 518.97155762]
[132.57264709 529.93731689]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 202]
[13 201]
[14 200]
[15 199]
[16 197]
[17 196]
[18 195]
[19 190]
[21 188]
[22 187]
[23 186]
[24 185]
[25 184]
[35 175]
[36 174]
[37 173]
[40 171]
[41 170]
[42 169]
[44 168]
[45 167]
[46 166]
[72 165]
[73 164]
[74 163]
[75 162]
[77 160]
[78 159]
[80 157]
[81 156]
[82 155]
[83 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
