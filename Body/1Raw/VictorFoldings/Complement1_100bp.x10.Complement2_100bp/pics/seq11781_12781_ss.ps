%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUGxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[70.51763916 417.31661987]
[60.81277466 405.84655762]
[52.79874420 393.13745117]
[46.63153839 379.43667603]
[42.43120956 365.01089478]
[40.27951813 350.14089966]
[40.21834183 335.11618042]
[42.24887466 320.22915649]
[46.33159637 305.76965332]
[52.38702774 292.01910400]
[60.29730225 279.24514771]
[69.90844727 267.69647217]
[81.03337097 257.59783936]
[93.45552826 249.14584351]
[106.93312073 242.50502014]
[121.20379639 237.80459595]
[118.53800201 223.04338074]
[115.87220764 208.28216553]
[113.20640564 193.52095032]
[110.21163177 178.82293701]
[106.88937378 164.19548035]
[103.56711578 149.56802368]
[93.20309448 138.87052917]
[97.69171143 123.69940948]
[94.36945343 109.07195282]
[89.54345703 94.86949921]
[83.26609039 81.24617767]
[76.88748932 67.66997528]
[70.40798950 54.14162827]
[63.92849731 40.61328125]
[57.44900131 27.08493614]
[50.96950531 13.55659103]
[44.49000931 0.02824587]
[38.01051331 -13.50010014]
[23.47760391 -9.62314796]
[8.48372555 -8.48305416]
[-6.46036816 -10.11718273]
[-20.84588623 -14.46842575]
[-34.18332291 -21.38718796]
[-46.01912689 -30.63653946]
[-55.95110703 -41.90031815]
[-63.64210892 -54.79394531]
[-68.83145905 -68.87755585]
[-71.34380341 -83.67099762]
[-71.09502411 -98.67020416]
[-68.09505463 -113.36437225]
[-62.44750214 -127.25336456]
[-54.34606552 -139.86470032]
[-44.06788254 -150.76968384]
[-31.96406746 -159.59793091]
[-38.44356537 -173.12628174]
[-44.92305756 -186.65463257]
[-51.40255356 -200.18296814]
[-57.88204956 -213.71131897]
[-64.36154938 -227.23965454]
[-70.35439301 -213.48881531]
[-84.26427460 -207.87496948]
[-98.12297821 -213.61399841]
[-103.99160767 -227.41830444]
[-98.50834656 -241.38018799]
[-84.81425476 -247.50161743]
[-70.75463104 -242.27661133]
[-76.00135040 -256.32910156]
[-81.24806976 -270.38156128]
[-86.49478912 -284.43402100]
[-91.74150848 -298.48651123]
[-106.30836487 -294.84143066]
[-121.19175720 -292.85028076]
[-136.20449829 -292.53808594]
[-151.15780640 -293.90878296]
[-165.86360168 -296.94515991]
[-180.13696289 -301.60897827]
[-193.79838562 -307.84161377]
[-206.67605591 -315.56466675]
[-218.60801697 -324.68103027]
[-229.44422913 -335.07608032]
[-239.04840088 -346.61901855]
[-247.29975891 -359.16473389]
[-254.09452820 -372.55545044]
[-259.34725952 -386.62274170]
[-262.99188232 -401.18972778]
[-264.98260498 -416.07318115]
[-265.29434204 -431.08593750]
[-263.92318726 -446.03918457]
[-260.88638306 -460.74490356]
[-256.22213745 -475.01812744]
[-249.98910522 -488.67935181]
[-242.26565552 -501.55679321]
[-233.14892578 -513.48846436]
[-222.75357056 -524.32440186]
[-211.21032715 -533.92822266]
[-198.66435242 -542.17919922]
[-185.27345276 -548.97357178]
[-171.20599365 -554.22589111]
[-156.63891602 -557.87005615]
[-141.75540161 -559.86035156]
[-126.74263763 -560.17163086]
[-111.78942108 -558.79998779]
[-97.08380127 -555.76275635]
[-82.81072235 -551.09808350]
[-69.14968109 -544.86468506]
[-56.27247238 -537.14080811]
[-44.34105301 -528.02374268]
[-33.50546646 -517.62805176]
[-23.90198326 -506.08453369]
[-15.65137672 -493.53833008]
[-8.85740662 -480.14718628]
[-3.60551596 -466.07958984]
[0.03824881 -451.51239014]
[2.02806282 -436.62884521]
[2.33890200 -421.61605835]
[0.96685749 -406.66287231]
[-2.07081604 -391.95736694]
[-6.73591661 -377.68441772]
[-12.96977520 -364.02355957]
[-20.69399452 -351.14657593]
[-29.81143570 -339.21542358]
[-40.20743561 -328.38015747]
[-51.75125504 -318.77700806]
[-64.29771423 -310.52679443]
[-77.68903351 -303.73321533]
[-72.44231415 -289.68075562]
[-67.19559479 -275.62826538]
[-61.94887924 -261.57580566]
[-56.70216370 -247.52333069]
[-50.83320236 -233.71916199]
[-44.35370636 -220.19081116]
[-37.87421036 -206.66246033]
[-31.39471436 -193.13412476]
[-24.91521835 -179.60577393]
[-18.43572235 -166.07742310]
[-3.97020793 -169.97474670]
[10.96912003 -171.14787292]
[25.87359047 -169.55537415]
[40.23544312 -165.25003052]
[53.56514359 -158.37705994]
[65.40804291 -149.16925049]
[75.35991669 -137.93902588]
[83.08073425 -125.06787872]
[88.30628967 -110.99340820]
[90.85724640 -96.19443512]
[90.64528656 -81.17472839]
[87.67614746 -66.44581604]
[82.04953003 -52.50961685]
[73.95568848 -39.84130859]
[63.66904449 -28.87311935]
[51.53886032 -19.97959518]
[58.01835632 -6.45125008]
[64.49784851 7.07709551]
[70.97734833 20.60544205]
[77.45684052 34.13378525]
[83.93634033 47.66213226]
[90.41583252 61.19047928]
[96.14026642 65.86515808]
[96.88941193 74.96881866]
[103.16677094 88.59213257]
[104.67959595 73.66861725]
[111.72048187 60.42377472]
[123.24495697 50.82239532]
[137.54344177 46.28879166]
[152.49481201 47.49549484]
[165.88116455 54.26349640]
[175.71667480 65.58880615]
[180.54232788 79.79138184]
[179.64225769 94.76435089]
[173.14997864 108.28656769]
[162.02859497 118.35208893]
[147.92788696 123.46775818]
[132.93960571 122.87469482]
[119.28719330 116.66087341]
[108.99691010 105.74969482]
[112.31916809 120.37715149]
[122.92082214 132.12089539]
[118.19457245 146.24575806]
[121.51683807 160.87322998]
[124.83909607 175.50068665]
[128.38673401 179.32969666]
[129.95414734 183.69964600]
[129.66688538 187.76567078]
[127.96762848 190.85514832]
[130.63342285 205.61636353]
[133.29920959 220.37757874]
[135.96501160 235.13880920]
[150.97834778 234.55068970]
[165.92741394 236.05781555]
[180.52122498 239.63087463]
[194.47572327 245.20028687]
[207.51925659 252.65766907]
[219.39793396 261.85781860]
[229.88053894 272.62170410]
[238.76303101 284.73977661]
[245.87248230 297.97616577]
[251.07054138 312.07318115]
[254.25601196 326.75646973]
[255.36688232 341.74020386]
[254.38153076 356.73269653]
[251.31913757 371.44216919]
[246.23931885 385.58221436]
[239.24095154 398.87768555]
[230.46026611 411.06970215]
[220.06816101 421.92098999]
[208.26693726 431.22030640]
[195.28631592 438.78665161]
[181.37896729 444.47274780]
[166.81558228 448.16787720]
[151.87965393 449.80014038]
[136.86192322 449.33779907]
[122.05470276 446.78976440]
[107.74622345 442.20571899]
[94.21500397 435.67486572]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 183]
[17 182]
[18 181]
[19 180]
[20 176]
[21 175]
[22 174]
[24 172]
[25 171]
[26 156]
[27 155]
[28 153]
[29 152]
[30 151]
[31 150]
[32 149]
[33 148]
[34 147]
[50 131]
[51 130]
[52 129]
[53 128]
[54 127]
[55 126]
[62 125]
[63 124]
[64 123]
[65 122]
[66 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
