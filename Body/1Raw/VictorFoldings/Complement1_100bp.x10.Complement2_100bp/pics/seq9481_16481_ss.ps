%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[42.00162125 645.38543701]
[28.28906441 651.47766113]
[14.22102928 656.69689941]
[-0.14696032 661.02239990]
[-14.75820255 664.43725586]
[-29.55503273 666.92791748]
[-44.47905350 668.48449707]
[-59.47136688 669.10095215]
[-74.47280121 668.77484131]
[-89.42415619 667.50738525]
[-104.26643372 665.30364990]
[-118.94104004 662.17230225]
[-133.39006042 658.12573242]
[-147.55650330 653.17980957]
[-161.38441467 647.35418701]
[-174.81925964 640.67175293]
[-187.80798340 633.15893555]
[-200.29934692 624.84539795]
[-212.24404907 615.76391602]
[-223.59495544 605.95031738]
[-234.30725098 595.44335938]
[-244.33866882 584.28448486]
[-253.64962769 572.51776123]
[-262.20336914 560.18963623]
[-269.96612549 547.34875488]
[-276.90728760 534.04571533]
[-282.99945068 520.33312988]
[-288.21856689 506.26510620]
[-292.54403687 491.89709473]
[-295.95880127 477.28582764]
[-298.44934082 462.48898315]
[-300.00588989 447.56494141]
[-300.62228394 432.57263184]
[-300.29608154 417.57119751]
[-299.02856445 402.61984253]
[-296.82473755 387.77758789]
[-293.69329834 373.10299683]
[-289.64663696 358.65399170]
[-284.70068359 344.48757935]
[-278.87496948 330.65969849]
[-272.19247437 317.22488403]
[-264.67959595 304.23620605]
[-256.36596680 291.74487305]
[-247.28442383 279.80023193]
[-237.47076416 268.44937134]
[-226.96376038 257.73712158]
[-215.80485535 247.70576477]
[-204.03808594 238.39488220]
[-191.70989990 229.84120178]
[-178.86895752 222.07850647]
[-165.56591797 215.13740540]
[-151.85330200 209.04531860]
[-137.78520203 203.82627869]
[-123.41717529 199.50088501]
[-108.80589294 196.08621216]
[-94.00904083 193.59571838]
[-79.08499908 192.03924561]
[-64.09268188 191.42294312]
[-49.09124756 191.74923706]
[-34.13990402 193.01683044]
[-19.29765701 195.22073364]
[-4.62308264 198.35223389]
[9.82590580 202.39898682]
[23.99228287 207.34501648]
[37.82014084 213.17080688]
[44.50033569 199.74043274]
[51.18053055 186.31005859]
[49.92091751 171.46881104]
[62.99443054 162.55848694]
[69.67462158 149.12811279]
[76.05323029 135.55189514]
[82.12706757 121.83663177]
[88.20089722 108.12136841]
[86.90288544 94.19991302]
[98.08383179 85.80480194]
[88.51965332 75.39936066]
[83.65850830 62.17463303]
[84.20333862 48.13865662]
[90.03889465 35.40928650]
[100.25411224 25.89463615]
[113.28421783 21.00705719]
[127.15032196 21.45356178]
[133.42767334 7.83024549]
[139.70504761 -5.79307079]
[145.98240662 -19.41638756]
[151.95396423 -33.17649078]
[157.61674500 -47.06651688]
[155.66181946 -62.76647949]
[167.63136292 -71.63098145]
[173.29415894 -85.52100372]
[178.95693970 -99.41103363]
[184.61972046 -113.30105591]
[190.28251648 -127.19108582]
[195.94529724 -141.08111572]
[182.85643005 -148.44892883]
[170.79423523 -157.39915466]
[159.94894409 -167.79064941]
[150.49160767 -179.45950317]
[142.57139587 -192.22167969]
[136.31320190 -205.87591553]
[131.81573486 -220.20686340]
[129.14991760 -234.98849487]
[128.35780334 -249.98768616]
[129.45188904 -264.96789551]
[132.41491699 -279.69281006]
[137.20014954 -293.93026733]
[143.73211670 -307.45568848]
[151.90780640 -320.05572510]
[161.59826660 -331.53170776]
[172.65066528 -341.70263672]
[184.89070129 -350.40808105]
[198.12533569 -357.51074219]
[212.14582825 -362.89862061]
[226.73104858 -366.48672485]
[241.65097046 -368.21847534]
[256.67028809 -368.06655884]
[271.55215454 -366.03335571]
[286.06179810 -362.15097046]
[299.97042847 -356.48059082]
[313.05868530 -349.11166382]
[325.12014771 -340.16043091]
[335.96453857 -329.76803589]
[345.42089844 -318.09838867]
[353.34005737 -305.33554077]
[359.59707642 -291.68075562]
[364.09335327 -277.34942627]
[366.75790405 -262.56759644]
[367.54876709 -247.56832886]
[366.45343018 -232.58822632]
[363.48916626 -217.86354065]
[358.70272827 -203.62649536]
[352.16961670 -190.10163879]
[343.99288940 -177.50227356]
[334.30145264 -166.02709961]
[323.24819946 -155.85711670]
[311.00741577 -147.15270996]
[297.77218628 -140.05114746]
[283.75125122 -134.66445923]
[269.16571045 -131.07757568]
[254.24565125 -129.34707642]
[239.22633362 -129.50025940]
[224.34466553 -131.53471375]
[209.83532715 -135.41831970]
[204.17254639 -121.52829742]
[198.50975037 -107.63827515]
[192.84696960 -93.74824524]
[187.18418884 -79.85821533]
[181.52139282 -65.96819305]
[183.88136292 -51.26173401]
[171.50677490 -41.40372849]
[165.84399414 -27.51370239]
[166.86712646 -24.13945770]
[166.30674744 -20.10200500]
[163.86894226 -16.15100479]
[159.60571289 -13.13902569]
[153.32835388 0.48429012]
[147.05099487 14.10760593]
[140.77363586 27.73092270]
[151.18206787 39.85590363]
[155.27575684 55.36252594]
[152.18608093 71.15927887]
[142.48178101 84.07387543]
[128.06510925 91.49030304]
[111.79910278 91.87863159]
[113.09711456 105.80008698]
[101.91616821 114.19519806]
[95.84233093 127.91046906]
[89.76849365 141.62573242]
[90.32617950 146.81573486]
[88.97265625 151.25659180]
[86.31332397 154.34576416]
[83.10500336 155.80830383]
[76.42480469 169.23867798]
[77.20660400 185.04055786]
[64.61090851 192.99024963]
[57.93071365 206.42062378]
[51.25051880 219.85099792]
[64.23932648 227.36367798]
[76.73078156 235.67709351]
[88.67558289 244.75846863]
[100.02658081 254.57194519]
[110.73899078 265.07879639]
[120.77053070 276.23754883]
[130.08160400 288.00415039]
[138.63546753 300.33221436]
[146.39837646 313.17303467]
[153.33967590 326.47595215]
[159.43197632 340.18847656]
[164.65122986 354.25650024]
[168.97685242 368.62445068]
[172.39175415 383.23568726]
[174.88247681 398.03250122]
[176.43917847 412.95651245]
[177.05572510 427.94882202]
[176.72967529 442.95025635]
[175.46231079 457.90164185]
[173.25863647 472.74389648]
[170.12736511 487.41851807]
[166.08084106 501.86758423]
[161.13502502 516.03405762]
[155.30946350 529.86199951]
[148.62712097 543.29687500]
[141.11437988 556.28564453]
[132.80088806 568.77703857]
[123.71945190 580.72180176]
[113.90592194 592.07275391]
[103.39901733 602.78509521]
[92.24021149 612.81658936]
[80.47354889 622.12756348]
[68.14545441 630.68139648]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 177]
[66 176]
[67 175]
[69 173]
[70 172]
[71 168]
[72 167]
[73 166]
[75 164]
[82 158]
[83 157]
[84 156]
[85 155]
[86 151]
[87 150]
[89 148]
[90 147]
[91 146]
[92 145]
[93 144]
[94 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
