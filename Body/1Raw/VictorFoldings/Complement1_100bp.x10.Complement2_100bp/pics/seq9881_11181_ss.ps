%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[103.12094116 654.16351318]
[90.18950653 646.54693604]
[77.89552307 637.93927002]
[66.31480408 628.39355469]
[55.51873016 617.96862793]
[45.57387543 606.72875977]
[36.54155350 594.74334717]
[28.47744751 582.08612061]
[21.43127823 568.83526611]
[15.44648838 555.07238770]
[10.55997753 540.88238525]
[6.80187178 526.35278320]
[4.19534159 511.57302856]
[2.75645757 496.63436890]
[2.49409080 481.62887573]
[3.40985918 466.64904785]
[5.49811649 451.78723145]
[8.74598789 437.13507080]
[13.13344860 422.78292847]
[18.63344765 408.81924438]
[25.21207619 395.33016968]
[32.82877350 382.39880371]
[41.43658066 370.10491943]
[50.98242569 358.52429199]
[61.40745926 347.72833252]
[72.64739990 337.78356934]
[84.63294983 328.75137329]
[97.29021454 320.68740845]
[110.54116058 313.64135742]
[124.30407715 307.65670776]
[138.49412537 302.77035522]
[134.73782349 288.24829102]
[130.98152161 273.72622681]
[127.22522736 259.20416260]
[116.96486664 252.79702759]
[113.71658325 240.72920227]
[119.74839783 229.32832336]
[109.58457184 222.76911926]
[106.51631927 210.65426636]
[112.71720123 199.34445190]
[109.39494324 184.71699524]
[106.07268524 170.08953857]
[102.75042725 155.46208191]
[99.97783661 153.28375244]
[98.12258148 149.65428162]
[97.85523224 145.01942444]
[99.62189484 140.10760498]
[96.95610046 125.34638977]
[94.29030609 110.58517456]
[91.40502930 95.86528015]
[88.30091858 81.18997955]
[78.05574036 92.14609528]
[63.09091949 91.11944580]
[54.43795776 78.86684418]
[58.47549820 64.42044830]
[72.22721863 58.42961121]
[85.55486298 65.30923462]
[83.55084991 50.44370270]
[81.54683685 35.57817459]
[79.54282379 20.71264648]
[77.53880310 5.84711838]
[75.53479004 -9.01840973]
[69.16281128 4.56090689]
[57.58485413 14.09772491]
[43.03644180 17.75063515]
[28.32664871 14.81431580]
[16.29570389 5.85572529]
[9.26659203 -7.39537239]
[8.59652710 -22.38039970]
[14.41488743 -36.20597839]
[25.59823799 -46.20261383]
[39.98725128 -50.44010162]
[54.80363083 -48.10025787]
[67.18656921 -39.63486862]
[74.74549866 -26.67724800]
[75.41528320 -41.66228485]
[61.38838959 -50.41660309]
[53.73418045 -64.96681976]
[54.45796585 -81.29755402]
[63.26759720 -94.95574951]
[77.67900848 -102.26489258]
[78.12561798 -117.25823975]
[78.57222748 -132.25158691]
[79.01882935 -147.24494934]
[79.46543884 -162.23829651]
[79.91204071 -177.23164368]
[71.65148926 -187.13749695]
[72.33213806 -199.61630249]
[81.04449463 -208.00805664]
[81.71427917 -222.99308777]
[67.04863739 -226.33355713]
[53.21522522 -232.23918152]
[40.65872574 -240.52012634]
[29.78278351 -250.91020203]
[20.93701363 -263.07540894]
[14.40577030 -276.62466431]
[10.39900589 -291.12246704]
[9.04552269 -306.10269165]
[10.38882828 -321.08386230]
[14.38574123 -335.58438110]
[20.90777779 -349.13806152]
[29.74527931 -361.30926514]
[40.61416245 -371.70672607]
[53.16503143 -379.99621582]
[66.99443054 -385.91125488]
[81.65779877 -389.26165771]
[96.68376923 -389.93978882]
[111.58933258 -387.92382812]
[125.89531708 -383.27856445]
[139.14186096 -376.15332031]
[150.90312195 -366.77716064]
[160.80104065 -355.45147705]
[168.51744080 -342.54037476]
[173.80427551 -328.45886230]
[176.49157715 -313.65957642]
[176.49298096 -298.61831665]
[173.80841064 -283.81854248]
[168.52420044 -269.73605347]
[160.81019592 -256.82351685]
[150.91436768 -245.49600220]
[139.15484619 -236.11766052]
[125.90962982 -228.98995972]
[111.60449982 -224.34204102]
[96.69931793 -222.32330322]
[96.02953339 -207.33827209]
[104.94415283 -192.22216797]
[94.90539551 -176.78503418]
[94.45878601 -161.79168701]
[94.01217651 -146.79833984]
[93.56557465 -131.80499268]
[93.11896515 -116.81163788]
[92.67236328 -101.81829071]
[104.73910522 -95.42212677]
[112.91203308 -84.39797974]
[115.55038452 -70.86327362]
[112.08332062 -57.44844055]
[103.13224792 -46.78568268]
[90.40032196 -40.99250031]
[89.73053741 -26.00746155]
[90.40032196 -11.02242374]
[92.40433502 3.84310484]
[94.40834808 18.70863342]
[96.41236115 33.57416153]
[98.41637421 48.43968964]
[100.42038727 63.30521774]
[102.97621918 78.08586884]
[106.08032990 92.76117706]
[109.71475220 96.54336548]
[110.97136688 102.09262085]
[109.05152130 107.91938019]
[111.71731567 122.68059540]
[114.38311005 137.44181824]
[117.37788391 152.13981628]
[120.70014191 166.76727295]
[124.02240753 181.39474487]
[127.34466553 196.02220154]
[140.16531372 209.24008179]
[134.32476807 225.78865051]
[147.34078979 238.81419373]
[141.74728394 255.44787598]
[145.50358582 269.96994019]
[149.25988770 284.49200439]
[153.01618958 299.01406860]
[167.79582214 296.40707397]
[182.73445129 294.96774292]
[197.73994446 294.70489502]
[212.71981812 295.62020874]
[227.58168030 297.70800781]
[242.23393250 300.95544434]
[256.58621216 305.34246826]
[270.55004883 310.84204102]
[284.03936768 317.42025757]
[296.97094727 325.03656006]
[309.26510620 333.64398193]
[320.84600830 343.18945312]
[331.64230347 353.61416626]
[341.58737183 364.85379028]
[350.61996460 376.83908081]
[358.68432617 389.49609375]
[365.73074341 402.74682617]
[371.71582031 416.50955200]
[376.60263062 430.69946289]
[380.36102295 445.22903442]
[382.96786499 460.00869751]
[384.40704346 474.94732666]
[384.66973877 489.95285034]
[383.75427246 504.93270874]
[381.66632080 519.79455566]
[378.41873169 534.44677734]
[374.03155518 548.79901123]
[368.53186035 562.76275635]
[361.95349121 576.25201416]
[354.33706665 589.18353271]
[345.72952271 601.47760010]
[336.18389893 613.05841064]
[325.75909424 623.85461426]
[314.51934814 633.79956055]
[302.53399658 642.83203125]
[289.87689209 650.89624023]
[276.62609863 657.94256592]
[262.86328125 663.92749023]
[248.67333984 668.81414795]
[234.14372253 672.57238770]
[219.36402893 675.17907715]
[204.42538452 676.61810303]
[189.41987610 676.88061523]
[174.44003296 675.96502686]
[159.57820129 673.87689209]
[144.92602539 670.62915039]
[130.57383728 666.24188232]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 163]
[32 162]
[33 161]
[34 160]
[37 158]
[40 156]
[41 155]
[42 154]
[43 153]
[47 152]
[48 151]
[49 150]
[50 147]
[51 146]
[57 145]
[58 144]
[59 143]
[60 142]
[61 141]
[62 140]
[75 139]
[76 138]
[81 132]
[82 131]
[83 130]
[84 129]
[85 128]
[86 127]
[89 125]
[90 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
