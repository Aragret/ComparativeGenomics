%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[60.70009613 343.80551147]
[63.24026489 328.94580078]
[69.26342010 315.12606812]
[78.41939545 303.14978027]
[90.17587280 293.71322632]
[103.84933472 287.36502075]
[93.80841064 276.36367798]
[98.74674225 261.33294678]
[95.86146545 246.61303711]
[92.97619629 231.89315796]
[90.09092712 217.17326355]
[87.20565033 202.45336914]
[82.98614502 216.84767151]
[74.76145172 229.39176941]
[63.24309540 239.00047302]
[49.42752075 244.84255981]
[34.50991440 246.41259766]
[19.78079987 243.57478333]
[6.51439333 236.57460022]
[-4.14162827 226.01765442]
[-11.26541328 212.81721497]
[-14.24068260 198.11524963]
[-12.81004524 183.18362427]
[-7.09726620 169.31408691]
[2.40344191 157.70648193]
[14.87017250 149.36497498]
[29.22443008 145.01121521]
[44.22442627 145.02182007]
[58.57251358 149.39587402]
[71.02743530 157.75500488]
[80.51171875 169.37603760]
[86.20403290 183.25022888]
[87.54226685 168.31004333]
[80.97129059 154.94323730]
[89.90892792 141.88838196]
[91.24716187 126.94818878]
[92.13998413 111.97478485]
[85.68240356 99.57352448]
[92.86666870 87.57860565]
[93.31327820 72.58525848]
[93.75988007 57.59190750]
[82.90255737 67.94171906]
[67.94112396 69.01666260]
[55.71574402 60.32528305]
[51.81569672 45.84116745]
[58.02402878 32.18625641]
[71.50237274 25.60339165]
[86.08862305 29.10216904]
[95.11467743 41.08476639]
[97.11869049 26.21923828]
[99.12270355 11.35371017]
[101.12671661 -3.51181793]
[95.30249786 -18.22198486]
[104.67080688 -29.80144882]
[92.11669159 -21.59205627]
[77.40705109 -24.52914047]
[68.96823883 -36.93020630]
[71.63438416 -51.69136047]
[83.87820435 -60.35674286]
[98.68588257 -57.96242905]
[107.57467651 -45.88091278]
[110.89693451 -60.50837326]
[114.21919250 -75.13583374]
[117.54145050 -89.76329041]
[120.86370850 -104.39075470]
[124.18597412 -119.01821136]
[127.50823212 -133.64567566]
[130.83049011 -148.27313232]
[121.30737305 -136.68389893]
[109.14025116 -127.91116333]
[95.13610840 -122.53677368]
[80.22379303 -120.91720581]
[65.39239502 -123.15988159]
[51.62562180 -129.11604309]
[39.83657074 -138.39065552]
[30.80717278 -150.36854553]
[25.13631058 -164.25527954]
[23.20011520 -179.12979126]
[25.12700653 -194.00550842]
[30.78918076 -207.89579773]
[39.81108856 -219.87933350]
[51.59433365 -229.16130066]
[65.35738373 -235.12608337]
[80.18737793 -237.37803650]
[95.10069275 -235.76779175]
[109.10820007 -230.40217590]
[121.28080750 -221.63703918]
[130.81117249 -210.05377197]
[137.06715393 -196.42062378]
[139.63385010 -181.64184570]
[138.33988953 -166.69265747]
[146.19165039 -179.47349548]
[146.82273865 -195.28211975]
[160.07745361 -202.07637024]
[167.92919922 -214.85720825]
[175.78096008 -227.63806152]
[183.63272095 -240.41889954]
[171.81660461 -249.68589783]
[161.13389587 -260.23944092]
[151.72386169 -271.94195557]
[143.70916748 -284.64089966]
[137.19433594 -298.17065430]
[132.26426697 -312.35488892]
[128.98324585 -327.00863647]
[127.39405060 -341.94088745]
[127.51740265 -356.95697021]
[129.35168457 -371.86111450]
[132.87298584 -386.45898438]
[138.03540039 -400.56030273]
[144.77162170 -413.98123169]
[152.99383545 -426.54678345]
[162.59484863 -438.09313965]
[173.44949341 -448.46975708]
[185.41624451 -457.54141235]
[198.33909607 -465.18975830]
[212.04957581 -471.31515503]
[226.36894226 -475.83770752]
[241.11051941 -478.69845581]
[256.08209229 -479.86010742]
[271.08850098 -479.30755615]
[285.93411255 -477.04794312]
[300.42535400 -473.11074829]
[314.37335205 -467.54730225]
[327.59619141 -460.43014526]
[339.92153931 -451.85208130]
[351.18872070 -441.92489624]
[361.25079346 -430.77804565]
[369.97662354 -418.55685425]
[377.25241089 -405.42062378]
[382.98333740 -391.54061890]
[387.09466553 -377.09780884]
[389.53283691 -362.28048706]
[390.26599121 -347.28179932]
[389.28463745 -332.29733276]
[386.60153198 -317.52239990]
[382.25167847 -303.14962769]
[376.29177856 -289.36639404]
[368.79949951 -276.35241699]
[359.87258911 -264.27734375]
[349.62734985 -253.29856873]
[338.19738770 -243.55928040]
[325.73175049 -235.18640137]
[312.39288330 -228.28912354]
[298.35470581 -222.95733643]
[283.80026245 -219.26057434]
[268.91931152 -217.24702454]
[253.90580750 -216.94293213]
[238.95550537 -218.35226440]
[224.26330566 -221.45666504]
[210.02076721 -226.21563721]
[196.41355896 -232.56713867]
[188.56179810 -219.78630066]
[180.71005249 -207.00546265]
[172.85829163 -194.22460938]
[172.78881836 -179.33016968]
[158.97248840 -171.62174988]
[151.12074280 -158.84089661]
[145.45794678 -144.95086670]
[142.13569641 -130.32341003]
[138.81343079 -115.69595337]
[135.49116516 -101.06849670]
[132.16891479 -86.44103241]
[128.84664917 -71.81357574]
[125.52439117 -57.18611145]
[122.20213318 -42.55865097]
[119.53633881 -27.79743576]
[125.50389862 -14.15055084]
[115.99224854 -1.50780427]
[113.98823547 13.35772419]
[111.98422241 28.22325134]
[109.98020935 43.08877945]
[108.75322723 58.03851318]
[108.30662537 73.03186035]
[107.86001587 88.02521515]
[114.31759644 100.42647552]
[107.13333130 112.42139435]
[109.32629395 116.16904449]
[110.13163757 120.03115845]
[109.68376160 123.55746460]
[108.24951172 126.38757324]
[106.18734741 128.28642273]
[104.84911346 143.22660828]
[111.32437134 157.66204834]
[102.48245239 169.64826965]
[101.14421844 184.58845520]
[101.92554474 199.56809998]
[104.81081390 214.28797913]
[107.69609070 229.00787354]
[110.58135986 243.72776794]
[113.46662903 258.44766235]
[123.71392822 270.50186157]
[118.56922913 284.47973633]
[133.62745667 285.19619751]
[148.07644653 289.49618530]
[161.07617188 297.12969971]
[171.87084961 307.65292358]
[179.83287048 320.45410156]
[184.49934387 334.78890991]
[185.59896851 349.82403564]
[183.06781006 364.68527222]
[177.05303955 378.50863647]
[167.90432739 390.49047852]
[156.15356445 399.93417358]
[142.48396301 406.29067993]
[127.69020844 409.19042969]
[112.63242340 408.46484375]
[98.18603516 404.15609741]
[85.19094086 396.51470947]
[74.40264893 385.98492432]
[66.44838715 373.17895508]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 192]
[8 190]
[9 189]
[10 188]
[11 187]
[12 186]
[32 185]
[33 184]
[35 182]
[36 181]
[37 176]
[39 174]
[40 173]
[41 172]
[49 171]
[50 170]
[51 169]
[52 168]
[54 166]
[61 165]
[62 164]
[63 163]
[64 162]
[65 161]
[66 160]
[67 159]
[68 158]
[91 157]
[92 156]
[94 154]
[95 153]
[96 152]
[97 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
