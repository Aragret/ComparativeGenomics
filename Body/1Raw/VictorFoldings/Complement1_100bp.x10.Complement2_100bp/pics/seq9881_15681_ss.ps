%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[172.94258118 539.78192139]
[164.47575378 527.39312744]
[156.85531616 514.46649170]
[150.11531067 501.05972290]
[144.28582764 487.23269653]
[139.39291382 473.04718018]
[135.45841980 458.56655884]
[132.49992371 443.85543823]
[130.53060913 428.97958374]
[129.55931091 414.00540161]
[129.59034729 398.99981689]
[130.62358093 384.02978516]
[132.65440369 369.16220093]
[135.67373657 354.46347046]
[139.66809082 339.99920654]
[144.61964417 325.83407593]
[150.50627136 312.03128052]
[157.30166626 298.65249634]
[164.97550964 285.75747681]
[173.49349976 273.40380859]
[182.81761169 261.64669800]
[192.90620422 250.53858948]
[203.71420288 240.12915039]
[194.05339050 228.65444946]
[184.39257812 217.17974854]
[174.73176575 205.70504761]
[165.07095337 194.23034668]
[155.41014099 182.75564575]
[145.74932861 171.28094482]
[142.28649902 170.61682129]
[138.97328186 168.24243164]
[136.61004639 164.24638367]
[135.92724609 159.07135010]
[126.78845215 147.17672729]
[117.64964294 135.28208923]
[103.76002502 129.90365601]
[101.48770905 114.24647522]
[88.64146423 108.72691345]
[86.61766052 94.89232635]
[77.47885895 82.99768829]
[64.08167267 88.42501831]
[49.74777603 90.19391632]
[35.45712280 88.18980408]
[22.18507385 82.55580139]
[10.83582687 73.68257904]
[2.18080807 62.18124390]
[-3.19375777 48.84127426]
[-4.92655134 34.57630157]
[-2.90544248 20.36157417]
[2.72527480 7.16725302]
[11.57516575 -4.10778666]
[2.61446977 -16.13716507]
[-3.29574776 -19.10041618]
[-6.36196804 -23.88532257]
[-6.42759371 -28.66075325]
[-15.02615738 -40.95159149]
[-23.62472153 -53.24242783]
[-32.22328568 -65.53326416]
[-40.82184982 -77.82410431]
[-54.05866623 -70.73023224]
[-68.04160309 -65.25174713]
[-82.57436371 -61.46556091]
[-97.45293427 -59.42482376]
[-112.46843719 -59.15818405]
[-127.41007233 -60.66939163]
[-142.06809998 -63.93722153]
[-156.23672485 -68.91580963]
[-169.71705627 -75.53524780]
[-182.31983948 -83.70262909]
[-193.86816406 -93.30328369]
[-204.19990540 -104.20243835]
[-213.17001343 -116.24707794]
[-220.65257263 -129.26812744]
[-226.54254150 -143.08277893]
[-230.75721741 -157.49711609]
[-233.23744202 -172.30876160]
[-233.94841003 -187.30978394]
[-232.88011169 -202.28961182]
[-230.04757690 -217.03793335]
[-225.49053955 -231.34771729]
[-219.27299500 -245.01806641]
[-211.48222351 -257.85708618]
[-202.22760010 -269.68450928]
[-191.63902283 -280.33432007]
[-179.86515808 -289.65701294]
[-167.07128906 -297.52169800]
[-153.43702698 -303.81796265]
[-139.15376282 -308.45745850]
[-124.42201233 -311.37500000]
[-109.44860077 -312.52966309]
[-94.44371796 -311.90521240]
[-79.61801910 -309.51043701]
[-65.17962646 -305.37896729]
[-51.33123398 -299.56878662]
[-38.26725006 -292.16143799]
[-26.17107582 -283.26092529]
[-15.21252155 -272.99221802]
[-5.54542780 -261.49945068]
[2.69449401 -248.94396973]
[9.39156914 -235.50204468]
[14.45177937 -221.36235046]
[17.80408859 -206.72341919]
[19.40143585 -191.79074097]
[19.22139740 -176.77395630]
[17.26649857 -161.88386536]
[13.56418419 -147.32951355]
[8.16642952 -133.31521606]
[1.14900959 -120.03771210]
[-7.38956118 -107.68338776]
[-17.32941437 -96.42569733]
[-28.53101158 -86.42266846]
[-19.93244743 -74.13182831]
[-11.33388329 -61.84099197]
[-2.73531961 -49.55015564]
[5.86324406 -37.25931549]
[14.64384747 -25.09786034]
[23.60454369 -13.06848240]
[38.18149948 -18.61441612]
[53.74463272 -19.83389282]
[69.03592682 -16.62013817]
[82.81702423 -9.22505665]
[93.96952820 1.76048100]
[101.58575439 15.45385456]
[105.04258728 30.75159645]
[104.05249786 46.41831589]
[98.68739319 61.18646622]
[89.37348938 73.85888672]
[98.51229095 85.75352478]
[111.35853577 91.27308655]
[113.38233948 105.10767365]
[127.92563629 111.33689880]
[129.54428101 126.14328766]
[138.68307495 138.03791809]
[147.82188416 149.93255615]
[157.22402954 161.62013245]
[166.88484192 173.09483337]
[176.54565430 184.56953430]
[186.20646667 196.04423523]
[195.86727905 207.51893616]
[205.52809143 218.99363708]
[215.18890381 230.46833801]
[227.28768921 221.59204102]
[239.95233154 213.54367065]
[253.12625122 206.35919189]
[266.75064087 200.07067871]
[280.76461792 194.70622253]
[295.10562134 190.28979492]
[309.70959473 186.84107971]
[324.51129150 184.37551880]
[339.44461060 182.90411377]
[354.44287109 182.43344116]
[369.43908691 182.96559143]
[384.36624146 184.49818420]
[399.15771484 187.02439880]
[413.74743652 190.53292847]
[428.07019043 195.00811768]
[442.06207275 200.42996216]
[455.66058350 206.77426147]
[468.80496216 214.01268005]
[481.43649292 222.11288452]
[493.49880981 231.03869629]
[504.93798828 240.75024414]
[515.70294189 251.20417786]
[525.74566650 262.35379028]
[535.02117920 274.14926147]
[543.48815918 286.53796387]
[551.10876465 299.46450806]
[557.84893799 312.87118530]
[563.67858887 326.69815063]
[568.57171631 340.88357544]
[572.50640869 355.36416626]
[575.46508789 370.07525635]
[577.43457031 384.95108032]
[578.40606689 399.92523193]
[578.37518311 414.93084717]
[577.34216309 429.90087891]
[575.31152344 444.76849365]
[572.29235840 459.46725464]
[568.29821777 473.93154907]
[563.34680176 488.09677124]
[557.46038818 501.89962769]
[550.66516113 515.27850342]
[542.99145508 528.17358398]
[534.47363281 540.52740479]
[525.14965820 552.28460693]
[515.06121826 563.39288330]
[504.25335693 573.80242920]
[492.77432251 583.46685791]
[480.67544556 592.34301758]
[468.01071167 600.39123535]
[454.83666992 607.57556152]
[441.21221924 613.86389160]
[427.19815063 619.22814941]
[412.85708618 623.64440918]
[398.25308228 627.09295654]
[383.45135498 629.55828857]
[368.51800537 631.02954102]
[353.51974487 631.50000000]
[338.52355957 630.96771240]
[323.59640503 629.43487549]
[308.80496216 626.90850830]
[294.21530151 623.39978027]
[279.89257812 618.92443848]
[265.90075684 613.50238037]
[252.30235291 607.15789795]
[239.15806580 599.91937256]
[226.52662659 591.81896973]
[214.46443176 582.89300537]
[203.02537537 573.18133545]
[192.26052856 562.72723389]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 141]
[24 140]
[25 139]
[26 138]
[27 137]
[28 136]
[29 135]
[33 134]
[34 133]
[35 132]
[37 130]
[39 128]
[40 127]
[51 117]
[52 116]
[55 115]
[56 114]
[57 113]
[58 112]
[59 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
