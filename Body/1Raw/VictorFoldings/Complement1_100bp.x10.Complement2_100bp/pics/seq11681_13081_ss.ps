%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUAxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[63.31036377 485.62982178]
[68.94329834 499.58535767]
[71.74510956 514.37170410]
[71.60811615 529.42053223]
[68.53756714 544.15344238]
[62.65149689 558.00408936]
[54.17614746 570.44006348]
[43.43728638 580.98345947]
[30.84769058 589.22900391]
[16.89126778 594.85968018]
[2.10446787 597.65905762]
[-12.94434547 597.51965332]
[-27.67673683 594.44671631]
[-41.52642822 588.55841064]
[-53.96107864 580.08105469]
[-64.50273132 569.34045410]
[-72.74620056 556.74951172]
[-78.37461853 542.79217529]
[-81.17164612 528.00494385]
[-81.02976990 512.95617676]
[-77.95446014 498.22427368]
[-72.06390381 484.37551880]
[-63.58452988 471.94226074]
[-52.84225464 461.40234375]
[-40.24999237 453.16091919]
[-26.29174805 447.53475952]
[-11.50404167 444.74011230]
[3.54472637 444.88442993]
[18.27612114 447.96212769]
[24.14508247 434.15792847]
[30.01404190 420.35375977]
[35.88300323 406.54959106]
[41.75196457 392.74542236]
[47.62092590 378.94122314]
[50.83419800 364.28945923]
[51.28080368 349.29611206]
[51.72740936 334.30273438]
[52.17401505 319.30938721]
[52.62062454 304.31604004]
[53.06723022 289.32269287]
[43.40497208 300.79617310]
[29.10532379 305.32608032]
[14.59918404 301.50875854]
[4.38143682 290.52706909]
[1.61816359 275.78378296]
[7.16559458 261.84729004]
[19.30479813 253.03594971]
[34.27430725 252.08006287]
[47.43566132 259.27581787]
[54.71072769 272.39376831]
[57.15645218 257.59448242]
[59.60218048 242.79522705]
[58.08123779 240.44047546]
[57.40140152 237.34136963]
[57.85085678 233.81526184]
[59.59769058 230.27787781]
[62.65926361 227.19880676]
[65.98152161 212.57135010]
[69.30378723 197.94387817]
[72.62604523 183.31642151]
[75.94830322 168.68896484]
[79.27056122 154.06150818]
[77.68659973 146.84257507]
[82.75270844 139.24176025]
[86.29238129 124.66539001]
[89.83205414 110.08901978]
[86.08058929 96.61986542]
[95.59156799 86.37131500]
[99.13124084 71.79493713]
[99.57785034 56.80158615]
[96.91205597 42.04036713]
[94.24626160 27.27915192]
[81.54656219 18.25942993]
[79.05334473 3.25148129]
[87.73052979 -8.80015659]
[85.06473541 -23.56137276]
[82.39894104 -38.32258987]
[79.73314667 -53.08380890]
[77.06735229 -67.84502411]
[71.30807495 -53.99472809]
[60.16750336 -43.95043945]
[45.79671478 -39.65155411]
[30.97047997 -41.92811584]
[18.55151176 -50.34056091]
[10.93771839 -63.26457596]
[9.59920502 -78.20473480]
[14.79441738 -92.27632904]
[25.52024078 -102.76235199]
[39.70568848 -107.63812256]
[54.61177063 -105.96219635]
[67.36035919 -98.05818176]
[75.49033356 -85.45100403]
[75.49033356 -100.45100403]
[75.49033356 -115.45100403]
[75.49033356 -130.45100403]
[72.36092377 -139.03265381]
[75.60366058 -145.67391968]
[75.82698822 -160.67225647]
[61.74637222 -166.33799744]
[50.66596222 -176.71051025]
[44.08429718 -190.38699341]
[42.89148712 -205.51780701]
[47.24885559 -220.05664062]
[56.56710052 -232.03724670]
[69.58600616 -239.83932495]
[84.54487610 -242.40771484]
[99.42064667 -239.39508057]
[112.20148468 -231.20883179]
[121.15888977 -218.95611572]
[125.08145142 -204.29397583]
[123.43866730 -189.20538330]
[116.45272064 -175.73092651]
[105.06839752 -165.69293213]
[90.82532501 -160.44892883]
[90.60199738 -145.45059204]
[90.49033356 -130.45100403]
[90.49033356 -115.45100403]
[90.49033356 -100.45100403]
[90.49033356 -85.45100403]
[91.82856750 -70.51081848]
[94.49436188 -55.74960327]
[97.16015625 -40.98838425]
[99.82595062 -26.22716904]
[102.49175262 -11.46595192]
[114.83625031 -3.21071720]
[117.75002289 11.72128105]
[109.00747681 24.61335564]
[111.67327118 39.37457275]
[114.33906555 54.13579178]
[118.47517395 39.71730804]
[125.48067474 26.45371056]
[135.05767822 14.90896893]
[146.79896545 5.57397175]
[160.20529175 -1.15435088]
[174.70661926 -4.98990822]
[189.68634033 -5.76960945]
[204.50750732 -3.46030235]
[218.53993225 1.83982062]
[231.18692017 9.90539551]
[241.91073608 20.39347076]
[250.25540161 32.85808563]
[255.86607361 46.76924133]
[258.50421143 61.53542709]
[258.05761719 76.52877808]
[254.54530334 91.11177063]
[248.11659241 104.66432190]
[239.04486084 116.61017609]
[227.71580505 126.44139099]
[214.61117554 133.73992920]
[200.28819275 138.19548035]
[185.35585022 139.61854553]
[170.44908142 137.94865417]
[156.20175171 133.25680542]
[143.21965027 125.74247742]
[132.05477905 115.72520447]
[123.18189240 103.63092041]
[116.97824860 89.97387695]
[113.70761871 75.33460999]
[110.16794586 89.91098022]
[113.91941071 103.38013458]
[104.40843201 113.62868500]
[100.86875916 128.20506287]
[97.32908630 142.78143311]
[93.89802551 157.38375854]
[90.57575989 172.01121521]
[87.25350189 186.63868713]
[83.93124390 201.26614380]
[80.60898590 215.89360046]
[77.28672791 230.52105713]
[74.40145111 245.24095154]
[71.95572662 260.04022217]
[69.50999451 274.83950806]
[68.06057739 289.76931763]
[67.61397552 304.76266479]
[67.16736603 319.75601196]
[66.72076416 334.74935913]
[66.27415466 349.74270630]
[65.82754517 364.73605347]
[72.86326599 351.48846436]
[82.72867584 340.18917847]
[94.90625763 331.43093872]
[108.75718689 325.67321777]
[123.55488586 323.21798706]
[138.52310181 324.19409180]
[152.87660217 328.55032349]
[165.86247253 336.05813599]
[176.79946899 346.32373047]
[185.11386108 358.80853271]
[190.36950684 372.85766602]
[192.29071045 387.73413086]
[190.77665710 402.65753174]
[185.90679932 416.84500122]
[177.93659973 429.55233765]
[167.28414917 440.11288452]
[154.50825500 447.97268677]
[140.27911377 452.71942139]
[125.34315491 454.10409546]
[110.48390198 452.05407715]
[96.48083496 446.67691040]
[84.06852722 438.25463867]
[73.89809418 427.22909546]
[66.50307465 414.17868042]
[62.27138138 399.78796387]
[61.42510223 384.81021118]
[55.55614090 398.61437988]
[49.68717957 412.41854858]
[43.81821823 426.22271729]
[37.94926071 440.02691650]
[32.08029938 453.83108521]
[44.51769257 462.30441284]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 209]
[30 208]
[31 207]
[32 206]
[33 205]
[34 204]
[35 178]
[36 177]
[37 176]
[38 175]
[39 174]
[40 173]
[50 172]
[51 171]
[52 170]
[57 169]
[58 168]
[59 167]
[60 166]
[61 165]
[62 164]
[64 163]
[65 162]
[66 161]
[68 159]
[69 158]
[70 129]
[71 128]
[72 127]
[75 124]
[76 123]
[77 122]
[78 121]
[79 120]
[92 119]
[93 118]
[94 117]
[95 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
