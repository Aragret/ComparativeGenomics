%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAUxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[-16.90612221 380.93444824]
[-9.06469536 393.75857544]
[-3.32605982 407.65155029]
[0.16846366 422.27120972]
[1.33281958 437.25756836]
[0.13833477 452.24154663]
[-3.38557577 466.85415649]
[-9.15213203 480.73556519]
[-17.01932907 493.54391479]
[-26.79342651 504.96377563]
[-38.23373413 514.71392822]
[-51.05851746 522.55432129]
[-64.95195770 528.29180908]
[-79.57191467 531.78515625]
[-94.55836487 532.94824219]
[-109.54225159 531.75250244]
[-124.15457153 528.22741699]
[-138.03550720 522.45971680]
[-150.84320068 514.59143066]
[-162.26226807 504.81640625]
[-172.01148987 493.37530518]
[-179.85079956 480.54986572]
[-185.58714294 466.65597534]
[-189.07925415 452.03570557]
[-190.24113464 437.04916382]
[-189.04418945 422.06539917]
[-185.51786804 407.45333862]
[-179.74900818 393.57290649]
[-171.87969971 380.76583862]
[-162.10372925 369.34759521]
[-150.66180420 359.59930420]
[-137.83572388 351.76104736]
[-123.94134521 346.02584839]
[-109.32080841 342.53494263]
[-94.33416748 341.37429810]
[-79.35047913 342.57250977]
[-64.73873901 346.10003662]
[-50.85876465 351.87002563]
[-43.00700760 339.08917236]
[-35.15525055 326.30834961]
[-35.08576965 311.41387939]
[-21.26945114 303.70547485]
[-13.41769600 290.92462158]
[-5.94995499 277.91567993]
[1.12715065 264.69015503]
[0.30997509 249.81796265]
[13.64298534 241.30084229]
[20.72009087 228.07531738]
[27.79719543 214.84979248]
[26.98002052 199.97761536]
[40.31303024 191.46049500]
[37.10825729 179.79618835]
[42.89606857 168.71986389]
[55.05710983 164.42196655]
[62.33033752 151.30326843]
[55.59061813 139.77859497]
[55.42426682 126.32064056]
[61.98168182 114.44335938]
[73.64368439 107.30078888]
[87.42002106 106.84977722]
[87.57736206 92.86883545]
[99.57102966 85.68247986]
[107.03877258 72.67353058]
[114.50650787 59.66457367]
[121.97425079 46.65562439]
[129.44198608 33.64667130]
[136.90972900 20.63771820]
[144.37747192 7.62876558]
[145.93582153 -1.37175536]
[152.05447388 -5.51708889]
[152.45013428 -21.33334732]
[165.60221863 -28.32419586]
[173.26281738 -41.22052383]
[178.40476990 -55.31166458]
[180.85050964 -70.11093140]
[183.29623413 -84.91020203]
[185.74195862 -99.70947266]
[188.18768311 -114.50874329]
[182.80401611 -129.38580322]
[192.51293945 -140.68119812]
[187.12928772 -155.55825806]
[196.83821106 -166.85365295]
[184.04522705 -159.02168274]
[169.42955017 -162.39543152]
[161.36370850 -175.04225159]
[164.46817017 -189.71748352]
[176.96456909 -198.01448059]
[191.69438171 -195.18034363]
[200.21952820 -182.83953857]
[203.97583008 -197.36158752]
[207.73213196 -211.88365173]
[211.48843384 -226.40571594]
[215.24473572 -240.92776489]
[219.00102234 -255.44982910]
[222.75732422 -269.97189331]
[226.51362610 -284.49395752]
[212.80041504 -290.66290283]
[200.32711792 -299.06079102]
[189.45259094 -309.44598389]
[180.48973083 -321.51974487]
[173.69642639 -334.93460083]
[169.26811218 -349.30465698]
[167.33221436 -364.21640015]
[167.94444275 -379.24081421]
[171.08715820 -393.94564819]
[176.66995239 -407.90774536]
[184.53219604 -420.72543335]
[194.44767761 -432.02990723]
[206.13110352 -441.49594116]
[219.24632263 -448.85113525]
[233.41598511 -453.88388062]
[248.23240662 -456.44940186]
[263.26928711 -456.47387695]
[278.09396362 -453.95657349]
[292.27990723 -448.96990967]
[305.41900635 -441.65740967]
[317.13314819 -432.22946167]
[327.08535767 -420.95730591]
[334.98925781 -408.16525269]
[340.61743164 -394.22137451]
[343.80798340 -379.52688599]
[344.46908569 -364.50454712]
[342.58169556 -349.58654785]
[338.20016479 -335.20217896]
[331.45053101 -321.76528931]
[322.52700806 -309.66244507]
[311.68630981 -299.24191284]
[299.24038696 -290.80349731]
[285.54733276 -284.58996582]
[271.00106812 -280.78012085]
[256.02020264 -279.48358154]
[241.03569031 -280.73764038]
[237.27938843 -266.21557617]
[233.52308655 -251.69352722]
[229.76678467 -237.17146301]
[226.01048279 -222.64941406]
[222.25418091 -208.12734985]
[218.49787903 -193.60528564]
[214.74159241 -179.08323669]
[211.63748169 -164.40792847]
[217.19607544 -150.58941650]
[207.31221008 -138.23547363]
[212.87081909 -124.41696167]
[202.98695374 -112.06301880]
[200.54122925 -97.26374817]
[198.09550476 -82.46447754]
[195.64978027 -67.66520691]
[193.20404053 -52.86593628]
[201.94657898 -65.05478668]
[213.23313904 -74.93473816]
[226.47166443 -81.98752594]
[240.96766663 -85.84315491]
[255.96072388 -86.29936981]
[270.66433716 -83.33225250]
[284.30718994 -77.09743500]
[296.17355347 -67.92199707]
[305.64102173 -56.28725433]
[312.21292114 -42.80354309]
[315.54446411 -28.17819786]
[315.46090698 -13.17843056]
[311.96667480 1.40890026]
[305.24502563 14.81857204]
[295.64855957 26.34714127]
[283.68069458 35.38983917]
[269.96926880 41.47230911]
[255.23350525 44.27547455]
[240.24645996 43.65228271]
[225.79429626 39.63543320]
[212.63516235 32.43563461]
[201.45935059 22.43057632]
[192.85311890 10.14510536]
[187.26792908 -3.77630830]
[184.99679565 -18.60337448]
[186.15914917 -33.55992508]
[178.49855042 -20.66359711]
[178.65083313 -5.76977110]
[164.95080566 2.14350843]
[157.38642883 15.09650707]
[149.91868591 28.10545921]
[142.45094299 41.11441040]
[134.98320007 54.12336349]
[127.51546478 67.13231659]
[120.04772186 80.14126587]
[112.57997894 93.15022278]
[112.42263794 107.13116455]
[100.42897034 114.31752014]
[107.55633545 129.65690613]
[104.16991425 146.05914307]
[91.79828644 157.10017395]
[75.44903564 158.57650757]
[68.17580414 171.69519043]
[68.92283630 190.09420776]
[53.53855896 198.53759766]
[53.84953308 214.35574341]
[41.02272415 221.92689514]
[33.94561768 235.15242004]
[26.86851311 248.37794495]
[27.17948723 264.19610596]
[14.35267830 271.76724243]
[7.27557278 284.99276733]
[7.57005739 289.32489014]
[6.57114744 293.14154053]
[4.59971428 296.09936523]
[2.05516553 297.99459839]
[-0.63685346 298.77636719]
[-8.48860931 311.55722046]
[-9.11969948 327.36584473]
[-22.37440872 334.16009521]
[-30.22616386 346.94094849]
[-38.07791901 359.72177124]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 210]
[39 209]
[40 208]
[42 206]
[43 205]
[44 200]
[45 199]
[47 197]
[48 196]
[49 195]
[51 193]
[54 191]
[55 190]
[60 186]
[62 184]
[63 183]
[64 182]
[65 181]
[66 180]
[67 179]
[68 178]
[70 177]
[72 175]
[73 174]
[74 148]
[75 147]
[76 146]
[77 145]
[78 144]
[80 142]
[82 140]
[89 139]
[90 138]
[91 137]
[92 136]
[93 135]
[94 134]
[95 133]
[96 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
