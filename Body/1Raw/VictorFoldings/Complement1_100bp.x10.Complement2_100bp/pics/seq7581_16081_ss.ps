%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[210.65357971 279.60809326]
[213.92068481 264.95935059]
[218.38632202 250.63044739]
[224.01998901 236.71925354]
[230.78320312 223.32080078]
[238.62976074 210.52661133]
[226.53401184 201.65571594]
[214.43824768 192.78482056]
[202.34249878 183.91392517]
[191.71003723 188.05120850]
[180.28242493 186.52633667]
[170.91395569 179.60351562]
[166.00077820 168.90951538]
[166.86856079 157.05271912]
[155.04229736 147.82562256]
[143.21601868 138.59852600]
[131.38975525 129.37142944]
[119.09891510 120.77285767]
[106.37688446 112.82617188]
[92.41147614 112.14865112]
[85.67643738 99.89585876]
[72.95439911 91.94917297]
[76.41654205 106.54415894]
[69.79986572 120.00593567]
[56.12940979 126.17996979]
[41.65512848 122.24356842]
[32.99447250 109.99640656]
[34.10697174 95.03771973]
[44.48400879 84.20642090]
[59.38314438 82.45484924]
[47.55687714 73.22774506]
[35.73060608 64.00064850]
[23.90433693 54.77355194]
[12.00970364 45.63475037]
[0.04736656 36.58474731]
[-8.68447781 33.90282822]
[-12.02436447 27.30987930]
[-23.85063362 18.08278084]
[-34.04073334 29.10223770]
[-45.11718369 39.23035431]
[-57.00229645 48.39609146]
[-69.61269379 56.53515244]
[-82.85993958 63.59044647]
[-96.65109253 69.51248932]
[-110.88942719 74.25974274]
[-125.47506714 77.79889679]
[-140.30570984 80.10514069]
[-155.27731323 81.16228485]
[-170.28486633 80.96292114]
[-185.22311401 79.50844574]
[-199.98724365 76.80906677]
[-214.47372437 72.88371277]
[-228.58093262 67.75991058]
[-242.20991516 61.47361755]
[-255.26506042 54.06891632]
[-267.65481567 45.59775162]
[-279.29226685 36.11953735]
[-290.09576416 25.70076370]
[-299.98953247 14.41451073]
[-308.90420532 2.33994198]
[-316.77725220 -10.43824482]
[-323.55337524 -23.83041954]
[-329.18515015 -37.74264145]
[-333.63299561 -52.07732773]
[-336.86572266 -66.73393250]
[-338.86068726 -81.60963440]
[-339.60385132 -96.60010529]
[-339.09005737 -111.60018921]
[-337.32287598 -126.50467682]
[-334.31469727 -141.20901489]
[-330.08663940 -155.61004639]
[-324.66836548 -169.60679626]
[-318.09783936 -183.10104370]
[-310.42120361 -195.99816895]
[-301.69226074 -208.20768738]
[-291.97229004 -219.64395142]
[-281.32940674 -230.22676086]
[-269.83831787 -239.88186646]
[-257.57958984 -248.54156494]
[-244.63922119 -256.14508057]
[-231.10798645 -262.63912964]
[-217.08081055 -267.97808838]
[-202.65606689 -272.12457275]
[-187.93493652 -275.04946899]
[-173.02069092 -276.73226929]
[-158.01794434 -277.16119385]
[-143.03192139 -276.33316040]
[-128.16773987 -274.25402832]
[-113.52967072 -270.93841553]
[-99.22039032 -266.40948486]
[-85.34026337 -260.69909668]
[-71.98665619 -253.84725952]
[-59.25323105 -245.90203857]
[-47.22931290 -236.91917419]
[-35.99923706 -226.96166992]
[-25.64177513 -216.09936523]
[-16.22957993 -204.40847778]
[-7.82867289 -191.97097778]
[-0.49798024 -178.87413025]
[5.71107769 -165.20979309]
[10.75494766 -151.07380676]
[14.59825039 -136.56533813]
[17.21402740 -121.78615570]
[18.58392906 -106.83992767]
[18.69834900 -91.83148193]
[17.55648422 -76.86609650]
[15.16634178 -62.04874802]
[11.54468918 -47.48337173]
[6.71692896 -33.27213287]
[0.71692628 -19.51471901]
[-6.41323328 -6.30762291]
[-14.62353611 6.25651169]
[-2.79726648 15.48361015]
[9.09736633 24.62241173]
[21.05970383 33.67241287]
[28.29053688 35.20108795]
[33.13143539 42.94728088]
[44.95770264 52.17438126]
[56.78397369 61.40147781]
[68.61024475 70.62857819]
[80.90108490 79.22714233]
[93.62311554 87.17382812]
[107.58852386 87.85134888]
[114.32356262 100.10414124]
[127.04560089 108.05082703]
[123.58345795 93.45584106]
[130.20013428 79.99406433]
[143.87059021 73.82003021]
[158.34486389 77.75643158]
[167.00552368 90.00359344]
[165.89303589 104.96228027]
[155.51599121 115.79357910]
[140.61685181 117.54515076]
[152.44313049 126.77225494]
[164.26939392 135.99934387]
[176.09565735 145.22645569]
[194.79570007 142.18952942]
[209.52459717 153.59007263]
[211.21339417 171.81817627]
[223.30914307 180.68907166]
[235.40490723 189.55996704]
[247.50065613 198.43086243]
[257.34552002 187.10221863]
[268.09228516 176.62525940]
[279.66751099 167.07154846]
[291.99215698 158.50636292]
[304.98202515 150.98818970]
[318.54840088 144.56840515]
[332.59854126 139.29084778]
[347.03652954 135.19158936]
[361.76373291 132.29861450]
[376.67953491 130.63168335]
[391.68203735 130.20220947]
[406.66876221 131.01309204]
[421.53732300 133.05882263]
[436.18618774 136.32539368]
[450.51525879 140.79052734]
[464.42663574 146.42370605]
[477.82534790 153.18643188]
[490.61981201 161.03253174]
[502.72262573 169.90840149]
[514.05114746 179.75340271]
[524.52801514 190.50028992]
[534.08154297 202.07563782]
[542.64660645 214.40039062]
[550.16461182 227.39035034]
[556.58422852 240.95677185]
[561.86163330 255.00698853]
[565.96075439 269.44503784]
[568.85351562 284.17227173]
[570.52026367 299.08807373]
[570.94958496 314.09057617]
[570.13848877 329.07730103]
[568.09259033 343.94586182]
[564.82586670 358.59466553]
[560.36053467 372.92367554]
[554.72723389 386.83502197]
[547.96429443 400.23361206]
[540.11804199 413.02798462]
[531.24206543 425.13070679]
[521.39691162 436.45913696]
[510.64990234 446.93582153]
[499.07443237 456.48925781]
[486.74960327 465.05416870]
[473.75955200 472.57202148]
[460.19305420 478.99148560]
[446.14276123 484.26870728]
[431.70468140 488.36761475]
[416.97741699 491.26025391]
[402.06158447 492.92681885]
[387.05905151 493.35595703]
[372.07235718 492.54470825]
[357.20382690 490.49862671]
[342.55505371 487.23168945]
[328.22607422 482.76620483]
[314.31481934 477.13272095]
[300.91629028 470.36965942]
[288.12200928 462.52325439]
[276.01940918 453.64709473]
[264.69110107 443.80181885]
[254.21453857 433.05468750]
[244.66123962 421.47912598]
[236.09648132 409.15414429]
[228.57878113 396.16403198]
[222.15946960 382.59744263]
[216.88243103 368.54708862]
[212.78367615 354.10894775]
[209.89123535 339.38165283]
[208.22483826 324.46582031]
[207.79589844 309.46328735]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 142]
[7 141]
[8 140]
[9 139]
[14 136]
[15 135]
[16 134]
[17 133]
[18 125]
[19 124]
[21 122]
[22 121]
[30 120]
[31 119]
[32 118]
[33 117]
[34 115]
[35 114]
[37 113]
[38 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
