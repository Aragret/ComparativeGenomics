%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[142.95570374 746.68432617]
[128.88954163 741.46356201]
[115.12947845 735.48248291]
[101.71657562 728.75885010]
[88.69085693 721.31280518]
[76.09119415 713.16656494]
[63.95520020 704.34442139]
[52.31908417 694.87268066]
[41.21757889 684.77966309]
[30.68381310 674.09539795]
[20.74922371 662.85186768]
[11.44345856 651.08264160]
[2.79429293 638.82275391]
[-5.17246246 626.10882568]
[-12.43303108 612.97882080]
[-18.96574402 599.47192383]
[-24.75110817 585.62841797]
[-29.77185249 571.48962402]
[-34.01299667 557.09777832]
[-37.46188354 542.49578857]
[-40.10821533 527.72723389]
[-41.94410324 512.83624268]
[-42.96405792 497.86718750]
[-43.16504288 482.86474609]
[-42.54645538 467.87374878]
[-41.11014557 452.93890381]
[-38.86039352 438.10476685]
[-35.80391693 423.41561890]
[-31.94983673 408.91531372]
[-27.30965424 394.64712524]
[-21.89722061 380.65359497]
[-15.72868633 366.97653198]
[-8.82246113 353.65673828]
[-1.19915712 340.73397827]
[7.11847591 328.24676514]
[16.10561562 316.23245239]
[25.73543739 304.72680664]
[35.97920609 293.76425171]
[46.80634689 283.37741089]
[58.18454742 273.59738159]
[70.07984924 264.45327759]
[82.45676422 255.97241211]
[95.27833557 248.18009949]
[108.50630951 241.09959412]
[122.10120392 234.75201416]
[136.02246094 229.15632629]
[131.19645691 214.95387268]
[126.37046051 200.75141907]
[121.54446411 186.54896545]
[110.12376404 176.98773193]
[113.00970459 161.43197632]
[108.18370056 147.22950745]
[96.76300812 137.66828918]
[99.64894867 122.11252594]
[94.82294464 107.91006470]
[90.76483917 104.58655548]
[88.85770416 99.22594452]
[90.07154846 93.21233368]
[85.67054749 78.87248993]
[70.55857849 78.57942963]
[56.29640961 73.63645935]
[44.27664948 64.53955078]
[35.66884613 52.18962097]
[31.30565643 37.80333710]
[31.60234451 22.79324150]
[36.51726913 8.62907505]
[45.55721283 -3.30614829]
[57.82683182 -11.85117245]
[53.42583466 -26.19101906]
[49.02483368 -40.53086853]
[44.51720810 -54.83755493]
[39.90319824 -69.11029053]
[35.28918839 -83.38301849]
[23.68208504 -94.13410187]
[27.12932968 -108.62429810]
[22.51531982 -122.89703369]
[7.65487099 -120.62475586]
[-7.37763596 -120.76583099]
[-22.19282341 -123.31660461]
[-36.40694046 -128.21098328]
[-49.65180969 -135.32221985]
[-61.58435440 -144.46611023]
[-71.89549255 -155.40577698]
[-80.31814575 -167.85789490]
[-86.63414001 -181.49990845]
[-90.67988586 -195.97843933]
[-92.35057831 -210.91848755]
[-91.60294342 -225.93305969]
[-88.45635986 -240.63322449]
[-82.99231720 -254.63824463]
[-75.35234833 -267.58532715]
[-65.73435211 -279.13912964]
[-54.38745880 -289.00036621]
[-41.60557556 -296.91363525]
[-27.71978760 -302.67391968]
[-13.08976746 -306.13208008]
[1.90553105 -307.19845581]
[16.87769318 -305.84548950]
[31.43890572 -302.10821533]
[45.21199417 -296.08340454]
[57.84020615 -287.92715454]
[68.99644470 -277.85073853]
[78.39172363 -266.11511230]
[85.78269196 -253.02427673]
[90.97790527 -238.91732788]
[93.84279633 -224.15966797]
[94.30315399 -209.13354492]
[92.34705353 -194.22817993]
[88.02516174 -179.82966614]
[81.44943237 -166.31094360]
[72.79018402 -154.02217102]
[62.27172470 -143.28169250]
[50.16649246 -134.36767578]
[36.78805542 -127.51103973]
[41.40206146 -113.23830414]
[52.67914200 -103.50811005]
[49.56192017 -87.99703217]
[54.17593002 -73.72429657]
[58.78993988 -59.45156479]
[63.83851242 -54.05399704]
[63.36468124 -44.93186569]
[67.76567841 -30.59201813]
[72.16667938 -16.25217056]
[87.11741638 -16.06126213]
[101.29633331 -11.25206661]
[113.31081390 -2.28365040]
[121.97669983 9.97576714]
[126.43505096 24.33284569]
[126.23722076 39.38528442]
[121.38999939 53.65878677]
[112.35618591 65.75145721]
[100.01039886 74.47148895]
[104.41139221 88.81134033]
[109.02540588 103.08406830]
[113.85140228 117.28652954]
[125.61728668 127.86360168]
[122.38616180 142.40351868]
[127.21215820 156.60597229]
[138.97804260 167.18304443]
[135.74691772 181.72296143]
[140.57290649 195.92541504]
[145.39891052 210.12786865]
[150.22491455 224.33032227]
[164.67330933 220.28601074]
[179.32101440 217.03674316]
[194.12429810 214.59220886]
[209.03898621 212.95974731]
[224.02056885 212.14418030]
[239.02432251 212.14797974]
[254.00549316 212.97111511]
[268.91934204 214.61112976]
[283.72140503 217.06312561]
[298.36746216 220.31980896]
[312.81381226 224.37142944]
[327.01736450 229.20591736]
[340.93569946 234.80883789]
[354.52728271 241.16346741]
[367.75158691 248.25083923]
[380.56912231 256.04980469]
[392.94161987 264.53710938]
[404.83218384 273.68737793]
[416.20529175 283.47332764]
[427.02703857 293.86578369]
[437.26510620 304.83367920]
[446.88894653 316.34429932]
[455.86984253 328.36328125]
[464.18099976 340.85479736]
[471.79760742 353.78152466]
[478.69689941 367.10491943]
[484.85833740 380.78518677]
[490.26348877 394.78149414]
[494.89627075 409.05212402]
[498.74282837 423.55441284]
[501.79165649 438.24514771]
[504.03372192 453.08044434]
[505.46228027 468.01605225]
[506.07305908 483.00735474]
[505.86428833 498.00967407]
[504.83657837 512.97821045]
[502.99295044 527.86828613]
[500.33895874 542.63543701]
[496.88247681 557.23559570]
[492.63385010 571.62530518]
[487.60577393 585.76147461]
[481.81323242 599.60192871]
[475.27349854 613.10546875]
[468.00610352 626.23168945]
[460.03274536 638.94146729]
[451.37722778 651.19683838]
[442.06533813 662.96130371]
[432.12490845 674.19964600]
[421.58560181 684.87841797]
[410.47885132 694.96569824]
[398.83782959 704.43139648]
[386.69726562 713.24719238]
[374.09335327 721.38690186]
[361.06378174 728.82623291]
[347.64736938 735.54284668]
[333.88421631 741.51678467]
[319.81533813 746.73022461]
[305.48278809 751.16760254]
[290.92926025 754.81567383]
[276.19827271 757.66351318]
[261.33370972 759.70269775]
[246.38000488 760.92706299]
[231.38172913 761.33300781]
[216.38366699 760.91925049]
[201.43058777 759.68713379]
[186.56710815 757.64025879]
[171.83757019 754.78472900]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 143]
[47 142]
[48 141]
[49 140]
[51 138]
[52 137]
[54 135]
[55 134]
[58 133]
[59 132]
[68 123]
[69 122]
[70 121]
[71 119]
[72 118]
[73 117]
[75 115]
[76 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
