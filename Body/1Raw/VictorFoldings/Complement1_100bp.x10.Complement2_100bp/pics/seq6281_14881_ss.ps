%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[94.13265228 909.70312500]
[79.17036438 908.61059570]
[64.26554871 906.90472412]
[49.44332504 904.58837891]
[34.72870255 901.66546631]
[20.14648438 898.14086914]
[5.72126341 894.02062988]
[-8.52263832 889.31158447]
[-22.56120110 884.02172852]
[-36.37075424 878.15997314]
[-49.92800903 871.73626709]
[-63.21010590 864.76135254]
[-76.19464874 857.24700928]
[-88.85974121 849.20593262]
[-101.18402863 840.65161133]
[-113.14672852 831.59863281]
[-124.72767639 822.06207275]
[-135.90733337 812.05810547]
[-146.66685486 801.60363770]
[-156.98808289 790.71624756]
[-166.85363770 779.41424561]
[-176.24685669 767.71679688]
[-185.15193176 755.64355469]
[-193.55383301 743.21484375]
[-201.43836975 730.45172119]
[-208.79228210 717.37567139]
[-215.60316467 704.00866699]
[-221.85951233 690.37335205]
[-227.55078125 676.49273682]
[-232.66738892 662.39007568]
[-237.20068359 648.08929443]
[-241.14305115 633.61444092]
[-244.48782349 618.98992920]
[-247.22937012 604.24041748]
[-249.36306763 589.39080811]
[-250.88529968 574.46612549]
[-251.79351807 559.49151611]
[-252.08619690 544.49224854]
[-251.76283264 529.49359131]
[-250.82395935 514.52093506]
[-249.27117920 499.59936523]
[-247.10710144 484.75415039]
[-244.33537292 470.01028442]
[-240.96067810 455.39266968]
[-236.98870850 440.92590332]
[-232.42614746 426.63442993]
[-227.28068542 412.54229736]
[-221.56101990 398.67330933]
[-215.27677917 385.05081177]
[-208.43856812 371.69781494]
[-201.05790710 358.63684082]
[-193.14724731 345.88986206]
[-184.71994019 333.47842407]
[-175.79017639 321.42340088]
[-166.37303162 309.74517822]
[-156.48437500 298.46343994]
[-146.14086914 287.59716797]
[-135.35998535 277.16470337]
[-124.15988159 267.18365479]
[-112.55944061 257.67086792]
[-100.57823944 248.64231873]
[-88.23647308 240.11329651]
[-75.55494690 232.09814453]
[-62.55504990 224.61039734]
[-49.25870895 217.66267395]
[-35.68833542 211.26669312]
[-21.86681557 205.43322754]
[-7.81745577 200.17213440]
[6.43605280 195.49226379]
[20.86967659 191.40151978]
[35.45907593 187.90679932]
[50.17965317 185.01400757]
[65.00657654 182.72799683]
[79.91486359 181.05262756]
[94.87934875 179.99073792]
[86.76654053 167.49948120]
[94.08953094 153.47505188]
[93.64292908 138.48170471]
[93.19631958 123.48835754]
[92.74971008 108.49501038]
[92.19150543 93.50539398]
[91.52172089 78.52035522]
[90.85192871 63.53532028]
[76.09995270 56.06732941]
[67.17816162 42.25801468]
[66.44210052 25.92782211]
[73.99807739 11.53813553]
[87.69993591 2.97241616]
[86.80712128 -12.00098991]
[85.91430664 -26.97439575]
[85.02149200 -41.94779968]
[76.47650909 -55.26297379]
[83.44255066 -68.42821503]
[82.54972839 -83.40161896]
[67.90486145 -87.19410706]
[55.14979553 -95.32819366]
[45.53414154 -107.00699615]
[39.99994659 -121.08634186]
[39.08939743 -136.18687439]
[42.89169693 -150.82919312]
[51.03433228 -163.57881165]
[62.71957397 -173.18664551]
[76.80261993 -178.71139526]
[91.90376282 -179.61183167]
[106.54354095 -175.79971313]
[119.28768921 -167.64854431]
[128.88768005 -155.95686340]
[134.40299988 -141.87011719]
[135.29331970 -126.76837921]
[131.47140503 -112.13115692]
[123.31168365 -99.39247131]
[111.61357880 -89.80031586]
[97.52313995 -84.29443359]
[98.41595459 -69.32102966]
[106.89707947 -57.07685471]
[99.99489594 -42.84061813]
[100.88771057 -27.86721039]
[101.78052521 -12.89380550]
[102.67333984 2.07960033]
[115.26260376 7.37370920]
[124.38646698 17.62474823]
[128.22180176 30.87010002]
[125.96537781 44.54075241]
[118.00128174 55.95957184]
[105.83696747 62.86553574]
[106.50675964 77.85057068]
[107.17654419 92.83560944]
[110.65391541 100.10750580]
[107.74306488 108.04840088]
[108.18966675 123.04174805]
[108.63627625 138.03509521]
[109.08287811 153.02845764]
[117.22763062 166.59213257]
[109.87270355 179.54412842]
[124.87387085 179.71343994]
[139.85543823 180.49847412]
[154.79214478 181.89791870]
[169.65879822 183.90940857]
[184.43034363 186.52955627]
[199.08186340 189.75393677]
[213.58865356 193.57711792]
[227.92625427 197.99266052]
[242.07048035 202.99310303]
[255.99748230 208.57002258]
[269.68377686 214.71401978]
[283.10632324 221.41473389]
[296.24243164 228.66084290]
[309.06997681 236.44015503]
[321.56732178 244.73954773]
[333.71340942 253.54502869]
[345.48773193 262.84173584]
[356.87045288 272.61401367]
[367.84237671 282.84533691]
[378.38500977 293.51852417]
[388.48056030 304.61550903]
[398.11203003 316.11764526]
[407.26315308 328.00549316]
[415.91848755 340.25900269]
[424.06344604 352.85754395]
[431.68432617 365.77984619]
[438.76824951 379.00411987]
[445.30328369 392.50808716]
[451.27838135 406.26895142]
[456.68350220 420.26354980]
[461.50952148 434.46823120]
[465.74829102 448.85906982]
[469.39266968 463.41180420]
[472.43652344 478.10189819]
[474.87469482 492.90457153]
[476.70309448 507.79486084]
[477.91860962 522.74768066]
[478.51922607 537.73773193]
[478.50393677 552.73986816]
[477.87271118 567.72869873]
[476.62667847 582.67895508]
[474.76788330 597.56549072]
[472.29953003 612.36315918]
[469.22570801 627.04699707]
[465.55163574 641.59228516]
[461.28350830 655.97442627]
[456.42852783 670.16925049]
[450.99484253 684.15277100]
[444.99166870 697.90142822]
[438.42910767 711.39202881]
[431.31820679 724.60180664]
[423.67095947 737.50854492]
[415.50030518 750.09045410]
[406.81997681 762.32629395]
[397.64462280 774.19543457]
[387.98971558 785.67785645]
[377.87152100 796.75421143]
[367.30712891 807.40588379]
[356.31436157 817.61480713]
[344.91171265 827.36383057]
[333.11843872 836.63647461]
[320.95440674 845.41711426]
[308.44015503 853.69104004]
[295.59674072 861.44415283]
[282.44589233 868.66345215]
[269.00970459 875.33673096]
[255.31089783 881.45275879]
[241.37252808 887.00128174]
[227.21812439 891.97283936]
[212.87155151 896.35913086]
[198.35699463 900.15270996]
[183.69892883 903.34716797]
[168.92205811 905.93713379]
[154.05133057 907.91827393]
[139.11180115 909.28723145]
[124.12866211 910.04174805]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[75 134]
[77 132]
[78 131]
[79 130]
[80 129]
[81 127]
[82 126]
[83 125]
[88 119]
[89 118]
[90 117]
[91 116]
[93 114]
[94 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
