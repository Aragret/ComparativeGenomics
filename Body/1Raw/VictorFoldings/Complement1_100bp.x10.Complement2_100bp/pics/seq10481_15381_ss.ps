%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUGxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[278.97906494 305.02392578]
[267.41299438 314.57214355]
[255.33848572 323.46871948]
[242.79223633 331.68664551]
[229.81231689 339.20092773]
[216.43817139 345.98876953]
[202.71041870 352.02954102]
[188.67071533 357.30493164]
[174.36174011 361.79885864]
[159.82691956 365.49774170]
[145.11042786 368.39031982]
[130.25691223 370.46780396]
[115.31152344 371.72390747]
[100.31962585 372.15475464]
[85.32675934 371.75912476]
[70.37845612 370.53814697]
[55.52011490 368.49554443]
[40.79685593 365.63754272]
[26.25339317 361.97280884]
[11.93389702 357.51248169]
[-2.11814642 352.27011108]
[-15.86006069 346.26156616]
[-29.25011444 339.50515747]
[-42.24763870 332.02139282]
[-54.81316376 323.83297729]
[-66.90852356 314.96478271]
[-78.49699402 305.44375610]
[-89.54337311 295.29882812]
[-100.01412201 284.56076050]
[-109.87742615 273.26217651]
[-119.10334778 261.43740845]
[-127.66386414 249.12237549]
[-135.53295898 236.35446167]
[-142.68676758 223.17243958]
[-149.10354614 209.61634827]
[-154.76379395 195.72735596]
[-159.65034485 181.54765320]
[-163.74833679 167.12028503]
[-167.04534912 152.48907471]
[-169.53134155 137.69845581]
[-171.19879150 122.79335022]
[-172.04260254 107.81902313]
[-172.06025696 92.82094574]
[-171.25164795 77.84467316]
[-169.61927795 62.93568802]
[-167.16807556 48.13926697]
[-163.90550232 33.50033951]
[-159.84144592 19.06337166]
[-154.98828125 4.87220478]
[-149.36070251 -9.03006268]
[-142.97584534 -22.60120964]
[-135.85307312 -35.80002213]
[-128.01402283 -48.58641815]
[-119.48250580 -60.92155838]
[-110.28442383 -72.76799011]
[-100.44772339 -84.08972931]
[-90.00226593 -94.85239410]
[-78.97978210 -105.02330780]
[-67.41374207 -114.57156372]
[-55.33927536 -123.46817780]
[-42.79304886 -131.68612671]
[-29.81316376 -139.20045471]
[-16.43904305 -145.98834229]
[-2.71130013 -152.02917480]
[11.32837200 -157.30461121]
[25.63733673 -161.79861450]
[40.17213821 -165.49754333]
[54.88863373 -168.39016724]
[69.74213409 -170.46771240]
[84.68752289 -171.72384644]
[99.67941284 -172.15476990]
[114.67227936 -171.75915527]
[129.62059021 -170.53823853]
[144.47894287 -168.49569702]
[159.20220947 -165.63775635]
[173.74568176 -161.97306824]
[188.06520081 -157.51280212]
[202.11726379 -152.27046204]
[215.85919189 -146.26197815]
[229.24926758 -139.50563049]
[242.24682617 -132.02189636]
[254.81237793 -123.83352661]
[266.90777588 -114.96537781]
[278.49627686 -105.44439697]
[289.54269409 -95.29948425]
[300.01345825 -84.56145477]
[309.87683105 -73.26291656]
[321.70309448 -82.49002075]
[333.52935791 -91.71711731]
[345.35562134 -100.94421387]
[357.18188477 -110.17131042]
[369.00817871 -119.39841461]
[380.83444214 -128.62550354]
[392.66070557 -137.85260010]
[384.32815552 -150.33363342]
[376.94012451 -163.39595032]
[370.53698730 -176.96823120]
[365.15365601 -190.97633362]
[360.81958008 -205.34376526]
[357.55841064 -219.99205017]
[355.38796997 -234.84117126]
[354.32009888 -249.81002808]
[354.36062622 -264.81686401]
[355.50936890 -279.77975464]
[357.76000977 -294.61694336]
[361.10028076 -309.24737549]
[365.51193237 -323.59115601]
[370.97085571 -337.56997681]
[377.44726562 -351.10748291]
[384.90576172 -364.12966919]
[393.30563354 -376.56549072]
[402.60098267 -388.34701538]
[412.74102783 -399.40985107]
[423.67041016 -409.69360352]
[435.32943726 -419.14212036]
[447.65441895 -427.70376587]
[460.57806396 -435.33178711]
[474.02975464 -441.98455811]
[487.93603516 -447.62570190]
[502.22097778 -452.22439575]
[516.80651855 -455.75558472]
[531.61303711 -458.19992065]
[546.55957031 -459.54409790]
[561.56463623 -459.78073120]
[576.54620361 -458.90856934]
[591.42236328 -456.93237305]
[606.11206055 -453.86288452]
[620.53485107 -449.71694946]
[634.61212158 -444.51712036]
[648.26690674 -438.29187012]
[661.42468262 -431.07516479]
[674.01354980 -422.90643311]
[685.96472168 -413.83029175]
[697.21295166 -403.89630127]
[707.69683838 -393.15872192]
[717.35906982 -381.67620850]
[726.14691162 -369.51147461]
[734.01232910 -356.73092651]
[740.91241455 -343.40441895]
[746.80944824 -329.60470581]
[751.67126465 -315.40713501]
[755.47125244 -300.88931274]
[758.18865967 -286.13049316]
[759.80865479 -271.21127319]
[760.32238770 -256.21316528]
[759.72711182 -241.21807861]
[758.02600098 -226.30789185]
[755.22839355 -211.56407166]
[751.34954834 -197.06710815]
[746.41064453 -182.89620972]
[740.43865967 -169.12876892]
[733.46618652 -155.83996582]
[725.53137207 -143.10237122]
[716.67755127 -130.98559570]
[706.95300293 -119.55577850]
[696.41088867 -108.87536621]
[685.10876465 -99.00267792]
[673.10845947 -89.99165344]
[660.47534180 -81.89148712]
[647.27856445 -74.74643707]
[633.59014893 -68.59552765]
[619.48480225 -63.47233582]
[605.03961182 -59.40486145]
[590.33349609 -56.41530991]
[575.44677734 -54.52001190]
[560.46069336 -53.72931671]
[545.45715332 -54.04755020]
[530.51812744 -55.47296524]
[515.72515869 -57.99778366]
[501.15899658 -61.60821152]
[486.89929199 -66.28453064]
[473.02389526 -72.00119781]
[459.60858154 -78.72699738]
[446.72659302 -86.42518616]
[434.44836426 -95.05372620]
[422.84088135 -104.56549072]
[411.96755981 -114.90852356]
[401.88781738 -126.02633667]
[390.06152344 -116.79924011]
[378.23526001 -107.57214355]
[366.40899658 -98.34503937]
[354.58273315 -89.11794281]
[342.75646973 -79.89084625]
[330.93017578 -70.66374969]
[319.10391235 -61.43664932]
[327.66439819 -49.12158203]
[335.53344727 -36.35363388]
[342.68719482 -23.17158890]
[349.10391235 -9.61547661]
[354.76412964 4.27353430]
[359.65063477 18.45326233]
[363.74856567 32.88064575]
[367.04553223 47.51186752]
[369.53146362 62.30249405]
[371.19885254 77.20760345]
[372.04263306 92.18193817]
[372.06021118 107.18000793]
[371.25158691 122.15628052]
[369.61914062 137.06526184]
[367.16790771 151.86167908]
[363.90527344 166.50059509]
[359.84115601 180.93754578]
[354.98794556 195.12869263]
[349.36032104 209.03094482]
[342.97540283 222.60206604]
[335.85260010 235.80085754]
[328.01348877 248.58721924]
[319.48193359 260.92233276]
[310.28381348 272.76873779]
[300.44708252 284.09042358]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[87 185]
[88 184]
[89 183]
[90 182]
[91 181]
[92 180]
[93 179]
[94 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
