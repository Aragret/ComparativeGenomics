%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[22.79453468 462.45971680]
[19.43565178 446.77221680]
[29.71742058 434.45700073]
[29.71742058 419.45700073]
[29.71742058 404.45700073]
[29.71742058 389.45700073]
[17.42675209 398.05581665]
[2.99831915 393.95455933]
[-2.93177557 380.17651367]
[4.00791407 366.87838745]
[18.70170593 363.86300659]
[30.31717873 373.35174561]
[23.54792023 360.08425903]
[32.29019928 346.89776611]
[33.40584946 331.93933105]
[34.52149582 316.98086548]
[35.63714600 302.02239990]
[27.07791519 314.34066772]
[14.49791241 322.51034546]
[-0.23669387 325.31948853]
[-14.94011307 322.35144043]
[-27.43117905 314.04641724]
[-35.85691833 301.63647461]
[-38.96742249 286.96252441]
[-36.30126190 272.20135498]
[-28.25395393 259.54272461]
[-16.01926231 250.86447144]
[-1.41213393 247.45391846]
[13.40055180 249.81704712]
[26.22142029 257.60327148]
[35.14857483 269.65756226]
[38.85761261 284.18981934]
[43.04462433 269.78604126]
[47.23163605 255.38226318]
[51.41864777 240.97848511]
[55.60565567 226.57470703]
[59.79266739 212.17091370]
[63.97967911 197.76713562]
[49.77732086 202.59341431]
[37.06718445 194.62770081]
[35.21871567 179.74203491]
[45.59453201 168.90956116]
[60.54597092 170.11558533]
[69.05112457 182.46943665]
[74.29784393 168.41697693]
[79.54456329 154.36450195]
[84.79128265 140.31202698]
[88.54757690 125.78997040]
[90.77269745 110.95592499]
[85.83453369 97.87516785]
[94.39325714 86.81896210]
[96.61837769 71.98491669]
[89.59347534 61.16763306]
[91.75217438 48.85813141]
[101.40000153 41.56114578]
[103.84572601 26.76187325]
[106.29145050 11.96260262]
[108.73718262 -2.83666825]
[111.18290710 -17.63593864]
[98.67688751 -22.75502396]
[87.52439117 -30.37402534]
[78.21769714 -40.15330124]
[71.16687012 -51.65793228]
[66.68177032 -64.37706757]
[64.95838165 -77.74659729]
[66.07026672 -91.17417908]
[69.96544647 -104.06549835]
[76.46879578 -115.85054016]
[85.28993988 -126.00880432]
[96.03620148 -134.09231567]
[108.23008728 -139.74536133]
[121.33051300 -142.72012329]
[134.75679016 -142.88758850]
[137.86090088 -157.56289673]
[140.96501160 -172.23818970]
[139.67922974 -181.28167725]
[144.22612000 -187.10813904]
[147.54838562 -201.73559570]
[143.05976868 -216.90670776]
[153.42378235 -227.60420227]
[156.74604797 -242.23165894]
[147.15374756 -256.86065674]
[151.03305054 -273.57189941]
[165.50765991 -282.13485718]
[168.61177063 -296.81018066]
[171.71588135 -311.48547363]
[174.81999207 -326.16076660]
[160.60792542 -331.01614380]
[147.08474731 -337.54922485]
[134.44767761 -345.66476440]
[122.88099670 -355.24438477]
[112.55336761 -366.14837646]
[103.61540985 -378.21777344]
[96.19745636 -391.27655029]
[90.40769196 -405.13424683]
[86.33054352 -419.58880615]
[84.02547455 -434.42944336]
[83.52609253 -449.43969727]
[84.83967590 -464.40069580]
[87.94708252 -479.09429932]
[92.80298615 -493.30618286]
[99.33657837 -506.82910156]
[107.45257568 -519.46588135]
[117.03262329 -531.03222656]
[127.93701935 -541.35943604]
[140.00674438 -550.29693604]
[153.06579590 -557.71435547]
[166.92372131 -563.50360107]
[181.37841797 -567.58026123]
[196.21913147 -569.88476562]
[211.22941589 -570.38360596]
[226.19036865 -569.06945801]
[240.88383484 -565.96148682]
[255.09553528 -561.10504150]
[268.61822510 -554.57092285]
[281.25469971 -546.45446777]
[292.82064819 -536.87402344]
[303.14746094 -525.96923828]
[312.08453369 -513.89916992]
[319.50149536 -500.83981323]
[325.29022217 -486.98168945]
[329.36630249 -472.52682495]
[331.67025757 -457.68603516]
[332.16851807 -442.67572021]
[330.85382080 -427.71481323]
[327.74530029 -413.02148438]
[322.88833618 -398.80996704]
[316.35372925 -385.28750610]
[308.23678589 -372.65133667]
[298.65588379 -361.08572388]
[287.75070190 -350.75933838]
[275.68032837 -341.82272339]
[262.62072754 -334.40625000]
[248.76235962 -328.61804199]
[234.30735779 -324.54251099]
[219.46647644 -322.23910522]
[204.45614624 -321.74139404]
[189.49528503 -323.05667114]
[186.39117432 -308.38137817]
[183.28706360 -293.70605469]
[180.18295288 -279.03076172]
[188.65335083 -269.32086182]
[190.00476074 -256.31103516]
[183.52096558 -244.72781372]
[171.37350464 -238.90940857]
[168.05125427 -224.28193665]
[172.77749634 -210.15707397]
[162.17584229 -198.41333008]
[158.85357666 -183.78587341]
[155.64030457 -169.13409424]
[152.53619385 -154.45878601]
[149.43208313 -139.78347778]
[164.31205750 -132.52235413]
[176.83099365 -121.67077637]
[186.14268494 -107.95520782]
[191.61584473 -92.29595184]
[192.87704468 -75.74539185]
[189.83602905 -59.41724777]
[182.69230652 -44.41167450]
[171.92192078 -31.74108696]
[158.24586487 -22.26189423]
[142.58172607 -16.61658859]
[125.98217773 -15.19021130]
[123.53645325 -0.39094090]
[121.09072113 14.40832996]
[118.64499664 29.20760155]
[116.19927216 44.00687027]
[123.25445557 60.07520294]
[111.45242310 74.21002960]
[109.22730255 89.04407501]
[114.16546631 102.12483215]
[105.60674286 113.18103790]
[103.38162231 128.01509094]
[112.83333588 116.36754608]
[125.98612976 109.15616608]
[140.88885498 107.45069122]
[155.33079529 111.50413513]
[167.16957092 120.71519470]
[174.64895630 133.71745300]
[176.65945435 148.58210754]
[172.90278625 163.10406494]
[163.93626404 175.12910461]
[151.08999634 182.87336731]
[136.26966858 185.18801880]
[121.67376709 181.72973633]
[109.46752167 173.01150513]
[101.46165466 160.32662964]
[98.84375000 145.55874634]
[93.59703064 159.61122131]
[88.35031128 173.66368103]
[83.10359955 187.71615601]
[78.38346100 201.95414734]
[74.19644928 216.35792542]
[70.00943756 230.76171875]
[65.82242584 245.16549683]
[61.63541794 259.56927490]
[57.44840622 273.97305298]
[53.26139450 288.37683105]
[50.59560013 303.13806152]
[49.47994995 318.09649658]
[48.36429977 333.05496216]
[47.24865341 348.01342773]
[53.93811417 362.35083008]
[45.27563095 374.46737671]
[44.71742249 389.45700073]
[44.71742249 404.45700073]
[44.71742249 419.45700073]
[44.71742249 434.45700073]
[54.99919128 446.77221680]
[51.64030838 462.45971680]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 208]
[4 207]
[5 206]
[6 205]
[12 204]
[14 202]
[15 201]
[16 200]
[17 199]
[32 198]
[33 197]
[34 196]
[35 195]
[36 194]
[37 193]
[38 192]
[44 191]
[45 190]
[46 189]
[47 188]
[48 173]
[49 172]
[51 170]
[52 169]
[55 167]
[56 166]
[57 165]
[58 164]
[59 163]
[73 152]
[74 151]
[75 150]
[77 149]
[78 148]
[80 146]
[81 145]
[84 141]
[85 140]
[86 139]
[87 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
