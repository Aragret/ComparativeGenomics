%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[170.76069641 755.32495117]
[160.85380554 744.04290771]
[152.20227051 731.77166748]
[144.90412903 718.65032959]
[139.04206848 704.82757568]
[134.68251038 690.46002197]
[131.87484741 675.71051025]
[130.65089417 660.74609375]
[131.02453613 645.73632812]
[132.99150085 630.85131836]
[136.52954102 616.25976562]
[141.59855652 602.12689209]
[148.14109802 588.61291504]
[156.08305359 575.87097168]
[165.33441162 564.04541016]
[175.79037476 553.27020264]
[187.33244324 543.66741943]
[199.82984924 535.34594727]
[213.14099121 528.40002441]
[227.11502075 522.90838623]
[223.14292908 508.44387817]
[219.17083740 493.97933960]
[215.19874573 479.51483154]
[211.22663879 465.05029297]
[207.25454712 450.58578491]
[203.28245544 436.12124634]
[198.88145447 421.78140259]
[194.05545044 407.57894897]
[189.22946167 393.37649536]
[184.40345764 379.17404175]
[179.57746887 364.97158813]
[168.49369812 362.26669312]
[160.00413513 354.46649170]
[156.29614258 343.42364502]
[158.40054321 331.84469604]
[165.90835571 322.62680054]
[161.50735474 308.28695679]
[157.10635376 293.94711304]
[152.70536804 279.60726929]
[141.57440186 269.71023560]
[144.92221069 254.24729919]
[140.30819702 239.97456360]
[135.48220825 225.77210999]
[130.65620422 211.56965637]
[125.72461700 197.40351868]
[120.68769836 183.27449036]
[108.38780975 179.43493652]
[100.42632294 169.05723572]
[99.88764954 155.79373169]
[107.19230652 144.47752380]
[102.36631012 130.27507019]
[97.54031372 116.07261658]
[84.64415741 105.34576416]
[88.09108734 88.92945862]
[83.05416870 74.80043030]
[68.75366974 63.19969177]
[72.58634186 46.07434464]
[67.33962250 32.02187347]
[58.83303833 44.37654877]
[43.88148499 45.58116150]
[33.50669098 34.74770737]
[35.35657120 19.86221504]
[48.06745529 11.89770889]
[62.26817703 16.72417831]
[58.08116531 2.32039571]
[53.89415359 -12.08338642]
[49.70714188 -26.48716927]
[45.52013016 -40.89094925]
[42.36861420 -26.22575569]
[34.68255615 -13.34458542]
[23.27309036 -3.60682130]
[9.34428024 1.95988810]
[-5.63393164 2.76807451]
[-20.08085823 -1.26755178]
[-32.47188568 -9.72110176]
[-41.49935150 -21.70045280]
[-46.21057129 -35.94139481]
[-46.10835648 -50.94104385]
[-41.20349503 -65.11645508]
[-32.01361084 -76.97166443]
[-19.50852776 -85.25556183]
[-5.00794411 -89.09393311]
[9.95786285 -88.08169556]
[23.80951500 -82.32567596]
[35.08521271 -72.43332672]
[42.59507751 -59.44842529]
[42.14847183 -74.44177246]
[41.70186615 -89.43512726]
[33.55711365 -102.99880981]
[40.91204453 -115.95080566]
[40.46543884 -130.94415283]
[32.32068634 -144.50784302]
[39.67561722 -157.45983887]
[30.84010315 -166.85646057]
[30.77679253 -179.35365295]
[38.97422028 -188.24908447]
[38.75089264 -203.24742126]
[38.52756500 -218.24575806]
[38.30423355 -233.24409485]
[24.61880493 -240.09739685]
[15.69526196 -252.53237915]
[13.58416843 -267.69158936]
[18.77063942 -282.09155273]
[30.06286240 -292.42327881]
[44.86596680 -296.31259155]
[59.77830887 -292.86575317]
[71.37313843 -282.87481689]
[76.98605347 -268.63565063]
[75.32723999 -253.42030334]
[66.77788544 -240.72514343]
[53.30257416 -233.46742249]
[53.52590179 -218.46908569]
[53.74922943 -203.47074890]
[53.97255707 -188.47241211]
[63.77109146 -173.91372681]
[54.66896820 -157.90644836]
[62.78177643 -145.41519165]
[55.45878983 -131.39076233]
[55.90539551 -116.39741516]
[64.01820374 -103.90615082]
[56.69521332 -89.88172913]
[57.14181900 -74.88838196]
[57.58842850 -59.89503098]
[59.92391205 -45.07796097]
[64.11092377 -30.67417908]
[68.29793549 -16.27039719]
[72.48494720 -1.86661553]
[76.67195892 12.53716660]
[81.39208984 26.77515602]
[86.63880920 40.82762527]
[97.51006317 46.13257599]
[101.99619293 57.79698181]
[97.18319702 69.76351166]
[102.22011566 83.89254761]
[112.42272949 89.50930023]
[116.25178528 100.50836945]
[111.74276733 111.24662018]
[116.56876373 125.44907379]
[121.39476776 139.65153503]
[137.22547913 147.09515381]
[142.66761780 163.36470032]
[134.81672668 178.23757935]
[139.85363770 192.36660767]
[145.68301392 199.39912415]
[144.85865784 206.74365234]
[149.68466187 220.94610596]
[154.51066589 235.14857483]
[159.22282410 239.78613281]
[160.66854858 245.28221130]
[159.26205444 249.84629822]
[170.70780945 260.76901245]
[167.04521179 275.20626831]
[171.44621277 289.54611206]
[175.84719849 303.88595581]
[180.24819946 318.22579956]
[197.31169128 326.45693970]
[202.84515381 344.24160767]
[193.77992249 360.14559937]
[198.60591125 374.34805298]
[203.43191528 388.55050659]
[208.25790405 402.75296021]
[213.08390808 416.95541382]
[216.44920349 419.69927979]
[218.55456543 423.03573608]
[219.36842346 426.49594116]
[219.01469421 429.64895630]
[217.74697876 432.14916992]
[221.71907043 446.61367798]
[225.69116211 461.07821655]
[229.66326904 475.54272461]
[233.63536072 490.00726318]
[237.60745239 504.47177124]
[241.57954407 518.93627930]
[256.39843750 516.52111816]
[271.39007568 515.69482422]
[286.38461304 516.46679688]
[301.21215820 518.82818604]
[315.70468140 522.75231934]
[329.69799805 528.19464111]
[343.03350830 535.09362793]
[355.56018066 543.37097168]
[367.13601685 552.93298340]
[377.62988281 563.67132568]
[386.92288208 575.46417236]
[394.90966797 588.17810059]
[401.49981689 601.66888428]
[406.61859131 615.78381348]
[410.20803833 630.36285400]
[412.22747803 645.24078369]
[412.65399170 660.24914551]
[411.48278809 675.21777344]
[408.72714233 689.97711182]
[404.41824341 704.35992432]
[398.60491943 718.20324707]
[391.35305786 731.35021973]
[382.74484253 743.65185547]
[372.87777710 754.96881104]
[361.86367798 765.17279053]
[349.82733154 774.14825439]
[336.90512085 781.79345703]
[323.24349976 788.02178955]
[308.99722290 792.76263428]
[294.32772827 795.96228027]
[279.40121460 797.58459473]
[264.38684082 797.61102295]
[249.45472717 796.04138184]
[234.77404785 792.89343262]
[220.51115417 788.20281982]
[206.82765198 782.02264404]
[193.87860107 774.42309570]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 173]
[21 172]
[22 171]
[23 170]
[24 169]
[25 168]
[26 167]
[27 162]
[28 161]
[29 160]
[30 159]
[31 158]
[36 155]
[37 154]
[38 153]
[39 152]
[41 150]
[42 147]
[43 146]
[44 145]
[45 143]
[46 142]
[50 139]
[51 138]
[52 137]
[54 134]
[55 133]
[57 130]
[58 129]
[64 128]
[65 127]
[66 126]
[67 125]
[68 124]
[86 123]
[87 122]
[88 121]
[90 119]
[91 118]
[93 116]
[96 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
