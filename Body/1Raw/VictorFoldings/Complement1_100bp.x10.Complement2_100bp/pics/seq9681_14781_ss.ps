%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[25.87813377 598.62609863]
[14.75020027 608.69604492]
[2.86648941 617.86181641]
[-9.69973087 626.06695557]
[-22.87098503 633.26080322]
[-36.56606674 639.39916992]
[-50.70053864 644.44403076]
[-65.18725586 648.36437988]
[-79.93690491 651.13598633]
[-94.85854340 652.74182129]
[-109.86018372 653.17199707]
[-124.84931946 652.42376709]
[-139.73355103 650.50183105]
[-154.42109680 647.41796875]
[-168.82141113 643.19128418]
[-182.84570312 637.84777832]
[-196.40753174 631.42041016]
[-209.42324829 623.94873047]
[-221.81262207 615.47894287]
[-233.49926758 606.06323242]
[-244.41111755 595.75952148]
[-254.48092651 584.63153076]
[-263.64657593 572.74768066]
[-271.85159302 560.18139648]
[-279.04534912 547.01007080]
[-285.18353271 533.31494141]
[-290.22824097 519.18041992]
[-294.14843750 504.69363403]
[-296.91992188 489.94396973]
[-298.52560425 475.02230835]
[-298.95559692 460.02066040]
[-298.20724487 445.03155518]
[-296.28512573 430.14733887]
[-293.20117188 415.45980835]
[-288.97430420 401.05953979]
[-283.63064575 387.03530884]
[-277.20312500 373.47354126]
[-269.73138428 360.45791626]
[-261.26144409 348.06863403]
[-251.84556580 336.38208008]
[-241.54179382 325.47030640]
[-230.41366577 315.40063477]
[-218.52975464 306.23510742]
[-205.96337891 298.03021240]
[-192.79197693 290.83657837]
[-179.09677124 284.69854736]
[-164.96218872 279.65396118]
[-150.47538757 275.73391724]
[-135.72569275 272.96258545]
[-120.80401611 271.35705566]
[-105.80236816 270.92724609]
[-90.81324768 271.67575073]
[-75.92905426 273.59799194]
[-61.24156952 276.68212891]
[-46.84134293 280.90911865]
[-32.81715393 286.25292969]
[-19.25547028 292.68057251]
[-11.78772831 279.67163086]
[-4.31998730 266.66268921]
[-8.44646645 252.39706421]
[-1.05843210 239.09774780]
[13.93263531 234.86625671]
[21.40037727 221.85729980]
[28.86811829 208.84834290]
[36.33585739 195.83938599]
[43.80360031 182.83044434]
[51.27134323 169.82148743]
[45.02091217 156.32815552]
[47.94907761 141.56706238]
[59.13846207 131.23985291]
[74.44015503 129.46096802]
[81.90789032 116.45201111]
[89.37563324 103.44306183]
[96.74632263 90.37887573]
[104.01955414 77.26017761]
[89.10098267 78.82099915]
[78.47078705 68.23803711]
[79.96516418 53.31266022]
[92.48250580 45.04730225]
[106.79550171 49.53487396]
[112.35324097 63.46566010]
[120.58204651 50.92425919]
[128.81085205 38.38285828]
[137.03965759 25.84145927]
[145.26846313 13.30005932]
[153.49728394 0.75865889]
[161.72608948 -11.78274155]
[169.95489502 -24.32414246]
[154.96154785 -23.87723923]
[145.14793396 -35.22152710]
[147.74826050 -49.99441528]
[160.84568787 -57.30588531]
[174.78526306 -51.76618576]
[179.29148865 -37.46062088]
[188.43028259 -49.35525513]
[197.56909180 -61.24988937]
[206.70788574 -73.14452362]
[195.78892517 -83.44827271]
[185.96841431 -94.80382538]
[177.34713745 -107.09465027]
[170.01354980 -120.19463348]
[164.04290771 -133.96932983]
[159.49647522 -148.27740479]
[156.42091370 -162.97203064]
[154.84779358 -177.90242004]
[154.79324341 -192.91534424]
[156.25782776 -207.85676575]
[159.22653198 -222.57334900]
[163.66885376 -236.91407776]
[169.53924561 -250.73181152]
[176.77745056 -263.88473511]
[185.30918884 -276.23788452]
[195.04692078 -287.66448975]
[205.89071655 -298.04733276]
[217.72930908 -307.27981567]
[230.44120789 -315.26724243]
[243.89596558 -321.92761230]
[257.95550537 -327.19259644]
[272.47558594 -331.00814819]
[287.30715942 -333.33514404]
[302.29809570 -334.14968872]
[317.29449463 -333.44345093]
[332.14251709 -331.22363281]
[346.68975830 -327.51303101]
[360.78695679 -322.34973145]
[374.28948975 -315.78671265]
[387.05874634 -307.89132690]
[398.96371460 -298.74459839]
[409.88220215 -288.44036865]
[419.70220947 -277.08438110]
[428.32296753 -264.79318237]
[435.65597534 -251.69287109]
[441.62600708 -237.91790771]
[446.17181396 -223.60963440]
[449.24670410 -208.91487122]
[450.81918335 -193.98442078]
[450.87307739 -178.97149658]
[449.40783691 -164.03013611]
[446.43847656 -149.31369019]
[441.99551392 -134.97314453]
[436.12454224 -121.15567780]
[428.88574219 -108.00306702]
[420.35345459 -95.65029144]
[410.61523438 -84.22410583]
[399.77096558 -73.84175873]
[387.93197632 -64.60978699]
[375.21972656 -56.62293625]
[361.76467896 -49.96315765]
[347.70489502 -44.69879532]
[333.18466187 -40.88386536]
[318.35296631 -38.55751801]
[303.36203003 -37.74362946]
[288.36563110 -38.45054245]
[273.51773071 -40.67100906]
[258.97064209 -44.38224411]
[244.87365723 -49.54615784]
[231.37142944 -56.10976791]
[218.60252380 -64.00571442]
[209.46372986 -52.11108398]
[200.32492065 -40.21645355]
[191.18611145 -28.32181931]
[182.49629211 -16.09533310]
[174.26748657 -3.55393362]
[166.03868103 8.98746681]
[157.80987549 21.52886772]
[149.58105469 34.07026672]
[141.35224915 46.61166763]
[133.12344360 59.15306854]
[124.89463806 71.69446564]
[117.13824463 84.53340912]
[109.86502075 97.65209961]
[109.02146149 105.66839600]
[102.38459015 110.91079712]
[94.91684723 123.91975403]
[87.44910431 136.92871094]
[93.62949371 151.03930664]
[90.35432434 165.90963745]
[79.08428192 175.88209534]
[64.28029633 177.28923035]
[56.81255341 190.29818726]
[49.34481049 203.30712891]
[41.87707138 216.31608582]
[34.40932846 229.32504272]
[26.94158745 242.33398438]
[30.84741592 257.41317749]
[23.08874702 270.49972534]
[8.68896484 274.13043213]
[1.22122407 287.13937378]
[-6.24651718 300.14831543]
[6.14302921 308.61785889]
[17.82986450 318.03338623]
[28.74193573 328.33682251]
[38.81196594 339.46466064]
[47.97786713 351.34826660]
[56.18312836 363.91439819]
[63.37715912 377.08560181]
[69.51560974 390.78060913]
[74.56063080 404.91503906]
[78.48111725 419.40170288]
[81.25289917 434.15133667]
[82.85888672 449.07296753]
[83.28918457 464.07458496]
[82.54113007 479.06372070]
[80.61933899 493.94796753]
[77.53565979 508.63555908]
[73.30909729 523.03588867]
[67.96572876 537.06024170]
[61.53848267 550.62213135]
[54.06698990 563.63793945]
[45.59731674 576.02740479]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 189]
[58 188]
[59 187]
[62 184]
[63 183]
[64 182]
[65 181]
[66 180]
[67 179]
[71 175]
[72 174]
[73 173]
[74 171]
[75 170]
[81 169]
[82 168]
[83 167]
[84 166]
[85 165]
[86 164]
[87 163]
[88 162]
[94 161]
[95 160]
[96 159]
[97 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
