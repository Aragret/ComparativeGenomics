%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[164.82540894 457.24124146]
[168.19783020 442.55877686]
[174.75332642 428.99511719]
[184.16305542 417.23056030]
[195.95506287 407.85525513]
[209.53784180 401.33944702]
[206.21557617 386.71197510]
[202.89332581 372.08453369]
[199.57106018 357.45706177]
[196.24880981 342.82958984]
[192.92654419 328.20214844]
[188.10054016 313.99969482]
[181.82318115 300.37637329]
[175.54582214 286.75305176]
[169.26846313 273.12973022]
[156.91503906 264.80856323]
[158.16697693 249.03695679]
[151.88961792 235.41363525]
[146.23541260 230.65425110]
[145.62190247 221.54043579]
[139.54806519 207.82518005]
[127.31989288 199.32098389]
[128.80650330 183.56977844]
[122.73267365 169.85450745]
[106.75827789 173.14883423]
[90.45070648 172.83706665]
[74.61389923 168.93455505]
[60.02857971 161.63369751]
[47.41378021 151.29440308]
[37.39138412 138.42640686]
[30.45548058 123.66403961]
[26.94799423 107.73508453]
[27.04183960 91.42480469]
[30.73239136 75.53726196]
[37.83770752 60.85569382]
[48.00751495 48.10386658]
[60.74045563 37.91042709]
[54.06026077 24.48004913]
[47.38006592 11.04967403]
[40.69987106 -2.38070226]
[27.62635994 -11.29102421]
[28.88597298 -26.13227272]
[21.61274338 -39.25096512]
[13.76098728 -52.03180695]
[5.90923214 -64.81265259]
[-1.94252336 -77.59349060]
[-9.79427910 -90.37433624]
[-23.61059761 -98.08276367]
[-23.68007851 -112.97721100]
[-31.53183556 -125.75804901]
[-39.38359070 -138.53889465]
[-40.58395386 -123.58699799]
[-49.01789856 -111.18262482]
[-62.48080444 -104.56822968]
[-77.45350647 -105.47281647]
[-90.02217102 -113.65991974]
[-96.90138245 -126.98945618]
[-96.29293060 -141.97711182]
[-88.35585785 -154.70515442]
[-75.16490936 -161.84649658]
[-60.16815567 -161.53440857]
[-47.28633881 -153.85112000]
[-53.15529633 -167.65528870]
[-59.02425766 -181.45947266]
[-64.89321899 -195.26364136]
[-68.45326996 -197.74960327]
[-70.80095673 -200.92024231]
[-71.86991882 -204.31033325]
[-71.75167847 -207.48092651]
[-70.67343140 -210.06849670]
[-75.71034241 -224.19752502]
[-80.74726105 -238.32655334]
[-85.78417969 -252.45558167]
[-100.52236176 -249.52236938]
[-115.53057098 -248.76640320]
[-130.48890686 -250.20379639]
[-145.07852173 -253.80390930]
[-158.98844910 -259.49002075]
[-171.92219543 -267.14089966]
[-183.60408020 -276.59350586]
[-193.78507996 -287.64633179]
[-202.24821472 -300.06378174]
[-208.81307983 -313.58120728]
[-213.33975220 -327.91043091]
[-215.73173523 -342.74609375]
[-215.93803406 -357.77191162]
[-213.95428467 -372.66763306]
[-209.82273865 -387.11575317]
[-203.63148499 -400.80831909]
[-195.51248169 -413.45346069]
[-185.63876343 -424.78161621]
[-174.22082520 -434.55139160]
[-161.50201416 -442.55450439]
[-147.75344849 -448.62039185]
[-133.26817322 -452.61972046]
[-118.35494232 -454.46725464]
[-103.33163452 -454.12362671]
[-88.51847076 -451.59619141]
[-74.23120117 -446.93875122]
[-60.77434540 -440.25064087]
[-48.43474960 -431.67437744]
[-37.47542953 -421.39279175]
[-28.12998009 -409.62500000]
[-20.59760475 -396.62188721]
[-15.03885651 -382.66058350]
[-11.57221794 -368.03866577]
[-10.27158260 -353.06781006]
[-11.16467190 -338.06713867]
[-14.23245049 -323.35638428]
[-19.40952873 -309.24908447]
[-26.58555603 -296.04595947]
[-35.60757828 -284.02844238]
[-46.28328323 -273.45266724]
[-58.38512421 -264.54403687]
[-71.65515137 -257.49249268]
[-66.61823273 -243.36346436]
[-61.58131409 -229.23443604]
[-56.54439926 -215.10540771]
[-51.08904266 -201.13261414]
[-45.22008133 -187.32843018]
[-39.35112000 -173.52426147]
[-33.48215866 -159.72007751]
[-26.60274696 -146.39065552]
[-18.75099182 -133.60980225]
[-10.89923668 -120.82896423]
[2.35547304 -114.03470612]
[2.98656368 -98.22608948]
[10.83831882 -85.44525146]
[18.69007492 -72.66440582]
[26.54183006 -59.88356400]
[34.39358521 -47.10272217]
[38.92334747 -61.40241623]
[52.17370987 -68.43290710]
[66.55426788 -64.16681671]
[73.82718658 -51.04795074]
[69.82620239 -36.59138870]
[56.84326172 -29.07851219]
[42.31634903 -32.81246567]
[54.91204834 -24.86277580]
[54.13024902 -9.06089687]
[60.81044388 4.36947918]
[67.49063873 17.79985428]
[74.17082977 31.23023033]
[87.35971832 27.63529587]
[100.98632050 26.54624367]
[114.57877350 28.00078964]
[127.66638184 31.94856071]
[139.79594421 38.25285339]
[150.54742432 46.69535828]
[159.54852295 56.98372650]
[166.48754883 68.76168823]
[171.12420654 81.62137604]
[173.29794312 95.11750031]
[172.93347168 108.78269196]
[170.04342651 122.14375305]
[164.72787476 134.73800659]
[157.17089844 146.12933350]
[147.63417053 155.92327881]
[136.44793701 163.78067017]
[142.52177429 177.49594116]
[155.18438721 186.98114014]
[153.26332092 201.75134277]
[159.33715820 215.46661377]
[165.51292419 229.13627625]
[171.79029846 242.75959778]
[184.59271240 252.05520630]
[182.89178467 266.85238647]
[189.16914368 280.47570801]
[195.44650269 294.09899902]
[201.72386169 307.72232056]
[203.23669434 292.79879761]
[210.27757263 279.55395508]
[221.80204773 269.95257568]
[236.10052490 265.41897583]
[251.05191040 266.62567139]
[264.43826294 273.39367676]
[274.27377319 284.71899414]
[279.09942627 298.92156982]
[278.19934082 313.89453125]
[271.70706177 327.41674805]
[260.58569336 337.48226929]
[246.48497009 342.59796143]
[231.49670410 342.00488281]
[217.84428406 335.79104614]
[207.55400085 324.87988281]
[210.87626648 339.50735474]
[214.19851685 354.13479614]
[217.52078247 368.76226807]
[220.84304810 383.38970947]
[224.16529846 398.01718140]
[239.23008728 398.02642822]
[253.91499329 401.38818359]
[267.48342896 407.93380737]
[279.25479126 417.33499146]
[288.63867188 429.12017822]
[295.16436768 442.69821167]
[298.50454712 457.38803101]
[298.49163818 472.45281982]
[295.12634277 487.13690186]
[288.57742310 500.70376587]
[279.17337036 512.47283936]
[267.38592529 521.85388184]
[253.80630493 528.37628174]
[239.11567688 531.71289062]
[224.05090332 531.69635010]
[209.36763000 528.32745361]
[195.80236816 521.77526855]
[184.03553772 512.36840820]
[174.65736389 500.57867432]
[168.13825989 486.99746704]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 190]
[7 189]
[8 188]
[9 187]
[10 186]
[11 185]
[12 170]
[13 169]
[14 168]
[15 167]
[17 165]
[18 164]
[20 163]
[21 162]
[23 160]
[24 159]
[37 143]
[38 142]
[39 141]
[40 140]
[42 138]
[43 131]
[44 130]
[45 129]
[46 128]
[47 127]
[49 125]
[50 124]
[51 123]
[62 122]
[63 121]
[64 120]
[65 119]
[70 118]
[71 117]
[72 116]
[73 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
