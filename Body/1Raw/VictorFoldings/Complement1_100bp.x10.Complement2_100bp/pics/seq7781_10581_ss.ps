%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[73.68134308 479.47747803]
[61.92950821 469.90304565]
[54.16371536 456.88504028]
[51.32172394 441.99548340]
[53.74671555 427.03234863]
[61.14586639 413.80252075]
[72.62568665 403.90356445]
[86.79993439 398.53082275]
[78.87400055 385.92013550]
[86.40498352 372.00631714]
[78.47904968 359.39562988]
[86.01002502 345.48181152]
[85.78669739 330.48345947]
[77.86076355 317.87280273]
[85.39174652 303.95895386]
[74.53887177 298.51925659]
[66.98395538 288.92465210]
[64.20893860 276.95803833]
[66.80023193 264.87643433]
[74.32606506 254.98551941]
[85.40709686 249.19946289]
[85.63042450 234.20112610]
[85.85375214 219.20278931]
[86.07707977 204.20445251]
[86.30040741 189.20611572]
[84.44698334 187.10302734]
[83.31494904 184.13905334]
[83.23636627 180.58529663]
[84.43913269 176.82791138]
[87.01007843 173.32875061]
[88.12572479 158.37030029]
[81.35646820 145.10279846]
[90.09874725 131.91632080]
[91.21439362 116.95787048]
[81.83895111 105.91037750]
[82.91663361 91.46098328]
[93.82714844 81.92647552]
[83.66221619 92.95707703]
[69.17455292 96.84394836]
[54.85333633 92.38271332]
[45.13613892 80.95571899]
[43.03394318 66.10375977]
[49.19813919 52.42886734]
[61.71868134 44.16835785]
[76.71594238 43.88183975]
[89.54286194 51.65809631]
[96.22492218 65.08782196]
[91.51092529 49.98521042]
[101.71453094 39.13460159]
[104.81864166 24.45929909]
[107.92275238 9.78399754]
[94.63106537 3.79354477]
[82.88494110 -4.83235264]
[73.19892120 -15.71269321]
[65.99666595 -28.36778450]
[61.59238815 -42.24039841]
[60.17716599 -56.72030258]
[61.81065750 -71.17110443]
[66.41858673 -84.95820618]
[73.79611206 -97.47671509]
[83.61692810 -108.17793274]
[95.44772339 -116.59342957]
[108.76725769 -122.35555267]
[122.98935699 -125.21347046]
[137.48870850 -125.04411316]
[140.81097412 -139.67156982]
[144.13322449 -154.29902649]
[139.64460754 -169.47015381]
[150.00863647 -180.16764832]
[153.33088684 -194.79510498]
[156.21615601 -209.51499939]
[158.66189575 -224.31427002]
[161.10762024 -239.11354065]
[160.21479797 -254.08694458]
[156.02778625 -268.49072266]
[151.84077454 -282.89450073]
[147.65376282 -297.29827881]
[143.46675110 -311.70205688]
[139.27973938 -326.10586548]
[135.09272766 -340.50964355]
[120.11095428 -339.11578369]
[105.13615417 -340.58270264]
[90.70966339 -344.85736084]
[77.35298157 -351.78524780]
[65.54895782 -361.11593628]
[55.72428894 -372.51208496]
[48.23413849 -385.56176758]
[43.34926605 -399.79321289]
[41.24625397 -414.69201660]
[42.00113297 -429.71954346]
[45.58660889 -444.33258057]
[51.87306976 -458.00286865]
[60.63326645 -470.23623657]
[71.55052185 -480.59048462]
[84.23017883 -488.69125366]
[98.21388245 -494.24575806]
[112.99613190 -497.05319214]
[128.04255676 -497.01205444]
[142.80923462 -494.12384033]
[156.76235962 -488.49295044]
[169.39753723 -480.32296753]
[180.25801086 -469.90921021]
[188.95118713 -457.62811279]
[195.16281128 -443.92364502]
[198.66833496 -429.29122925]
[199.34103394 -414.25979614]
[197.15658569 -399.37271118]
[192.19396973 -385.16818237]
[184.63258362 -372.15966797]
[174.74574280 -360.81738281]
[162.89086914 -351.55139160]
[149.49652100 -344.69665527]
[153.68353271 -330.29284668]
[157.87054443 -315.88906860]
[162.05755615 -301.48529053]
[166.24456787 -287.08151245]
[170.43157959 -272.67773438]
[174.61857605 -258.27395630]
[177.26313782 -273.03900146]
[182.69976807 -287.01907349]
[190.72521973 -299.69158936]
[201.03944397 -310.58270264]
[213.25683594 -319.28530884]
[226.92066956 -325.47399902]
[241.52006531 -328.91744995]
[256.50924683 -329.48687744]
[271.32785034 -327.16101074]
[285.42181396 -322.02685547]
[298.26428223 -314.27627563]
[309.37509155 -304.19906616]
[318.33886719 -292.17199707]
[324.82049561 -278.64468384]
[328.57766724 -264.12283325]
[329.46987915 -249.14939880]
[327.46380615 -234.28413391]
[322.63446045 -220.08282471]
[315.16235352 -207.07637024]
[305.32687378 -195.75103760]
[293.49569702 -186.53024292]
[280.11114502 -179.75868225]
[265.67364502 -175.68954468]
[250.72288513 -174.47494507]
[235.81787109 -176.16027832]
[221.51580811 -180.68257141]
[208.35139465 -187.87272644]
[196.81680298 -197.46194458]
[187.34324646 -209.09172058]
[180.28491211 -222.32728577]
[175.90689087 -236.66780090]
[173.46116638 -221.86853027]
[171.01542664 -207.06925964]
[172.53637695 -204.71450806]
[173.21621704 -201.61540222]
[172.76675415 -198.08930969]
[171.01992798 -194.55192566]
[167.95834351 -191.47283936]
[164.63609314 -176.84538269]
[169.36233521 -162.72052002]
[158.76068115 -150.97677612]
[155.43843079 -136.34931946]
[152.11616516 -121.72185516]
[166.08560181 -115.11280060]
[178.24484253 -105.56333160]
[187.98527527 -93.54753113]
[194.81842041 -79.66304016]
[198.40052795 -64.60133362]
[198.54986572 -49.11327362]
[195.25585938 -33.97168350]
[188.67987061 -19.93279076]
[179.14723206 -7.69844484]
[167.13121033 2.11895561]
[153.22941589 9.02712727]
[138.13418579 12.67858315]
[122.59805298 12.88810730]
[119.49394226 27.56340981]
[116.38983154 42.23871231]
[121.32585907 56.29164505]
[110.90023041 68.19193268]
[108.78560638 83.04212952]
[118.16104889 94.08962250]
[117.08336639 108.53901672]
[106.17285156 118.07352448]
[105.05720520 133.03196716]
[111.74666595 147.36940002]
[103.08418274 159.48594666]
[101.96853638 174.44439697]
[101.29874420 189.42944336]
[101.07541656 204.42778015]
[100.85208893 219.42611694]
[100.62876129 234.42445374]
[100.40543365 249.42279053]
[115.23176575 259.86010742]
[120.77619171 276.95803833]
[114.99826813 293.81228638]
[100.39008331 303.73562622]
[108.33198547 317.41906738]
[100.78503418 330.26013184]
[101.00836182 345.25848389]
[108.95027161 358.94192505]
[101.40332031 371.78298950]
[109.34522247 385.46643066]
[101.79827118 398.30749512]
[116.12620544 403.25582886]
[127.89566803 412.80862427]
[135.68544006 425.81228638]
[138.55485535 440.69656372]
[136.15744019 455.66415405]
[128.78269958 468.90759277]
[117.32113647 478.82769775]
[103.15680695 484.22656250]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 202]
[10 200]
[12 198]
[13 197]
[15 195]
[21 191]
[22 190]
[23 189]
[24 188]
[25 187]
[30 186]
[31 185]
[33 183]
[34 182]
[37 179]
[47 178]
[49 176]
[50 175]
[51 174]
[65 161]
[66 160]
[67 159]
[69 157]
[70 156]
[71 151]
[72 150]
[73 149]
[74 118]
[75 117]
[76 116]
[77 115]
[78 114]
[79 113]
[80 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
