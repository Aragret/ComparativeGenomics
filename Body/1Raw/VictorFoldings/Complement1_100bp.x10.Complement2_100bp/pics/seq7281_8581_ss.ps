%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxGGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[139.37869263 797.93194580]
[125.71234894 791.72479248]
[112.64808655 784.33404541]
[100.28814697 775.81762695]
[88.72927094 766.24212646]
[78.06190491 755.68255615]
[68.36956024 744.22149658]
[59.72807693 731.94866943]
[52.20509720 718.96008301]
[45.85949707 705.35748291]
[40.74094009 691.24725342]
[36.88948822 676.73992920]
[34.33527756 661.94891357]
[33.09830856 646.99005127]
[33.18825912 631.98040771]
[34.60442352 617.03741455]
[37.33571625 602.27813721]
[41.36076736 587.81793213]
[46.64806747 573.77008057]
[53.15623856 560.24450684]
[60.83434677 547.34704590]
[69.62229919 535.17864990]
[79.45130920 523.83459473]
[90.24446106 513.40362549]
[101.91727448 503.96734619]
[114.37840271 495.59967041]
[127.53030396 488.36605835]
[141.27005005 482.32312012]
[155.49011230 477.51818848]
[170.07919312 473.98883057]
[167.85406494 459.15478516]
[158.31439209 447.71606445]
[163.91896057 432.92083740]
[161.69384766 418.08679199]
[159.46871948 403.25274658]
[157.24360657 388.41870117]
[154.46800232 373.67773438]
[151.14573669 359.05026245]
[140.78170776 348.35278320]
[145.27033997 333.18167114]
[141.94807434 318.55419922]
[138.62580872 303.92672729]
[123.65818024 303.68518066]
[109.17462158 299.86596680]
[96.01814270 292.68688965]
[84.95558929 282.56149292]
[76.63295746 270.07510376]
[71.53762817 255.95115662]
[69.96987915 241.00917053]
[72.02515411 226.11724854]
[77.58828735 212.14163208]
[86.33993530 199.89631653]
[97.77490234 190.09561157]
[111.23133087 183.31253052]
[100.86730957 172.61503601]
[105.35592651 157.44392395]
[102.03366852 142.81646729]
[98.71141052 128.18901062]
[95.38915253 113.56154633]
[86.03180695 103.17252350]
[89.98339081 89.76071930]
[86.66113281 75.13325500]
[83.33887482 60.50579453]
[80.01660919 45.87833405]
[76.69435120 31.25087547]
[70.74729156 45.02158356]
[58.77087784 54.05294800]
[43.89571762 55.98419189]
[30.01014709 50.31048584]
[20.74381828 38.51493073]
[18.51892471 23.68085480]
[23.91705132 9.68584728]
[35.52713776 0.18817124]
[50.31433868 -2.32950377]
[64.41331482 2.79093647]
[74.13824463 14.21022129]
[73.02259064 -0.74823242]
[71.90694427 -15.70668602]
[70.79129791 -30.66513824]
[69.67564392 -45.62359238]
[68.44866943 -60.57332611]
[67.11043549 -75.51351166]
[64.48767853 -78.97401428]
[63.22910309 -82.71306610]
[63.25476837 -86.26760864]
[64.34255219 -89.24810028]
[66.16445923 -91.37854767]
[65.71784973 -106.37189484]
[57.57309723 -119.93557739]
[64.92803192 -132.88757324]
[64.48142242 -147.88093567]
[64.03482056 -162.87428284]
[61.28994370 -167.31417847]
[60.59236908 -171.90402222]
[61.65637207 -175.83886719]
[63.91816330 -178.54379272]
[64.14149475 -193.54212952]
[64.36482239 -208.54046631]
[50.28420258 -214.20620728]
[39.20379257 -224.57872009]
[32.62212372 -238.25520325]
[31.42931557 -253.38601685]
[35.78668213 -267.92486572]
[45.10492706 -279.90545654]
[58.12383652 -287.70755005]
[73.08270264 -290.27593994]
[87.95847321 -287.26330566]
[100.73931122 -279.07705688]
[109.69671631 -266.82434082]
[113.61927795 -252.16220093]
[111.97649384 -237.07360840]
[104.99054718 -223.59915161]
[93.60622406 -213.56114197]
[79.36315918 -208.31713867]
[79.13983154 -193.31880188]
[78.91650391 -178.32046509]
[79.02816772 -163.32087708]
[79.47477722 -148.32752991]
[79.92137909 -133.33418274]
[88.03418732 -120.84292603]
[80.71120453 -106.81850433]
[81.15780640 -91.82514954]
[82.05062103 -76.85174561]
[83.38885498 -61.91156006]
[87.11656952 -55.52986908]
[84.63410187 -46.73924255]
[85.74974823 -31.78078842]
[86.86539459 -16.82233429]
[87.98104858 -1.86388111]
[89.09669495 13.09457207]
[91.32181549 27.92861557]
[94.64407349 42.55607605]
[97.96633148 57.18353653]
[101.28858948 71.81099701]
[104.61084747 86.43845367]
[113.96819305 96.82747650]
[110.01660919 110.23928070]
[113.33886719 124.86674500]
[116.66112518 139.49420166]
[119.98339081 154.12165833]
[130.58503723 165.86540222]
[125.85879517 179.99028015]
[140.92506409 180.29513550]
[155.47172546 184.19476318]
[168.65431213 191.45828247]
[179.70863342 201.65965271]
[187.99507141 214.20271301]
[193.03556824 228.35595703]
[194.54122925 243.29521179]
[192.42881775 258.15164185]
[186.82545471 272.06228638]
[178.06088257 284.22018433]
[166.64808655 293.92111206]
[153.25328064 300.60449219]
[156.57553101 315.23193359]
[159.89779663 329.85940552]
[170.49945068 341.60314941]
[165.77319336 355.72799683]
[169.09545898 370.35546875]
[179.17637634 359.24804688]
[194.15483093 360.05175781]
[202.98925781 372.17419434]
[199.16725159 386.67907715]
[185.50624084 392.87399292]
[172.07765198 386.19357300]
[174.30276489 401.02761841]
[176.52789307 415.86166382]
[178.75300598 430.69570923]
[188.45182800 443.19543457]
[182.68811035 456.92965698]
[184.91323853 471.76370239]
[199.89575195 470.85729980]
[214.89976501 471.27862549]
[229.80781555 473.02435303]
[244.50323486 476.08084106]
[258.87103271 480.42416382]
[272.79870605 486.02032471]
[286.17730713 492.82556152]
[298.90209961 500.78652954]
[310.87347412 509.84100342]
[321.99777222 519.91809082]
[332.18792725 530.93890381]
[341.36416626 542.81719971]
[349.45471191 555.46002197]
[356.39617920 568.76843262]
[362.13427734 582.63824463]
[366.62408447 596.96093750]
[369.83047485 611.62438965]
[371.72836304 626.51385498]
[372.30288696 641.51275635]
[371.54953003 656.50372314]
[369.47421265 671.36950684]
[366.09313965 685.99365234]
[361.43283081 700.26177979]
[355.52972412 714.06219482]
[348.43002319 727.28686523]
[340.18927002 739.83227539]
[330.87203979 751.60028076]
[320.55114746 762.49877930]
[309.30746460 772.44250488]
[297.22894287 781.35351562]
[284.41009521 789.16217041]
[270.95129395 795.80737305]
[256.95785522 801.23699951]
[242.53929138 805.40869141]
[227.80845642 808.28967285]
[212.88064575 809.85748291]
[197.87269592 810.09985352]
[182.90203857 809.01483154]
[168.08587646 806.61090088]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 171]
[31 170]
[33 168]
[34 167]
[35 166]
[36 165]
[37 159]
[38 158]
[40 156]
[41 155]
[42 154]
[54 142]
[56 140]
[57 139]
[58 138]
[59 137]
[61 135]
[62 134]
[63 133]
[64 132]
[65 131]
[76 130]
[77 129]
[78 128]
[79 127]
[80 126]
[81 124]
[82 123]
[87 122]
[88 121]
[90 119]
[91 118]
[92 117]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
