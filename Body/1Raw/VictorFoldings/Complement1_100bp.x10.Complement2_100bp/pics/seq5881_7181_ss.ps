%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxGGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[-5.59366608 864.07849121]
[-20.56642723 865.01660156]
[-35.56507874 865.33923340]
[-50.56433105 865.04583740]
[-65.53888702 864.13684082]
[-80.46350861 862.61389160]
[-95.31301117 860.47943115]
[-110.06237030 857.73718262]
[-124.68670654 854.39166260]
[-139.16136169 850.44860840]
[-153.46194458 845.91455078]
[-167.56430054 840.79724121]
[-181.44468689 835.10528564]
[-195.07969666 828.84826660]
[-208.44631958 822.03674316]
[-221.52201843 814.68218994]
[-234.28475952 806.79699707]
[-246.71301270 798.39447021]
[-258.78582764 789.48876953]
[-270.48281860 780.09497070]
[-281.78430176 770.22888184]
[-292.67120361 759.90710449]
[-303.12515259 749.14703369]
[-313.12854004 737.96691895]
[-322.66448975 726.38549805]
[-331.71694946 714.42230225]
[-340.27059937 702.09759521]
[-348.31106567 689.43212891]
[-355.82473755 676.44720459]
[-362.79901123 663.16473389]
[-369.22207642 649.60717773]
[-375.08312988 635.79736328]
[-380.37225342 621.75848389]
[-385.08056641 607.51434326]
[-389.20013428 593.08892822]
[-392.72396851 578.50653076]
[-395.64614868 563.79180908]
[-397.96176147 548.96942139]
[-399.66690063 534.06451416]
[-400.75866699 519.10217285]
[-401.23522949 504.10763550]
[-401.09579468 489.10617065]
[-400.34057617 474.12307739]
[-398.97088623 459.18362427]
[-396.98898315 444.31298828]
[-394.39825439 429.53625488]
[-391.20306396 414.87832642]
[-387.40875244 400.36395264]
[-383.02178955 386.01760864]
[-378.04949951 371.86346436]
[-372.50030518 357.92535400]
[-366.38357544 344.22686768]
[-359.70962524 330.79101562]
[-352.48965454 317.64050293]
[-344.73590088 304.79748535]
[-336.46139526 292.28366089]
[-327.68014526 280.12005615]
[-318.40689087 268.32723999]
[-308.65728760 256.92507935]
[-298.44781494 245.93281555]
[-287.79565430 235.36895752]
[-276.71878052 225.25132751]
[-265.23587036 215.59698486]
[-253.36625671 206.42222595]
[-241.12998962 197.74250793]
[-228.54769897 189.57246399]
[-215.64059448 181.92587280]
[-202.43045044 174.81564331]
[-188.93951416 168.25373840]
[-175.19056702 162.25125122]
[-161.20677185 156.81828308]
[-147.01171875 151.96398926]
[-132.62933350 147.69657898]
[-118.08388519 144.02323914]
[-103.39988708 140.95014954]
[-88.60210419 138.48251343]
[-73.71548462 136.62448120]
[-58.76514053 135.37918091]
[-43.77627182 134.74871826]
[-28.77415848 134.73416138]
[-13.78409481 135.33552551]
[1.16864157 136.55180359]
[16.05883598 138.38093567]
[30.86138153 140.81983948]
[45.55131912 143.86442566]
[60.10387421 147.50952148]
[74.49450684 151.74900818]
[79.32050323 137.54655457]
[84.14650726 123.34410095]
[88.97250366 109.14164734]
[86.43765259 95.39151001]
[96.82504272 86.03235626]
[101.65103912 71.82990265]
[106.47703552 57.62744522]
[111.30303955 43.42499161]
[114.84270477 28.84861565]
[117.06782532 14.01457119]
[119.29294586 -0.81947255]
[105.34965515 -6.55079985]
[93.18354034 -15.45300007]
[83.50193024 -27.00851059]
[76.86769104 -40.54550934]
[73.66654205 -55.27697372]
[74.08457947 -70.34643555]
[78.09751129 -84.87777710]
[85.47201538 -98.02616119]
[95.77936554 -109.02716064]
[108.42029572 -117.24119568]
[122.65988159 -122.19070435]
[137.67024231 -123.58793640]
[152.57872009 -121.35165405]
[166.51853943 -115.61187744]
[178.67924500 -106.70230103]
[188.35385132 -95.14092255]
[194.97987366 -81.59990692]
[198.17210388 -66.86650085]
[197.74491882 -51.79729843]
[193.72319031 -37.26839447]
[186.34069824 -24.12448120]
[176.02668762 -13.12973118]
[163.38078308 -4.92336369]
[149.13819885 0.01751355]
[134.12698364 1.40564466]
[131.90187073 16.23968887]
[129.67675781 31.07373238]
[139.58590698 19.81280136]
[153.36572266 13.88685417]
[168.35551453 14.44009686]
[181.66099548 21.36570930]
[190.71308899 33.32646179]
[193.76397705 48.01292038]
[190.22457886 62.58936310]
[180.77828979 74.24130249]
[167.24905396 80.71893311]
[152.24914551 80.77153015]
[138.67481995 74.38893890]
[129.14704895 62.80352402]
[125.50549316 48.25098801]
[120.67949677 62.45344543]
[115.85349274 76.65589905]
[111.02749634 90.85835266]
[113.56234741 104.60848999]
[103.17495728 113.96764374]
[98.34896088 128.17010498]
[93.52296448 142.37255859]
[88.69696045 156.57501221]
[102.69130707 161.98074341]
[116.45191956 167.95646667]
[129.95559692 174.49208069]
[143.17956543 181.57658386]
[156.10153198 189.19802856]
[168.69970703 197.34356689]
[180.95285034 205.99943542]
[192.84028625 215.15107727]
[204.34197998 224.78303528]
[215.43853760 234.87907410]
[226.11125183 245.42218018]
[236.34211731 256.39456177]
[246.11387634 267.77770996]
[255.41006470 279.55245972]
[264.21499634 291.69891357]
[272.51385498 304.19665527]
[280.29260254 317.02453613]
[287.53814697 330.16094971]
[294.23825073 343.58377075]
[300.38165283 357.27035522]
[305.95794678 371.19760132]
[310.95776367 385.34207153]
[315.37268066 399.67984009]
[319.19522095 414.18679810]
[322.41897583 428.83847046]
[325.03845215 443.61013794]
[327.04928589 458.47686768]
[328.44808960 473.41363525]
[329.23245239 488.39523315]
[329.40109253 503.39642334]
[328.95373535 518.39184570]
[327.89108276 533.35632324]
[326.21499634 548.26452637]
[323.92825317 563.09130859]
[321.03469849 577.81176758]
[317.53924561 592.40100098]
[313.44778442 606.83441162]
[308.76721191 621.08764648]
[303.50543213 635.13677979]
[297.67126465 648.95800781]
[291.27462769 662.52807617]
[284.32623291 675.82403564]
[276.83782959 688.82354736]
[268.82205200 701.50469971]
[260.29238892 713.84600830]
[251.26327515 725.82678223]
[241.74987793 737.42675781]
[231.76828003 748.62634277]
[221.33529663 759.40673828]
[210.46850586 769.74969482]
[199.18626404 779.63775635]
[187.50756836 789.05432129]
[175.45211792 797.98352051]
[163.04025269 806.41021729]
[150.29289246 814.32019043]
[137.23152161 821.70019531]
[123.87818909 828.53778076]
[110.25540161 834.82135010]
[96.38611603 840.54028320]
[82.29373932 845.68505859]
[68.00202179 850.24694824]
[53.53506851 854.21820068]
[38.91727066 857.59216309]
[24.17328072 860.36315918]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[87 146]
[88 145]
[89 144]
[90 143]
[92 141]
[93 140]
[94 139]
[95 138]
[96 125]
[97 124]
[98 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
