%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUAxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[134.31916809 988.11608887]
[119.45674896 986.06909180]
[104.70565796 983.33282471]
[90.09784698 979.91320801]
[75.66495514 975.81768799]
[61.43824005 971.05505371]
[47.44851303 965.63574219]
[33.72607040 959.57135010]
[20.30063629 952.87512207]
[7.20128298 945.56152344]
[-5.54361629 937.64642334]
[-17.90645981 929.14685059]
[-29.86047173 920.08135986]
[-41.37976074 910.46948242]
[-52.43938446 900.33209229]
[-63.01538467 889.69116211]
[-73.08485413 878.56964111]
[-82.62599182 866.99176025]
[-91.61812592 854.98242188]
[-100.04179382 842.56781006]
[-107.87873840 829.77465820]
[-115.11198425 816.63073730]
[-121.72588348 803.16455078]
[-127.70609283 789.40527344]
[-133.03967285 775.38262939]
[-137.71507263 761.12701416]
[-141.72215271 746.66931152]
[-145.05224609 732.04083252]
[-147.69815063 717.27325439]
[-149.65409851 702.39855957]
[-150.91589355 687.44897461]
[-151.48078918 672.45690918]
[-151.34756470 657.45477295]
[-150.51649475 642.47509766]
[-148.98939514 627.55029297]
[-146.76956177 612.71270752]
[-143.86181641 597.99444580]
[-140.27243042 583.42742920]
[-136.00921631 569.04315186]
[-131.08137512 554.87280273]
[-125.49958801 540.94714355]
[-119.27594757 527.29620361]
[-112.42393494 513.94958496]
[-104.95838165 500.93621826]
[-96.89546204 488.28430176]
[-88.25264740 476.02120972]
[-79.04863739 464.17349243]
[-69.30338287 452.76684570]
[-59.03797531 441.82595825]
[-48.27465820 431.37451172]
[-37.03673935 421.43511963]
[-25.34855461 412.02938843]
[-13.23542309 403.17761230]
[-0.72357672 394.89898682]
[12.15988731 387.21145630]
[25.38706398 380.13165283]
[38.92930984 373.67492676]
[52.75728989 367.85522461]
[66.84106445 362.68521118]
[81.15011597 358.17602539]
[95.65347290 354.33746338]
[110.31970978 351.17782593]
[125.11706543 348.70397949]
[123.33460236 333.81024170]
[121.55213928 318.91653442]
[119.76966858 304.02282715]
[117.87638092 289.14279175]
[115.87236786 274.27725220]
[101.15282440 271.65121460]
[87.94777679 264.59451294]
[77.55636597 253.78717041]
[71.00532532 240.27883911]
[68.94754028 225.38696289]
[71.59700012 210.56820679]
[78.70662689 197.27604675]
[89.59123993 186.81816101]
[103.19360352 180.22776794]
[101.18959045 165.36224365]
[99.18557739 150.49671936]
[89.81726837 138.91725159]
[95.64148712 124.20708466]
[93.63747406 109.34156036]
[85.35943604 121.85051727]
[71.35058594 127.21263123]
[56.83589554 123.42797089]
[47.22897339 111.90811157]
[46.11296844 96.94968414]
[53.90412521 84.13181305]
[67.69652557 78.23523712]
[82.34595490 81.45924377]
[92.38901520 92.60241699]
[84.44711304 78.91897583]
[91.99406433 66.07791901]
[91.77073669 51.07957840]
[91.54740906 36.08124161]
[83.60549927 22.39779472]
[91.15245056 9.55673695]
[83.21054840 -4.12670898]
[90.75749969 -16.96776772]
[77.07206726 -23.82105827]
[68.14852905 -36.25604630]
[66.03742981 -51.41526413]
[71.22389984 -65.81523132]
[82.51612854 -76.14694214]
[97.31922913 -80.03624725]
[112.23156738 -76.58941650]
[123.82640076 -66.59849548]
[129.43931580 -52.35932922]
[127.78050232 -37.14397812]
[119.23114777 -24.44881439]
[105.75583649 -17.19109535]
[113.68177032 -4.58043051]
[106.15078735 9.33340931]
[114.07672119 21.94407272]
[106.54574585 35.85791397]
[106.76907349 50.85625076]
[106.99240112 65.85459137]
[114.91833496 78.46525574]
[107.38735199 92.37908936]
[108.50300598 107.33754730]
[110.50701904 122.20307159]
[120.01866913 134.84582520]
[114.05110931 148.49270630]
[116.05512238 163.35823059]
[118.05913544 178.22375488]
[132.92109680 180.97688293]
[146.18646240 188.17913818]
[156.56213379 199.11410522]
[163.04112244 212.70225525]
[165.00025940 227.60743713]
[162.26016235 242.36830139]
[155.10156250 255.54154968]
[144.23657227 265.84310913]
[130.73789978 272.27325439]
[132.74191284 287.13876343]
[136.98977661 295.22537231]
[134.66339111 302.24035645]
[136.44586182 317.13406372]
[138.22831726 332.02777100]
[140.01078796 346.92150879]
[154.97401428 345.83364868]
[169.97166443 345.44311523]
[184.97123718 345.75082397]
[199.94024658 346.75601196]
[214.84628296 348.45657349]
[229.65705872 350.84881592]
[244.34049988 353.92752075]
[258.86480713 357.68603516]
[273.19851685 362.11627197]
[287.31057739 367.20855713]
[301.17044067 372.95190430]
[314.74807739 379.33386230]
[328.01409912 386.34060669]
[340.93975830 393.95700073]
[353.49703979 402.16650391]
[365.65881348 410.95132446]
[377.39868164 420.29251099]
[388.69122314 430.16973877]
[399.51202393 440.56167603]
[409.83758545 451.44583130]
[419.64559937 462.79855347]
[428.91479492 474.59533691]
[437.62512207 486.81057739]
[445.75765991 499.41784668]
[453.29486084 512.38983154]
[460.22036743 525.69848633]
[466.51919556 539.31488037]
[472.17767334 553.20959473]
[477.18356323 567.35253906]
[481.52606201 581.71307373]
[485.19567871 596.26007080]
[488.18457031 610.96203613]
[490.48617554 625.78717041]
[492.09555054 640.70336914]
[493.00921631 655.67822266]
[493.22515869 670.67938232]
[492.74295044 685.67437744]
[491.56359863 700.63067627]
[489.68969727 715.51593018]
[487.12527466 730.29785156]
[483.87588501 744.94445801]
[479.94857788 759.42401123]
[475.35186768 773.70520020]
[470.09570312 787.75708008]
[464.19143677 801.54913330]
[457.65188599 815.05157471]
[450.49124146 828.23516846]
[442.72494507 841.07135010]
[434.36987305 853.53222656]
[425.44409180 865.59094238]
[415.96694946 877.22131348]
[405.95895386 888.39813232]
[395.44177246 899.09729004]
[384.43823242 909.29547119]
[372.97210693 918.97070312]
[361.06826782 928.10198975]
[348.75250244 936.66955566]
[336.05142212 944.65484619]
[322.99261475 952.04058838]
[309.60430908 958.81072998]
[295.91549683 964.95068359]
[281.95587158 970.44708252]
[267.75564575 975.28808594]
[253.34553528 979.46313477]
[238.75680542 982.96319580]
[224.02102661 985.78082275]
[209.17012024 987.90972900]
[194.23625183 989.34539795]
[179.25175476 990.08471680]
[164.24908447 990.12609863]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 140]
[64 139]
[65 138]
[66 137]
[67 135]
[68 134]
[77 125]
[78 124]
[79 123]
[81 121]
[82 120]
[91 119]
[93 117]
[94 116]
[95 115]
[97 113]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
