%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[164.64184570 495.63342285]
[167.17329407 480.82220459]
[171.78691101 466.52203369]
[178.38877869 453.02401733]
[186.84446716 440.60299683]
[196.98187256 429.51181030]
[208.59457397 419.97631836]
[221.44615173 412.19058228]
[215.57719421 398.38641357]
[209.70823669 384.58224487]
[203.83927917 370.77804565]
[197.97030640 356.97387695]
[184.10400391 351.65777588]
[177.95539856 337.74200439]
[183.62542725 323.23376465]
[177.75646973 309.42959595]
[171.88749695 295.62542725]
[160.79022217 290.81118774]
[155.78771973 279.35873413]
[160.06156921 267.18920898]
[154.39878845 253.29919434]
[148.73600769 239.40916443]
[143.07321167 225.51913452]
[128.58993530 222.14680481]
[118.75325775 210.75804138]
[117.49414062 195.58346558]
[125.50431061 182.42506409]
[113.53476715 173.56056213]
[115.48969269 157.86061096]
[109.82690430 143.97058105]
[104.16412354 130.08055115]
[98.50133514 116.19052124]
[88.05809784 111.03494263]
[83.74172211 100.21781921]
[87.76675415 89.28894043]
[82.31140137 75.31613922]
[76.85604095 61.34334564]
[71.40068054 47.37054825]
[59.17424393 37.32939529]
[61.75290680 22.65970612]
[56.29755020 8.68690872]
[49.41813660 -4.64252090]
[41.18932724 -17.18392181]
[32.96052170 -29.72532082]
[18.92081642 -37.01897049]
[18.40790367 -51.90473938]
[10.17909622 -64.44614410]
[1.95028853 -76.98754120]
[-6.27851915 -89.52893829]
[-14.50732708 -102.07034302]
[-22.73613548 -114.61174011]
[-28.45949745 -117.92152405]
[-31.23547935 -122.88044739]
[-31.01675034 -127.65132141]
[-38.86850739 -140.43215942]
[-46.72026062 -153.21299744]
[-54.66694641 -165.93504333]
[-62.70811844 -178.59756470]
[-76.17884064 -171.96531677]
[-90.28768158 -166.82839966]
[-104.86922455 -163.24707031]
[-119.75249481 -161.26329041]
[-134.76301575 -160.90034485]
[-149.72477722 -162.16246033]
[-164.46235657 -165.03486633]
[-178.80299377 -169.48388672]
[-192.57852173 -175.45732117]
[-205.62742615 -182.88517761]
[-217.79675293 -191.68034363]
[-228.94378662 -201.73971558]
[-238.93785095 -212.94532776]
[-247.66175842 -225.16583252]
[-255.01324463 -238.25793457]
[-260.90609741 -252.06813049]
[-265.27124023 -266.43450928]
[-268.05746460 -281.18862915]
[-269.23214722 -296.15750122]
[-268.78149414 -311.16564941]
[-266.71081543 -326.03707886]
[-263.04434204 -340.59744263]
[-257.82507324 -354.67602539]
[-251.11421204 -368.10775757]
[-242.99044800 -380.73516846]
[-233.54902649 -392.41021729]
[-222.90063477 -402.99600220]
[-211.17010498 -412.36843872]
[-198.49501038 -420.41760254]
[-185.02392578 -427.04913330]
[-170.91481018 -432.18527222]
[-156.33308411 -435.76583862]
[-141.44969177 -437.74880981]
[-126.43916321 -438.11093140]
[-111.47747040 -436.84802246]
[-96.74003601 -433.97482300]
[-82.39965057 -429.52502441]
[-68.62444305 -423.55084229]
[-55.57592773 -416.12228394]
[-43.40708160 -407.32647705]
[-32.26058960 -397.26651001]
[-22.26712990 -386.06033325]
[-13.54387569 -373.83938599]
[-6.19309998 -360.74688721]
[-0.30098811 -346.93637085]
[4.06337833 -332.56976318]
[6.84882879 -317.81549072]
[8.02270603 -302.84652710]
[7.57124710 -287.83843994]
[5.49974442 -272.96710205]
[1.83248568 -258.40695190]
[-3.38753247 -244.32864380]
[-10.09910774 -230.89726257]
[-18.22355080 -218.27027893]
[-27.66560745 -206.59573364]
[-38.31457138 -196.01052856]
[-50.04559326 -186.63873291]
[-42.00442123 -173.97621155]
[-35.76505280 -170.01489258]
[-33.93941879 -161.06475830]
[-26.08766365 -148.28392029]
[-18.23590851 -135.50308228]
[-10.19473457 -122.84055328]
[-1.96592689 -110.29914856]
[6.26288080 -97.75775146]
[14.49168873 -85.21634674]
[22.72049713 -72.67494965]
[30.94930458 -60.13354874]
[44.40042877 -53.73694611]
[45.50191879 -37.95412827]
[53.73072815 -25.41272926]
[61.95953751 -12.87132835]
[61.24185181 -27.85414886]
[66.24008942 -41.99691010]
[76.21277618 -53.20161438]
[89.68054199 -59.80611420]
[104.64550781 -60.83066559]
[118.88771820 -56.12328720]
[130.29443359 -46.38228989]
[137.17350769 -33.05269241]
[138.50450134 -18.11186028]
[134.08996582 -3.77617836]
[124.58474731 7.82774115]
[111.39891052 14.97852516]
[96.48848724 16.61539841]
[82.06536102 12.49553776]
[70.27034760 3.23155141]
[75.72570038 17.20434952]
[87.56194305 26.24607277]
[85.37348175 41.91519165]
[90.82884216 55.88798904]
[96.28419495 69.86078644]
[101.73955536 83.83358002]
[115.10182190 93.97389984]
[112.39135742 110.52774048]
[118.05414581 124.41776276]
[123.71693420 138.30778503]
[129.37971497 152.19781494]
[141.75430298 162.05581665]
[139.39433289 176.76228333]
[154.32118225 180.56954956]
[164.03053284 192.29907227]
[164.96035767 207.31904602]
[156.96324158 219.85635376]
[162.62602234 233.74638367]
[168.28881836 247.63641357]
[173.95159912 261.52642822]
[188.75584412 272.47705078]
[185.69168091 289.75646973]
[191.56063843 303.56063843]
[197.42959595 317.36480713]
[211.81161499 323.34774780]
[217.56692505 337.43075562]
[211.77449036 351.10491943]
[217.64344788 364.90908813]
[223.51240540 378.71328735]
[229.38137817 392.51745605]
[235.25033569 406.32162476]
[249.77392578 402.46856689]
[264.69802856 400.72171021]
[279.71884155 401.11666870]
[294.53054810 403.64535522]
[308.83160400 408.25631714]
[322.33084106 414.85568237]
[334.75341797 423.30908203]
[345.84646606 433.44442749]
[355.38412476 445.05535889]
[363.17224121 457.90548706]
[369.05224609 471.73324585]
[372.90438843 486.25704956]
[374.65032959 501.18127441]
[374.25442505 516.20208740]
[371.72482300 531.01361084]
[367.11297607 545.31439209]
[360.51278687 558.81317139]
[352.05862427 571.23529053]
[341.92260742 582.32769775]
[330.31109619 591.86462402]
[317.46044922 599.65197754]
[303.63235474 605.53106689]
[289.10827637 609.38232422]
[274.18395996 611.12731934]
[259.16317749 610.73052979]
[244.35180664 608.20001221]
[230.05133057 603.58728027]
[216.55291748 596.98626709]
[204.13136292 588.53131104]
[193.03956604 578.39459229]
[183.50334167 566.78247070]
[175.71682739 553.93139648]
[169.83854675 540.10290527]
[165.98817444 525.57861328]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 176]
[9 175]
[10 174]
[11 173]
[12 172]
[15 169]
[16 168]
[17 167]
[20 165]
[21 164]
[22 163]
[23 162]
[27 158]
[29 156]
[30 155]
[31 154]
[32 153]
[35 151]
[36 150]
[37 149]
[38 148]
[40 146]
[41 145]
[42 130]
[43 129]
[44 128]
[46 126]
[47 125]
[48 124]
[49 123]
[50 122]
[51 121]
[54 120]
[55 119]
[56 118]
[57 116]
[58 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
