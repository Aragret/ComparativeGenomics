%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[72.98155212 484.32000732]
[59.76497650 477.19680786]
[47.36539459 468.73110962]
[35.91865540 459.01565552]
[25.55018234 448.15692139]
[16.37357903 436.27383423]
[8.48938465 423.49661255]
[1.98398626 409.96527100]
[-3.07134080 395.82803345]
[-6.62120724 381.23980713]
[-8.62671852 366.36044312]
[-9.06590176 351.35296631]
[-7.93394518 336.38177490]
[-5.24325037 321.61093140]
[-1.02329803 307.20227051]
[4.67967510 293.31362915]
[11.80318451 280.09722900]
[20.26918030 267.69784546]
[29.98490715 256.25134277]
[40.84391022 245.88314819]
[52.72721481 236.70683289]
[65.50462341 228.82293701]
[79.03613281 222.31787109]
[93.17348480 217.26289368]
[107.76179504 213.71337891]
[105.75778198 198.84785461]
[103.75376892 183.98231506]
[101.74975586 169.11679077]
[92.38143921 157.53732300]
[98.20566559 142.82716370]
[96.20164490 127.96163177]
[94.19763184 113.09610748]
[85.80446625 101.91368866]
[90.93683624 88.90790558]
[88.38100433 74.12725830]
[85.27689362 59.45195389]
[82.17278290 44.77664948]
[79.06867218 30.10134888]
[64.24974823 32.44648361]
[49.32974243 34.02564621]
[34.34822845 34.83465195]
[19.34493256 34.87135315]
[4.35964012 34.13565063]
[-10.56791019 32.62950134]
[-25.39813423 30.35689545]
[-40.09170151 27.32385826]
[-54.60964966 23.53843689]
[-68.91348267 19.01066589]
[-82.96526337 13.75255394]
[-96.72772980 7.77804470]
[-110.16438293 1.10298133]
[-123.23960114 -6.25493526]
[-135.91870117 -14.27619362]
[-148.16807556 -22.93952179]
[-159.95523071 -32.22194672]
[-171.24888611 -42.09885025]
[-182.01913452 -52.54404831]
[-192.23739624 -63.52983093]
[-201.87657166 -75.02707672]
[-210.91110229 -87.00528717]
[-219.31701660 -99.43270111]
[-227.07205200 -112.27637482]
[-234.15562439 -125.50222778]
[-240.54895020 -139.07521057]
[-246.23507690 -152.95930481]
[-251.19892883 -167.11770630]
[-255.42733765 -181.51287842]
[-258.90908813 -196.10662842]
[-261.63494873 -210.86026001]
[-263.59771729 -225.73466492]
[-264.79214478 -240.69038391]
[-265.21511841 -255.68777466]
[-264.86544800 -270.68704224]
[-263.74411011 -285.64840698]
[-261.85406494 -300.53222656]
[-259.20031738 -315.29901123]
[-255.78991699 -329.90960693]
[-251.63189697 -344.32525635]
[-246.73728943 -358.50775146]
[-241.11907959 -372.41946411]
[-234.79216003 -386.02352905]
[-227.77330017 -399.28384399]
[-220.08113098 -412.16525269]
[-211.73603821 -424.63360596]
[-202.76014709 -436.65582275]
[-193.17727661 -448.20001221]
[-183.01281738 -459.23562622]
[-172.29374695 -469.73330688]
[-161.04847717 -479.66528320]
[-149.30682373 -489.00518799]
[-137.09994507 -497.72827148]
[-124.46018219 -505.81140137]
[-111.42107391 -513.23315430]
[-98.01719666 -519.97375488]
[-84.28408813 -526.01544189]
[-70.25817108 -531.34216309]
[-55.97663879 -535.93981934]
[-41.47736359 -539.79608154]
[-26.79878998 -542.90093994]
[-11.97984982 -545.24597168]
[2.94016290 -546.82501221]
[17.92168236 -547.63397217]
[32.92498016 -547.67059326]
[47.91026688 -546.93481445]
[62.83781052 -545.42852783]
[77.66802216 -543.15588379]
[92.36157227 -540.12274170]
[106.87950134 -536.33721924]
[121.18330383 -531.80938721]
[135.23504639 -526.55120850]
[148.99748230 -520.57659912]
[162.43409729 -513.90148926]
[175.50927734 -506.54345703]
[188.18833923 -498.52212524]
[200.43765259 -489.85873413]
[212.22474670 -480.57623291]
[223.51835632 -470.69927979]
[234.28854370 -460.25402832]
[244.50674438 -449.26818848]
[254.14584351 -437.77087402]
[263.18029785 -425.79260254]
[271.58615112 -413.36514282]
[279.34112549 -400.52142334]
[286.42462158 -387.29553223]
[292.81787109 -373.72253418]
[298.50390625 -359.83840942]
[303.46768188 -345.67996216]
[307.69601440 -331.28475952]
[311.17767334 -316.69100952]
[313.90347290 -301.93734741]
[315.86614990 -287.06292725]
[317.06048584 -272.10720825]
[317.48333740 -257.10983276]
[317.13360596 -242.11054993]
[316.01217651 -227.14918518]
[314.12203979 -212.26538086]
[311.46823120 -197.49861145]
[308.05773926 -182.88803101]
[303.89962769 -168.47239685]
[299.00494385 -154.28993225]
[293.38665771 -140.37825012]
[287.05966187 -126.77423096]
[280.04071045 -113.51396179]
[272.34848022 -100.63259125]
[264.00329590 -88.16429901]
[255.02735901 -76.14212799]
[245.44441223 -64.59797668]
[235.27989197 -53.56244659]
[224.56076050 -43.06480789]
[213.31542969 -33.13289642]
[201.57373047 -23.79305267]
[189.36679077 -15.07003975]
[176.72698975 -6.98699188]
[163.68785095 0.43465614]
[150.28392029 7.17522287]
[136.55078125 13.21683407]
[122.52483368 18.54346848]
[108.24327850 23.14100075]
[93.74398041 26.99723816]
[96.84808350 41.67254257]
[99.95219421 56.34784317]
[103.05630493 71.02314758]
[113.30148315 60.06703568]
[128.26631165 61.09368134]
[136.91926575 73.34628296]
[132.88172913 87.79267883]
[119.13000488 93.78351593]
[105.80236816 86.90389252]
[114.19553375 98.08631134]
[109.06316376 111.09209442]
[111.06717682 125.95761871]
[113.07118988 140.82315063]
[122.58283997 153.46589661]
[116.61528015 167.11277771]
[118.61929321 181.97830200]
[120.62330627 196.84384155]
[122.62731934 211.70936584]
[137.63478088 211.26908875]
[152.60604858 212.39994812]
[167.37709045 215.08956909]
[181.78607178 219.30847168]
[195.67510986 225.01043701]
[208.89202881 232.13298035]
[221.29202271 240.59806824]
[232.73922729 250.31295776]
[243.10823059 261.17120361]
[252.28541565 273.05386353]
[260.17022705 285.83068848]
[266.67626953 299.36172485]
[271.73229980 313.49871826]
[275.28286743 328.08676147]
[277.28909302 342.96603394]
[277.72903442 357.97348022]
[276.59777832 372.94473267]
[273.90780640 387.71569824]
[269.68856812 402.12457275]
[263.98626709 416.01348877]
[256.86340332 429.23022461]
[248.39799500 441.63003540]
[238.68283081 453.07699585]
[227.82432556 463.44573975]
[215.94146729 472.62261963]
[203.16444397 480.50714111]
[189.63325500 487.01284790]
[175.49613953 492.06854248]
[160.90800476 495.61874390]
[146.02868652 497.62463379]
[131.02120972 498.06417847]
[116.04999542 496.93258667]
[101.27908325 494.24224854]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 177]
[26 176]
[27 175]
[28 174]
[30 172]
[31 171]
[32 170]
[34 168]
[35 162]
[36 161]
[37 160]
[38 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
