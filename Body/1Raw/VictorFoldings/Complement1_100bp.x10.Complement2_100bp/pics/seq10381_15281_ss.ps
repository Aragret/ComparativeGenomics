%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[203.95162964 196.74237061]
[208.76982117 182.52903748]
[214.68835449 168.73754883]
[201.41050720 161.75909424]
[188.13265991 154.78063965]
[174.85481262 147.80218506]
[161.57696533 140.82373047]
[147.47479248 145.47824097]
[133.90975952 138.59024048]
[129.12330627 123.76702881]
[115.84545898 116.78857422]
[102.56761169 109.81012726]
[94.53448486 109.14579773]
[89.14517212 102.62764740]
[75.97269440 95.45228577]
[62.80022049 88.27691650]
[49.62774658 81.10154724]
[33.80772018 81.29475403]
[26.33227158 68.41194153]
[13.15979576 61.23657608]
[-0.01268022 54.06121063]
[-13.18515587 46.88584137]
[-25.75512886 49.77696228]
[-36.57879639 43.52939987]
[-40.12640381 31.96475410]
[-53.19058990 24.59406471]
[-66.25477600 17.22337532]
[-79.31896210 9.85268593]
[-87.63796234 22.34273720]
[-96.85668182 34.18429565]
[-106.92475128 45.31269073]
[-117.78719330 55.66713715]
[-129.38467407 65.19107819]
[-141.65386963 73.83251190]
[-154.52774048 81.54422760]
[-167.93598938 88.28411102]
[-181.80538940 94.01535034]
[-196.06018066 98.70664215]
[-210.62249756 102.33236694]
[-225.41282654 104.87271881]
[-240.35038757 106.31381989]
[-255.35357666 106.64780426]
[-270.34045410 105.87285614]
[-285.22918701 103.99319458]
[-299.93841553 101.01908875]
[-314.38784790 96.96678162]
[-328.49856567 91.85841370]
[-342.19345093 85.72187042]
[-355.39773560 78.59068298]
[-368.03930664 70.50379944]
[-380.04913330 61.50537491]
[-391.36160278 51.64456558]
[-401.91491699 40.97522736]
[-411.65142822 29.55563354]
[-420.51800537 17.44815254]
[-428.46618652 4.71891260]
[-435.45257568 -8.56256199]
[-441.43902588 -22.32373238]
[-446.39282227 -36.48943710]
[-450.28689575 -50.98231125]
[-453.09997559 -65.72319794]
[-454.81674194 -80.63158417]
[-455.42779541 -95.62604523]
[-454.92977905 -110.62467957]
[-453.32543945 -125.54558563]
[-450.62353516 -140.30725098]
[-446.83880615 -154.82907104]
[-441.99194336 -169.03170776]
[-436.10940552 -182.83761597]
[-429.22332764 -196.17137146]
[-421.37130737 -208.96015930]
[-412.59625244 -221.13414001]
[-402.94607544 -232.62680054]
[-392.47348022 -243.37538147]
[-381.23568726 -253.32116699]
[-369.29403687 -262.40985107]
[-356.71377563 -270.59182739]
[-343.56359863 -277.82232666]
[-329.91534424 -284.06192017]
[-315.84356689 -289.27648926]
[-301.42507935 -293.43762207]
[-286.73867798 -296.52249146]
[-271.86453247 -298.51434326]
[-256.88391113 -299.40222168]
[-241.87864685 -299.18133545]
[-226.93064880 -297.85287476]
[-212.12159729 -295.42407227]
[-197.53236389 -291.90823364]
[-183.24261475 -287.32452393]
[-169.33041382 -281.69796753]
[-155.87173462 -275.05935669]
[-142.94009399 -267.44488525]
[-130.60612488 -258.89620972]
[-118.93717957 -249.45994568]
[-107.99700165 -239.18766785]
[-97.84532928 -228.13548279]
[-88.53762054 -216.36373901]
[-80.12471008 -203.93675232]
[-72.65253448 -190.92237854]
[-66.16191864 -177.39170837]
[-60.68830872 -163.41862488]
[-56.26159668 -149.07946777]
[-52.90596390 -134.45254517]
[-50.63973618 -119.61774445]
[-49.47529221 -104.65608215]
[-49.41898727 -89.64928436]
[-50.47113419 -74.67930603]
[-52.62598419 -59.82791138]
[-55.87176895 -45.17621994]
[-60.19075775 -30.80424881]
[-65.55936432 -16.79049492]
[-71.94827271 -3.21149945]
[-58.88408661 4.15919018]
[-45.81990051 11.52987957]
[-32.75571442 18.90056992]
[-15.24247456 17.78104019]
[-6.00978994 33.71336746]
[7.16268587 40.88873291]
[20.33516121 48.06409836]
[33.50763702 55.23946381]
[48.38547897 54.53302765]
[56.80311203 67.92907715]
[69.97558594 75.10443878]
[83.14806366 82.27980804]
[96.32054138 89.45516968]
[109.54606628 96.53227997]
[122.82391357 103.51073456]
[136.10176086 110.48918152]
[151.02516174 106.02490234]
[164.39137268 113.29119110]
[168.55541992 127.54589081]
[181.83326721 134.52433777]
[195.11111450 141.50279236]
[208.38896179 148.48124695]
[221.66680908 155.45970154]
[229.66941833 142.76354980]
[238.64349365 130.73442078]
[248.53372192 119.44647217]
[259.27908325 108.96930695]
[270.81338501 99.36751556]
[283.06546021 90.70030212]
[295.95980835 83.02110291]
[309.41690063 76.37725830]
[323.35375977 70.80973053]
[337.68450928 66.35285187]
[352.32077026 63.03409195]
[367.17230225 60.87392044]
[382.14752197 59.88565445]
[397.15411377 60.07538605]
[412.09957886 61.44194412]
[426.89175415 63.97690201]
[441.43942261 67.66463470]
[455.65289307 72.48239899]
[469.44458008 78.40050507]
[482.72940063 85.38244629]
[495.42547607 93.38519287]
[507.45449829 102.35939789]
[518.74237061 112.24972534]
[529.21942139 122.99520874]
[538.82104492 134.52958679]
[547.48815918 146.78176880]
[555.16723633 159.67617798]
[561.81091309 173.13334656]
[567.37829590 187.07028198]
[571.83508301 201.40107727]
[575.15368652 216.03736877]
[577.31365967 230.88891602]
[578.30181885 245.86415100]
[578.11193848 260.87075806]
[576.74517822 275.81619263]
[574.21008301 290.60833740]
[570.52221680 305.15594482]
[565.70428467 319.36938477]
[559.78607178 333.16101074]
[552.80395508 346.44577026]
[544.80108643 359.14175415]
[535.82678223 371.17068481]
[525.93634033 382.45843506]
[515.19073486 392.93539429]
[503.65625000 402.53692627]
[491.40399170 411.20388794]
[478.50952148 418.88284302]
[465.05227661 425.52639771]
[451.11529541 431.09365845]
[436.78445435 435.55023193]
[422.14813232 438.86868286]
[407.29653931 441.02856445]
[392.32131958 442.01651001]
[377.31469727 441.82647705]
[362.36929321 440.45962524]
[347.57717896 437.92434692]
[333.02957153 434.23632812]
[318.81619263 429.41827393]
[305.02462769 423.49987793]
[291.73995972 416.51766968]
[279.04403687 408.51467896]
[267.01519775 399.54022217]
[255.72755432 389.64965820]
[245.25071716 378.90396118]
[235.64927673 367.36938477]
[226.98243713 355.11703491]
[219.30363464 342.22247314]
[212.66020203 328.76516724]
[207.09310913 314.82812500]
[202.63665771 300.49722290]
[199.31835938 285.86087036]
[197.15864563 271.00927734]
[196.17083740 256.03402710]
[196.36102295 241.02743530]
[197.72802734 226.08201599]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 135]
[4 134]
[5 133]
[6 132]
[7 131]
[10 128]
[11 127]
[12 126]
[14 125]
[15 124]
[16 123]
[17 122]
[19 120]
[20 119]
[21 118]
[22 117]
[25 115]
[26 114]
[27 113]
[28 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
