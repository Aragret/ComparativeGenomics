%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[80.00337219 247.34341431]
[77.74318695 262.17880249]
[74.41839600 276.81246948]
[70.04633331 291.16802979]
[64.64979553 305.17071533]
[58.25691986 318.74749756]
[50.90103149 331.82760620]
[42.62048721 344.34280396]
[33.45845413 356.22787476]
[23.46269989 367.42083740]
[12.68533802 377.86337280]
[1.18255889 387.50097656]
[-10.98566818 396.28347778]
[-23.75590324 404.16500854]
[-37.06156540 411.10455322]
[-50.83328629 417.06588745]
[-64.99926758 422.01794434]
[-79.48564911 425.93487549]
[-94.21691132 428.79629517]
[-109.11624146 430.58728027]
[-124.10596466 431.29849243]
[-139.10794067 430.92623901]
[-154.04394531 429.47241211]
[-168.83610535 426.94464111]
[-183.40730286 423.35607910]
[-197.68157959 418.72543335]
[-211.58450317 413.07684326]
[-225.04360962 406.43978882]
[-237.98869324 398.84884644]
[-250.35229492 390.34359741]
[-262.06994629 380.96841431]
[-273.08053589 370.77209473]
[-283.32669067 359.80789185]
[-292.75497437 348.13290405]
[-301.31625366 335.80804443]
[-308.96585083 322.89752197]
[-315.66390991 309.46868896]
[-321.37554932 295.59155273]
[-326.07089233 281.33843994]
[-329.72555542 266.78366089]
[-332.32043457 252.00312805]
[-333.84201050 237.07386780]
[-334.28237915 222.07374573]
[-333.63919067 207.08094788]
[-331.91583252 192.17362976]
[-329.12127686 177.42955017]
[-325.27011108 162.92553711]
[-320.38241577 148.73722839]
[-314.48364258 134.93859863]
[-307.60455322 121.60157776]
[-299.78103638 108.79570770]
[-291.05386353 96.58775330]
[-281.46853638 85.04135132]
[-271.07504272 74.21671295]
[-259.92755127 64.17026520]
[-248.08418274 54.95439529]
[-235.60667419 46.61713791]
[-222.56010437 39.20196915]
[-209.01248169 32.74754715]
[-195.03443909 27.28752136]
[-180.69883728 22.85035706]
[-166.08042908 19.45919037]
[-151.25543213 17.13170052]
[-136.30113220 15.88002110]
[-121.29550171 15.71067810]
[-106.31676483 16.62455559]
[-91.44301605 18.61688995]
[-76.75180054 21.67728996]
[-62.31972122 25.78980255]
[-48.22201157 30.93298912]
[-34.53217316 37.08002853]
[-21.32158279 44.19887924]
[-8.65911198 52.25242615]
[3.38922191 61.19867706]
[14.76060390 70.99098969]
[25.39574814 81.57831573]
[35.23920822 92.90545654]
[44.23966217 104.91335297]
[52.35018539 117.53940582]
[65.52265930 110.36403656]
[78.69513702 103.18866730]
[91.86761475 96.01330566]
[93.47109985 92.50599670]
[96.61277008 89.72251129]
[100.93469238 88.33397675]
[105.79238129 88.82662964]
[119.27211761 82.24660492]
[132.75184631 75.66658020]
[146.23158264 69.08654785]
[159.71131897 62.50652313]
[173.19105530 55.92649460]
[186.46890259 48.94804382]
[199.53308105 41.57735443]
[212.59727478 34.20666504]
[225.66145325 26.83597374]
[219.18687439 13.29888248]
[213.64096069 -0.64442420]
[209.04902649 -14.93032551]
[205.43199158 -29.49363708]
[202.80638123 -44.26791000]
[201.18417358 -59.18572998]
[200.57276917 -74.17903137]
[200.97496033 -89.17940521]
[202.38891602 -104.11840820]
[204.80816650 -118.92786407]
[208.22169495 -133.54022217]
[212.61390686 -147.88877869]
[217.96476746 -161.90809631]
[224.24987793 -175.53419495]
[231.44053650 -188.70489502]
[239.50395203 -201.36010742]
[248.40332031 -213.44207764]
[258.09805298 -224.89569092]
[268.54388428 -235.66868591]
[279.69317627 -245.71191406]
[291.49502563 -254.97952271]
[303.89566040 -263.42926025]
[316.83840942 -271.02255249]
[330.26425171 -277.72473145]
[344.11193848 -283.50527954]
[358.31826782 -288.33773804]
[372.81845093 -292.20013428]
[387.54629517 -295.07479858]
[402.43460083 -296.94863892]
[417.41543579 -297.81307983]
[432.42047119 -297.66421509]
[447.38119507 -296.50268555]
[462.22940063 -294.33380127]
[476.89730835 -291.16744995]
[491.31796265 -287.01812744]
[505.42562866 -281.90469360]
[519.15588379 -275.85055542]
[532.44610596 -268.88327026]
[545.23565674 -261.03466797]
[557.46618652 -252.34054565]
[569.08184814 -242.84057617]
[580.02966309 -232.57810974]
[590.25964355 -221.59997559]
[599.72521973 -209.95625305]
[608.38311768 -197.70007324]
[616.19378662 -184.88735962]
[623.12170410 -171.57656860]
[629.13519287 -157.82844543]
[634.20684814 -143.70571899]
[638.31347656 -129.27282715]
[641.43640137 -114.59562683]
[643.56134033 -99.74107361]
[644.67858887 -84.77696228]
[644.78308105 -69.77156067]
[643.87426758 -54.79333878]
[641.95635986 -39.91064453]
[639.03814697 -25.19137764]
[635.13287354 -10.70270348]
[630.25836182 3.48927093]
[624.43688965 17.31978989]
[617.69494629 30.72574615]
[610.06341553 43.64597321]
[601.57702637 56.02151871]
[592.27453613 67.79591370]
[582.19836426 78.91542816]
[571.39447021 89.32933807]
[559.91223145 98.99011993]
[547.80395508 107.85369110]
[535.12493896 115.87961578]
[521.93298340 123.03126526]
[508.28839111 129.27601624]
[494.25329590 134.58537292]
[479.89178467 138.93508911]
[465.26940918 142.30535889]
[450.45285034 144.68077087]
[435.50970459 146.05050659]
[420.50820923 146.40829468]
[405.51678467 145.75251770]
[390.60385132 144.08616638]
[375.83740234 141.41685486]
[361.28485107 137.75672913]
[347.01260376 133.12252808]
[333.08578491 127.53536987]
[319.56790161 121.02076721]
[306.52069092 113.60842896]
[294.00363159 105.33217621]
[282.07385254 96.22978973]
[270.78579712 86.34278107]
[260.19097900 75.71627808]
[250.33772278 64.39875793]
[241.27098083 52.44186783]
[233.03215027 39.90015793]
[219.96795654 47.27084732]
[206.90377808 54.64153671]
[193.83958435 62.01222610]
[192.95817566 64.67328644]
[190.96955872 67.14554596]
[187.94039917 69.00553894]
[184.08923340 69.86172485]
[179.77107239 69.40622711]
[166.29135132 75.98625946]
[152.81161499 82.56628418]
[139.33187866 89.14630890]
[125.85214233 95.72634125]
[112.37240601 102.30636597]
[99.04297638 109.18578339]
[85.87050629 116.36114502]
[72.69802856 123.53651428]
[59.52555084 130.71188354]
[65.73465729 144.37367249]
[70.94176483 158.44790649]
[75.11972809 172.86117554]
[78.24676514 187.53834534]
[80.30657959 202.40289307]
[81.28842163 217.37733459]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[79 204]
[80 203]
[81 202]
[82 201]
[86 200]
[87 199]
[88 198]
[89 197]
[90 196]
[91 195]
[92 190]
[93 189]
[94 188]
[95 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
