%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[140.59255981 585.15844727]
[129.83137512 574.70007324]
[119.81735992 563.52416992]
[110.59825134 551.68408203]
[102.21797943 539.23608398]
[94.71646881 526.23962402]
[88.12948608 512.75659180]
[82.48841095 498.85125732]
[77.82012939 484.58984375]
[74.14688110 470.04034424]
[71.48618317 455.27209473]
[69.85070801 440.35543823]
[69.24824524 425.36154175]
[69.68167114 410.36175537]
[71.14891815 395.42764282]
[73.64299774 380.63034058]
[77.15202332 366.04037476]
[81.65927124 351.72726440]
[87.14325714 337.75918579]
[93.57785797 324.20278931]
[100.93240356 311.12258911]
[109.17184448 298.58096313]
[118.25691986 286.63766479]
[128.14433289 275.34963989]
[138.78695679 264.77066040]
[150.13409424 254.95111084]
[162.13165283 245.93782043]
[174.72245789 237.77374268]
[167.44921875 224.65505981]
[160.17599487 211.53636169]
[147.23788452 204.15702820]
[147.31332397 188.33599854]
[139.94262695 175.27182007]
[132.47488403 162.26286316]
[125.00714874 149.25390625]
[116.87193298 136.65159607]
[108.09132385 124.49014282]
[99.31072235 112.32868958]
[101.50235748 127.16770935]
[99.28211212 142.00248718]
[92.84204865 155.54965210]
[82.73931122 166.63723755]
[69.84786987 174.30606079]
[55.28298187 177.89270020]
[40.30464172 177.08685303]
[26.20863342 171.95825195]
[14.21440029 162.95057678]
[5.35956240 150.84306335]
[0.41015270 136.68313599]
[-0.20565508 121.69578552]
[3.56541252 107.17755890]
[11.39712048 94.38441467]
[22.61194611 84.42311096]
[36.23969650 78.15538025]
[51.10143661 76.12345886]
[65.91147614 78.50312042]
[79.38859558 85.08850098]
[90.36470032 95.30715179]
[78.44264221 84.90642548]
[81.45693207 70.32001495]
[76.42001343 56.19098663]
[71.38309479 42.06195831]
[69.65903473 56.96254730]
[64.81414032 71.15856934]
[57.06882095 84.00419617]
[46.77544785 94.91503143]
[34.40229416 103.39472198]
[20.51225853 109.05747986]
[5.73724127 111.64570618]
[-9.25059032 111.04163361]
[-23.76939011 107.27275848]
[-37.15864944 100.51052856]
[-48.80924988 91.06259155]
[-58.19116211 79.35875702]
[-64.87757111 65.93147278]
[-68.56430054 51.39159775]
[-69.08361053 36.40058899]
[-66.41189575 21.64044380]
[-60.67068481 7.78264666]
[-52.12117004 -4.54236221]
[-41.15230179 -14.77387905]
[-28.26308823 -22.44643784]
[-14.03990173 -27.21098709]
[0.87019926 -28.85077286]
[15.78890324 -27.29119492]
[30.03750801 -22.60320473]
[42.96779633 -15.00007439]
[53.99153137 -4.82769442]
[62.60720062 7.45115852]
[68.42409515 21.28202820]
[69.31690979 6.30862188]
[70.20973206 -8.66478348]
[59.99714661 -20.42662621]
[61.11589050 -35.59907150]
[72.39194489 -45.26272202]
[73.28475952 -60.23612595]
[74.17757416 -75.20953369]
[59.95827866 -80.30739594]
[47.75200653 -89.20591736]
[38.54827118 -101.18372345]
[33.09318161 -115.26984406]
[31.82894897 -130.32235718]
[34.85806274 -145.12104797]
[41.93497086 -158.46623230]
[52.48597336 -169.27609253]
[65.65575409 -176.67431641]
[80.37668610 -180.06115723]
[95.45542145 -179.16206360]
[109.66959381 -174.04991150]
[121.86692047 -165.13912964]
[131.05862427 -153.15208435]
[136.49955750 -139.06050110]
[137.74867249 -124.00671387]
[134.70468140 -109.21107483]
[127.61437988 -95.87300110]
[117.05252075 -85.07375336]
[103.87531281 -77.68876648]
[89.15098572 -74.31671906]
[88.25816345 -59.34331131]
[87.36534882 -44.36990738]
[97.41316986 -33.43478012]
[96.72102356 -18.23689842]
[85.18313599 -7.77196789]
[84.29032135 7.20143795]
[83.39749908 22.17484283]
[85.51212311 37.02503967]
[90.54904175 51.15407181]
[95.58596039 65.28310394]
[107.14774323 74.67322540]
[104.49372864 90.27023315]
[111.47217560 103.54808044]
[120.25278473 115.70954132]
[129.03338623 127.87099457]
[131.33731079 113.04898834]
[142.54644775 103.08127594]
[157.53613281 102.52497101]
[169.45327759 111.63439941]
[172.84951782 126.24485779]
[166.17214966 139.67663574]
[152.47398376 145.78892517]
[138.01609802 141.78616333]
[145.48384094 154.79512024]
[152.95158386 167.80407715]
[159.93797302 173.68864441]
[160.43200684 181.06277466]
[173.89035034 189.38044739]
[173.29469299 204.26313782]
[180.56791687 217.38182068]
[187.84115601 230.50051880]
[201.43574524 224.14695740]
[215.43627930 218.74644470]
[229.77606201 214.32472229]
[244.38671875 210.90286255]
[259.19863892 208.49716187]
[274.14126587 207.11907959]
[289.14334106 206.77520752]
[304.13339233 207.46716309]
[319.04000854 209.19166565]
[333.79211426 211.94047546]
[348.31942749 215.70050049]
[362.55270386 220.45384216]
[376.42413330 226.17782593]
[389.86761475 232.84516907]
[402.81906128 240.42413330]
[415.21679688 248.87855530]
[427.00167847 258.16818237]
[438.11758423 268.24874878]
[448.51150513 279.07217407]
[458.13397217 290.58688354]
[466.93908691 302.73806763]
[474.88488770 315.46774292]
[481.93350220 328.71530151]
[488.05136108 342.41757202]
[493.20932007 356.50927734]
[497.38275146 370.92327881]
[500.55181885 385.59085083]
[502.70141602 400.44210815]
[503.82125854 415.40628052]
[503.90603638 430.41204834]
[502.95532227 445.38793945]
[500.97369385 460.26254272]
[497.97055054 474.96496582]
[493.96023560 489.42520142]
[488.96182251 503.57427979]
[482.99917603 517.34478760]
[476.10067749 530.67114258]
[468.29919434 543.48980713]
[459.63195801 555.73968506]
[450.14022827 567.36242676]
[439.86923218 578.30255127]
[428.86795044 588.50805664]
[417.18875122 597.93023682]
[404.88735962 606.52423096]
[392.02236938 614.24902344]
[378.65509033 621.06787109]
[364.84921265 626.94818115]
[350.67053223 631.86206055]
[336.18664551 635.78601074]
[321.46652222 638.70129395]
[306.58035278 640.59411621]
[291.59909058 641.45538330]
[276.59408569 641.28106689]
[261.63684082 640.07189941]
[246.79867554 637.83367920]
[232.15028381 634.57714844]
[217.76147461 630.31768799]
[203.70080566 625.07574463]
[190.03529358 618.87615967]
[176.83006287 611.74859619]
[164.14802551 603.72692871]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 149]
[29 148]
[30 147]
[32 145]
[33 143]
[34 142]
[35 141]
[36 133]
[37 132]
[38 131]
[58 130]
[60 128]
[61 127]
[62 126]
[90 125]
[91 124]
[92 123]
[95 120]
[96 119]
[97 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
