%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[129.94667053 601.78356934]
[118.50115204 592.06347656]
[108.21591949 581.12298584]
[99.22033691 569.09973145]
[91.62751770 556.14483643]
[85.53296661 542.42126465]
[81.01331329 528.10162354]
[78.12540436 513.36590576]
[76.90556335 498.39956665]
[77.36911774 483.39074707]
[79.51024628 468.52816772]
[83.30202484 453.99880981]
[88.69676208 439.98535156]
[95.62661743 426.66406250]
[104.00443268 414.20242310]
[113.72486115 402.75720215]
[124.66564941 392.47229004]
[136.68920898 383.47708130]
[149.64431763 375.88464355]
[163.36807251 369.79049683]
[177.68788147 365.27127075]
[174.80259705 350.55139160]
[171.91732788 335.83148193]
[159.68740845 323.24594116]
[165.79983521 305.87585449]
[162.69572449 291.20056152]
[159.59161377 276.52526855]
[156.48750305 261.84994507]
[153.38339233 247.17465210]
[150.27928162 232.49934387]
[145.03256226 218.44688416]
[137.75933838 205.32818604]
[130.48609924 192.20948792]
[127.32433319 206.87248230]
[116.22496033 216.96228027]
[101.32778931 218.71565247]
[88.18909454 211.47862244]
[81.70927429 197.95042419]
[84.30515289 183.17675781]
[95.00852203 172.66781616]
[109.82730103 170.34318542]
[123.23527527 177.07070923]
[111.26573181 168.20620728]
[113.22065735 152.50624084]
[107.55786896 138.61621094]
[101.89508057 124.72618866]
[96.23229980 110.83615875]
[92.61010742 125.39225006]
[82.26651764 136.25549316]
[67.90530396 140.58625793]
[53.28045654 137.25250244]
[42.21488190 127.12566376]
[37.60108948 112.85285950]
[40.64511108 98.16497803]
[50.55125427 86.90139008]
[64.73007202 82.00637817]
[79.47525024 84.75947571]
[90.93193817 94.44031525]
[87.39226532 79.86393738]
[83.74417877 65.31431580]
[79.98787689 50.79225922]
[76.23157501 36.27019882]
[65.28496552 24.84731293]
[69.58856964 10.58799171]
[65.83227539 -3.93406725]
[62.07597351 -18.45612717]
[58.31967163 -32.97818756]
[55.11843109 -18.32376480]
[48.13103104 -5.05062437]
[37.86190033 5.88303471]
[25.05237007 13.68790340]
[10.62717628 17.80054092]
[-4.37231541 17.92405128]
[-18.86327934 14.04952049]
[-31.79959869 6.45665264]
[-42.24739075 -4.30641603]
[-49.45241928 -17.46269035]
[-52.89454651 -32.06240845]
[-52.32528687 -47.05160141]
[-47.78573227 -61.34819031]
[-39.60359573 -73.92008972]
[-28.36955261 -83.85972595]
[-14.89460278 -90.44953918]
[-0.15150999 -93.21382141]
[14.79540730 -91.95299530]
[28.86711884 -86.75810242]
[41.04777527 -78.00415802]
[50.45804596 -66.32311249]
[56.41890717 -52.55710983]
[57.31172180 -67.53051758]
[58.20453644 -82.50392151]
[59.09735489 -97.47732544]
[52.19517136 -111.71356964]
[60.67629623 -123.95774078]
[61.23450470 -138.94735718]
[61.45783234 -153.94569397]
[61.68115997 -168.94403076]
[61.90448761 -183.94236755]
[62.12781906 -198.94070435]
[48.29159164 -205.30299377]
[38.24422073 -216.74720764]
[33.72648239 -231.29058838]
[35.52109146 -246.41340637]
[43.31712723 -259.49551392]
[55.76387405 -268.27038574]
[70.70486450 -271.21771240]
[85.55147552 -267.82684326]
[97.73145294 -258.68527222]
[105.13452148 -245.37684631]
[106.47807312 -230.20730591]
[101.52932739 -215.80488586]
[91.14567566 -204.66488647]
[77.12615204 -198.71737671]
[76.90282440 -183.71903992]
[76.67949677 -168.72070312]
[76.45616913 -153.72236633]
[76.23284149 -138.72402954]
[78.41309357 -135.95295715]
[79.35947418 -131.98817444]
[78.52555084 -127.42113495]
[75.64970398 -123.06492615]
[82.61574554 -109.89968872]
[74.07076263 -96.58451080]
[73.17794037 -81.61110687]
[72.28512573 -66.63770294]
[71.39231110 -51.66429520]
[72.84172821 -36.73448563]
[76.59803009 -22.21242714]
[80.35433197 -7.69036818]
[84.11063385 6.83169127]
[94.78856659 17.21586227]
[90.75363922 32.51390076]
[94.50993347 47.03595734]
[98.26623535 61.55801773]
[102.98458862 67.24651337]
[101.96864319 76.32426453]
[105.50831604 90.90064240]
[110.12232208 105.17337799]
[115.78511047 119.06340027]
[121.44789886 132.95343018]
[127.11067963 146.84346008]
[139.48526001 156.70146179]
[137.12530518 171.40791321]
[143.60479736 184.93626404]
[150.87802124 198.05496216]
[158.15126038 211.17364502]
[157.65087891 196.18199158]
[161.33859253 181.64236450]
[168.92356873 168.70141602]
[179.80761719 158.37973022]
[193.13240051 151.49130249]
[207.84704590 148.57940674]
[222.79110718 149.87365723]
[236.78602600 155.27201843]
[248.72810364 164.34872437]
[257.67556763 176.38795471]
[262.92272949 190.44026184]
[264.05581665 205.39739990]
[260.98547363 220.07980347]
[253.95379639 233.32954407]
[243.51538086 244.10169983]
[230.49342346 251.54673767]
[215.91488647 255.07749939]
[200.92948914 254.41554260]
[186.71907043 249.61306763]
[174.40429688 241.04882812]
[164.95457458 229.39524841]
[168.05868530 244.07054138]
[171.16279602 258.74584961]
[174.26690674 273.42114258]
[177.37101746 288.09643555]
[180.47512817 302.77175903]
[190.83996582 310.44854736]
[193.12326050 322.73553467]
[186.63722229 332.94622803]
[189.52249146 347.66610718]
[192.40776062 362.38601685]
[207.37402344 361.16482544]
[222.38288879 361.62701416]
[237.24563599 363.76681519]
[251.77534485 367.55728149]
[265.78927612 372.95077515]
[279.11120605 379.87942505]
[291.57357788 388.25613403]
[303.01968384 397.97552490]
[313.30557251 408.91540527]
[322.30187988 420.93814087]
[329.89547729 433.89257812]
[335.99084473 447.61578369]
[340.51135254 461.93518066]
[343.40014648 476.67068481]
[344.62088013 491.63696289]
[344.15823364 506.64584351]
[342.01797485 521.50854492]
[338.22708130 536.03808594]
[332.83316040 550.05187988]
[325.90411377 563.37359619]
[317.52703857 575.83575439]
[307.80731201 587.28155518]
[296.86712646 597.56707764]
[284.84411621 606.56304932]
[271.88943481 614.15625000]
[258.16604614 620.25122070]
[243.84652710 624.77130127]
[229.11094666 627.65966797]
[214.14462280 628.87994385]
[199.13577271 628.41680908]
[184.27314758 626.27612305]
[169.74366760 622.48480225]
[155.73005676 617.09045410]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 177]
[22 176]
[23 175]
[25 172]
[26 171]
[27 170]
[28 169]
[29 168]
[30 167]
[31 146]
[32 145]
[33 144]
[42 143]
[44 141]
[45 140]
[46 139]
[47 138]
[58 137]
[59 136]
[60 134]
[61 133]
[62 132]
[64 130]
[65 129]
[66 128]
[67 127]
[89 126]
[90 125]
[91 124]
[92 123]
[94 121]
[95 117]
[96 116]
[97 115]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
