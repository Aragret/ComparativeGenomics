%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[75.03625488 533.35522461]
[64.35958099 543.91107178]
[52.63799286 553.29309082]
[39.99991226 561.39843750]
[26.58381653 568.13830566]
[12.53669739 573.43890381]
[-1.98753846 577.24212646]
[-16.82975388 579.50622559]
[-31.82733154 580.20654297]
[-46.81594849 579.33526611]
[-61.63138199 576.90203857]
[-76.11130524 572.93347168]
[-90.09706116 567.47302246]
[-103.43543243 560.58056641]
[-115.98025513 552.33166504]
[-127.59410095 542.81658936]
[-138.14970398 532.13964844]
[-147.53143311 520.41784668]
[-155.63647461 507.77957153]
[-162.37603760 494.36331177]
[-167.67626953 480.31607056]
[-171.47911072 465.79174805]
[-173.74288940 450.94946289]
[-174.44281006 435.95187378]
[-173.57118225 420.96328735]
[-171.13758850 406.14788818]
[-167.16865540 391.66809082]
[-161.70790100 377.68243408]
[-154.81513977 364.34423828]
[-146.56588745 351.79962158]
[-137.05055237 340.18600464]
[-126.37336731 329.63067627]
[-114.65132141 320.24923706]
[-102.01284790 312.14450073]
[-88.59642029 305.40524292]
[-74.54904175 300.10534668]
[-60.02462387 296.30285645]
[-45.18230057 294.03945923]
[-30.18468666 293.33990479]
[-15.19611359 294.21188354]
[-0.38079941 296.64584351]
[14.09893036 300.61511230]
[19.55428696 286.64233398]
[25.00964355 272.66952515]
[30.46500015 258.69671631]
[35.92035675 244.72393799]
[41.37571335 230.75112915]
[40.31259155 226.09507751]
[42.16308212 220.72175598]
[47.20712280 216.44750977]
[53.07608414 202.64332581]
[58.94504547 188.83915710]
[64.81400299 175.03497314]
[70.26936340 161.06217957]
[75.30628204 146.93315125]
[80.34319305 132.80412292]
[85.38011169 118.67508698]
[90.41703033 104.54605865]
[94.92465210 90.23937225]
[98.89675140 75.77484894]
[102.86885071 61.31032181]
[93.93933868 46.26760864]
[98.56096649 29.74624634]
[113.40349579 21.83814049]
[117.15979004 7.31608105]
[120.91609192 -7.20597792]
[116.88116455 -22.50401497]
[127.55909729 -32.88818741]
[131.31539917 -47.41024399]
[135.07170105 -61.93230438]
[138.82800293 -76.45436096]
[142.58430481 -90.97642517]
[129.86145020 -99.13648987]
[120.29668427 -110.81372070]
[114.81695557 -124.85654449]
[113.94719696 -139.88513184]
[117.76001740 -154.42697144]
[125.86985016 -167.06111145]
[137.47187805 -176.55705261]
[151.42192078 -181.99458313]
[166.34922791 -182.85287476]
[170.10552979 -197.37493896]
[173.86181641 -211.89700317]
[177.61811829 -226.41905212]
[181.37442017 -240.94111633]
[185.13072205 -255.46318054]
[171.09530640 -260.79895020]
[157.73207092 -267.64636230]
[145.20323181 -275.92230225]
[133.66087341 -285.52633667]
[123.24511719 -296.34182739]
[114.08238983 -308.23751831]
[106.28392792 -321.06903076]
[99.94438934 -334.68054199]
[95.14073944 -348.90686035]
[91.93128204 -363.57528687]
[90.35498047 -378.50775146]
[90.43096924 -393.52297974]
[92.15832520 -408.43872070]
[95.51608276 -423.07391357]
[100.46348572 -437.25088501]
[106.94046021 -450.79754639]
[114.86840057 -463.54943848]
[124.15106201 -475.35177612]
[134.67575073 -486.06130981]
[146.31472778 -495.54800415]
[158.92669678 -503.69674683]
[172.35855103 -510.40853882]
[186.44725037 -515.60198975]
[201.02175903 -519.21398926]
[215.90518188 -521.20074463]
[230.91682434 -521.53808594]
[245.87446594 -520.22198486]
[260.59652710 -517.26831055]
[274.90429688 -512.71307373]
[288.62411499 -506.61141968]
[301.58941650 -499.03750610]
[313.64282227 -490.08322144]
[324.63800049 -479.85733032]
[334.44146729 -468.48388672]
[342.93426514 -456.10101318]
[350.01327515 -442.85900879]
[355.59255981 -428.91860962]
[359.60437012 -414.44903564]
[362.00006104 -399.62594604]
[362.75048828 -384.62927246]
[361.84661865 -369.64108276]
[359.29934692 -354.84329224]
[355.13961792 -340.41552734]
[349.41796875 -326.53295898]
[342.20379639 -313.36410522]
[333.58471680 -301.06878662]
[323.66534424 -289.79629517]
[312.56607056 -279.68344116]
[300.42166138 -270.85302734]
[287.37954712 -263.41220093]
[273.59799194 -257.45129395]
[259.24435425 -253.04269409]
[244.49281311 -250.23989868]
[229.52249146 -249.07693481]
[214.51509094 -249.56791687]
[199.65278625 -251.70687866]
[195.89648438 -237.18481445]
[192.14018250 -222.66276550]
[188.38388062 -208.14070129]
[184.62757874 -193.61863708]
[180.87127686 -179.09658813]
[193.51022339 -171.10794067]
[203.07408142 -159.58828735]
[208.61656189 -145.65769958]
[209.58319092 -130.67582703]
[205.86674500 -116.10906982]
[197.81896973 -103.38710022]
[186.21739197 -93.76255035]
[172.19017029 -88.18767548]
[157.10635376 -87.22012329]
[153.35005188 -72.69806671]
[149.59376526 -58.17600250]
[145.83746338 -43.65394592]
[142.08116150 -29.13188553]
[146.38476562 -14.87256336]
[135.43815613 -3.44967747]
[131.68185425 11.07238197]
[127.92555237 25.59444046]
[135.95391846 35.67287445]
[136.72306824 48.73007584]
[129.72851562 60.01221848]
[117.33337402 65.28241730]
[113.36127472 79.74694061]
[109.38918304 94.21146393]
[123.51811218 89.17427063]
[136.34542847 96.94985962]
[138.41532898 111.80635834]
[128.20193481 122.79210663]
[113.23419952 121.80882263]
[104.54605865 109.58296967]
[99.50914001 123.71200562]
[94.47222137 137.84103394]
[89.43531036 151.97006226]
[84.39839172 166.09909058]
[85.33225250 170.33959961]
[84.91055298 174.26217651]
[83.39970398 177.47975159]
[81.16444397 179.73147583]
[78.61817932 180.90393066]
[72.74922180 194.70811462]
[66.88025665 208.51228333]
[61.01129913 222.31646729]
[55.34851456 236.20649719]
[49.89315414 250.17929077]
[44.43779755 264.15209961]
[38.98244095 278.12487793]
[33.52708435 292.09768677]
[28.07172775 306.07049561]
[41.41042709 312.96228027]
[53.95565796 321.21060181]
[65.56996155 330.72509766]
[76.12609100 341.40151978]
[85.50837708 353.12286377]
[93.61403656 365.76077271]
[100.35424805 379.17669678]
[105.65516663 393.22369385]
[109.45871735 407.74783325]
[111.72321320 422.58999634]
[112.42385864 437.58755493]
[111.55296326 452.57617188]
[109.12007904 467.39166260]
[105.15186310 481.87170410]
[99.69178009 495.85757446]
[92.79966736 509.19613647]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 194]
[43 193]
[44 192]
[45 191]
[46 190]
[47 189]
[50 188]
[51 187]
[52 186]
[53 185]
[54 180]
[55 179]
[56 178]
[57 177]
[58 176]
[59 170]
[60 169]
[61 168]
[64 164]
[65 163]
[66 162]
[68 160]
[69 159]
[70 158]
[71 157]
[72 156]
[81 147]
[82 146]
[83 145]
[84 144]
[85 143]
[86 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
