%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUUxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[88.65937805 635.74792480]
[73.96685028 632.69598389]
[59.52301025 628.62658691]
[45.39822006 623.55950928]
[31.66130447 617.51947021]
[18.37918091 610.53594971]
[5.61656237 602.64288330]
[-6.56437206 593.87878418]
[-18.10427856 584.28631592]
[-28.94693375 573.91223145]
[-39.03951645 562.80706787]
[-48.33285141 551.02496338]
[-56.78166580 538.62322998]
[-64.34479523 525.66241455]
[-70.98538971 512.20550537]
[-76.67110443 498.31823730]
[-81.37423706 484.06811523]
[-85.07186890 469.52465820]
[-87.74598694 454.75869751]
[-89.38356781 439.84216309]
[-89.97663116 424.84771729]
[-89.52227783 409.84844971]
[-88.02273560 394.91741943]
[-85.48530579 380.12734985]
[-81.92234802 365.55029297]
[-77.35121918 351.25732422]
[-71.79419708 337.31799316]
[-65.27835083 323.80029297]
[-57.83541870 310.77005005]
[-49.50167084 298.29071045]
[-40.31771088 286.42312622]
[-30.32827377 275.22509766]
[-19.58203316 264.75119019]
[-8.13134384 255.05239868]
[3.96800852 246.17601013]
[16.65707588 238.16525269]
[29.87403870 231.05914307]
[43.55450439 224.89233398]
[57.63182068 219.69483948]
[72.03740692 215.49200439]
[86.70107269 212.30429077]
[101.55139160 210.14723206]
[100.43573761 195.18878174]
[99.32009125 180.23033142]
[98.20444489 165.27188110]
[96.97747040 150.32214355]
[95.63923645 135.38195801]
[82.50354767 131.06080627]
[72.00036621 122.06625366]
[65.70999146 109.75164032]
[64.57886505 95.96979523]
[68.77718353 82.79433441]
[77.67326355 72.20762634]
[89.92861176 65.80253601]
[88.81296539 50.84408569]
[87.69731903 35.88563156]
[78.95503998 22.69915581]
[85.72429657 9.43166161]
[84.60865021 -5.52679157]
[83.49299622 -20.48524475]
[77.49431610 -6.73694277]
[67.58789062 4.52639008]
[54.71792984 12.23120308]
[40.11112213 15.64312458]
[25.15969658 14.43695068]
[11.28872490 8.72764587]
[-0.17969827 -0.94061488]
[-8.15247726 -13.64631462]
[-11.86969757 -28.17842674]
[-10.97705650 -43.15184402]
[-5.55963516 -57.13939285]
[3.86621165 -68.80786896]
[16.40207291 -77.04511261]
[30.85310936 -81.06600189]
[45.84194183 -80.48728943]
[59.93992996 -75.36412811]
[71.80334473 -66.18482971]
[80.30142975 -53.82431412]
[84.62437439 -39.45957184]
[87.50965118 -54.17946243]
[90.39492035 -68.89935303]
[93.28019714 -83.61924744]
[96.16546631 -98.33913422]
[99.05074310 -113.05902863]
[84.72261810 -117.54993439]
[70.97550964 -123.58981323]
[57.97629166 -131.10536194]
[45.88275528 -140.00534058]
[34.84171295 -150.18171692]
[24.98718643 -161.51094055]
[16.43880463 -173.85551453]
[9.30033493 -187.06556702]
[3.65843296 -200.98074341]
[-0.41841352 -215.43212891]
[-2.88071585 -230.24429321]
[-3.69858360 -245.23742676]
[-2.86208892 -260.22955322]
[-0.38138616 -275.03863525]
[3.71341157 -289.48495483]
[9.37259674 -303.39309692]
[16.52747345 -316.59426880]
[25.09118462 -328.92822266]
[34.95977783 -340.24520874]
[46.01345825 -350.40783691]
[58.11804199 -359.29278564]
[71.12658691 -366.79217529]
[84.88118744 -372.81497192]
[99.21488190 -377.28808594]
[113.95365143 -380.15716553]
[128.91859436 -381.38745117]
[143.92805481 -380.96392822]
[158.79981995 -378.89181519]
[173.35337830 -375.19622803]
[187.41203308 -369.92202759]
[200.80516052 -363.13323975]
[213.37014771 -354.91229248]
[224.95449829 -345.35894775]
[235.41755676 -334.58920288]
[244.63233948 -322.73379517]
[252.48695374 -309.93658447]
[258.88610840 -296.35299683]
[263.75204468 -282.14785767]
[267.02575684 -267.49365234]
[268.66751099 -252.56823730]
[268.65731812 -237.55281067]
[266.99536133 -222.62963867]
[263.70178223 -207.97987366]
[258.81655884 -193.78135681]
[252.39901733 -180.20645142]
[244.52703857 -167.41992188]
[235.29620361 -155.57699585]
[224.81854248 -144.82144165]
[213.22126770 -135.28382874]
[200.64514160 -127.07991028]
[187.24282837 -120.30928802]
[173.17703247 -115.05416107]
[158.61848450 -111.37830353]
[143.74391174 -109.32634735]
[128.73390198 -108.92320251]
[113.77062988 -110.17375946]
[110.88536072 -95.45386505]
[108.00008392 -80.73397064]
[105.11481476 -66.01408386]
[102.22953796 -51.29418945]
[99.34426880 -36.57429886]
[98.45145416 -21.60089302]
[99.56710052 -6.64244032]
[100.68274689 8.31601334]
[109.34523010 20.43255997]
[102.65576935 34.76998138]
[103.77141571 49.72843552]
[104.88706970 64.68688965]
[119.77425385 70.33725739]
[130.71630859 81.90559387]
[135.53021240 97.08391571]
[133.25553894 112.84401703]
[124.34609985 126.04163361]
[110.57942200 134.04371643]
[111.91765594 148.98390198]
[115.80020142 157.25213623]
[113.16289520 164.15623474]
[114.27854919 179.11468506]
[115.39419556 194.07313538]
[116.50984192 209.03158569]
[131.51583862 208.96186829]
[146.49014282 209.93908691]
[161.35980225 211.95848083]
[176.05236816 215.01022339]
[190.49627686 219.07943726]
[204.62112427 224.14628601]
[218.35813904 230.18611145]
[231.64035034 237.16946411]
[244.40309143 245.06234741]
[256.58413696 253.82627869]
[268.12420654 263.41857910]
[278.96701050 273.79248047]
[289.05972290 284.89752197]
[298.35324097 296.67950439]
[306.80224609 309.08108521]
[314.36553955 322.04183960]
[321.00634766 335.49859619]
[326.69226074 349.38583374]
[331.39559937 363.63586426]
[335.09341431 378.17926025]
[337.76776123 392.94519043]
[339.40554810 407.86172485]
[339.99884033 422.85614014]
[339.54467773 437.85540771]
[338.04534912 452.78649902]
[335.50814819 467.57659912]
[331.94540405 482.15368652]
[327.37448120 496.44674683]
[321.81765747 510.38610840]
[315.30200195 523.90393066]
[307.85925293 536.93426514]
[299.52569580 549.41369629]
[290.34188843 561.28143311]
[280.35263062 572.47961426]
[269.60653687 582.95367432]
[258.15597534 592.65264893]
[246.05674744 601.52923584]
[233.36779785 609.54016113]
[220.15093994 616.64642334]
[206.47056580 622.81347656]
[192.39331055 628.01110840]
[177.98779297 632.21417236]
[163.32417297 635.40209961]
[148.47389221 637.55938721]
[133.50929260 638.67547607]
[118.50329590 638.74499512]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 164]
[43 163]
[44 162]
[45 161]
[46 159]
[47 158]
[54 152]
[55 151]
[56 150]
[58 148]
[59 147]
[60 146]
[79 145]
[80 144]
[81 143]
[82 142]
[83 141]
[84 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
