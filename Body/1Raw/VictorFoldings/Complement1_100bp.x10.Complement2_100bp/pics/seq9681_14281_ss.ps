%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[68.26882172 977.90173340]
[53.28210449 977.23187256]
[38.32985306 976.01513672]
[23.43201637 974.25311279]
[8.60847092 971.94812012]
[-6.12100315 969.10333252]
[-20.73675156 965.72247314]
[-35.21927643 961.81005859]
[-49.54924774 957.37133789]
[-63.70754623 952.41223145]
[-77.67528534 946.93933105]
[-91.43382263 940.95996094]
[-104.96479797 934.48205566]
[-118.25016022 927.51434326]
[-131.27218628 920.06604004]
[-144.01350403 912.14709473]
[-156.45709229 903.76812744]
[-168.58638000 894.94030762]
[-180.38514709 885.67535400]
[-191.83767700 875.98565674]
[-202.92868042 865.88415527]
[-213.64334106 855.38433838]
[-223.96739197 844.50024414]
[-233.88705444 833.24627686]
[-243.38906860 821.63757324]
[-252.46076965 809.68957520]
[-261.09005737 797.41827393]
[-269.26541138 784.83996582]
[-276.97592163 771.97143555]
[-284.21130371 758.82995605]
[-290.96191406 745.43292236]
[-297.21875000 731.79833984]
[-302.97341919 717.94427490]
[-308.21826172 703.88934326]
[-312.94631958 689.65222168]
[-317.15124512 675.25189209]
[-320.82742310 660.70764160]
[-323.96997070 646.03875732]
[-326.57470703 631.26495361]
[-328.63809204 616.40588379]
[-330.15744019 601.48132324]
[-331.13070679 586.51123047]
[-331.55657959 571.51562500]
[-331.43450928 556.51446533]
[-330.76461792 541.52770996]
[-329.54785156 526.57550049]
[-327.78579712 511.67764282]
[-325.48083496 496.85409546]
[-322.63601685 482.12463379]
[-319.25512695 467.50888062]
[-315.34271240 453.02636719]
[-310.90399170 438.69641113]
[-305.94485474 424.53811646]
[-300.47192383 410.57037354]
[-294.49255371 396.81182861]
[-288.01464844 383.28088379]
[-281.04690552 369.99551392]
[-273.59857178 356.97348022]
[-265.67965698 344.23217773]
[-257.30065918 331.78860474]
[-248.47279358 319.65933228]
[-239.20783997 307.86056519]
[-229.51814270 296.40805054]
[-219.41664124 285.31707764]
[-208.91680908 274.60241699]
[-198.03266907 264.27835083]
[-186.77873230 254.35871887]
[-175.17002869 244.85671997]
[-163.22201538 235.78501892]
[-150.95066833 227.15574646]
[-138.37236023 218.98040771]
[-125.50384521 211.26991272]
[-112.36231995 204.03453064]
[-98.96531677 197.28393555]
[-85.33069611 191.02714539]
[-71.47666931 185.27247620]
[-57.42170715 180.02763367]
[-43.18457031 175.29959106]
[-28.78425598 171.09469604]
[-14.23997593 167.41851807]
[0.42886227 164.27598572]
[15.20268536 161.67127991]
[30.06178093 159.60787964]
[44.98632431 158.08854675]
[59.95639801 157.11531067]
[74.95202637 156.68945312]
[89.95320892 156.81155396]
[90.62299347 141.82650757]
[91.29277802 126.84147644]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[93.72218323 72.48873901]
[94.39196777 57.50370407]
[87.27859497 43.37180710]
[95.57647705 31.00271606]
[96.24626160 16.01767731]
[82.00991821 10.93653870]
[69.90474701 1.88357210]
[61.00712967 -10.33623886]
[56.10823441 -24.63631630]
[55.64366913 -39.74510956]
[59.65474319 -54.31914902]
[67.78479004 -67.06253052]
[79.31090546 -76.84210968]
[93.20817566 -82.78829956]
[108.24087524 -84.37237549]
[123.07231140 -81.45346832]
[136.38366699 -74.29113007]
[146.99133301 -63.52223969]
[153.95205688 -50.10435104]
[156.64689636 -35.23057556]
[154.83624268 -20.22347832]
[148.68109131 -6.41748238]
[138.72875977 4.95979357]
[125.86418915 12.89669037]
[111.23130035 16.68746376]
[110.56151581 31.67250252]
[117.72280121 44.73256683]
[109.37700653 58.17348862]
[108.70722198 73.15852356]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.27781677 127.51126099]
[105.60803223 142.49629211]
[104.93824768 157.48133850]
[119.89050293 158.69805908]
[134.78834534 160.46006775]
[149.61189270 162.76499939]
[164.34136963 165.60977173]
[178.95712280 168.99060059]
[193.43966675 172.90296936]
[207.76963806 177.34165955]
[221.92794800 182.30075073]
[235.89570618 187.77362061]
[249.65425110 193.75297546]
[263.18524170 200.23083496]
[276.47061157 207.19854736]
[289.49267578 214.64682007]
[302.23397827 222.56571960]
[314.67761230 230.94465637]
[326.80688477 239.77249146]
[338.60568237 249.03741455]
[350.05822754 258.72708130]
[361.14926147 268.82855225]
[371.86395264 279.32833862]
[382.18801880 290.21243286]
[392.10769653 301.46633911]
[401.60974121 313.07504272]
[410.68145752 325.02301025]
[419.31079102 337.29434204]
[427.48614502 349.87261963]
[435.19671631 362.74111938]
[442.43212891 375.88259888]
[449.18273926 389.27960205]
[455.43960571 402.91418457]
[461.19430542 416.76821899]
[466.43917847 430.82315063]
[471.16726685 445.06027222]
[475.37222290 459.46057129]
[479.04843140 474.00485229]
[482.19100952 488.67367554]
[484.79574585 503.44747925]
[486.85919189 518.30657959]
[488.37857056 533.23114014]
[489.35186768 548.20117188]
[489.77777100 563.19683838]
[489.65573120 578.19799805]
[488.98587036 593.18469238]
[487.76913452 608.13696289]
[486.00711060 623.03479004]
[483.70217896 637.85833740]
[480.85739136 652.58782959]
[477.47653198 667.20355225]
[473.56414795 681.68609619]
[469.12542725 696.01611328]
[464.16632080 710.17437744]
[458.69345093 724.14215088]
[452.71408081 737.90069580]
[446.23620605 751.43164062]
[439.26849365 764.71704102]
[431.82019043 777.73907471]
[423.90130615 790.48040771]
[415.52233887 802.92401123]
[406.69448853 815.05328369]
[397.42956543 826.85205078]
[387.73989868 838.30456543]
[377.63839722 849.39562988]
[367.13861084 860.11029053]
[356.25448608 870.43432617]
[345.00057983 880.35400391]
[333.39187622 889.85601807]
[321.44387817 898.92773438]
[309.17254639 907.55706787]
[296.59426880 915.73242188]
[283.72576904 923.44293213]
[270.58425903 930.67834473]
[257.18725586 937.42895508]
[243.55265808 943.68579102]
[229.69863892 949.44049072]
[215.64369202 954.68536377]
[201.40657043 959.41345215]
[187.00625610 963.61834717]
[172.46199036 967.29455566]
[157.79315186 970.43713379]
[143.01933289 973.04187012]
[128.16024780 975.10528564]
[113.23570251 976.62463379]
[98.26563263 977.59790039]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[87 127]
[88 126]
[89 125]
[90 124]
[92 122]
[93 121]
[94 120]
[96 118]
[97 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
