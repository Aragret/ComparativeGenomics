%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[166.83891296 399.68911743]
[161.89193726 385.52224731]
[157.91265869 371.05371094]
[154.91921997 356.34954834]
[152.92529297 341.47686768]
[151.93997192 326.50347900]
[151.96775818 311.49774170]
[153.00849915 296.52810669]
[155.05747986 281.66290283]
[158.10534668 266.96994019]
[162.13816833 252.51623535]
[167.13755798 238.36776733]
[173.08071899 224.58909607]
[179.94050598 211.24307251]
[187.68563843 198.39060974]
[196.28077698 186.09034729]
[184.59320068 176.68818665]
[172.90560913 167.28604126]
[161.21803284 157.88389587]
[149.53045654 148.48173523]
[132.06903076 146.73077393]
[125.55764008 129.50628662]
[113.73136902 120.27918243]
[101.90510559 111.05208588]
[103.83007812 125.92805481]
[95.84880829 138.62841797]
[81.61021423 143.34674072]
[67.62400055 137.92587280]
[60.28447342 124.84416199]
[62.94715881 110.08238220]
[74.39472198 100.38942719]
[89.39523315 100.19738770]
[78.59307861 89.79001617]
[67.79092407 79.38264465]
[56.98876572 68.97527313]
[46.18661118 58.56789780]
[37.83533096 54.86736298]
[35.30255508 47.92425156]
[24.65654564 37.35720062]
[16.36128807 33.53274155]
[13.93216705 26.55268478]
[3.44466543 15.82830620]
[-7.04283571 5.10392618]
[-18.62478447 14.65024948]
[-30.97459984 23.17995644]
[-44.00329971 30.63158798]
[-57.61701202 36.95145416]
[-71.71764374 42.09402084]
[-86.20360565 46.02223206]
[-100.97051239 48.70778656]
[-115.91197968 50.13133621]
[-130.92033386 50.28261948]
[-145.88746643 49.16055298]
[-160.70550537 46.77321625]
[-175.26771545 43.13780975]
[-189.46914673 38.28053284]
[-203.20748901 32.23637772]
[-216.38374329 25.04889297]
[-228.90299988 16.76986694]
[-240.67503357 7.45895386]
[-251.61502075 -2.81676316]
[-261.64416504 -13.98324490]
[-270.69015503 -25.96003532]
[-278.68786621 -38.66084290]
[-285.57965088 -51.99414825]
[-291.31585693 -65.86389160]
[-295.85516357 -80.17013550]
[-299.16485596 -94.80980682]
[-301.22106934 -109.67741394]
[-302.00900269 -124.66584778]
[-301.52297974 -139.66709900]
[-299.76647949 -154.57308960]
[-296.75219727 -169.27642822]
[-292.50186157 -183.67115784]
[-287.04605103 -197.65356445]
[-280.42407227 -211.12292480]
[-272.68368530 -223.98216248]
[-263.88061523 -236.13864136]
[-254.07833862 -247.50477600]
[-243.34742737 -257.99865723]
[-231.76522827 -267.54467773]
[-219.41519165 -276.07406616]
[-206.38630676 -283.52536011]
[-192.77243042 -289.84487915]
[-178.67166138 -294.98709106]
[-164.18560791 -298.91491699]
[-149.41862488 -301.60009766]
[-134.47712708 -303.02325439]
[-119.46875763 -303.17416382]
[-104.50166321 -302.05169678]
[-89.68367767 -299.66397095]
[-75.12157440 -296.02819824]
[-60.92026520 -291.17056274]
[-47.18207932 -285.12603760]
[-34.00600052 -277.93823242]
[-21.48696709 -269.65887451]
[-9.71517658 -260.34765625]
[1.22455275 -250.07165527]
[11.25339794 -238.90490723]
[20.29910088 -226.92788696]
[28.29648399 -214.22686768]
[35.18792725 -200.89338684]
[40.92377472 -187.02349854]
[45.46269989 -172.71713257]
[48.77199554 -158.07737732]
[50.82782745 -143.20971680]
[51.61537170 -128.22126770]
[51.12896347 -113.22002411]
[49.37210083 -98.31407928]
[46.35744476 -83.61082458]
[42.10671234 -69.21620178]
[36.65053940 -55.23392868]
[30.02823067 -41.76474762]
[22.28750420 -28.90570259]
[13.48413181 -16.74945068]
[3.68154430 -5.38357496]
[14.16904545 5.34080458]
[24.65654564 16.06518364]
[35.22359467 26.71119308]
[45.86960220 37.27824020]
[56.59398270 47.76574326]
[67.39614105 58.17311478]
[78.19829559 68.58049011]
[89.00045013 78.98786163]
[99.80260468 89.39523315]
[111.13220215 99.22581482]
[122.95847321 108.45291138]
[134.78474426 117.68001556]
[147.65789795 116.87709808]
[157.31806946 124.80583954]
[158.93260193 136.79415894]
[170.62017822 146.19630432]
[182.30776978 155.59846497]
[193.99534607 165.00061035]
[205.68292236 174.40275574]
[215.85641479 163.37222290]
[226.75137329 153.05364990]
[238.31808472 143.49414062]
[250.50376892 134.73730469]
[263.25283813 126.82311249]
[276.50708008 119.78765869]
[290.20605469 113.66304779]
[304.28726196 108.47723389]
[318.68643188 104.25387573]
[333.33789062 101.01223755]
[348.17474365 98.76711273]
[363.12930298 97.52874756]
[378.13339233 97.30278778]
[393.11846924 98.09027100]
[408.01620483 99.88760376]
[422.75860596 102.68658447]
[437.27844238 106.47443390]
[451.50939941 111.23387909]
[465.38659668 116.94319916]
[478.84671021 123.57633972]
[491.82830811 131.10304260]
[504.27215576 139.48896790]
[516.12145996 148.69583130]
[527.32220459 158.68165588]
[537.82324219 169.40084839]
[547.57666016 180.80450439]
[556.53796387 192.84060669]
[564.66632080 205.45423889]
[571.92449951 218.58782959]
[578.27954102 232.18145752]
[583.70233154 246.17309570]
[588.16821289 260.49890137]
[591.65673828 275.09353638]
[594.15203857 289.89038086]
[595.64270020 304.82192993]
[596.12194824 319.82003784]
[595.58758545 334.81628418]
[594.04199219 349.74221802]
[591.49230957 364.52978516]
[587.95013428 379.11148071]
[583.43164062 393.42077637]
[577.95745850 407.39239502]
[571.55249023 420.96258545]
[564.24603271 434.06939697]
[556.07141113 446.65304565]
[547.06585693 458.65612793]
[537.27056885 470.02383423]
[526.73022461 480.70434570]
[515.49285889 490.64892578]
[503.60974121 499.81216431]
[491.13516235 508.15228271]
[478.12597656 515.63122559]
[464.64157104 522.21478271]
[450.74346924 527.87304688]
[436.49511719 532.58013916]
[421.96145630 536.31457520]
[407.20886230 539.05938721]
[392.30462646 540.80187988]
[377.31674194 541.53430176]
[362.31359863 541.25317383]
[347.36367798 539.95983887]
[332.53518677 537.66015625]
[317.89575195 534.36468506]
[303.51220703 530.08843994]
[289.45016479 524.85083008]
[275.77380371 518.67590332]
[262.54550171 511.59179688]
[249.82562256 503.63076782]
[237.67221069 494.82919312]
[226.14073181 485.22723389]
[215.28378296 474.86868286]
[205.15092468 463.80078125]
[195.78836060 452.07409668]
[187.23883057 439.74209595]
[179.54133606 426.86102295]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[22 128]
[23 127]
[24 126]
[32 125]
[33 124]
[34 123]
[35 122]
[36 121]
[38 120]
[39 119]
[41 118]
[42 117]
[43 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
