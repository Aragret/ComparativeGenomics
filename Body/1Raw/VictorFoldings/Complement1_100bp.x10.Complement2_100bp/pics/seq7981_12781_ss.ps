%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[201.99978638 461.22640991]
[209.21795654 448.03289795]
[218.61766052 436.29336548]
[229.91323853 426.36456299]
[242.76141357 418.54821777]
[237.30606079 404.57540894]
[231.85070801 390.60260010]
[226.39535522 376.62982178]
[214.55911255 367.58810425]
[216.74757385 351.91897583]
[211.29222107 337.94616699]
[205.83685303 323.97338867]
[200.38150024 310.00057983]
[194.92614746 296.02777100]
[188.44664001 282.49945068]
[180.97891235 269.49047852]
[173.51116943 256.48153687]
[166.04342651 243.47257996]
[158.57568359 230.46362305]
[151.10794067 217.45468140]
[143.64019775 204.44572449]
[136.17245483 191.43676758]
[130.11619568 187.20080566]
[128.69203186 178.17807007]
[121.41880035 165.05938721]
[116.25504303 179.14254761]
[102.70396423 185.57437134]
[88.52824402 180.67041016]
[81.84836578 167.23986816]
[86.49088287 152.97637939]
[99.79633331 146.05072021]
[114.14202881 150.42961121]
[108.06819916 136.71434021]
[101.99436188 122.99907684]
[95.92053223 109.28380585]
[90.03656769 103.77458191]
[89.86005402 95.31883240]
[77.34007263 85.64615631]
[79.48081970 70.90619659]
[73.61186218 57.10202026]
[71.65537262 71.97387695]
[64.22325897 85.00321960]
[52.41802597 94.25720978]
[37.99090576 98.36309052]
[23.08207893 96.71176147]
[9.90318108 89.54819489]
[0.40922317 77.93506622]
[-3.99142313 63.59511566]
[-2.64594746 48.65557861]
[4.24605703 35.33265686]
[15.66220188 25.60272217]
[29.90896988 20.90915298]
[44.87294006 21.94821358]
[58.33429337 28.56576347]
[68.29514313 39.77848434]
[65.40987396 25.05859375]
[62.52460098 10.33870220]
[59.63932800 -4.38118935]
[56.75405502 -19.10107994]
[49.23523712 -6.12158298]
[35.57038879 0.06484696]
[20.85616112 -2.84917593]
[10.58059883 -13.77679253]
[8.57623196 -28.64227295]
[15.59063911 -41.90116119]
[29.00761986 -48.60821915]
[43.82297516 -46.26187897]
[54.51148224 -35.73623276]
[53.39583206 -50.69468689]
[52.28018188 -65.65313721]
[51.16453552 -80.61159515]
[50.04888535 -95.57004547]
[43.16886520 -82.24092865]
[31.51332855 -72.79908752]
[17.04643631 -68.83562469]
[2.20611238 -71.01847076]
[-10.50678635 -78.97976685]
[-18.94991302 -91.37789154]
[-21.70045280 -106.12355804]
[-18.29489136 -120.73184967]
[-9.30712509 -132.74101257]
[3.74824905 -140.12730408]
[18.67117119 -141.64598083]
[32.94686508 -137.04115295]
[44.16962814 -127.08878326]
[50.44859695 -113.46441650]
[52.23106384 -128.35813904]
[54.01353073 -143.25186157]
[47.97093964 -157.87367249]
[57.16581345 -169.59133911]
[58.94828033 -184.48506165]
[60.73074722 -199.37876892]
[62.51321030 -214.27249146]
[64.29567719 -229.16621399]
[66.07814026 -244.05992126]
[51.82536697 -248.91296387]
[38.89325333 -256.62362671]
[27.84713936 -266.85479736]
[19.16991425 -279.15924072]
[13.24091053 -292.99905396]
[10.31931686 -307.76922607]
[10.53285313 -322.82406616]
[13.87218475 -337.50543213]
[20.19132996 -351.17153931]
[29.21404266 -363.22491455]
[40.54589081 -373.13870239]
[53.69149017 -380.47946167]
[68.07617950 -384.92633057]
[83.07111359 -386.28485107]
[98.02078247 -384.49569702]
[112.27164459 -379.63705444]
[125.20072937 -371.92132568]
[136.24281311 -361.68579102]
[144.91519165 -349.37792969]
[150.83876038 -335.53576660]
[153.75454712 -320.76446533]
[153.53507996 -305.70971680]
[150.18997192 -291.02966309]
[143.86544800 -277.36605835]
[134.83799744 -265.31619263]
[123.50225067 -255.40689087]
[110.35375977 -248.07128906]
[95.96733093 -243.63009644]
[80.97186279 -242.27746582]
[79.18939209 -227.38374329]
[77.40692902 -212.49002075]
[75.62446594 -197.59631348]
[73.84199524 -182.70259094]
[72.05953217 -167.80886841]
[78.22961426 -154.25234985]
[68.90724945 -141.46939087]
[67.12477875 -126.57566833]
[65.34231567 -111.68195343]
[65.00733948 -96.68569183]
[66.12298584 -81.72724152]
[67.23863983 -66.76879120]
[68.35428619 -51.81033325]
[69.46993256 -36.85188293]
[71.47394562 -21.98635292]
[74.35922241 -7.26646185]
[77.24449158 7.45342970]
[80.12976837 22.17332077]
[83.01503754 36.89321136]
[87.41603851 51.23305893]
[93.28499603 65.03723907]
[105.38519287 73.72254181]
[103.66423035 89.44987488]
[109.63579559 103.20997620]
[115.70963287 116.92523956]
[121.78346252 130.64050293]
[127.85729980 144.35577393]
[134.53749084 157.78614807]
[141.81071472 170.90484619]
[149.18141174 183.96902466]
[156.64915466 196.97798157]
[164.11689758 209.98693848]
[171.58464050 222.99588013]
[179.05236816 236.00483704]
[186.52011108 249.01379395]
[193.98785400 262.02273560]
[201.45559692 275.03170776]
[203.10060120 260.12216187]
[211.90013123 247.97439575]
[225.55400085 241.76377869]
[240.49313354 243.11376953]
[252.81246948 251.67144775]
[259.29174805 265.19989014]
[258.23733521 280.16278076]
[249.92483521 292.64886475]
[236.52709961 299.39431763]
[221.54629517 298.63586426]
[208.89894104 290.57241821]
[214.35429382 304.54522705]
[219.80966187 318.51803589]
[225.26501465 332.49081421]
[230.72036743 346.46362305]
[242.94680786 356.50476074]
[240.36814880 371.17446899]
[245.82350159 385.14724731]
[251.27885437 399.12005615]
[256.73422241 413.09286499]
[271.47964478 410.13589478]
[286.51452637 409.78460693]
[301.38198853 412.04959106]
[315.63018799 416.86206055]
[328.82614136 424.07574463]
[340.56887817 433.47143555]
[350.50152588 444.76364136]
[358.32226562 457.60916138]
[363.79336548 471.61764526]
[366.74865723 486.36343384]
[367.09826660 501.39834595]
[364.83157349 516.26550293]
[360.01751709 530.51318359]
[352.80230713 543.70837402]
[343.40527344 555.45001221]
[332.11196899 565.38140869]
[319.26553345 573.20062256]
[305.25643921 578.67016602]
[290.51034546 581.62377930]
[275.47537231 581.97167969]
[260.60842896 579.70330811]
[246.36132812 574.88763428]
[233.16699219 567.67095947]
[221.42639160 558.27258301]
[211.49629211 546.97814941]
[203.67849731 534.13079834]
[198.21054077 520.12109375]
[195.25862122 505.37466431]
[194.91241455 490.33966064]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 181]
[6 180]
[7 179]
[8 178]
[10 176]
[11 175]
[12 174]
[13 173]
[14 172]
[15 161]
[16 160]
[17 159]
[18 158]
[19 157]
[20 156]
[21 155]
[22 154]
[24 153]
[25 152]
[32 151]
[33 150]
[34 149]
[35 148]
[37 147]
[39 145]
[40 144]
[55 143]
[56 142]
[57 141]
[58 140]
[59 139]
[68 138]
[69 137]
[70 136]
[71 135]
[72 134]
[86 133]
[87 132]
[88 131]
[90 129]
[91 128]
[92 127]
[93 126]
[94 125]
[95 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
