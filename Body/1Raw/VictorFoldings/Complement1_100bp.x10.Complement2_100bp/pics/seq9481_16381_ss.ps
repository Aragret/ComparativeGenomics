%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[-30.02916718 395.75195312]
[-23.94623756 409.49038696]
[-19.83459854 423.94168091]
[-17.77428436 438.82461548]
[-17.80540085 453.84942627]
[-19.92734146 468.72369385]
[-24.09880066 483.15783691]
[-30.23858261 496.87094116]
[-38.22717285 509.59606934]
[-47.90906906 521.08551025]
[-59.09581757 531.11560059]
[-71.56965637 539.49108887]
[-85.08778381 546.04901123]
[-99.38706207 550.66168213]
[-114.18915558 553.23931885]
[-129.20593262 553.73175049]
[-144.14509583 552.12933350]
[-158.71583557 548.46337891]
[-172.63455200 542.80511475]
[-185.63027954 535.26477051]
[-197.45007324 525.98907471]
[-207.86386108 515.15856934]
[-216.66893005 502.98416138]
[-223.69389343 489.70272827]
[-228.80198669 475.57284546]
[-231.89379883 460.86956787]
[-232.90913391 445.87905884]
[-231.82824707 430.89312744]
[-228.67216492 416.20349121]
[-223.50231934 402.09609985]
[-216.41935730 388.84552002]
[-207.56112671 376.70971680]
[-197.10008240 365.92489624]
[-185.23982239 356.70095825]
[-172.21124268 349.21752930]
[-158.26792908 343.62017822]
[-143.68128967 340.01794434]
[-128.73526001 338.48089600]
[-113.72077942 339.03900146]
[-98.93009949 341.68133545]
[-84.65113068 346.35647583]
[-71.16181183 352.97348022]
[-62.74719238 340.55596924]
[-54.33257294 328.13848877]
[-45.91795731 315.72097778]
[-46.22067642 312.20803833]
[-44.83691025 308.37396240]
[-41.63425446 305.01296997]
[-36.84001541 302.94842529]
[-27.87931824 290.91903687]
[-18.91862106 278.88964844]
[-9.95792580 266.86029053]
[-0.99722993 254.83090210]
[7.96346617 242.80152893]
[16.92416191 230.77215576]
[18.32218170 215.94329834]
[32.77111816 209.49824524]
[41.73181534 197.46885681]
[50.51242065 185.30740356]
[59.11098099 173.01657104]
[66.38420868 159.89787292]
[72.25317383 146.09370422]
[78.12213135 132.28952026]
[83.99109650 118.48534393]
[89.86005402 104.68116760]
[95.62609100 90.83367920]
[101.08144379 76.86088562]
[106.32816315 62.80841446]
[111.57488251 48.75593948]
[116.82160187 34.70346832]
[118.82561493 19.83794212]
[117.48738098 4.89775705]
[116.14914703 -10.04242802]
[114.81091309 -24.98261261]
[102.96655273 -35.09938049]
[101.82221985 -50.26991272]
[111.54000854 -61.49935150]
[110.20177460 -76.43953705]
[108.86353302 -91.37972260]
[107.52529907 -106.31990814]
[98.14615631 -115.17397308]
[97.33911133 -127.64523315]
[104.99253845 -137.01281738]
[103.87689209 -151.97126770]
[101.30593872 -155.47044373]
[100.10317230 -159.22781372]
[100.18176270 -162.78158569]
[101.31379700 -165.74554443]
[103.16722107 -167.84863281]
[102.94389343 -182.84696960]
[102.72056580 -197.84530640]
[102.49723816 -212.84364319]
[102.27391052 -227.84197998]
[87.60980988 -231.36547852]
[74.28305817 -238.42582703]
[63.13137817 -248.57919312]
[54.85577774 -261.18734741]
[49.97646713 -275.45770264]
[48.80016708 -290.49322510]
[51.40081406 -305.34878540]
[57.61493301 -319.09051514]
[67.05190277 -330.85464478]
[79.11849976 -339.90164185]
[93.05621338 -345.66278076]
[107.98890686 -347.77597046]
[122.97789764 -346.10833740]
[137.08096313 -340.76470947]
[149.41157532 -332.08099365]
[159.19461060 -320.60305786]
[165.81512451 -307.05242920]
[168.85691833 -292.28088379]
[168.12879944 -277.21701050]
[163.67654419 -262.80770874]
[155.77999878 -249.95874023]
[144.93556213 -239.47785950]
[131.82493591 -232.02384949]
[117.27224731 -228.06530762]
[117.49557495 -213.06697083]
[117.71890259 -198.06863403]
[117.94223022 -183.07029724]
[118.16555786 -168.07196045]
[118.83534241 -153.08692932]
[119.95098877 -138.12846375]
[130.59870911 -124.17880249]
[122.46548462 -107.65814209]
[123.80371857 -92.71795654]
[125.14195251 -77.77777100]
[126.48018646 -62.83758926]
[138.03897095 -53.51395035]
[139.60896301 -38.38154221]
[129.75109863 -26.32084656]
[131.08932495 -11.38066196]
[132.42756653 3.55952263]
[133.76579285 18.49970818]
[139.20104980 4.51907587]
[147.22525024 -8.15421391]
[157.53840637 -19.04636002]
[169.75494385 -27.75015450]
[183.41815186 -33.94019699]
[198.01722717 -37.38507080]
[213.00636292 -37.95598602]
[227.82516479 -35.63159561]
[241.91964722 -30.49880219]
[254.76287842 -22.74949646]
[265.87466431 -12.67339420]
[274.83963013 -0.64719647]
[281.32260132 12.87948799]
[285.08117676 27.40095520]
[285.97488403 42.37430573]
[283.97030640 57.23975754]
[279.14233398 71.44154358]
[271.67153931 84.44873047]
[261.83715820 95.77503204]
[250.00688171 104.99700928]
[236.62300110 111.76987457]
[222.18588257 115.84044647]
[207.23526001 117.05651855]
[192.33007812 115.37264252]
[178.02755737 110.85176849]
[164.86244202 103.66291046]
[153.32690430 94.07482910]
[143.85220337 82.44597626]
[136.79257202 69.21112061]
[132.41192627 54.86504364]
[130.87406921 39.95018768]
[125.62734985 54.00265884]
[120.38063812 68.05513000]
[115.13391876 82.10760498]
[116.26624298 86.74730682]
[114.49596405 92.14759827]
[109.51611328 96.49646759]
[109.63111877 104.55620575]
[103.66423035 110.55012512]
[97.79527283 124.35430145]
[91.92630768 138.15847778]
[86.05735016 151.96266174]
[80.18839264 165.76683044]
[92.25572205 156.85731506]
[106.79530334 153.16943359]
[121.65027618 155.25024414]
[134.61698914 162.79109192]
[143.77191162 174.67330933]
[147.75697327 189.13427734]
[145.98098755 204.02876282]
[138.70744324 217.14727783]
[127.01530457 226.54376221]
[112.63903809 230.82431030]
[97.71128082 229.35391235]
[84.44647217 222.35070801]
[74.81237030 210.85357666]
[70.23813629 196.56803894]
[71.40181732 181.61512756]
[62.80325699 193.90597534]
[61.85034180 200.44841003]
[58.27337646 204.86454773]
[53.76119232 206.42956543]
[44.80049896 218.45893860]
[42.76154709 234.14820862]
[28.95353889 239.73284912]
[19.99284363 251.76222229]
[11.03214741 263.79159546]
[2.07145166 275.82098389]
[-6.88924408 287.85034180]
[-15.84994030 299.87973022]
[-24.81063652 311.90911865]
[-33.50046158 324.13558960]
[-41.91508102 336.55310059]
[-50.32969666 348.97058105]
[-58.74431610 361.38809204]
[-47.59920883 371.46441650]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 209]
[43 208]
[44 207]
[45 206]
[49 205]
[50 204]
[51 203]
[52 202]
[53 201]
[54 200]
[55 199]
[57 197]
[58 196]
[59 193]
[60 192]
[61 177]
[62 176]
[63 175]
[64 174]
[65 173]
[66 171]
[67 168]
[68 167]
[69 166]
[70 165]
[71 134]
[72 133]
[73 132]
[74 131]
[77 128]
[78 127]
[79 126]
[80 125]
[83 123]
[84 122]
[89 121]
[90 120]
[91 119]
[92 118]
[93 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
