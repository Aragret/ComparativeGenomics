%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAUxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[80.83240509 986.38714600]
[65.85160828 985.56964111]
[50.92957306 984.01226807]
[36.10281372 981.71887207]
[21.40761185 978.69506836]
[6.87993002 974.94818115]
[-7.44467926 970.48748779]
[-21.53116226 965.32379150]
[-35.34504318 959.46984863]
[-48.85252380 952.93988037]
[-62.02054214 945.74987793]
[-74.81687927 937.91748047]
[-87.21021271 929.46185303]
[-99.17021942 920.40368652]
[-110.66763306 910.76513672]
[-121.67431641 900.56976318]
[-132.16333008 889.84252930]
[-142.10900879 878.60974121]
[-151.48701477 866.89880371]
[-160.27439880 854.73846436]
[-168.44964600 842.15838623]
[-175.99276733 829.18945312]
[-182.88528442 815.86328125]
[-189.11035156 802.21264648]
[-194.65270996 788.27081299]
[-199.49882507 774.07196045]
[-203.63682556 759.65075684]
[-207.05656433 745.04266357]
[-209.74969482 730.28326416]
[-211.70964050 715.40875244]
[-212.93156433 700.45550537]
[-213.41250610 685.46014404]
[-213.15129089 670.45935059]
[-212.14854431 655.48980713]
[-210.40670776 640.58813477]
[-207.93008423 625.79089355]
[-204.72470093 611.13421631]
[-200.79840088 596.65399170]
[-196.16081238 582.38568115]
[-190.82327271 568.36413574]
[-184.79885864 554.62377930]
[-178.10227966 541.19805908]
[-170.74995422 528.11999512]
[-162.75987244 515.42156982]
[-154.15158081 503.13375854]
[-144.94613647 491.28674316]
[-135.16607666 479.90942383]
[-124.83532715 469.02972412]
[-113.97917938 458.67422485]
[-102.62419128 448.86825562]
[-90.79816437 439.63583374]
[-78.53002167 430.99957275]
[-65.84980011 422.98056030]
[-52.78852081 415.59844971]
[-39.37814713 408.87130737]
[-25.65150261 402.81558228]
[-11.64217567 397.44613647]
[2.61555099 392.77603149]
[17.08678627 388.81677246]
[31.73611450 385.57797241]
[46.52768707 383.06762695]
[61.42530823 381.29187012]
[76.39252472 380.25500488]
[91.39269257 379.95959473]
[91.83930206 364.96624756]
[92.28590393 349.97290039]
[92.73251343 334.97955322]
[93.17911530 319.98620605]
[82.79302216 303.67620850]
[93.64990234 286.69119263]
[93.64990234 271.69119263]
[93.64990234 256.69119263]
[93.64990234 241.69119263]
[93.64990234 226.69119263]
[78.70349884 222.00810242]
[65.91998291 212.92419434]
[56.55768204 200.31893921]
[51.54271317 185.41906738]
[51.37736893 169.67930603]
[56.08984756 154.64027405]
[65.23030853 141.77775574]
[77.91378021 132.35778809]
[92.90585327 127.31214905]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[92.09580994 72.91117859]
[91.87248230 57.91284180]
[79.35249329 48.93754578]
[74.57395935 34.48005676]
[79.17043304 20.15049171]
[91.17960358 11.38021278]
[90.95627594 -3.61812449]
[83.01437378 -17.30157089]
[90.56132507 -30.14262772]
[82.61941528 -43.82607269]
[90.16636658 -56.66713333]
[89.94303894 -71.66546631]
[89.71971130 -86.66381073]
[76.03428650 -93.51709747]
[67.11074066 -105.95208740]
[64.99964905 -121.11130524]
[70.18611908 -135.51127625]
[81.47834015 -145.84298706]
[96.28144836 -149.73228455]
[111.19378662 -146.28544617]
[122.78861237 -136.29454041]
[128.40153503 -122.05536652]
[126.74271393 -106.84001923]
[118.19336700 -94.14485168]
[104.71804810 -86.88713837]
[104.94137573 -71.88879395]
[105.16470337 -56.89046097]
[113.09063721 -44.27979660]
[105.55966187 -30.36595535]
[113.48559570 -17.75529099]
[105.95461273 -3.84145236]
[106.17794037 11.15688515]
[118.44291687 19.56571770]
[123.46399689 33.75207520]
[119.11803436 48.34543228]
[106.87081909 57.68951416]
[107.09414673 72.68785095]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[107.90419006 127.08882141]
[121.73862457 131.07617188]
[133.87490845 138.79260254]
[143.33377075 149.60487366]
[149.35499573 162.63034058]
[151.45849609 176.80906677]
[149.48260498 190.99008179]
[143.59638977 204.02473450]
[134.28535461 214.85981750]
[122.31125641 222.62260437]
[108.64990234 226.69119263]
[108.64990234 241.69119263]
[108.64990234 256.69119263]
[108.64990234 271.69119263]
[108.64990234 286.69119263]
[116.77275085 293.92501831]
[119.51700592 304.22302246]
[116.20992279 314.12310791]
[108.17247009 320.43280029]
[107.72586060 335.42614746]
[107.27925873 350.41952515]
[106.83264923 365.41287231]
[106.38604736 380.40621948]
[121.34204102 381.59393311]
[136.22100830 383.51980591]
[150.98651123 386.17913818]
[165.60244751 389.56546021]
[180.03302002 393.67044067]
[194.24295044 398.48403931]
[208.19741821 403.99447632]
[221.86231995 410.18826294]
[235.20417786 417.05029297]
[248.19036865 424.56369019]
[260.78909302 432.71014404]
[272.96954346 441.46966553]
[284.70190430 450.82083130]
[295.95742798 460.74078369]
[306.70861816 471.20520020]
[316.92916870 482.18853760]
[326.59402466 493.66384888]
[335.67953491 505.60308838]
[344.16351318 517.97705078]
[352.02517700 530.75543213]
[359.24526978 543.90698242]
[365.80615234 557.39947510]
[371.69171143 571.19989014]
[376.88763428 585.27453613]
[381.38113403 599.58886719]
[385.16122437 614.10797119]
[388.21868896 628.79620361]
[390.54598999 643.61767578]
[392.13748169 658.53613281]
[392.98925781 673.51501465]
[393.09924316 688.51763916]
[392.46713257 703.50744629]
[391.09451294 718.44757080]
[388.98471069 733.30157471]
[386.14288330 748.03308105]
[382.57604980 762.60601807]
[378.29287720 776.98468018]
[373.30386353 791.13397217]
[367.62118530 805.01922607]
[361.25881958 818.60644531]
[354.23229980 831.86242676]
[346.55880737 844.75463867]
[338.25714111 857.25164795]
[329.34759521 869.32281494]
[319.85202026 880.93853760]
[309.79357910 892.07049561]
[299.19696045 902.69140625]
[288.08804321 912.77532959]
[276.49401855 922.29748535]
[264.44329834 931.23461914]
[251.96534729 939.56488037]
[239.09069824 947.26782227]
[225.85086060 954.32470703]
[212.27822876 960.71813965]
[198.40602112 966.43255615]
[184.26820374 971.45391846]
[169.89933777 975.77001953]
[155.33462524 979.37023926]
[140.60968018 982.24572754]
[125.76055145 984.38952637]
[110.82357025 985.79632568]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 149]
[65 148]
[66 147]
[67 146]
[68 145]
[70 141]
[71 140]
[72 139]
[73 138]
[74 137]
[83 127]
[84 126]
[86 124]
[87 123]
[88 122]
[92 118]
[93 117]
[95 115]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
