%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[116.42047882 831.55004883]
[101.63358307 829.01141357]
[86.99424744 825.72705078]
[72.54004669 821.70550537]
[58.30808640 816.95697021]
[44.33489990 811.49371338]
[30.65636253 805.32977295]
[17.30758095 798.48089600]
[4.32282209 790.96466064]
[-8.26458073 782.80047607]
[-20.42231750 774.00921631]
[-32.11917877 764.61340332]
[-43.32513428 754.63726807]
[-54.01142502 744.10638428]
[-64.15061951 733.04772949]
[-73.71668243 721.48968506]
[-82.68506622 709.46203613]
[-91.03274536 696.99554443]
[-98.73829651 684.12225342]
[-105.78192902 670.87518311]
[-112.14556885 657.28839111]
[-117.81288147 643.39672852]
[-122.76931763 629.23583984]
[-127.00215149 614.84210205]
[-130.50051880 600.25244141]
[-133.25544739 585.50427246]
[-135.25984192 570.63555908]
[-136.50859070 555.68438721]
[-136.99845886 540.68914795]
[-136.72821045 525.68835449]
[-135.69853210 510.72045898]
[-133.91204834 495.82397461]
[-131.37336731 481.03707886]
[-128.08900452 466.39776611]
[-124.06739044 451.94357300]
[-119.31883240 437.71160889]
[-113.85553741 423.73846436]
[-107.69152069 410.05993652]
[-100.84261322 396.71118164]
[-93.32639313 383.72644043]
[-85.16214752 371.13903809]
[-76.37084198 358.98132324]
[-66.97503662 347.28451538]
[-56.99885941 336.07858276]
[-46.46791077 325.39230347]
[-35.40922928 315.25314331]
[-23.85120201 305.68710327]
[-11.82349491 296.71875000]
[0.64301389 288.37112427]
[13.51632404 280.66561890]
[26.76338959 273.62200928]
[40.35020828 267.25839233]
[54.24189758 261.59112549]
[68.40280151 256.63473511]
[82.79656219 252.40193176]
[97.38624573 248.90361023]
[112.13438416 246.14872742]
[110.13037109 231.28320312]
[108.12635803 216.41766357]
[106.12234497 201.55213928]
[104.11833191 186.68661499]
[92.15475464 177.88839722]
[89.91063690 162.84118652]
[99.22013092 150.35234070]
[97.21611786 135.48681641]
[95.21209717 120.62129211]
[81.86261749 110.91773224]
[79.53602600 94.57898712]
[89.64630127 81.53482819]
[87.42118835 66.70078278]
[77.72235870 54.20105362]
[83.48607635 40.46683121]
[81.26095581 25.63278770]
[76.40292358 39.82431793]
[67.62631226 51.98865509]
[55.69038773 61.07346344]
[41.62773132 66.29281616]
[26.65489769 67.19518280]
[12.06719017 63.70250702]
[-0.87340975 56.11693954]
[-11.04741001 45.09469986]
[-17.57465935 31.58933067]
[-19.89048386 16.76917839]
[-17.79454041 1.91633177]
[-11.46815300 -11.68428612]
[-1.45861411 -22.85608673]
[11.36814976 -30.63259888]
[25.90249634 -34.34107208]
[40.88705826 -33.66069412]
[55.02552032 -28.65031624]
[67.09476471 -19.74339104]
[76.05068207 -7.71045494]
[81.11780548 6.40407228]
[83.12181854 -8.46145535]
[85.12583160 -23.32698441]
[87.12984467 -38.19251251]
[89.13386536 -53.05804062]
[75.06339264 -58.45421600]
[62.61698532 -66.95030975]
[52.46585083 -78.08813477]
[45.15742874 -91.26704407]
[41.08585358 -105.77632141]
[40.47069931 -120.83348846]
[43.34514236 -135.62654114]
[49.55416489 -149.35769653]
[58.76292419 -161.28646851]
[70.47480774 -170.76953125]
[84.05819702 -177.29550171]
[98.78056335 -180.51242065]
[113.84795380 -180.24681091]
[128.44779968 -176.51298523]
[141.79273987 -169.51232910]
[153.16310120 -159.62237549]
[161.94570923 -147.37644958]
[167.66691589 -133.43498230]
[170.01818848 -118.54981232]
[168.87272644 -103.52368164]
[164.29229736 -89.16692352]
[156.52392578 -76.25379181]
[145.98654175 -65.48066711]
[133.24841309 -57.42852783]
[118.99650574 -52.53162003]
[103.99938965 -51.05402756]
[101.99537659 -36.18849945]
[99.99136353 -21.32296944]
[97.98735046 -6.45744228]
[95.98333740 8.40808582]
[96.09500122 23.40767097]
[98.32012177 38.24171448]
[107.85979462 49.68041611]
[102.25523376 64.47566223]
[104.48034668 79.30970764]
[115.49700165 85.57763672]
[120.95841217 97.01558685]
[118.90680695 109.52336121]
[110.07762909 118.61727905]
[112.08164215 133.48280334]
[114.08565521 148.34832764]
[126.36993408 157.92613220]
[128.19052124 173.03044128]
[118.98385620 184.68260193]
[120.98786926 199.54812622]
[122.99188232 214.41365051]
[124.99590302 229.27919006]
[126.99991608 244.14471436]
[141.95108032 242.89584351]
[156.94630432 242.40585327]
[171.94711304 242.67597961]
[186.91497803 243.70555115]
[201.81149292 245.49189758]
[216.59840393 248.03045654]
[231.23776245 251.31469727]
[245.69198608 255.33619690]
[259.92395020 260.08462524]
[273.89718628 265.54782104]
[287.57574463 271.71173096]
[300.92456055 278.56051636]
[313.90936279 286.07662964]
[326.49682617 294.24078369]
[338.65460205 303.03198242]
[350.35150146 312.42770386]
[361.55752563 322.40377808]
[372.24386597 332.93463135]
[382.38311768 343.99322510]
[391.94924927 355.55117798]
[400.91769409 367.57882690]
[409.26544189 380.04525757]
[416.97106934 392.91851807]
[424.01477051 406.16552734]
[430.37847900 419.75228882]
[436.04586792 433.64392090]
[441.00238037 447.80477905]
[445.23532104 462.19851685]
[448.73376465 476.78817749]
[451.48876953 491.53628540]
[453.49325562 506.40502930]
[454.74206543 521.35620117]
[455.23202515 536.35144043]
[454.96185303 551.35223389]
[453.93225098 566.32006836]
[452.14584351 581.21661377]
[449.60726929 596.00347900]
[446.32296753 610.64282227]
[442.30142212 625.09704590]
[437.55294800 639.32904053]
[432.08972168 653.30224609]
[425.92581177 666.98077393]
[419.07696533 680.32958984]
[411.56082153 693.31433105]
[403.39663696 705.90179443]
[394.60537720 718.05957031]
[385.20965576 729.75640869]
[375.23352051 740.96240234]
[364.70263672 751.64874268]
[353.64401245 761.78796387]
[342.08605957 771.35406494]
[330.05838013 780.32244873]
[317.59191895 788.67016602]
[304.71865845 796.37579346]
[291.47161865 803.41943359]
[277.88485718 809.78314209]
[263.99319458 815.45043945]
[249.83230591 820.40692139]
[235.43856812 824.63983154]
[220.84890747 828.13824463]
[206.10078430 830.89318848]
[191.23205566 832.89764404]
[176.28088379 834.14642334]
[161.28564453 834.63635254]
[146.28483582 834.36608887]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 145]
[58 144]
[59 143]
[60 142]
[61 141]
[64 138]
[65 137]
[66 136]
[69 132]
[70 131]
[72 129]
[73 128]
[93 127]
[94 126]
[95 125]
[96 124]
[97 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
