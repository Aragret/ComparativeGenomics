%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[103.32736969 496.67694092]
[92.35324860 486.34902954]
[84.05722046 473.76840210]
[78.88667297 459.61346436]
[77.12044525 444.64758301]
[78.85379791 429.67788696]
[83.99324036 415.51162720]
[92.26162720 402.91281128]
[103.21303558 392.56082153]
[116.25688171 385.01397705]
[130.68972778 380.67926025]
[129.79690552 365.70587158]
[128.79264832 350.73953247]
[120.13017273 338.62298584]
[126.81963348 324.28555298]
[125.70397949 309.32708740]
[117.04150391 297.21054077]
[123.73096466 282.87313843]
[122.61531067 267.91467285]
[120.83284760 253.02095032]
[111.12392426 241.72555542]
[116.50758362 226.84849548]
[106.79866028 215.55310059]
[112.18232727 200.67604065]
[109.73660278 185.87677002]
[100.02767944 174.58137512]
[105.41133881 159.70431519]
[102.52606964 144.98442078]
[99.20380402 130.35696411]
[95.88154602 115.72950745]
[86.41867065 108.94016266]
[83.92377472 97.56401825]
[89.67687988 87.43766022]
[86.57276917 72.76235962]
[83.46865845 58.08705902]
[73.04302979 46.18677521]
[77.97905731 32.13384247]
[74.87494659 17.45853806]
[71.77083588 2.78323627]
[68.66672516 -11.89206600]
[65.56261444 -26.56736946]
[62.45850372 -41.24267197]
[58.96826553 -45.12408066]
[57.46609116 -49.51688766]
[57.81385803 -53.57818222]
[59.55892563 -56.64201736]
[57.11319733 -71.44128418]
[54.66746902 -86.24055481]
[48.70261765 -72.47754669]
[37.41374207 -62.60023499]
[22.98054123 -58.51578522]
[8.18984413 -61.01283646]
[-4.10249901 -69.60924530]
[-11.52302837 -82.64518738]
[-12.63895702 -97.60362244]
[-7.23481512 -111.59630585]
[3.64594102 -121.92147827]
[17.90240860 -126.58550262]
[32.78188705 -124.68783569]
[45.41138077 -116.59488678]
[53.35275269 -103.86806488]
[53.57608414 -118.86640167]
[53.79941177 -133.86474609]
[54.02273941 -148.86308289]
[39.89374542 -154.30339050]
[28.49994469 -164.23078918]
[21.20381165 -177.43255615]
[18.86905098 -192.30598450]
[21.75838470 -207.05296326]
[29.50414848 -219.89732361]
[41.15494919 -229.29881287]
[55.29249191 -234.13774109]
[55.51581955 -249.13607788]
[55.73914719 -264.13439941]
[55.96247482 -279.13275146]
[56.18580246 -294.13107300]
[56.40913010 -309.12942505]
[53.52784348 -315.08001709]
[54.01162720 -320.74246216]
[56.86903381 -324.56924438]
[57.53881836 -339.55426025]
[58.20860672 -354.53930664]
[58.87839127 -369.52435303]
[46.21602249 -361.48291016]
[31.98511124 -366.22436523]
[26.67615318 -380.25341797]
[34.20271301 -393.22842407]
[49.01649475 -395.58468628]
[60.19668579 -385.58676147]
[54.15409851 -400.20858765]
[63.34897232 -411.92623901]
[65.13143921 -426.81994629]
[66.69196320 -441.73855591]
[68.03019714 -456.67874146]
[65.67887878 -465.50537109]
[69.50119019 -471.83084106]
[71.06171417 -486.74945068]
[72.62223816 -501.66806030]
[74.18276215 -516.58666992]
[75.74328613 -531.50524902]
[62.00205612 -537.86584473]
[51.07237625 -548.34539795]
[44.13981628 -561.80712891]
[41.95636749 -576.79083252]
[44.75887680 -591.67120361]
[52.24334335 -604.83410645]
[63.59791565 -614.85168457]
[77.59092712 -620.63739014]
[92.70452881 -621.56359863]
[107.29930115 -617.52978516]
[119.79212189 -608.97363281]
[128.82785034 -596.82318115]
[133.42637634 -582.39636230]
[133.08886719 -567.25817871]
[127.85195160 -553.05065918]
[118.28367615 -541.31494141]
[105.42193604 -533.32403564]
[90.66188812 -529.94476318]
[89.10136414 -515.02612305]
[87.54084778 -500.10754395]
[85.98032379 -485.18893433]
[84.41979980 -470.27032471]
[82.97038269 -455.34051514]
[81.63214874 -440.40032959]
[83.95267487 -436.22610474]
[83.67561340 -430.54980469]
[80.02515411 -425.03750610]
[78.24269104 -410.14376831]
[84.41277313 -396.58724976]
[75.09040070 -383.80429077]
[73.86342621 -368.85455322]
[73.19364166 -353.86950684]
[72.52385712 -338.88449097]
[71.85407257 -323.89944458]
[71.40747070 -308.90609741]
[71.18414307 -293.90774536]
[70.96081543 -278.90942383]
[70.73748779 -263.91107178]
[70.51416016 -248.91275024]
[70.29083252 -233.91441345]
[84.27803040 -228.65669250]
[95.64374542 -218.91249084]
[103.00365448 -205.84320068]
[105.45263672 -191.01673889]
[102.67607117 -176.21942139]
[94.99010468 -163.24073792]
[83.30577850 -153.65696716]
[69.02107239 -148.63975525]
[68.79774475 -133.64141846]
[68.57441711 -118.64307404]
[68.35108948 -103.64473724]
[69.46674347 -88.68628693]
[71.91246796 -73.88701630]
[74.35819244 -59.08774567]
[77.13380432 -44.34678268]
[80.23791504 -29.67147827]
[83.34202576 -14.99617672]
[86.44613647 -0.32087392]
[89.55024719 14.35442829]
[92.65435791 29.02973175]
[102.85796356 39.88034058]
[98.14396667 54.98294830]
[101.24807739 69.65824890]
[104.35218811 84.33355713]
[115.88227844 96.51686859]
[110.50901031 112.40724945]
[113.83126831 127.03470612]
[117.15352631 141.66217041]
[120.21510315 144.74124146]
[121.96193695 148.27862549]
[122.41139221 151.80473328]
[121.73155212 154.90383911]
[120.21060944 157.25859070]
[130.09446716 169.61253357]
[124.53587341 183.43104553]
[126.98159790 198.23031616]
[136.86544800 210.58425903]
[131.30685425 224.40277100]
[141.19071960 236.75671387]
[135.63211060 250.57522583]
[145.22509766 239.04376221]
[160.14909363 237.53576660]
[171.85499573 246.91511536]
[173.63710022 261.80886841]
[164.47454834 273.68524170]
[149.61607361 275.74087524]
[137.57376099 266.79901123]
[138.68940735 281.75747681]
[147.43168640 294.94393921]
[140.66242981 308.21145630]
[141.77807617 323.16989136]
[150.52037048 336.35638428]
[143.75109863 349.62387085]
[147.51011658 357.94900513]
[144.77030945 364.81304932]
[145.66313171 379.78646851]
[160.50880432 382.37539673]
[174.35704041 388.31872559]
[186.46098328 397.29598999]
[196.16790771 408.82302856]
[202.95433044 422.27816772]
[206.45426941 436.93582153]
[206.47897339 452.00555420]
[203.02709961 466.67459106]
[196.28482056 480.15194702]
[186.61573792 491.71072388]
[174.54127502 500.72760010]
[160.71261597 506.71630859]
[145.87550354 509.35391235]
[130.83009338 508.49810791]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 196]
[12 195]
[13 193]
[15 191]
[16 190]
[18 188]
[19 187]
[20 180]
[22 178]
[24 176]
[25 175]
[27 173]
[28 168]
[29 167]
[30 166]
[33 164]
[34 163]
[35 162]
[37 160]
[38 159]
[39 158]
[40 157]
[41 156]
[42 155]
[46 154]
[47 153]
[48 152]
[61 151]
[62 150]
[63 149]
[64 148]
[72 140]
[73 139]
[74 138]
[75 137]
[76 136]
[77 135]
[80 134]
[81 133]
[82 132]
[83 131]
[89 130]
[91 128]
[92 127]
[93 124]
[94 123]
[96 122]
[97 121]
[98 120]
[99 119]
[100 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
