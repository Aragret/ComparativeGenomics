%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[165.95324707 373.25872803]
[163.33351135 358.48208618]
[161.82536316 343.55096436]
[161.43725586 328.54891968]
[162.17132568 313.55981445]
[164.02349854 298.66748047]
[166.98339844 283.95520020]
[171.03448486 269.50524902]
[176.15408325 255.39845276]
[182.31358337 241.71368408]
[189.47853088 228.52749634]
[197.60885620 215.91360474]
[206.65908813 203.94258118]
[195.40298462 194.02792358]
[184.14689636 184.11328125]
[172.89079285 174.19862366]
[161.63470459 164.28398132]
[150.37860107 154.36932373]
[139.12251282 144.45466614]
[124.65293121 147.88529968]
[110.77363586 142.06900024]
[102.88832855 129.04306030]
[104.20025635 113.69427490]
[90.53220367 110.74877930]
[85.88509369 97.56182098]
[74.62899780 87.64717102]
[63.37289810 77.73251343]
[52.11680222 67.81786346]
[40.86070633 57.90321350]
[25.39079475 54.58774185]
[20.95434380 40.36919022]
[9.69824791 30.45453835]
[-5.77166462 27.13906479]
[-10.20811558 12.92051506]
[-21.46421051 3.00586390]
[-32.72030640 -6.90878725]
[-43.46284485 3.57048917]
[-54.96715927 13.20730305]
[-67.16734314 21.94645691]
[-79.99353027 29.73789024]
[-93.37223816 36.53697586]
[-107.22683716 42.30476761]
[-121.47797394 47.00822830]
[-136.04400635 50.62041855]
[-150.84152222 53.12064362]
[-165.78573608 54.49458694]
[-180.79106140 54.73437500]
[-195.77156067 53.83863449]
[-210.64138794 51.81249619]
[-225.31541443 48.66756821]
[-239.70956421 44.42186356]
[-253.74137878 39.09970474]
[-267.33050537 32.73156738]
[-280.39907837 25.35393715]
[-292.87228394 17.00906944]
[-304.67864990 7.74476385]
[-315.75051880 -2.38591409]
[-326.02453613 -13.32493591]
[-335.44180298 -25.00964355]
[-343.94839478 -37.37310791]
[-351.49560547 -50.34450531]
[-358.04016113 -63.84954453]
[-363.54458618 -77.81086731]
[-367.97738647 -92.14849854]
[-371.31314087 -106.78031921]
[-373.53277588 -121.62251282]
[-374.62350464 -136.59007263]
[-374.57916260 -151.59724426]
[-373.39993286 -166.55809021]
[-371.09265137 -181.38690186]
[-367.67044067 -195.99874878]
[-363.15298462 -210.30992126]
[-357.56610107 -224.23846436]
[-350.94180298 -237.70457458]
[-343.31808472 -250.63113403]
[-334.73852539 -262.94409180]
[-325.25234985 -274.57293701]
[-314.91387939 -285.45101929]
[-303.78228760 -295.51608276]
[-291.92138672 -304.71044922]
[-279.39907837 -312.98141479]
[-266.28710938 -320.28167725]
[-252.66056824 -326.56936646]
[-238.59753418 -331.80850220]
[-224.17854309 -335.96902466]
[-209.48619080 -339.02716064]
[-194.60462952 -340.96536255]
[-179.61911011 -341.77252197]
[-164.61546326 -341.44403076]
[-149.67962646 -339.98178101]
[-134.89715576 -337.39413452]
[-120.35272217 -333.69589233]
[-106.12964630 -328.90826416]
[-92.30937958 -323.05868530]
[-78.97109985 -316.18063354]
[-66.19120026 -308.31350708]
[-54.04288101 -299.50241089]
[-42.59573746 -289.79772949]
[-31.91533279 -279.25515747]
[-22.06284523 -267.93499756]
[-13.09470749 -255.90213013]
[-5.06229067 -243.22546387]
[1.98839569 -229.97763062]
[8.01696587 -216.23449707]
[12.98888874 -202.07478333]
[16.87568474 -187.57960510]
[19.65509033 -172.83198547]
[21.31118393 -157.91639709]
[21.83448219 -142.91828918]
[21.22198677 -127.92354584]
[19.47720337 -113.01807404]
[16.61013031 -98.28724670]
[12.63718796 -83.81543732]
[7.58113241 -69.68555450]
[1.47092605 -55.97851944]
[-5.65843248 -42.77285385]
[-13.76610661 -30.14419556]
[-22.80565643 -18.16488266]
[-11.54955959 -8.25023174]
[-0.29346409 1.66441929]
[14.37133789 4.27073050]
[19.61289978 19.19844246]
[30.86899567 29.11309433]
[45.53379822 31.71940613]
[50.77536011 46.64711761]
[62.03145599 56.56176758]
[73.28755188 66.47641754]
[84.54364777 76.39107513]
[95.79974365 86.30572510]
[109.46779633 89.25122070]
[114.11490631 102.43817902]
[129.17533875 99.19943237]
[143.09239197 105.37754059]
[150.61399841 118.41170502]
[149.03715515 133.19857788]
[160.29325867 143.11323547]
[171.54934692 153.02787781]
[182.80545044 162.94253540]
[194.06153870 172.85717773]
[205.31764221 182.77183533]
[216.57373047 192.68647766]
[227.30671692 182.19766235]
[238.79350281 172.54023743]
[250.96989441 163.76824951]
[263.76776123 155.93072510]
[277.11553955 149.07150269]
[290.93859863 143.22895813]
[305.15960693 138.43574524]
[319.69906616 134.71868896]
[334.47564697 132.09857178]
[349.40670776 130.59002686]
[364.40875244 130.20150757]
[379.39788818 130.93519592]
[394.29025269 132.78697205]
[409.00262451 135.74649048]
[423.45266724 139.79718018]
[437.55960083 144.91642761]
[451.24453735 151.07556152]
[464.43090820 158.24015808]
[477.04501343 166.37014771]
[489.01629639 175.42005920]
[500.27777100 185.33927917]
[510.76651001 196.07235718]
[520.42382812 207.55923462]
[529.19573975 219.73568726]
[537.03314209 232.53363037]
[543.89221191 245.88146973]
[549.73468018 259.70458984]
[554.52770996 273.92565918]
[558.24468994 288.46511841]
[560.86468506 303.24172974]
[562.37304688 318.17279053]
[562.76147461 333.17483521]
[562.02764893 348.16397095]
[560.17572021 363.05633545]
[557.21606445 377.76867676]
[553.16528320 392.21868896]
[548.04589844 406.32556152]
[541.88665771 420.01043701]
[534.72192383 433.19677734]
[526.59179688 445.81079102]
[517.54180908 457.78198242]
[507.62246704 469.04339600]
[496.88931274 479.53201294]
[485.40234375 489.18923950]
[473.22583008 497.96102905]
[460.42779541 505.79830933]
[447.07989502 512.65728760]
[433.25674438 518.49963379]
[419.03564453 523.29254150]
[404.49612427 527.00933838]
[389.71951294 529.62921143]
[374.78842163 531.13751221]
[359.78637695 531.52575684]
[344.79724121 530.79180908]
[329.90490723 528.93975830]
[315.19259644 525.97998047]
[300.74261475 521.92901611]
[286.63577271 516.80957031]
[272.95095825 510.65017700]
[259.76467896 503.48535156]
[247.15072632 495.35513306]
[235.17962646 486.30502319]
[223.91830444 476.38558960]
[213.42976379 465.65234375]
[203.77265930 454.16528320]
[195.00097656 441.98867798]
[187.16378784 429.19058228]
[180.30493164 415.84262085]
[174.46275330 402.01940918]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 141]
[14 140]
[15 139]
[16 138]
[17 137]
[18 136]
[19 135]
[23 131]
[25 129]
[26 128]
[27 127]
[28 126]
[29 125]
[31 123]
[32 122]
[34 120]
[35 119]
[36 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
