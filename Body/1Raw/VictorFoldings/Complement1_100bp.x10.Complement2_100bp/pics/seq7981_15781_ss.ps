%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[47.63827515 907.80847168]
[32.63710403 907.62463379]
[17.65748978 906.79992676]
[2.72679472 905.33593750]
[-12.12770653 903.23529053]
[-26.87887955 900.50183105]
[-41.49978256 897.14056396]
[-55.96369934 893.15759277]
[-70.24421692 888.56018066]
[-84.31524658 883.35681152]
[-98.15109253 877.55694580]
[-111.72646332 871.17120361]
[-125.01657867 864.21118164]
[-137.99716187 856.68963623]
[-150.64448547 848.62030029]
[-162.93545532 840.01794434]
[-174.84762573 830.89819336]
[-186.35923767 821.27783203]
[-197.44924927 811.17431641]
[-208.09742737 800.60620117]
[-218.28428650 789.59271240]
[-227.99125671 778.15405273]
[-237.20057678 766.31097412]
[-245.89543152 754.08526611]
[-254.05995178 741.49920654]
[-261.67919922 728.57574463]
[-268.73928833 715.33850098]
[-275.22729492 701.81170654]
[-281.13137817 688.01995850]
[-286.44076538 673.98858643]
[-291.14575195 659.74316406]
[-295.23770142 645.30975342]
[-298.70919800 630.71459961]
[-301.55389404 615.98449707]
[-303.76654053 601.14624023]
[-305.34317017 586.22698975]
[-306.28082275 571.25402832]
[-306.57785034 556.25469971]
[-306.23370361 541.25634766]
[-305.24896240 526.28637695]
[-303.62548828 511.37219238]
[-301.36618042 496.54098511]
[-298.47521973 481.81988525]
[-294.95788574 467.23574829]
[-290.82055664 452.81521606]
[-286.07083130 438.58462524]
[-280.71740723 424.57000732]
[-274.76998901 410.79696655]
[-268.23950195 397.29058838]
[-261.13784790 384.07562256]
[-253.47801208 371.17617798]
[-245.27397156 358.61581421]
[-236.54072571 346.41748047]
[-227.29423523 334.60345459]
[-217.55137634 323.19531250]
[-207.32994080 312.21389771]
[-196.64860535 301.67929077]
[-185.52688599 291.61068726]
[-173.98510742 282.02655029]
[-162.04432678 272.94430542]
[-149.72637939 264.38061523]
[-137.05375671 256.35107422]
[-124.04959869 248.87034607]
[-110.73767853 241.95214844]
[-97.14229584 235.60906982]
[-83.28829956 229.85270691]
[-69.20098114 224.69358826]
[-54.90608597 220.14112854]
[-40.42972183 216.20364380]
[-25.79832840 212.88832092]
[-11.03863716 210.20123291]
[3.82239294 208.14727783]
[18.75761604 206.73019409]
[33.73974991 205.95259094]
[48.74142456 205.81588745]
[63.73524094 206.32032776]
[78.69380951 207.46498108]
[80.47627258 192.57125854]
[82.25873566 177.67755127]
[72.95585632 168.76205444]
[70.44915009 155.92466736]
[75.87369537 143.80918884]
[87.45361328 136.93023682]
[89.45762634 122.06470490]
[91.46163940 107.19918060]
[93.35492706 92.31914520]
[95.13739777 77.42543030]
[96.91986084 62.53171158]
[85.18247223 71.87160492]
[70.18479919 71.60746765]
[58.78357315 61.86005783]
[56.19128418 47.08575439]
[63.59309387 34.03917313]
[77.60498810 28.68503571]
[91.82092285 33.47118378]
[99.74195099 46.21126175]
[103.06420898 31.58380318]
[106.38647461 16.95634270]
[109.70873260 2.32888198]
[113.03099060 -12.29857826]
[99.49805450 -18.92854118]
[87.85926056 -28.50116920]
[78.74227142 -40.50022125]
[72.63876343 -54.27860641]
[69.87787628 -69.09326935]
[70.60850525 -84.14527130]
[74.79125977 -98.62288666]
[82.20055389 -111.74535370]
[92.43682861 -122.80498505]
[104.94804382 -131.20535278]
[119.05948639 -136.49343872]
[134.01014709 -138.38406372]
[148.99375916 -136.77526855]
[163.20225525 -131.75381470]
[175.86941528 -123.59049988]
[186.31210327 -112.72555542]
[193.96716309 -99.74491882]
[198.42176819 -85.34862518]
[199.43566895 -70.31304932]
[196.95420837 -55.44902802]
[191.11119080 -41.55817032]
[182.22174072 -29.38958740]
[170.76525879 -19.59951782]
[157.35954285 -12.71592903]
[142.72758484 -9.11004257]
[127.65844727 -8.97631836]
[124.33618927 5.65114164]
[121.01393127 20.27860260]
[117.69167328 34.90606308]
[114.36941528 49.53352356]
[111.81358337 64.31417847]
[110.03111267 79.20789337]
[108.24864960 94.10160828]
[110.49381256 101.84317017]
[106.32716370 109.20319366]
[104.32315063 124.06871796]
[102.31913757 138.93424988]
[113.17831421 152.64912415]
[110.80539703 169.63981628]
[97.15245819 179.46000671]
[95.36998749 194.35372925]
[93.58752441 209.24745178]
[108.39375305 211.66500854]
[123.08315277 214.71302795]
[137.62889099 218.38595581]
[152.00440979 222.67704773]
[166.18344116 227.57849121]
[180.14007568 233.08131409]
[193.84884644 239.17549133]
[207.28466797 245.84986877]
[220.42304993 253.09225464]
[233.23994446 260.88943481]
[245.71197510 269.22714233]
[257.81634521 278.09017944]
[269.53094482 287.46234131]
[280.83435059 297.32647705]
[291.70596313 307.66461182]
[302.12591553 318.45785522]
[312.07513428 329.68646240]
[321.53546143 341.32995605]
[330.48965454 353.36706543]
[338.92129517 365.77578735]
[346.81503296 378.53344727]
[354.15643311 391.61676025]
[360.93206787 405.00180054]
[367.12957764 418.66415405]
[372.73764038 432.57885742]
[377.74600220 446.72045898]
[382.14550781 461.06317139]
[385.92816162 475.58074951]
[389.08700562 490.24673462]
[391.61630249 505.03427124]
[393.51144409 519.91638184]
[394.76892090 534.86590576]
[395.38644409 549.85546875]
[395.36291504 564.85778809]
[394.69836426 579.84533691]
[393.39401245 594.79083252]
[391.45223999 609.66693115]
[388.87655640 624.44647217]
[385.67172241 639.10247803]
[381.84356689 653.60809326]
[377.39907837 667.93695068]
[372.34640503 682.06280518]
[366.69473267 695.95983887]
[360.45437622 709.60266113]
[353.63681030 722.96643066]
[346.25442505 736.02661133]
[338.32070923 748.75946045]
[329.85018921 761.14166260]
[320.85830688 773.15063477]
[311.36148071 784.76440430]
[301.37710571 795.96173096]
[290.92337036 806.72229004]
[280.01937866 817.02624512]
[268.68505859 826.85491943]
[256.94113159 836.19024658]
[244.80903625 845.01531982]
[232.31092834 853.31384277]
[219.46961975 861.07080078]
[206.30860901 868.27191162]
[192.85189819 874.90411377]
[179.12409973 880.95526123]
[165.15026855 886.41430664]
[150.95593262 891.27124023]
[136.56703186 895.51727295]
[122.00984192 899.14453125]
[107.31095123 902.14648438]
[92.49721527 904.51757812]
[77.59569550 906.25354004]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[77 142]
[78 141]
[79 140]
[83 137]
[84 136]
[85 135]
[86 133]
[87 132]
[88 131]
[96 130]
[97 129]
[98 128]
[99 127]
[100 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
