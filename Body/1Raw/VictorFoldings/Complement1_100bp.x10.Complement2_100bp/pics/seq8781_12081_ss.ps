%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[60.79264069 820.75592041]
[45.79037476 820.94927979]
[30.79881096 820.35064697]
[15.85973358 818.96160889]
[1.01478207 816.78607178]
[-13.69466877 813.83020020]
[-28.22761917 810.10205078]
[-42.54356766 805.61218262]
[-56.60260773 800.37304688]
[-70.36555481 794.39923096]
[-83.79405212 787.70733643]
[-96.85066986 780.31610107]
[-109.49901581 772.24615479]
[-121.70384216 763.51989746]
[-133.43112183 754.16168213]
[-144.64817810 744.19757080]
[-155.32374573 733.65539551]
[-165.42805481 722.56445312]
[-174.93296814 710.95574951]
[-183.81196594 698.86163330]
[-192.04032898 686.31573486]
[-199.59510803 673.35302734]
[-206.45524597 660.00976562]
[-212.60162354 646.32299805]
[-218.01710510 632.33093262]
[-222.68661499 618.07250977]
[-226.59712219 603.58758545]
[-229.73771667 588.91650391]
[-232.09967041 574.10003662]
[-233.67639160 559.17962646]
[-234.46348572 544.19677734]
[-234.45874023 529.19323730]
[-233.66220093 514.21087646]
[-232.07606506 499.29144287]
[-229.70475769 484.47653198]
[-226.55488586 469.80737305]
[-222.63523865 455.32492065]
[-217.95674133 441.06948853]
[-212.53242493 427.08084106]
[-206.37739563 413.39797974]
[-199.50883484 400.05899048]
[-191.94587708 387.10110474]
[-183.70960999 374.56039429]
[-174.82296753 362.47186279]
[-165.31072998 350.86914062]
[-155.19941711 339.78463745]
[-144.51719666 329.24917603]
[-133.29385376 319.29217529]
[-121.56066895 309.94134521]
[-109.35033417 301.22280884]
[-96.69689941 293.16079712]
[-83.63562012 285.77783203]
[-70.20289612 279.09445190]
[-56.43618011 273.12930298]
[-42.37383652 267.89901733]
[-28.05505753 263.41818237]
[-13.51975536 259.69924927]
[1.19155824 256.75262451]
[16.03787994 254.58648682]
[30.97783089 253.20690918]
[45.96976852 252.61769104]
[60.97191238 252.82052612]
[75.94244385 253.81480408]
[77.72490692 238.92108154]
[79.50737762 224.02737427]
[71.74173737 208.29010010]
[82.90084839 193.64237976]
[76.52960968 180.17921448]
[85.66062927 167.25888062]
[87.22115326 152.34027100]
[88.78166962 137.42167664]
[90.34219360 122.50306702]
[91.79161835 107.57325745]
[93.01859283 92.62351990]
[94.13423920 77.66506958]
[95.24988556 62.70661545]
[96.36553955 47.74816132]
[83.31134033 36.99251175]
[79.28030396 20.73668289]
[85.66879272 5.43475580]
[99.77629089 -2.95905137]
[100.66910553 -17.93245697]
[93.76692963 -32.16869354]
[102.24804688 -44.41286850]
[103.14086914 -59.38627625]
[100.80304718 -64.05335999]
[100.51773834 -68.68714142]
[101.92855072 -72.51136017]
[104.42264557 -75.00371552]
[105.98316193 -89.92231750]
[107.54368591 -104.84092712]
[109.10420990 -119.75952911]
[94.66339874 -123.96698761]
[81.20601654 -130.68551636]
[69.16467285 -139.69917297]
[58.92644119 -150.71817017]
[50.82044220 -163.38830566]
[45.10724258 -177.30230713]
[41.97050858 -192.01286316]
[41.51106262 -207.04711914]
[43.74368286 -221.92176819]
[48.59659195 -236.15866089]
[55.91379929 -249.30012512]
[65.46007538 -260.92373657]
[76.92855072 -270.65585327]
[89.95056915 -278.18359375]
[104.10751343 -283.26498413]
[118.94431305 -285.73669434]
[133.98400879 -285.51925659]
[148.74314880 -282.61965942]
[162.74728394 -277.13110352]
[175.54623413 -269.23007202]
[186.72856140 -259.17050171]
[195.93482971 -247.27575684]
[202.86906433 -233.92823792]
[207.30836487 -219.55700684]
[209.11004639 -204.62403870]
[208.21615601 -189.60934448]
[204.65547180 -174.99562073]
[198.54241943 -161.25260925]
[190.07351685 -148.82209778]
[179.52101135 -138.10368347]
[167.22412109 -129.44190979]
[153.57814026 -123.11521912]
[139.02172852 -119.32699585]
[124.02281952 -118.19900513]
[122.46229553 -103.28040314]
[120.90177155 -88.36180115]
[119.34124756 -73.44319153]
[118.11427307 -58.49345779]
[117.22145844 -43.52005386]
[124.18750000 -30.35481453]
[115.64251709 -17.03964043]
[114.74969482 -2.06623554]
[125.80645752 5.41642189]
[131.76986694 17.48215294]
[130.98638916 31.02673721]
[123.55390167 42.50613403]
[111.32398987 48.86381149]
[110.20834351 63.82226562]
[109.09268951 78.78071594]
[107.97704315 93.73917389]
[110.56565094 101.37275696]
[106.73179626 108.91149139]
[109.08311462 117.73810577]
[105.26080322 124.06359100]
[103.70027924 138.98219299]
[102.13975525 153.90080261]
[100.57923126 168.81939697]
[106.83884430 183.34963989]
[97.81945038 195.20289612]
[105.32035828 205.69570923]
[103.71347046 218.08932495]
[94.40109253 225.80982971]
[92.61862946 240.70355225]
[90.83615875 255.59727478]
[105.61853027 258.16378784]
[120.24485016 261.50686646]
[134.67434692 265.61721802]
[148.86682129 270.48333740]
[162.78269958 276.09170532]
[176.38319397 282.42666626]
[189.63041687 289.47058105]
[202.48742676 297.20379639]
[214.91839600 305.60476685]
[226.88867188 314.65008545]
[238.36489868 324.31454468]
[249.31509399 334.57116699]
[259.70870972 345.39144897]
[269.51681519 356.74514771]
[278.71206665 368.60064697]
[287.26879883 380.92492676]
[295.16317749 393.68359375]
[302.37322998 406.84112549]
[308.87884521 420.36083984]
[314.66189575 434.20501709]
[319.70623779 448.33514404]
[323.99780273 462.71176147]
[327.52468872 477.29486084]
[330.27700806 492.04376221]
[332.24713135 506.91735840]
[333.42953491 521.87420654]
[333.82095337 536.87261963]
[333.42025757 551.87078857]
[332.22857666 566.82690430]
[330.24926758 581.69927979]
[327.48782349 596.44647217]
[323.95190430 611.02740479]
[319.65142822 625.40136719]
[314.59832764 639.52832031]
[308.80673218 653.36895752]
[302.29275513 666.88464355]
[295.07458496 680.03771973]
[287.17227173 692.79150391]
[278.60791016 705.11047363]
[269.40533447 716.96026611]
[259.59020996 728.30792236]
[249.18989563 739.12170410]
[238.23335266 749.37158203]
[226.75114441 759.02893066]
[214.77526855 768.06683350]
[202.33911133 776.46014404]
[189.47731018 784.18536377]
[176.22573853 791.22106934]
[162.62132263 797.54766846]
[148.70198059 803.14739990]
[134.50650024 808.00476074]
[120.07445526 812.10614014]
[105.44606781 815.44018555]
[90.66211700 817.99755859]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 156]
[64 155]
[65 154]
[67 151]
[69 149]
[70 148]
[71 147]
[72 146]
[73 144]
[74 142]
[75 141]
[76 140]
[77 139]
[81 134]
[82 133]
[84 131]
[85 130]
[89 129]
[90 128]
[91 127]
[92 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
