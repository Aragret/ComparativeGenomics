%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[29.52833748 529.07696533]
[30.73265648 544.10406494]
[28.30507088 558.98254395]
[22.38671875 572.84747314]
[13.32168293 584.89276123]
[1.63699508 594.41809082]
[-11.98801422 600.86962891]
[-26.76120377 603.87237549]
[-41.82367706 603.25164795]
[-56.29972839 599.04364014]
[-69.34773254 591.49291992]
[-80.20909882 581.03857422]
[-88.25236511 568.28826904]
[-93.00989532 553.98339844]
[-94.20510101 538.95562744]
[-91.76850128 524.07855225]
[-85.84174347 510.21722412]
[-76.76940918 498.17745972]
[-65.07894135 488.65924072]
[-51.45002747 482.21594238]
[-36.67501831 479.22216797]
[-21.61292267 479.85198975]
[-17.42591286 465.44821167]
[-13.23890114 451.04443359]
[-9.05188942 436.64065552]
[-4.86487818 422.23687744]
[-8.74202251 407.85574341]
[2.53983545 396.76382446]
[6.72684669 382.36004639]
[10.91385746 367.95626831]
[-1.70192409 360.90292358]
[-12.43255234 351.20864868]
[-20.73527908 339.35928345]
[-26.18914986 325.94976807]
[-28.51635170 311.65423584]
[-27.59635353 297.19226074]
[-23.47214890 283.29244995]
[-16.34826088 270.65594482]
[-6.58059740 259.92083740]
[5.34132385 251.63014221]
[18.81891060 246.20420837]
[33.17455292 243.91944885]
[47.68568420 244.89424133]
[52.08668137 230.55439758]
[56.48767853 216.21455383]
[60.88867569 201.87471008]
[65.28967285 187.53486633]
[69.69067383 173.19500732]
[74.09167480 158.85516357]
[78.49266815 144.51531982]
[71.30907440 131.51795959]
[75.56803131 116.91261292]
[89.24957275 109.46591949]
[86.30645752 95.79735565]
[96.41058350 86.13307953]
[85.15403748 96.04721832]
[70.86276245 100.60347748]
[55.94509125 99.03404236]
[42.91491318 91.60340118]
[33.96804428 79.56373596]
[30.61218452 64.94394684]
[33.41286087 50.20772552]
[41.89810181 37.83838272]
[54.63800430 29.92037201]
[69.48566437 27.78801537]
[83.93899536 31.80065155]
[95.56235504 41.28208542]
[102.39700317 54.63452148]
[103.29093170 69.60948944]
[110.36804199 56.38396072]
[117.44514465 43.15843201]
[124.52224731 29.93290520]
[131.59934998 16.70737648]
[131.28837585 0.88922685]
[144.11518860 -6.68191957]
[151.19229126 -19.90744781]
[139.30242920 -30.87636757]
[130.64930725 -44.53150177]
[125.81367493 -59.94607544]
[125.11739349 -76.07558441]
[128.60203552 -91.82858276]
[136.02645874 -106.14051819]
[146.88345337 -118.04569244]
[160.43443298 -126.74241638]
[175.75964355 -131.64698792]
[191.82058716 -132.43284607]
[207.53042603 -129.05238342]
[214.21061707 -142.48275757]
[220.89082336 -155.91313171]
[227.57101440 -169.34350586]
[226.78921509 -185.14538574]
[239.38491821 -193.09507751]
[246.06510925 -206.52545166]
[252.74530029 -219.95584106]
[259.42550659 -233.38621521]
[246.86396790 -241.61691284]
[235.36410522 -251.27555847]
[225.08735657 -262.22656250]
[216.17797852 -274.31622314]
[208.76103210 -287.37475586]
[202.94067383 -301.21887207]
[198.79859924 -315.65423584]
[196.39294434 -330.47817993]
[195.75747681 -345.48257446]
[196.90115356 -360.45684814]
[199.80787659 -375.19073486]
[204.43685913 -389.47738647]
[210.72312927 -403.11627197]
[218.57841492 -415.91592407]
[227.89245605 -427.69662476]
[238.53448486 -438.29302979]
[250.35511780 -447.55633545]
[263.18841553 -455.35653687]
[276.85418701 -461.58410645]
[291.16061401 -466.15164185]
[305.90686035 -468.99502563]
[320.88589478 -470.07431030]
[335.88745117 -469.37435913]
[350.70089722 -466.90499878]
[365.11831665 -462.70092773]
[378.93731689 -456.82110596]
[391.96383667 -449.34811401]
[404.01507568 -440.38684082]
[414.92181396 -430.06311035]
[424.53094482 -418.52185059]
[432.70758057 -405.92504883]
[439.33691406 -392.44958496]
[444.32589722 -378.28460693]
[447.60449219 -363.62899780]
[449.12667847 -348.68847656]
[448.87106323 -333.67276001]
[446.84124756 -318.79272461]
[443.06573486 -304.25717163]
[437.59750366 -290.27020264]
[430.51336670 -277.02819824]
[421.91271973 -264.71701050]
[411.91635132 -253.50947571]
[400.66455078 -243.56294250]
[388.31530762 -235.01705933]
[375.04196167 -227.99176025]
[361.03085327 -222.58569336]
[346.47869873 -218.87475586]
[331.58978271 -216.91102600]
[316.57308960 -216.72207642]
[301.63946533 -218.31056213]
[286.99856567 -221.65419006]
[272.85586548 -226.70600891]
[266.17568970 -213.27563477]
[259.49548340 -199.84526062]
[252.81529236 -186.41488647]
[254.07490540 -171.57363892]
[241.00138855 -162.66331482]
[234.32119751 -149.23294067]
[227.64099121 -135.80256653]
[220.96080017 -122.37219238]
[231.64190674 -113.49462891]
[240.07466125 -102.44910431]
[245.83009338 -89.79175568]
[248.61408997 -76.16088104]
[248.28251648 -62.24470520]
[244.84863281 -48.74667358]
[238.48258972 -36.34988022]
[229.50303650 -25.68248749]
[218.36111450 -17.28591347]
[205.61788940 -11.58733845]
[191.91598511 -8.87798691]
[177.94725037 -9.29823303]
[164.41783142 -12.83034134]
[157.34071350 0.39518592]
[158.15789795 15.26735783]
[144.82489014 23.78448296]
[137.74777222 37.01000977]
[130.67066956 50.23553848]
[123.59356689 63.46106339]
[116.51646423 76.68659210]
[110.75042725 90.53408051]
[113.69354248 104.20264435]
[103.58941650 113.86692047]
[110.73804474 127.70653534]
[106.07052612 142.18647766]
[92.83251953 148.91632080]
[88.43151855 163.25616455]
[84.03051758 177.59600830]
[79.62952423 191.93585205]
[75.22852325 206.27571106]
[70.82752991 220.61555481]
[66.42652893 234.95539856]
[62.02553177 249.29524231]
[75.42414093 257.26568604]
[86.52515411 268.19940186]
[94.68896484 281.46060181]
[99.44659424 296.27951050]
[100.52665710 311.79714966]
[97.87078094 327.11505127]
[91.63680267 341.34735107]
[82.18936920 353.67193604]
[70.07859802 363.37802124]
[56.00807953 369.90701294]
[40.79396057 372.88488770]
[25.31764030 372.14328003]
[21.13062859 386.54705811]
[16.94361687 400.95083618]
[20.52127838 416.36224365]
[9.53890324 426.42388916]
[5.35189247 440.82766724]
[1.16488123 455.23144531]
[-3.02213001 469.63522339]
[-7.20914125 484.03900146]
[5.84343910 491.58178711]
[16.71114159 502.02960205]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 208]
[23 207]
[24 206]
[25 205]
[26 204]
[28 202]
[29 201]
[30 200]
[43 188]
[44 187]
[45 186]
[46 185]
[47 184]
[48 183]
[49 182]
[50 181]
[53 178]
[55 176]
[69 175]
[70 174]
[71 173]
[72 172]
[73 171]
[75 169]
[76 168]
[87 155]
[88 154]
[89 153]
[90 152]
[92 150]
[93 149]
[94 148]
[95 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
