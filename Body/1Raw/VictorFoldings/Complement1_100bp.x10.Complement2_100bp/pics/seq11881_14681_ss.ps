%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGGxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[193.63746643 528.33758545]
[200.61045837 515.00439453]
[209.98097229 503.23193359]
[221.41026306 493.44586182]
[234.48518372 485.99984741]
[229.65917969 471.79739380]
[224.83319092 457.59494019]
[220.00718689 443.39248657]
[205.76321411 443.93551636]
[191.92822266 440.43792725]
[179.62623596 433.17462158]
[169.85931396 422.72680664]
[163.42597961 409.93551636]
[160.85586548 395.83389282]
[162.36622620 381.56375122]
[167.84350586 368.28314209]
[176.85186768 357.07235718]
[188.66786194 348.84600830]
[184.05386353 334.57327271]
[179.43984985 320.30053711]
[168.16276550 310.57034302]
[171.27998352 295.05926514]
[166.66598511 280.78652954]
[155.38890076 271.05633545]
[158.50611877 255.54524231]
[153.89212036 241.27250671]
[149.27810669 226.99978638]
[143.82275391 213.02697754]
[137.54537964 199.40367126]
[125.19196320 191.08247375]
[126.44389343 175.31088257]
[120.16653442 161.68756104]
[113.88917542 148.06425476]
[99.78761292 150.03034973]
[85.70324707 147.94459534]
[72.77674866 141.97589111]
[62.05500793 132.60765076]
[54.40636063 120.59857941]
[50.45025253 106.92126465]
[50.50708389 92.68341064]
[54.57225037 79.03811646]
[62.31652069 67.09047699]
[73.11270142 57.80812454]
[67.03887177 44.09285736]
[60.96503448 30.37759018]
[55.85791779 26.17891502]
[53.92762756 20.83372879]
[54.92131424 16.16236496]
[49.25852585 2.27233839]
[43.59574127 -11.61768818]
[37.93295288 -25.50771523]
[32.27016830 -39.39774323]
[26.60737991 -53.28776932]
[20.94459343 -67.17779541]
[6.14035368 -78.12841034]
[9.20451641 -95.40781403]
[3.33555603 -109.21199036]
[-9.18442631 -118.88466644]
[-7.04367924 -133.62463379]
[-12.91264057 -147.42880249]
[-25.43262291 -157.10148621]
[-23.29187584 -171.84144592]
[-29.16083717 -185.64561462]
[-35.02979660 -199.44979858]
[-40.89875793 -213.25396729]
[-46.76771927 -227.05815125]
[-52.63668060 -240.86231995]
[-53.48921204 -225.88656616]
[-57.29861069 -211.37835693]
[-63.91315460 -197.91552734]
[-73.06938171 -186.03430176]
[-84.40261841 -176.20791626]
[-97.46144104 -168.82774353]
[-111.72574615 -164.18772888]
[-126.62738037 -162.47268677]
[-141.57281494 -163.75094604]
[-155.96678162 -167.97155762]
[-169.23597717 -174.96644592]
[-180.85189819 -184.45698547]
[-190.35188293 -196.06518555]
[-197.35754395 -209.32870483]
[-201.58985901 -223.71923828]
[-202.88024902 -238.66363525]
[-201.17730713 -253.56665039]
[-196.54888916 -267.83471680]
[-189.17933655 -280.89953613]
[-179.36215210 -292.24075317]
[-167.48837280 -301.40661621]
[-154.03091431 -308.03210449]
[-139.52580261 -311.85330200]
[-124.55074310 -312.71798706]
[-109.70220184 -310.59176636]
[-95.57158661 -305.55929565]
[-82.72172546 -297.82101440]
[-71.66440582 -287.68515015]
[-62.84004211 -275.55538940]
[-56.60146332 -261.91885376]
[-56.15485764 -276.91220093]
[-55.70825195 -291.90554810]
[-69.58697510 -298.10632324]
[-80.03267670 -309.14968872]
[-85.45246124 -323.35159302]
[-85.01985931 -338.54638672]
[-78.80084229 -352.41693115]
[-67.74375153 -362.84808350]
[-53.53472137 -368.24920654]
[-38.34052277 -367.79660034]
[-24.47816658 -361.55935669]
[-14.06155491 -350.48855591]
[-8.67914772 -336.27243042]
[-9.15172291 -321.07882690]
[-15.40721703 -307.22470093]
[-26.49171066 -296.82266235]
[-40.71490097 -291.45895386]
[-41.16150665 -276.46560669]
[-41.60811234 -261.47225952]
[-38.83250427 -246.73129272]
[-32.96354294 -232.92710876]
[-27.09458160 -219.12294006]
[-21.22562027 -205.31875610]
[-15.35665894 -191.51457214]
[-9.48769855 -177.71040344]
[2.61249614 -169.02510071]
[0.89153671 -153.29776001]
[6.76049757 -139.49359131]
[18.86069298 -130.80828857]
[17.13973236 -115.08095551]
[23.00869370 -101.27677917]
[34.10597992 -96.46254730]
[39.10848236 -85.01009369]
[34.83462143 -72.84058380]
[40.49740601 -58.95055771]
[46.16019440 -45.06052780]
[51.82297897 -31.17050171]
[57.48576736 -17.28047562]
[63.14855576 -3.39044809]
[68.81134033 10.49957848]
[74.68029785 24.30375481]
[80.75413513 38.01902390]
[86.82797241 51.73428726]
[102.37825012 50.02575684]
[117.69601440 53.20328522]
[131.28359985 60.95621109]
[141.81254578 72.52651215]
[148.25340271 86.78293610]
[149.97644043 102.33161926]
[146.81320190 117.65233612]
[139.07296753 131.24716187]
[127.51248932 141.78689575]
[133.78985596 155.41020203]
[140.06721497 169.03352356]
[152.86962891 178.32914734]
[151.16870117 193.12631226]
[157.44606018 206.74961853]
[161.68966675 192.36241150]
[173.50872803 183.12608337]
[188.49504089 182.48558044]
[201.05909729 190.67977905]
[206.51478577 204.65243530]
[202.82728577 219.19212341]
[191.37193298 228.87586975]
[176.42131042 230.09190369]
[163.55084229 222.38577271]
[168.16484070 236.65850830]
[172.77885437 250.93124390]
[184.38595581 261.68231201]
[180.93872070 276.17251587]
[185.55271912 290.44525146]
[197.15982056 301.19631958]
[193.71258545 315.68652344]
[198.32658386 329.95925903]
[202.94059753 344.23199463]
[218.75889587 344.18591309]
[233.79870605 349.02432251]
[246.59147644 358.26217651]
[255.89195251 370.98541260]
[260.79940796 385.94149780]
[260.84484863 401.66262817]
[256.03588867 416.60983276]
[246.85464478 429.32363892]
[234.20964050 438.56646729]
[239.03564453 452.76892090]
[243.86163330 466.97137451]
[248.68763733 481.17385864]
[263.59222412 479.11239624]
[278.61758423 479.90921021]
[293.22058105 483.53543091]
[306.87329102 489.86001587]
[319.08218384 498.65429688]
[329.40591431 509.60040283]
[337.47128296 522.30261230]
[342.98675537 536.30175781]
[345.75292969 551.09179688]
[345.66983032 566.13800049]
[342.74041748 580.89660645]
[337.07064819 594.83392334]
[328.86544800 607.44628906]
[318.42141724 618.27764893]
[306.11611938 626.93652344]
[292.39437866 633.10992432]
[277.75222778 636.57458496]
[262.71899414 637.20538330]
[247.83807373 634.97937012]
[233.64743042 629.97717285]
[220.66004944 622.37951660]
[209.34539795 612.46105957]
[200.11251831 600.58038330]
[193.29515076 587.16699219]
[189.13975525 572.70568848]
[187.79653931 557.71929932]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 184]
[6 183]
[7 182]
[8 181]
[18 172]
[19 171]
[20 170]
[22 168]
[23 167]
[25 165]
[26 164]
[27 163]
[28 154]
[29 153]
[31 151]
[32 150]
[33 149]
[43 140]
[44 139]
[45 138]
[48 137]
[49 136]
[50 135]
[51 134]
[52 133]
[53 132]
[54 131]
[56 128]
[57 127]
[59 125]
[60 124]
[62 122]
[63 121]
[64 120]
[65 119]
[66 118]
[67 117]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
