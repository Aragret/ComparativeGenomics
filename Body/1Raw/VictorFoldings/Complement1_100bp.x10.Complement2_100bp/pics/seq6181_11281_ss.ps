%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[53.02703857 928.47180176]
[38.02367783 928.62207031]
[23.03620720 927.91558838]
[8.11351109 926.35461426]
[-6.69573450 923.94433594]
[-21.34322548 920.69244385]
[-35.78118134 916.60974121]
[-49.96251297 911.70941162]
[-63.84096146 906.00744629]
[-77.37125397 899.52252197]
[-90.50926208 892.27569580]
[-103.21213531 884.29071045]
[-115.43843079 875.59350586]
[-127.14827728 866.21252441]
[-138.30346680 856.17828369]
[-148.86763000 845.52362061]
[-158.80630493 834.28326416]
[-168.08705139 822.49383545]
[-176.67962646 810.19378662]
[-184.55599976 797.42321777]
[-191.69046021 784.22387695]
[-198.05973816 770.63873291]
[-203.64308167 756.71215820]
[-208.42225647 742.48956299]
[-212.38169861 728.01727295]
[-215.50846863 713.34259033]
[-217.79237366 698.51330566]
[-219.22596741 683.57788086]
[-219.80456543 668.58489990]
[-219.52629089 653.58337402]
[-218.39205933 638.62219238]
[-216.40554810 623.75018311]
[-213.57325745 609.01580811]
[-209.90440369 594.46716309]
[-205.41098022 580.15167236]
[-200.10762024 566.11608887]
[-194.01164246 552.40618896]
[-187.14291382 539.06658936]
[-179.52384949 526.14093018]
[-171.17929077 513.67126465]
[-162.13645935 501.69836426]
[-152.42486572 490.26123047]
[-142.07617188 479.39715576]
[-131.12414551 469.14160156]
[-119.60449219 459.52801514]
[-107.55479431 450.58773804]
[-95.01436615 442.34997559]
[-82.02410126 434.84155273]
[-68.62637329 428.08697510]
[-54.86487961 422.10827637]
[-40.78451538 416.92495728]
[-26.43120766 412.55392456]
[-11.85176849 409.00942993]
[2.90624332 406.30303955]
[17.79469109 404.44360352]
[32.76501083 403.43713379]
[47.76837540 403.28698730]
[62.75584030 403.99359131]
[64.31636047 389.07498169]
[65.87688446 374.15637207]
[67.43740845 359.23776245]
[53.58345032 353.59460449]
[41.86914444 344.26690674]
[33.24916458 332.00387573]
[28.42909050 317.79446411]
[27.80764961 302.78744507]
[31.44374275 288.19873047]
[39.05098724 275.21264648]
[50.02025223 264.88598633]
[63.46841049 258.06182861]
[78.30947113 255.30082703]
[79.86999512 240.38223267]
[81.43051147 225.46362305]
[82.99103546 210.54501343]
[84.55155945 195.62641907]
[70.88694000 184.43937683]
[66.63572693 167.13682556]
[73.68344116 150.60174561]
[89.38182068 141.52877808]
[90.49746704 126.57032776]
[91.61312103 111.61187744]
[85.71572876 98.93463135]
[93.42842865 87.27247620]
[94.43268585 72.30612946]
[95.32550049 57.33272552]
[96.21832275 42.35932159]
[93.60524750 33.60662460]
[97.23753357 27.17014503]
[98.35317993 12.21169090]
[99.35743713 -2.75465345]
[100.25025940 -17.72805977]
[101.14307404 -32.70146561]
[102.03588867 -47.67486954]
[102.92870331 -62.64827728]
[103.82151794 -77.62168121]
[89.42250824 -82.08619690]
[76.51069641 -89.86749268]
[65.83676147 -100.51316833]
[58.02126694 -113.40431213]
[53.51860428 -127.79144287]
[52.59054184 -142.83810425]
[55.29104614 -157.66950989]
[61.46310806 -171.42338562]
[70.74789429 -183.30009460]
[82.60559845 -192.60914612]
[96.34682465 -198.80931091]
[111.17268372 -201.54013062]
[126.22121429 -200.64283752]
[140.61750793 -196.16960144]
[153.52461243 -188.38047791]
[164.19209290 -177.72831726]
[171.99975586 -164.83244324]
[176.49369812 -150.44259644]
[177.41264343 -135.39537048]
[174.70314026 -120.56559753]
[168.52275085 -106.81546783]
[159.23075867 -94.94438934]
[147.36741638 -85.64253235]
[133.62243652 -79.45069885]
[118.79492950 -76.72886658]
[117.90210724 -61.75545883]
[117.00929260 -46.78205490]
[116.11647797 -31.80864906]
[115.22366333 -16.83524323]
[114.33084869 -1.86183751]
[117.07064819 5.00221920]
[113.31163788 13.32733917]
[112.19598389 28.28579330]
[111.19172668 43.25213623]
[110.29891205 58.22554398]
[109.40609741 73.19895172]
[112.14589691 80.06300354]
[108.38687897 88.38812256]
[114.28427124 101.06536865]
[106.57157135 112.72752380]
[105.45592499 127.68597412]
[104.34027100 142.64442444]
[114.86090851 149.39602661]
[121.47431183 159.91891479]
[122.97740173 172.18351746]
[119.14584351 183.85485840]
[110.76506805 192.73716736]
[99.47016907 197.18693542]
[97.90964508 212.10554504]
[96.34912109 227.02415466]
[94.78859711 241.94274902]
[93.22807312 256.86135864]
[107.17651367 262.63378906]
[118.92137146 272.09320068]
[127.51618195 284.46633911]
[132.27140808 298.74554443]
[132.80979919 313.77093506]
[129.09625244 328.32449341]
[121.44000244 341.22885132]
[110.46889496 351.44259644]
[97.07788086 358.14422607]
[82.35601044 360.79827881]
[80.79549408 375.71688843]
[79.23497009 390.63549805]
[77.67444611 405.55410767]
[92.48371124 407.96432495]
[107.13122559 411.21603394]
[121.56921387 415.29867554]
[135.75057983 420.19888306]
[149.62907410 425.90072632]
[163.15942383 432.38555908]
[176.29748535 439.63226318]
[189.00042725 447.61718750]
[201.22679138 456.31427002]
[212.93670654 465.69519043]
[224.09197998 475.72927856]
[234.65621948 486.38388062]
[244.59497070 497.62417603]
[253.87582397 509.41354370]
[262.46850586 521.71350098]
[270.34497070 534.48400879]
[277.47952271 547.68328857]
[283.84890747 561.26837158]
[289.43237305 575.19488525]
[294.21166992 589.41748047]
[298.17120361 603.88970947]
[301.29809570 618.56439209]
[303.58212280 633.39361572]
[305.01580811 648.32910156]
[305.59454346 663.32202148]
[305.31637573 678.32354736]
[304.18228149 693.28479004]
[302.19589233 708.15679932]
[299.36370850 722.89117432]
[295.69497681 737.43988037]
[291.20166016 751.75537109]
[285.89840698 765.79101562]
[279.80252075 779.50097656]
[272.93389893 792.84063721]
[265.31494141 805.76635742]
[256.97048950 818.23602295]
[247.92774963 830.20904541]
[238.21623230 841.64624023]
[227.86763000 852.51043701]
[216.91567993 862.76605225]
[205.39610291 872.37969971]
[193.34648132 881.32006836]
[180.80610657 889.55798340]
[167.81590271 897.06646729]
[154.41822815 903.82116699]
[140.65678406 909.79998779]
[126.57646179 914.98339844]
[112.22319031 919.35455322]
[97.64377594 922.89916992]
[82.88578796 925.60565186]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 160]
[59 159]
[60 158]
[61 157]
[71 147]
[72 146]
[73 145]
[74 144]
[75 143]
[79 137]
[80 136]
[81 135]
[83 133]
[84 131]
[85 130]
[86 129]
[88 128]
[89 127]
[90 125]
[91 124]
[92 123]
[93 122]
[94 121]
[95 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
