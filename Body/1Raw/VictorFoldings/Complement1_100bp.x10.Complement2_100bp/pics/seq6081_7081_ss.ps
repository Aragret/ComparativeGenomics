%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAG\
) } def
/len { sequence length } bind def

/coor [
[155.96075439 515.95269775]
[151.77374268 501.54888916]
[140.79136658 491.48724365]
[144.36903381 476.07586670]
[140.18202209 461.67208862]
[135.99501038 447.26831055]
[125.01263428 437.20666504]
[128.59030151 421.79525757]
[124.40328217 407.39147949]
[113.42090607 397.32983398]
[116.99857330 381.91845703]
[112.81156158 367.51464844]
[109.10169983 382.04864502]
[100.17395782 394.10250854]
[87.35270691 401.88809204]
[72.53990173 404.25048828]
[57.93294144 400.83923340]
[45.69867706 392.16036987]
[37.65198898 379.50134277]
[34.98655319 364.74008179]
[38.09777832 350.06628418]
[46.52412415 337.65673828]
[59.01559830 329.35232544]
[73.71916199 326.38497925]
[88.45362854 329.19485474]
[101.03323364 337.36514282]
[109.59109497 349.68206787]
[108.47544098 334.72363281]
[107.35979462 319.76516724]
[106.24414825 304.80673218]
[105.12849426 289.84826660]
[104.01284790 274.88980103]
[89.58374023 273.09307861]
[75.78030396 268.50646973]
[63.13669586 261.30535889]
[52.14258575 251.76643372]
[43.22420120 240.25692749]
[36.72779846 227.22053528]
[32.90622330 213.16024780]
[31.90906525 198.61904907]
[33.77680969 184.15885925]
[38.43919373 170.33883667]
[45.71784592 157.69378662]
[55.33311462 146.71347046]
[66.91481018 137.82354736]
[80.01644897 131.36921692]
[94.13247681 127.60167694]
[93.23966217 112.62827301]
[85.70145416 100.85257721]
[91.78693390 88.26454163]
[90.89411926 73.29113770]
[90.00129700 58.31773376]
[86.36665344 49.93756866]
[89.20834351 43.11506653]
[88.53855896 28.13002586]
[87.86877441 13.14498711]
[87.19898987 -1.84005129]
[86.52920532 -16.82509041]
[85.85942078 -31.81012917]
[74.96411896 -21.50030708]
[59.96665955 -21.77644157]
[49.45827103 -32.48035431]
[49.45862961 -47.48035431]
[59.96753311 -58.18376160]
[74.96500397 -58.45917892]
[85.85942078 -48.14970016]
[86.52920532 -63.13473892]
[87.19898987 -78.11977386]
[87.86877441 -93.10481262]
[79.68009949 -80.53717804]
[67.34891510 -71.99657440]
[52.70447922 -68.74995422]
[37.91920853 -71.27893829]
[25.18640900 -79.20836639]
[16.39491653 -91.36194611]
[12.84889317 -105.93678284]
[15.07437515 -120.77076721]
[22.74122238 -133.66337585]
[34.71210480 -142.70207214]
[49.21121216 -146.54600525]
[64.08769226 -144.62496948]
[77.13470459 -137.22392273]
[86.41679382 -125.44076538]
[90.55686951 -111.02537537]
[94.31317139 -125.54743195]
[98.06947327 -140.06948853]
[101.82577515 -154.59155273]
[105.58207703 -169.11361694]
[100.25136566 -186.73930359]
[113.03105927 -198.76620483]
[116.57073212 -213.34257507]
[120.11040497 -227.91894531]
[123.65007782 -242.49533081]
[127.18975067 -257.07171631]
[130.40303040 -271.72348022]
[133.28829956 -286.44338989]
[128.34996033 -301.47412109]
[138.39088440 -312.47546387]
[141.27616882 -327.19534302]
[127.55183411 -333.41943359]
[115.63318634 -342.64129639]
[106.16297913 -354.36358643]
[99.65193939 -367.95413208]
[96.45118713 -382.68002319]
[96.73334503 -397.74710083]
[100.48319244 -412.34283447]
[107.49849701 -425.68008423]
[117.40094757 -437.03958130]
[129.65649414 -445.80874634]
[143.60424805 -451.51464844]
[158.49198914 -453.84957886]
[173.51684570 -452.68759155]
[187.86856079 -448.09140015]
[200.77316284 -440.30886841]
[211.53471375 -429.75964355]
[219.57286072 -417.01269531]
[224.45410156 -402.75540161]
[225.91523743 -387.75668335]
[223.87742615 -372.82537842]
[218.45059204 -358.76669312]
[209.92738342 -346.33883667]
[198.76745605 -336.21200562]
[185.57264709 -328.93234253]
[171.05453491 -324.89239502]
[155.99604797 -324.31005859]
[153.11077881 -309.59017944]
[158.25549316 -295.61230469]
[148.00819397 -283.55810547]
[145.12290955 -268.83822632]
[146.77598572 -265.72378540]
[147.00268555 -261.65393066]
[145.37037659 -257.30780029]
[141.76612854 -253.53202820]
[138.22645569 -238.95565796]
[134.68678284 -224.37927246]
[131.14710999 -209.80290222]
[127.60743713 -195.22653198]
[133.63107300 -184.73641968]
[130.80140686 -172.56362915]
[120.10413361 -165.35731506]
[116.34783173 -150.83525085]
[112.59152985 -136.31318665]
[108.83522797 -121.79113007]
[105.07893372 -107.26907349]
[102.85381317 -92.43502808]
[102.18402863 -77.44998932]
[101.51424408 -62.46495438]
[100.84445953 -47.47991562]
[100.84445953 -32.47991562]
[101.51424408 -17.49487495]
[102.18402863 -2.50983644]
[102.85381317 12.47520256]
[103.52359772 27.46024132]
[104.19338226 42.44527817]
[104.97470856 57.42491913]
[105.86752319 72.39832306]
[106.76033783 87.37172699]
[114.29854584 99.14742279]
[108.21306610 111.73545837]
[109.10588074 126.70886230]
[124.42983246 128.98867798]
[138.94276428 134.39431763]
[152.01469421 142.68864441]
[163.07872009 153.50914001]
[171.65560913 166.38385010]
[177.37452698 180.75189209]
[179.98905945 195.98791504]
[179.38789368 211.42927551]
[175.59950256 226.40495300]
[168.79080200 240.26460266]
[159.25984192 252.40686035]
[147.42269897 262.30541992]
[133.79539490 269.53186035]
[118.97129822 273.77416992]
[120.08695221 288.73263550]
[121.20259857 303.69107056]
[122.31824493 318.64953613]
[123.43389893 333.60797119]
[124.54954529 348.56643677]
[127.21533966 363.32763672]
[131.40235901 377.73144531]
[142.68420410 388.82333374]
[138.80706787 403.20446777]
[142.99407959 417.60824585]
[154.27593994 428.70016479]
[150.39878845 443.08129883]
[154.58580017 457.48507690]
[158.77281189 471.88885498]
[170.05467224 482.98074341]
[166.17752075 497.36187744]
[170.36453247 511.76565552]
[185.47003174 511.79275513]
[199.95562744 516.07580566]
[212.64703369 524.26757812]
[222.51541138 535.70397949]
[228.76078796 549.45794678]
[230.87687683 564.41448975]
[228.69212341 579.36120605]
[222.38365173 593.08636475]
[212.46286011 604.47735596]
[199.73396301 612.61071777]
[185.22885132 616.82720947]
[170.12339783 616.78491211]
[155.64212036 612.48736572]
[142.95895386 604.28283691]
[133.10206604 592.83648682]
[126.87050629 579.07629395]
[124.76944733 564.11755371]
[126.96920776 549.17309570]
[133.29145813 535.45428467]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 191]
[2 190]
[4 188]
[5 187]
[6 186]
[8 184]
[9 183]
[11 181]
[12 180]
[27 179]
[28 178]
[29 177]
[30 176]
[31 175]
[32 174]
[47 160]
[48 159]
[50 157]
[51 156]
[52 155]
[54 154]
[55 153]
[56 152]
[57 151]
[58 150]
[59 149]
[66 148]
[67 147]
[68 146]
[69 145]
[84 144]
[85 143]
[86 142]
[87 141]
[88 140]
[90 137]
[91 136]
[92 135]
[93 134]
[94 133]
[95 129]
[96 128]
[98 126]
[99 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
