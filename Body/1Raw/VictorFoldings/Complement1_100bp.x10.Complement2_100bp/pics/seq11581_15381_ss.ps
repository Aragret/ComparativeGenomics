%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUUxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[58.61717987 857.03070068]
[43.66281509 858.26867676]
[28.65932274 858.51562500]
[13.67231655 857.77038574]
[-1.23267281 856.03631592]
[-15.99046707 853.32098389]
[-30.53653526 849.63616943]
[-44.80726624 844.99810791]
[-58.74026489 839.42700195]
[-72.27459717 832.94720459]
[-85.35108948 825.58709717]
[-97.91255188 817.37884521]
[-109.90406036 808.35833740]
[-121.27317810 798.56506348]
[-131.97019958 788.04174805]
[-141.94833374 776.83453369]
[-151.16394043 764.99230957]
[-159.57675171 752.56689453]
[-167.14996338 739.61267090]
[-173.85046387 726.18621826]
[-179.64894104 712.34631348]
[-184.52006531 698.15344238]
[-188.44250488 683.66961670]
[-191.39912415 668.95831299]
[-193.37699890 654.08367920]
[-194.36746216 639.11090088]
[-194.36621094 624.10534668]
[-193.37322998 609.13275146]
[-191.39285278 594.25848389]
[-188.43376160 579.54760742]
[-184.50889587 565.06445312]
[-179.63540649 550.87237549]
[-173.83459473 537.03344727]
[-167.13185120 523.60815430]
[-159.55647278 510.65518188]
[-151.14157104 498.23120117]
[-141.92396545 486.39053345]
[-131.94395447 475.18496704]
[-121.24517822 464.66345215]
[-109.87441254 454.87207031]
[-97.88139343 445.85357666]
[-85.31855011 437.64743042]
[-72.24082947 430.28952026]
[-58.70540619 423.81201172]
[-44.77147293 418.24325562]
[-30.49996376 413.60754395]
[-15.95327759 409.92520142]
[-1.19502795 407.21231079]
[13.71025181 405.48074341]
[28.69738388 404.73806763]
[43.70083237 404.98751831]
[58.65499115 406.22799683]
[60.88010788 391.39395142]
[63.10522461 376.55990601]
[65.33034515 361.72589111]
[67.55545807 346.89184570]
[58.52214813 337.70330811]
[56.39877319 324.79699707]
[62.18163300 312.84838867]
[73.96122742 306.31726074]
[76.40695953 291.51797485]
[78.85268402 276.71871948]
[71.79749298 260.65039062]
[83.59953308 246.51556396]
[85.82465363 231.68151855]
[87.27407074 216.75170898]
[87.94385529 201.76666260]
[88.61363983 186.78163147]
[89.28342438 171.79658508]
[89.95320892 156.81155396]
[90.62299347 141.82650757]
[91.29277802 126.84147644]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[92.94072723 72.47419739]
[92.04791260 57.50078964]
[83.50292969 44.18561554]
[90.46897125 31.02037811]
[89.57615662 16.04697227]
[88.68334198 1.07356596]
[85.04869080 -7.30659771]
[87.89038086 -14.12910175]
[87.22059631 -29.11414146]
[86.55081177 -44.09917831]
[85.88102722 -59.08421707]
[85.21124268 -74.06925964]
[76.86544800 -87.51017761]
[84.02673340 -100.57024384]
[83.35694885 -115.55528259]
[82.68716431 -130.54031372]
[67.88167572 -133.34999084]
[54.12347412 -139.49887085]
[42.15452194 -148.65533447]
[32.62028885 -160.32560730]
[26.03494453 -173.88031006]
[22.75362778 -188.58845520]
[22.95329666 -203.65686035]
[26.62318230 -218.27290344]
[33.56537247 -231.64836121]
[43.40548325 -243.06190491]
[55.61285019 -251.89801025]
[69.52914429 -257.68017578]
[84.40388489 -260.09655762]
[99.43488312 -259.01687622]
[113.81154633 -254.49931335]
[126.75855255 -246.78752136]
[137.57769775 -236.29739380]
[145.68550110 -223.59461975]
[150.64472961 -209.36427307]
[152.18794250 -194.37377930]
[150.23190308 -179.43153381]
[144.88211060 -165.34336853]
[136.42706299 -152.86903381]
[125.32273865 -142.68125916]
[112.16797638 -135.32945251]
[97.67220306 -131.21009827]
[98.34198761 -116.22506714]
[99.01177216 -101.24002838]
[107.30965424 -88.87094116]
[100.19628143 -74.73904419]
[100.86606598 -59.75400543]
[101.53585052 -44.76896667]
[102.20563507 -29.78392601]
[102.87541962 -14.79888725]
[103.65674591 0.18075010]
[104.54956055 15.15415573]
[105.44237518 30.12756157]
[113.92350006 42.37173462]
[107.02131653 56.60797501]
[107.91413116 71.58138275]
[117.80479431 60.30419540]
[132.61067200 57.89874649]
[145.56269836 65.46477509]
[150.73941040 79.54318237]
[145.77406311 93.69752502]
[132.93675232 101.45661926]
[118.09653473 99.27311707]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.27781677 127.51126099]
[105.60803223 142.49629211]
[104.93824768 157.48133850]
[104.26846313 172.46636963]
[103.59867859 187.45141602]
[102.92889404 202.43644714]
[102.25910950 217.42149353]
[113.26931763 207.23448181]
[128.24510193 206.38240051]
[140.33972168 215.25483704]
[144.02369690 229.79541016]
[137.61274719 243.35638428]
[124.03788757 249.73783875]
[109.50534821 246.02229309]
[100.65869141 233.90663147]
[98.43357849 248.74067688]
[105.45847321 259.55795288]
[103.29978180 271.86746216]
[93.65195465 279.16445923]
[91.20623016 293.96371460]
[88.76049805 308.76300049]
[99.20652008 322.79510498]
[96.32877350 339.70761108]
[82.38950348 349.11694336]
[80.16438293 363.95098877]
[77.93927002 378.78503418]
[75.71414948 393.61907959]
[73.48903656 408.45312500]
[88.14901733 411.65478516]
[102.56535339 415.81829834]
[116.67499542 420.92553711]
[130.41624451 426.95410156]
[143.72901917 433.87765503]
[156.55509949 441.66595459]
[168.83840942 450.28488159]
[180.52523804 459.69677734]
[191.56445312 469.86050415]
[201.90782166 480.73159790]
[211.51008606 492.26251221]
[220.32926941 504.40286255]
[228.32681274 517.09948730]
[235.46772766 530.29699707]
[241.72079468 543.93750000]
[247.05868530 557.96154785]
[251.45803833 572.30767822]
[254.89962769 586.91320801]
[257.36840820 601.71423340]
[258.85357666 616.64605713]
[259.34863281 631.64343262]
[258.85140991 646.64068604]
[257.36410522 661.57232666]
[254.89321899 676.37304688]
[251.44953918 690.97802734]
[247.04812622 705.32354736]
[241.70822144 719.34680176]
[235.45318604 732.98645020]
[228.31037903 746.18286133]
[220.31101990 758.87835693]
[211.49009705 771.01745605]
[201.88618469 782.54699707]
[191.54125977 793.41662598]
[180.50057983 803.57873535]
[168.81240845 812.98895264]
[156.52786255 821.60614014]
[143.70066833 829.39257812]
[130.38690186 836.31427002]
[116.64478302 842.34082031]
[102.53440857 847.44604492]
[88.11747742 851.60754395]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 169]
[53 168]
[54 167]
[55 166]
[56 165]
[60 162]
[61 161]
[62 160]
[64 157]
[65 156]
[66 148]
[67 147]
[68 146]
[69 145]
[70 144]
[71 143]
[72 142]
[73 141]
[75 139]
[76 131]
[77 130]
[79 128]
[80 127]
[81 126]
[83 125]
[84 124]
[85 123]
[86 122]
[87 121]
[89 119]
[90 118]
[91 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
