%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[199.09696960 490.90164185]
[210.00799561 480.52072144]
[222.89575195 472.72842407]
[218.06976318 458.52597046]
[213.24375916 444.32351685]
[208.41775513 430.12106323]
[203.59176636 415.91860962]
[199.77973938 413.04153442]
[197.73461914 407.73922729]
[198.84036255 401.22088623]
[194.43936157 386.88101196]
[190.03836060 372.54116821]
[185.07070923 367.06906128]
[185.68031311 357.95498657]
[181.49330139 343.55120850]
[169.44374084 338.98635864]
[162.11407471 328.15316772]
[162.36581421 314.88113403]
[170.33106995 304.01977539]
[166.35897827 289.55523682]
[162.38687134 275.09069824]
[158.41477966 260.62619019]
[153.16806030 246.57371521]
[146.68856812 233.04537964]
[140.20907593 219.51702881]
[133.72956848 205.98867798]
[127.25007629 192.46034241]
[121.25723267 206.21118164]
[107.34735107 211.82502747]
[93.48864746 206.08599854]
[87.62001801 192.28169250]
[93.10327911 178.31980896]
[106.79737091 172.19837952]
[120.85699463 177.42338562]
[115.61027527 163.37091064]
[103.90996552 154.15396118]
[106.33147430 138.51916504]
[101.08475494 124.46669769]
[95.83803558 110.41422272]
[89.69139099 124.09701538]
[76.24288940 130.74064636]
[61.64100266 127.30772400]
[52.56151581 115.36775208]
[53.15545273 100.37951660]
[63.15127182 89.19543457]
[77.97901917 86.92871857]
[90.86081696 94.61711884]
[87.10452271 80.09506226]
[83.34822083 65.57299805]
[79.48390961 51.07930756]
[75.51181793 36.61478424]
[71.53971863 22.15026093]
[68.40250397 36.81851959]
[61.13357925 49.93960190]
[50.36178589 60.37839890]
[37.01898956 67.23184967]
[22.25947571 69.90706635]
[7.36009073 68.17260742]
[-6.39021969 62.17853165]
[-17.80191612 52.44337845]
[-25.88777351 39.80934143]
[-29.94828415 25.36938667]
[-29.63217163 10.37271786]
[-24.96678543 -3.88330388]
[-16.35572624 -16.16539001]
[-4.54393721 -25.41102028]
[9.44674397 -30.82035065]
[24.40598297 -31.92542076]
[39.03965378 -28.63063431]
[52.08180237 -21.22101974]
[62.40414810 -10.33758545]
[69.11261749 3.07480168]
[69.33594513 -11.92353535]
[69.55927277 -26.92187309]
[69.00106049 -41.91148376]
[67.66282654 -56.85166931]
[66.32459259 -71.79185486]
[64.98635864 -86.73204041]
[63.64812088 -101.67222595]
[62.30988693 -116.61241150]
[53.37224960 -129.66726685]
[59.94322586 -143.03407288]
[58.60499191 -157.97425842]
[57.26675797 -172.91444397]
[55.92852402 -187.85462952]
[54.59029007 -202.79481506]
[53.25205612 -217.73500061]
[51.91382217 -232.67518616]
[50.57558823 -247.61537170]
[47.57131195 -251.88401794]
[46.60177994 -256.42419434]
[47.42969513 -260.41540527]
[49.52647400 -263.25015259]
[48.85668945 -278.23519897]
[39.88225174 -287.49923706]
[39.63288498 -299.99407959]
[47.69696045 -309.01058960]
[47.25035477 -324.00393677]
[33.28680038 -330.16690063]
[23.38661194 -341.78363037]
[19.51547623 -356.54769897]
[22.44200897 -371.52761841]
[31.58514786 -383.74914551]
[45.12951279 -390.78567505]
[60.38586426 -391.24011230]
[74.32504272 -385.02224731]
[84.17940521 -373.36657715]
[87.99237061 -358.58740234]
[85.00687408 -343.61911011]
[75.81567383 -331.43368530]
[62.24370575 -324.45053101]
[62.69031143 -309.45718384]
[72.70452118 -295.04598999]
[63.84172821 -278.90496826]
[64.51151276 -263.91995239]
[65.51576996 -248.95359802]
[66.85400391 -234.01341248]
[68.19223785 -219.07322693]
[69.53047180 -204.13304138]
[70.86870575 -189.19285583]
[72.20693970 -174.25267029]
[73.54517365 -159.31248474]
[74.88340759 -144.37229919]
[83.72532654 -132.38607788]
[77.25007629 -117.95064545]
[78.58831024 -103.01045990]
[79.92654419 -88.07027435]
[81.26477814 -73.13008881]
[82.60301208 -58.18990326]
[83.94124603 -43.24971771]
[93.49175262 -54.81638336]
[108.21944427 -57.66159058]
[121.39100647 -50.48455048]
[126.98458862 -36.56650925]
[122.44287109 -22.27060699]
[109.84226990 -14.13273811]
[94.94361115 -15.87342644]
[84.55760956 -26.69854546]
[84.33428192 -11.70020771]
[84.11095428 3.29812956]
[86.00424194 18.17816544]
[89.97634125 32.64268875]
[93.94844055 47.10721207]
[98.75096130 52.72482300]
[97.87027740 61.81669998]
[101.62657928 76.33876038]
[105.38288116 90.86081696]
[109.89051056 105.16750336]
[115.13722229 119.21997833]
[120.38394165 133.27244568]
[132.45953369 143.49452209]
[129.66275024 158.12419128]
[134.90946960 172.17666626]
[140.77842712 185.98083496]
[147.25791931 199.50918579]
[153.73741150 213.03753662]
[160.21691895 226.56587219]
[166.69641113 240.09422302]
[168.58244324 225.21327209]
[176.66551208 212.57745361]
[189.38491821 204.62654114]
[204.28472900 202.89575195]
[218.48803711 207.71926880]
[229.25238037 218.16574097]
[234.49935913 232.21810913]
[233.21586609 247.16310120]
[225.64970398 260.11505127]
[213.26177979 268.57315063]
[198.44403076 270.90429688]
[184.05751038 266.65832520]
[172.87930298 256.65408325]
[176.85139465 271.11862183]
[180.82350159 285.58312988]
[184.79559326 300.04766846]
[200.15519714 308.42034912]
[204.61929321 324.98498535]
[195.89707947 339.36419678]
[200.08409119 353.76797485]
[204.37821960 368.14016724]
[208.77920532 382.48004150]
[213.18020630 396.81988525]
[217.79421997 411.09262085]
[222.62022400 425.29507446]
[227.44621277 439.49752808]
[232.27221680 453.69998169]
[237.09820557 467.90243530]
[252.06536865 466.22961426]
[267.04214478 467.81387329]
[281.32809448 472.58105469]
[294.25497437 480.30825806]
[305.21823120 490.63400269]
[313.70504761 503.07537842]
[319.31851196 517.05047607]
[321.79605103 531.90563965]
[321.02178955 546.94610596]
[317.03195190 561.46832275]
[310.01315308 574.79309082]
[300.29364014 586.29724121]
[288.32806396 595.44268799]
[274.67602539 601.80163574]
[259.97607422 605.07666016]
[244.91578674 605.11468506]
[230.19952393 601.91381836]
[216.51559448 595.62377930]
[204.50402832 586.53881836]
[194.72662354 575.08386230]
[187.64068604 561.79461670]
[183.57765198 547.29272461]
[182.72753906 532.25634766]
[185.13012695 517.38891602]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 186]
[4 185]
[5 184]
[6 183]
[7 182]
[10 181]
[11 180]
[12 179]
[14 178]
[15 177]
[19 174]
[20 173]
[21 172]
[22 171]
[23 158]
[24 157]
[25 156]
[26 155]
[27 154]
[34 153]
[35 152]
[37 150]
[38 149]
[39 148]
[47 147]
[48 146]
[49 145]
[50 143]
[51 142]
[52 141]
[72 140]
[73 139]
[74 138]
[75 130]
[76 129]
[77 128]
[78 127]
[79 126]
[80 125]
[82 123]
[83 122]
[84 121]
[85 120]
[86 119]
[87 118]
[88 117]
[89 116]
[93 115]
[94 114]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
