%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[194.16806030 599.61230469]
[183.81855774 588.74822998]
[174.15063477 577.27337646]
[165.20024109 565.23046875]
[157.00068665 552.66430664]
[149.58247375 539.62164307]
[142.97317505 526.15100098]
[137.19740295 512.30249023]
[132.27664185 498.12762451]
[128.22920227 483.67913818]
[125.07011414 469.01077271]
[122.81115723 454.17709351]
[121.46072388 439.23330688]
[121.02383423 424.23495483]
[121.50212097 409.23788452]
[122.89379883 394.29788208]
[125.19369507 379.47048950]
[128.39324951 364.81088257]
[132.48056030 350.37362671]
[137.44042969 336.21240234]
[143.25440979 322.37988281]
[149.90084839 308.92752075]
[157.35504150 295.90539551]
[165.58926392 283.36193848]
[174.57286072 271.34378052]
[184.27241516 259.89566040]
[194.65187073 249.06018066]
[205.67257690 238.87760925]
[196.18368530 227.26034546]
[186.69477844 215.64308167]
[177.20588684 204.02581787]
[167.71699524 192.40855408]
[150.99589539 187.08201599]
[148.18989563 168.88290405]
[138.52909851 157.40820312]
[128.86828613 145.93350220]
[114.75234985 141.18063354]
[111.78317261 125.64054108]
[102.12236023 114.16584015]
[89.04246521 109.22539520]
[86.40293884 95.49497223]
[76.74212646 84.02027130]
[67.08131409 72.54557037]
[52.27437973 66.97195435]
[49.99620819 52.25260925]
[40.33539963 40.77790833]
[30.67458725 29.30320740]
[21.01377678 17.82850647]
[11.26781178 6.42604494]
[1.43723106 -4.90354824]
[-8.39334965 -16.23314095]
[-20.66964340 -7.59117222]
[-33.75725555 -0.23553292]
[-47.52188492 5.75829601]
[-61.82228470 10.32880783]
[-76.51171112 13.42910099]
[-91.43942261 15.02736187]
[-106.45223999 15.10719013]
[-121.39610291 13.66776657]
[-136.11766052 10.72386074]
[-150.46586609 6.30568361]
[-164.29345703 0.45857224]
[-177.45854187 -6.75747252]
[-189.82604980 -15.26840210]
[-201.26904297 -24.98688126]
[-211.67012024 -35.81317902]
[-220.92251587 -47.63620758]
[-228.93132019 -60.33463287]
[-235.61434937 -73.77815247]
[-240.90299988 -87.82881927]
[-244.74301147 -102.34244537]
[-247.09497070 -117.17009735]
[-247.93476868 -132.15962219]
[-247.25376892 -147.15719604]
[-245.05895996 -162.00892639]
[-241.37286377 -176.56240845]
[-236.23332214 -190.66828918]
[-229.69305420 -204.18183899]
[-221.81916809 -216.96435547]
[-212.69248962 -228.88470459]
[-202.40666199 -239.82055664]
[-191.06723022 -249.65966797]
[-178.79055786 -258.30111694]
[-165.70262146 -265.65615845]
[-151.93772888 -271.64938354]
[-137.63713074 -276.21926880]
[-122.94756317 -279.31890869]
[-108.01978302 -280.91653442]
[-93.00695801 -280.99569702]
[-78.06316376 -279.55560303]
[-63.34172821 -276.61105347]
[-48.99372482 -272.19226074]
[-35.16638947 -266.34451294]
[-22.00161362 -259.12789917]
[-9.63448715 -250.61642456]
[1.80808222 -240.89744568]
[12.20867538 -230.07069397]
[21.46056366 -218.24725342]
[29.46881104 -205.54847717]
[36.15123367 -192.10466003]
[41.43926620 -178.05375671]
[45.27864075 -163.53996277]
[47.62995911 -148.71221924]
[48.46908951 -133.72265625]
[47.78742981 -118.72511292]
[45.59196854 -103.87348175]
[41.90523529 -89.32015991]
[36.76506424 -75.21450043]
[30.22419930 -61.70124435]
[22.34976196 -48.91905975]
[13.22255611 -36.99911499]
[2.93624330 -26.06372261]
[12.76682377 -14.73412895]
[22.59740448 -3.40453601]
[29.35536957 -0.41259769]
[32.48847961 8.16769695]
[42.14928818 19.64239693]
[51.81009674 31.11709785]
[61.47090912 42.59179688]
[75.58683777 47.34466553]
[78.55601501 62.88476181]
[88.21682739 74.35945892]
[97.87763977 85.83415985]
[110.95753479 90.77460480]
[113.59706116 104.50502777]
[123.25787354 115.97972870]
[138.06480408 121.55334473]
[140.34298706 136.27268982]
[150.00378418 147.74739075]
[159.66459656 159.22209167]
[172.42524719 161.10054016]
[180.23553467 170.85673523]
[179.33425903 182.91966248]
[188.82315063 194.53692627]
[198.31204224 206.15419006]
[207.80094910 217.77145386]
[217.28984070 229.38871765]
[229.46771240 220.62283325]
[242.15731812 212.61569214]
[255.31149292 205.39703369]
[268.88125610 198.99375916]
[282.81616211 193.42964172]
[297.06436157 188.72541809]
[311.57284546 184.89857483]
[326.28762817 181.96333313]
[341.15402222 179.93063354]
[356.11666870 178.80802917]
[371.11990356 178.59970093]
[386.10794067 179.30642700]
[401.02502441 180.92556763]
[415.81564331 183.45109558]
[430.42480469 186.87362671]
[444.79812622 191.18043518]
[458.88214111 196.35548401]
[472.62448120 202.37951660]
[485.97399902 209.23014832]
[498.88104248 216.88188171]
[511.29760742 225.30624390]
[523.17749023 234.47189331]
[534.47650146 244.34475708]
[545.15258789 254.88807678]
[555.16607666 266.06265259]
[564.47967529 277.82690430]
[573.05877686 290.13708496]
[580.87139893 302.94735718]
[587.88854980 316.21011353]
[594.08410645 329.87597656]
[599.43499756 343.89416504]
[603.92132568 358.21246338]
[607.52636719 372.77761841]
[610.23681641 387.53549194]
[612.04248047 402.43112183]
[612.93670654 417.40914917]
[612.91613770 432.41384888]
[611.98083496 447.38934326]
[610.13433838 462.27999878]
[607.38348389 477.03036499]
[603.73852539 491.58560181]
[599.21295166 505.89157104]
[593.82366943 519.89501953]
[587.59069824 533.54382324]
[580.53717041 546.78729248]
[572.68945312 559.57611084]
[564.07666016 571.86273193]
[554.73083496 583.60144043]
[544.68676758 594.74847412]
[533.98181152 605.26251221]
[522.65582275 615.10437012]
[510.75082397 624.23742676]
[498.31121826 632.62774658]
[485.38327026 640.24401855]
[472.01501465 647.05804443]
[458.25619507 653.04443359]
[444.15805054 658.18084717]
[429.77297974 662.44824219]
[415.15451050 665.83068848]
[400.35702515 668.31567383]
[385.43554688 669.89392090]
[370.44564819 670.55957031]
[355.44302368 670.31005859]
[340.48352051 669.14648438]
[325.62277222 667.07305908]
[310.91607666 664.09747314]
[296.41812134 660.23089600]
[282.18289185 655.48760986]
[268.26327515 649.88531494]
[254.71110535 643.44488525]
[241.57678223 636.19018555]
[228.90916443 628.14825439]
[216.75537109 619.34906006]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 137]
[29 136]
[30 135]
[31 134]
[32 133]
[34 130]
[35 129]
[36 128]
[38 126]
[39 125]
[41 123]
[42 122]
[43 121]
[45 119]
[46 118]
[47 117]
[48 116]
[49 114]
[50 113]
[51 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
