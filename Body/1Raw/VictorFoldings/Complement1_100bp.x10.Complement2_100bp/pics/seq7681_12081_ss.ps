%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[79.00412750 727.09875488]
[64.21274567 724.40338135]
[50.06678772 719.31011963]
[36.95216751 711.95776367]
[25.22666168 702.54699707]
[15.21015263 691.33453369]
[7.17589426 678.62628174]
[1.34306908 664.76885986]
[-2.12919998 650.14031982]
[-3.14618659 635.13983154]
[-1.68014657 620.17651367]
[2.22892523 605.65863037]
[8.47438622 591.98223877]
[16.88585663 579.52038574]
[27.23386574 568.61309814]
[39.23611069 559.55798340]
[52.56515884 552.60192871]
[66.85739136 547.93481445]
[81.72290039 545.68395996]
[81.94622803 530.68560791]
[82.16955566 515.68725586]
[79.12599182 508.95239258]
[82.50952148 500.46771240]
[82.95612335 485.47436523]
[83.40273285 470.48101807]
[81.26397705 467.67779541]
[80.37673950 463.69937134]
[81.27856445 459.14526367]
[84.21894836 454.83233643]
[85.33460236 439.87387085]
[86.45024872 424.91543579]
[87.56589508 409.95697021]
[79.10529327 394.58215332]
[89.59922028 379.45077515]
[90.49204254 364.47735596]
[91.38485718 349.50396729]
[92.27767181 334.53054810]
[89.53787231 327.66650391]
[93.29688263 319.34136963]
[94.41252899 304.38290405]
[95.52818298 289.42446899]
[96.08639526 274.43484497]
[96.08639526 259.43484497]
[96.08639526 244.43486023]
[96.08639526 229.43486023]
[96.08639526 214.43486023]
[88.34909058 201.70758057]
[96.08639526 187.90740967]
[95.75141907 172.91114807]
[95.08163452 157.92611694]
[94.41184235 142.94107056]
[93.74205780 127.95603180]
[80.62849426 121.10559845]
[72.68161011 108.62596893]
[72.02098083 93.84565735]
[78.82279205 80.70680237]
[91.27290344 72.71375275]
[90.60311890 57.72871399]
[89.93332672 42.74367523]
[89.26354218 27.75863647]
[88.59375763 12.77359676]
[76.69931030 21.91263390]
[62.10213470 18.45973206]
[55.56273270 4.96024179]
[61.90170670 -8.63451481]
[76.44619751 -12.30298901]
[88.47378540 -3.34237838]
[88.92038727 -18.33572769]
[81.59739685 -32.36014938]
[89.71020508 -44.85141373]
[90.15681458 -59.84476089]
[87.28430176 -68.51577759]
[90.72333527 -75.05754852]
[91.39311981 -90.04258728]
[84.27974701 -104.17448425]
[92.57763672 -116.54357910]
[93.24742126 -131.52861023]
[93.91720581 -146.51365662]
[86.80383301 -160.64555359]
[95.10171509 -173.01463318]
[95.77149963 -187.99967957]
[96.44128418 -202.98471069]
[88.32913208 -213.01246643]
[89.19549561 -225.47975159]
[98.03182983 -233.74084473]
[98.92464447 -248.71426392]
[99.81745911 -263.68765259]
[100.71028137 -278.66107178]
[101.60309601 -293.63446045]
[101.93807220 -308.63073730]
[101.71474457 -323.62905884]
[101.49141693 -338.62741089]
[93.54950714 -352.31085205]
[101.09645844 -365.15191650]
[86.49771881 -368.99630737]
[73.47812653 -376.63781738]
[63.00381470 -387.50939941]
[55.85205841 -400.80432129]
[52.55356216 -415.53601074]
[53.35309601 -430.61126709]
[58.19132614 -444.91140747]
[66.70922852 -457.37527466]
[78.27471161 -467.07797241]
[92.02954102 -473.29946899]
[106.95302582 -475.57809448]
[121.93773651 -473.74481201]
[135.87171936 -467.93557739]
[147.72096252 -458.58154297]
[156.60617065 -446.37683105]
[161.86802673 -432.22708130]
[163.11605835 -417.18231201]
[160.25762939 -402.35894775]
[153.50488281 -388.85696411]
[143.35891724 -377.67834473]
[130.57260132 -369.65258789]
[116.09479523 -365.37524414]
[124.02072906 -352.76458740]
[116.48975372 -338.85073853]
[116.71308136 -323.85238647]
[116.93640900 -308.85406494]
[129.09768677 -317.63491821]
[143.58558655 -313.74893188]
[149.72015381 -300.06069946]
[142.97923279 -286.66070557]
[128.33195496 -283.42691040]
[116.57649994 -292.74166870]
[115.68368530 -277.76824951]
[114.79087067 -262.79486084]
[113.89805603 -247.82144165]
[113.00523376 -232.84803772]
[121.69380951 -217.60089111]
[111.42632294 -202.31492615]
[110.75653839 -187.32989502]
[110.08675385 -172.34484863]
[117.24803925 -159.28479004]
[108.90224457 -145.84387207]
[108.23246002 -130.85882568]
[107.56267548 -115.87378693]
[114.72395325 -102.81372070]
[106.37815857 -89.37280273]
[105.70837402 -74.38776398]
[105.15016174 -59.39815521]
[104.70355988 -44.40480804]
[112.05848694 -31.45280838]
[103.91373444 -17.88912201]
[103.46713257 -2.89577246]
[103.57879639 12.10381222]
[104.24858093 27.08885002]
[104.91836548 42.07389069]
[105.58815765 57.05892944]
[106.25794220 72.04396820]
[119.37150574 78.89440155]
[127.31838989 91.37403107]
[127.97901917 106.15434265]
[121.17720795 119.29319763]
[108.72709656 127.28624725]
[109.39688110 142.27128601]
[110.06667328 157.25633240]
[110.73645782 172.24136353]
[113.54712677 176.63990784]
[114.31295776 181.21885681]
[113.30766296 185.16909790]
[111.08639526 187.90740967]
[118.82369232 201.70758057]
[111.08639526 214.43486023]
[111.08639526 229.43486023]
[111.08639526 244.43486023]
[111.08639526 259.43484497]
[111.08639526 274.43484497]
[123.37705994 265.83605957]
[137.80549622 269.93731689]
[143.73559570 283.71533203]
[136.79589844 297.01348877]
[122.10210419 300.02883911]
[110.48663330 290.54010010]
[109.37098694 305.49856567]
[108.25534058 320.45703125]
[107.25107574 335.42337036]
[106.35826111 350.39675903]
[105.46544647 365.37017822]
[104.57263184 380.34356689]
[112.53458405 390.49099731]
[111.48269653 402.94400024]
[102.52435303 411.07263184]
[101.40869904 426.03106689]
[100.29305267 440.98953247]
[99.17740631 455.94799805]
[98.39608002 470.92761230]
[97.94947815 485.92095947]
[97.50286865 500.91433716]
[97.16789246 515.91058350]
[96.94456482 530.90893555]
[96.72123718 545.90728760]
[111.51313782 548.59973145]
[125.66007996 553.69030762]
[138.77610779 561.04010010]
[150.50343323 570.44860840]
[160.52209473 581.65917969]
[168.55880737 594.36590576]
[174.39430237 608.22216797]
[177.86938477 622.85003662]
[178.88926697 637.85034180]
[177.42610168 652.81396484]
[173.51983643 667.33258057]
[167.27700806 681.01019287]
[158.86793518 693.47363281]
[148.52203369 704.38293457]
[136.52153015 713.44036865]
[123.19381714 720.39898682]
[108.90248871 725.06884766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 193]
[20 192]
[21 191]
[23 190]
[24 189]
[25 188]
[29 187]
[30 186]
[31 185]
[32 184]
[34 181]
[35 180]
[36 179]
[37 178]
[39 177]
[40 176]
[41 175]
[42 169]
[43 168]
[44 167]
[45 166]
[46 165]
[48 163]
[49 159]
[50 158]
[51 157]
[52 156]
[57 151]
[58 150]
[59 149]
[60 148]
[61 147]
[67 146]
[68 145]
[70 143]
[71 142]
[73 141]
[74 140]
[76 138]
[77 137]
[78 136]
[80 134]
[81 133]
[82 132]
[85 130]
[86 129]
[87 128]
[88 127]
[89 126]
[90 120]
[91 119]
[92 118]
[94 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
