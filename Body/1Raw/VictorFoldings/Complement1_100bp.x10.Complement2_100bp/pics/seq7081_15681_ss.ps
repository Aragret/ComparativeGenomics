%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[87.47030640 748.89007568]
[79.48036194 735.92547607]
[77.46080017 720.83105469]
[81.76151276 706.22204590]
[91.63737488 694.62951660]
[105.37734222 688.06188965]
[104.93074036 673.06854248]
[104.48413086 658.07519531]
[104.03752899 643.08184814]
[103.59091949 628.08850098]
[103.14431763 613.09515381]
[102.69770813 598.10180664]
[102.13949585 583.11218262]
[101.46971130 568.12713623]
[100.79992676 553.14208984]
[100.01860809 538.16247559]
[99.12578583 523.18908691]
[90.64466858 510.94488525]
[97.54684448 496.70864868]
[96.65402985 481.73526001]
[93.73996735 477.95144653]
[93.17192841 472.29684448]
[95.96430206 466.30401611]
[95.51770020 451.31066895]
[95.07109070 436.31732178]
[94.62448120 421.32394409]
[94.17787933 406.33059692]
[93.73126984 391.33724976]
[93.28466797 376.34390259]
[92.83805847 361.35055542]
[84.72525024 348.85928345]
[92.04824066 334.83486938]
[83.46179199 326.31433105]
[82.96701050 313.82678223]
[91.37413025 304.04501343]
[83.44819641 291.43435669]
[90.97917175 277.52050781]
[90.75584412 262.52218628]
[90.53251648 247.52383423]
[87.79031372 243.61367798]
[87.47533417 237.93936157]
[90.53251648 232.07717896]
[90.75584412 217.07884216]
[90.97917175 202.08050537]
[91.20249939 187.08216858]
[91.42582703 172.08383179]
[91.64915466 157.08549500]
[91.87248230 142.08715820]
[92.09580994 127.08882141]
[92.31913757 112.09048462]
[85.67764282 99.78673553]
[92.68252563 87.68618774]
[77.85619354 77.24887085]
[72.31177521 60.15094757]
[78.08969116 43.29667282]
[92.69787598 33.37334442]
[92.47454834 18.37500763]
[92.25122070 3.37666941]
[84.30931854 -10.30677605]
[91.85626984 -23.14783478]
[91.63294220 -38.14617157]
[76.90744019 -41.30298615]
[63.26025772 -47.65459061]
[51.37448883 -56.87952423]
[41.84426117 -68.51258850]
[35.14504623 -81.96833038]
[31.60995483 -96.57045746]
[31.41315079 -111.58589172]
[34.56128693 -126.26152802]
[40.89333725 -139.86201477]
[50.08881760 -151.70661926]
[61.68400574 -161.20327759]
[75.09534454 -167.87818909]
[89.64877319 -171.39947510]
[89.42544556 -186.39781189]
[81.48354340 -200.08125305]
[89.03049469 -212.92231750]
[88.80716705 -227.92065430]
[80.86525726 -241.60409546]
[88.41221619 -254.44515991]
[88.18888855 -269.44348145]
[87.96556091 -284.44183350]
[87.74223328 -299.44015503]
[84.48539734 -307.97427368]
[87.62889862 -314.66308594]
[87.62889862 -329.66308594]
[87.62889862 -344.66308594]
[87.62889862 -359.66308594]
[78.05421448 -375.39224243]
[87.41493988 -390.23623657]
[87.19161224 -405.23455811]
[77.38380432 -420.81945801]
[86.52248383 -435.80114746]
[86.07588196 -450.79449463]
[85.62927246 -465.78784180]
[85.18267059 -480.78118896]
[70.78265381 -485.51568604]
[58.87226868 -494.89218140]
[50.88975525 -507.77841187]
[47.79904175 -522.61834717]
[49.97334671 -537.61993408]
[57.15010834 -550.97174072]
[68.46269989 -561.06134033]
[82.54507446 -566.67053223]
[97.69671631 -567.12182617]
[112.08798218 -562.36083984]
[123.98106384 -552.96240234]
[131.93981934 -540.06146240]
[135.00317383 -525.21588135]
[132.80122375 -510.21829224]
[125.59986877 -496.87979126]
[114.26870728 -486.81100464]
[100.17601776 -481.22781372]
[100.62262726 -466.23446655]
[101.06922913 -451.24108887]
[101.51583862 -436.24774170]
[110.10228729 -427.72723389]
[110.59706879 -415.23968506]
[102.18994904 -405.45788574]
[102.41327667 -390.45956421]
[110.87191772 -381.81213379]
[111.18072510 -369.31860352]
[102.62889862 -359.66308594]
[102.62889862 -344.66308594]
[102.62889862 -329.66308594]
[102.62889862 -314.66308594]
[102.74057007 -299.66348267]
[102.96389771 -284.66516113]
[103.18722534 -269.66680908]
[103.41055298 -254.66848755]
[111.33648682 -242.05781555]
[103.80550385 -228.14398193]
[104.02883148 -213.14564514]
[111.95476532 -200.53497314]
[104.42378998 -186.62113953]
[104.64711761 -171.62280273]
[119.29894257 -168.53639221]
[132.90306091 -162.26374817]
[144.77586365 -153.11653137]
[154.31993103 -141.55096436]
[161.05410767 -128.14503479]
[164.63780212 -113.56963348]
[164.88813782 -98.55499268]
[161.78938293 -83.85408020]
[155.49375916 -70.20484924]
[146.31411743 -58.29319000]
[134.70828247 -48.71846390]
[121.25626373 -41.96334839]
[106.63127899 -38.36949921]
[106.85460663 -23.37116241]
[114.78054047 -10.76049805]
[107.24955750 3.15334177]
[107.47288513 18.15167999]
[107.69621277 33.15001678]
[118.54908752 38.58972168]
[126.10400391 48.18431473]
[128.87901306 60.15094757]
[126.28772736 72.23253632]
[118.76189423 82.12345123]
[107.68086243 87.90951538]
[114.32235718 100.21326447]
[107.31747437 112.31381226]
[107.09414673 127.31214905]
[106.87081909 142.31048584]
[106.64749146 157.30882263]
[106.42416382 172.30715942]
[106.20083618 187.30549622]
[105.97750854 202.30383301]
[105.75418091 217.30216980]
[105.53085327 232.30050659]
[105.53085327 247.30050659]
[105.75418091 262.29885864]
[105.97750854 277.29718018]
[113.91941833 290.98062134]
[106.37246704 303.82168579]
[116.18027496 319.40655518]
[107.04158783 334.38827515]
[115.18634033 347.95196533]
[107.83141327 360.90396118]
[108.27801514 375.89730835]
[108.72462463 390.89065552]
[109.17122650 405.88400269]
[109.61783600 420.87734985]
[110.06443787 435.87069702]
[110.51104736 450.86404419]
[110.95764923 465.85739136]
[111.62744141 480.84243774]
[112.52025604 495.81585693]
[121.06523895 509.13101196]
[114.09919739 522.29626465]
[114.99201202 537.26965332]
[118.62666321 545.64984131]
[115.78496552 552.47235107]
[116.45475006 567.45739746]
[117.12453461 582.44238281]
[120.63401794 590.87573242]
[117.69105530 597.65521240]
[118.13766479 612.64855957]
[118.58427429 627.64190674]
[119.03087616 642.63525391]
[119.47748566 657.62860107]
[119.92408752 672.62194824]
[120.37069702 687.61529541]
[134.47721863 693.35339355]
[145.02557373 704.33758545]
[150.18820190 718.66473389]
[149.07064819 733.85260010]
[141.86653137 747.26977539]
[129.82402039 756.59167480]
[115.02954102 760.20318604]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 203]
[7 202]
[8 201]
[9 200]
[10 199]
[11 198]
[12 197]
[13 195]
[14 194]
[15 193]
[16 191]
[17 190]
[19 188]
[20 187]
[23 186]
[24 185]
[25 184]
[26 183]
[27 182]
[28 181]
[29 180]
[30 179]
[32 177]
[35 175]
[37 173]
[38 172]
[39 171]
[42 170]
[43 169]
[44 168]
[45 167]
[46 166]
[47 165]
[48 164]
[49 163]
[50 162]
[52 160]
[56 154]
[57 153]
[58 152]
[60 150]
[61 149]
[74 136]
[75 135]
[77 133]
[78 132]
[80 130]
[81 129]
[82 128]
[83 127]
[85 126]
[86 125]
[87 124]
[88 123]
[90 120]
[91 119]
[93 116]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
