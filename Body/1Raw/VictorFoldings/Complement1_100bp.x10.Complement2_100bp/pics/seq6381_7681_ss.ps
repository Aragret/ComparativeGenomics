%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxGAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUU\
) } def
/len { sequence length } bind def

/coor [
[9.68628597 281.05368042]
[13.12743568 295.66619873]
[15.11971951 310.54562378]
[15.64395237 325.54870605]
[14.69508457 340.53091431]
[12.28225422 355.34796143]
[8.42869949 369.85714722]
[3.17153215 383.91876221]
[-3.43861628 397.39736938]
[-11.33808517 410.16314697]
[-20.45079613 422.09317017]
[-30.68898582 433.07250977]
[-41.95405579 442.99548340]
[-54.13750839 451.76647949]
[-67.12201691 459.30102539]
[-80.78251648 465.52655029]
[-94.98745728 470.38314819]
[-109.60002899 473.82400513]
[-124.47950745 475.81600952]
[-139.48258972 476.33993530]
[-154.46476746 475.39074707]
[-169.28176880 472.97763062]
[-183.79089355 469.12377930]
[-197.85240173 463.86633301]
[-211.33087158 457.25592041]
[-224.09649658 449.35620117]
[-236.02633667 440.24325562]
[-247.00547791 430.00485229]
[-256.92822266 418.73956299]
[-265.69894409 406.55593872]
[-273.23324585 393.57128906]
[-279.45852661 379.91067505]
[-284.31481934 365.70562744]
[-287.75540161 351.09298706]
[-289.74707031 336.21347046]
[-290.27072144 321.21038818]
[-289.32125854 306.22821045]
[-286.90780640 291.41125488]
[-283.05368042 276.90222168]
[-277.79595947 262.84082031]
[-271.18527222 249.36247253]
[-263.28527832 236.59700012]
[-254.17210388 224.66734314]
[-243.93347168 213.68840027]
[-232.66801453 203.76589966]
[-220.48420715 194.99540710]
[-207.49938965 187.46136475]
[-193.83863831 181.23637390]
[-179.63351440 176.38035583]
[-165.02079773 172.94007874]
[-150.14125061 170.94868469]
[-135.13815308 170.42535400]
[-120.15599823 171.37512207]
[-105.33908844 173.78883362]
[-90.83012390 177.64326477]
[-76.76882172 182.90127563]
[-63.29061890 189.51223755]
[-50.52531052 197.41246033]
[-38.59584045 206.52589417]
[-27.61709785 216.76473999]
[-16.36100197 206.85009766]
[-5.10490704 196.93544006]
[6.15118885 187.02078247]
[17.40728378 177.10614014]
[28.66337967 167.19148254]
[39.30938721 156.62443542]
[49.30755997 145.44245911]
[59.30573273 134.26048279]
[69.30390167 123.07851410]
[79.30207825 111.89653778]
[76.25563049 97.52281189]
[82.20333099 84.08741760]
[94.89225769 76.67956543]
[109.51594543 78.10528564]
[119.51412201 66.92331696]
[129.51229858 55.74134064]
[139.51046753 44.55936432]
[149.50863647 33.37739182]
[159.50680542 22.19541550]
[169.50497437 11.01344109]
[168.80419922 -4.54762125]
[179.10305786 -15.74530602]
[193.94247437 -16.31749535]
[203.94064331 -27.49947166]
[213.93881226 -38.68144608]
[203.46891785 -49.43142319]
[193.76564026 -60.87812042]
[184.87519836 -72.96698761]
[176.83996582 -85.64041138]
[169.69822693 -98.83800507]
[163.48403931 -112.49686432]
[158.22700500 -126.55190277]
[153.95216370 -140.93614197]
[150.67991638 -155.58103943]
[148.42581177 -170.41680908]
[147.20063782 -185.37272644]
[147.01020813 -200.37753296]
[147.85543823 -215.35974121]
[149.73229980 -230.24792480]
[152.63185120 -244.97114563]
[156.54025269 -259.45925903]
[161.43891907 -273.64318848]
[167.30445862 -287.45535278]
[174.10896301 -300.82992554]
[181.81997681 -313.70318604]
[190.40075684 -326.01379395]
[199.81042480 -337.70303345]
[210.00413513 -348.71527100]
[220.93330383 -358.99798584]
[232.54583740 -368.50216675]
[244.78642273 -377.18252563]
[257.59671021 -384.99771118]
[270.91564941 -391.91049194]
[284.67977905 -397.88790894]
[298.82351685 -402.90145874]
[313.27941895 -406.92727661]
[327.97863770 -409.94616699]
[342.85110474 -411.94372559]
[357.82595825 -412.91049194]
[372.83181763 -412.84176636]
[387.79718018 -411.73797607]
[402.65075684 -409.60430908]
[417.32171631 -406.45095825]
[431.74014282 -402.29296875]
[445.83737183 -397.15011597]
[459.54620361 -391.04693604]
[472.80130005 -384.01251221]
[485.53948975 -376.08035278]
[497.70007324 -367.28826904]
[509.22512817 -357.67816162]
[520.05969238 -347.29580688]
[530.15209961 -336.19070435]
[539.45434570 -324.41580200]
[547.92205811 -312.02713013]
[555.51489258 -299.08380127]
[562.19665527 -285.64749146]
[567.93548584 -271.78219604]
[572.70410156 -257.55401611]
[576.47967529 -243.03073120]
[579.24432373 -228.28158569]
[580.98474121 -213.37683105]
[581.69281006 -198.38752747]
[581.36499023 -183.38508606]
[580.00292969 -168.44100952]
[577.61309814 -153.62651062]
[574.20684814 -139.01219177]
[569.80053711 -124.66768646]
[564.41503906 -110.66136932]
[558.07604980 -97.05997467]
[550.81378174 -83.92832947]
[542.66284180 -71.32900238]
[533.66204834 -59.32204437]
[523.85437012 -47.96467209]
[513.28649902 -37.31100464]
[502.00878906 -27.41181946]
[490.07498169 -18.31428528]
[477.54196167 -10.06175900]
[464.46948242 -2.69356656]
[450.91976929 3.75517797]
[436.95745850 9.25374317]
[422.64904785 13.77592564]
[408.06274414 17.30017662]
[393.26803589 19.80969810]
[378.33544922 21.29253387]
[363.33615112 21.74161530]
[348.34161377 21.15480232]
[333.42327881 19.53489494]
[318.65225220 16.88960838]
[304.09893799 13.23155117]
[289.83267212 8.57815456]
[275.92141724 2.95159554]
[262.43151855 -3.62131333]
[249.42723083 -11.10924816]
[236.97053528 -19.47652626]
[225.12078857 -28.68327332]
[215.12261963 -17.50129890]
[205.12445068 -6.31932402]
[206.20947266 8.49142647]
[196.22918701 19.97396660]
[180.68695068 21.01161385]
[170.68878174 32.19358826]
[160.69061279 43.37556076]
[150.69244385 54.55753708]
[140.69425964 65.73950958]
[130.69609070 76.92148590]
[120.69792175 88.10346222]
[123.74436951 102.47718811]
[117.79666901 115.91258240]
[105.10774231 123.32043457]
[90.48405457 121.89471436]
[80.48587799 133.07669067]
[70.48770905 144.25866699]
[60.48953629 155.44062805]
[50.49136353 166.62260437]
[65.37872314 164.78782654]
[78.55679321 171.95291138]
[85.11047363 185.44548035]
[82.59541321 200.23312378]
[71.94965363 210.80041504]
[57.14381027 213.20603943]
[43.70009232 206.55273438]
[36.63267517 193.32202148]
[38.57802963 178.44758606]
[27.32193565 188.36222839]
[16.06583977 198.27688599]
[4.80974436 208.19152832]
[-6.44635153 218.10618591]
[-17.70244789 228.02084351]
[-8.93121624 240.20411682]
[-1.39640689 253.18847656]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 208]
[61 207]
[62 206]
[63 205]
[64 204]
[65 203]
[66 194]
[67 193]
[68 192]
[69 191]
[70 190]
[74 186]
[75 185]
[76 184]
[77 183]
[78 182]
[79 181]
[80 180]
[83 177]
[84 176]
[85 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
