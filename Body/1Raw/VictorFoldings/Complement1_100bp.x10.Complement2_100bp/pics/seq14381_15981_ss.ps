%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUGxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[80.93915558 488.27651978]
[66.28694153 485.00677490]
[52.03309631 480.29440308]
[38.31929016 474.18618774]
[25.28182602 466.74285889]
[13.05027294 458.03839111]
[1.74620080 448.15930176]
[-8.51804447 437.20376587]
[-17.64044952 425.28067017]
[-25.53034782 412.50851440]
[-32.10932541 399.01422119]
[-37.31199265 384.93194580]
[-41.08664703 370.40161133]
[-43.39577103 355.56762695]
[-44.21641159 340.57745361]
[-43.54041672 325.58007812]
[-41.37450409 310.72451782]
[-37.74020004 296.15844727]
[-32.67362595 282.02664185]
[-26.22513199 268.46951294]
[-18.45881271 255.62182617]
[-9.45185566 243.61128235]
[0.70622474 232.55722046]
[11.91446781 222.56953430]
[24.06147957 213.74748230]
[37.02653503 206.17872620]
[50.68077469 199.93850708]
[64.88849640 195.08883667]
[79.50849152 191.67791748]
[94.39545441 189.73965454]
[93.94884491 174.74630737]
[93.50224304 159.75296021]
[90.16098785 153.16070557]
[93.16227722 144.53341675]
[92.93894958 129.53507996]
[92.71562195 114.53674316]
[84.86257172 105.93611145]
[84.77587128 94.28992462]
[92.50000000 85.57331848]
[92.50000000 70.57331848]
[92.50000000 55.57332230]
[92.50000000 40.57332230]
[82.92531586 24.84414864]
[92.28604126 10.00016785]
[92.06271362 -4.99816942]
[91.83938599 -19.99650764]
[91.61605835 -34.99484253]
[91.39273071 -49.99318314]
[91.16940308 -64.99151611]
[90.94607544 -79.98985291]
[90.72274780 -94.98819733]
[75.73226166 -95.62937927]
[60.80361557 -97.13314056]
[45.98640442 -99.49446869]
[31.32984161 -102.70552826]
[16.88261795 -106.75564575]
[2.69272900 -111.63137817]
[-11.19269085 -117.31652069]
[-24.72751427 -123.79218292]
[-37.86677933 -131.03686523]
[-50.56684113 -139.02648926]
[-62.78550720 -147.73452759]
[-74.48219299 -157.13204956]
[-85.61803436 -167.18782043]
[-96.15605164 -177.86846924]
[-106.06122589 -189.13847351]
[-115.30065918 -200.96043396]
[-123.84366608 -213.29504395]
[-131.66184998 -226.10136414]
[-138.72924805 -239.33682251]
[-145.02239990 -252.95747375]
[-150.52037048 -266.91806030]
[-155.20491028 -281.17221069]
[-159.06045532 -295.67257690]
[-162.07420349 -310.37097168]
[-164.23614502 -325.21859741]
[-165.53909302 -340.16610718]
[-165.97871399 -355.16384888]
[-165.55355835 -370.16201782]
[-164.26501465 -385.11077881]
[-162.11740112 -399.96047974]
[-159.11782837 -414.66177368]
[-155.27626038 -429.16583252]
[-150.60545349 -443.42449951]
[-145.12094116 -457.39038086]
[-138.84094238 -471.01708984]
[-131.78630066 -484.25936890]
[-123.98046875 -497.07321167]
[-115.44936371 -509.41607666]
[-106.22132874 -521.24688721]
[-96.32702637 -532.52648926]
[-85.79930878 -543.21728516]
[-74.67316437 -553.28375244]
[-62.98554993 -562.69256592]
[-50.77528381 -571.41235352]
[-38.08293152 -579.41424561]
[-24.95065880 -586.67156982]
[-11.42208481 -593.16027832]
[2.45784736 -598.85882568]
[16.64303017 -603.74822998]
[31.08633995 -607.81231689]
[45.73979950 -611.03747559]
[60.55472946 -613.41308594]
[75.48191833 -614.93121338]
[90.47177887 -615.58691406]
[105.47451019 -615.37786865]
[120.44028473 -614.30480957]
[135.31938171 -612.37133789]
[150.06236267 -609.58386230]
[164.62026978 -605.95166016]
[178.94474792 -601.48675537]
[192.98818970 -596.20397949]
[206.70394897 -590.12097168]
[220.04649353 -583.25781250]
[232.97145081 -575.63739014]
[245.43592834 -567.28503418]
[257.39849854 -558.22839355]
[268.81942749 -548.49761963]
[279.66076660 -538.12500000]
[289.88653564 -527.14501953]
[299.46273804 -515.59417725]
[308.35754395 -503.51080322]
[316.54144287 -490.93502808]
[323.98721313 -477.90869141]
[330.67016602 -464.47497559]
[336.56805420 -450.67858887]
[341.66131592 -436.56533813]
[345.93301392 -422.18206787]
[349.36895752 -407.57659912]
[351.95776367 -392.79742432]
[353.69082642 -377.89364624]
[354.56234741 -362.91479492]
[354.56945801 -347.91061401]
[353.71212769 -332.93093872]
[351.99322510 -318.02551270]
[349.41842651 -303.24389648]
[345.99630737 -288.63519287]
[341.73825073 -274.24786377]
[336.65838623 -260.12979126]
[330.77355957 -246.32780457]
[324.10336304 -232.88778687]
[316.66992188 -219.85437012]
[308.49795532 -207.27085876]
[299.61462402 -195.17906189]
[290.04937744 -183.61912537]
[279.83404541 -172.62947083]
[269.00253296 -162.24659729]
[257.59082031 -152.50498962]
[245.63684082 -143.43701172]
[233.18029785 -135.07279968]
[220.26255798 -127.44013214]
[206.92654419 -120.56435394]
[193.21653748 -114.46830750]
[179.17811584 -109.17225647]
[164.85787964 -104.69377899]
[150.30342102 -101.04776764]
[135.56307983 -98.24632263]
[120.68582916 -96.29874420]
[105.72108459 -95.21152496]
[105.94441223 -80.21318054]
[106.16773987 -65.21484375]
[106.39106750 -50.21651077]
[106.61439514 -35.21817017]
[106.83772278 -20.21983528]
[107.06105042 -5.22149706]
[107.28437805 9.77684021]
[115.74301910 18.42426491]
[116.05182648 30.91779900]
[107.50000000 40.57332230]
[107.50000000 55.57332230]
[107.50000000 70.57331848]
[107.50000000 85.57331848]
[116.25928497 99.87895203]
[107.71395874 114.31341553]
[107.93728638 129.31175232]
[108.16061401 144.31008911]
[108.49559021 159.30635071]
[108.94219971 174.29969788]
[109.38880157 189.29304504]
[124.36474609 190.34179688]
[139.16183472 192.87646484]
[153.63302612 196.87187195]
[167.63449097 202.28831482]
[181.02705383 209.07196045]
[193.67762756 217.15536499]
[205.46047974 226.45822144]
[216.25849915 236.88806152]
[225.96435547 248.34120178]
[234.48161316 260.70385742]
[241.72561646 273.85311890]
[247.62434387 287.65832520]
[252.11920166 301.98223877]
[255.16548157 316.68255615]
[256.73294067 331.61309814]
[256.80599976 346.62554932]
[255.38389587 361.57064819]
[252.48078918 376.29989624]
[248.12553406 390.66687012]
[242.36141968 404.52883911]
[235.24572754 417.74795532]
[226.84916687 430.19290161]
[217.25520325 441.73995972]
[206.55918884 452.27435303]
[194.86741638 461.69143677]
[182.29611206 469.89758301]
[168.97018433 476.81121826]
[155.02209473 482.36364746]
[140.59046936 486.49966431]
[125.81874084 489.17822266]
[110.85371399 490.37265015]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 179]
[31 178]
[32 177]
[34 176]
[35 175]
[36 174]
[39 172]
[40 171]
[41 170]
[42 169]
[44 166]
[45 165]
[46 164]
[47 163]
[48 162]
[49 161]
[50 160]
[51 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
