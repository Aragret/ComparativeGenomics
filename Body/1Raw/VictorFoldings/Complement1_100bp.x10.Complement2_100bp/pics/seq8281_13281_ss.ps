%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[102.72612000 504.21594238]
[115.69452667 496.33020020]
[113.02873230 481.56896973]
[110.36293030 466.80773926]
[107.69037628 464.50781250]
[105.99903870 460.79910278]
[105.93891144 456.15695190]
[107.92313385 451.32888794]
[105.91912079 436.46337891]
[103.91510773 421.59783936]
[101.91109467 406.73233032]
[99.90708160 391.86679077]
[90.53876495 380.28732300]
[96.36299133 365.57714844]
[94.35897827 350.71163940]
[91.79178619 348.29464722]
[90.26773834 344.51412964]
[90.41495514 339.87390137]
[92.61277771 335.13928223]
[91.27454376 320.19909668]
[89.93630981 305.25891113]
[88.59807587 290.31872559]
[79.04756927 301.88537598]
[64.31987762 304.73059082]
[51.14831161 297.55355835]
[45.55473328 283.63552856]
[50.09645081 269.33959961]
[62.69704819 261.20175171]
[77.59570312 262.94244385]
[87.98171234 273.76754761]
[88.20503998 258.76922607]
[88.42836761 243.77087402]
[88.65169525 228.77253723]
[88.87502289 213.77420044]
[89.09835052 198.77586365]
[81.55139923 185.93479919]
[89.49330902 172.25135803]
[86.86873627 168.26129150]
[86.72284698 162.58010864]
[89.95320892 156.81155396]
[90.62299347 141.82650757]
[91.29277802 126.84147644]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[93.72218323 72.48873901]
[94.39196777 57.50370407]
[86.80206299 70.44176483]
[75.62738800 80.44809723]
[61.93305206 86.56896973]
[47.02429962 88.22097015]
[32.32214355 85.24665070]
[19.22789764 77.92949677]
[8.98962307 66.96693420]
[2.58316708 53.40384674]
[0.61915201 38.53298187]
[3.28477502 23.77173233]
[10.32596588 10.52705002]
[21.07160378 0.06133094]
[34.49748230 -6.62789822]
[49.32393265 -8.90306282]
[64.13779449 -6.54730892]
[77.52709961 0.21482848]
[88.21566772 10.73882484]
[95.18473053 24.02160072]
[97.77006531 38.79825974]
[102.38407898 24.52552795]
[99.26685333 9.01445103]
[110.54393768 -0.71574831]
[115.15794373 -14.98848152]
[112.04072571 -30.49955940]
[123.31780243 -40.22975922]
[114.35114288 -52.75593948]
[114.47813416 -67.98213959]
[123.44051361 -80.07096863]
[137.63285828 -84.51118469]
[142.24685669 -98.78392029]
[146.86087036 -113.05665588]
[151.47488403 -127.32938385]
[156.08889771 -141.60212708]
[157.64941406 -156.52072144]
[156.08889771 -171.43933105]
[154.52836609 -186.35794067]
[150.96037292 -191.92399597]
[150.76786804 -197.60377502]
[153.15028381 -201.74299622]
[152.03463745 -216.70144653]
[150.91899109 -231.65989685]
[149.80334473 -246.61834717]
[134.89416504 -248.74691772]
[120.79130554 -254.03117371]
[108.15436554 -262.22396851]
[97.57440186 -272.94207764]
[89.54624939 -285.68426514]
[84.44541168 -299.85449219]
[82.51045990 -314.79003906]
[83.83189392 -329.79229736]
[88.34790802 -344.15960693]
[95.84727478 -357.21997070]
[105.97924805 -368.36257935]
[118.26992798 -377.06619263]
[132.14445496 -382.92379761]
[146.95390320 -385.66140747]
[162.00559998 -385.15093994]
[176.59555054 -381.41632080]
[190.04135132 -374.63217163]
[201.71412659 -365.11587524]
[211.06791687 -353.31243896]
[217.66523743 -339.77398682]
[221.19749451 -325.13372803]
[221.49951172 -310.07641602]
[218.55712891 -295.30630493]
[212.50799561 -281.51419067]
[203.63500977 -269.34521484]
[192.35321045 -259.36846924]
[179.19026184 -252.05065918]
[164.76179504 -247.73400879]
[165.87744141 -232.77554321]
[166.99308777 -217.81709290]
[168.10873413 -202.85864258]
[169.44697571 -187.91845703]
[171.00749207 -172.99984741]
[172.56802368 -158.08125305]
[177.76507568 -172.15216064]
[185.73765564 -184.85798645]
[196.14678955 -195.65844727]
[208.54986572 -204.09429932]
[222.41949463 -209.80686951]
[237.16592407 -212.55325317]
[252.16215515 -212.21664429]
[266.77050781 -208.81138611]
[280.36987305 -202.48226929]
[292.38192749 -193.49839783]
[302.29598999 -182.24176025]
[309.69046021 -169.19102478]
[314.25094604 -154.90109253]
[315.78350830 -139.97959900]
[314.22299194 -125.06098938]
[309.63577271 -110.77962494]
[302.21688843 -97.74275208]
[292.28176880 -86.50470734]
[280.25289917 -77.54334259]
[266.64172363 -71.23969269]
[252.02700806 -67.86179352]
[237.03018188 -67.55326843]
[222.28890991 -70.32725525]
[208.43000793 -76.06578064]
[196.04275513 -84.52485657]
[185.65385437 -95.34478760]
[177.70507812 -108.06551361]
[172.53437805 -122.14613342]
[170.36161804 -136.98811340]
[165.74761963 -122.71537781]
[161.13360596 -108.44264221]
[156.51959229 -94.16991425]
[151.90559387 -79.89717865]
[160.81303406 -67.98939514]
[161.00292969 -52.94186783]
[152.19287109 -40.52267456]
[137.59053040 -35.61574936]
[141.03778076 -21.12555313]
[129.43067932 -10.37447262]
[124.81666565 3.89826083]
[128.26391602 18.38845634]
[116.65680695 29.13953781]
[112.04280090 43.41226959]
[109.37700653 58.17348862]
[108.70722198 73.15852356]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.27781677 127.51126099]
[105.60803223 142.49629211]
[104.93824768 157.48133850]
[104.49164581 172.47468567]
[112.02262115 186.38851929]
[104.09668732 198.99919128]
[103.87335968 213.99752808]
[103.65003204 228.99586487]
[103.42670441 243.99420166]
[103.20337677 258.99255371]
[102.98004913 273.99087524]
[103.53826141 288.98049927]
[104.87649536 303.92068481]
[106.21472931 318.86087036]
[107.55296326 333.80105591]
[109.22450256 348.70761108]
[111.22851562 363.57315063]
[120.74017334 376.21588135]
[114.77260590 389.86276245]
[116.77661896 404.72830200]
[118.78063965 419.59384155]
[120.78465271 434.45935059]
[122.78866577 449.32489014]
[125.12415314 464.14196777]
[127.78994751 478.90316772]
[130.45573425 493.66439819]
[145.36323547 496.51589966]
[158.23190308 504.56338501]
[167.32135010 516.71850586]
[171.40231323 531.33728027]
[169.92288208 546.44281006]
[163.08314514 559.99206543]
[151.80809021 570.15264893]
[137.62258911 575.55041504]
[122.44512939 575.45544434]
[108.32832336 569.88049316]
[97.18135071 559.57952881]
[90.51176453 545.94567871]
[89.22154999 530.82287598]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 197]
[3 196]
[4 195]
[8 194]
[9 193]
[10 192]
[11 191]
[12 190]
[14 188]
[15 187]
[19 186]
[20 185]
[21 184]
[22 183]
[30 182]
[31 181]
[32 180]
[33 179]
[34 178]
[35 177]
[37 175]
[40 174]
[41 173]
[42 172]
[43 171]
[45 169]
[46 168]
[47 167]
[66 166]
[67 165]
[69 163]
[70 162]
[72 160]
[76 156]
[77 155]
[78 154]
[79 153]
[80 152]
[81 123]
[82 122]
[83 121]
[86 120]
[87 119]
[88 118]
[89 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
