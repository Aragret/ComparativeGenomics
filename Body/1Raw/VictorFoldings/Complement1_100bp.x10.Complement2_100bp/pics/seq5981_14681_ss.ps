%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[44.42239761 724.49377441]
[30.11219025 729.01977539]
[15.47344589 732.33239746]
[0.60884416 734.40850830]
[-14.37734890 735.23345947]
[-29.38001442 734.80151367]
[-44.29391479 733.11566162]
[-59.01444626 730.18780518]
[-73.43833923 726.03833008]
[-87.46443176 720.69653320]
[-100.99433899 714.19970703]
[-113.93315125 706.59356689]
[-126.19010925 697.93139648]
[-137.67924500 688.27392578]
[-148.31996155 677.68896484]
[-158.03761292 666.25067139]
[-166.76406860 654.03936768]
[-174.43807983 641.14068604]
[-181.00584412 627.64514160]
[-186.42127991 613.64727783]
[-190.64639282 599.24536133]
[-193.65156555 584.54040527]
[-195.41572571 569.63555908]
[-195.92646790 554.63537598]
[-195.18022156 539.64508057]
[-193.18223572 524.76977539]
[-189.94650269 510.11383057]
[-185.49574280 495.78005981]
[-179.86116028 481.86898804]
[-173.08227539 468.47817993]
[-165.20664978 455.70159912]
[-156.28952026 443.62884521]
[-146.39343262 432.34460449]
[-135.58781433 421.92803955]
[-123.94843292 412.45220947]
[-111.55696106 403.98355103]
[-98.50029755 396.58151245]
[-84.87004089 390.29800415]
[-70.76179504 385.17709351]
[-56.27450943 381.25466919]
[-41.50981903 378.55831909]
[-26.57128143 377.10687256]
[-11.56368351 376.91058350]
[3.40770674 377.97076416]
[18.23787308 380.28002930]
[21.77754593 365.70364380]
[25.31721878 351.12728882]
[28.85689163 336.55090332]
[32.39656448 321.97451782]
[35.93623734 307.39816284]
[28.02970314 299.17300415]
[25.04460144 288.03726196]
[27.83426094 276.72744751]
[35.81795502 268.08099365]
[47.09732437 264.32434082]
[51.06941986 249.85980225]
[55.04151535 235.39527893]
[45.61124039 223.89710999]
[44.74963379 208.87307739]
[52.99635315 196.07287598]
[67.36502075 190.51881409]
[71.33712006 176.05429077]
[75.30921173 161.58976746]
[71.21838379 147.26795959]
[82.33384705 136.00930786]
[86.30594635 121.54478455]
[90.27804565 107.08026123]
[94.03433990 92.55820465]
[89.77209473 77.32193756]
[100.29424286 66.77993774]
[103.83391571 52.20356369]
[92.37642670 61.88478088]
[77.63115692 64.63743591]
[63.45249176 59.74199295]
[53.54669189 48.47810745]
[50.50311279 33.79013062]
[55.11733627 19.51746941]
[66.18321991 9.39095688]
[80.80816650 6.05764294]
[95.16924286 10.38884640]
[105.51251221 21.25240326]
[109.13426971 35.80771637]
[114.79705811 21.91768837]
[120.45984650 8.02766132]
[126.12262726 -5.86236572]
[131.78541565 -19.75239182]
[137.44819641 -33.64241791]
[143.11099243 -47.53244781]
[142.59118652 -54.12345123]
[145.10121155 -59.22216034]
[149.15470886 -61.74766922]
[155.22854614 -75.46293640]
[153.74192810 -91.21414185]
[165.97009277 -99.71833801]
[172.04393005 -113.43360138]
[159.18023682 -121.18785858]
[147.38986206 -130.49325562]
[136.85877991 -141.20303345]
[127.75306702 -153.14830017]
[120.21633148 -166.14064026]
[114.36745453 -179.97515869]
[110.29866028 -194.43365479]
[108.07413483 -209.28810120]
[107.72895813 -224.30422974]
[109.26857758 -239.24520874]
[112.66870117 -253.87539673]
[117.87570953 -267.96405029]
[124.80748749 -281.28897095]
[133.35469055 -293.64004517]
[143.38255310 -304.82241821]
[154.73287964 -314.65972900]
[167.22668457 -322.99688721]
[180.66691589 -329.70236206]
[194.84159851 -334.67041016]
[209.52719116 -337.82266235]
[224.49206543 -339.10943604]
[239.50021362 -338.51040649]
[254.31492615 -336.03503418]
[268.70254517 -331.72235107]
[282.43618774 -325.64038086]
[295.29925537 -317.88504028]
[307.08883667 -308.57864380]
[317.61901855 -297.86798096]
[326.72372437 -285.92193604]
[334.25936890 -272.92898560]
[340.10708618 -259.09396362]
[344.17465210 -244.63511658]
[346.39791870 -229.78048706]
[346.74185181 -214.76432800]
[345.20095825 -199.82348633]
[341.79962158 -185.19357300]
[336.59140015 -171.10536194]
[329.65850830 -157.78100586]
[321.11026001 -145.43067932]
[311.08148193 -134.24916077]
[299.73031616 -124.41277313]
[287.23580933 -116.07667542]
[273.79501343 -109.37232971]
[259.61990356 -104.40547943]
[244.93405151 -101.25445557]
[229.96907043 -99.96895599]
[214.96096802 -100.56925201]
[200.14646912 -103.04587555]
[185.75920105 -107.35977173]
[179.68536377 -93.64450073]
[181.60641479 -78.87429810]
[168.94381714 -69.38910675]
[162.86997986 -55.67383575]
[157.00102234 -41.86965942]
[151.33822632 -27.97963333]
[145.67544556 -14.08960629]
[140.01266479 -0.19957909]
[134.34986877 13.69044781]
[128.68708801 27.58047485]
[123.02429962 41.47050095]
[118.41028595 55.74323654]
[114.87061310 70.31961060]
[119.38604736 84.51327515]
[108.61071777 96.09787750]
[110.25478363 101.07894135]
[108.99102020 106.62657166]
[104.74256897 111.05236053]
[100.77046967 125.51688385]
[96.79837036 139.98139954]
[100.60508728 155.33781433]
[89.77373505 165.56185913]
[85.80164337 180.02638245]
[81.82954407 194.49090576]
[91.34658051 206.60421753]
[91.89959717 221.82090759]
[83.48595428 234.29786682]
[69.50604248 239.36737061]
[65.53394318 253.83189392]
[61.56184769 268.29641724]
[71.55377197 284.39224243]
[66.69098663 302.37185669]
[50.51261139 310.93783569]
[46.97293854 325.51419067]
[43.43326569 340.09057617]
[39.89359283 354.66696167]
[36.35391998 369.24331665]
[32.81424713 383.81970215]
[47.05184937 388.56915283]
[60.84209442 394.49331665]
[74.08824158 401.55065918]
[86.69738770 409.69165039]
[98.58108521 418.85922241]
[109.65597534 428.98904419]
[119.84437561 440.01007080]
[129.07481384 451.84500122]
[137.28256226 464.41082764]
[144.41003418 477.61935425]
[150.40722656 491.37799072]
[155.23208618 505.59024048]
[158.85076904 520.15631104]
[161.23789978 534.97418213]
[162.37670898 549.93981934]
[162.25923157 564.94824219]
[160.88629150 579.89416504]
[158.26750183 594.67279053]
[154.42123413 609.18048096]
[149.37448120 623.31542969]
[143.16264343 636.97851562]
[135.82928467 650.07385254]
[127.42584229 662.50964355]
[118.01126099 674.19866943]
[107.65158844 685.05883789]
[96.41947937 695.01403809]
[84.39373016 703.99444580]
[71.65869141 711.93707275]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 182]
[46 181]
[47 180]
[48 179]
[49 178]
[50 177]
[55 174]
[56 173]
[57 172]
[61 168]
[62 167]
[63 166]
[65 164]
[66 163]
[67 162]
[68 159]
[70 157]
[71 156]
[82 155]
[83 154]
[84 153]
[85 152]
[86 151]
[87 150]
[88 149]
[91 148]
[92 147]
[94 145]
[95 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
