%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[98.90595245 524.21704102]
[84.79163361 529.33886719]
[70.20628357 532.90466309]
[55.32089615 534.87249756]
[40.31000519 535.21942139]
[25.34959984 533.94134521]
[10.61508656 531.05322266]
[-3.72078180 526.58886719]
[-17.48992348 520.60076904]
[-30.53090477 513.15899658]
[-42.69082260 504.35079956]
[-53.82711411 494.27954102]
[-63.80920410 483.06326294]
[-72.52006531 470.83346558]
[-79.85755920 457.73352051]
[-85.73567200 443.91705322]
[-90.08547211 429.54602051]
[-92.85595703 414.78890991]
[-94.01465607 399.81878662]
[-93.54798126 384.81115723]
[-91.46140289 369.94195557]
[-87.77938843 355.38549805]
[-82.54509735 341.31250000]
[-75.81990814 327.88793945]
[-67.68267059 315.26919556]
[-58.22878265 303.60421753]
[-47.56908798 293.02981567]
[-35.82857132 283.66992188]
[-23.14488411 275.63430786]
[-9.66672993 269.01715088]
[4.44786358 263.89608765]
[19.03340912 260.33108521]
[33.91889954 258.36401367]
[48.92980957 258.01788330]
[63.89014435 259.29681396]
[66.77542114 244.57690430]
[69.66069031 229.85700989]
[64.51598358 215.87913513]
[74.76328278 203.82493591]
[69.61858368 189.84706116]
[79.86588287 177.79287720]
[82.75115204 163.07298279]
[85.63642120 148.35308838]
[88.08215332 133.55381775]
[90.08616638 118.68828583]
[92.09017944 103.82276154]
[90.45434570 101.25107574]
[89.71808624 98.02734375]
[90.12471771 94.48360443]
[91.79146576 91.03712463]
[94.68154144 88.14222717]
[97.56681824 73.42234039]
[100.45208740 58.70244598]
[103.33736420 43.98255539]
[106.22263336 29.26266479]
[92.96822357 23.27569771]
[81.38879395 14.48812485]
[72.06557465 3.34524727]
[65.46560669 -9.58951855]
[61.91833496 -23.66312599]
[61.59918594 -38.16587067]
[64.52088928 -52.36717606]
[70.53299713 -65.55239868]
[79.32962036 -77.05879974]
[90.46501923 -86.30883026]
[103.37615967 -92.83914185]
[117.41119385 -96.32380676]
[131.86238098 -96.59055328]
[134.96649170 -111.26585388]
[138.07060242 -125.94116211]
[141.17471313 -140.61645508]
[132.81988525 -153.76312256]
[136.17694092 -168.60174561]
[148.76176453 -176.48577881]
[144.04776001 -191.58837891]
[154.25137329 -202.43899536]
[157.35548401 -217.11430359]
[160.45959473 -231.78959656]
[146.11172485 -236.19926453]
[132.21691895 -241.87733459]
[118.88702393 -248.77807617]
[106.22937775 -256.84591675]
[94.34588623 -266.01593018]
[83.33224487 -276.21426392]
[73.27711487 -287.35879517]
[64.26146698 -299.35980225]
[56.35788727 -312.12066650]
[49.63000870 -325.53863525]
[44.13200760 -339.50567627]
[39.90814590 -353.90933228]
[36.99243546 -368.63363647]
[35.40835190 -383.55999756]
[35.16864777 -398.56829834]
[36.27525711 -413.53765869]
[38.71926498 -428.34756470]
[42.48099899 -442.87875366]
[47.53016281 -457.01425171]
[53.82611084 -470.64022827]
[61.31814957 -483.64697266]
[69.94595337 -495.92977905]
[79.64005280 -507.38973999]
[90.32240295 -517.93457031]
[101.90699005 -527.47937012]
[114.30053711 -535.94732666]
[127.40325928 -543.27026367]
[141.10964966 -549.38916016]
[155.30937195 -554.25476074]
[169.88809204 -557.82794189]
[184.72840881 -560.07983398]
[199.71084595 -560.99243164]
[214.71476746 -560.55834961]
[229.61936951 -558.78100586]
[244.30465698 -555.67480469]
[258.65237427 -551.26464844]
[272.54702759 -545.58618164]
[285.87670898 -538.68505859]
[298.53411865 -530.61682129]
[310.41732788 -521.44641113]
[321.43066406 -511.24777222]
[331.48544312 -500.10293579]
[340.50073242 -488.10165405]
[348.40390015 -475.34054565]
[355.13137817 -461.92236328]
[360.62896729 -447.95513916]
[364.85238647 -433.55136108]
[367.76763916 -418.82699585]
[369.35125732 -403.90054321]
[369.59051514 -388.89224243]
[368.48342896 -373.92294312]
[366.03897095 -359.11309814]
[362.27679443 -344.58203125]
[357.22720337 -330.44668579]
[350.93084717 -316.82089233]
[343.43841553 -303.81439209]
[334.81024170 -291.53182983]
[325.11578369 -280.07217407]
[314.43310547 -269.52764893]
[302.84823608 -259.98318481]
[290.45443726 -251.51562500]
[277.35147095 -244.19311523]
[263.64489746 -238.07464600]
[249.44502258 -233.20945740]
[234.86621094 -229.63674927]
[220.02581787 -227.38525391]
[205.04335022 -226.47312927]
[190.03944397 -226.90771484]
[175.13488770 -228.68548584]
[172.03077698 -214.01019287]
[168.92666626 -199.33488464]
[173.86270142 -185.28195190]
[163.43705750 -173.38166809]
[171.75158691 -161.07702637]
[168.81263733 -146.14996338]
[155.85000610 -137.51234436]
[152.74589539 -122.83705139]
[149.64178467 -108.16175079]
[146.53767395 -93.48644257]
[160.53306580 -86.83847046]
[172.54240417 -77.03476715]
[181.86798096 -64.63954926]
[187.96667480 -50.36774063]
[190.48167419 -35.04376221]
[189.26327515 -19.55388641]
[184.37786865 -4.79499769]
[176.10424805 8.37734985]
[164.91777039 19.19852257]
[151.46301270 27.03919220]
[136.51661682 31.44194221]
[120.94252777 32.14793777]
[118.05725098 46.86782837]
[115.17198181 61.58771896]
[112.28670502 76.30760956]
[109.40143585 91.02750397]
[106.95570374 105.82677460]
[104.95169067 120.69229889]
[102.94767761 135.55783081]
[104.73885345 139.51329041]
[105.13803101 143.43823242]
[104.32572937 146.89880371]
[102.60483551 149.56434631]
[100.35631561 151.23835754]
[97.47104645 165.95825195]
[94.58576965 180.67814636]
[99.52410126 195.70889282]
[89.48317719 206.71022034]
[94.42150879 221.74096680]
[84.38058472 232.74229431]
[81.49530792 247.46217346]
[78.61003876 262.18206787]
[92.94614410 266.64562988]
[106.71561432 272.63302612]
[119.75698853 280.07409668]
[131.91738892 288.88159180]
[143.05421448 298.95227051]
[153.03691101 310.16802979]
[161.74842834 322.39736938]
[169.08663940 335.49688721]
[174.96548462 349.31304932]
[179.31605530 363.68386841]
[182.08734131 378.44079590]
[183.24684143 393.41085815]
[182.78097534 408.41851807]
[180.69520569 423.28784180]
[177.01396179 437.84448242]
[171.78042603 451.91778564]
[165.05596924 465.34271240]
[156.91940308 477.96188354]
[147.46614075 489.62734985]
[136.80702209 500.20233154]
[125.06700897 509.56286621]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 189]
[36 188]
[37 187]
[39 185]
[41 183]
[42 182]
[43 181]
[44 176]
[45 175]
[46 174]
[51 173]
[52 172]
[53 171]
[54 170]
[55 169]
[68 157]
[69 156]
[70 155]
[71 154]
[74 151]
[76 149]
[77 148]
[78 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
