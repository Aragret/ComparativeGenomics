%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUGxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[120.99377441 779.23876953]
[106.28724670 776.27075195]
[91.74407196 772.58471680]
[77.39928436 768.18945312]
[63.28743362 763.09564209]
[49.44252396 757.31555176]
[35.89790726 750.86309814]
[22.68621635 743.75378418]
[9.83927631 736.00476074]
[-2.61196280 727.63470459]
[-14.63750458 718.66381836]
[-26.20837784 709.11364746]
[-37.29670715 699.00720215]
[-47.87578201 688.36883545]
[-57.92011261 677.22424316]
[-67.40550232 665.60021973]
[-76.30910492 653.52471924]
[-84.60945892 641.02691650]
[-92.28658295 628.13690186]
[-99.32196808 614.88568115]
[-105.69867706 601.30523682]
[-111.40134430 587.42828369]
[-116.41622162 573.28814697]
[-120.73124695 558.91906738]
[-124.33600616 544.35552979]
[-127.22182465 529.63262939]
[-129.38175964 514.78588867]
[-130.81057739 499.85104370]
[-131.50486755 484.86410522]
[-131.46293640 469.86111450]
[-130.68490601 454.87826538]
[-129.17262268 439.95166016]
[-126.92975616 425.11721802]
[-123.96170044 410.41067505]
[-120.27559662 395.86752319]
[-115.88034058 381.52273560]
[-110.78650665 367.41091919]
[-105.00637054 353.56600952]
[-98.55386353 340.02142334]
[-91.44451904 326.80972290]
[-83.69548035 313.96282959]
[-75.32540131 301.51159668]
[-66.35445404 289.48608398]
[-56.80424118 277.91522217]
[-46.69778061 266.82693481]
[-36.05941772 256.24786377]
[-24.91477585 246.20356750]
[-13.29070759 236.71821594]
[-1.21521568 227.81463623]
[11.28260899 219.51431274]
[24.17265701 211.83721924]
[37.42387772 204.80186462]
[51.00434113 198.42520142]
[64.88134003 192.72256470]
[79.02143860 187.70771790]
[93.39057159 183.39273071]
[107.95411682 179.78800964]
[105.06884766 165.06811523]
[102.18357086 150.34822083]
[92.14264679 139.34690857]
[97.08097839 124.31615448]
[94.19570923 109.59626007]
[85.90036011 122.09375000]
[71.54859161 126.45571136]
[57.70183563 120.68791962]
[50.69064713 107.42733002]
[53.72044754 92.73650360]
[65.40604401 83.33189392]
[80.40495300 83.51315308]
[91.86079407 93.19902039]
[90.52255249 78.25884247]
[89.18431854 63.31865311]
[87.84608459 48.37846756]
[86.50785065 33.43828583]
[72.67575073 26.90987396]
[64.02565002 14.41697121]
[62.79832077 -0.62829453]
[69.22356415 -14.17717552]
[81.48532104 -22.63383102]
[80.14707947 -37.57401657]
[78.80884552 -52.51420212]
[63.80422211 -53.31541443]
[49.06636429 -56.24393845]
[34.89531326 -61.24015045]
[21.57957840 -68.20233154]
[9.39025021 -76.98873901]
[-1.42451298 -87.42050171]
[-10.64453602 -99.28524017]
[-18.08211136 -112.34140015]
[-23.58581924 -126.32316589]
[-27.04361153 -140.94590759]
[-28.38509178 -155.91191101]
[-27.58294868 -170.91648865]
[-24.65351486 -185.65415955]
[-19.65642738 -199.82490540]
[-12.69342136 -213.14021301]
[-3.90625501 -225.32899475]
[6.52617645 -236.14311218]
[18.39148140 -245.36239624]
[31.44809914 -252.79916382]
[45.43021393 -258.30200195]
[60.05316162 -261.75888062]
[75.01924896 -263.09945679]
[90.02377319 -262.29638672]
[104.76126862 -259.36602783]
[118.93170166 -254.36807251]
[132.24658203 -247.40423584]
[144.43481445 -238.61631775]
[155.24829102 -228.18321228]
[164.46684265 -216.31733704]
[171.90280151 -203.26026917]
[177.40478516 -189.27780151]
[180.86076355 -174.65464783]
[182.20039368 -159.68847656]
[181.39639282 -144.68400574]
[178.46513367 -129.94668579]
[173.46629333 -115.77655792]
[166.50163269 -102.46212006]
[157.71296692 -90.27442169]
[147.27919006 -79.46159363]
[135.41275024 -70.24377441]
[122.35520935 -62.80862427]
[108.37241364 -57.30751419]
[93.74903107 -53.85243607]
[95.08726501 -38.91225052]
[96.42549896 -23.97206497]
[109.99497223 -17.82918549]
[118.72584534 -5.63787937]
[120.19188690 9.38600445]
[113.89972687 23.21732712]
[101.44803619 32.10004807]
[102.78627014 47.04023361]
[104.12450409 61.98041916]
[105.46273804 76.92060852]
[106.80097198 91.86078644]
[108.91559601 106.71099091]
[111.80087280 121.43087769]
[122.04817200 133.48506165]
[116.90346527 147.46295166]
[119.78874207 162.18284607]
[122.67401123 176.90274048]
[137.52073669 174.74270630]
[152.45556641 173.31376648]
[167.44252014 172.61936951]
[182.44549561 172.66117859]
[197.42835999 173.43910217]
[212.35499573 174.95126343]
[227.18943787 177.19403076]
[241.89598083 180.16197205]
[256.43917847 183.84796143]
[270.78399658 188.24311829]
[284.89587402 193.33685303]
[298.74081421 199.11688232]
[312.28546143 205.56929016]
[325.49719238 212.67852783]
[338.34414673 220.42747498]
[350.79544067 228.79747009]
[362.82101440 237.76832581]
[374.39193726 247.31845093]
[385.48031616 257.42483521]
[396.05944824 268.06311035]
[406.10382080 279.20767212]
[415.58929443 290.83166504]
[424.49295044 302.90710449]
[432.79336548 315.40484619]
[440.47055054 328.29486084]
[447.50601196 341.54602051]
[453.88278198 355.12643433]
[459.58551025 369.00338745]
[464.60046387 383.14346313]
[468.91555786 397.51254272]
[472.52038574 412.07608032]
[475.40628052 426.79895020]
[477.56628418 441.64566040]
[478.99517822 456.58050537]
[479.68954468 471.56747437]
[479.64770508 486.57043457]
[478.86972046 501.55328369]
[477.35754395 516.47991943]
[475.11474609 531.31439209]
[472.14675903 546.02087402]
[468.46072388 560.56408691]
[464.06552124 574.90887451]
[458.97177124 589.02075195]
[453.19171143 602.86566162]
[446.73925781 616.41027832]
[439.62997437 629.62200928]
[431.88101196 642.46899414]
[423.51098633 654.92022705]
[414.54010010 666.94580078]
[404.98995972 678.51672363]
[394.88354492 689.60504150]
[384.24523926 700.18414307]
[373.10064697 710.22851562]
[361.47662354 719.71392822]
[349.40118408 728.61755371]
[336.90338135 736.91796875]
[324.01336670 744.59509277]
[310.76220703 751.63049316]
[297.18176270 758.00726318]
[283.30477905 763.70996094]
[269.16470337 768.72485352]
[254.79560852 773.03991699]
[240.23207092 776.64471436]
[225.50920105 779.53057861]
[210.66247559 781.69055176]
[195.72763062 783.11944580]
[180.74067688 783.81372070]
[165.73770142 783.77185059]
[150.75485229 782.99383545]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 141]
[58 140]
[59 139]
[61 137]
[62 136]
[70 135]
[71 134]
[72 133]
[73 132]
[74 131]
[79 126]
[80 125]
[81 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
