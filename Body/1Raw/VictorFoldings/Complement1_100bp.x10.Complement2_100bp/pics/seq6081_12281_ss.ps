%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[72.72171783 859.09985352]
[57.83366394 857.13452148]
[43.27444839 853.45410156]
[29.24096107 848.10827637]
[15.92299557 841.16937256]
[3.50065780 832.73120117]
[-7.85805273 822.90795898]
[-17.99952316 811.83245850]
[-26.78660011 799.65447998]
[-34.10045242 786.53863525]
[-39.84216309 772.66247559]
[-43.93408585 758.21350098]
[-46.32088089 743.38714600]
[-46.97026825 728.38397217]
[-45.87346649 713.40692139]
[-43.04531097 698.65838623]
[-38.52404785 684.33795166]
[-32.37082291 670.63928223]
[-24.66884804 657.74755859]
[-15.52228546 645.83721924]
[-5.05483341 635.06921387]
[6.59194899 625.58929443]
[19.26055145 617.52563477]
[32.77964783 610.98724365]
[46.96640396 606.06256104]
[61.62896347 602.81817627]
[76.56903076 601.29803467]
[76.79235840 586.29968262]
[77.01568604 571.30139160]
[77.23901367 556.30303955]
[77.46234131 541.30468750]
[77.68566895 526.30633545]
[77.90899658 511.30801392]
[78.13232422 496.30966187]
[78.35565186 481.31134033]
[78.57897949 466.31298828]
[71.03202820 453.47195435]
[78.97393799 439.78848267]
[79.19726562 424.79016113]
[79.42059326 409.79180908]
[71.87364197 396.95077515]
[79.81554413 383.26730347]
[64.80275726 379.43551636]
[51.13191605 372.12490845]
[39.59625626 361.75494385]
[30.86624527 348.92272949]
[25.45062447 334.36868286]
[23.66676140 318.93371582]
[25.62204552 303.51071167]
[31.20743942 288.99288940]
[40.10355377 276.22204590]
[51.79890442 265.93975830]
[65.61930847 258.74426270]
[80.76677704 255.05575562]
[80.76677704 240.05575562]
[80.76677704 225.05575562]
[80.76677704 210.05575562]
[80.76677704 195.05575562]
[71.45040894 206.81182861]
[57.29197311 211.76548767]
[42.67860794 208.38175964]
[32.13842773 197.70915222]
[28.93741608 183.05468750]
[34.06744385 168.95919800]
[45.93891907 159.79032898]
[60.87333298 158.38916016]
[74.24309540 165.18984985]
[81.90550995 178.08538818]
[83.90952301 163.21986389]
[85.91353607 148.35433960]
[87.91754913 133.48881531]
[81.94998932 119.84192657]
[91.46163940 107.19918060]
[93.35492706 92.31914520]
[95.13739777 77.42543030]
[87.49966431 60.66993332]
[98.55799103 47.04347610]
[100.11851501 32.12487030]
[101.67903900 17.20626640]
[92.00183868 5.00013971]
[93.79695129 -10.10721684]
[105.49326324 -19.25772858]
[107.05378723 -34.17633438]
[108.61431122 -49.09493637]
[110.17483521 -64.01354218]
[103.91521454 -78.54377747]
[112.93460846 -90.39704132]
[114.49513245 -105.31564331]
[116.05565643 -120.23424530]
[117.61618042 -135.15284729]
[118.28596497 -150.13789368]
[110.34405518 -163.82133484]
[117.89101410 -176.66239929]
[117.66768646 -191.66073608]
[117.44435883 -206.65907288]
[117.22102356 -221.65740967]
[114.16384888 -227.51959229]
[114.47882080 -233.19390869]
[117.22102356 -237.10406494]
[117.44435883 -252.10240173]
[103.96903992 -259.36010742]
[95.41968536 -272.05529785]
[93.76087952 -287.27062988]
[99.37378693 -301.50979614]
[110.96862030 -311.50073242]
[125.88095856 -314.94757080]
[140.68406677 -311.05825806]
[151.97628784 -300.72653198]
[157.16276550 -286.32656860]
[155.05166626 -271.16735840]
[146.12812805 -258.73236084]
[132.44268799 -251.87907410]
[132.21936035 -236.88073730]
[132.21936035 -221.88073730]
[132.44268799 -206.88240051]
[132.66601562 -191.88406372]
[132.88934326 -176.88572693]
[140.81527710 -164.27505493]
[133.28430176 -150.36122131]
[142.99014282 -161.79785156]
[157.53691101 -165.45729065]
[171.49902344 -159.97465515]
[179.66896057 -147.39482117]
[178.99952698 -132.40975952]
[169.74041748 -120.60854340]
[155.34504700 -116.39271545]
[141.18252563 -121.33468628]
[132.53479004 -133.59233093]
[130.97425842 -118.67372894]
[129.41374207 -103.75511932]
[127.85321808 -88.83651733]
[134.22445679 -75.37335968]
[125.09343719 -62.45301819]
[123.53291321 -47.53441620]
[121.97238922 -32.61581039]
[120.41186523 -17.69720459]
[129.96138000 -6.32432747]
[128.59130859 8.82748985]
[116.59764099 18.76678848]
[115.03711700 33.68539429]
[113.47660065 48.60399628]
[120.84772491 58.19530106]
[119.66972351 70.63700867]
[110.03111267 79.20789337]
[108.24864960 94.10160828]
[110.49381256 101.84317017]
[106.32716370 109.20319366]
[112.15139008 123.91336060]
[102.78307343 135.49282837]
[100.77906036 150.35835266]
[98.77504730 165.22387695]
[96.77103424 180.08941650]
[95.76677704 195.05575562]
[95.76677704 210.05575562]
[95.76677704 225.05575562]
[95.76677704 240.05575562]
[95.76677704 255.05575562]
[109.92527771 258.38140869]
[122.97877502 264.77755737]
[134.27124023 273.91903687]
[143.23599243 285.34274292]
[149.42410278 298.47122192]
[152.52690125 312.64175415]
[152.39140320 327.13986206]
[149.02777100 341.23529053]
[142.60868835 354.21887207]
[133.46047974 365.43807983]
[122.04656219 374.32992554]
[108.94389343 380.44918823]
[94.81388092 383.49063110]
[102.34486389 397.40447998]
[94.41893005 410.01513672]
[94.19560242 425.01348877]
[93.97227478 440.01181030]
[101.50325012 453.92565918]
[93.57731628 466.53631592]
[93.35398865 481.53466797]
[93.13066101 496.53298950]
[92.90733337 511.53134155]
[92.68400574 526.52966309]
[92.46067810 541.52801514]
[92.23735046 556.52636719]
[92.01402283 571.52471924]
[91.79069519 586.52301025]
[91.56736755 601.52136230]
[106.45555115 603.48565674]
[121.01501465 607.16516113]
[135.04885864 612.51007080]
[148.36727905 619.44805908]
[160.79019165 627.88537598]
[172.14955139 637.70782471]
[182.29176331 648.78271484]
[191.07965088 660.96008301]
[198.39437866 674.07543945]
[204.13702393 687.95123291]
[208.22990417 702.39996338]
[210.61769104 717.22607422]
[211.26808167 732.22918701]
[210.17227173 747.20635986]
[207.34510803 761.95507812]
[202.82479858 776.27581787]
[196.67248535 789.97491455]
[188.97137451 802.86712646]
[179.82560730 814.77813721]
[169.35887146 825.54675293]
[157.71272278 835.02746582]
[145.04466248 843.09197998]
[131.52600098 849.63128662]
[117.33956909 854.55694580]
[102.67722321 857.80224609]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 185]
[28 184]
[29 183]
[30 182]
[31 181]
[32 180]
[33 179]
[34 178]
[35 177]
[36 176]
[38 174]
[39 173]
[40 172]
[42 170]
[54 157]
[55 156]
[56 155]
[57 154]
[58 153]
[68 152]
[69 151]
[70 150]
[71 149]
[73 147]
[74 145]
[75 144]
[77 141]
[78 140]
[79 139]
[82 136]
[83 135]
[84 134]
[85 133]
[87 131]
[88 130]
[89 129]
[90 128]
[91 119]
[93 117]
[94 116]
[95 115]
[96 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
