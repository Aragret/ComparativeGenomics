%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAUxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[-6.86521292 410.98214722]
[-12.82522297 424.75427246]
[-19.75254440 438.06613159]
[-27.61187744 450.84988403]
[-36.36317062 463.04037476]
[-45.96183395 474.57550049]
[-56.35894775 485.39645386]
[-67.50153351 495.44812012]
[-79.33280945 504.67926025]
[-91.79248810 513.04284668]
[-104.81707764 520.49627686]
[-118.34020233 527.00152588]
[-132.29295349 532.52551270]
[-146.60423279 537.03997803]
[-161.20109558 540.52203369]
[-176.00918579 542.95385742]
[-190.95303345 544.32305908]
[-205.95648193 544.62268066]
[-220.94308472 543.85125732]
[-235.83645630 542.01263428]
[-250.56072998 539.11621094]
[-265.04083252 535.17675781]
[-279.20303345 530.21429443]
[-292.97509766 524.25421143]
[-306.28692627 517.32678223]
[-319.07058716 509.46731567]
[-331.26101685 500.71594238]
[-342.79608154 491.11718750]
[-353.61694336 480.72000122]
[-363.66854858 469.57733154]
[-372.89959717 457.74597168]
[-381.26309204 445.28625488]
[-388.71640015 432.26159668]
[-395.22155762 418.73843384]
[-400.74542236 404.78564453]
[-405.25979614 390.47433472]
[-408.74169922 375.87741089]
[-411.17343140 361.06930542]
[-412.54254150 346.12545776]
[-412.84207153 331.12200928]
[-412.07049561 316.13540649]
[-410.23175049 301.24203491]
[-407.33520508 286.51779175]
[-403.39562988 272.03771973]
[-398.43310547 257.87557983]
[-392.47286987 244.10353088]
[-385.54534912 230.79177856]
[-377.68582153 218.00816345]
[-368.93432617 205.81779480]
[-359.33551025 194.28282166]
[-348.93823242 183.46202087]
[-337.79547119 173.41052246]
[-325.96405029 164.17955017]
[-313.50424194 155.81614685]
[-300.47955322 148.36293030]
[-286.95632935 141.85789490]
[-273.00350952 136.33415222]
[-258.69213867 131.81988525]
[-244.09523010 128.33807373]
[-229.28709412 125.90647888]
[-214.34323120 124.53748322]
[-199.33978271 124.23806000]
[-184.35319519 125.00974274]
[-169.45983887 126.84859467]
[-154.73562622 129.74525452]
[-140.25555420 133.68493652]
[-126.09345245 138.64758301]
[-112.32145691 144.60791016]
[-99.00976562 151.53553772]
[-86.22619629 159.39517212]
[-74.03591156 168.14674377]
[-62.50101089 177.74566650]
[-51.68028259 188.14303589]
[-41.62887192 199.28585815]
[-29.80260277 190.05876160]
[-17.97633171 180.83164978]
[-6.15006256 171.60455322]
[5.67620707 162.37745667]
[17.50247765 153.15036011]
[20.84236336 146.55741882]
[29.57420731 143.87548828]
[41.53654480 134.82548523]
[53.49888229 125.77548981]
[65.46121979 116.72549438]
[77.42355347 107.67549133]
[89.38589478 98.62549591]
[100.11027527 88.13799286]
[109.42515564 76.38073730]
[118.74003601 64.62348938]
[128.05491638 52.86623764]
[137.28201294 41.03996658]
[146.42082214 29.14533424]
[155.55961609 17.25070190]
[164.69842529 5.35606909]
[153.68949890 -4.84824514]
[143.66906738 -16.02481461]
[134.72264099 -28.07828522]
[126.92655182 -40.90581894]
[120.34729767 -54.39796829]
[115.04103088 -68.43962860]
[111.05300903 -82.91098785]
[108.41726685 -97.68859100]
[107.15628815 -112.64634705]
[107.28082275 -127.65664673]
[108.78982544 -142.59143066]
[111.67041016 -157.32325745]
[115.89800262 -171.72645569]
[121.43653870 -185.67813110]
[128.23875427 -199.05926514]
[136.24661255 -211.75566101]
[145.39181519 -223.65902710]
[155.59631348 -234.66778564]
[166.77305603 -244.68803406]
[178.82667542 -253.63424683]
[191.65432739 -261.43014526]
[205.14659119 -268.00915527]
[219.18833923 -273.31518555]
[233.65975952 -277.30297852]
[248.43740845 -279.93847656]
[263.39520264 -281.19918823]
[278.40548706 -281.07440186]
[293.34024048 -279.56515503]
[308.07202148 -276.68432617]
[322.47515869 -272.45651245]
[336.42672729 -266.91772461]
[349.80773926 -260.11529541]
[362.50402832 -252.10722351]
[374.40722656 -242.96182251]
[385.41583252 -232.75714111]
[395.43588257 -221.58023071]
[404.38189697 -209.52647400]
[412.17758179 -196.69868469]
[418.75637817 -183.20631409]
[424.06216431 -169.16447449]
[428.04971313 -154.69297791]
[430.68496704 -139.91528320]
[431.94543457 -124.95748901]
[431.82040405 -109.94718933]
[430.31091309 -95.01246643]
[427.42984009 -80.28073120]
[423.20175171 -65.87767029]
[417.66275024 -51.92617798]
[410.86010742 -38.54528046]
[402.85180664 -25.84914207]
[393.70620728 -13.94608402]
[383.50134277 -2.93766022]
[372.32427979 7.08220625]
[360.27035522 16.02802849]
[347.44244385 23.82348061]
[333.94995117 30.40205574]
[319.90805054 35.70762253]
[305.43646240 39.69491959]
[290.65875244 42.32992554]
[275.70092773 43.59016037]
[260.69061279 43.46486664]
[245.75592041 41.95512009]
[231.02423096 39.07379913]
[216.62124634 34.84548569]
[202.66984558 29.30625916]
[189.28906250 22.50337219]
[176.59306335 14.49487114]
[167.45425415 26.38950348]
[158.31546021 38.28413773]
[149.17665100 50.17877197]
[147.59419250 57.39802170]
[139.81216431 62.18112183]
[130.49728394 73.93836975]
[121.18240356 85.69562531]
[111.86752319 97.45287323]
[125.64685059 91.52581024]
[140.59898376 90.32836914]
[155.14596558 93.98691559]
[167.75265503 102.11535645]
[177.08860779 113.85588837]
[182.16859436 127.96949005]
[182.45649719 142.96672058]
[177.92195129 157.26490784]
[169.04348755 169.35510254]
[156.75807190 177.96141052]
[142.36221313 182.17558289]
[127.37513733 181.55288696]
[113.37847900 176.15905762]
[101.84932709 166.56329346]
[94.00438690 153.77825928]
[90.67154694 139.15321350]
[92.20253754 124.23154449]
[98.43589020 110.58782959]
[86.47355652 119.63783264]
[74.51121521 128.68783569]
[62.54888153 137.73782349]
[50.58654404 146.78782654]
[38.62420654 155.83782959]
[26.72957420 164.97663879]
[14.90330505 174.20373535]
[3.07703543 183.43083191]
[-8.74923420 192.65792847]
[-20.57550430 201.88502502]
[-32.40177536 211.11212158]
[-24.03808594 223.57173157]
[-16.58456993 236.59626770]
[-10.07920933 250.11933899]
[-4.55515289 264.07205200]
[-0.04055133 278.38330078]
[3.44159007 292.98013306]
[5.87352705 307.78820801]
[7.24286699 322.73205566]
[7.54263210 337.73547363]
[6.77129412 352.72210693]
[4.93278456 367.61547852]
[2.03647137 382.33978271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[74 198]
[75 197]
[76 196]
[77 195]
[78 194]
[79 193]
[81 192]
[82 191]
[83 190]
[84 189]
[85 188]
[86 187]
[87 169]
[88 168]
[89 167]
[90 166]
[91 164]
[92 163]
[93 162]
[94 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
