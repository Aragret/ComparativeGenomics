%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[41.64743805 685.37207031]
[28.60945320 692.80261230]
[15.06385040 699.26165771]
[1.08290291 704.71466064]
[-13.25879478 709.13262939]
[-27.88472176 712.49188232]
[-42.71684265 714.77453613]
[-57.67602158 715.96844482]
[-72.68244171 716.06719971]
[-87.65603638 715.07031250]
[-102.51691437 712.98303223]
[-117.18579102 709.81658936]
[-131.58439636 705.58782959]
[-145.63591003 700.31927490]
[-159.26535034 694.03906250]
[-172.40000916 686.78076172]
[-184.96978760 678.58300781]
[-196.90765381 669.48962402]
[-208.14988708 659.54907227]
[-218.63650513 648.81439209]
[-228.31156921 637.34289551]
[-237.12344360 625.19573975]
[-245.02513123 612.43780518]
[-251.97445679 599.13702393]
[-257.93435669 585.36456299]
[-262.87301636 571.19372559]
[-266.76409912 556.70019531]
[-269.58682251 541.96130371]
[-271.32614136 527.05572510]
[-271.97277832 512.06292725]
[-271.52328491 497.06289673]
[-269.98004150 482.13571167]
[-267.35131836 467.36099243]
[-263.65109253 452.81759644]
[-258.89916992 438.58306885]
[-253.12081909 424.73339844]
[-246.34693909 411.34246826]
[-238.61366272 398.48175049]
[-229.96221924 386.21981812]
[-220.43879700 374.62210083]
[-210.09419250 363.75051880]
[-198.98359680 353.66302490]
[-187.16630554 344.41348267]
[-174.70536804 336.05120850]
[-161.66726685 328.62088013]
[-148.12155151 322.16204834]
[-134.14051819 316.70925903]
[-119.79875183 312.29156494]
[-105.17276764 308.93255615]
[-90.34060669 306.65011597]
[-75.38140869 305.45645142]
[-60.37498856 305.35794067]
[-45.40140915 306.35510254]
[-30.54056358 308.44259644]
[-15.87174034 311.60931396]
[-1.47320569 315.83831787]
[12.57821655 321.10708618]
[18.85557747 307.48376465]
[25.13293839 293.86047363]
[31.41029930 280.23715210]
[37.68766022 266.61383057]
[43.96501923 252.99050903]
[50.24238205 239.36718750]
[48.54144669 224.57002258]
[61.34386826 215.27441406]
[67.62123108 201.65109253]
[72.44722748 187.44863892]
[67.72097778 173.32377625]
[78.32263184 161.58003235]
[81.64488983 146.95257568]
[84.96714783 132.32510376]
[72.39297485 122.55551147]
[65.32662201 108.28590393]
[65.17790222 92.36318970]
[71.97648621 77.96408081]
[84.36598969 67.96131897]
[99.87461090 64.35054779]
[102.97871399 49.67524338]
[106.08282471 34.99994278]
[109.18693542 20.32464027]
[104.47293854 5.22203064]
[114.67654419 -5.62857819]
[117.78065491 -20.30388069]
[120.88476562 -34.97918320]
[123.22025299 -49.79624939]
[124.78077698 -64.71485901]
[126.34130096 -79.63346100]
[127.90182495 -94.55206299]
[129.46234131 -109.47067261]
[131.02287292 -124.38927460]
[131.69265747 -139.37431335]
[131.46932983 -154.37265015]
[131.24600220 -169.37098694]
[131.02267456 -184.36932373]
[130.79934692 -199.36766052]
[130.57601929 -214.36599731]
[116.17630768 -219.04866028]
[104.07878113 -228.15516663]
[95.59566498 -240.69770813]
[91.64715576 -255.31578064]
[92.66156006 -270.42370605]
[98.52883911 -284.38272095]
[108.61255646 -295.67861938]
[121.81890106 -303.08612061]
[136.71534729 -305.80172729]
[151.68605042 -303.53085327]
[165.10708618 -296.51983643]
[175.52265930 -285.52917480]
[181.80294800 -271.75103760]
[183.26672363 -256.68002319]
[179.75520325 -241.95085144]
[171.64929199 -229.16130066]
[159.82824707 -219.69863892]
[145.57435608 -214.58932495]
[145.79768372 -199.59098816]
[146.02101135 -184.59265137]
[146.24433899 -169.59431458]
[146.46766663 -154.59597778]
[146.69099426 -139.59764099]
[156.39683533 -151.03427124]
[170.94360352 -154.69371033]
[184.90571594 -149.21107483]
[193.07565308 -136.63124084]
[192.40621948 -121.64618683]
[183.14710999 -109.84496307]
[168.75173950 -105.62913513]
[154.58921814 -110.57110596]
[145.94146729 -122.82875061]
[144.38095093 -107.91014862]
[142.82041931 -92.99153900]
[141.25990295 -78.07293701]
[139.69938660 -63.15433121]
[138.13885498 -48.23572922]
[149.73588562 -57.74934387]
[164.73583984 -57.70852661]
[176.28091431 -48.13194275]
[179.09288025 -33.39786911]
[171.88613892 -20.24253464]
[157.95552063 -14.68037510]
[143.66990662 -19.25433731]
[135.56007385 -31.87507248]
[132.45596313 -17.19976997]
[129.35185242 -2.52446795]
[134.28787231 11.52846527]
[123.86224365 23.42874908]
[120.75813293 38.10405350]
[117.65402222 52.77935410]
[114.54991150 67.45465851]
[125.83966827 75.43965149]
[133.24160767 87.11997223]
[135.64202881 100.73822021]
[132.67977905 114.24539185]
[124.80055237 125.60921478]
[113.18984985 133.11988831]
[99.59461212 135.64736938]
[96.27235413 150.27482605]
[92.95008850 164.90228271]
[97.43871307 180.07341003]
[87.07469177 190.77090454]
[97.36652374 179.85861206]
[111.01924896 173.64546204]
[126.00754547 173.05313110]
[140.10800171 178.16947937]
[151.22889709 188.23554993]
[157.72050476 201.75808716]
[158.61984253 216.73110962]
[153.79350281 230.93344116]
[143.95742798 242.25827026]
[130.57075500 249.02561951]
[115.61931610 250.23158264]
[101.32106018 245.69728088]
[89.79705048 236.09533691]
[82.75681305 222.85014343]
[81.24454498 207.92845154]
[74.96718597 221.55177307]
[76.21912384 237.32336426]
[63.86569595 245.64456177]
[57.58833694 259.26788330]
[51.31097412 272.89117432]
[45.03361511 286.51449585]
[38.75625610 300.13781738]
[32.47889328 313.76113892]
[26.20153236 327.38446045]
[39.33630753 334.64254761]
[51.90623474 342.84008789]
[63.84424210 351.93328857]
[75.08663940 361.87365723]
[85.57343292 372.60815430]
[95.24868774 384.07949829]
[104.06076813 396.22650146]
[111.96266174 408.98434448]
[118.91220093 422.28497314]
[124.87232208 436.05737305]
[129.81121826 450.22811890]
[133.70252991 464.72155762]
[136.52549744 479.46038818]
[138.26507568 494.36596680]
[138.91195679 509.35876465]
[138.46270752 524.35876465]
[136.91972351 539.28601074]
[134.29122925 554.06072998]
[130.59124756 568.60424805]
[125.83953857 582.83880615]
[120.06143188 596.68859863]
[113.28777313 610.07965088]
[105.55469513 622.94049072]
[96.90345764 635.20257568]
[87.38021851 646.80041504]
[77.03579712 657.67218018]
[65.92537689 667.75982666]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 183]
[58 182]
[59 181]
[60 180]
[61 179]
[62 178]
[63 177]
[65 175]
[66 174]
[67 159]
[69 157]
[70 156]
[71 155]
[77 148]
[78 147]
[79 146]
[80 145]
[82 143]
[83 142]
[84 141]
[85 133]
[86 132]
[87 131]
[88 130]
[89 129]
[90 128]
[91 119]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
