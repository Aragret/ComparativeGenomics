%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[99.73648071 609.26757812]
[91.74929810 621.98797607]
[82.23076630 633.60693359]
[71.33101654 643.94128418]
[59.22194672 652.82800293]
[46.09453583 660.12695312]
[32.15581894 665.72296143]
[17.62563515 669.52783203]
[2.73314309 671.48150635]
[-12.28678036 671.55322266]
[-27.19724846 669.74182129]
[-41.76310349 666.07586670]
[-55.75461960 660.61322021]
[-68.95113373 653.44000244]
[-81.14450836 644.66931152]
[-92.14244843 634.43951416]
[-101.77149200 622.91192627]
[-109.87978363 610.26843262]
[-116.33943176 596.70831299]
[-121.04856873 582.44555664]
[-123.93291473 567.70501709]
[-124.94699860 552.71917725]
[-124.07480621 537.72442627]
[-121.33010101 522.95721436]
[-116.75617218 508.65051270]
[-110.42515564 495.02987671]
[-102.43689728 482.31015015]
[-92.91738892 470.69198608]
[-82.01676941 460.35855103]
[-69.90695190 451.47286987]
[-56.77892303 444.17504883]
[-42.83973694 438.58020020]
[-28.30923462 434.77655029]
[-13.41657829 432.82412720]
[1.60335135 432.75366211]
[16.51366806 434.56631470]
[31.07921410 438.23348999]
[36.53457260 424.26068115]
[41.98992920 410.28787231]
[47.44528580 396.31509399]
[52.90064240 382.34228516]
[58.35599899 368.36947632]
[62.54301071 353.96569824]
[65.42828369 339.24581909]
[68.31355286 324.52593994]
[59.81675720 312.34643555]
[62.53314590 297.37725830]
[75.36573029 288.54763794]
[78.25099945 273.82772827]
[81.13626862 259.10784912]
[83.25089264 244.25764465]
[84.58913422 229.31745911]
[85.92736816 214.37727356]
[87.26560211 199.43708801]
[88.38124847 184.47863770]
[89.27406311 169.50523376]
[90.05538177 154.52558899]
[90.72517395 139.54055786]
[91.39495850 124.55551910]
[78.49951172 114.65431976]
[73.99841309 99.03170776]
[79.64900208 83.78713226]
[93.24514771 74.87248230]
[93.69174957 59.87913132]
[94.13835907 44.88578033]
[83.28103638 55.23559570]
[68.31960297 56.31053543]
[56.09422302 47.61915970]
[52.19417191 33.13504410]
[58.40250397 19.48013115]
[71.88085175 12.89726639]
[86.46709442 16.39604378]
[95.49315643 28.37864113]
[97.49716949 13.51311302]
[99.50118256 -1.35241544]
[101.50519562 -16.21794319]
[103.50920868 -31.08347130]
[96.32403564 -41.79496765]
[98.29922485 -54.13524246]
[107.83733368 -61.57506180]
[110.06245422 -76.40910339]
[112.28757477 -91.24314880]
[106.68300629 -106.03839874]
[116.22267914 -117.47709656]
[118.44779968 -132.31114197]
[109.32527924 -144.93721008]
[111.79318237 -159.94934082]
[123.88642120 -168.56845093]
[126.11154175 -183.40249634]
[127.78308105 -198.30906677]
[128.89872742 -213.26753235]
[122.20926666 -227.60494995]
[130.87174988 -239.72149658]
[131.98739624 -254.67994690]
[133.10304260 -269.63839722]
[134.21868896 -284.59686279]
[119.92742157 -289.41458130]
[107.28370667 -297.63571167]
[97.08233643 -308.74349976]
[89.96457672 -322.03967285]
[86.37786102 -336.68844604]
[86.54765320 -351.76895142]
[90.46327972 -366.33325195]
[97.87860107 -379.46578979]
[108.32747650 -390.34109497]
[121.15309143 -398.27545166]
[135.54920959 -402.77020264]
[150.61088562 -403.54272461]
[165.39132690 -400.54446411]
[178.96141052 -393.96392822]
[190.46813965 -384.21478271]
[199.18815613 -371.90982056]
[204.57333374 -357.82257080]
[206.28515625 -342.83856201]
[204.21600342 -327.89968872]
[198.49595642 -313.94506836]
[189.48458862 -301.85183716]
[177.74833679 -292.38024902]
[164.02496338 -286.12564087]
[149.17715454 -283.48120117]
[148.06149292 -268.52276611]
[146.94584656 -253.56430054]
[145.83020020 -238.60585022]
[152.59945679 -225.33834839]
[143.85717773 -212.15187073]
[142.74153137 -197.19342041]
[155.63771057 -204.85427856]
[169.72114563 -199.69123840]
[174.61004639 -185.51031494]
[166.70051575 -172.76515198]
[151.82315063 -170.85101318]
[140.94558716 -181.17738342]
[138.72045898 -166.34333801]
[147.75262451 -154.55538940]
[145.70736694 -139.47987366]
[133.28184509 -130.08602905]
[131.05673218 -115.25198364]
[136.82044983 -101.51776123]
[127.12161255 -89.01802826]
[124.89649963 -74.18399048]
[122.67137909 -59.34994507]
[129.96502686 -43.38843536]
[118.37474060 -29.07945824]
[116.37071991 -14.21393013]
[114.36670685 0.65159827]
[112.36269379 15.51712608]
[110.35868073 30.38265419]
[109.13170624 45.33238983]
[108.68510437 60.32573700]
[108.23849487 75.31909180]
[119.31459808 82.56536102]
[125.39277649 94.32309723]
[124.90021515 107.54980469]
[117.96437073 118.82289886]
[106.37999725 125.22530365]
[105.71021271 140.21034241]
[105.04042816 155.19537354]
[107.78352356 163.90820312]
[104.24746704 170.39804077]
[103.35465240 185.37145996]
[105.96735382 191.44477844]
[105.23121643 197.07995605]
[102.20578766 200.77532959]
[100.86754608 215.71551514]
[99.52931213 230.65570068]
[98.19107819 245.59588623]
[109.64517975 235.91065979]
[124.64407349 235.72813416]
[136.33045959 245.13177490]
[139.36148071 259.82235718]
[132.35140991 273.08352661]
[118.50513458 278.85247803]
[104.15299988 274.49169922]
[95.85616302 261.99310303]
[92.97089386 276.71301270]
[90.08561707 291.43289185]
[98.63525391 304.45370483]
[95.49948883 319.34066772]
[83.03344727 327.41119385]
[80.14817047 342.13110352]
[77.26290131 356.85098267]
[87.66500092 346.04376221]
[101.69567871 340.73901367]
[116.64581299 341.96102905]
[129.62878418 349.47384644]
[138.13777161 361.82687378]
[140.52983093 376.63491821]
[136.34309387 391.03878784]
[126.38594055 402.25729370]
[112.58095551 408.12435913]
[97.59365845 407.50711060]
[84.31787109 400.52478027]
[75.31692505 388.52548218]
[72.32879639 373.82485962]
[66.87343597 387.79763794]
[61.41808319 401.77044678]
[55.96272659 415.74325562]
[50.50737000 429.71603394]
[45.05201340 443.68884277]
[58.24912643 450.86096191]
[70.44324493 459.63061523]
[81.44203949 469.85946655]
[91.07205963 481.38623047]
[99.18141174 494.02908325]
[105.64220428 507.58862305]
[110.35253906 521.85101318]
[113.23812866 536.59130859]
[114.25347137 551.57708740]
[113.38253784 566.57189941]
[110.63907623 581.33929443]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 199]
[38 198]
[39 197]
[40 196]
[41 195]
[42 194]
[43 181]
[44 180]
[45 179]
[48 176]
[49 175]
[50 174]
[51 166]
[52 165]
[53 164]
[54 163]
[55 160]
[56 159]
[57 157]
[58 156]
[59 155]
[63 150]
[64 149]
[65 148]
[73 147]
[74 146]
[75 145]
[76 144]
[77 143]
[80 141]
[81 140]
[82 139]
[84 137]
[85 136]
[88 133]
[89 132]
[90 126]
[91 125]
[93 123]
[94 122]
[95 121]
[96 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
