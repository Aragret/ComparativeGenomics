%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[43.48717117 546.83801270]
[35.14025497 559.37371826]
[24.29337120 569.82165527]
[11.45384884 577.69317627]
[-2.77778387 582.62011719]
[-17.73588753 584.37200928]
[-32.72084427 582.86694336]
[-47.03178024 578.17535400]
[-59.99934769 570.51660156]
[-71.01702881 560.24896240]
[-79.56951141 547.85266113]
[-85.25677490 533.90740967]
[-87.81281281 519.06555176]
[-87.11808777 504.02124023]
[-83.20507812 489.47811890]
[-76.25681305 476.11639404]
[-66.59826660 464.56103516]
[-54.68119431 455.35247803]
[-41.06297684 448.92144775]
[-26.38056183 445.56869507]
[-11.32067299 445.45111084]
[-8.21656322 430.77578735]
[-5.11245298 416.10049438]
[-2.00834274 401.42520142]
[1.09576726 386.74990845]
[-7.21875334 374.44525146]
[-4.27979946 359.51818848]
[8.68282032 350.88058472]
[6.99155331 343.68603516]
[11.94393635 336.01065063]
[15.26619625 321.38317871]
[18.58845520 306.75573730]
[21.91071510 292.12826538]
[12.29112244 303.63754272]
[-0.14925109 312.01831055]
[-14.42930698 316.60958862]
[-29.42285919 317.04934692]
[-43.94745636 313.30285645]
[-56.85762405 305.66561890]
[-67.13521576 294.73989868]
[-73.96969604 281.38739014]
[-76.82206726 266.66107178]
[-75.46738434 251.72238159]
[-70.01248169 237.74940491]
[-60.88755417 225.84411621]
[-48.81223297 216.94543457]
[-34.73882675 211.75512695]
[-19.77722549 210.68254089]
[-5.10736084 213.81224060]
[8.11383915 220.89743042]
[18.84369659 231.37933350]
[26.23600769 244.43128967]
[29.70778656 259.02398682]
[28.98458099 274.00997925]
[28.61056709 259.12008667]
[42.19125366 251.00369263]
[49.65899277 237.99475098]
[57.12673569 224.98579407]
[64.59447479 211.97683716]
[70.04983521 198.00404358]
[73.37209320 183.37658691]
[76.69435120 168.74913025]
[80.01660919 154.12165833]
[83.33887482 139.49420166]
[86.66113281 124.86674500]
[89.98339081 110.23928070]
[86.03180695 96.82747650]
[95.38915253 86.43845367]
[98.71141052 71.81099701]
[94.22278595 56.63987732]
[104.58681488 45.94238663]
[107.90907288 31.31492805]
[111.23133087 16.68746758]
[105.03044128 5.37765741]
[108.09869385 -6.73719215]
[118.26252747 -13.29639530]
[121.80220032 -27.87277031]
[110.92790222 -17.54079628]
[96.67435455 -12.86785412]
[81.79369354 -14.75621510]
[69.15914154 -22.84126663]
[61.21022797 -35.56191254]
[59.48176956 -50.46199417]
[64.30750275 -64.66453552]
[74.75565338 -75.42726135]
[88.80884552 -80.67204285]
[103.75363159 -79.38619995]
[116.70440674 -71.81801605]
[125.16057587 -59.42877960]
[127.48930359 -44.60938644]
[133.56314087 -58.32465363]
[139.63697815 -72.03992462]
[145.71080017 -85.75518799]
[151.78463745 -99.47045135]
[150.29803467 -115.22166443]
[162.52619934 -123.72585297]
[168.60002136 -137.44111633]
[174.46899414 -151.24530029]
[180.13177490 -165.13533020]
[185.79455566 -179.02534485]
[172.99484253 -186.91313171]
[161.66809082 -196.80021667]
[152.12329102 -208.41687012]
[144.62084961 -221.44619751]
[139.36541748 -235.53273010]
[136.50038147 -250.29217529]
[136.10391235 -265.32189941]
[138.18679810 -280.21188354]
[142.69224548 -294.55590820]
[149.49731445 -307.96264648]
[158.41638184 -320.06637573]
[169.20611572 -330.53686523]
[181.57215881 -339.08853149]
[195.17718506 -345.48800659]
[209.64999390 -349.56076050]
[224.59579468 -351.19567871]
[239.60684204 -350.34811401]
[254.27362061 -347.04125977]
[268.19601440 -341.36526489]
[280.99423218 -333.47503662]
[292.31906128 -323.58575439]
[301.86163330 -311.96725464]
[309.36157227 -298.93649292]
[314.61428833 -284.84896851]
[317.47647095 -270.08895874]
[317.87005615 -255.05914307]
[315.78427124 -240.16957092]
[311.27609253 -225.82641602]
[304.46841431 -212.42098999]
[295.54702759 -200.31898499]
[284.75527954 -189.85055542]
[272.38757324 -181.30128479]
[258.78134155 -174.90441895]
[244.30772400 -170.83445740]
[229.36161804 -169.20243835]
[214.35073853 -170.05287170]
[199.68458557 -173.36256409]
[194.02180481 -159.47253418]
[188.35900879 -145.58250427]
[189.35270691 -140.91114807]
[187.42240906 -135.56596375]
[182.31529236 -131.36727905]
[176.24145508 -117.65201569]
[178.16252136 -102.88182068]
[165.49990845 -93.39662170]
[159.42607117 -79.68135071]
[153.35223389 -65.96608734]
[147.27841187 -52.25082016]
[141.20457458 -38.53555298]
[136.37857056 -24.33309937]
[132.83889771 -9.75672340]
[138.67944336 6.79184246]
[125.85879517 20.00972748]
[122.53652954 34.63718796]
[119.21427155 49.26464844]
[123.94052124 63.38951111]
[113.33886719 75.13325500]
[110.01660919 89.76071930]
[113.96819305 103.17252350]
[104.61084747 113.56154633]
[101.28858948 128.18901062]
[97.96633148 142.81646729]
[94.64407349 157.44392395]
[91.32181549 172.07138062]
[87.99954987 186.69883728]
[84.67729187 201.32630920]
[94.29688263 189.81703186]
[106.73725891 181.43626404]
[121.01731873 176.84497070]
[136.01086426 176.40522766]
[150.53546143 180.15170288]
[163.44563293 187.78895569]
[173.72322083 198.71466064]
[180.55770874 212.06718445]
[183.41007996 226.79348755]
[182.05538940 241.73219299]
[176.60049438 255.70516968]
[167.47557068 267.61044312]
[155.40023804 276.50912476]
[141.32684326 281.69943237]
[126.36523438 282.77203369]
[111.69537354 279.64233398]
[98.47416687 272.55712891]
[87.74431610 262.07522583]
[80.35200500 249.02326965]
[76.88022614 234.43057251]
[77.60343170 219.44458008]
[70.13568878 232.45353699]
[62.66794586 245.46249390]
[55.20020676 258.47143555]
[55.04007721 274.29183960]
[41.99353409 281.47772217]
[36.53817368 295.45053101]
[33.21591568 310.07797241]
[29.89365578 324.70544434]
[26.57139778 339.33291626]
[23.35812378 353.98468018]
[31.71295166 367.13134766]
[28.35588646 381.96997070]
[15.77106953 389.85400391]
[12.66695976 404.52929688]
[9.56284904 419.20462036]
[6.45873928 433.87991333]
[3.35462928 448.55520630]
[17.07703400 454.76083374]
[29.14432335 463.77163696]
[38.99208832 475.16616821]
[46.15972519 488.41152954]
[50.31200027 502.88815308]
[51.25469589 517.91894531]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 204]
[22 203]
[23 202]
[24 201]
[25 200]
[28 197]
[30 196]
[31 195]
[32 194]
[33 193]
[54 192]
[56 190]
[57 189]
[58 188]
[59 187]
[60 166]
[61 165]
[62 164]
[63 163]
[64 162]
[65 161]
[66 160]
[68 158]
[69 157]
[71 155]
[72 154]
[73 153]
[76 151]
[77 150]
[90 149]
[91 148]
[92 147]
[93 146]
[94 145]
[96 143]
[97 142]
[98 139]
[99 138]
[100 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
