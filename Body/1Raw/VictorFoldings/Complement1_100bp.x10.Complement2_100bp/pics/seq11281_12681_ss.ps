%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUGxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[73.50959015 633.38586426]
[60.44467545 641.21069336]
[45.32585526 643.03857422]
[30.77256393 638.55285645]
[19.30624771 628.53070068]
[12.91351318 614.70849609]
[12.70194054 599.48107910]
[18.70818520 585.48663330]
[29.89163208 575.14978027]
[44.31467819 570.26147461]
[45.65291214 555.32128906]
[46.99114609 540.38110352]
[48.32938004 525.44091797]
[41.75840378 512.07409668]
[50.69604111 499.01922607]
[44.12506866 485.65243530]
[53.06270599 472.59756470]
[54.40093994 457.65737915]
[55.73917389 442.71719360]
[57.07740784 427.77700806]
[58.41564178 412.83682251]
[59.75387573 397.89663696]
[57.43334579 393.72241211]
[57.71040344 388.04614258]
[61.36086655 382.53381348]
[63.14333344 367.64010620]
[64.92579651 352.74636841]
[58.75571442 339.18984985]
[68.07807922 326.40689087]
[61.90800095 312.85037231]
[71.23036957 300.06741333]
[73.01283264 285.17370605]
[74.79529572 270.27996826]
[76.57776642 255.38626099]
[61.56861115 249.90541077]
[48.29044342 241.00181580]
[37.51020050 229.18490601]
[29.85168266 215.13252258]
[25.75947380 199.65200806]
[25.47312737 183.63389587]
[29.01314735 168.00059509]
[36.17957306 153.65330505]
[46.56328201 141.42012024]
[59.56932831 132.00813293]
[74.45103455 125.96263885]
[90.35287476 123.63552094]
[91.69110870 108.69533539]
[92.80675507 93.73688507]
[93.69956970 78.76348114]
[94.59238434 63.79007339]
[87.69020844 49.55383301]
[96.17132568 37.30965805]
[88.20937347 27.16224289]
[89.26126099 14.70923805]
[98.21961212 6.58061314]
[99.33525848 -8.37784004]
[100.45090485 -23.33629417]
[101.56655884 -38.29474640]
[99.08408356 -47.08537674]
[102.81179810 -53.46706772]
[104.15003204 -68.40724945]
[101.95220947 -73.14187622]
[101.80499268 -77.78208923]
[103.32904053 -81.56261444]
[105.89623260 -83.97960663]
[107.90024567 -98.84513092]
[109.90425873 -113.71066284]
[111.90827179 -128.57618713]
[113.91228485 -143.44171143]
[115.91629791 -158.30725098]
[106.96956635 -146.26747131]
[94.48275757 -137.95606995]
[79.92280579 -134.34942627]
[65.00020599 -135.87126160]
[51.46804810 -142.34278870]
[40.91607285 -153.00372314]
[34.58391571 -166.60166931]
[33.21548080 -181.53910828]
[36.97151947 -196.06123352]
[45.41078186 -208.46200562]
[57.54183197 -217.28456116]
[71.93952942 -221.49246216]
[86.91243744 -220.59136963]
[100.70156097 -214.68711853]
[111.68696594 -204.47335815]
[118.57809448 -191.14999390]
[120.56533051 -176.28065491]
[126.02068329 -190.25344849]
[131.47604370 -204.22624207]
[136.93139648 -218.19903564]
[142.38676453 -232.17184448]
[147.84211731 -246.14463806]
[153.29747009 -260.11743164]
[158.75282288 -274.09024048]
[162.72492981 -288.55474854]
[165.17065430 -303.35403442]
[167.61637878 -318.15328979]
[170.06210327 -332.95257568]
[172.50782776 -347.75183105]
[158.70336914 -353.82534790]
[146.84352112 -363.14172363]
[137.67381287 -375.11532593]
[131.77067566 -388.99349976]
[129.50515747 -403.90383911]
[131.01968384 -418.90908813]
[136.21907043 -433.06597900]
[144.77644348 -445.48458862]
[156.15390015 -455.38430786]
[169.63623047 -462.14279175]
[184.37594604 -465.33523560]
[199.44648743 -464.76095581]
[213.90049744 -460.45602417]
[226.82939148 -452.69107056]
[237.42044067 -441.95419312]
[245.00790405 -428.92034912]
[249.11480713 -414.40881348]
[249.48298645 -399.33184814]
[246.08930969 -384.63714600]
[239.14710999 -371.24847412]
[229.09275818 -360.00744629]
[216.55828857 -351.62066650]
[202.33164978 -346.61532593]
[187.30711365 -345.30612183]
[184.86137390 -330.50683594]
[182.41564941 -315.70758057]
[179.96992493 -300.90829468]
[177.52420044 -286.10903931]
[187.14826965 -297.61456299]
[200.40698242 -304.62930298]
[215.33345032 -306.11270142]
[229.71343994 -301.84469604]
[241.41375732 -292.45840454]
[248.69873047 -279.34622192]
[250.48768616 -264.45330811]
[246.51524353 -249.98886108]
[237.37066650 -238.09866333]
[224.41052246 -230.54652405]
[209.55737305 -228.45277405]
[195.01458740 -232.12799072]
[182.93949890 -241.02699280]
[175.12336731 -253.82965088]
[172.72563171 -268.63488770]
[167.27026367 -254.66207886]
[161.81491089 -240.68928528]
[156.35955811 -226.71647644]
[150.90420532 -212.74368286]
[145.44883728 -198.77088928]
[139.99348450 -184.79809570]
[134.53813171 -170.82528687]
[130.78182983 -156.30323792]
[128.77781677 -141.43769836]
[126.77379608 -126.57217407]
[124.76978302 -111.70664978]
[122.76576996 -96.84111786]
[120.76175690 -81.97559357]
[119.09021759 -67.06901550]
[117.75198364 -52.12883377]
[116.52500916 -37.17910004]
[115.40936279 -22.22064590]
[114.29370880 -7.26219177]
[113.17806244 7.69626188]
[121.63866425 23.07108498]
[111.14473724 38.20247650]
[118.11077881 51.36771393]
[109.56579590 64.68288422]
[108.67298126 79.65629578]
[107.78015900 94.62969971]
[110.28328705 99.23928833]
[110.02556610 104.92320251]
[106.63129425 110.03356934]
[105.29306030 124.97375488]
[118.69528961 129.25035095]
[130.90296936 136.22917175]
[141.37875366 145.59996033]
[149.66213989 156.94726562]
[155.38975525 169.76884460]
[158.31129456 183.49786377]
[158.30041504 197.52795410]
[155.36022949 211.24006653]
[149.62306213 224.02967834]
[141.34448242 235.33352661]
[130.89192200 244.65441895]
[118.72833252 251.58299255]
[105.39176178 255.81585693]
[91.47148132 257.16873169]
[89.68901825 272.06243896]
[87.90654755 286.95614624]
[86.12408447 301.84988403]
[92.16667175 316.47171021]
[82.97180176 328.18936157]
[89.01438904 342.81118774]
[79.81951904 354.52883911]
[78.03704834 369.42254639]
[76.25458527 384.31628418]
[74.69406128 399.23489380]
[73.35582733 414.17507935]
[72.01759338 429.11526489]
[70.67935944 444.05545044]
[69.34112549 458.99563599]
[68.00289154 473.93582153]
[74.47814941 488.37124634]
[65.63623047 500.35748291]
[72.11148071 514.79290771]
[63.26956558 526.77911377]
[61.93133163 541.71929932]
[60.59309769 556.65948486]
[59.25486374 571.59967041]
[72.57955933 578.97344971]
[81.74791718 591.13323975]
[85.17146301 605.97235107]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 207]
[11 206]
[12 205]
[13 204]
[15 202]
[17 200]
[18 199]
[19 198]
[20 197]
[21 196]
[22 195]
[25 194]
[26 193]
[27 192]
[29 190]
[31 188]
[32 187]
[33 186]
[34 185]
[46 171]
[47 170]
[48 167]
[49 166]
[50 165]
[52 163]
[55 161]
[56 160]
[57 159]
[58 158]
[60 157]
[61 156]
[65 155]
[66 154]
[67 153]
[68 152]
[69 151]
[70 150]
[87 149]
[88 148]
[89 147]
[90 146]
[91 145]
[92 144]
[93 143]
[94 142]
[95 127]
[96 126]
[97 125]
[98 124]
[99 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
