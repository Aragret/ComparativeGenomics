%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[81.34691620 750.38977051]
[67.78543854 743.95538330]
[54.86527252 736.31439209]
[42.69347382 727.53015137]
[31.37090492 717.67547607]
[20.99139214 706.83203125]
[11.64094353 695.08959961]
[3.39704204 682.54553223]
[-3.67199945 669.30377197]
[-9.50760365 655.47406006]
[-14.06141376 641.17102051]
[-17.29569435 626.51306152]
[-19.18364525 611.62176514]
[-19.70962143 596.62048340]
[-18.86926460 581.63354492]
[-16.66953850 566.78509521]
[-13.12867165 552.19818115]
[-8.27600479 537.99371338]
[-2.15174890 524.28936768]
[5.19334698 511.19876099]
[13.69841766 498.83029175]
[23.29298592 487.28646851]
[33.89754868 476.66299438]
[45.42422485 467.04785156]
[57.77750778 458.52072144]
[70.85502625 451.15231323]
[84.54841614 445.00360107]
[98.74420929 440.12561035]
[113.32476044 436.55874634]
[111.09964752 421.72470093]
[108.87452698 406.89065552]
[105.63450623 403.38192749]
[104.56426239 397.80056763]
[106.81084442 391.58248901]
[105.02837372 376.68875122]
[103.24591064 361.79504395]
[101.46343994 346.90133667]
[99.68097687 332.00759888]
[97.89851379 317.11389160]
[96.11604309 302.22018433]
[88.26268005 315.00003052]
[74.79321289 321.60104370]
[59.88129807 319.97781372]
[48.14756012 310.63333130]
[43.22782516 296.46307373]
[46.64652252 281.85784912]
[57.34433746 271.34326172]
[72.00643158 268.17733765]
[86.08959198 273.34112549]
[95.23010254 285.23474121]
[95.45343018 270.23641968]
[95.67675781 255.23806763]
[95.56509399 240.23849487]
[95.11848450 225.24513245]
[94.67188263 210.25178528]
[91.33061981 203.65953064]
[94.33191681 195.03225708]
[94.10858917 180.03392029]
[86.18265533 167.42324829]
[93.71363831 153.50941467]
[93.49031067 138.51107788]
[93.15533447 123.51480865]
[92.70872498 108.52146149]
[82.48668671 119.49916077]
[67.61576080 121.46272278]
[54.89473343 113.51441956]
[50.13948822 99.28811646]
[55.52405930 85.28788757]
[68.58669281 77.91445160]
[83.35532379 80.53883362]
[93.07859802 91.96295166]
[94.19424438 77.00449371]
[87.50478363 62.66707230]
[96.16726685 50.55052567]
[97.28291321 35.59207153]
[89.47292328 25.32723808]
[90.71009827 12.89127636]
[99.78847504 4.89692831]
[101.12670898 -10.04325676]
[94.65145874 -24.47868729]
[103.49337769 -36.46492004]
[104.83161163 -51.40510178]
[106.16984558 -66.34529114]
[107.50807953 -81.28547668]
[94.49927521 -73.81747437]
[80.49427032 -79.18962097]
[75.81703949 -93.44175720]
[83.91545868 -106.06774902]
[98.81967163 -107.76017761]
[109.54228210 -97.27300262]
[111.98801422 -112.07227325]
[106.60434723 -126.94932556]
[116.31327057 -138.24473572]
[118.64875793 -153.06179810]
[120.87387848 -167.89584351]
[123.09899139 -182.72988892]
[125.32411194 -197.56393433]
[119.71954346 -212.35917664]
[129.25921631 -223.79788208]
[131.48434448 -238.63192749]
[117.77655029 -244.97804260]
[106.41284180 -254.93006897]
[98.31441498 -267.68124390]
[94.13777924 -282.19784546]
[94.22150421 -297.30313110]
[98.55881500 -311.77258301]
[106.79810333 -324.43316650]
[118.27143860 -334.25860596]
[132.04873657 -340.45236206]
[147.01313782 -342.51235962]
[161.95152283 -340.27160645]
[175.65292358 -333.91171265]
[187.00663757 -323.94827271]
[195.09225464 -311.18899536]
[199.25430298 -296.66818237]
[199.15539551 -281.56298828]
[194.80355835 -267.09790039]
[186.55155945 -254.44560242]
[175.06834412 -244.63168335]
[161.28483582 -238.45176697]
[146.31837463 -236.40679932]
[144.09326172 -221.57276917]
[149.85697937 -207.83854675]
[140.15815735 -195.33880615]
[137.93302917 -180.50476074]
[135.70791626 -165.67071533]
[133.48280334 -150.83668518]
[135.59930420 -143.75555420]
[131.11254883 -135.79899597]
[136.67114258 -121.98049164]
[126.78728485 -109.62654877]
[124.34155273 -94.82727814]
[122.44826508 -79.94724274]
[121.11003113 -65.00705719]
[119.77179718 -50.06686783]
[118.43356323 -35.12668610]
[125.00453186 -21.75987625]
[116.06689453 -8.70502281]
[114.72866058 6.23516226]
[122.95941925 21.73424721]
[112.24137115 36.70772171]
[111.12571716 51.66617584]
[117.89498138 64.93367004]
[109.15270233 78.12014008]
[108.03704834 93.07859802]
[107.70207214 108.07485962]
[108.14868164 123.06820679]
[111.53221130 131.55287170]
[108.48864746 138.28775024]
[108.71197510 153.28608704]
[116.65387726 166.96952820]
[109.10692596 179.81059265]
[109.33025360 194.80892944]
[109.66522980 209.80517578]
[110.11183929 224.79853821]
[110.55844116 239.79188538]
[113.30331421 244.23178101]
[114.00089264 248.82164001]
[112.93688965 252.75646973]
[110.67509460 255.46139526]
[110.45176697 270.45974731]
[110.22843933 285.45806885]
[111.00976562 300.43771362]
[112.79222870 315.33142090]
[114.57469177 330.22515869]
[116.35716248 345.11886597]
[118.13962555 360.01257324]
[119.92209625 374.90631104]
[121.70455933 389.80001831]
[123.70857239 404.66555786]
[125.93369293 419.49957275]
[128.15881348 434.33361816]
[143.14419556 433.46560669]
[158.14642334 433.96386719]
[173.04118347 435.82431030]
[187.70506287 439.03149414]
[202.01652527 443.55889893]
[215.85699463 449.36892700]
[229.11177063 456.41351318]
[241.67103577 464.63421631]
[253.43070984 473.96298218]
[264.29333496 484.32244873]
[274.16891479 495.62677002]
[282.97558594 507.78234863]
[290.64041138 520.68835449]
[297.09988403 534.23791504]
[302.30041504 548.31878662]
[306.19897461 562.81414795]
[308.76321411 577.60400391]
[309.97189331 592.56579590]
[309.81503296 607.57543945]
[308.29388428 622.50866699]
[305.42108154 637.24169922]
[301.22042847 651.65246582]
[295.72671509 665.62152100]
[288.98547363 679.03314209]
[281.05258179 691.77612305]
[271.99374390 703.74493408]
[261.88406372 714.84045410]
[250.80728149 724.97058105]
[238.85520935 734.05151367]
[226.12686157 742.00793457]
[212.72773743 748.77392578]
[198.76885986 754.29345703]
[184.36590576 758.52069092]
[169.63819885 761.42071533]
[154.70780945 762.96942139]
[139.69844055 763.15405273]
[124.73446655 761.97296143]
[109.93989563 759.43609619]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 172]
[30 171]
[31 170]
[34 169]
[35 168]
[36 167]
[37 166]
[38 165]
[39 164]
[40 163]
[50 162]
[51 161]
[52 160]
[53 156]
[54 155]
[55 154]
[57 153]
[58 152]
[60 150]
[61 149]
[62 147]
[63 146]
[71 145]
[72 144]
[74 142]
[75 141]
[78 139]
[79 138]
[81 136]
[82 135]
[83 134]
[84 133]
[90 132]
[91 131]
[93 129]
[94 127]
[95 126]
[96 125]
[97 124]
[99 122]
[100 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
