%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[82.66359711 637.09527588]
[67.89268494 639.78564453]
[52.92147446 640.91723633]
[37.91399002 640.47766113]
[23.03467178 638.47180176]
[8.44653702 634.92156982]
[-5.69057369 629.86590576]
[-19.22176743 623.36016846]
[-31.99879074 615.47570801]
[-43.88164902 606.29882812]
[-54.74015045 595.93005371]
[-64.45532227 584.48309326]
[-72.92071533 572.08331299]
[-80.04357910 558.86657715]
[-85.74588013 544.97766113]
[-89.96513367 530.56878662]
[-92.65510559 515.79779053]
[-93.78633881 500.82656860]
[-93.34642792 485.81909180]
[-91.34019470 470.93981934]
[-87.78961945 456.35177612]
[-82.73360443 442.21478271]
[-76.22754669 428.68374634]
[-68.34273529 415.90692139]
[-59.16555023 404.02429199]
[-48.79655075 393.16601562]
[-37.34934235 383.45114136]
[-24.94934464 374.98605347]
[-11.73242188 367.86349487]
[2.15661550 362.16152954]
[16.56559181 357.94262695]
[31.33663177 355.25302124]
[46.30789948 354.12216187]
[61.31536102 354.56243896]
[63.31937408 339.69689941]
[65.32338715 324.83135986]
[57.79291153 308.98022461]
[69.16886902 294.50027466]
[62.99879074 280.94375610]
[72.32115936 268.16079712]
[74.10362244 253.26707458]
[75.88608551 238.37335205]
[77.66855621 223.47962952]
[79.45101929 208.58592224]
[81.23348236 193.69219971]
[75.06340027 180.13568115]
[84.38577271 167.35272217]
[86.16823578 152.45899963]
[79.99815369 138.90248108]
[89.32051849 126.11951447]
[91.10298920 111.22579956]
[85.77754974 98.29786682]
[94.00329590 86.99173737]
[95.78575897 72.09801483]
[94.78150177 57.13167572]
[91.02519989 42.60961533]
[80.07859039 31.18672943]
[84.38219452 16.92740631]
[79.87456512 2.62072039]
[74.62785339 -11.43175125]
[69.38113403 -25.48422241]
[64.13441467 -39.53669357]
[58.88769531 -53.58916473]
[46.81211090 -63.81123734]
[49.60889435 -78.44091034]
[44.36217499 -92.49337769]
[29.79531479 -88.84830475]
[14.91192341 -86.85715485]
[-0.10082312 -86.54497528]
[-15.05412292 -87.91567230]
[-29.75992393 -90.95202637]
[-44.03328323 -95.61585236]
[-57.69469833 -101.84848022]
[-70.57236481 -109.57154846]
[-82.50433350 -118.68791962]
[-93.34053802 -129.08294678]
[-102.94470978 -140.62590027]
[-111.19606781 -153.17163086]
[-117.99084473 -166.56233215]
[-123.24357605 -180.62962341]
[-126.88820648 -195.19659424]
[-128.87890625 -210.08004761]
[-129.19064331 -225.09280396]
[-127.81950378 -240.04606628]
[-124.78270721 -254.75177002]
[-120.11846161 -269.02499390]
[-113.88542175 -282.68621826]
[-106.16197205 -295.56365967]
[-97.04524231 -307.49536133]
[-86.64988708 -318.33123779]
[-75.10664368 -327.93508911]
[-62.56067657 -336.18606567]
[-49.16976547 -342.98043823]
[-35.10231018 -348.23275757]
[-20.53523064 -351.87695312]
[-5.65172100 -353.86718750]
[9.36104393 -354.17849731]
[24.31426239 -352.80688477]
[39.01988220 -349.76965332]
[53.29296112 -345.10498047]
[66.95400238 -338.87152100]
[79.83120728 -331.14770508]
[91.76262665 -322.03060913]
[102.59821320 -311.63494873]
[112.20169830 -300.09140015]
[120.45230865 -287.54519653]
[127.24627686 -274.15408325]
[132.49816895 -260.08645630]
[136.14193726 -245.51928711]
[138.13174438 -230.63571167]
[138.44258118 -215.62294006]
[137.07054138 -200.66975403]
[134.03286743 -185.96423340]
[129.36776733 -171.69128418]
[123.13390350 -158.03042603]
[115.40969086 -145.15345764]
[106.29224396 -133.22230530]
[95.89624786 -122.38703918]
[84.35242462 -112.78389740]
[71.80596924 -104.53366852]
[58.41464615 -97.74009705]
[63.66136551 -83.68762970]
[75.36167145 -74.47068024]
[72.94017029 -58.83588409]
[78.18688202 -44.78341293]
[83.43360138 -30.73093987]
[88.68032074 -16.67846870]
[93.92704010 -2.62599778]
[100.07368469 -16.30878830]
[113.52218628 -22.95241356]
[128.12406921 -19.51949692]
[137.20355225 -7.57952356]
[136.60961914 7.40871286]
[126.61380768 18.59279251]
[111.78606415 20.85950470]
[98.90425873 13.17110634]
[109.58219147 23.55527687]
[105.54726410 38.85331345]
[109.30355835 53.37537384]
[112.36177063 38.69043732]
[118.68103790 25.08650780]
[127.92986298 13.27722168]
[139.62306213 3.88206744]
[153.14726257 -2.60610199]
[167.79296875 -5.84693050]
[182.79193115 -5.67041111]
[197.35733032 -2.08580303]
[210.72506714 4.71885204]
[222.19392395 14.38659477]
[231.16227722 26.41027641]
[237.15962219 40.15915680]
[239.87138367 54.91199875]
[239.15530396 69.89489746]
[235.04895020 84.32187653]
[227.76771545 97.43613434]
[217.69357300 108.54971313]
[205.35498047 117.07962036]
[191.39921570 122.57839203]
[176.55836487 124.75758362]
[161.61093140 123.50286865]
[147.34103394 118.88006592]
[134.49725342 111.13169098]
[123.75335693 100.66419220]
[115.67292023 88.02668762]
[110.67948151 73.88048553]
[108.89701080 88.77420044]
[114.22245026 101.70213318]
[105.99670410 113.00826263]
[104.21424103 127.90198517]
[110.25682831 142.52380371]
[101.06195068 154.24147034]
[99.27948761 169.13517761]
[105.32207489 183.75700378]
[96.12720490 195.47467041]
[94.34473419 210.36837769]
[92.56227112 225.26210022]
[90.77980804 240.15582275]
[88.99733734 255.04953003]
[87.21487427 269.94326782]
[93.25746155 284.56506348]
[84.06259155 296.28274536]
[91.40644073 306.88607788]
[89.61520386 319.25439453]
[80.18891907 326.83538818]
[78.18489838 341.70092773]
[76.18088531 356.56643677]
[90.76919556 360.11596680]
[104.90654755 365.17092896]
[118.43806458 371.67599487]
[131.21546936 379.55990601]
[143.09877014 388.73620605]
[153.95777893 399.10443115]
[163.67350769 410.55090332]
[172.13949585 422.95028687]
[179.26300049 436.16668701]
[184.96597290 450.05532837]
[189.18592834 464.46398926]
[191.87663269 479.23483276]
[193.00859070 494.20602417]
[192.56939697 509.21350098]
[190.56388855 524.09289551]
[187.01402283 538.68109131]
[181.95869446 552.81835938]
[175.45329285 566.34967041]
[167.56910706 579.12689209]
[158.39250183 591.01000977]
[148.02403259 601.86871338]
[136.57728577 611.58416748]
[124.17770386 620.04986572]
[110.96112823 627.17309570]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 186]
[35 185]
[36 184]
[38 181]
[40 179]
[41 178]
[42 177]
[43 176]
[44 175]
[45 174]
[47 172]
[48 171]
[50 169]
[51 168]
[53 166]
[54 165]
[55 139]
[56 138]
[58 136]
[59 128]
[60 127]
[61 126]
[62 125]
[63 124]
[65 122]
[66 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
