%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCGxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[137.59056091 788.64672852]
[140.96299744 773.96429443]
[147.51847839 760.40063477]
[156.92822266 748.63604736]
[168.72023010 739.26074219]
[182.30300903 732.74493408]
[178.98074341 718.11749268]
[175.65847778 703.48999023]
[172.33622742 688.86254883]
[165.85502625 702.39007568]
[153.14538574 710.35656738]
[138.14550781 710.29351807]
[125.50329590 702.22045898]
[119.13605499 688.63891602]
[121.01674652 673.75726318]
[130.56262207 662.18682861]
[144.81579590 657.51269531]
[159.35975647 661.18328857]
[169.68801880 672.06146240]
[168.34977722 657.12127686]
[167.01155090 642.18109131]
[165.67330933 627.24090576]
[164.33506775 612.30072021]
[149.03047180 608.96972656]
[135.48750305 601.06256104]
[125.03794861 589.34283447]
[118.71367645 574.94976807]
[117.14476013 559.28753662]
[120.49672699 543.88806152]
[128.45320129 530.26135254]
[140.24569702 519.74737549]
[154.72782898 513.38433838]
[153.16729736 498.46575928]
[151.60678101 483.54714966]
[150.04626465 468.62854004]
[148.48573303 453.70993042]
[146.92521667 438.79132080]
[145.03192139 423.91128540]
[142.80680847 409.07723999]
[140.58168030 394.24319458]
[138.35656738 379.40914917]
[126.70082092 366.29006958]
[133.58276367 349.21023560]
[131.13702393 334.41098022]
[128.69129944 319.61169434]
[115.31465149 313.11529541]
[108.24470520 299.83074951]
[110.37778473 284.75415039]
[121.10338593 273.69668579]
[118.65766144 258.89739990]
[116.21192932 244.09814453]
[102.83528137 237.60174561]
[95.76533508 224.31716919]
[97.89841461 209.24058533]
[108.62401581 198.18312073]
[106.17829132 183.38385010]
[103.73255920 168.58457947]
[101.28683472 153.78530884]
[98.84111023 138.98603821]
[96.39537811 124.18676758]
[93.94965363 109.38749695]
[91.39382172 94.60684204]
[88.72802734 79.84562683]
[78.66133118 67.64020538]
[84.01357269 53.74046707]
[80.64044952 49.75686264]
[79.26972961 45.32127762]
[79.73826599 41.27213669]
[81.57377625 38.26161957]
[79.56976318 23.39608955]
[70.05811310 10.75334358]
[76.02567291 -2.89354157]
[74.02165985 -17.75906944]
[64.51000214 -30.40181541]
[70.47756958 -44.04870224]
[61.46109772 -50.13244629]
[57.36561966 -59.97151566]
[59.32039261 -70.22467041]
[66.44281006 -77.55161285]
[64.88228607 -92.47022247]
[63.32176590 -107.38882446]
[61.76124191 -122.30743408]
[49.19624329 -138.07078552]
[57.82917023 -155.37278748]
[55.82515717 -170.23832703]
[53.82114410 -185.10385132]
[51.81713104 -199.96937561]
[49.81311798 -214.83489990]
[34.81600189 -216.31250000]
[20.56408882 -221.20941162]
[7.82596540 -229.26153564]
[-2.71141791 -240.03466797]
[-10.47979259 -252.94779968]
[-15.06022167 -267.30456543]
[-16.20568657 -282.33068848]
[-13.85441494 -297.21585083]
[-8.13320637 -311.15731812]
[0.64939940 -323.40325928]
[12.01976871 -333.29321289]
[25.36471176 -340.29388428]
[39.96455383 -344.02767944]
[55.03194046 -344.29330444]
[69.75431061 -341.07638550]
[83.33769989 -334.55041504]
[95.04958344 -325.06735229]
[104.25833893 -313.13858032]
[110.46736145 -299.40740967]
[113.34180450 -284.61437988]
[112.72665405 -269.55718994]
[108.65507507 -255.04792786]
[101.34665680 -241.86901855]
[91.19551849 -230.73118591]
[78.74910736 -222.23509216]
[64.67864227 -216.83891296]
[66.68265533 -201.97338867]
[68.68666840 -187.10786438]
[70.69068909 -172.24234009]
[72.69470215 -157.37680054]
[81.34497070 -151.93751526]
[85.66405487 -142.43521118]
[84.00604248 -131.90757751]
[76.67984772 -123.86795044]
[78.24037170 -108.94934845]
[79.80089569 -94.03074646]
[81.36141968 -79.11213684]
[93.83343506 -64.33595276]
[85.34309387 -46.05271530]
[94.71141052 -34.47325134]
[88.88718414 -19.76308441]
[90.89119720 -4.89755535]
[100.25951385 6.68190908]
[94.43528748 21.39207649]
[96.43930817 36.25760269]
[98.77479553 51.07467270]
[108.65081024 62.22426987]
[103.48924255 77.17983246]
[106.15503693 91.94104767]
[110.57276917 98.68316650]
[108.74892426 106.94177246]
[111.19464874 121.74104309]
[113.64038086 136.54031372]
[116.08610535 151.33958435]
[118.53182983 166.13885498]
[120.97756195 180.93812561]
[123.42328644 195.73739624]
[137.13616943 202.75616455]
[144.00646973 216.34484863]
[141.58651733 231.19770813]
[131.01119995 241.65242004]
[133.45692444 256.45169067]
[135.90266418 271.25094604]
[149.61553955 278.26971436]
[156.48583984 291.85839844]
[154.06588745 306.71127319]
[143.49057007 317.16598511]
[145.93629456 331.96524048]
[148.38203430 346.76452637]
[158.39373779 354.89648438]
[160.12611389 367.27316284]
[153.19061279 377.18405151]
[155.41572571 392.01809692]
[157.64083862 406.85214233]
[159.86596680 421.68618774]
[163.11898804 425.76843262]
[164.35704041 430.24285889]
[163.76815796 434.27627563]
[161.84381104 437.23080444]
[163.40434265 452.14941406]
[164.96485901 467.06802368]
[166.52539062 481.98660278]
[168.08590698 496.90521240]
[169.64643860 511.82382202]
[183.78143311 514.56103516]
[196.55773926 521.16394043]
[206.94351196 531.08923340]
[214.10279846 543.52557373]
[217.46287537 557.46008301]
[216.76002502 571.76080322]
[212.06019592 585.26861572]
[203.75294495 596.89123535]
[192.51914978 605.69134521]
[179.27525330 610.96246338]
[180.61349487 625.90264893]
[181.95172119 640.84283447]
[183.28996277 655.78302002]
[184.62820435 670.72320557]
[186.96368408 685.54028320]
[190.28594971 700.16778564]
[193.60820007 714.79522705]
[196.93046570 729.42266846]
[211.99523926 729.43194580]
[226.68014526 732.79370117]
[240.24858093 739.33929443]
[252.01995850 748.74047852]
[261.40383911 760.52569580]
[267.92953491 774.10369873]
[271.26971436 788.79351807]
[271.25680542 803.85833740]
[267.89151001 818.54241943]
[261.34259033 832.10925293]
[251.93853760 843.87835693]
[240.15109253 853.25939941]
[226.57147217 859.78179932]
[211.88082886 863.11840820]
[196.81605530 863.10186768]
[182.13278198 859.73297119]
[168.56752014 853.18078613]
[156.80070496 843.77386475]
[147.42253113 831.98413086]
[140.90342712 818.40295410]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 190]
[7 189]
[8 188]
[9 187]
[19 186]
[20 185]
[21 184]
[22 183]
[23 182]
[32 172]
[33 171]
[34 170]
[35 169]
[36 168]
[37 167]
[38 163]
[39 162]
[40 161]
[41 160]
[43 157]
[44 156]
[45 155]
[49 151]
[50 150]
[51 149]
[55 145]
[56 144]
[57 143]
[58 142]
[59 141]
[60 140]
[61 139]
[62 137]
[63 136]
[65 134]
[69 133]
[70 132]
[72 130]
[73 129]
[75 127]
[79 125]
[80 124]
[81 123]
[82 122]
[84 118]
[85 117]
[86 116]
[87 115]
[88 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
