%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[0.26892909 860.69110107]
[-14.63824272 862.38061523]
[-29.60686302 863.38989258]
[-44.60591125 863.71685791]
[-59.60429382 863.36077881]
[-74.57093048 862.32244873]
[-89.47479248 860.60394287]
[-104.28499603 858.20892334]
[-118.97084045 855.14233398]
[-133.50189209 851.41046143]
[-147.84802246 847.02105713]
[-161.97950745 841.98327637]
[-175.86706543 836.30749512]
[-189.48188782 830.00555420]
[-202.79577637 823.09039307]
[-215.78112793 815.57647705]
[-228.41102600 807.47937012]
[-240.65928650 798.81573486]
[-252.50054932 789.60363770]
[-263.91024780 779.86212158]
[-274.86474609 769.61138916]
[-285.34130859 758.87268066]
[-295.31826782 747.66827393]
[-304.77493286 736.02142334]
[-313.69168091 723.95617676]
[-322.05004883 711.49761963]
[-329.83270264 698.67150879]
[-337.02349854 685.50445557]
[-343.60757446 672.02380371]
[-349.57125854 658.25744629]
[-354.90219116 644.23388672]
[-359.58929443 629.98229980]
[-363.62292480 615.53210449]
[-366.99462891 600.91326904]
[-369.69750977 586.15612793]
[-371.72592163 571.29125977]
[-373.07565308 556.34948730]
[-373.74389648 541.36181641]
[-373.72930908 526.35919189]
[-373.03189087 511.37280273]
[-371.65310669 496.43368530]
[-369.59579468 481.57281494]
[-366.86422729 466.82095337]
[-363.46408081 452.20874023]
[-359.40234375 437.76641846]
[-354.68753052 423.52392578]
[-349.32931519 409.51077271]
[-343.33889771 395.75604248]
[-336.72860718 382.28820801]
[-329.51220703 369.13519287]
[-321.70462036 356.32424927]
[-313.32202148 343.88195801]
[-304.38183594 331.83410645]
[-294.90252686 320.20562744]
[-284.90380859 309.02066040]
[-274.40634155 298.30236816]
[-263.43194580 288.07296753]
[-252.00332642 278.35366821]
[-240.14416504 269.16461182]
[-227.87907410 260.52484131]
[-215.23344421 252.45227051]
[-202.23350525 244.96362305]
[-188.90618896 238.07441711]
[-175.27912903 231.79895020]
[-161.38056946 226.15020752]
[-147.23930359 221.13990784]
[-132.88465881 216.77844238]
[-118.34638214 213.07484436]
[-103.65459442 210.03678894]
[-88.83976746 207.67056274]
[-73.93258667 205.98109436]
[-58.96395874 204.97186279]
[-43.96491241 204.64497375]
[-28.96653175 205.00109863]
[-13.99990082 206.03950500]
[0.90395606 207.75802612]
[15.71414948 210.15312195]
[30.39998245 213.21980286]
[44.93101883 216.95173645]
[59.27713776 221.34117126]
[64.31405640 207.21214294]
[69.35096741 193.08311462]
[74.38788605 178.95408630]
[79.42480469 164.82505798]
[83.28910828 150.33135986]
[85.95490265 135.57014465]
[88.62069702 120.80892944]
[91.28649139 106.04771423]
[93.29050446 91.18218231]
[94.62873840 76.24199677]
[95.96697235 61.30181122]
[97.30520630 46.36162949]
[98.64344025 31.42144203]
[99.98168182 16.48125839]
[100.76300049 1.50162041]
[100.98632812 -13.49671650]
[101.20965576 -28.49505424]
[101.43298340 -43.49339294]
[87.35236359 -49.15913391]
[76.27195740 -59.53164291]
[69.69028473 -73.20812225]
[68.49748230 -88.33894348]
[72.85484314 -102.87777710]
[82.17309570 -114.85837555]
[95.19200134 -122.66046143]
[110.15087128 -125.22885895]
[125.02663422 -122.21621704]
[137.80747986 -114.02996826]
[146.76487732 -101.77724457]
[150.68743896 -87.11511993]
[149.04466248 -72.02652740]
[142.05871582 -58.55206680]
[130.67439270 -48.51406097]
[116.43132019 -43.27006531]
[116.20799255 -28.27172661]
[115.98466492 -13.27338886]
[115.76133728 1.72494817]
[128.17866516 -6.68991518]
[142.54443359 -2.37429595]
[148.26873779 11.49049187]
[141.13183594 24.68384361]
[126.39477539 27.48011017]
[114.92185974 17.81949234]
[113.58362579 32.75967789]
[112.24539185 47.69986343]
[110.90715790 62.64004898]
[109.56892395 77.58023071]
[108.23069000 92.52041626]
[120.40572357 83.75864410]
[135.23184204 86.03598022]
[144.21597290 98.04785919]
[142.21159363 112.91333771]
[130.36692810 122.11679840]
[115.46710205 120.38607025]
[106.04771423 108.71350861]
[103.38191223 123.47472382]
[100.71611786 138.23594666]
[98.05032349 152.99716187]
[108.57519531 142.30944824]
[122.83293152 137.64929199]
[137.63830566 140.05778503]
[149.68377686 148.99684143]
[156.27833557 162.46946716]
[155.94874573 177.46585083]
[148.76866150 190.63574219]
[136.34210205 199.03697205]
[121.44520569 200.79267883]
[107.40597534 195.51063538]
[97.36080933 184.37084961]
[93.55383301 169.86196899]
[88.51691437 183.99099731]
[83.47999573 198.12002563]
[78.44308472 212.24905396]
[73.40616608 226.37809753]
[87.29373932 232.05380249]
[100.90859222 238.35571289]
[114.22250366 245.27076721]
[127.20787811 252.78463745]
[139.83781433 260.88174438]
[152.08612061 269.54531860]
[163.92741394 278.75735474]
[175.33714294 288.49884033]
[186.29167175 298.74951172]
[196.76831055 309.48815918]
[206.74530029 320.69253540]
[216.20201111 332.33938599]
[225.11880493 344.40457153]
[233.47721863 356.86312866]
[241.25991821 369.68917847]
[248.45077515 382.85617065]
[255.03489685 396.33682251]
[260.99862671 410.10314941]
[266.32962036 424.12667847]
[271.01678467 438.37829590]
[275.05047607 452.82846069]
[278.42224121 467.44726562]
[281.12518311 482.20437622]
[283.15362549 497.06924438]
[284.50341797 512.01098633]
[285.17175293 526.99871826]
[285.15722656 542.00134277]
[284.45986938 556.98773193]
[283.08111572 571.92681885]
[281.02386475 586.78771973]
[278.29235840 601.53955078]
[274.89227295 616.15179443]
[270.83062744 630.59417725]
[266.11584473 644.83666992]
[260.75769043 658.84985352]
[254.76730347 672.60461426]
[248.15707397 686.07244873]
[240.94071960 699.22546387]
[233.13317871 712.03643799]
[224.75065613 724.47875977]
[215.81050110 736.52667236]
[206.33125305 748.15521240]
[196.33256531 759.34020996]
[185.83515930 770.05853271]
[174.86079407 780.28796387]
[163.43220520 790.00732422]
[151.57308960 799.19641113]
[139.30802917 807.83624268]
[126.66242981 815.90887451]
[113.66252136 823.39758301]
[100.33523560 830.28680420]
[86.70819855 836.56237793]
[72.80966187 842.21112061]
[58.66841888 847.22149658]
[44.31378937 851.58300781]
[29.77552414 855.28668213]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[80 154]
[81 153]
[82 152]
[83 151]
[84 150]
[85 138]
[86 137]
[87 136]
[88 135]
[89 128]
[90 127]
[91 126]
[92 125]
[93 124]
[94 123]
[95 117]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
