%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[134.58360291 616.23895264]
[129.75036621 602.02008057]
[126.63280487 587.32934570]
[125.27468872 572.37298584]
[125.69507599 557.36102295]
[127.88806915 542.50415039]
[131.82287598 528.01092529]
[137.44425964 514.08477783]
[144.67330933 500.92132568]
[153.40853882 488.70526123]
[163.52731323 477.60812378]
[174.88760376 467.78567505]
[187.32989502 459.37582397]
[200.67953491 452.49661255]
[195.43281555 438.44415283]
[190.18609619 424.39166260]
[187.69473267 423.10668945]
[185.56224060 420.75738525]
[184.19657898 417.47558594]
[183.95045471 413.53808594]
[185.07272339 409.34350586]
[180.67172241 395.00366211]
[176.27073669 380.66381836]
[171.86973572 366.32394409]
[167.46873474 351.98410034]
[163.06773376 337.64425659]
[158.66673279 323.30441284]
[154.26573181 308.96456909]
[143.13478088 299.06753540]
[146.48258972 283.60461426]
[142.08158875 269.26473999]
[137.68058777 254.92491150]
[124.20770264 243.67999268]
[128.47985840 225.76826477]
[123.86585236 211.49552917]
[119.25183868 197.22279358]
[116.29596710 195.30052185]
[114.12431335 191.85102844]
[113.44452667 187.25851440]
[114.76593018 182.20866394]
[110.79383087 167.74414062]
[106.82173157 153.27961731]
[102.84963989 138.81509399]
[98.87754059 124.35057068]
[94.90544891 109.88604736]
[86.56420135 122.35295105]
[71.87805939 125.40537262]
[59.25991058 117.29473877]
[55.93800354 102.66719818]
[63.81527328 89.90206909]
[78.37926483 86.31179047]
[91.28649139 93.95228577]
[88.62069702 79.19107056]
[85.95490265 64.42985535]
[83.28910828 49.66863632]
[80.62331390 34.90742111]
[77.95751953 20.14620209]
[65.73986053 6.36903000]
[72.31350708 -9.90223598]
[62.06621170 -21.95642471]
[67.21091461 -35.93431091]
[64.32564545 -50.65420151]
[61.44037247 -65.37409210]
[58.55509949 -80.09398651]
[48.30780029 -92.14817047]
[53.45250320 -106.12606049]
[50.56723022 -120.84594727]
[47.68196106 -135.56584167]
[44.79668808 -150.28573608]
[34.54938889 -162.33992004]
[39.69409180 -176.31781006]
[36.80881882 -191.03768921]
[33.92354584 -205.75758362]
[18.94798279 -204.63117981]
[3.94430637 -205.28392029]
[-10.87685108 -207.70664978]
[-25.30742455 -211.86537170]
[-39.14483261 -217.70167542]
[-52.19481659 -225.13365173]
[-64.27417755 -234.05696106]
[-75.21334076 -244.34632874]
[-84.85873413 -255.85731506]
[-93.07495880 -268.42831421]
[-99.74665833 -281.88284302]
[-104.78018951 -296.03204346]
[-108.10487366 -310.67727661]
[-109.67404938 -325.61294556]
[-109.46567535 -340.62936401]
[-107.48269653 -355.51574707]
[-103.75292969 -370.06307983]
[-98.32874298 -384.06719971]
[-91.28628540 -397.33142090]
[-82.72442627 -409.66961670]
[-72.76335144 -420.90853882]
[-61.54290390 -430.89041138]
[-49.22060013 -439.47512817]
[-35.96942520 -446.54214478]
[-21.97540665 -451.99224854]
[-7.43499804 -455.74896240]
[7.44767666 -457.75952148]
[22.46368790 -457.99572754]
[37.40223312 -456.45422363]
[52.05360031 -453.15667725]
[66.21210480 -448.14938354]
[79.67898560 -441.50259399]
[92.26518250 -433.30969238]
[103.79401398 -423.68563843]
[114.10363770 -412.76556396]
[123.04930115 -400.70275879]
[130.50544739 -387.66656494]
[136.36738586 -373.83996582]
[140.55282593 -359.41714478]
[143.00300598 -344.60049438]
[143.68354797 -329.59805298]
[142.58488464 -314.62042236]
[139.72244263 -299.87786865]
[135.13641357 -285.57736206]
[128.89115906 -271.91964722]
[121.07436371 -259.09646606]
[111.79576874 -247.28782654]
[101.18562317 -236.65950012]
[89.39287567 -227.36070251]
[76.58308411 -219.52198792]
[62.93608093 -213.25335693]
[48.64344025 -208.64285278]
[51.52871323 -193.92297363]
[54.41398239 -179.20307922]
[64.45491028 -168.20175171]
[59.51657867 -153.17100525]
[62.40185165 -138.45111084]
[65.28712463 -123.73122406]
[68.17239380 -109.01132965]
[78.21331787 -98.01000977]
[73.27498627 -82.97925568]
[76.16026306 -68.25936127]
[79.04553223 -53.53947449]
[81.93080902 -38.81958389]
[91.97173309 -27.81826019]
[87.03340149 -12.78750896]
[96.89421082 -5.78100920]
[99.41844940 6.45876217]
[92.71873474 17.48040771]
[95.38452911 32.24162292]
[98.05032349 47.00284195]
[100.71611786 61.76405716]
[103.38191223 76.52527618]
[106.04771423 91.28649139]
[109.36997223 105.91395569]
[113.34206390 120.37847900]
[117.31416321 134.84300232]
[121.28626251 149.30752563]
[125.25835419 163.77204895]
[129.23045349 178.23657227]
[133.52458191 192.60877991]
[138.13858032 206.88151550]
[142.75259399 221.15425110]
[153.85983276 227.71109009]
[157.40901184 239.69386292]
[152.02044678 250.52391052]
[156.42143250 264.86376953]
[160.82243347 279.20361328]
[172.26818848 290.12631226]
[168.60559082 304.56356812]
[173.00659180 318.90341187]
[177.40757751 333.24325562]
[181.80857849 347.58309937]
[186.20957947 361.92297363]
[190.61058044 376.26281738]
[195.01158142 390.60266113]
[199.41256714 404.94250488]
[204.23857117 419.14495850]
[209.48529053 433.19741821]
[214.73200989 447.24990845]
[229.32351685 443.69680786]
[244.23283386 441.89450073]
[259.25067139 441.86825562]
[274.16622925 443.61843872]
[288.77005005 447.12045288]
[302.85717773 452.32519531]
[316.22982788 459.15957642]
[328.70025635 467.52764893]
[340.09344482 477.31192017]
[350.24938965 488.37506104]
[359.02554321 500.56173706]
[366.29873657 513.70086670]
[371.96679688 527.60803223]
[375.95022583 542.08801270]
[378.19305420 556.93743896]
[378.66378784 571.94793701]
[377.35586548 586.90875244]
[374.28762817 601.60980225]
[369.50210571 615.84484863]
[363.06655884 629.41394043]
[355.07125854 642.12658691]
[345.62850952 653.80438232]
[334.87081909 664.28332520]
[322.94924927 673.41632080]
[310.03112793 681.07525635]
[296.29782104 687.15246582]
[281.94210815 691.56274414]
[267.16555786 694.24407959]
[252.17558289 695.15893555]
[237.18261719 694.29437256]
[222.39715576 691.66259766]
[208.02673340 687.30053711]
[194.27311707 681.26940918]
[181.32937622 673.65393066]
[169.37722778 664.56091309]
[158.58444214 654.11810303]
[149.10255432 642.47210693]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 173]
[15 172]
[16 171]
[21 170]
[22 169]
[23 168]
[24 167]
[25 166]
[26 165]
[27 164]
[28 163]
[30 161]
[31 160]
[32 159]
[34 156]
[35 155]
[36 154]
[40 153]
[41 152]
[42 151]
[43 150]
[44 149]
[45 148]
[52 147]
[53 146]
[54 145]
[55 144]
[56 143]
[57 142]
[59 139]
[61 137]
[62 136]
[63 135]
[64 134]
[66 132]
[67 131]
[68 130]
[69 129]
[71 127]
[72 126]
[73 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
