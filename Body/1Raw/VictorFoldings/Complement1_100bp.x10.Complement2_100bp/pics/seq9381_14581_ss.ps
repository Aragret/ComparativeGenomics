%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[135.56602478 802.09582520]
[120.89460754 798.95996094]
[106.38765717 795.13470459]
[92.07753754 790.62860107]
[77.99617767 785.45178223]
[64.17500305 779.61572266]
[50.64485931 773.13348389]
[37.43592453 766.01953125]
[24.57768440 758.28967285]
[12.09882450 749.96130371]
[0.02719261 741.05285645]
[-11.61027527 731.58428955]
[-22.78761101 721.57672119]
[-33.47987366 711.05249023]
[-43.66320801 700.03503418]
[-53.31488419 688.54901123]
[-62.41336823 676.61993408]
[-70.93836212 664.27453613]
[-78.87083435 651.54034424]
[-86.19309235 638.44573975]
[-92.88879395 625.01995850]
[-98.94300079 611.29290771]
[-104.34220123 597.29534912]
[-109.07434845 583.05834961]
[-113.12888336 568.61383057]
[-116.49675751 553.99389648]
[-119.17045593 539.23126221]
[-121.14401245 524.35882568]
[-122.41302490 509.40979004]
[-122.97466278 494.41748047]
[-122.82766724 479.41540527]
[-121.97236633 464.43698120]
[-120.41067505 449.51568604]
[-118.14608002 434.68475342]
[-115.18362427 419.97735596]
[-111.52992249 405.42623901]
[-107.19313049 391.06390381]
[-102.18292236 376.92239380]
[-96.51047516 363.03329468]
[-90.18845367 349.42755127]
[-83.23096466 336.13552856]
[-75.65352631 323.18688965]
[-67.47305298 310.61056519]
[-58.70779037 298.43460083]
[-49.37730408 286.68612671]
[-39.50241470 275.39138794]
[-29.10515594 264.57562256]
[-18.20872498 254.26289368]
[-6.83743858 244.47627258]
[4.98332930 235.23756409]
[17.22720146 226.56738281]
[29.86685944 218.48509216]
[42.87409592 211.00872803]
[56.21988678 204.15495300]
[69.87445831 197.93908691]
[83.80732727 192.37498474]
[97.98742676 187.47505188]
[112.38309479 183.25024414]
[108.84342194 168.67385864]
[105.30374908 154.09748840]
[101.76407623 139.52111816]
[98.22440338 124.94473267]
[94.68473053 110.36836243]
[89.76004791 124.53690338]
[79.23707581 135.22648621]
[65.14763641 140.37310791]
[50.21218872 138.98304749]
[37.31451797 131.32472229]
[28.94497490 118.87679291]
[26.71957970 104.04279327]
[31.06802559 89.68692017]
[41.15069199 78.58107758]
[55.02077866 72.86962128]
[70.00018311 73.65534973]
[83.19662476 80.78654480]
[92.06258392 92.88745880]
[91.16976929 77.91405487]
[90.27694702 62.94065094]
[89.38413239 47.96724319]
[88.49131775 32.99383926]
[87.59850311 18.02043152]
[86.70568848 3.04702616]
[85.81287384 -11.92637920]
[84.92005157 -26.89978600]
[84.02723694 -41.87319183]
[73.28664398 -31.40229607]
[58.28673553 -31.45511246]
[47.62014389 -42.00138092]
[47.39717865 -56.99972534]
[57.74555969 -67.85840607]
[72.73726654 -68.35708618]
[83.78396606 -58.21094894]
[84.23057556 -73.20429993]
[84.67717743 -88.19764709]
[85.12378693 -103.19100189]
[85.57038879 -118.18434906]
[86.01699829 -133.17770386]
[86.46360016 -148.17105103]
[86.91020966 -163.16439819]
[73.03148651 -169.36517334]
[62.58578491 -180.40852356]
[57.16599655 -194.61044312]
[57.59859848 -209.80522156]
[63.81761932 -223.67576599]
[74.87471008 -234.10693359]
[89.08374023 -239.50804138]
[104.27793884 -239.05545044]
[118.14029694 -232.81819153]
[128.55690002 -221.74739075]
[133.93931580 -207.53126526]
[133.46673584 -192.33767700]
[127.21124268 -178.48353577]
[116.12674713 -168.08149719]
[101.90355682 -162.71778870]
[101.45695496 -147.72444153]
[101.01034546 -132.73109436]
[100.56374359 -117.73774719]
[100.11713409 -102.74439240]
[99.67053223 -87.75104523]
[99.22392273 -72.75769806]
[98.77731323 -57.76434326]
[99.00064087 -42.76600647]
[99.89346313 -27.79260063]
[100.78627777 -12.81919575]
[101.67909241 2.15421033]
[102.57190704 17.12761688]
[103.46472168 32.10102081]
[104.35753632 47.07442856]
[105.25035858 62.04783249]
[106.14317322 77.02124023]
[107.03598785 91.99464417]
[109.26110077 106.82868958]
[112.80077362 121.40506744]
[116.34044647 135.98144531]
[119.88011932 150.55781555]
[123.41979218 165.13418579]
[126.95946503 179.71057129]
[141.68948364 176.86260986]
[156.53756714 174.71343994]
[171.47056580 173.26786804]
[186.45516968 172.52911377]
[201.45796204 172.49880981]
[216.44543457 173.17704773]
[231.38414001 174.56231689]
[246.24078369 176.65150452]
[260.98217773 179.43995667]
[275.57543945 182.92144775]
[289.98803711 187.08822632]
[304.18774414 191.93096924]
[318.14291382 197.43888855]
[331.82241821 203.59970093]
[345.19573975 210.39962769]
[358.23300171 217.82353210]
[370.90512085 225.85481262]
[383.18380737 234.47558594]
[395.04171753 243.66659546]
[406.45236206 253.40731812]
[417.39025879 263.67605591]
[427.83099365 274.44985962]
[437.75131226 285.70468140]
[447.12905884 297.41546631]
[455.94332886 309.55603027]
[464.17440796 322.09930420]
[471.80395508 335.01727295]
[478.81494141 348.28115845]
[485.19174194 361.86129761]
[490.92010498 375.72744751]
[495.98727417 389.84866333]
[500.38189697 404.19338989]
[504.09420776 418.72967529]
[507.11587524 433.42501831]
[509.44021606 448.24670410]
[511.06204224 463.16159058]
[511.97769165 478.13644409]
[512.18511963 493.13781738]
[511.68389893 508.13223267]
[510.47512817 523.08630371]
[508.56152344 537.96655273]
[505.94732666 552.73986816]
[502.63839722 567.37322998]
[498.64208984 581.83398438]
[493.96734619 596.08990479]
[488.62460327 610.10913086]
[482.62576294 623.86041260]
[475.98422241 637.31311035]
[468.71478271 650.43713379]
[460.83367920 663.20318604]
[452.35848999 675.58282471]
[443.30816650 687.54840088]
[433.70285034 699.07330322]
[423.56399536 710.13165283]
[412.91421509 720.69891357]
[401.77728271 730.75146484]
[390.17807007 740.26684570]
[378.14242554 749.22381592]
[365.69723511 757.60241699]
[352.87023926 765.38397217]
[339.69009399 772.55108643]
[326.18615723 779.08782959]
[312.38861084 784.97949219]
[298.32824707 790.21307373]
[284.03637695 794.77673340]
[269.54498291 798.66046143]
[254.88630676 801.85546875]
[240.09312439 804.35467529]
[225.19842529 806.15246582]
[210.23544312 807.24487305]
[195.23756409 807.62945557]
[180.23825073 807.30529785]
[165.27098083 806.27319336]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 137]
[59 136]
[60 135]
[61 134]
[62 133]
[63 132]
[76 131]
[77 130]
[78 129]
[79 128]
[80 127]
[81 126]
[82 125]
[83 124]
[84 123]
[85 122]
[92 121]
[93 120]
[94 119]
[95 118]
[96 117]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
