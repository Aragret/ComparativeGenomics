%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[206.34368896 594.92065430]
[200.28804016 581.18786621]
[195.38714600 567.00195312]
[191.67445374 552.45977783]
[189.17532349 537.66064453]
[187.90686035 522.70568848]
[187.87770081 507.69705200]
[189.08805847 492.73730469]
[191.52964783 477.92858887]
[195.18580627 463.37207031]
[200.03155518 449.16720581]
[206.03379822 435.41101074]
[213.15150452 422.19747925]
[221.33609009 409.61685181]
[230.53163147 397.75506592]
[240.67529297 386.69317627]
[251.69781494 376.50674438]
[263.52386475 367.26531982]
[255.29507446 354.72390747]
[247.06626892 342.18252563]
[238.83746338 329.64111328]
[230.60864258 317.09973145]
[222.37983704 304.55831909]
[216.08218384 300.69033813]
[214.12350464 291.76837158]
[206.08232117 279.10583496]
[191.38890076 281.75775146]
[176.75996399 278.57348633]
[164.43135071 270.00787354]
[156.29953003 257.34054565]
[153.62983704 242.48503113]
[156.85978699 227.69953918]
[165.52757263 215.24382019]
[157.48638916 202.58128357]
[149.44522095 189.91876221]
[141.40405273 177.25624084]
[133.36288452 164.59371948]
[125.32170105 151.93118286]
[117.28053284 139.26866150]
[109.05172729 126.72726440]
[100.63710785 114.30976868]
[88.14216614 108.03536987]
[86.94539642 94.10485077]
[78.53078461 81.68735504]
[70.11616516 69.26985931]
[61.70154190 56.85236359]
[53.28692627 44.43486786]
[44.68836212 32.14402771]
[35.90775681 19.98257446]
[27.12715530 7.82111788]
[22.36418343 5.68542242]
[19.21192169 2.27711797]
[17.88539505 -1.57714951]
[18.24038315 -5.08518648]
[10.01157570 -17.62658691]
[1.78276742 -30.16798782]
[-12.25693607 -37.46163559]
[-12.76984882 -52.34740829]
[-20.99865723 -64.88880920]
[-34.41072083 -58.13497543]
[-48.50525665 -52.95405960]
[-63.09850693 -49.41360474]
[-78.00022125 -47.55976486]
[-93.01612091 -47.41670990]
[-107.95044708 -48.98630524]
[-122.60849762 -52.24809265]
[-136.79917908 -57.15953827]
[-150.33749390 -63.65662003]
[-163.04692078 -71.65463257]
[-174.76177979 -81.04930115]
[-185.32934570 -91.71815491]
[-194.61183167 -103.52209473]
[-202.48825073 -116.30723572]
[-208.85589600 -129.90690613]
[-213.63175964 -144.14378357]
[-216.75357056 -158.83229065]
[-218.18063354 -173.78089905]
[-217.89434814 -188.79475403]
[-215.89845276 -203.67811584]
[-212.21896362 -218.23692322]
[-206.90382385 -232.28140259]
[-200.02236938 -245.62843323]
[-191.66429138 -258.10400391]
[-181.93855286 -269.54550171]
[-170.97195435 -279.80374146]
[-158.90747070 -288.74499512]
[-145.90237427 -296.25268555]
[-132.12623596 -302.22894287]
[-117.75862885 -306.59585571]
[-102.98688507 -309.29647827]
[-88.00357819 -310.29559326]
[-73.00405121 -309.58020020]
[-58.18383789 -307.15963745]
[-43.73616791 -303.06542969]
[-29.84938431 -297.35098267]
[-16.70453644 -290.09075928]
[-4.47299147 -281.37945557]
[6.68578577 -271.33059692]
[16.62631798 -260.07519531]
[25.21901131 -247.76004028]
[32.35184097 -234.54563904]
[37.93181610 -220.60426331]
[41.88618851 -206.11769104]
[44.16341019 -191.27478027]
[44.73378754 -176.26904297]
[43.58988571 -161.29608154]
[40.74662018 -146.55113220]
[36.24105453 -132.22640991]
[30.13193321 -118.50867462]
[22.49889755 -105.57675934]
[13.44146061 -93.59925079]
[3.07770514 -82.73231506]
[-8.45725632 -73.11761475]
[-0.22844836 -60.57621384]
[13.22267532 -54.17961121]
[14.32416821 -38.39679337]
[22.55297470 -25.85539436]
[30.78178406 -13.31399441]
[39.28860855 -0.95948529]
[48.06921387 11.20197010]
[56.84981537 23.36342621]
[61.33819962 24.99543571]
[64.84901428 29.46434975]
[65.70442200 36.02024841]
[74.11904144 48.43774414]
[82.53366089 60.85523987]
[90.94827271 73.27273560]
[99.36289215 85.69023132]
[111.85783386 91.96463013]
[113.05460358 105.89514923]
[121.46921539 118.31264496]
[127.24122620 121.53684998]
[130.09072876 126.45389557]
[129.94305420 131.22749329]
[137.98422241 143.89001465]
[146.02540588 156.55253601]
[154.06657410 169.21507263]
[162.10774231 181.87759399]
[170.14892578 194.54011536]
[178.19009399 207.20263672]
[193.14942932 204.65428162]
[207.90496826 208.01831055]
[220.21516418 216.75173950]
[228.22212219 229.49836731]
[230.73208618 244.29920959]
[227.39328003 258.89364624]
[218.74485779 271.06466675]
[226.78602600 283.72720337]
[234.92123413 296.32949829]
[243.15005493 308.87091064]
[251.37886047 321.41232300]
[259.60766602 333.95370483]
[267.83648682 346.49511719]
[276.06527710 359.03649902]
[289.25079346 351.86703491]
[302.98333740 345.81091309]
[317.16909790 340.90948486]
[331.71118164 337.19628906]
[346.51019287 334.69662476]
[361.46511841 333.42761230]
[376.47372437 333.39791870]
[391.43353271 334.60775757]
[406.24234009 337.04882812]
[420.79898071 340.70446777]
[435.00402832 345.54968262]
[448.76043701 351.55142212]
[461.97421265 358.66867065]
[474.55514526 366.85281372]
[486.41723633 376.04791260]
[497.47949219 386.19119263]
[507.66632080 397.21334839]
[516.90814209 409.03909302]
[525.14184570 421.58761597]
[532.31121826 434.77322388]
[538.36718750 448.50585938]
[543.26843262 462.69168091]
[546.98144531 477.23376465]
[549.48089600 492.03283691]
[550.74975586 506.98776245]
[550.77923584 521.99639893]
[549.56927490 536.95617676]
[547.12799072 551.76495361]
[543.47222900 566.32153320]
[538.62677002 580.52655029]
[532.62487793 594.28283691]
[525.50750732 607.49658203]
[517.32318115 620.07739258]
[508.12796021 631.93939209]
[497.98452759 643.00152588]
[486.96228027 653.18823242]
[475.13641357 662.42993164]
[462.58779907 670.66345215]
[449.40209961 677.83264160]
[435.66940308 683.88842773]
[421.48352051 688.78948975]
[406.94137573 692.50238037]
[392.14230347 695.00164795]
[377.18734741 696.27032471]
[362.17874146 696.29968262]
[347.21896362 695.08947754]
[332.41021729 692.64807129]
[317.85366821 688.99206543]
[303.64874268 684.14648438]
[289.89245605 678.14440918]
[276.67883301 671.02685547]
[264.09811401 662.84240723]
[252.23623657 653.64703369]
[241.17422485 643.50347900]
[230.98765564 632.48107910]
[221.74609375 620.65515137]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 154]
[19 153]
[20 152]
[21 151]
[22 150]
[23 149]
[25 148]
[26 147]
[33 140]
[34 139]
[35 138]
[36 137]
[37 136]
[38 135]
[39 134]
[40 131]
[41 130]
[43 128]
[44 127]
[45 126]
[46 125]
[47 124]
[48 121]
[49 120]
[50 119]
[54 118]
[55 117]
[56 116]
[58 114]
[59 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
