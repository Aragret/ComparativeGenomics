%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[42.89777374 579.56402588]
[34.00391006 591.65710449]
[24.00077820 602.85009766]
[12.97897434 613.04150391]
[1.03831303 622.13903809]
[-11.71306515 630.06036377]
[-25.15967941 636.73364258]
[-39.17975235 642.09857178]
[-53.64631653 646.10650635]
[-68.42835236 648.72113037]
[-83.39198303 649.91876221]
[-98.40171051 649.68853760]
[-113.32158661 648.03259277]
[-128.01649475 644.96594238]
[-142.35334778 640.51629639]
[-156.20231628 634.72399902]
[-169.43797302 627.64147949]
[-181.94044495 619.33288574]
[-193.59652710 609.87347412]
[-204.30062866 599.34887695]
[-213.95582581 587.85443115]
[-222.47468567 575.49426270]
[-229.78002930 562.38031006]
[-235.80572510 548.63122559]
[-240.49719238 534.37170410]
[-243.81195068 519.73077393]
[-245.71995544 504.84103394]
[-246.20396423 489.83734131]
[-245.25955200 474.85559082]
[-242.89530945 460.03146362]
[-239.13262939 445.49917603]
[-234.00558472 431.39038086]
[-227.56062317 417.83282471]
[-219.85610962 404.94931030]
[-210.96179199 392.85650635]
[-200.95825195 381.66390991]
[-189.93608093 371.47290039]
[-177.99508667 362.37579346]
[-165.24342346 354.45495605]
[-151.79656982 347.78213501]
[-137.77629089 342.41772461]
[-123.30958557 338.41033936]
[-108.52745819 335.79626465]
[-93.56377411 334.59918213]
[-78.55406189 334.82989502]
[-63.63424683 336.48638916]
[-48.93945312 339.55358887]
[-34.60276031 344.00375366]
[-20.75400352 349.79656982]
[-13.67689705 336.57104492]
[-6.59979153 323.34552002]
[0.47731367 310.11996460]
[7.55441904 296.89443970]
[14.63152409 283.66891479]
[21.70862961 270.44338989]
[20.89145470 255.57122803]
[34.22446442 247.05409241]
[40.90465927 233.62371826]
[47.18201828 220.00041199]
[52.84480667 206.11038208]
[57.88172150 191.98135376]
[52.98210907 180.92149353]
[57.06281281 169.10914612]
[68.45175171 163.05482483]
[73.69847107 149.00234985]
[78.94519043 134.94987488]
[84.19190216 120.89740753]
[89.43862152 106.84493256]
[94.37021637 92.67880249]
[98.98423004 78.40606689]
[103.59823608 64.13333130]
[91.11739349 72.45370483]
[76.12167358 72.81203461]
[63.25766373 65.09729767]
[56.51141739 51.69997787]
[57.97333145 36.77138519]
[67.19041443 24.93730927]
[81.30665588 19.86466599]
[95.94798279 23.12526703]
[106.57762146 33.70877838]
[109.90184784 48.33604813]
[116.38134766 34.80770111]
[115.36436462 19.01921463]
[127.84030914 10.88287258]
[134.31980896 -2.64547253]
[140.79930115 -16.17381859]
[141.68389893 -25.26531410]
[147.47729492 -29.85425186]
[154.15748596 -43.28462601]
[160.83769226 -56.71500397]
[160.05589294 -72.51688385]
[172.65158081 -80.46657562]
[179.33178711 -93.89694977]
[186.01197815 -107.32732391]
[181.21554565 -122.14730835]
[188.18153381 -135.67245483]
[202.33967590 -140.15379333]
[209.01988220 -153.58416748]
[215.70007324 -167.01454163]
[203.30867004 -175.51156616]
[192.22047424 -185.65049744]
[182.65130615 -197.23397827]
[174.78744507 -210.03656006]
[168.78195190 -223.80900574]
[164.75173950 -238.28323364]
[162.77523804 -253.17752075]
[162.89094543 -268.20193481]
[165.09658813 -283.06399536]
[169.34924316 -297.47445679]
[175.56613159 -311.15277100]
[183.62623596 -323.83270264]
[193.37266541 -335.26745605]
[204.61570740 -345.23440552]
[217.13650513 -353.53958130]
[230.69132996 -360.02127075]
[245.01635742 -364.55337524]
[259.83273315 -367.04763794]
[274.85205078 -367.45550537]
[289.78195190 -365.76901245]
[304.33181763 -362.02105713]
[318.21844482 -356.28454590]
[331.17153931 -348.67114258]
[342.93890381 -339.32904053]
[353.29156494 -328.44012451]
[362.02795410 -316.21630859]
[368.97802734 -302.89553833]
[374.00650024 -288.73712158]
[377.01547241 -274.01666260]
[377.94641113 -259.02066040]
[376.78115845 -244.04107666]
[373.54241943 -229.36944580]
[368.29324341 -215.29136658]
[361.13580322 -202.08088684]
[352.20938110 -189.99513245]
[341.68777466 -179.26936340]
[329.77578735 -170.11236572]
[316.70529175 -162.70239258]
[302.73068237 -157.18365479]
[288.12399292 -153.66358948]
[273.16955566 -152.21070862]
[258.15844727 -152.85331726]
[243.38287354 -155.57887268]
[229.13044739 -160.33435059]
[222.45025635 -146.90397644]
[215.77005005 -133.47360229]
[220.73832703 -119.47888947]
[214.15498352 -105.76342010]
[199.44235229 -100.64713287]
[192.76216125 -87.21675110]
[186.08197021 -73.78637695]
[187.34158325 -58.94512939]
[174.26806641 -50.03480911]
[167.58787537 -36.60443115]
[160.90766907 -23.17405701]
[154.32765198 -9.69432259]
[147.84814453 3.83402324]
[141.36865234 17.36236954]
[142.84909058 32.18321609]
[129.90968323 41.28719711]
[123.43019104 54.81554413]
[117.87097168 68.74734497]
[113.25695801 83.02007294]
[108.64295197 97.29280853]
[109.89454651 100.94053650]
[109.53219604 105.12223053]
[107.35349274 109.10472107]
[103.49109650 112.09165192]
[98.24437714 126.14412689]
[92.99765778 140.19659424]
[87.75093842 154.24906921]
[82.50421906 168.30154419]
[85.97232056 186.38616943]
[72.01074982 197.01826477]
[66.97383881 211.14729309]
[80.95505524 205.71356201]
[94.73848724 211.63110352]
[100.42834473 225.51005554]
[94.76522064 239.39994812]
[80.99321747 245.34400940]
[67.00155640 239.93721008]
[60.80533600 226.27777100]
[54.52797699 239.90107727]
[55.07979202 244.20799255]
[54.30982208 248.07731628]
[52.51793671 251.14726257]
[50.09070587 253.19058228]
[47.44999313 254.13121033]
[47.76096725 269.94934082]
[34.93415833 277.52050781]
[27.85705185 290.74603271]
[20.77994728 303.97155762]
[13.70284081 317.19708252]
[6.62573576 330.42260742]
[-0.45136967 343.64813232]
[-7.52847528 356.87365723]
[4.97430563 365.18182373]
[16.63072395 374.64080811]
[27.33521271 385.16500854]
[36.99082947 396.65908813]
[45.51013184 409.01895142]
[52.81596375 422.13265991]
[58.84215927 435.88146973]
[63.53414536 450.14083862]
[66.84943390 464.78167725]
[68.75798798 479.67132568]
[69.24253082 494.67501831]
[68.29868317 509.65679932]
[65.93497467 524.48101807]
[62.17282486 539.01342773]
[57.04629898 553.12243652]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 195]
[50 194]
[51 193]
[52 192]
[53 191]
[54 190]
[55 189]
[57 187]
[58 182]
[59 181]
[60 174]
[61 173]
[64 171]
[65 170]
[66 169]
[67 168]
[68 167]
[69 163]
[70 162]
[71 161]
[81 160]
[82 159]
[84 157]
[85 156]
[86 155]
[88 154]
[89 153]
[90 152]
[92 150]
[93 149]
[94 148]
[97 145]
[98 144]
[99 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
