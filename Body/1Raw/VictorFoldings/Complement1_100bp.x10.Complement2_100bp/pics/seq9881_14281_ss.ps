%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[75.95847321 531.83721924]
[66.95115662 543.88330078]
[55.93753052 554.12731934]
[43.27164841 562.23992920]
[29.36065865 567.96044922]
[14.65174580 571.10491943]
[-0.38226134 571.57226562]
[-15.25808144 569.34747314]
[-29.49751854 564.50201416]
[-42.64282990 557.19171143]
[-54.27145767 547.65155029]
[-64.00957489 536.18817139]
[-71.54415894 523.17010498]
[-76.63298798 509.01583862]
[-79.11248779 494.18035889]
[-78.90295410 479.14053345]
[-76.01110840 464.37988281]
[-70.52992249 450.37286377]
[-62.63559723 437.56976318]
[-52.58189392 426.38214111]
[-40.69200134 417.16964722]
[-27.34813118 410.22839355]
[-12.97923183 405.78155518]
[1.95279527 403.97204590]
[16.96794701 404.85803223]
[20.50761986 390.28164673]
[15.99219227 376.08798218]
[26.76751709 364.50338745]
[30.30718994 349.92700195]
[25.79176140 335.73333740]
[36.56708908 324.14874268]
[30.54344940 313.65863037]
[33.37311554 301.48583984]
[44.07039261 294.27954102]
[47.82669067 279.75747681]
[51.58299255 265.23541260]
[55.33929443 250.71334839]
[59.09559250 236.19129944]
[54.79198837 221.93197632]
[65.73859406 210.50907898]
[59.87181091 199.93045044]
[62.88239670 187.80114746]
[73.68577576 180.75489807]
[77.65787506 166.29037476]
[81.62996674 151.82583618]
[85.06102753 137.22352600]
[87.94630432 122.50363159]
[90.83157349 107.78373718]
[93.49736786 93.02252197]
[95.94309998 78.22325134]
[98.38882446 63.42398071]
[93.00516510 48.54692459]
[102.71408844 37.25152206]
[100.74739838 30.93933868]
[102.06579590 25.41133308]
[105.45925903 22.05076218]
[100.52092743 7.02001095]
[110.56185150 -3.98131180]
[113.44712830 -18.70120239]
[116.33239746 -33.42109299]
[119.21767426 -48.14098740]
[114.27934265 -63.17173767]
[124.32026672 -74.17305756]
[127.20553589 -88.89295197]
[130.09080505 -103.61283875]
[132.97608948 -118.33273315]
[135.86135864 -133.05262756]
[138.74662781 -147.77252197]
[124.59151459 -154.30578613]
[112.41325378 -164.02528381]
[102.91412354 -176.36518860]
[96.64062500 -190.60873413]
[93.95204926 -205.92979431]
[94.99991608 -221.44088745]
[99.71940613 -236.24450684]
[107.83339691 -249.48507690]
[118.86867523 -260.39843750]
[132.18359375 -268.35583496]
[147.00535583 -272.90032959]
[162.47485352 -273.77282715]
[165.14064026 -288.53405762]
[167.80644226 -303.29528809]
[170.47224426 -318.05648804]
[165.31066895 -333.01205444]
[175.18669128 -344.16165161]
[160.81800842 -348.52716064]
[147.05331421 -354.53131104]
[134.07875061 -362.09286499]
[122.06978607 -371.10958862]
[111.18881226 -381.45950317]
[101.58300018 -393.00268555]
[93.38224792 -405.58300781]
[86.69746399 -419.03030396]
[81.61905670 -433.16275024]
[78.21569824 -447.78924561]
[76.53342438 -462.71191406]
[76.59497833 -477.72900391]
[78.39952850 -492.63739014]
[81.92266846 -507.23547363]
[87.11675262 -521.32580566]
[93.91154480 -534.71789551]
[102.21514893 -547.23052979]
[111.91526794 -558.69458008]
[122.88070679 -568.95495605]
[134.96319580 -577.87292480]
[147.99931335 -585.32788086]
[161.81275940 -591.21899414]
[176.21673584 -595.46655273]
[191.01643372 -598.01324463]
[206.01171875 -598.82446289]
[220.99978638 -597.88934326]
[235.77792358 -595.22045898]
[250.14631653 -590.85400391]
[263.91061401 -584.84893799]
[276.88467407 -577.28649902]
[288.89303589 -568.26898193]
[299.77331543 -557.91833496]
[309.37835693 -546.37451172]
[317.57827759 -533.79364014]
[324.26214600 -520.34588623]
[329.33963013 -506.21310425]
[332.74200439 -491.58639526]
[334.42327881 -476.66360474]
[334.36071777 -461.64654541]
[332.55517578 -446.73825073]
[329.03106689 -432.14041138]
[323.83602905 -418.05041504]
[317.04034424 -404.65881348]
[308.73590088 -392.14669800]
[299.03503418 -380.68328857]
[288.06890869 -370.42364502]
[275.98583984 -361.50650024]
[262.94921875 -354.05239868]
[249.13537598 -348.16223145]
[234.73110962 -343.91558838]
[219.93124390 -341.36996460]
[204.93589783 -340.55972290]
[189.94790649 -341.49584961]
[195.30015564 -327.59609985]
[185.23345947 -315.39068604]
[182.56765747 -300.62948608]
[179.90187073 -285.86825562]
[177.23606873 -271.10705566]
[190.51718140 -265.40444946]
[202.19813538 -256.87915039]
[211.68855286 -245.95785522]
[218.50788879 -233.18847656]
[222.30969238 -219.21264648]
[222.89923096 -204.73341370]
[220.24346924 -190.47998047]
[214.47288513 -177.17089844]
[205.87504578 -165.47787476]
[194.88034058 -155.99188232]
[182.04037476 -149.19325256]
[168.00032043 -145.42739868]
[153.46652222 -144.88723755]
[150.58125305 -130.16735840]
[147.69596863 -115.44746399]
[144.81069946 -100.72756958]
[141.92543030 -86.00767517]
[139.04016113 -71.28778839]
[144.18486023 -57.30990219]
[133.93756104 -45.25571442]
[131.05229187 -30.53582191]
[128.16702271 -15.81593037]
[125.28174591 -1.09603918]
[130.42645264 12.88184643]
[120.17915344 24.93603325]
[117.51335907 39.69725037]
[123.07195282 53.51576233]
[113.18809509 65.86970520]
[110.74237061 80.66897583]
[108.29663849 95.46824646]
[110.30662537 100.31324005]
[109.45897675 105.93949890]
[105.55146790 110.66901398]
[102.66619110 125.38890076]
[99.78092194 140.10879517]
[113.49607086 134.03468323]
[126.86618805 140.83468628]
[130.03532410 155.49609375]
[120.66729736 167.21104431]
[105.66788483 167.34373474]
[96.09449005 155.79794312]
[92.12239838 170.26246643]
[88.15029907 184.72698975]
[93.21800232 202.43009949]
[80.26065826 214.26538086]
[84.29558563 229.56341553]
[73.61765289 239.94758606]
[69.86135101 254.46965027]
[66.10504913 268.99169922]
[62.34875107 283.51376343]
[58.59244919 298.03582764]
[63.92316055 315.66152954]
[51.14346313 327.68841553]
[55.40570831 342.92468262]
[44.88356400 353.46667480]
[41.34389114 368.04306030]
[45.60614014 383.27932739]
[35.08399582 393.82131958]
[31.54432297 408.39770508]
[45.29355621 414.49673462]
[57.73269272 422.95297241]
[68.46186066 433.49453735]
[77.13615417 445.78259277]
[83.47674561 459.42211914]
[87.27980804 473.97467041]
[88.42307281 488.97241211]
[86.86981201 503.93328857]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 202]
[26 201]
[28 199]
[29 198]
[31 196]
[34 194]
[35 193]
[36 192]
[37 191]
[38 190]
[40 188]
[43 186]
[44 185]
[45 184]
[46 178]
[47 177]
[48 176]
[49 173]
[50 172]
[51 171]
[53 169]
[56 168]
[58 166]
[59 165]
[60 164]
[61 163]
[63 161]
[64 160]
[65 159]
[66 158]
[67 157]
[68 156]
[80 143]
[81 142]
[82 141]
[83 140]
[85 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
