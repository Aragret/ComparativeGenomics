%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[157.97532654 389.52987671]
[152.10040283 375.72280884]
[147.10403442 361.57412720]
[143.00592041 347.13961792]
[139.82225037 332.47625732]
[137.56559753 317.64193726]
[136.24484253 302.69519043]
[135.86520386 287.69503784]
[136.42819214 272.70062256]
[137.93157959 257.77111816]
[140.36944580 242.96551514]
[143.73213196 228.34219360]
[148.00640869 213.95886230]
[153.17538452 199.87229919]
[159.21867371 186.13810730]
[166.11241150 172.81047058]
[173.82940674 159.94200134]
[161.47489929 151.43516541]
[149.12039185 142.92834473]
[134.24978638 142.08312988]
[127.27148438 127.88405609]
[114.91697693 119.37722778]
[102.56246185 110.87039948]
[90.14496613 102.45578003]
[77.66517639 94.13383484]
[65.18537903 85.81188965]
[71.16365814 99.56908417]
[70.66738129 114.56086731]
[63.79238892 127.89257812]
[51.86612701 136.99006653]
[37.19136810 140.09674072]
[22.60157967 136.61276245]
[10.91382217 127.21083069]
[4.38481903 113.70630646]
[4.27521753 98.70671082]
[10.60617924 85.10822296]
[22.15529633 75.53649902]
[36.69261551 71.83968353]
[51.41237259 74.73210144]
[40.61021423 64.32472992]
[29.80805779 53.91735840]
[19.00590134 43.50998306]
[8.20374584 33.10261154]
[-3.11249518 42.96324158]
[-15.24509239 51.80006790]
[-28.10170746 59.54582977]
[-41.58449173 66.14157867]
[-55.59083176 71.53711700]
[-70.01412964 75.69137573]
[-84.74460602 78.57274628]
[-99.67016602 80.15928650]
[-114.67720032 80.43893433]
[-129.65150452 79.40956116]
[-144.47911072 77.07899475]
[-159.04716492 73.46497345]
[-173.24479675 68.59500122]
[-186.96394348 62.50614929]
[-200.10021973 55.24475479]
[-212.55361938 46.86607742]
[-224.22937012 37.43389130]
[-235.03862000 27.01997948]
[-244.89909363 15.70360088]
[-253.73574829 3.57088017]
[-261.48132324 -9.28584290]
[-268.07687378 -22.76871872]
[-273.47222900 -36.77513504]
[-277.62628174 -51.19849014]
[-280.50744629 -65.92900848]
[-282.09378052 -80.85459137]
[-282.37322998 -95.86163330]
[-281.34362793 -110.83592224]
[-279.01284790 -125.66349030]
[-275.39862061 -140.23149109]
[-270.52847290 -154.42906189]
[-264.43942261 -168.14813232]
[-257.17782593 -181.28428650]
[-248.79898071 -193.73757935]
[-239.36663818 -205.41319275]
[-228.95257568 -216.22229004]
[-217.63606262 -226.08261108]
[-205.50320435 -234.91909790]
[-192.64637756 -242.66448975]
[-179.16340637 -249.25985718]
[-165.15692139 -254.65501404]
[-150.73350525 -258.80886841]
[-136.00294495 -261.68981934]
[-121.07733917 -263.27593994]
[-106.07029724 -263.55517578]
[-91.09602356 -262.52539062]
[-76.26848602 -260.19439697]
[-61.70053101 -256.57995605]
[-47.50303650 -251.70959473]
[-33.78405380 -245.62036133]
[-20.64798927 -238.35859680]
[-8.19482517 -229.97956848]
[3.48066354 -220.54705811]
[14.28961754 -210.13284302]
[24.14977264 -198.81619263]
[32.98608780 -186.68321228]
[40.73130798 -173.82627869]
[47.32648849 -160.34321594]
[52.72143555 -146.33665466]
[56.87509155 -131.91317749]
[59.75584030 -117.18257141]
[61.34175491 -102.25695038]
[61.62077332 -87.24990082]
[60.59076691 -72.27564240]
[58.25957489 -57.44813919]
[54.64494324 -42.88023376]
[49.77437592 -28.68280792]
[43.68494415 -14.96390820]
[36.42299652 -1.82794833]
[28.04379654 10.62509823]
[18.61111832 22.30045509]
[29.41327477 32.70782852]
[40.21543121 43.11520004]
[51.01758957 53.52257538]
[61.81974411 63.92994690]
[73.50732422 73.33209991]
[85.98712158 81.65404510]
[98.46691132 89.97599030]
[106.38734436 91.47243500]
[111.06929016 98.51589203]
[123.42379761 107.02272034]
[135.77830505 115.52954102]
[151.53259277 116.98322296]
[157.62721252 130.57383728]
[169.98171997 139.08065796]
[182.33622742 147.58749390]
[191.60498047 135.78749084]
[201.59635925 124.59277344]
[212.27095032 114.04751587]
[223.58662415 104.19332886]
[235.49871826 95.06910706]
[247.96022034 86.71085358]
[260.92196655 79.15156555]
[274.33276367 72.42106628]
[288.13973999 66.54592896]
[302.28836060 61.54933167]
[316.72280884 57.45099640]
[331.38610840 54.26709747]
[346.22036743 52.01020050]
[361.16711426 50.68921280]
[376.16726685 50.30934525]
[391.16171265 50.87210083]
[406.09118652 52.37525558]
[420.89685059 54.81288147]
[435.52023315 58.17535019]
[449.90362549 62.44940186]
[463.99026489 67.61815643]
[477.72454834 73.66123199]
[491.05230713 80.55476379]
[503.92089844 88.27154541]
[516.27954102 96.78113556]
[528.07946777 106.04994202]
[539.27416992 116.04138184]
[549.81939697 126.71602631]
[559.67352295 138.03175354]
[568.79766846 149.94389343]
[577.15582275 162.40544128]
[584.71508789 175.36721802]
[591.44549561 188.77807617]
[597.32055664 202.58506775]
[602.31707764 216.73371887]
[606.41534424 231.16818237]
[609.59918213 245.83148193]
[611.85595703 260.66577148]
[613.17687988 275.61251831]
[613.55670166 290.61267090]
[612.99383545 305.60711670]
[611.49060059 320.53659058]
[609.05291748 335.34225464]
[605.69036865 349.96560669]
[601.41625977 364.34896851]
[596.24743652 378.43557739]
[590.20428467 392.16986084]
[583.31066895 405.49755859]
[575.59381104 418.36611938]
[567.08416748 430.72473145]
[557.81530762 442.52462769]
[547.82379150 453.71923828]
[537.14910889 464.26437378]
[525.83331299 474.11843872]
[513.92114258 483.24255371]
[501.45953369 491.60067749]
[488.49771118 499.15982056]
[475.08682251 505.89016724]
[461.27981567 511.76516724]
[447.13113403 516.76159668]
[432.69665527 520.85980225]
[418.03332520 524.04357910]
[403.19900513 526.30029297]
[388.25228882 527.62115479]
[373.25210571 528.00085449]
[358.25769043 527.43792725]
[343.32821655 525.93463135]
[328.52258301 523.49682617]
[313.89923096 520.13421631]
[299.51586914 515.86004639]
[285.42929077 510.69110107]
[271.69506836 504.64788818]
[258.36740112 497.75424194]
[245.49888611 490.03729248]
[233.14031982 481.52758789]
[221.34046936 472.25866699]
[210.14590454 462.26708984]
[199.60081482 451.59234619]
[189.74679565 440.27651978]
[180.62275696 428.36428833]
[172.26470947 415.90264893]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 129]
[18 128]
[19 127]
[21 125]
[22 124]
[23 123]
[24 121]
[25 120]
[26 119]
[39 118]
[40 117]
[41 116]
[42 115]
[43 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
