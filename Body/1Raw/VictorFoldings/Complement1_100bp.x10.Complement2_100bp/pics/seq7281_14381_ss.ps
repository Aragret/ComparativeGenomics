%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[125.02352905 624.70385742]
[113.03389740 615.67980957]
[101.70295715 605.84136963]
[91.08591461 595.23651123]
[81.23449707 583.91687012]
[72.19670868 571.93756104]
[64.01656342 559.35705566]
[56.73392105 546.23651123]
[50.38426590 532.63995361]
[44.99853516 518.63360596]
[40.60295868 504.28564453]
[37.21895981 489.66601562]
[34.86302185 474.84594727]
[33.54661942 459.89764404]
[33.27617264 444.89392090]
[34.05299759 429.90789795]
[35.87330627 415.01254272]
[38.72822952 400.28048706]
[42.60386276 385.78344727]
[47.48132324 371.59207153]
[53.33684540 357.77548218]
[60.14190292 344.40103149]
[67.86334229 331.53387451]
[76.46354675 319.23666382]
[85.90061188 307.56933594]
[96.12857056 296.58874512]
[107.09757996 286.34835815]
[118.75420380 276.89807129]
[131.04165649 268.28393555]
[143.90007019 260.54791260]
[157.26679993 253.72772217]
[151.39784241 239.92353821]
[145.52888489 226.11936951]
[133.42869568 217.43405151]
[135.14964294 201.70672607]
[129.28068542 187.90255737]
[117.18049622 179.21723938]
[118.90145111 163.48991394]
[113.03249359 149.68574524]
[107.16352844 135.88156128]
[101.29457092 122.07738495]
[95.42561340 108.27320862]
[91.13155365 105.26073456]
[88.83099365 100.05681610]
[89.59420013 93.96958160]
[84.13884735 79.99678040]
[78.68348694 66.02398682]
[73.22813416 52.05118561]
[67.77277374 38.07838821]
[55.54633331 28.03723526]
[58.12499619 13.36754704]
[54.04860687 10.10715771]
[51.85029221 6.01806116]
[51.53121948 1.95441234]
[52.75337982 -1.35295308]
[47.92737961 -15.55540848]
[43.10138321 -29.75786400]
[36.62188721 -43.28620911]
[28.58071518 -55.94873428]
[20.53954124 -68.61125946]
[12.49836826 -81.27378845]
[4.45719576 -93.93630981]
[-9.13097000 -87.53591919]
[-23.41418648 -82.88909912]
[-38.16718674 -80.06912231]
[-53.15729141 -79.12048340]
[-68.14809418 -80.05812836]
[-82.90316010 -82.86727142]
[-97.18978119 -87.50361633]
[-110.78263855 -93.89404297]
[-123.46734619 -101.93775177]
[-135.04386902 -111.50788879]
[-145.32960510 -122.45351410]
[-154.16233826 -134.60200500]
[-161.40278625 -147.76177979]
[-166.93672180 -161.72525024]
[-170.67689514 -176.27221680]
[-172.56430054 -191.17326355]
[-172.56916809 -206.19335938]
[-170.69143677 -221.09561157]
[-166.96072388 -235.64501953]
[-161.43585205 -249.61207581]
[-154.20396423 -262.77655029]
[-145.37911987 -274.93078613]
[-135.10049438 -285.88308716]
[-123.53018951 -295.46072388]
[-110.85070038 -303.51266479]
[-97.26199341 -309.91192627]
[-82.97839355 -314.55755615]
[-68.22515106 -317.37628174]
[-53.23496628 -318.32366943]
[-38.24424744 -317.38473511]
[-23.48941803 -314.57437134]
[-9.20318699 -309.93679810]
[4.38913250 -303.54525757]
[17.07316971 -295.50045776]
[28.64888000 -285.92935181]
[38.93369675 -274.98287964]
[47.76541519 -262.83361816]
[55.00474167 -249.67324829]
[60.53750992 -235.70930481]
[64.27645111 -221.16201782]
[66.16260529 -206.26083374]
[66.16621399 -191.24073792]
[64.28723145 -176.33863831]
[60.55529022 -161.78955078]
[55.02924347 -147.82293701]
[47.79624557 -134.65908813]
[38.97037506 -122.50560760]
[28.69082451 -111.55416107]
[17.11972046 -101.97748566]
[25.16089439 -89.31495667]
[33.20206833 -76.65243530]
[41.24324036 -63.98990631]
[49.28441238 -51.32738113]
[48.37422180 -66.29974365]
[52.57338333 -80.69998932]
[61.38858032 -92.83638763]
[73.78421783 -101.28318024]
[88.30406189 -105.04803467]
[103.24233246 -103.68866730]
[116.84410858 -97.36476898]
[127.51146698 -86.81926727]
[133.99119568 -73.29103851]
[135.52209473 -58.36936188]
[131.92428589 -43.80722427]
[123.62046051 -31.31537247]
[111.58612823 -22.36133385]
[97.23506927 -17.99702072]
[82.25324249 -18.73514748]
[68.40068817 -24.48900032]
[57.30384064 -34.58386230]
[62.12983704 -20.38140678]
[66.95583344 -6.17895079]
[72.09779358 7.91218996]
[83.93402863 16.95391464]
[81.74557495 32.62303162]
[87.20092773 46.59582901]
[92.65628815 60.56862640]
[98.11164093 74.54142761]
[103.56700134 88.51422119]
[109.22978973 102.40425110]
[115.09874725 116.20842743]
[120.96771240 130.01260376]
[126.83666992 143.81677246]
[132.70562744 157.62095642]
[145.22561646 167.29362488]
[143.08486938 182.03359985]
[148.95382690 195.83776855]
[161.47381592 205.51043701]
[159.33306885 220.25041199]
[165.20202637 234.05458069]
[171.07098389 247.85876465]
[185.25668335 242.96481323]
[199.74920654 239.07234192]
[214.47796631 236.20031738]
[229.37118530 234.36270142]
[244.35630798 233.56848145]
[259.36032104 233.82150269]
[274.31015015 235.12052917]
[289.13293457 237.45925903]
[303.75646973 240.82626343]
[318.10952759 245.20516968]
[332.12216187 250.57463074]
[345.72607422 256.90850830]
[358.85504150 264.17590332]
[371.44506836 272.34140015]
[383.43484497 281.36529541]
[394.76593018 291.20355225]
[405.38311768 301.80825806]
[415.23468018 313.12777710]
[424.27264404 325.10690308]
[432.45297241 337.68734741]
[439.73580933 350.80773926]
[446.08566284 364.40420532]
[451.47158813 378.41052246]
[455.86737061 392.75839233]
[459.25158691 407.37799072]
[461.60772705 422.19799805]
[462.92434692 437.14630127]
[463.19500732 452.14999390]
[462.41839600 467.13604736]
[460.59829712 482.03143311]
[457.74359131 496.76354980]
[453.86816406 511.26065063]
[448.99090576 525.45208740]
[443.13558960 539.26873779]
[436.33071899 552.64331055]
[428.60946655 565.51055908]
[420.00942993 577.80786133]
[410.57254028 589.47534180]
[400.34472656 600.45611572]
[389.37588501 610.69665527]
[377.71939087 620.14709473]
[365.43206787 628.76141357]
[352.57376099 636.49761963]
[339.20712280 643.31799316]
[325.39727783 649.18939209]
[311.21151733 654.08306885]
[296.71893311 657.97534180]
[281.99011230 660.84716797]
[267.09689331 662.68457031]
[252.11174011 663.47857666]
[237.10772705 663.22534180]
[222.15792847 661.92608643]
[207.33515930 659.58715820]
[192.71166992 656.21997070]
[178.35868835 651.84082031]
[164.34614563 646.47119141]
[150.74230957 640.13714600]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 153]
[32 152]
[33 151]
[35 149]
[36 148]
[38 146]
[39 145]
[40 144]
[41 143]
[42 142]
[45 141]
[46 140]
[47 139]
[48 138]
[49 137]
[51 135]
[55 134]
[56 133]
[57 132]
[58 115]
[59 114]
[60 113]
[61 112]
[62 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
