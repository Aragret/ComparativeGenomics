%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[126.06016541 750.00781250]
[111.77159882 745.42852783]
[97.77940369 740.01080322]
[84.13273621 733.77374268]
[70.87952423 726.73913574]
[58.06632614 718.93176270]
[45.73814392 710.37908936]
[33.93828201 701.11102295]
[22.70819283 691.16027832]
[12.08731556 680.56170654]
[2.11296034 669.35253906]
[-7.17983770 657.57214355]
[-15.75843716 645.26196289]
[-23.59270477 632.46520996]
[-30.65512276 619.22680664]
[-36.92088318 605.59326172]
[-42.36798096 591.61248779]
[-46.97727585 577.33361816]
[-50.73258591 562.80670166]
[-53.62071228 548.08288574]
[-55.63151550 533.21374512]
[-56.75793076 518.25170898]
[-56.99600220 503.24914551]
[-56.34489059 488.25885010]
[-54.80688858 473.33343506]
[-52.38739014 458.52536011]
[-49.09490585 443.88662720]
[-44.94099045 429.46865845]
[-39.94023895 415.32211304]
[-34.11021423 401.49661255]
[-27.47139740 388.04080200]
[-20.04710770 375.00189209]
[-11.86342239 362.42572021]
[-2.94908667 350.35644531]
[6.66458654 338.83645630]
[16.94382858 327.90621948]
[27.85253525 317.60412598]
[39.35238647 307.96636963]
[51.40298843 299.02679443]
[63.96201324 290.81680298]
[76.98535156 283.36523438]
[90.42724609 276.69827271]
[104.24049377 270.83935547]
[118.37656403 265.80899048]
[132.78581238 261.62493896]
[129.46356201 246.99746704]
[126.14129639 232.37001038]
[122.81903839 217.74253845]
[119.49678040 203.11508179]
[116.17452240 188.48762512]
[112.52642822 173.93800354]
[108.55433655 159.47348022]
[104.58223724 145.00895691]
[88.90597534 143.86029053]
[74.56884003 137.41735840]
[63.30144501 126.45787048]
[56.46384430 112.30471039]
[54.88138580 96.66628265]
[58.74509048 81.43025208]
[67.58857727 68.43573761]
[80.34436798 59.25126648]
[76.15735626 44.84748459]
[64.87550354 33.75558472]
[68.75264740 19.37445068]
[64.56563568 4.97066879]
[60.37862396 -9.43311310]
[56.19161224 -23.83689499]
[52.00460052 -38.24067688]
[46.60414886 -45.60769272]
[47.86419296 -52.89014435]
[43.89209747 -67.35466766]
[39.91999817 -81.81919098]
[25.05197906 -79.68724823]
[10.03399181 -79.43563080]
[-4.89710474 -81.06829071]
[-19.50582695 -84.55949402]
[-33.56177139 -89.85417175]
[-46.84325790 -96.86882782]
[-59.14081955 -105.49281311]
[-70.26050568 -115.59013367]
[-80.02693939 -127.00153351]
[-88.28609467 -139.54702759]
[-94.90770721 -153.02877808]
[-99.78735352 -167.23414612]
[-102.84806061 -181.93908691]
[-104.04157257 -196.91168213]
[-103.34905243 -211.91580200]
[-100.78143311 -226.71481323]
[-96.37920380 -241.07530212]
[-90.21179199 -254.77078247]
[-82.37647247 -267.58526611]
[-72.99681091 -279.31665039]
[-62.22074890 -289.77990723]
[-50.21823502 -298.80999756]
[-37.17856598 -306.26455688]
[-23.30739594 -312.02597046]
[-8.82349491 -316.00338745]
[6.04470587 -318.13406372]
[21.06271362 -318.38442993]
[35.99367142 -316.75051880]
[50.60210037 -313.25808716]
[64.65760040 -307.96221924]
[77.93849945 -300.94644165]
[90.23533630 -292.32144165]
[101.35416412 -282.22317505]
[111.11964417 -270.81094360]
[119.37773895 -258.26477051]
[125.99822235 -244.78245544]
[130.87666321 -230.57667542]
[133.93614197 -215.87147522]
[135.12838745 -200.89878845]
[134.43460083 -185.89471436]
[131.86573792 -171.09593201]
[127.46230316 -156.73580933]
[121.29373932 -143.04084778]
[113.45733643 -130.22702026]
[104.07669067 -118.49643707]
[93.29975128 -108.03408813]
[81.29647064 -99.00498962]
[68.25617981 -91.55153656]
[54.38452530 -85.79129028]
[58.35662079 -71.32676697]
[62.32871628 -56.86223984]
[66.40838623 -42.42768860]
[70.59539795 -28.02390671]
[74.78240204 -13.62012386]
[78.96941376 0.78365779]
[83.15642548 15.18743992]
[94.13880157 25.24908638]
[90.56114197 40.66047668]
[94.74815369 55.06425858]
[108.87117767 55.63666916]
[122.12829590 60.53936768]
[133.22547913 69.29380035]
[141.07952881 81.04544830]
[144.92382812 94.64724731]
[144.38314819 108.77152252]
[139.51023865 122.03961182]
[130.78074646 133.15643311]
[119.04676056 141.03686523]
[123.01885986 155.50138855]
[126.99095154 169.96591187]
[130.70602417 173.63269043]
[132.46701050 177.92829895]
[132.36158752 182.00309753]
[130.80197144 185.16535950]
[134.12423706 199.79281616]
[137.44650269 214.42028809]
[140.76875305 229.04774475]
[144.09101868 243.67520142]
[147.41326904 258.30267334]
[162.21621704 255.85192871]
[177.13833618 254.28244019]
[192.12722778 253.59970093]
[207.13023376 253.80610657]
[222.09466553 254.90095520]
[236.96795654 256.88037109]
[251.69786072 259.73742676]
[266.23266602 263.46206665]
[280.52127075 268.04122925]
[294.51348877 273.45880127]
[308.16021729 279.69580078]
[321.41348267 286.73025513]
[334.22677612 294.53750610]
[346.55502319 303.09011841]
[358.35494995 312.35803223]
[369.58514404 322.30871582]
[380.20611572 332.90719604]
[390.18057251 344.11627197]
[399.47344971 355.89654541]
[408.05218506 368.20666504]
[415.88653564 381.00335693]
[422.94909668 394.24169922]
[429.21496582 407.87518311]
[434.66217041 421.85589600]
[439.27160645 436.13476562]
[443.02703857 450.66162109]
[445.91528320 465.38546753]
[447.92623901 480.25451660]
[449.05276489 495.21661377]
[449.29098511 510.21914673]
[448.63998413 525.20947266]
[447.10211182 540.13482666]
[444.68276978 554.94293213]
[441.39041138 569.58172607]
[437.23660278 583.99969482]
[432.23599243 598.14636230]
[426.40606689 611.97186279]
[419.76739502 625.42773438]
[412.34320068 638.46667480]
[404.15963745 651.04296875]
[395.24539185 663.11230469]
[385.63183594 674.63238525]
[375.35269165 685.56274414]
[364.44406128 695.86492920]
[352.94430542 705.50274658]
[340.89376831 714.44244385]
[328.33480835 722.65252686]
[315.31155396 730.10418701]
[301.86972046 736.77130127]
[288.05651855 742.63037109]
[273.92050171 747.66082764]
[259.51126099 751.84503174]
[244.87950134 755.16827393]
[230.07653809 757.61889648]
[215.15440369 759.18823242]
[200.16551208 759.87084961]
[185.16250610 759.66430664]
[170.19807434 758.56933594]
[155.32479858 756.58978271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 151]
[46 150]
[47 149]
[48 148]
[49 147]
[50 146]
[51 142]
[52 141]
[53 140]
[61 131]
[62 130]
[64 128]
[65 127]
[66 126]
[67 125]
[68 124]
[70 123]
[71 122]
[72 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
