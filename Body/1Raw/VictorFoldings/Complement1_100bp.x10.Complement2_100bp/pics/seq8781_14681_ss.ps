%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[124.57651520 864.60955811]
[109.81890106 861.90295410]
[95.23111725 858.39447021]
[80.85669708 854.09460449]
[66.73853302 849.01617432]
[52.91876984 843.17437744]
[39.43864822 836.58654785]
[26.33839417 829.27246094]
[13.65710926 821.25384521]
[1.43263686 812.55468750]
[-10.29853916 803.20098877]
[-21.50140953 793.22058105]
[-32.14253616 782.64324951]
[-42.19017029 771.50061035]
[-51.61431503 759.82592773]
[-60.38685226 747.65405273]
[-68.48159790 735.02124023]
[-75.87439728 721.96520996]
[-82.54318237 708.52496338]
[-88.46805573 694.74060059]
[-93.63133240 680.65325928]
[-98.01760101 666.30493164]
[-101.61377716 651.73852539]
[-104.40912628 636.99749756]
[-106.39530182 622.12573242]
[-107.56637573 607.16778564]
[-107.91886139 592.16815186]
[-107.45169830 577.17169189]
[-106.16629028 562.22308350]
[-104.06645966 547.36694336]
[-101.15848541 532.64770508]
[-97.45104218 518.10919189]
[-92.95519257 503.79489136]
[-87.68434906 489.74740601]
[-81.65425873 476.00875854]
[-74.88289642 462.61990356]
[-67.39048767 449.62078857]
[-59.19939041 437.05023193]
[-50.33404160 424.94577026]
[-40.82090378 413.34347534]
[-30.68836975 402.27798462]
[-19.96667862 391.78237915]
[-8.68782520 381.88790894]
[3.11452723 372.62414551]
[15.40515614 364.01870728]
[28.14738274 356.09732056]
[41.30317688 348.88357544]
[54.83327484 342.39904785]
[68.69730377 336.66305542]
[82.85388184 331.69271851]
[97.26075745 327.50286865]
[111.87494659 324.10604858]
[126.65282440 321.51235962]
[117.45794678 309.79470825]
[123.50054169 295.17288208]
[121.71807098 280.27914429]
[119.93560791 265.38543701]
[118.15314484 250.49172974]
[116.37067413 235.59800720]
[114.14556122 220.76396179]
[111.47975922 206.00274658]
[108.81396484 191.24153137]
[98.93795013 180.09193420]
[104.09951782 165.13636780]
[101.43372345 150.37515259]
[91.55770111 139.22555542]
[96.71927643 124.26999664]
[94.05347443 109.50878143]
[85.57297516 121.88137817]
[71.15785980 126.02917480]
[57.39850998 120.05587006]
[50.58553314 106.69235992]
[53.83371735 92.04827118]
[65.65804291 82.81868744]
[80.65258789 83.22323608]
[91.96295166 93.07859802]
[90.84729767 78.12014008]
[81.60102081 69.12741852]
[80.97974396 56.64552307]
[88.77178955 47.39292526]
[85.13713837 39.01276016]
[87.97883606 32.19025803]
[87.30905151 17.20521736]
[86.63926697 2.22017908]
[85.96948242 -12.76485920]
[85.29969025 -27.74989891]
[84.62990570 -42.73493576]
[83.96012115 -57.71997452]
[83.29033661 -72.70501709]
[82.62055206 -87.69005585]
[81.95076752 -102.67509460]
[73.60497284 -116.11601257]
[80.76625824 -129.17607117]
[77.95558167 -133.57463074]
[77.18975067 -138.15357971]
[78.19505310 -142.10382080]
[80.41632080 -144.84211731]
[80.41632080 -159.84211731]
[80.41632080 -174.84211731]
[66.64244843 -181.41809082]
[57.09252167 -193.32446289]
[53.66268158 -208.19721985]
[57.03392792 -223.08335876]
[66.53689575 -235.02725220]
[80.28475952 -241.65740967]
[95.54787445 -241.65740967]
[109.29574585 -235.02725220]
[118.79870605 -223.08335876]
[122.16995239 -208.19721985]
[118.74011230 -193.32446289]
[109.19018555 -181.41809082]
[95.41632080 -174.84211731]
[95.41632080 -159.84211731]
[95.41632080 -144.84211731]
[95.75129700 -129.84585571]
[104.04917908 -117.47677612]
[96.93580627 -103.34487915]
[97.60559082 -88.35984039]
[98.27537537 -73.37480164]
[98.94515991 -58.38976288]
[99.61494446 -43.40472412]
[100.28472900 -28.41968346]
[100.95452118 -13.43464470]
[101.62430573 1.55039406]
[102.29409027 16.53543282]
[102.96387482 31.52047157]
[103.74519348 46.50011063]
[114.18403625 60.60675430]
[105.80575562 77.00449371]
[106.92140198 91.96295166]
[108.81469727 106.84298706]
[111.48049164 121.60420227]
[121.54718018 133.80961609]
[116.19493866 147.70936584]
[118.86073303 162.47058105]
[128.92742920 174.67599487]
[123.57518768 188.57572937]
[126.24098206 203.33694458]
[128.90676880 218.09817505]
[131.82780457 221.31088257]
[133.41494751 224.92274475]
[133.70649719 228.46539307]
[132.88896179 231.53105164]
[131.26438904 233.81553650]
[133.04685974 248.70925903]
[134.82933044 263.60296631]
[136.61178589 278.49670410]
[138.39425659 293.39041138]
[147.71662903 306.17337036]
[141.54653931 319.72988892]
[156.51911926 318.76309204]
[171.52215576 318.61535645]
[186.51086426 319.28713989]
[201.44053650 320.77645874]
[216.26658630 323.07885742]
[230.94477844 326.18746948]
[245.43132019 330.09298706]
[259.68295288 334.78378296]
[273.65716553 340.24584961]
[287.31225586 346.46289062]
[300.60745239 353.41635132]
[313.50308228 361.08547974]
[325.96066284 369.44738770]
[337.94302368 378.47714233]
[349.41439819 388.14773560]
[360.34054565 398.43035889]
[370.68887329 409.29428101]
[380.42846680 420.70715332]
[389.53027344 432.63482666]
[397.96716309 445.04174805]
[405.71389771 457.89093018]
[412.74740601 471.14395142]
[419.04669189 484.76129150]
[424.59292603 498.70230103]
[429.36956787 512.92541504]
[433.36239624 527.38812256]
[436.55944824 542.04730225]
[438.95120239 556.85919189]
[440.53051758 571.77960205]
[441.29269409 586.76403809]
[441.23544312 601.76763916]
[440.35891724 616.74578857]
[438.66577148 631.65374756]
[436.16104126 646.44696045]
[432.85220337 661.08129883]
[428.74911499 675.51312256]
[423.86404419 689.69934082]
[418.21154785 703.59765625]
[411.80853271 717.16650391]
[404.67407227 730.36547852]
[396.82949829 743.15509033]
[388.29815674 755.49731445]
[379.10556030 767.35516357]
[369.27914429 778.69335938]
[358.84820557 789.47796631]
[347.84390259 799.67694092]
[336.29907227 809.25970459]
[324.24813843 818.19769287]
[311.72708130 826.46429443]
[298.77331543 834.03479004]
[285.42541504 840.88653564]
[271.72329712 846.99920654]
[257.70779419 852.35443115]
[243.42076111 856.93634033]
[228.90484619 860.73120117]
[214.20335388 863.72766113]
[199.36015320 865.91680908]
[184.41955566 867.29217529]
[169.42614746 867.84954834]
[154.42468262 867.58728027]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 150]
[55 148]
[56 147]
[57 146]
[58 145]
[59 144]
[60 139]
[61 138]
[62 137]
[64 135]
[65 134]
[67 132]
[68 131]
[76 130]
[77 129]
[80 127]
[82 126]
[83 125]
[84 124]
[85 123]
[86 122]
[87 121]
[88 120]
[89 119]
[90 118]
[91 117]
[93 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
