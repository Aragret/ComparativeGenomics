%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[4.70417500 799.56842041]
[-10.04262352 802.33050537]
[-24.91039085 804.34210205]
[-39.86096191 805.59808350]
[-54.85595703 806.09521484]
[-69.85688782 805.83221436]
[-84.82524109 804.80975342]
[-99.72259521 803.03051758]
[-114.51071930 800.49896240]
[-129.15162659 797.22167969]
[-143.60777283 793.20709229]
[-157.84201050 788.46539307]
[-171.81782532 783.00885010]
[-185.49932861 776.85150146]
[-198.85139465 770.00903320]
[-211.83976746 762.49908447]
[-224.43110657 754.34094238]
[-236.59306335 745.55548096]
[-248.29444885 736.16534424]
[-259.50521851 726.19464111]
[-270.19656372 715.66882324]
[-280.34106445 704.61505127]
[-289.91268921 693.06164551]
[-298.88687134 681.03833008]
[-307.24053955 668.57580566]
[-314.95230103 655.70623779]
[-322.00228882 642.46258545]
[-328.37246704 628.87884521]
[-334.04647827 614.98992920]
[-339.00970459 600.83142090]
[-343.24948120 586.43969727]
[-346.75485229 571.85168457]
[-349.51687622 557.10491943]
[-351.52844238 542.23712158]
[-352.78439331 527.28656006]
[-353.28146362 512.29156494]
[-353.01843262 497.29064941]
[-351.99594116 482.32229614]
[-350.21664429 467.42492676]
[-347.68508911 452.63681030]
[-344.40777588 437.99591064]
[-340.39309692 423.53979492]
[-335.65139771 409.30557251]
[-330.19482422 395.32977295]
[-324.03738403 381.64828491]
[-317.19491577 368.29623413]
[-309.68493652 355.30786133]
[-301.52673340 342.71655273]
[-292.74127197 330.55462646]
[-283.35110474 318.85327148]
[-273.38034058 307.64254761]
[-262.85452271 296.95120239]
[-251.80072021 286.80673218]
[-240.24729919 277.23513794]
[-228.22390747 268.26098633]
[-215.76141357 259.90734863]
[-202.89181519 252.19564819]
[-189.64813232 245.14567566]
[-176.06439209 238.77552795]
[-162.17543030 233.10157776]
[-148.01690674 228.13836670]
[-133.62518311 223.89863586]
[-119.03718567 220.39329529]
[-104.29037476 217.63131714]
[-89.42259216 215.61979675]
[-74.47201538 214.36390686]
[-59.47702026 213.86685181]
[-44.47609329 214.12992859]
[-29.50774193 215.15245056]
[-14.61039543 216.93180847]
[0.17770875 219.46340942]
[14.81860828 222.74076843]
[29.27472115 226.75547791]
[43.50893784 231.49720764]
[48.96429443 217.52441406]
[54.41965103 203.55162048]
[59.87500763 189.57882690]
[65.33036804 175.60601807]
[70.78572083 161.63322449]
[76.24108124 147.66043091]
[81.27799225 133.53140259]
[85.89200592 119.25866699]
[77.28623962 107.34960175]
[77.28424072 92.65657806]
[85.88676453 80.74517059]
[99.83525848 76.12732697]
[104.44927216 61.85459518]
[109.06327820 47.58185959]
[113.67729187 33.30912781]
[118.29129791 19.03639412]
[122.69229889 4.69654608]
[126.87931061 -9.70723534]
[131.06631470 -24.11101723]
[135.25332642 -38.51480103]
[139.44033813 -52.91858292]
[143.62734985 -67.32236481]
[130.05068970 -73.77763367]
[117.68543243 -82.32727814]
[106.85184479 -92.74983215]
[97.83055878 -104.77532959]
[90.85523987 -118.09227753]
[86.10656738 -132.35572815]
[83.70755005 -147.19624329]
[83.72031403 -162.22941589]
[86.14454651 -177.06582642]
[90.91743469 -191.32119751]
[97.91536713 -204.62628174]
[106.95706940 -216.63642883]
[117.80834961 -227.04057312]
[130.18812561 -235.56919861]
[143.77572632 -242.00138855]
[158.21920776 -246.17056274]
[173.14443970 -247.96870422]
[188.16484070 -247.34924316]
[202.89134216 -244.32824707]
[216.94247437 -238.98393250]
[229.95429993 -231.45474243]
[241.58976746 -221.93571472]
[251.54750061 -210.67340088]
[259.56958008 -197.95951843]
[265.44818115 -184.12339783]
[269.03103638 -169.52342224]
[270.22537231 -154.53778076]
[269.00024414 -139.55461121]
[265.38739014 -124.96202850]
[259.48034668 -111.13802338]
[251.43218994 -98.44065857]
[241.45132446 -87.19882202]
[229.79632568 -77.70372009]
[216.76905823 -70.20129395]
[202.70697021 -64.88586426]
[187.97428894 -61.89512634]
[172.95265198 -61.30654144]
[158.03112793 -63.13535309]
[153.84411621 -48.73157120]
[149.65711975 -34.32778931]
[145.47010803 -19.92400742]
[141.28309631 -5.52022457]
[137.09608459 8.88355732]
[138.57035828 13.42619419]
[137.20663452 18.94319344]
[132.56402588 23.65040207]
[127.95001984 37.92313766]
[123.33601379 52.19586945]
[118.72200775 66.46860504]
[114.10799408 80.74133301]
[122.71376038 92.65039825]
[122.71575928 107.34342194]
[114.11323547 119.25482941]
[100.16474152 123.87267303]
[95.55072784 138.14540100]
[96.61042786 142.35623169]
[96.30570984 146.28962708]
[94.89132690 149.55075073]
[92.72410583 151.86802673]
[90.21387482 153.11578369]
[84.75852203 167.08857727]
[79.30316162 181.06138611]
[73.84780884 195.03417969]
[68.39244843 209.00697327]
[62.93709183 222.97976685]
[57.48173523 236.95257568]
[71.16326904 243.10989380]
[84.51538849 249.95227051]
[97.50379944 257.46212769]
[110.09517670 265.62020874]
[122.25718689 274.40557861]
[133.95861816 283.79565430]
[145.16943359 293.76635742]
[155.86083984 304.29205322]
[166.00541687 315.34579468]
[175.57710266 326.89913940]
[184.55134583 338.92245483]
[192.90509033 351.38485718]
[200.61689758 364.25439453]
[207.66697693 377.49801636]
[214.03723145 391.08172607]
[219.71130371 404.97064209]
[224.67462158 419.12911987]
[228.91445923 433.52081299]
[232.41993713 448.10876465]
[235.18203735 462.85556030]
[237.19367981 477.72332764]
[238.44969177 492.67388916]
[238.94686890 507.66888428]
[238.68391418 522.66979980]
[237.66151428 537.63818359]
[235.88227844 552.53552246]
[233.35079956 567.32366943]
[230.07356262 581.96459961]
[226.05897522 596.42071533]
[221.31735229 610.65496826]
[215.86085510 624.63079834]
[209.70349121 638.31231689]
[202.86108398 651.66442871]
[195.35118103 664.65283203]
[187.19305420 677.24420166]
[178.40766907 689.40618896]
[169.01756287 701.10754395]
[159.04682922 712.31835938]
[148.52108765 723.00976562]
[137.46734619 733.15429688]
[125.91397095 742.72595215]
[113.89063263 751.70013428]
[101.42818451 760.05383301]
[88.55863190 767.76562500]
[75.31499481 774.81567383]
[61.73127365 781.18591309]
[47.84234238 786.85992432]
[33.68385315 791.82318115]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[74 162]
[75 161]
[76 160]
[77 159]
[78 158]
[79 157]
[80 156]
[81 151]
[82 150]
[86 146]
[87 145]
[88 144]
[89 143]
[90 142]
[91 139]
[92 138]
[93 137]
[94 136]
[95 135]
[96 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
