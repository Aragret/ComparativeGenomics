%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[108.65828705 830.75830078]
[94.29659271 826.39178467]
[80.39905548 820.71881104]
[67.08425903 813.78765869]
[54.46578598 805.65753174]
[42.65130615 796.39776611]
[31.74161530 786.08746338]
[21.82979393 774.81445312]
[13.00040817 762.67498779]
[5.32878685 749.77264404]
[-1.11961579 736.21746826]
[-6.28978300 722.12512207]
[-10.13760376 707.61584473]
[-12.63024998 692.81341553]
[-13.74645424 677.84417725]
[-13.47669220 662.83575439]
[-11.82326698 647.91632080]
[-8.80028534 633.21301270]
[-4.43353796 618.85137939]
[1.23971856 604.95397949]
[8.17108059 591.63928223]
[16.30141258 579.02093506]
[25.56134415 567.20660400]
[35.87187576 556.29711914]
[47.14503860 546.38543701]
[59.28464890 537.55627441]
[72.18713379 529.88488770]
[85.74241638 523.43670654]
[99.83483887 518.26678467]
[114.34417725 514.41918945]
[129.14662170 511.92678833]
[128.03097534 496.96832275]
[126.91532898 482.00988770]
[125.79968262 467.05142212]
[124.68403625 452.09298706]
[114.03631592 438.14331055]
[122.16954041 421.62265015]
[120.83130646 406.68246460]
[119.49307251 391.74227905]
[118.15483856 376.80209351]
[103.31403351 374.81399536]
[89.28105164 369.57055664]
[76.76079559 361.33172607]
[66.38296509 350.50805664]
[58.67034912 337.64010620]
[54.01251602 323.37161255]
[52.64612579 308.41717529]
[54.64290237 293.52651978]
[59.90589905 279.44683838]
[68.17417145 266.88543701]
[79.03572845 256.47402954]
[91.94805908 248.73710632]
[106.26524353 244.06544495]
[104.92700958 229.12525940]
[103.58877563 214.18507385]
[94.74685669 202.19885254]
[101.22211456 187.76341248]
[99.88388062 172.82322693]
[98.54564667 157.88304138]
[97.20741272 142.94287109]
[95.86917877 128.00268555]
[94.19763184 113.09610748]
[85.80446625 101.91368866]
[90.93683624 88.90790558]
[88.93282318 74.04238129]
[86.92881012 59.17685318]
[84.92479706 44.31132507]
[69.43172455 33.40815735]
[66.87206268 14.95928097]
[78.40911865 0.74618733]
[75.96339417 -14.05308342]
[73.51766205 -28.85235405]
[71.07193756 -43.65162659]
[68.62621307 -58.45089722]
[58.74235153 -70.80484009]
[64.30094910 -84.62335205]
[54.41709137 -96.97729492]
[59.97569275 -110.79580688]
[57.52996445 -125.59507751]
[47.64610672 -137.94902039]
[53.20470428 -151.76753235]
[43.32084656 -164.12147522]
[48.87944412 -177.93998718]
[46.43371582 -192.73925781]
[43.98798752 -207.53852844]
[28.94644737 -208.11897278]
[14.32973289 -211.71571350]
[0.73639023 -218.18147278]
[-11.27694130 -227.25146484]
[-21.21832466 -238.55427551]
[-28.68066406 -251.62709045]
[-33.35838318 -265.93457031]
[-35.05993271 -280.89080811]
[-33.71562958 -295.88342285]
[-29.38053322 -310.29840088]
[-22.23215294 -323.54550171]
[-12.56321621 -335.08224487]
[-0.76965731 -344.43621826]
[12.66558456 -351.22439575]
[27.19234276 -355.16876221]
[42.21575928 -356.10784912]
[57.12063217 -354.00317383]
[71.29661560 -348.94091797]
[84.16321564 -341.12838745]
[95.19354248 -330.88549805]
[103.93592834 -318.63171387]
[110.03236389 -304.86877441]
[113.23321533 -290.16027832]
[113.40739441 -275.10855103]
[110.54778290 -260.32995605]
[104.77146912 -246.42961121]
[96.31500244 -233.97679138]
[85.52465820 -223.48138428]
[72.84230042 -215.37319946]
[58.78725815 -209.98425293]
[61.23298645 -195.18498230]
[63.67871475 -180.38571167]
[73.38763428 -169.09031677]
[68.00397491 -154.21325684]
[77.71289825 -142.91786194]
[72.32923126 -128.04080200]
[74.77496338 -113.24153137]
[84.48388672 -101.94613647]
[79.10021973 -87.06907654]
[88.80914307 -75.77367401]
[83.42548370 -60.89662170]
[85.87120819 -46.09735107]
[88.31693268 -31.29808235]
[90.76266479 -16.49881172]
[93.20838928 -1.69954014]
[103.70280457 2.77634025]
[110.80694580 11.85636520]
[112.66480255 23.35602951]
[108.70063782 34.43692780]
[99.79032135 42.30731201]
[101.79433441 57.17284012]
[103.79835510 72.03836823]
[105.80236816 86.90389252]
[114.19553375 98.08631134]
[109.06316376 111.09209442]
[112.25504303 115.22234344]
[113.42633820 119.71470642]
[112.77747345 123.73888397]
[110.80935669 126.66444397]
[112.14759827 141.60462952]
[113.48583221 156.54481506]
[114.82406616 171.48500061]
[116.16230011 186.42518616]
[125.09993744 199.48004150]
[118.52896118 212.84684753]
[119.86719513 227.78703308]
[121.20542908 242.72721863]
[136.12493896 244.78005981]
[150.20672607 250.09902954]
[162.74569702 258.41439819]
[173.11476135 269.30642700]
[180.79620361 282.22662354]
[185.40756226 296.52536011]
[186.72061157 311.48458862]
[184.67272949 326.35372925]
[179.36976624 340.38751221]
[171.08071899 352.88323975]
[160.22398376 363.21597290]
[147.34623718 370.86990356]
[133.09501648 375.46386719]
[134.43325806 390.40405273]
[135.77148438 405.34423828]
[137.10972595 420.28442383]
[146.48886108 429.13848877]
[147.29591370 441.60974121]
[139.64248657 450.97732544]
[140.75813293 465.93579102]
[141.87377930 480.89422607]
[142.98942566 495.85269165]
[144.10508728 510.81112671]
[159.11349487 511.08013916]
[174.03305054 512.73284912]
[188.73646545 515.75506592]
[203.09831238 520.12109375]
[216.99603271 525.79364014]
[230.31106567 532.72436523]
[242.92980957 540.85406494]
[254.74459839 550.11340332]
[265.65463257 560.42340088]
[275.56683350 571.69604492]
[284.39660645 583.83520508]
[292.06866455 596.73730469]
[298.51751709 610.29229736]
[303.68817139 624.38446045]
[307.53646851 638.89361572]
[310.02960205 653.69592285]
[311.14630127 668.66516113]
[310.87704468 683.67352295]
[309.22412109 698.59307861]
[306.20162964 713.29644775]
[301.83535767 727.65820312]
[296.16256714 741.55584717]
[289.23162842 754.87078857]
[281.10174561 767.48937988]
[271.84219360 779.30401611]
[261.53201294 790.21386719]
[250.25920105 800.12585449]
[238.11987305 808.95544434]
[225.21765137 816.62731934]
[211.66258240 823.07592773]
[197.57032776 828.24633789]
[183.06112671 832.09442139]
[168.25875854 834.58728027]
[153.28950500 835.70373535]
[138.28111267 835.43420410]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 175]
[32 174]
[33 173]
[34 172]
[35 171]
[37 168]
[38 167]
[39 166]
[40 165]
[53 152]
[54 151]
[55 150]
[57 148]
[58 147]
[59 146]
[60 145]
[61 144]
[62 140]
[64 138]
[65 137]
[66 136]
[67 135]
[70 130]
[71 129]
[72 128]
[73 127]
[74 126]
[76 124]
[78 122]
[79 121]
[81 119]
[83 117]
[84 116]
[85 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
