%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAGxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[152.13339233 902.50854492]
[137.37481689 899.81402588]
[122.75199127 896.46008301]
[108.29435730 892.45343018]
[94.03104401 887.80224609]
[79.99076080 882.51580811]
[66.20179749 876.60473633]
[52.69191742 870.08099365]
[39.48832703 862.95770264]
[26.61761665 855.24920654]
[14.10570621 846.97100830]
[1.97779441 838.13983154]
[-9.74169540 828.77343750]
[-21.02916145 818.89068604]
[-31.86187172 808.51141357]
[-42.21800995 797.65667725]
[-52.07672501 786.34814453]
[-61.41815567 774.60876465]
[-70.22349548 762.46203613]
[-78.47500610 749.93255615]
[-86.15607452 737.04547119]
[-93.25123596 723.82672119]
[-99.74618530 710.30297852]
[-105.62786102 696.50146484]
[-110.88440704 682.44995117]
[-115.50524902 668.17675781]
[-119.48106384 653.71063232]
[-122.80385590 639.08068848]
[-125.46693420 624.31640625]
[-127.46493530 609.44750977]
[-128.79382324 594.50396729]
[-129.45094299 579.51580811]
[-129.43495178 564.51330566]
[-128.74589539 549.52661133]
[-127.38515472 534.58587646]
[-125.35546875 519.72131348]
[-122.66093445 504.96270752]
[-119.30696106 490.33990479]
[-115.30032349 475.88226318]
[-110.64907837 461.61895752]
[-105.36259460 447.57870483]
[-99.45151520 433.78973389]
[-92.92774963 420.27987671]
[-85.80443573 407.07629395]
[-78.09591675 394.20559692]
[-69.81771851 381.69369507]
[-60.98651505 369.56579590]
[-51.62008286 357.84634399]
[-41.73728943 346.55889893]
[-31.35803795 335.72619629]
[-20.50322914 325.37008667]
[-9.19472599 315.51138306]
[2.54469991 306.16998291]
[14.69140625 297.36465454]
[27.22093201 289.11318970]
[40.10803986 281.43212891]
[53.32678604 274.33700562]
[66.85054016 267.84207153]
[80.65206909 261.96041870]
[94.70358276 256.70388794]
[108.97678375 252.08309937]
[123.44292450 248.10729980]
[120.12065887 233.47984314]
[116.79840088 218.85238647]
[112.25151062 213.02592468]
[113.53728485 203.98243713]
[110.43317413 189.30714417]
[107.32906342 174.63183594]
[104.22495270 159.95654297]
[99.76531219 154.06303406]
[101.18559265 145.03968811]
[98.30032349 130.31980896]
[95.41504669 115.59991455]
[86.15850830 108.53182983]
[84.00343323 97.08644867]
[90.05548859 87.13587189]
[87.38969421 72.37465668]
[80.83366394 85.86608124]
[68.46592712 94.35366058]
[53.51937103 95.61876678]
[39.90099335 89.33070374]
[31.17060471 77.13314819]
[29.61030769 62.21451950]
[35.62796021 48.47451019]
[47.65056229 39.50472260]
[62.53543472 37.64984131]
[76.39170837 43.39472961]
[85.59703827 55.23686218]
[85.15042877 40.24351501]
[75.11167145 24.80638695]
[84.02628326 9.69028473]
[83.35649872 -5.29475403]
[82.68671417 -20.27979279]
[74.34092712 -33.72071075]
[81.50220490 -46.78077698]
[80.83242035 -61.76581573]
[66.43953705 -66.58341980]
[54.76138687 -76.27802277]
[47.37734985 -89.53850555]
[45.28605270 -104.57150269]
[48.77032852 -119.34391785]
[57.35895538 -131.85791016]
[69.89039612 -140.42105103]
[84.66986847 -143.87525940]
[99.69857788 -141.75338745]
[112.94400787 -134.34239197]
[122.61483002 -122.64453888]
[127.40313721 -108.24188232]
[126.66136169 -93.08226013]
[120.48981476 -79.21588135]
[109.72314453 -68.51806641]
[95.81745911 -62.43560028]
[96.48724365 -47.45056152]
[104.78512573 -35.08147430]
[97.67175293 -20.94957733]
[98.34153748 -5.96453905]
[99.01132202 9.02050018]
[107.72368622 17.41224480]
[108.40432739 29.89104652]
[100.14377594 39.79690933]
[100.59038544 54.79025650]
[102.15090942 69.70886230]
[104.81670380 84.47007751]
[115.97894287 96.99128723]
[110.13494110 112.71463776]
[113.02021027 127.43453217]
[115.90548706 142.15441895]
[118.90026093 156.85243225]
[122.00437164 171.52772522]
[125.10848236 186.20303345]
[128.21258545 200.87834167]
[131.42585754 215.53012085]
[134.74812317 230.15757751]
[138.07038879 244.78503418]
[152.83465576 242.12188721]
[167.70353699 240.12379456]
[182.64709473 238.79481506]
[197.63522339 238.13761902]
[212.63775635 238.15351868]
[227.62446594 238.84249878]
[242.56517029 240.20315552]
[257.42977905 242.23275757]
[272.18835449 244.92720032]
[286.81121826 248.28108215]
[301.26885986 252.28764343]
[315.53219604 256.93881226]
[329.57247925 262.22521973]
[343.36148071 268.13623047]
[356.87139893 274.65991211]
[370.07501221 281.78314209]
[382.94573975 289.49157715]
[395.45767212 297.76971436]
[407.58563232 306.60086060]
[419.30514526 315.96722412]
[430.59265137 325.84994507]
[441.42541504 336.22912598]
[451.78158569 347.08389282]
[461.64035034 358.39233398]
[470.98181152 370.13171387]
[479.78720093 382.27835083]
[488.03875732 394.80783081]
[495.71987915 407.69491577]
[502.81509399 420.91360474]
[509.31008911 434.43731689]
[515.19183350 448.23883057]
[520.44842529 462.29031372]
[525.06933594 476.56347656]
[529.04516602 491.02960205]
[532.36804199 505.65951538]
[535.03118896 520.42376709]
[537.02923584 535.29266357]
[538.35815430 550.23626709]
[539.01531982 565.22436523]
[538.99938965 580.22692871]
[538.31042480 595.21362305]
[536.94970703 610.15429688]
[534.92010498 625.01892090]
[532.22564697 639.77752686]
[528.87170410 654.40032959]
[524.86511230 668.85797119]
[520.21392822 683.12133789]
[514.92749023 697.16162109]
[509.01647949 710.95056152]
[502.49276733 724.46044922]
[495.36950684 737.66406250]
[487.66104126 750.53479004]
[479.38287354 763.04675293]
[470.55172729 775.17462158]
[461.18533325 786.89416504]
[451.30258179 798.18164062]
[440.92337036 809.01440430]
[430.06860352 819.37054443]
[418.76013184 829.22924805]
[407.02075195 838.57073975]
[394.87405396 847.37609863]
[382.34457397 855.62762451]
[369.45748901 863.30871582]
[356.23876953 870.40386963]
[342.71505737 876.89886475]
[328.91354370 882.78057861]
[314.86203003 888.03717041]
[300.58886719 892.65802002]
[286.12274170 896.63385010]
[271.49279785 899.95666504]
[256.72851562 902.61981201]
[241.85963440 904.61779785]
[226.91607666 905.94671631]
[211.92793274 906.60388184]
[196.92541504 906.58789062]
[181.93870544 905.89886475]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 134]
[63 133]
[64 132]
[66 131]
[67 130]
[68 129]
[69 128]
[71 127]
[72 126]
[73 125]
[76 123]
[77 122]
[88 121]
[89 120]
[91 117]
[92 116]
[93 115]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
