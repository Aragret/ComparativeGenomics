%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[76.79965210 494.13891602]
[65.79196930 483.93826294]
[55.59745407 472.92486572]
[46.27591705 461.16342163]
[37.88206863 448.72293091]
[30.46516609 435.67639160]
[24.06873512 422.10034180]
[18.73031616 408.07452393]
[14.48123264 393.68118286]
[11.34642220 379.00482178]
[9.34428310 364.13156128]
[8.48656273 349.14865112]
[8.77829456 334.14407349]
[10.21776867 319.20584106]
[12.79653454 304.42163086]
[16.49946213 289.87820435]
[21.30481720 275.66091919]
[27.18440247 261.85321045]
[34.10371399 248.53608704]
[42.02214432 235.78770447]
[50.89322281 223.68287659]
[60.66489410 212.29264832]
[71.27981567 201.68386841]
[82.67568207 191.91879272]
[94.78562927 183.05470276]
[107.53858185 175.14364624]
[120.85971069 168.23202515]
[114.99074554 154.42785645]
[109.12178802 140.62367249]
[97.02159119 131.93836975]
[98.74255371 116.21104431]
[85.08428955 106.47306824]
[87.30068207 89.84587097]
[81.22685242 76.13059998]
[75.15301514 62.41533279]
[60.68351746 56.64719772]
[54.71916580 42.65143967]
[60.30737305 28.89253426]
[54.23353958 15.17726707]
[48.15970612 1.46200085]
[42.08587265 -12.25326633]
[33.67125320 -24.67076111]
[23.18375397 -35.39514160]
[12.69625187 -46.11952209]
[2.20875096 -56.84389877]
[-8.27875042 -67.56828308]
[-18.76625061 -78.29266357]
[-30.44757652 -68.86443329]
[-42.97222519 -60.58929825]
[-56.22677231 -53.54219055]
[-70.09117889 -47.78693390]
[-84.43988037 -43.37564468]
[-99.14293671 -40.34828186]
[-114.06718445 -38.73225403]
[-129.07746887 -38.54220200]
[-144.03785706 -39.77984619]
[-158.81283569 -42.43397903]
[-173.26863098 -46.48055649]
[-187.27430725 -51.88294220]
[-200.70303345 -58.59220123]
[-213.43318176 -66.54757690]
[-225.34948730 -75.67701721]
[-236.34399414 -85.89785004]
[-246.31715393 -97.11750793]
[-255.17864990 -109.23438263]
[-262.84823608 -122.13874054]
[-269.25643921 -135.71371460]
[-274.34521484 -149.83634949]
[-278.06848145 -164.37876892]
[-280.39254761 -179.20925903]
[-281.29632568 -194.19351196]
[-280.77166748 -209.19583130]
[-278.82330322 -224.08033752]
[-275.46887207 -238.71224976]
[-270.73876953 -252.95903015]
[-264.67584229 -266.69168091]
[-257.33496094 -279.78582764]
[-248.78265381 -292.12286377]
[-239.09632874 -303.59106445]
[-228.36373901 -314.08660889]
[-216.68206787 -323.51440430]
[-204.15711975 -331.78909302]
[-190.90231323 -338.83569336]
[-177.03770447 -344.59045410]
[-162.68884277 -349.00122070]
[-147.98567200 -352.02804565]
[-133.06137085 -353.64352417]
[-118.05107117 -353.83303833]
[-103.09073639 -352.59484863]
[-88.31584167 -349.94018555]
[-73.86019897 -345.89306641]
[-59.85471725 -340.49017334]
[-46.42623901 -333.78042603]
[-33.69637680 -325.82458496]
[-21.78041840 -316.69470215]
[-10.78627682 -306.47348022]
[-0.81351984 -295.25344849]
[8.04753494 -283.13626099]
[15.71663952 -270.23162842]
[22.12434006 -256.65643311]
[27.21260452 -242.53359985]
[30.93535233 -227.99104309]
[33.25886917 -213.16046143]
[34.16211319 -198.17617798]
[33.63690186 -183.17387390]
[31.68799591 -168.28944397]
[28.33304024 -153.65765381]
[23.60242271 -139.41104126]
[17.53898430 -125.67861938]
[10.19763565 -112.58475494]
[1.64486492 -100.24802399]
[-8.04187107 -88.78015900]
[2.44562960 -78.05577850]
[12.93313122 -67.33139801]
[23.42063141 -56.60702133]
[33.90813446 -45.88264084]
[44.39563370 -35.15826416]
[39.75554657 -49.42253876]
[38.61483002 -64.37910461]
[41.03799438 -79.18208313]
[46.88800049 -92.99430847]
[55.83399963 -105.03461456]
[67.37005615 -114.62207794]
[80.84374237 -121.21447754]
[95.49305725 -124.43898010]
[110.48952484 -124.11322784]
[124.98500824 -120.25563812]
[138.15971375 -113.08438110]
[149.26856995 -103.00502014]
[157.68328857 -90.58759308]
[162.92799377 -76.53437042]
[164.70606995 -61.64012909]
[162.91696167 -46.74720764]
[157.66184998 -32.69787598]
[149.23791504 -20.28669167]
[138.12161255 -10.21556473]
[124.94158936 -3.05406737]
[110.44325256 0.79278201]
[95.44654846 1.10742605]
[80.79962158 -2.12792993]
[67.33082581 -8.73031044]
[55.80113983 -18.32710075]
[61.87497330 -4.61183310]
[67.94880676 9.10343361]
[74.02264404 22.81870079]
[87.96656799 27.92776108]
[94.32167816 41.75046921]
[88.86827850 56.34149933]
[94.94211578 70.05676270]
[101.01595306 83.77203369]
[111.60806274 88.61439514]
[116.24458313 99.29821014]
[112.54673004 110.34207916]
[125.06671143 120.01475525]
[122.92596436 134.75471497]
[128.79492188 148.55889893]
[134.66387939 162.36306763]
[148.88377380 157.56539917]
[163.42918396 153.87031555]
[178.21478271 151.29954529]
[193.15379333 149.86813354]
[208.15852356 149.58450317]
[223.14096069 150.45031738]
[238.01313782 152.46049500]
[252.68782043 155.60322571]
[267.07885742 159.86009216]
[281.10180664 165.20608521]
[294.67437744 171.60984802]
[307.71688843 179.03378296]
[320.15286255 187.43435669]
[331.90927124 196.76223755]
[342.91714478 206.96270752]
[353.11187744 217.97589111]
[362.43365479 229.73716736]
[370.82772827 242.17750549]
[378.24487305 255.22390747]
[384.64157104 268.79980469]
[389.98025513 282.82556152]
[394.22961426 297.21881104]
[397.36468506 311.89511108]
[399.36712646 326.76834106]
[400.22512817 341.75122070]
[399.93368530 356.75579834]
[398.49447632 371.69406128]
[395.91598511 386.47833252]
[392.21334839 401.02182007]
[387.40826416 415.23919678]
[381.52893066 429.04702759]
[374.60986328 442.36428833]
[366.69168091 455.11282349]
[357.82083130 467.21780396]
[348.04937744 478.60821533]
[337.43466187 489.21719360]
[326.03897095 498.98251343]
[313.92919922 507.84680176]
[301.17639160 515.75811768]
[287.85540771 522.66998291]
[274.04440308 528.54187012]
[259.82443237 533.33923340]
[245.27893066 537.03405762]
[230.49328613 539.60455322]
[215.55426025 541.03564453]
[200.54951477 541.31903076]
[185.56709290 540.45294189]
[170.69494629 538.44244385]
[156.02033997 535.29943848]
[141.62937927 531.04229736]
[127.60653687 525.69604492]
[114.03408813 519.29205322]
[100.99169159 511.86782837]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 157]
[28 156]
[29 155]
[31 153]
[33 150]
[34 149]
[35 148]
[38 145]
[39 144]
[40 143]
[41 142]
[42 117]
[43 116]
[44 115]
[45 114]
[46 113]
[47 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
