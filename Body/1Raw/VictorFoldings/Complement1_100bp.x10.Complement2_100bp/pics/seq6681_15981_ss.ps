%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[100.72439575 318.62841797]
[99.09382629 333.56243896]
[95.48722839 348.14584351]
[89.96897888 362.11840820]
[82.63754272 375.23074341]
[73.62377167 387.24887085]
[63.08851624 397.95831299]
[51.21979523 407.16790771]
[38.22941971 414.71334839]
[24.34922028 420.45996094]
[9.82690048 424.30517578]
[-5.07836819 426.18038940]
[-20.10058403 426.05212402]
[-34.97166061 423.92266846]
[-49.42620087 419.83001709]
[-63.20625305 413.84725952]
[-76.06589508 406.08108521]
[-87.77561951 396.67016602]
[-98.12647247 385.78240967]
[-106.93371582 373.61212158]
[-114.04017639 360.37649536]
[-119.31903839 346.31173706]
[-122.67608643 331.66888428]
[-124.05141449 316.70919800]
[-123.42047882 301.69967651]
[-120.79453278 286.90820312]
[-116.22044373 272.59872437]
[-109.77984619 259.02661133]
[-101.58766937 246.43409729]
[-91.79012299 235.04588318]
[-80.56204987 225.06521606]
[-68.10382843 216.67019653]
[-54.63779449 210.01066589]
[-40.40426254 205.20545959]
[-25.65724373 202.34034729]
[-10.65992069 201.46644592]
[4.32006502 202.59934998]
[19.01537704 205.71884155]
[33.16376114 210.76925659]
[40.04317093 197.43983459]
[46.92258453 184.11039734]
[53.80199814 170.78097534]
[50.42391205 159.16567993]
[56.04617691 148.00440979]
[68.14187622 143.52592468]
[75.21898651 130.30039978]
[82.29608917 117.07486725]
[89.37319183 103.84934235]
[75.33924866 109.14540863]
[60.84254074 105.29240417]
[51.28999710 93.72742462]
[50.24447250 78.76390076]
[58.09592438 65.98287201]
[71.91595459 60.15134048]
[86.55003357 63.44432449]
[96.54000854 74.63362122]
[98.15963745 89.54704285]
[106.75820160 77.25620270]
[115.35676575 64.96537018]
[123.95532990 52.67453003]
[132.27728271 40.19473648]
[140.31845093 27.53220940]
[148.35961914 14.86968517]
[154.83911133 1.34133935]
[159.66511536 -12.86111641]
[164.49111938 -27.06357193]
[169.31710815 -41.26602936]
[174.14311218 -55.46848297]
[178.96910095 -69.67093658]
[165.10763550 -75.41739655]
[151.65167236 -82.05814362]
[138.65885925 -89.56473541]
[126.18481445 -97.90502930]
[114.28295898 -107.04330444]
[103.00426483 -116.94044495]
[92.39702606 -127.55405426]
[82.50666046 -138.83868408]
[73.37552643 -150.74601746]
[65.04272461 -163.22506714]
[57.54393005 -176.22239685]
[50.91126251 -189.68232727]
[45.17312622 -203.54725647]
[40.35408401 -217.75778198]
[36.47477722 -232.25306702]
[33.55181503 -246.97102356]
[31.59771919 -261.84866333]
[30.62085342 -276.82223511]
[30.62540054 -291.82763672]
[31.61134148 -306.80062866]
[33.57445526 -321.67706299]
[36.50633621 -336.39324951]
[40.39442825 -350.88616943]
[45.22208405 -365.09378052]
[50.96862411 -378.95523071]
[57.60944748 -392.41113281]
[65.11611938 -405.40393066]
[73.45648193 -417.87789917]
[82.59483337 -429.77972412]
[92.49203491 -441.05834961]
[103.10570526 -451.66552734]
[114.39039612 -461.55581665]
[126.29779053 -470.68688965]
[138.77688599 -479.01962280]
[151.77424622 -486.51834106]
[165.23423767 -493.15090942]
[179.09918213 -498.88897705]
[193.30973816 -503.70794678]
[207.80505371 -507.58715820]
[222.52302551 -510.51004028]
[237.40066528 -512.46405029]
[252.37425232 -513.44079590]
[267.37966919 -513.43615723]
[282.35263062 -512.45013428]
[297.22906494 -510.48693848]
[311.94522095 -507.55499268]
[326.43814087 -503.66680908]
[340.64572144 -498.83905029]
[354.50711060 -493.09243774]
[367.96301270 -486.45153809]
[380.95571899 -478.94479370]
[393.42968750 -470.60433960]
[405.33142090 -461.46594238]
[416.61001587 -451.56866455]
[427.21710205 -440.95492554]
[437.10736084 -429.67016602]
[446.23834229 -417.76272583]
[454.57098389 -405.28359985]
[462.06964111 -392.28619385]
[468.70214844 -378.82617188]
[474.44012451 -364.96118164]
[479.25900269 -350.75057983]
[483.13812256 -336.25524902]
[486.06091309 -321.53726196]
[488.01483154 -306.65960693]
[488.99151611 -291.68603516]
[488.98681641 -276.68060303]
[488.00067139 -261.70764160]
[486.03738403 -246.83122253]
[483.10534668 -232.11506653]
[479.21707153 -217.62219238]
[474.38925171 -203.41464233]
[468.64254761 -189.55326843]
[462.00155640 -176.09742737]
[454.49475098 -163.10473633]
[446.15423584 -150.63084412]
[437.01574707 -138.72915649]
[427.11840820 -127.45063782]
[416.50460815 -116.84358215]
[405.21978760 -106.95342255]
[393.31231689 -97.82249451]
[380.83309937 -89.48991394]
[367.83566284 -81.99134827]
[354.37561035 -75.35892487]
[340.51058960 -69.62103271]
[326.29995728 -64.80223846]
[311.80459595 -60.92319107]
[297.08657837 -58.00048828]
[282.20892334 -56.04665375]
[267.23535156 -55.07005310]
[252.22993469 -55.07486725]
[237.25697327 -56.06107330]
[222.38056946 -58.02445221]
[207.66442871 -60.95659256]
[193.17155457 -64.84494019]
[188.34556580 -50.64248657]
[183.51956177 -36.44002914]
[178.69357300 -22.23757362]
[173.86756897 -8.03511906]
[169.04156494 6.16733694]
[180.13710022 -3.92668319]
[193.98944092 -9.68103313]
[208.97125244 -10.41969681]
[223.32246399 -6.05589771]
[235.35711670 2.89770985]
[243.66139221 15.38926506]
[247.25971985 29.95127296]
[245.72935486 44.87300110]
[239.25010681 58.40146255]
[228.58312988 68.94734955]
[214.98158264 75.27173615]
[200.04335022 76.63163757]
[185.52337646 72.86730194]
[173.12744141 64.42095947]
[164.31181335 52.28487015]
[160.11213684 37.88477707]
[161.02214050 22.91085815]
[152.98097229 35.57338333]
[144.93980408 48.23590851]
[145.34698486 51.73826981]
[144.07798767 55.61186218]
[140.97682190 59.06671906]
[136.24617004 61.27309418]
[127.64760590 73.56392670]
[119.04904175 85.85476685]
[110.45047760 98.14560699]
[102.59872437 110.92644501]
[95.52161407 124.15197754]
[88.44451141 137.37750244]
[81.36740875 150.60302734]
[82.38829041 168.98887634]
[67.13142395 177.66038513]
[60.25201416 190.98980713]
[53.37260056 204.31924438]
[46.49318695 217.64866638]
[58.80624390 226.25518799]
[69.86225128 236.42613220]
[79.46391296 247.97999573]
[87.43986511 260.71057129]
[93.64777374 274.39068604]
[97.97685242 288.77615356]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 204]
[40 203]
[41 202]
[42 201]
[45 199]
[46 198]
[47 197]
[48 196]
[57 195]
[58 194]
[59 193]
[60 192]
[61 188]
[62 187]
[63 186]
[64 169]
[65 168]
[66 167]
[67 166]
[68 165]
[69 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
