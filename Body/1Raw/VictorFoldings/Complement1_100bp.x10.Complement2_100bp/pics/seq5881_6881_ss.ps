%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxGAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUU\
) } def
/len { sequence length } bind def

/coor [
[25.79331398 524.13916016]
[23.95220947 539.04077148]
[20.51072311 553.65594482]
[15.50920773 567.81335449]
[9.00630093 581.34698486]
[1.07824695 594.09820557]
[-8.18200207 605.91748047]
[-18.66587448 616.66619873]
[-30.25045204 626.21844482]
[-42.79991150 634.46209717]
[-56.16711807 641.30059814]
[-70.19534302 646.65374756]
[-84.72012329 650.45874023]
[-99.57115173 652.67102051]
[-114.57431793 653.26464844]
[-129.55371094 652.23260498]
[-144.33369446 649.58703613]
[-158.74101257 645.35894775]
[-172.60670471 639.59790039]
[-185.76823425 632.37145996]
[-198.07128906 623.76434326]
[-209.37159729 613.87750244]
[-219.53669739 602.82678223]
[-228.44738770 590.74182129]
[-235.99920654 577.76422119]
[-242.10360718 564.04626465]
[-246.68902588 549.74865723]
[-249.70169067 535.03906250]
[-251.10627747 520.09002686]
[-250.88633728 505.07675171]
[-249.04443359 490.17523193]
[-245.60215759 475.56024170]
[-240.59988403 461.40310669]
[-234.09623718 447.86981201]
[-226.16749573 435.11904907]
[-216.90661621 423.30029297]
[-206.42216492 412.55209351]
[-194.83708191 403.00051880]
[-182.28717041 394.75750732]
[-168.91960144 387.91970825]
[-154.89108276 382.56735229]
[-140.36610413 378.76312256]
[-125.51495361 376.55163574]
[-110.51175690 375.95886230]
[-95.53242493 376.99169922]
[-80.75257111 379.63806152]
[-66.34548950 383.86691284]
[-52.48009872 389.62869263]
[-39.31895447 396.85583496]
[-30.72039032 384.56500244]
[-22.12182808 372.27416992]
[-13.52326298 359.98333740]
[-4.92469931 347.69250488]
[2.73589826 334.79617310]
[9.41609287 321.36578369]
[16.09628677 307.93542480]
[22.77648163 294.50503540]
[29.45667648 281.07464600]
[35.22270966 267.22717285]
[40.04870605 253.02471924]
[44.87470627 238.82226562]
[49.70070267 224.61981201]
[54.52669907 210.41735840]
[43.81237793 200.04100037]
[38.64451218 185.98387146]
[40.09839630 171.01567078]
[47.93896484 158.11041260]
[60.65686798 149.85560608]
[75.75874329 147.93345642]
[80.58473969 133.73098755]
[85.41074371 119.52854156]
[90.23674011 105.32608032]
[76.33796692 110.96736908]
[62.46796417 105.25571442]
[56.57209778 91.46300507]
[62.02779007 77.49034119]
[75.70977020 71.34188843]
[89.78038025 76.53977203]
[96.17928314 90.10544586]
[102.25312042 76.39018250]
[108.32695007 62.67491531]
[114.40078735 48.95964813]
[100.43963623 54.44474792]
[86.17951202 49.79191971]
[78.13994598 37.12837219]
[79.99652100 22.24371338]
[90.90044403 11.94300365]
[105.86656952 10.93559265]
[118.05260468 19.68205261]
[121.88709259 34.18546677]
[122.04721832 18.36507225]
[135.09376526 11.17918491]
[142.56150818 -1.82976770]
[137.68351746 -18.62930679]
[146.29516602 -33.46690750]
[162.64511108 -37.40617371]
[169.91833496 -50.52486801]
[177.19157410 -63.64356232]
[184.46479797 -76.76225281]
[172.38932800 -85.69747162]
[161.58349609 -96.13245392]
[152.23219299 -107.88864899]
[144.49542236 -120.76488495]
[138.50558472 -134.54083252]
[134.36517334 -148.98078918]
[132.14503479 -163.83763123]
[131.88316345 -178.85716248]
[133.58403015 -193.78237915]
[137.21852112 -208.35789490]
[142.72447205 -222.33428955]
[150.00765991 -235.47241211]
[158.94345093 -247.54743958]
[169.37895203 -258.35278320]
[181.13558960 -267.70355225]
[194.01219177 -275.43969727]
[207.78843689 -281.42886353]
[222.22857666 -285.56860352]
[237.08552551 -287.78802490]
[252.10507202 -288.04919434]
[267.03021240 -286.34762573]
[281.60552979 -282.71240234]
[295.58166504 -277.20581055]
[308.71945190 -269.92199707]
[320.79406738 -260.98562622]
[331.59890747 -250.54960632]
[340.94909668 -238.79252625]
[348.68463135 -225.91555786]
[354.67315674 -212.13903809]
[358.81219482 -197.69869995]
[361.03091431 -182.84162903]
[361.29138184 -167.82206726]
[359.58908081 -152.89701843]
[355.95318604 -138.32185364]
[350.44592285 -124.34599304]
[343.16146851 -111.20856476]
[334.22454834 -99.13436890]
[323.78802490 -88.33002472]
[312.03048706 -78.98039246]
[299.15313721 -71.24546814]
[285.37634277 -65.25759888]
[270.93579102 -61.11925125]
[256.07864380 -58.90123367]
[241.05906677 -58.64149857]
[226.13409424 -60.34449387]
[211.55909729 -63.98107910]
[197.58349609 -69.48902893]
[190.31027222 -56.37033081]
[183.03703308 -43.25163651]
[175.76380920 -30.13294411]
[181.01252747 -18.36517334]
[178.48738098 -5.53139973]
[168.89042664 3.63968730]
[155.57046509 5.63797331]
[148.10272217 18.64692497]
[148.47673035 33.53683472]
[134.89604187 41.65320969]
[128.11605835 55.03348160]
[122.04222107 68.74874878]
[115.96838379 82.46401978]
[109.89455414 96.17928314]
[104.43919373 110.15208435]
[99.61319733 124.35453796]
[94.78720093 138.55699158]
[89.96119690 152.75944519]
[100.76554108 163.48454285]
[105.82125854 177.77882385]
[104.17606354 192.78927612]
[96.20952606 205.54447937]
[83.54718018 213.54289246]
[68.72915649 215.24334717]
[63.90316010 229.44580078]
[59.07715988 243.64825439]
[54.25116348 257.85070801]
[49.42516708 272.05316162]
[62.02850342 263.91955566]
[77.02789307 263.78451538]
[89.77561951 271.68994141]
[96.32164764 285.18621826]
[94.63763428 300.09136963]
[85.24538422 311.78689575]
[71.05518341 316.64883423]
[56.46401978 313.17059326]
[45.99313354 302.42999268]
[42.88705444 287.75485229]
[36.20685959 301.18524170]
[29.52666283 314.61560059]
[22.84646797 328.04598999]
[16.16627502 341.47634888]
[29.48343849 334.57324219]
[44.47216034 335.15478516]
[57.21442413 343.06900024]
[64.37943268 356.24710083]
[64.09427643 371.24438477]
[56.43348312 384.14059448]
[43.39957047 391.56469727]
[28.39957428 391.57601929]
[15.35445690 384.17166138]
[7.67417908 371.28704834]
[7.36613894 356.29104614]
[-1.23242521 368.58187866]
[-9.83098888 380.87274170]
[-18.42955399 393.16357422]
[-27.02811623 405.45440674]
[-15.72726917 415.34066772]
[-5.56157970 426.39080811]
[3.34976292 438.47531128]
[10.90227890 451.45248413]
[17.00741768 465.17016602]
[21.59359932 479.46749878]
[24.60705566 494.17691040]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 203]
[50 202]
[51 201]
[52 200]
[53 199]
[54 188]
[55 187]
[56 186]
[57 185]
[58 184]
[59 174]
[60 173]
[61 172]
[62 171]
[63 170]
[69 164]
[70 163]
[71 162]
[72 161]
[79 160]
[80 159]
[81 158]
[82 157]
[90 156]
[92 154]
[93 153]
[96 149]
[97 148]
[98 147]
[99 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
