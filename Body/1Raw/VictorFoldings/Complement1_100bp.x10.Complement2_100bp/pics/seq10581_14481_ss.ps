%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCGxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[116.96031952 296.38592529]
[114.16104889 311.13613892]
[109.85997009 325.52029419]
[104.10266113 339.38601685]
[96.95016479 352.58621216]
[88.47830200 364.98104858]
[78.77687073 376.43905640]
[67.94872284 386.83883667]
[56.10863113 396.07009888]
[43.38211823 404.03500366]
[29.90408325 410.64913940]
[15.81740665 415.84237671]
[1.27141285 419.55963135]
[-13.57970238 421.76153564]
[-28.57850838 422.42474365]
[-43.56600952 421.54223633]
[-58.38333130 419.12335205]
[-72.87339783 415.19372559]
[-86.88261414 409.79501343]
[-100.26245880 402.98446655]
[-112.87111664 394.83425903]
[-124.57492065 385.43081665]
[-135.24980164 374.87377930]
[-144.78260803 363.27508545]
[-153.07228088 350.75769043]
[-160.03092957 337.45425415]
[-165.58482361 323.50582886]
[-169.67506409 309.06027222]
[-172.25828552 294.27072144]
[-173.30712891 279.29394531]
[-172.81045532 264.28869629]
[-170.77354431 249.41406250]
[-167.21798706 234.82769775]
[-162.18145752 220.68423462]
[-155.71736145 207.13360596]
[-147.89421082 194.31945801]
[-138.79495239 182.37762451]
[-128.51602173 171.43469238]
[-117.16640472 161.60667419]
[-104.86639404 152.99772644]
[-91.74639130 145.69914246]
[-77.94545746 139.78826904]
[-63.60991287 135.32777405]
[-48.89170456 132.36492920]
[-33.94686127 130.93115234]
[-18.93380737 131.04164124]
[-4.01168633 132.69523621]
[10.66131687 135.87438965]
[24.92966080 140.54539490]
[38.64209366 146.65876770]
[51.65325165 154.14967346]
[60.43385696 141.98822021]
[69.21446228 129.82676697]
[77.99506378 117.66530609]
[86.77566528 105.50385284]
[88.38666534 91.61514282]
[101.06288147 85.71554565]
[101.34980774 81.38291931]
[102.84967041 77.73395538]
[105.19860077 75.06600952]
[107.97354126 73.52772522]
[110.74587250 73.11261749]
[120.23477173 61.49535370]
[129.72366333 49.87808990]
[139.21257019 38.26082611]
[128.07260132 28.21134758]
[117.43914032 17.62735939]
[107.33783722 6.53436184]
[97.79299927 -5.04092264]
[88.82763672 -17.07060814]
[80.46334839 -29.52571297]
[72.72026825 -42.37623215]
[65.61706543 -55.59120560]
[59.17085266 -69.13880157]
[53.39715195 -82.98638153]
[48.30987167 -97.10057831]
[43.92127609 -111.44740295]
[40.24193192 -125.99227905]
[37.28070068 -140.70018005]
[35.04472351 -155.53565979]
[33.53938293 -170.46298218]
[32.76830292 -185.44618225]
[32.73334885 -200.44917297]
[33.43459702 -215.43582153]
[34.87036133 -230.36999512]
[37.03718185 -245.21572876]
[39.92984009 -259.93725586]
[43.54136658 -274.49911499]
[47.86306000 -288.86624146]
[52.88451004 -303.00399780]
[58.59362030 -316.87832642]
[64.97663879 -330.45581055]
[72.01818085 -343.70373535]
[79.70128632 -356.59020996]
[88.00745392 -369.08416748]
[96.91665649 -381.15548706]
[106.40744781 -392.77511597]
[116.45695496 -403.91506958]
[127.04096985 -414.54849243]
[138.13398743 -424.64978027]
[149.70930481 -434.19458008]
[161.73901367 -443.15991211]
[174.19413757 -451.52416992]
[187.04466248 -459.26721191]
[200.25965881 -466.37039185]
[213.80728149 -472.81658936]
[227.65486145 -478.59024048]
[241.76907349 -483.67749023]
[256.11590576 -488.06604004]
[270.66079712 -491.74536133]
[285.36871338 -494.70654297]
[300.20419312 -496.94250488]
[315.13150024 -498.44778442]
[330.11471558 -499.21884155]
[345.11770630 -499.25375366]
[360.10433960 -498.55245972]
[375.03851318 -497.11666870]
[389.88424683 -494.94979858]
[404.60577393 -492.05712891]
[419.16763306 -488.44555664]
[433.53472900 -484.12380981]
[447.67248535 -479.10232544]
[461.54681396 -473.39318848]
[475.12426758 -467.01013184]
[488.37219238 -459.96856689]
[501.25863647 -452.28543091]
[513.75256348 -443.97924805]
[525.82385254 -435.07000732]
[537.44348145 -425.57919312]
[548.58343506 -415.52963257]
[559.21679688 -404.94561768]
[569.31805420 -393.85256958]
[578.86285400 -382.27722168]
[587.82812500 -370.24749756]
[596.19238281 -357.79235840]
[603.93536377 -344.94180298]
[611.03851318 -331.72677612]
[617.48468018 -318.17913818]
[623.25830078 -304.33154297]
[628.34552002 -290.21731567]
[632.73400879 -275.87048340]
[636.41333008 -261.32559204]
[639.37445068 -246.61767578]
[641.61035156 -231.78218079]
[643.11566162 -216.85485840]
[643.88665771 -201.87164307]
[643.92150879 -186.86865234]
[643.22021484 -171.88201904]
[641.78436279 -156.94784546]
[639.61743164 -142.10211182]
[636.72473145 -127.38059998]
[633.11315918 -112.81874847]
[628.79138184 -98.45165253]
[623.76983643 -84.31392670]
[618.06066895 -70.43962097]
[611.67761230 -56.86216736]
[604.63598633 -43.61426926]
[596.95281982 -30.72784424]
[588.64660645 -18.23394012]
[579.73730469 -6.16265106]
[570.24645996 5.45693874]
[560.19689941 16.59683800]
[549.61285400 27.23020935]
[538.51977539 37.33143616]
[526.94439697 46.87618256]
[514.91467285 55.84145737]
[502.45947266 64.20565796]
[489.60891724 71.94863892]
[476.39389038 79.05174255]
[462.84625244 85.49785614]
[448.99862671 91.27145386]
[434.88436890 96.35862732]
[420.53753662 100.74711609]
[405.99261475 104.42635345]
[391.28469849 107.38747406]
[376.44921875 109.62333679]
[361.52188110 111.12857056]
[346.53866577 111.89953613]
[331.53567505 111.93437958]
[316.54904175 111.23302460]
[301.61486816 109.79714203]
[286.76913452 107.63021088]
[272.04763794 104.73744202]
[257.48580933 101.12580872]
[243.11871338 96.80400848]
[228.98100281 91.78245544]
[215.10670471 86.07324219]
[201.52926636 79.69012451]
[188.28138733 72.64848328]
[175.39498901 64.96527863]
[162.90109253 56.65902328]
[150.82983398 47.74972534]
[141.34092712 59.36698914]
[131.85203552 70.98425293]
[122.36313629 82.60151672]
[113.22433472 94.49614716]
[111.61333466 108.38485718]
[98.93711853 114.28445435]
[90.15651703 126.44591522]
[81.37591553 138.60736084]
[72.59531403 150.76882935]
[63.81470871 162.93028259]
[75.01937103 172.92326355]
[85.13713837 184.01536560]
[94.06076813 196.08900452]
[101.69564819 209.01620483]
[107.96086121 222.65992737]
[112.78998566 236.87554932]
[116.13182068 251.51234436]
[117.95095825 266.41519165]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 202]
[52 201]
[53 200]
[54 199]
[55 198]
[57 196]
[62 195]
[63 194]
[64 193]
[65 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
