%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[104.44216919 729.20458984]
[89.95771790 725.27081299]
[75.85906219 720.12286377]
[62.24777603 713.79772949]
[49.22193527 706.34112549]
[36.87538910 697.80670166]
[25.29710388 688.25592041]
[14.57049751 677.75762939]
[4.77285671 666.38751221]
[-4.02522373 654.22741699]
[-11.76035309 641.36499023]
[-18.37679863 627.89294434]
[-23.82688713 613.90832520]
[-28.07135201 599.51184082]
[-31.07960892 584.80725098]
[-32.82998276 569.90057373]
[-33.30986786 554.89910889]
[-32.51579666 539.91101074]
[-30.45349693 525.04425049]
[-27.13782692 510.40591431]
[-22.59267616 496.10153198]
[-16.85079193 482.23413086]
[-9.95354843 468.90365601]
[-1.95063770 456.20611572]
[7.10027599 444.23303223]
[17.13397980 433.07067871]
[28.07818031 422.79943848]
[39.85402298 413.49334717]
[52.37665939 405.21942139]
[65.55586243 398.03735352]
[79.29667664 391.99880981]
[93.50009918 387.14733887]
[108.06378937 383.51791382]
[122.88280487 381.13662720]
[121.76715851 366.17819214]
[120.65151215 351.21972656]
[119.53585815 336.26129150]
[118.42021179 321.30282593]
[109.75772858 309.18627930]
[116.44718933 294.84884644]
[115.33154297 279.89041138]
[114.21589661 264.93194580]
[112.65537262 250.01333618]
[110.65135956 235.14781189]
[108.64734650 220.28228760]
[106.64333344 205.41676331]
[104.63932037 190.55122375]
[102.63530731 175.68569946]
[100.63128662 160.82017517]
[98.62727356 145.95465088]
[86.80562592 144.04113770]
[75.87919617 139.13949585]
[66.58933258 131.58229065]
[59.56634521 121.88226318]
[55.28673172 110.69754791]
[54.04086304 98.78701019]
[55.91326141 86.95877838]
[60.77689743 76.01538086]
[68.30177307 66.69931030]
[77.97733307 59.64264679]
[89.14710236 55.32418442]
[88.03145599 40.36573029]
[86.91580963 25.40727806]
[85.80016327 10.44882488]
[84.68450928 -4.50962877]
[83.56886292 -19.46808243]
[72.41891479 -27.02409363]
[67.72512054 -39.44096375]
[70.99147034 -52.10639191]
[80.80852509 -60.45235062]
[79.91571045 -75.42575836]
[78.91144562 -90.39210510]
[77.79579926 -105.35055542]
[76.68015289 -120.30900574]
[75.56449890 -135.26745605]
[74.22626495 -150.20764160]
[72.66574097 -165.12625122]
[71.10521698 -180.04486084]
[69.54470062 -194.96345520]
[67.98417664 -209.88206482]
[52.96868134 -210.41221619]
[38.17311096 -213.02703857]
[23.88546944 -217.67562866]
[10.38386726 -224.26751709]
[-2.06888318 -232.67436218]
[-13.23038578 -242.73254395]
[-22.88337708 -254.24627686]
[-30.83996010 -266.99142456]
[-36.94525528 -280.71990967]
[-41.08042526 -295.16452026]
[-43.16497803 -310.04406738]
[-43.15832901 -325.06890869]
[-41.06061935 -339.94659424]
[-36.91267014 -354.38754272]
[-30.79523277 -368.11062622]
[-22.82737732 -380.84872437]
[-13.16420364 -392.35391235]
[-1.99380791 -402.40222168]
[10.46637535 -410.79803467]
[23.97380447 -417.37799072]
[38.26555252 -422.01391602]
[53.06342697 -424.61566162]
[68.07938385 -425.13253784]
[83.02113342 -423.55447388]
[97.59783173 -419.91220093]
[111.52573395 -414.27664185]
[124.53372955 -406.75744629]
[136.36862183 -397.50103760]
[146.80003357 -386.68753052]
[155.62490845 -374.52743530]
[162.67149353 -361.25747681]
[167.80259705 -347.13595581]
[170.91835022 -332.43771362]
[171.95809937 -317.44888306]
[170.90162659 -302.46121216]
[167.76947021 -287.76644897]
[162.62260437 -273.65066528]
[155.56123352 -260.38854980]
[146.72277832 -248.23834229]
[136.27931213 -237.43649292]
[124.43409729 -228.19326782]
[111.41771698 -220.68861389]
[97.48352814 -215.06858826]
[82.90277863 -211.44259644]
[84.46330261 -196.52398682]
[86.02382660 -181.60537720]
[87.58435059 -166.68676758]
[89.14487457 -151.76817322]
[92.22499084 -148.11825562]
[93.04494476 -142.49465942]
[90.52295685 -136.38311768]
[91.63860321 -121.42465973]
[92.75424957 -106.46620178]
[93.86990356 -91.50775146]
[97.50218201 -85.07126617]
[94.88911438 -76.31857300]
[95.78192902 -61.34516907]
[108.82614899 -50.72975540]
[110.18356323 -33.62793350]
[98.52731323 -20.58373070]
[99.64296722 -5.62527752]
[100.75861359 9.33317566]
[101.87425995 24.29162979]
[102.98991394 39.25008392]
[104.10556030 54.20853424]
[121.34818268 59.28183365]
[135.32807922 70.57823181]
[143.90867615 86.37126923]
[145.77853394 104.24723053]
[140.65191650 121.47406769]
[129.31231689 135.41894531]
[113.49280548 143.95063782]
[115.49681854 158.81616211]
[117.50083160 173.68168640]
[119.50484467 188.54721069]
[121.50885773 203.41275024]
[123.51287079 218.27827454]
[125.51688385 233.14379883]
[127.52089691 248.00932312]
[130.29556274 251.34927368]
[131.71984863 255.02839661]
[131.85292053 258.58053589]
[130.89930725 261.60662842]
[129.17434692 263.81628418]
[130.28999329 278.77474976]
[131.40563965 293.73321533]
[140.14791870 306.91967773]
[133.37866211 320.18716431]
[134.49430847 335.14562988]
[135.60997009 350.10409546]
[136.72561646 365.06253052]
[137.84126282 380.02099609]
[152.84956360 380.17764282]
[167.79052734 381.60653687]
[182.55647278 384.29736328]
[197.04101562 388.23077393]
[211.13981628 393.37838745]
[224.75126648 399.70312500]
[237.77729797 407.15939331]
[250.12406921 415.69354248]
[261.70260620 425.24398804]
[272.42947388 435.74200439]
[282.22741699 447.11187744]
[291.02581787 459.27172852]
[298.76126099 472.13394165]
[305.37805176 485.60583496]
[310.82852173 499.59033203]
[315.07333374 513.98669434]
[318.08197021 528.69122314]
[319.83273315 543.59783936]
[320.31301880 558.59930420]
[319.51931763 573.58740234]
[317.45739746 588.45422363]
[314.14212036 603.09265137]
[309.59735107 617.39715576]
[303.85580444 631.26470947]
[296.95892334 644.59533691]
[288.95632935 657.29309082]
[279.90573120 669.26641846]
[269.87231445 680.42901611]
[258.92837524 690.70056152]
[247.15277100 700.00695801]
[234.63035583 708.28118896]
[221.45132446 715.46362305]
[207.71067810 721.50250244]
[193.50738525 726.35430908]
[178.94378662 729.98413086]
[164.12483215 732.36578369]
[149.15727234 733.48211670]
[134.14897156 733.32507324]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 172]
[35 171]
[36 170]
[37 169]
[38 168]
[40 166]
[41 165]
[42 164]
[43 159]
[44 158]
[45 157]
[46 156]
[47 155]
[48 154]
[49 153]
[50 152]
[61 145]
[62 144]
[63 143]
[64 142]
[65 141]
[66 140]
[70 137]
[71 136]
[72 134]
[73 133]
[74 132]
[75 131]
[76 128]
[77 127]
[78 126]
[79 125]
[80 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
