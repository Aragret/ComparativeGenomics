%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[238.39398193 487.38900757]
[247.14157104 475.17181396]
[257.53887939 464.32391357]
[269.37420654 455.06619263]
[261.90649414 442.05722046]
[254.43873596 429.04827881]
[246.97099304 416.03933716]
[239.50325012 403.03036499]
[232.03550720 390.02142334]
[224.56777954 377.01248169]
[217.10003662 364.00350952]
[209.63229370 350.99456787]
[194.00344849 343.01296997]
[194.20233154 324.59985352]
[186.54173279 311.70355225]
[180.36624146 325.37332153]
[165.86677551 329.21594238]
[153.73182678 320.39877319]
[152.90681458 305.42147827]
[163.99990845 295.32476807]
[178.83232117 297.55065918]
[172.15213013 284.12030029]
[165.47193909 270.68991089]
[152.87623596 262.74020386]
[153.65803528 246.93833923]
[146.97784424 233.50796509]
[139.80273438 246.68058777]
[125.05763245 249.43414307]
[113.61208344 239.73881531]
[113.90331268 224.74163818]
[125.71663666 215.49797058]
[140.34242249 218.82089233]
[134.67964172 204.93086243]
[129.01684570 191.04083252]
[123.35406494 177.15080261]
[117.69127655 163.26077271]
[105.72173309 154.39628601]
[107.67665863 138.69631958]
[95.70711517 129.83181763]
[97.66204071 114.13185883]
[86.73600006 105.40756226]
[88.44792938 91.53092957]
[76.07334900 81.67292786]
[78.43331909 66.96646881]
[72.77053070 53.07644272]
[67.10774231 39.18641663]
[60.97016907 32.42121124]
[61.46574402 25.04718781]
[56.01038742 11.07439041]
[50.55503082 -2.89840746]
[38.32859039 -12.93955994]
[40.90725327 -27.60924911]
[28.68081284 -37.65040207]
[31.25947380 -52.32009125]
[25.80411720 -66.29288483]
[12.92794991 -70.24496460]
[4.79761887 -80.73820496]
[4.20418596 -93.80457306]
[11.14048100 -104.66355133]
[5.89376259 -118.71601868]
[0.64704454 -132.76849365]
[-4.70414114 -146.78150940]
[-10.15949821 -160.75431824]
[-15.61485577 -174.72711182]
[-30.10206032 -170.78338623]
[-44.92638779 -168.40191650]
[-59.91986847 -167.60969543]
[-74.91261292 -168.41569519]
[-89.73474884 -170.81079102]
[-104.21832275 -174.76783752]
[-118.19922638 -180.24200439]
[-131.51904297 -187.17124939]
[-144.02685547 -195.47708130]
[-155.58093262 -205.06536865]
[-166.05035400 -215.82748413]
[-175.31651306 -227.64147949]
[-183.27439880 -240.37348938]
[-189.83386230 -253.87925720]
[-194.92054749 -268.00573730]
[-198.47685242 -282.59289551]
[-200.46244812 -297.47543335]
[-200.85485840 -312.48468018]
[-199.64964294 -327.45062256]
[-196.86044312 -342.20367432]
[-192.51885986 -356.57666016]
[-186.67410278 -370.40673828]
[-179.39237976 -383.53720093]
[-170.75621033 -395.81924438]
[-160.86344910 -407.11370850]
[-149.82618713 -417.29266357]
[-137.76947021 -426.24072266]
[-124.82993317 -433.85650635]
[-111.15417480 -440.05377197]
[-96.89716339 -444.76223755]
[-82.22043610 -447.92855835]
[-67.29028320 -449.51690674]
[-52.27589035 -449.50921631]
[-37.34737396 -447.90563965]
[-22.67388535 -444.72430420]
[-8.42168903 -440.00128174]
[5.24772835 -433.79006958]
[18.17948151 -426.16107178]
[30.22704315 -417.20068359]
[41.25390625 -407.01046753]
[51.13512802 -395.70590210]
[59.75874710 -383.41503906]
[67.02704620 -370.27716064]
[72.85768127 -356.44113159]
[77.18457031 -342.06369019]
[79.95870209 -327.30780029]
[81.14863586 -312.34063721]
[80.74088287 -297.33178711]
[78.74008179 -282.45129395]
[75.16888428 -267.86779785]
[70.06776428 -253.74650574]
[63.49451828 -240.24745178]
[55.52362442 -227.52357483]
[46.24540710 -215.71905518]
[35.76498795 -204.96763611]
[24.20112038 -195.39115906]
[11.68483162 -187.09811401]
[-1.64205766 -180.18246460]
[3.81329942 -166.20967102]
[9.26865673 -152.23687744]
[14.62954617 -147.14936829]
[14.69951534 -138.01521301]
[19.94623375 -123.96273804]
[25.19295311 -109.91026306]
[40.77765656 -103.58921051]
[47.09300232 -87.63831329]
[39.77691650 -71.74824524]
[45.23227310 -57.77544785]
[57.06850815 -48.73372269]
[54.88005066 -33.06460571]
[66.71628571 -24.02288055]
[64.52783203 -8.35376453]
[69.98318481 5.61903334]
[75.43854523 19.59183121]
[80.99777222 33.52362823]
[86.66055298 47.41365814]
[92.32334137 61.30368423]
[104.29288483 70.16818237]
[102.33795929 85.86814117]
[113.26399994 94.59243774]
[111.55207062 108.46907043]
[123.92665100 118.32707214]
[121.56668091 133.03352356]
[133.94126892 142.89154053]
[131.58129883 157.59799194]
[137.24409485 171.48802185]
[142.90687561 185.37805176]
[148.56965637 199.26806641]
[154.23245239 213.15809631]
[160.40821838 226.82777405]
[167.08840942 240.25814819]
[180.16192627 249.16847229]
[178.90231323 264.00970459]
[185.58250427 277.44009399]
[192.26269531 290.87045288]
[199.43806458 304.04293823]
[207.09866333 316.93927002]
[219.38227844 320.87316895]
[225.49731445 331.77227783]
[222.64125061 343.52682495]
[230.10897827 356.53576660]
[237.57672119 369.54473877]
[245.04446411 382.55368042]
[252.51220703 395.56262207]
[259.97994995 408.57159424]
[267.44769287 421.58053589]
[274.91543579 434.58947754]
[282.38317871 447.59844971]
[296.34597778 442.04681396]
[310.95678711 438.53890991]
[325.91809082 437.14611816]
[340.92532349 437.89682007]
[355.67297363 440.77569580]
[369.86077881 445.72415161]
[383.19985962 452.64147949]
[395.41870117 461.38677979]
[406.26852417 471.78207397]
[415.52844238 483.61569214]
[423.00994873 496.64675903]
[428.56069946 510.60992432]
[432.06771851 525.22094727]
[433.45956421 540.18231201]
[432.70794678 555.18951416]
[429.82815552 569.93695068]
[424.87881470 584.12445068]
[417.96066284 597.46313477]
[409.21459961 609.68145752]
[398.81863403 620.53063965]
[386.98443604 629.78979492]
[373.95294189 637.27050781]
[359.98944092 642.82037354]
[345.37820435 646.32647705]
[330.41671753 647.71740723]
[315.40957642 646.96484375]
[300.66229248 644.08416748]
[286.47512817 639.13391113]
[273.13687134 632.21496582]
[260.91909790 623.46813965]
[250.07057190 613.07153320]
[240.81211853 601.23675537]
[233.33222961 588.20477295]
[227.78320312 574.24090576]
[224.27801514 559.62945557]
[222.88800049 544.66790771]
[223.64147949 529.66082764]
[226.52310181 514.91369629]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 172]
[5 171]
[6 170]
[7 169]
[8 168]
[9 167]
[10 166]
[11 165]
[12 164]
[14 161]
[15 160]
[21 159]
[22 158]
[23 157]
[25 155]
[26 154]
[32 153]
[33 152]
[34 151]
[35 150]
[36 149]
[38 147]
[40 145]
[42 143]
[44 141]
[45 140]
[46 139]
[48 138]
[49 137]
[50 136]
[52 134]
[54 132]
[55 131]
[59 128]
[60 127]
[61 126]
[62 124]
[63 123]
[64 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
