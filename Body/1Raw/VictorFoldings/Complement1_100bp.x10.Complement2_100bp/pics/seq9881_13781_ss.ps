%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[124.80281067 616.74414062]
[113.20829773 607.21087646]
[102.52873993 596.66278076]
[92.85262299 585.18725586]
[84.26013947 572.87933350]
[76.82248688 559.84106445]
[70.60128784 546.18048096]
[65.64810944 532.01074219]
[62.00398636 517.44927979]
[59.69911957 502.61682129]
[58.75260162 487.63616943]
[59.17228699 472.63156128]
[60.95468903 457.72723389]
[64.08503723 443.04678345]
[68.53739929 428.71179199]
[74.27487946 414.84109497]
[81.24993134 401.54959106]
[89.40475464 388.94744873]
[98.67177582 377.13906860]
[108.97420502 366.22232056]
[120.22666931 356.28768921]
[132.33592224 347.41744995]
[145.20164490 339.68511963]
[158.71719360 333.15478516]
[172.77058411 327.88058472]
[168.79847717 313.41604614]
[164.82638550 298.95153809]
[160.85429382 284.48699951]
[156.66728210 270.08322144]
[145.53631592 260.18618774]
[148.88412476 244.72325134]
[144.48313904 230.38340759]
[140.08213806 216.04356384]
[135.68113708 201.70372009]
[131.17350769 187.39703369]
[126.55950165 173.12429810]
[121.00027466 159.19248962]
[114.42024231 145.71275330]
[101.82454681 137.76306152]
[102.60634613 121.96118927]
[95.92614746 108.53081512]
[91.46039581 105.77926636]
[88.85417938 100.72150421]
[89.25371552 94.59963226]
[82.97635651 80.97631836]
[67.69790649 70.69766998]
[69.98744965 53.29867935]
[63.50795364 39.77033234]
[57.02845764 26.24198723]
[50.54896164 12.71364117]
[43.96893692 -0.76609355]
[30.89542198 -9.67641544]
[32.15503693 -24.51766396]
[25.47484016 -37.94804001]
[18.79464722 -51.37841415]
[12.11445141 -64.80879211]
[5.43425703 -78.23916626]
[-1.44515538 -91.56859589]
[-8.52226067 -104.79412079]
[-15.59936619 -118.01965332]
[-22.67647171 -131.24517822]
[-29.75357628 -144.47070312]
[-43.08658600 -152.98783875]
[-42.26941299 -167.86000061]
[-55.60242081 -176.37712097]
[-54.78524780 -191.24929810]
[-61.86235046 -204.47482300]
[-75.96686554 -199.29711914]
[-90.65473938 -196.13282776]
[-105.64005280 -195.04357910]
[-120.63111877 -196.05055237]
[-135.33613586 -199.13417053]
[-149.46885681 -204.23437500]
[-162.75419617 -211.25192261]
[-174.93354797 -220.05020142]
[-185.76983643 -230.45793152]
[-195.05212402 -242.27255249]
[-202.59973145 -255.26408386]
[-208.26574707 -269.17962646]
[-211.93986511 -283.74832153]
[-213.55059814 -298.68658447]
[-213.06655884 -313.70364380]
[-210.49719238 -328.50717163]
[-205.89250183 -342.80902100]
[-199.34211731 -356.33081055]
[-190.97355652 -368.80932617]
[-180.94970703 -380.00164795]
[-169.46568298 -389.68997192]
[-156.74502563 -397.68566895]
[-143.03535461 -403.83309937]
[-128.60351562 -408.01260376]
[-113.73044586 -410.14285278]
[-98.70565033 -410.18234253]
[-83.82157898 -408.13034058]
[-69.36797333 -404.02676392]
[-55.62616348 -397.95150757]
[-42.86364365 -390.02279663]
[-31.32883835 -380.39501953]
[-21.24627686 -369.25552368]
[-12.81221581 -356.82119751]
[-6.19083023 -343.33401489]
[-1.51100647 -329.05657959]
[1.13616168 -314.26678467]
[1.69914603 -299.25247192]
[0.16698819 -284.30593872]
[-3.43048811 -269.71813965]
[-9.02325726 -255.77299500]
[-16.50245285 -242.74195862]
[-25.72249222 -230.87869263]
[-36.50390244 -220.41412354]
[-48.63682556 -211.55192566]
[-41.55971909 -198.32640076]
[-28.73291016 -190.75526428]
[-29.04388428 -174.93710327]
[-16.21707535 -167.36596680]
[-16.52804947 -151.54780579]
[-9.45094395 -138.32228088]
[-2.37383866 -125.09675598]
[4.70326662 -111.87123108]
[11.78037262 -98.64569855]
[16.01048088 -96.42867279]
[18.89277267 -91.53076935]
[18.86463356 -84.91936493]
[25.54482841 -71.48898315]
[32.22502136 -58.05860901]
[38.90521622 -44.62823486]
[45.58541107 -31.19785881]
[58.18111038 -23.24816704]
[57.39931107 -7.44628811]
[63.19270706 -2.85735106]
[64.07730865 6.23414469]
[70.55680084 19.76249123]
[77.03630066 33.29083633]
[83.51579285 46.81918335]
[94.81697845 51.13309097]
[100.32587433 62.35074997]
[96.59967041 74.69895935]
[102.87702942 88.32227325]
[109.35652924 101.85061646]
[116.03672028 115.28099823]
[129.11022949 124.19131470]
[127.85062408 139.03256226]
[134.47436523 145.32254028]
[134.52862549 152.71299744]
[137.85272217 138.08595276]
[148.48225403 127.50234222]
[163.12355042 124.24160004]
[177.23983765 129.31411743]
[186.45704651 141.14810181]
[187.91909790 156.07667542]
[181.17297363 169.47406006]
[168.30903625 177.18891907]
[153.31332397 176.83073425]
[140.83222961 168.51028442]
[145.44624329 182.78302002]
[151.06364441 189.98597717]
[150.02098083 197.30271912]
[154.42198181 211.64256287]
[158.82298279 225.98240662]
[163.22398376 240.32225037]
[174.66972351 251.24496460]
[171.00712585 265.68222046]
[175.57913208 270.45803833]
[176.86056519 275.99472046]
[175.31881714 280.51489258]
[179.29090881 294.97943115]
[183.26300049 309.44396973]
[187.23510742 323.90847778]
[202.01115417 321.26586914]
[216.96630859 319.97787476]
[231.97660828 320.05517578]
[246.91769409 321.49713135]
[261.66574097 324.29177856]
[276.09857178 328.41598511]
[290.09655762 333.83557129]
[303.54370117 340.50558472]
[316.32858276 348.37081909]
[328.34527588 357.36608887]
[339.49417114 367.41680908]
[349.68292236 378.43972778]
[358.82708740 390.34347534]
[366.85086060 403.02944946]
[373.68780518 416.39251709]
[379.28121948 430.32196045]
[383.58480835 444.70230103]
[386.56286621 459.41442871]
[388.19070435 474.33639526]
[388.45486450 489.34457397]
[387.35317993 504.31460571]
[384.89471436 519.12243652]
[381.09988403 533.64532471]
[376.00012207 547.76293945]
[369.63769531 561.35833740]
[362.06533813 574.31884766]
[353.34576416 586.53704834]
[343.55123901 597.91168213]
[332.76296997 608.34851074]
[321.07028198 617.76110840]
[308.57009888 626.07141113]
[295.36602783 633.21051025]
[281.56744385 639.11938477]
[267.28869629 643.74896240]
[252.64813232 647.06091309]
[237.76704407 649.02777100]
[222.76875305 649.63323975]
[207.77755737 648.87237549]
[192.91764832 646.75140381]
[178.31217957 643.28790283]
[164.08219910 638.51062012]
[150.34558105 632.45910645]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 168]
[26 167]
[27 166]
[28 165]
[29 162]
[31 160]
[32 159]
[33 158]
[34 157]
[35 155]
[36 154]
[37 144]
[38 142]
[40 140]
[41 139]
[44 138]
[45 137]
[47 134]
[48 133]
[49 132]
[50 131]
[51 129]
[53 127]
[54 126]
[55 125]
[56 124]
[57 123]
[58 120]
[59 119]
[60 118]
[61 117]
[62 116]
[64 114]
[66 112]
[67 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
