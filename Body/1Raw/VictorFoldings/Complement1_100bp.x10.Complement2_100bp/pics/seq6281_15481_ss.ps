%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[130.85061646 941.44348145]
[115.93543243 939.83148193]
[101.09725189 937.62023926]
[86.36014557 934.81329346]
[71.74801636 931.41522217]
[57.28456116 927.43151855]
[42.99324799 922.86865234]
[28.89724922 917.73406982]
[15.01943207 912.03607178]
[1.38230693 905.78387451]
[-11.99200821 898.98760986]
[-25.08181953 891.65838623]
[-37.86589432 883.80798340]
[-50.32349777 875.44915771]
[-62.43442154 866.59558105]
[-74.17902374 857.26147461]
[-85.53826141 847.46203613]
[-96.49369812 837.21313477]
[-107.02756500 826.53143311]
[-117.12277985 815.43420410]
[-126.76296997 803.93951416]
[-135.93249512 792.06597900]
[-144.61648560 779.83282471]
[-152.80085754 767.25994873]
[-160.47233582 754.36773682]
[-167.61846924 741.17706299]
[-174.22766113 727.70935059]
[-180.28921509 713.98638916]
[-185.79327393 700.03051758]
[-190.73094177 685.86431885]
[-195.09417725 671.51080322]
[-198.87591553 656.99328613]
[-202.07002258 642.33520508]
[-204.67132568 627.56042480]
[-206.67558289 612.69287109]
[-208.07957458 597.75665283]
[-208.88099670 582.77606201]
[-209.07855225 567.77526855]
[-208.67195129 552.77874756]
[-207.66180420 537.81079102]
[-206.04978943 522.89556885]
[-203.83851624 508.05740356]
[-201.03155518 493.32031250]
[-197.63345337 478.70819092]
[-193.64974976 464.24475098]
[-189.08689880 449.95343018]
[-183.95228577 435.85745239]
[-178.25424194 421.97964478]
[-172.00201416 408.34252930]
[-165.20576477 394.96820068]
[-157.87648010 381.87841797]
[-150.02607727 369.09436035]
[-141.66726685 356.63674927]
[-132.81362915 344.52584839]
[-123.47950745 332.78125000]
[-113.68004608 321.42202759]
[-103.43114471 310.46661377]
[-92.74942780 299.93276978]
[-81.65221405 289.83755493]
[-70.15750885 280.19738770]
[-58.28395844 271.02786255]
[-46.05081177 262.34390259]
[-33.47792053 254.15954590]
[-20.58567619 246.48808289]
[-7.39498758 239.34197998]
[6.07274866 232.73278809]
[19.79568863 226.67126465]
[33.75157166 221.16720581]
[47.91776276 216.22956848]
[62.27128220 211.86636353]
[76.78884888 208.08464050]
[91.44692230 204.89054871]
[106.22171783 202.28927612]
[104.21770477 187.42375183]
[102.21369171 172.55821228]
[100.20967865 157.69268799]
[98.20566559 142.82716370]
[96.20164490 127.96163177]
[94.19763184 113.09610748]
[85.80446625 101.91368866]
[90.93683624 88.90790558]
[88.93282318 74.04238129]
[86.92881012 59.17685318]
[84.92479706 44.31132507]
[69.89894867 43.63041306]
[55.23619843 40.27726364]
[41.40789795 34.35967255]
[28.85856819 26.06786728]
[17.99161530 15.66838932]
[9.15637016 3.49554133]
[2.63684869 -10.05937004]
[-1.35737443 -24.56060982]
[-2.69790101 -39.54202271]
[-1.34163845 -54.52202225]
[2.66781473 -69.01905823]
[9.20157146 -82.56711578]
[18.04959869 -94.73067474]
[28.92746735 -105.11872864]
[41.48550034 -113.39735413]
[55.32001114 -119.30041504]
[69.98627472 -122.63815308]
[85.01283264 -123.30328369]
[99.91663361 -121.27442169]
[114.21859741 -116.61678314]
[127.45896912 -109.48008728]
[139.21212769 -100.09376526]
[149.10025024 -88.75953674]
[156.80548096 -75.84174347]
[162.08012390 -61.75565720]
[164.75462341 -46.95407867]
[164.74301147 -31.91281319]
[162.04565430 -17.11537933]
[156.74926758 -3.03745294]
[149.02409363 9.86841869]
[139.11848450 21.18736458]
[127.35083771 30.55552864]
[114.09946442 37.67176437]
[99.79032135 42.30731201]
[101.79433441 57.17284012]
[103.79835510 72.03836823]
[105.80236816 86.90389252]
[114.19553375 98.08631134]
[109.06316376 111.09209442]
[111.06717682 125.95761871]
[113.07118988 140.82315063]
[115.07520294 155.68867493]
[117.07921600 170.55419922]
[119.08322906 185.41973877]
[121.08724213 200.28526306]
[136.02343750 198.88121033]
[151.00405884 198.07972717]
[166.00479126 197.88209534]
[181.00132751 198.28865051]
[195.96931458 199.29872131]
[210.88450623 200.91067505]
[225.72268677 203.12190247]
[240.45980835 205.92880249]
[255.07194519 209.32684326]
[269.53540039 213.31048584]
[283.82672119 217.87329102]
[297.92276001 223.00784302]
[311.80056763 228.70582581]
[325.43771362 234.95797729]
[338.81204224 241.75419617]
[351.90188599 249.08341980]
[364.68597412 256.93377686]
[377.14361572 265.29251099]
[389.25454712 274.14611816]
[400.99917603 283.48019409]
[412.35845947 293.27960205]
[423.31390381 303.52844238]
[433.84780884 314.21014404]
[443.94305420 325.30731201]
[453.58328247 336.80197144]
[462.75283813 348.67547607]
[471.43685913 360.90859985]
[479.62127686 373.48144531]
[487.29278564 386.37365723]
[494.43893433 399.56433105]
[501.04818726 413.03204346]
[507.10977173 426.75494385]
[512.61389160 440.71081543]
[517.55157471 454.87698364]
[521.91485596 469.23046875]
[525.69665527 483.74804688]
[528.89074707 498.40609741]
[531.49212646 513.18084717]
[533.49639893 528.04840088]
[534.90045166 542.98461914]
[535.70190430 557.96520996]
[535.89953613 572.96594238]
[535.49291992 587.96252441]
[534.48284912 602.93048096]
[532.87084961 617.84570312]
[530.65960693 632.68383789]
[527.85272217 647.42095947]
[524.45465088 662.03308105]
[520.47100830 676.49658203]
[515.90814209 690.78790283]
[510.77359009 704.88391113]
[505.07559204 718.76171875]
[498.82342529 732.39886475]
[492.02719116 745.77319336]
[484.69793701 758.86297607]
[476.84756470 771.64709473]
[468.48880005 784.10467529]
[459.63519287 796.21563721]
[450.30111694 807.96026611]
[440.50167847 819.31951904]
[430.25280762 830.27496338]
[419.57110596 840.80883789]
[408.47393799 850.90405273]
[396.97924805 860.54425049]
[385.10571289 869.71380615]
[372.87261963 878.39782715]
[360.29974365 886.58221436]
[347.40750122 894.25372314]
[334.21685791 901.39984131]
[320.74911499 908.00909424]
[307.02621460 914.07061768]
[293.07034302 919.57470703]
[278.90414429 924.51239014]
[264.55065918 928.87567139]
[250.03309631 932.65740967]
[235.37503052 935.85156250]
[220.60023499 938.45288086]
[205.73269653 940.45715332]
[190.79649353 941.86114502]
[175.81587219 942.66259766]
[160.81513977 942.86016846]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 129]
[74 128]
[75 127]
[76 126]
[77 125]
[78 124]
[79 123]
[81 121]
[82 120]
[83 119]
[84 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
