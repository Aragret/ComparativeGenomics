%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[82.46138000 741.54962158]
[67.55369568 743.34991455]
[52.53818130 743.46972656]
[37.60367203 741.90753174]
[22.93798256 738.68298340]
[8.72555256 733.83666992]
[-4.85488367 727.42950439]
[-17.63253784 719.54205322]
[-29.44671631 710.27355957]
[-40.14884186 699.74053955]
[-49.60432816 688.07550049]
[-57.69425964 675.42504883]
[-64.31690216 661.94836426]
[-69.38895416 647.81494141]
[-72.84664917 633.20245361]
[-74.64648438 618.29473877]
[-74.76583862 603.27923584]
[-73.20320892 588.34472656]
[-69.97824097 573.67913818]
[-65.13149261 559.46685791]
[-58.72392273 545.88665771]
[-50.83610535 533.10919189]
[-41.56724930 521.29528809]
[-31.03390884 510.59350586]
[-19.36855888 501.13836670]
[-6.71790171 493.04879761]
[6.75896788 486.42657471]
[20.89256477 481.35494995]
[35.50514221 477.89767456]
[50.41292953 476.09829712]
[65.42845154 475.97940063]
[59.05721664 462.51623535]
[68.18823242 449.59588623]
[69.74875641 434.67727661]
[63.37751770 421.21414185]
[72.50852966 408.29379272]
[74.06905365 393.37518311]
[75.62957764 378.45657349]
[77.19010162 363.53796387]
[78.75062561 348.61938477]
[80.31114960 333.70077515]
[67.14737701 326.65487671]
[57.65837097 315.07455444]
[53.31419373 300.70468140]
[54.80663300 285.72601318]
[61.93925476 272.42416382]
[73.65260315 262.84082031]
[88.18147278 258.46044922]
[89.74199677 243.54183960]
[91.30252075 228.62324524]
[92.86303711 213.70463562]
[94.42356110 198.78602600]
[94.87017059 183.79267883]
[94.20038605 168.80764771]
[93.53060150 153.82260132]
[90.67319489 149.99581909]
[90.18940735 144.33340454]
[93.07069397 138.38279724]
[92.84736633 123.38446045]
[92.62403870 108.38612366]
[92.28906250 93.38986206]
[91.84246063 78.39650726]
[91.39585114 63.40316010]
[90.61453247 48.42352295]
[89.49887848 33.46506882]
[88.38323212 18.50661659]
[84.62421417 10.18149662]
[87.36402130 3.31743932]
[86.47120667 -11.65596676]
[85.24422455 -26.60569954]
[83.68370819 -41.52430344]
[82.12318420 -56.44290924]
[68.85237885 -64.26543427]
[62.80306625 -78.23895264]
[66.10279083 -92.92145538]
[77.28163147 -102.72816467]
[75.72110748 -117.64677429]
[74.16058350 -132.56538391]
[64.65065002 -141.27882385]
[63.65802002 -153.73667908]
[71.17112732 -163.21717834]
[69.83289337 -178.15736389]
[54.83149338 -179.06048584]
[40.13227081 -182.18945312]
[26.06360817 -187.47438049]
[12.93980980 -194.79719543]
[1.05406415 -203.99429321]
[-9.32809734 -214.86021423]
[-17.97473145 -227.15222168]
[-24.69267273 -240.59570312]
[-29.33183479 -254.89030457]
[-31.78858185 -269.71670532]
[-32.00802612 -284.74365234]
[-29.98526764 -299.63546753]
[-25.76549339 -314.05944824]
[-19.44297600 -327.69335938]
[-11.15896320 -340.23260498]
[-1.09852111 -351.39706421]
[10.51359558 -360.93731689]
[23.41796684 -368.64022827]
[37.32630539 -374.33370972]
[51.92789459 -377.89059448]
[66.89652252 -379.23135376]
[81.89779663 -378.32611084]
[96.59657288 -375.19503784]
[110.66448212 -369.90811157]
[123.78723907 -362.58343506]
[135.67167664 -353.38464355]
[146.05229187 -342.51724243]
[154.69717407 -330.22399902]
[161.41319275 -316.77957153]
[166.05032349 -302.48431396]
[168.50495911 -287.65756226]
[168.72225952 -272.63055420]
[166.69738770 -257.73904419]
[162.47555542 -243.31565857]
[156.15109253 -229.68264771]
[147.86529541 -217.14459229]
[137.80326843 -205.98155212]
[126.18978882 -196.44296265]
[113.28432465 -188.74188232]
[99.37517548 -183.05038452]
[84.77307892 -179.49559021]
[86.11131287 -164.55540466]
[96.96553802 -150.76582336]
[89.07918549 -134.12590027]
[90.63970947 -119.20729828]
[92.20023346 -104.28868866]
[105.16649628 -97.00761414]
[111.43319702 -83.32579041]
[108.40652466 -68.40290070]
[97.04178619 -58.00343323]
[98.60231018 -43.08482742]
[100.16283417 -28.16622353]
[102.65692902 -25.67386627]
[104.06773376 -21.84964561]
[103.78242493 -17.21586800]
[101.44461060 -12.54878235]
[102.33742523 2.42462349]
[103.34168243 17.39096832]
[104.45733643 32.34942245]
[105.57298279 47.30787277]
[107.99176025 49.87338638]
[109.28808594 53.73791504]
[108.86493683 58.36114502]
[106.38919830 62.95655441]
[106.83580780 77.94990540]
[107.28240967 92.94325256]
[110.65113068 100.26611328]
[107.62237549 108.16278839]
[107.84570312 123.16113281]
[108.06903076 138.15946960]
[108.51564026 153.15281677]
[109.18542480 168.13786316]
[109.85520935 183.12289429]
[118.15493011 170.62831116]
[131.54574585 163.86915588]
[146.52732849 164.61227417]
[159.18351746 172.66339111]
[166.20603943 185.91798401]
[165.75920105 200.91133118]
[157.95982361 213.72419739]
[144.84663391 221.00733948]
[129.84738159 220.85696411]
[116.88285065 213.31236267]
[109.34217072 200.34655762]
[107.78164673 215.26515198]
[106.22112274 230.18376160]
[104.66059875 245.10237122]
[103.10007477 260.02096558]
[116.40796661 267.31314087]
[125.88457489 279.11300659]
[130.11010742 293.60296631]
[128.47055054 308.56622314]
[121.24669647 321.72604370]
[109.56665039 331.09204102]
[95.22975159 335.26129150]
[93.66922760 350.17990112]
[92.10870361 365.09851074]
[90.54818726 380.01708984]
[88.98766327 394.93569946]
[87.42713928 409.85430908]
[93.68675232 424.38455200]
[84.66735840 436.23782349]
[83.10683441 451.15640259]
[89.36645508 465.68664551]
[80.34705353 477.53991699]
[95.01293945 480.76354980]
[109.22565460 485.60903931]
[122.80648041 492.01538086]
[135.58460999 499.90206909]
[147.39933777 509.16986084]
[158.10209656 519.70220947]
[167.55827332 531.36676025]
[175.64897156 544.01666260]
[182.27241516 557.49291992]
[187.34530640 571.62609863]
[190.80387878 586.23834229]
[192.60461426 601.14599609]
[192.72485352 616.16149902]
[191.16311646 631.09606934]
[187.93902588 645.76184082]
[183.09312439 659.97442627]
[176.68637085 673.55505371]
[168.79931641 686.33294678]
[159.53117371 698.14739990]
[148.99847412 708.84979248]
[137.33369446 718.30566406]
[124.68351746 726.39599609]
[111.20703888 733.01898193]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 187]
[33 185]
[34 184]
[36 182]
[37 181]
[38 180]
[39 179]
[40 178]
[41 177]
[48 170]
[49 169]
[50 168]
[51 167]
[52 166]
[53 155]
[54 154]
[55 153]
[58 152]
[59 151]
[60 150]
[61 148]
[62 147]
[63 146]
[64 142]
[65 141]
[66 140]
[68 139]
[69 138]
[70 134]
[71 133]
[72 132]
[76 128]
[77 127]
[78 126]
[81 124]
[82 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
