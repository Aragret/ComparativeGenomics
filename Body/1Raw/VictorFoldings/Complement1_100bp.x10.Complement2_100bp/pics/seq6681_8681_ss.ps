%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxUUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[95.48972321 601.76922607]
[90.09401703 587.67846680]
[88.53008270 572.67126465]
[90.90454865 557.77081299]
[97.05552673 543.99298096]
[106.56362152 532.27728271]
[118.78056335 523.42236328]
[132.87338257 518.03210449]
[131.31286621 503.11352539]
[129.75233459 488.19491577]
[120.73294067 476.34164429]
[126.99255371 461.81140137]
[125.43203735 446.89282227]
[116.41263580 435.03955078]
[122.67225647 420.50930786]
[121.11173248 405.59069824]
[119.55120850 390.67208862]
[115.72889709 384.34661865]
[118.08020782 375.52001953]
[116.74197388 360.57983398]
[115.40373993 345.63964844]
[106.56182098 333.65341187]
[113.03707886 319.21798706]
[111.69884491 304.27780151]
[110.36061096 289.33761597]
[99.50638580 275.54800415]
[107.39273834 258.90808105]
[105.83221436 243.98948669]
[104.27169037 229.07087708]
[102.71116638 214.15228271]
[101.15064240 199.23367310]
[99.59011841 184.31506348]
[95.76780701 177.98959351]
[98.11912537 169.16296387]
[96.78089142 154.22279358]
[95.44265747 139.28260803]
[91.71494293 132.90090942]
[94.19741058 124.11028290]
[93.08176422 109.15182495]
[85.15773010 121.88798523]
[71.97409821 129.04283142]
[56.97703552 128.74610901]
[44.08673477 121.07537842]
[36.67269135 108.03575134]
[36.67291641 93.03575134]
[44.08735657 79.99634552]
[56.97789001 72.32600403]
[71.97496033 72.02973175]
[85.15837860 79.18498230]
[93.08176422 91.92053223]
[94.19741058 76.96207428]
[87.50794983 62.62465668]
[96.17043304 50.50811005]
[97.28607941 35.54965591]
[90.59661865 21.21223259]
[99.25910187 9.09568596]
[100.37474823 -5.86276770]
[101.49039459 -20.82122040]
[102.60604858 -35.77967453]
[100.33797455 -40.48104858]
[100.12168884 -45.11856079]
[101.58927917 -48.92135239]
[104.12020111 -51.37630081]
[105.90266418 -66.27001953]
[107.68513489 -81.16373444]
[109.46759796 -96.05744934]
[111.02812195 -110.97605896]
[112.36635590 -125.91624451]
[113.70458984 -140.85643005]
[115.04282379 -155.79661560]
[116.15847015 -170.75506592]
[117.05128479 -185.72846985]
[110.14910889 -199.96470642]
[118.63022614 -212.20887756]
[119.52304840 -227.18229675]
[120.41586304 -242.15570068]
[118.33545685 -245.96697998]
[117.64546204 -249.85136414]
[118.19812012 -253.36276245]
[119.71600342 -256.14892578]
[121.83378601 -257.98553467]
[123.61624908 -272.87924194]
[125.39871979 -287.77297974]
[127.18118286 -302.66668701]
[112.59262085 -306.23474121]
[98.54051971 -311.53530884]
[85.22980499 -318.49105835]
[72.85459137 -327.00054932]
[61.59534073 -336.93966675]
[51.61624146 -348.16354370]
[43.06282806 -360.50842285]
[36.05982971 -373.79434204]
[30.70936775 -387.82751465]
[27.08947182 -402.40332031]
[25.25293159 -417.30917358]
[25.22652435 -432.32769775]
[27.01063919 -447.23992920]
[30.57925797 -461.82836914]
[35.88033676 -475.88024902]
[42.83657455 -489.19070435]
[51.34652710 -501.56561279]
[61.28609085 -512.82446289]
[72.51032257 -522.80316162]
[84.85553741 -531.35614014]
[98.14170837 -538.35864258]
[112.17507935 -543.70855713]
[126.75100708 -547.32788086]
[141.65693665 -549.16387939]
[156.67547607 -549.18975830]
[171.58763123 -547.40509033]
[186.17593384 -543.83587646]
[200.22763062 -538.53430176]
[213.53782654 -531.57757568]
[225.91239929 -523.06713867]
[237.17091370 -513.12713623]
[247.14916992 -501.90255737]
[255.70166016 -489.55700684]
[262.70367432 -476.27059937]
[268.05307007 -462.23699951]
[271.67187500 -447.66094971]
[273.50729370 -432.75497437]
[273.53259277 -417.73641968]
[271.74737549 -402.82434082]
[268.17764282 -388.23617554]
[262.87551880 -374.18466187]
[255.91828918 -360.87472534]
[247.40740967 -348.50045776]
[237.46701050 -337.24234009]
[226.24201965 -327.26449585]
[213.89616394 -318.71246338]
[200.60948181 -311.71096802]
[186.57569885 -306.36206055]
[171.99951172 -302.74380493]
[157.09344482 -300.90893555]
[142.07490540 -300.88421631]
[140.29243469 -285.99050903]
[138.50996399 -271.09677124]
[136.72750854 -256.20306396]
[135.38926697 -241.26287842]
[134.49644470 -226.28947449]
[133.60363770 -211.31607056]
[140.56967163 -198.15083313]
[132.02468872 -184.83566284]
[131.13188171 -169.86224365]
[133.57566833 -165.75895691]
[133.46772766 -160.07693481]
[129.98300171 -154.45837402]
[128.64477539 -139.51818848]
[127.30654144 -124.57801056]
[125.96830750 -109.63782501]
[128.28883362 -105.46359253]
[128.01177979 -99.78730774]
[124.36131287 -94.27498627]
[122.57884979 -79.38127136]
[120.79638672 -64.48754883]
[119.01391602 -49.59383392]
[117.56449890 -34.66402435]
[116.44885254 -19.70557213]
[115.33319855 -4.74711895]
[114.21755219 10.21133423]
[120.98680878 23.47882843]
[112.24452972 36.66530228]
[111.12888336 51.62375641]
[117.89813995 64.89125061]
[109.15586090 78.07772827]
[108.04021454 93.03617859]
[108.04021454 108.03617859]
[109.15586090 122.99463654]
[110.38283539 137.94436646]
[111.72106934 152.88455200]
[113.05931091 167.82473755]
[114.50872803 182.75454712]
[116.06925201 197.67315674]
[117.62976837 212.59175110]
[119.19029236 227.51036072]
[120.75081635 242.42897034]
[122.31134033 257.34756470]
[131.82127380 266.06100464]
[132.81390381 278.51889038]
[125.30079651 287.99935913]
[126.63903046 302.93954468]
[127.97726440 317.87973022]
[136.91490173 330.93460083]
[130.34393311 344.30139160]
[131.68215942 359.24157715]
[133.02040100 374.18176270]
[134.46981812 389.11157227]
[136.03033447 404.03018188]
[137.59086609 418.94879150]
[146.72187805 431.86914062]
[140.35063171 445.33227539]
[141.91116333 460.25088501]
[151.04217529 473.17123413]
[144.67094421 486.63439941]
[146.23146057 501.55297852]
[147.79199219 516.47161865]
[162.69520569 518.82879639]
[176.48013306 524.96380615]
[188.20687866 534.45831299]
[197.07588196 546.66503906]
[202.48246765 560.75158691]
[204.05799866 575.75756836]
[201.69503784 590.65991211]
[195.55470276 604.44244385]
[186.05564880 616.16552734]
[173.84555054 625.02984619]
[159.75689697 630.43096924]
[144.75028992 632.00067139]
[129.84889221 629.63195801]
[116.06871796 623.48632812]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 196]
[9 195]
[10 194]
[12 192]
[13 191]
[15 189]
[16 188]
[17 187]
[19 186]
[20 185]
[21 184]
[23 182]
[24 181]
[25 180]
[27 177]
[28 176]
[29 175]
[30 174]
[31 173]
[32 172]
[34 171]
[35 170]
[36 169]
[38 168]
[39 167]
[50 166]
[51 165]
[53 163]
[54 162]
[56 160]
[57 159]
[58 158]
[59 157]
[63 156]
[64 155]
[65 154]
[66 153]
[67 150]
[68 149]
[69 148]
[70 147]
[71 144]
[72 143]
[74 141]
[75 140]
[76 139]
[81 138]
[82 137]
[83 136]
[84 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
