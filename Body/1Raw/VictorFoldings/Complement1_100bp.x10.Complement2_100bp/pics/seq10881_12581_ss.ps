%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGGxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[81.25179291 687.47192383]
[66.26177979 686.80194092]
[51.34341049 685.19201660]
[36.55557251 682.64855957]
[21.95661926 679.18151855]
[7.60417128 674.80468750]
[-6.44513178 669.53527832]
[-20.13584137 663.39416504]
[-33.41392899 656.40545654]
[-46.22698593 648.59680176]
[-58.52445221 639.99902344]
[-70.25778961 630.64599609]
[-81.38069153 620.57476807]
[-91.84926605 609.82495117]
[-101.62219238 598.43902588]
[-110.66090393 586.46191406]
[-118.92972565 573.94085693]
[-126.39602661 560.92535400]
[-133.03034973 547.46667480]
[-138.80648804 533.61804199]
[-143.70166016 519.43402100]
[-147.69656372 504.97058105]
[-150.77540588 490.28488159]
[-152.92604065 475.43481445]
[-154.13999939 460.47903442]
[-154.41246033 445.47653198]
[-153.74238586 430.48651123]
[-152.13238525 415.56814575]
[-149.58882141 400.78033447]
[-146.12174988 386.18139648]
[-141.74484253 371.82894897]
[-136.47537231 357.77969360]
[-130.33413696 344.08901978]
[-123.34536743 330.81097412]
[-115.53665161 317.99795532]
[-106.93880463 305.70053101]
[-97.58576202 293.96722412]
[-87.51443481 282.84439087]
[-76.76456451 272.37585449]
[-65.37858582 262.60299683]
[-53.40142822 253.56434631]
[-40.88035965 245.29559326]
[-27.86479950 237.82936096]
[-14.40611172 231.19511414]
[-0.55741268 225.41903687]
[13.62664223 220.52394104]
[28.09007645 216.52911377]
[42.77580643 213.45034790]
[57.62587357 211.29978943]
[72.58167267 210.08590698]
[87.58418274 209.81352234]
[80.42290497 196.75344849]
[88.76869965 183.31253052]
[89.43848419 168.32749939]
[90.10826874 153.34245300]
[90.77805328 138.35742188]
[83.61677551 125.29735565]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[93.72218323 72.48873901]
[94.39196777 57.50370407]
[95.06175232 42.51866531]
[95.61996460 27.52905464]
[96.06656647 12.53570366]
[96.51317596 -2.45764613]
[86.85092163 9.01583767]
[72.55126953 13.54574203]
[58.04512787 9.72842884]
[47.82738113 -1.25326693]
[45.06410980 -15.99654770]
[50.61153793 -29.93304634]
[62.75074387 -38.74438858]
[77.72025299 -39.70028305]
[90.88160706 -32.50453568]
[98.15666962 -19.38657570]
[100.60240173 -34.18584824]
[103.04812622 -48.98511887]
[105.49385071 -63.78438950]
[107.93958282 -78.58365631]
[110.38530731 -93.38292694]
[112.83103943 -108.18219757]
[98.36149597 -112.19026947]
[84.39997864 -117.71366882]
[71.10466003 -124.68982697]
[58.62620163 -133.03968811]
[47.10598755 -142.66864014]
[36.67455292 -153.46759033]
[27.45009041 -165.31416321]
[19.53712273 -178.07414246]
[13.02531052 -191.60293579]
[7.98843575 -205.74726868]
[4.48357153 -220.34684753]
[2.55043006 -235.23628235]
[2.21091533 -250.24684143]
[3.46887445 -265.20843506]
[6.31005383 -279.95156860]
[10.70226002 -294.30917358]
[16.59572792 -308.11856079]
[23.92367744 -321.22326660]
[32.60307693 -333.47479248]
[42.53558731 -344.73434448]
[53.60865784 -354.87432861]
[65.69683075 -363.77984619]
[78.66313171 -371.34997559]
[92.36064148 -377.49899292]
[106.63416290 -382.15716553]
[121.32196045 -385.27175903]
[136.25761414 -386.80746460]
[151.27188110 -386.74688721]
[166.19465637 -385.09069824]
[180.85684204 -381.85766602]
[195.09230042 -377.08444214]
[208.73974609 -370.82510376]
[221.64453125 -363.15057373]
[233.66044617 -354.14779663]
[244.65132141 -343.91876221]
[254.49264526 -332.57943726]
[263.07287598 -320.25827026]
[270.29483032 -307.09484863]
[276.07669067 -293.23834229]
[280.35287476 -278.84576416]
[283.07498169 -264.08020020]
[284.21215820 -249.10893250]
[283.75152588 -234.10159302]
[281.69827271 -219.22825623]
[278.07571411 -204.65742493]
[272.92483521 -190.55421448]
[266.30407715 -177.07839966]
[258.28839111 -164.38269043]
[248.96861267 -152.61094666]
[238.45037842 -141.89653015]
[226.85282898 -132.36087036]
[214.30738831 -124.11198425]
[200.95620728 -117.24334717]
[186.95056152 -111.83280182]
[172.44915771 -107.94163513]
[157.61628723 -105.61394501]
[142.62002563 -104.87610626]
[127.63031006 -105.73647308]
[125.18457794 -90.93720245]
[122.73885345 -76.13793182]
[120.29312134 -61.33866119]
[117.84739685 -46.53939056]
[115.40167236 -31.74011993]
[112.95594025 -16.94084930]
[111.50652313 -2.01104021]
[111.05992126 12.98230934]
[110.61331177 27.97566032]
[113.55626678 34.75510025]
[110.04679108 43.18844986]
[109.37700653 58.17348862]
[108.70722198 73.15852356]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[114.06097412 126.65811920]
[105.76309204 139.02720642]
[105.09330750 154.01223755]
[104.42352295 168.99728394]
[103.75373840 183.98231506]
[110.86711121 198.11421204]
[102.56922150 210.48330688]
[117.48760986 212.09307861]
[132.27546692 214.63639832]
[146.87446594 218.10324097]
[161.22695923 222.47991943]
[175.27630615 227.74917603]
[188.96708679 233.89019775]
[202.24523926 240.87876892]
[215.05838013 248.68727112]
[227.35594177 257.28494263]
[239.08937073 266.63778687]
[250.21238708 276.70895386]
[260.68106079 287.45864868]
[270.45410156 298.84448242]
[279.49295044 310.82150269]
[287.76190186 323.34243774]
[295.22833252 336.35787964]
[301.86279297 349.81646729]
[307.63909912 363.66506958]
[312.53442383 377.84902954]
[316.52944946 392.31240845]
[319.60845947 406.99810791]
[321.75924683 421.84814453]
[322.97335815 436.80392456]
[323.24597168 451.80642700]
[322.57604980 466.79644775]
[320.96621704 481.71481323]
[318.42282104 496.50265503]
[314.95590210 511.10162354]
[310.57913208 525.45410156]
[305.30981445 539.50341797]
[299.16870117 553.19415283]
[292.18008423 566.47229004]
[284.37149048 579.28540039]
[275.77377319 591.58288574]
[266.42086792 603.31628418]
[256.34963989 614.43927002]
[245.59988403 624.90789795]
[234.21400452 634.68084717]
[222.23695374 643.71966553]
[209.71597290 651.98852539]
[196.70048523 659.45489502]
[183.24186707 666.08929443]
[169.39323425 671.86547852]
[155.20922852 676.76074219]
[140.74583435 680.75573730]
[126.06013489 683.83465576]
[111.21009064 685.98535156]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 163]
[53 161]
[54 160]
[55 159]
[56 158]
[58 156]
[60 154]
[61 153]
[62 152]
[63 151]
[64 149]
[65 148]
[66 147]
[76 146]
[77 145]
[78 144]
[79 143]
[80 142]
[81 141]
[82 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
