%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[91.50609589 1039.64526367]
[76.52546692 1038.85546875]
[61.58006287 1037.56018066]
[46.68692780 1035.76086426]
[31.86306190 1033.45959473]
[17.12537766 1030.65893555]
[2.49069071 1027.36206055]
[-12.02429962 1023.57293701]
[-26.40303230 1019.29565430]
[-40.62910080 1014.53515625]
[-54.68627167 1009.29693604]
[-68.55850220 1003.58697510]
[-82.22997284 997.41168213]
[-95.68508148 990.77819824]
[-108.90847015 983.69409180]
[-121.88505554 976.16735840]
[-134.60002136 968.20666504]
[-147.03887939 959.82110596]
[-159.18742371 951.02020264]
[-171.03178406 941.81396484]
[-182.55847168 932.21301270]
[-193.75430298 922.22821045]
[-204.60652161 911.87097168]
[-215.10275269 901.15313721]
[-225.23100281 890.08691406]
[-234.97972107 878.68487549]
[-244.33778381 866.96014404]
[-253.29450989 854.92602539]
[-261.83969116 842.59625244]
[-269.96356201 829.98492432]
[-277.65686035 817.10644531]
[-284.91082764 803.97546387]
[-291.71716309 790.60693359]
[-298.06808472 777.01617432]
[-303.95639038 763.21868896]
[-309.37530518 749.23016357]
[-314.31872559 735.06665039]
[-318.78091431 720.74420166]
[-322.75686646 706.27923584]
[-326.24200439 691.68829346]
[-329.23233032 676.98791504]
[-331.72448730 662.19494629]
[-333.71557617 647.32623291]
[-335.20336914 632.39874268]
[-336.18615723 617.42956543]
[-336.66278076 602.43566895]
[-336.63275146 587.43426514]
[-336.09609985 572.44244385]
[-335.05337524 557.47729492]
[-333.50582886 542.55590820]
[-331.45520020 527.69525146]
[-328.90383911 512.91241455]
[-325.85467529 498.22412109]
[-322.31115723 483.64718628]
[-318.27731323 469.19827271]
[-313.75778198 454.89382935]
[-308.75772095 440.75021362]
[-303.28283691 426.78350830]
[-297.33932495 413.00970459]
[-290.93402100 399.44448853]
[-284.07421875 386.10333252]
[-276.76776123 373.00149536]
[-269.02294922 360.15390015]
[-260.84863281 347.57519531]
[-252.25415039 335.27975464]
[-243.24931335 323.28158569]
[-233.84437561 311.59439087]
[-224.05007935 300.23153687]
[-213.87760925 289.20593262]
[-203.33854675 278.53021240]
[-192.44494629 268.21649170]
[-181.20921326 258.27661133]
[-169.64419556 248.72186279]
[-157.76306152 239.56317139]
[-145.57937622 230.81098938]
[-133.10704041 222.47528076]
[-120.36029816 214.56556702]
[-107.35368347 207.09088135]
[-94.10203552 200.05975342]
[-80.62047577 193.48019409]
[-66.92438507 187.35971069]
[-53.02939987 181.70530701]
[-38.95137024 176.52340698]
[-24.70635414 171.81994629]
[-10.31061077 167.60028076]
[4.21943569 163.86921692]
[18.86720467 160.63104248]
[33.61598587 157.88941956]
[48.44894791 155.64747620]
[63.34916687 153.90780640]
[78.29964447 152.67234802]
[93.28330994 151.94255066]
[93.05998230 136.94421387]
[92.83665466 121.94587708]
[92.61332703 106.94754028]
[89.35401154 99.57533264]
[92.50000000 91.72462463]
[92.50000000 76.72462463]
[92.50000000 61.72462845]
[78.72612762 55.14866257]
[69.17620850 43.24229431]
[65.74636841 28.36953354]
[69.11760712 13.48338413]
[78.62057495 1.53949821]
[92.36843872 -5.09065533]
[107.63156128 -5.09065533]
[121.37942505 1.53949821]
[130.88238525 13.48338413]
[134.25363159 28.36953354]
[130.82379150 43.24229431]
[121.27387238 55.14866257]
[107.50000000 61.72462845]
[107.50000000 76.72462463]
[107.50000000 91.72462463]
[107.61166382 106.72421265]
[107.83499146 121.72254944]
[108.05831909 136.72088623]
[108.28164673 151.71922302]
[123.28041077 152.00257874]
[138.26103210 152.79234314]
[153.20645142 154.08763123]
[168.09957886 155.88693237]
[182.92346191 158.18821716]
[197.66114807 160.98884583]
[212.29583740 164.28562927]
[226.81083679 168.07481384]
[241.18957520 172.35206604]
[255.41564941 177.11250305]
[269.47283936 182.35070801]
[283.34506226 188.06068420]
[297.01654053 194.23593140]
[310.47167969 200.86940002]
[323.69506836 207.95350647]
[336.67166138 215.48019409]
[349.38665771 223.44085693]
[361.82550049 231.82641602]
[373.97406006 240.62730408]
[385.81845093 249.83348083]
[397.34515381 259.43444824]
[408.54098511 269.41921997]
[419.39324951 279.77642822]
[429.88946533 290.49426270]
[440.01773071 301.56048584]
[449.76647949 312.96246338]
[459.12457275 324.68719482]
[468.08129883 336.72131348]
[476.62652588 349.05105591]
[484.75039673 361.66235352]
[492.44372559 374.54086304]
[499.69772339 387.67184448]
[506.50405884 401.04034424]
[512.85504150 414.63110352]
[518.74334717 428.42858887]
[524.16229248 442.41708374]
[529.10571289 456.58059692]
[533.56793213 470.90301514]
[537.54388428 485.36795044]
[541.02905273 499.95895386]
[544.01940918 514.65930176]
[546.51159668 529.45227051]
[548.50274658 544.32098389]
[549.99053955 559.24847412]
[550.97332764 574.21765137]
[551.45001221 589.21154785]
[551.41998291 604.21295166]
[550.88336182 619.20477295]
[549.84063721 634.16992188]
[548.29315186 649.09130859]
[546.24255371 663.95196533]
[543.69122314 678.73480225]
[540.64202881 693.42309570]
[537.09857178 708.00000000]
[533.06475830 722.44897461]
[528.54522705 736.75341797]
[523.54522705 750.89703369]
[518.07031250 764.86376953]
[512.12683105 778.63757324]
[505.72155762 792.20281982]
[498.86178589 805.54394531]
[491.55532837 818.64581299]
[483.81054688 831.49340820]
[475.63626099 844.07214355]
[467.04180908 856.36761475]
[458.03698730 868.36578369]
[448.63204956 880.05297852]
[438.83779907 891.41583252]
[428.66531372 902.44146729]
[418.12628174 913.11718750]
[407.23269653 923.43090820]
[395.99697876 933.37084961]
[384.43197632 942.92559814]
[372.55084229 952.08428955]
[360.36718750 960.83654785]
[347.89486694 969.17224121]
[335.14813232 977.08197021]
[322.14154053 984.55670166]
[308.88989258 991.58782959]
[295.40835571 998.16741943]
[281.71228027 1004.28790283]
[267.81729126 1009.94238281]
[253.73927307 1015.12426758]
[239.49426270 1019.82775879]
[225.09852600 1024.04748535]
[210.56848145 1027.77856445]
[195.92071533 1031.01672363]
[181.17195129 1033.75842285]
[166.33898926 1036.00036621]
[151.43876648 1037.73999023]
[136.48829651 1038.97546387]
[121.50462341 1039.70532227]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[92 118]
[93 117]
[94 116]
[95 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
