%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[248.35046387 593.79235840]
[260.86285400 585.42431641]
[255.20008850 571.53424072]
[249.53729248 557.64422607]
[243.87451172 543.75421143]
[238.21171570 529.86419678]
[232.54893494 515.97412109]
[226.88615417 502.08413696]
[215.86177063 497.10519409]
[211.03033447 485.57952881]
[215.48490906 473.47500610]
[210.02954102 459.50222778]
[204.57418823 445.52941895]
[199.11883545 431.55661011]
[193.14727783 417.79650879]
[186.66777039 404.26815796]
[180.18827820 390.73983765]
[173.70878601 377.21148682]
[170.95941162 391.95736694]
[161.28074646 403.41699219]
[147.20277405 408.59487915]
[132.40542603 406.13754272]
[120.75670624 396.68725586]
[115.30155945 382.71438599]
[117.46595001 367.87136841]
[126.68410492 356.03811646]
[140.54643250 350.30786133]
[155.42933655 352.17843628]
[167.44192505 361.16018677]
[163.04092407 346.82034302]
[158.63992310 332.48049927]
[154.23893738 318.14065552]
[143.10797119 308.24362183]
[146.45578003 292.78067017]
[133.20341492 292.37060547]
[120.70078278 287.88925171]
[110.16934204 279.75952148]
[102.64253998 268.76147461]
[98.86444092 255.95739746]
[99.21617126 242.58941650]
[103.67753601 229.95878601]
[111.82761383 219.29936218]
[122.88442230 211.65698242]
[118.91232300 197.19245911]
[114.94023132 182.72793579]
[110.96813202 168.26341248]
[106.99604034 153.79888916]
[103.02394104 139.33436584]
[92.19258881 129.11032104]
[95.99930573 113.75389862]
[86.18740082 103.79307556]
[89.53617096 90.21819305]
[85.56407928 75.75366974]
[74.76069641 68.70741272]
[71.75010681 56.57810211]
[77.61689758 45.99947739]
[73.86059570 31.47741699]
[69.99629211 16.98372459]
[66.02419281 2.51919985]
[55.22081375 -4.52705765]
[52.21022797 -16.65636635]
[58.07701492 -27.23499489]
[47.13040543 -38.65787888]
[51.43400955 -52.91720200]
[40.48740387 -64.34008789]
[44.79100800 -78.59941101]
[41.03470612 -93.12146759]
[30.08809853 -104.54435730]
[34.39170074 -118.80368042]
[23.69442558 -126.01000214]
[20.86476135 -138.18278503]
[26.88839912 -148.67289734]
[23.34872627 -163.24926758]
[19.80905342 -177.82563782]
[16.26938248 -192.40202332]
[12.72970963 -206.97839355]
[9.19003677 -221.55477905]
[5.65036440 -236.13114929]
[2.11069202 -250.70751953]
[-12.88415337 -249.61003113]
[-27.85511398 -250.99574280]
[-42.39377213 -254.82682800]
[-56.10350418 -260.99880981]
[-68.61029816 -269.34326172]
[-79.57295227 -279.63256836]
[-88.69240570 -291.58605957]
[-95.71987152 -304.87756348]
[-100.46363068 -319.14453125]
[-102.79428101 -333.99777222]
[-102.64822388 -349.03201294]
[-100.02946472 -363.83712769]
[-95.00942230 -378.00924683]
[-87.72506714 -391.16174316]
[-78.37510681 -402.93579102]
[-67.21462250 -413.01019287]
[-54.54808426 -421.11010742]
[-40.72103500 -427.01455688]
[-26.11069107 -430.56246948]
[-11.11563492 -431.65707397]
[3.85505939 -430.26849365]
[18.39297867 -426.43460083]
[32.10152054 -420.25997925]
[44.60670471 -411.91311646]
[55.56737900 -401.62170410]
[64.68453217 -389.66647339]
[71.70943451 -376.37359619]
[76.45044708 -362.10568237]
[78.77822876 -347.25204468]
[78.62928009 -332.21780396]
[76.00766754 -317.41317749]
[70.98489380 -303.24203491]
[63.69800568 -290.09094238]
[54.34577942 -278.31869507]
[43.18335342 -268.24645996]
[30.51525307 -260.14898682]
[16.68706703 -254.24719238]
[20.22673988 -239.67082214]
[23.76641273 -225.09443665]
[27.30608559 -210.51806641]
[30.84575653 -195.94169617]
[34.38542938 -181.36531067]
[37.92510223 -166.78894043]
[41.46477509 -152.21257019]
[54.24447250 -140.18566895]
[48.91376114 -122.55997467]
[59.59169388 -112.17580414]
[55.55676651 -96.87776947]
[59.31306458 -82.35571289]
[69.99099731 -71.97154236]
[65.95606995 -56.67350388]
[76.63400269 -46.28932953]
[72.59907532 -30.99129486]
[85.55641937 -19.15600204]
[80.48871613 -1.45289636]
[84.46081543 13.01162720]
[89.26333618 18.62924004]
[88.38265228 27.72111702]
[92.13895416 42.24317551]
[105.09629822 54.07846832]
[100.02860260 71.78157043]
[104.00069427 86.24610138]
[113.81259918 96.20692444]
[110.46382904 109.78180695]
[121.57929230 121.04044342]
[117.48846436 135.36225891]
[121.46056366 149.82678223]
[125.43265533 164.29130554]
[129.40475464 178.75582886]
[133.37684631 193.22035217]
[137.34893799 207.68487549]
[154.11976624 209.52639771]
[168.86470032 217.65042114]
[179.33535767 230.78590393]
[183.94757080 246.90016174]
[182.02091980 263.51336670]
[173.87904358 278.08016968]
[160.79562378 288.37966919]
[172.24137878 299.30236816]
[168.57878113 313.73965454]
[172.97978210 328.07949829]
[177.38076782 342.41934204]
[181.78176880 356.75918579]
[187.23713684 370.73199463]
[193.71662903 384.26031494]
[200.19612122 397.78866577]
[206.67561340 411.31701660]
[214.04605103 398.25268555]
[228.83050537 395.71896362]
[240.13044739 405.58361816]
[239.61596680 420.57479858]
[227.66632080 429.64157104]
[213.09162903 426.10125732]
[218.54698181 440.07406616]
[224.00234985 454.04684448]
[229.45770264 468.01965332]
[244.09725952 479.18948364]
[240.77616882 496.42132568]
[246.43896484 510.31137085]
[252.10174561 524.20141602]
[257.76452637 538.09143066]
[263.42733765 551.98144531]
[269.09011841 565.87145996]
[274.75289917 579.76147461]
[289.54943848 576.99609375]
[304.59973145 577.26611328]
[319.28753662 580.56054688]
[333.01135254 586.74456787]
[345.20922852 595.56481934]
[355.38165283 606.66015625]
[363.11209106 619.57623291]
[368.08395386 633.78417969]
[370.09365845 648.70214844]
[369.05889893 663.71929932]
[365.02206421 678.22064209]
[358.14846802 691.61236572]
[348.71957397 703.34606934]
[337.12149048 712.94134521]
[323.82913208 720.00524902]
[309.38684082 724.24841309]
[294.38598633 725.49719238]
[279.44085693 723.70043945]
[265.16348267 718.93170166]
[252.13845825 711.38623047]
[240.89918518 701.37304688]
[231.90588379 689.30224609]
[225.52684021 675.66796875]
[222.02326965 661.02862549]
[221.53863525 645.98370361]
[224.09278870 631.14923096]
[229.58113098 617.13275146]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 183]
[3 182]
[4 181]
[5 180]
[6 179]
[7 178]
[8 177]
[11 175]
[12 174]
[13 173]
[14 172]
[15 166]
[16 165]
[17 164]
[18 163]
[29 162]
[30 161]
[31 160]
[32 159]
[34 157]
[43 150]
[44 149]
[45 148]
[46 147]
[47 146]
[48 145]
[50 143]
[52 141]
[53 140]
[56 138]
[57 137]
[58 135]
[59 134]
[62 132]
[64 130]
[66 128]
[67 127]
[69 125]
[72 123]
[73 122]
[74 121]
[75 120]
[76 119]
[77 118]
[78 117]
[79 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
