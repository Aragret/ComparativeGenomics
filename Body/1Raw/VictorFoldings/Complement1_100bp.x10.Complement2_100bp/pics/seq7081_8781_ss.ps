%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[92.67078400 359.66717529]
[99.85606384 346.36816406]
[110.64322662 335.77911377]
[124.07309723 328.84152222]
[121.40730286 314.08029175]
[118.74150848 299.31909180]
[116.07571411 284.55786133]
[113.40991974 269.79666138]
[110.74412537 255.03543091]
[108.07156372 252.73548889]
[106.38022614 249.02679443]
[106.32009888 244.38462830]
[108.30432129 239.55659485]
[98.93601227 227.97712708]
[104.76023102 213.26695251]
[102.75621796 198.40142822]
[100.75220490 183.53590393]
[96.74325562 177.32702637]
[98.83072662 168.43431091]
[95.69660950 164.83065796]
[94.79301453 159.21990967]
[97.22373199 153.07148743]
[95.88549805 138.13130188]
[94.54726410 123.19110870]
[93.20903015 108.25092316]
[90.21425629 93.55292511]
[85.60025024 79.28018951]
[80.98623657 65.00745392]
[76.37223053 50.73472214]
[71.75821686 36.46198654]
[60.15111542 25.71090698]
[63.59836197 11.22071171]
[58.98435211 -3.05202127]
[43.26620865 -10.73051929]
[38.06690979 -27.07928658]
[46.13836288 -41.83362198]
[41.31236649 -56.03607559]
[36.48637009 -70.23853302]
[31.66037178 -84.44098663]
[16.60987091 -83.48305511]
[1.83575070 -86.45134735]
[-11.65607071 -93.13765717]
[-22.94856834 -103.08080292]
[-31.27593994 -115.59849548]
[-36.07553864 -129.83410645]
[-37.02587891 -144.81535339]
[-34.06817627 -159.52059937]
[-27.40993881 -172.94863892]
[-17.51041222 -184.18679810]
[-5.04892159 -192.47297668]
[-9.87491989 -206.67543030]
[-11.82064152 -191.80215454]
[-16.87635612 -177.67984009]
[-24.81206512 -164.95095825]
[-35.26674271 -154.19458008]
[-47.76477432 -145.90005493]
[-61.73758316 -140.44471741]
[-76.54949951 -138.07676697]
[-91.52667236 -138.90391541]
[-105.98775482 -142.88853455]
[-119.27484894 -149.84936523]
[-130.78349304 -159.46971130]
[-139.99011230 -171.31193542]
[-146.47587585 -184.83728027]
[-149.94570923 -199.43043518]
[-150.24177551 -214.42750549]
[-147.35058594 -229.14624023]
[-141.40370178 -242.91702271]
[-132.67163086 -255.11337280]
[-121.55164337 -265.18045044]
[-108.54962921 -272.66024780]
[-94.25708008 -277.21252441]
[-79.32421875 -278.63012695]
[-64.43038940 -276.84860229]
[-50.25315857 -271.94900513]
[-37.43750000 -264.15420532]
[-26.56644058 -253.81881714]
[-18.13453865 -241.41305542]
[-12.52420902 -227.49711609]
[-11.40856075 -242.45556641]
[-10.29291248 -257.41403198]
[-9.17726326 -272.37246704]
[-8.06161499 -287.33093262]
[-6.94596624 -302.28936768]
[-5.83031750 -317.24783325]
[-4.71466875 -332.20629883]
[-3.59902000 -347.16473389]
[-2.48337126 -362.12319946]
[-17.12591934 -365.51379395]
[-31.07924843 -371.09994507]
[-44.01626968 -378.75070190]
[-55.63372421 -388.28668213]
[-65.65928650 -399.48440552]
[-73.85792542 -412.08132935]
[-80.03747559 -425.78219604]
[-84.05306244 -440.26580811]
[-85.81056213 -455.19268799]
[-85.26877594 -470.21289062]
[-82.44040680 -484.97436523]
[-77.39175415 -499.13104248]
[-70.24115753 -512.35107422]
[-61.15624619 -524.32458496]
[-50.34998322 -534.77087402]
[-38.07567978 -543.44506836]
[-24.62106323 -550.14385986]
[-10.30152988 -554.71020508]
[4.54724884 -557.03704834]
[19.57719803 -557.06988525]
[34.43599319 -554.80786133]
[48.77532196 -550.30407715]
[62.25905228 -543.66406250]
[74.57110596 -535.04351807]
[85.42286682 -524.64453125]
[94.55995941 -512.71075439]
[101.76818848 -499.52209473]
[106.87859344 -485.38757324]
[109.77137756 -470.63861084]
[110.37872314 -455.62091064]
[108.68640137 -440.68649292]
[104.73406982 -426.18548584]
[98.61439514 -412.45776367]
[90.47081757 -399.82516479]
[80.49423218 -388.58380127]
[68.91851807 -378.99719238]
[56.01501465 -371.29003906]
[42.08620453 -365.64303589]
[27.45859528 -362.18853760]
[12.47508240 -361.00753784]
[11.35943317 -346.04910278]
[10.24378490 -331.09063721]
[9.12813568 -316.13217163]
[8.01248741 -301.17373657]
[6.89683867 -286.21527100]
[5.78118992 -271.25683594]
[4.66554117 -256.29837036]
[3.54989266 -241.33992004]
[2.43424392 -226.38146973]
[4.32753611 -211.50143433]
[9.15353394 -197.29896545]
[24.08357239 -198.32044983]
[38.78054428 -195.44018555]
[52.24144363 -188.84863281]
[63.54605484 -178.98971558]
[71.91982269 -166.53096008]
[76.78696442 -152.31829834]
[77.81000519 -137.31858826]
[74.91323090 -122.55392456]
[68.28820038 -109.03190613]
[58.38113022 -97.67693329]
[45.86282730 -89.26698303]
[50.68882370 -75.06452942]
[55.51482391 -60.86207581]
[60.34082031 -46.65961838]
[72.58218384 -42.63736725]
[80.38827515 -32.14227295]
[80.72941589 -18.87222672]
[73.25708771 -7.66603041]
[77.87109375 6.60670280]
[89.14817047 16.33690262]
[86.03095245 31.84797859]
[90.64496613 46.12071228]
[95.25897217 60.39344406]
[99.87297821 74.66617584]
[104.48699188 88.93891144]
[107.54062653 74.25302124]
[115.63193512 61.62247849]
[127.69637299 52.70904160]
[142.14665222 48.68542862]
[157.08158875 50.08101273]
[170.53623962 56.71218872]
[180.74040222 67.70650482]
[186.35156250 81.61746216]
[186.63145447 96.61485291]
[181.54327393 110.72550201]
[171.75643921 122.09291077]
[158.55859375 129.22149658]
[143.68612671 131.17338562]
[129.09577942 127.69176483]
[116.70716095 119.23469543]
[108.14921570 106.91268921]
[109.48744965 121.85287476]
[110.82568359 136.79306030]
[112.16391754 151.73324585]
[113.72444153 166.65185547]
[115.61773682 181.53189087]
[117.62174988 196.39741516]
[119.62576294 211.26293945]
[129.13742065 223.90568542]
[123.16985321 237.55258179]
[125.50534058 252.36964417]
[128.17112732 267.13085938]
[130.83692932 281.89208984]
[133.50273132 296.65328979]
[136.16851807 311.41452026]
[138.83432007 326.17572021]
[153.84246826 327.97753906]
[167.65208435 334.12457275]
[179.03521729 344.07022095]
[186.97969055 356.93011475]
[190.77906799 371.56076050]
[190.09553528 386.66122437]
[184.98985291 400.88879395]
[175.91603088 412.97833252]
[163.68089294 421.85488892]
[149.37239075 426.72909546]
[134.26281738 427.16763306]
[119.69570923 423.13143921]
[106.96636963 414.97940063]
[97.20668030 403.43646240]
[91.28445435 389.52896118]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 195]
[5 194]
[6 193]
[7 192]
[8 191]
[9 190]
[13 189]
[15 187]
[16 186]
[17 185]
[19 184]
[22 183]
[23 182]
[24 181]
[25 180]
[26 164]
[27 163]
[28 162]
[29 161]
[30 160]
[32 158]
[33 157]
[36 153]
[37 152]
[38 151]
[39 150]
[50 139]
[51 138]
[79 137]
[80 136]
[81 135]
[82 134]
[83 133]
[84 132]
[85 131]
[86 130]
[87 129]
[88 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
