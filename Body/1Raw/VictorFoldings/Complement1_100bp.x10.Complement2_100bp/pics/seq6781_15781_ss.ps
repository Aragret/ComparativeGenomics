%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[9.76924038 874.22027588]
[-5.19551420 875.28485107]
[-20.19308662 875.67211914]
[-35.19284058 875.38122559]
[-50.16412735 874.41290283]
[-65.07636261 872.76904297]
[-79.89908600 870.45300293]
[-94.60201263 867.46948242]
[-109.15510559 863.82470703]
[-123.52863312 859.52600098]
[-137.69322205 854.58215332]
[-151.61996460 849.00329590]
[-165.28036499 842.80090332]
[-178.64654541 835.98748779]
[-191.69120789 828.57708740]
[-204.38766479 820.58477783]
[-216.71002197 812.02691650]
[-228.63307190 802.92095947]
[-240.13247681 793.28558350]
[-251.18472290 783.14038086]
[-261.76727295 772.50616455]
[-271.85845947 761.40454102]
[-281.43768311 749.85833740]
[-290.48538208 737.89105225]
[-298.98306274 725.52709961]
[-306.91336060 712.79180908]
[-314.26010132 699.71118164]
[-321.00823975 686.31195068]
[-327.14401245 672.62145996]
[-332.65490723 658.66772461]
[-337.52960205 644.47918701]
[-341.75817871 630.08489990]
[-345.33203125 615.51422119]
[-348.24377441 600.79687500]
[-350.48754883 585.96307373]
[-352.05868530 571.04296875]
[-352.95404053 556.06713867]
[-353.17175293 541.06616211]
[-352.71139526 526.07067871]
[-351.57391357 511.11126709]
[-349.76159668 496.21856689]
[-347.27816772 481.42297363]
[-344.12869263 466.75469971]
[-340.31964111 452.24371338]
[-335.85873413 437.91970825]
[-330.75515747 423.81188965]
[-325.01925659 409.94909668]
[-318.66281128 396.35968018]
[-311.69879150 383.07135010]
[-304.14141846 370.11129761]
[-296.00613403 357.50595093]
[-287.30953979 345.28112793]
[-278.06942749 333.46176147]
[-268.30468750 322.07199097]
[-258.03521729 311.13510132]
[-247.28204346 300.67343140]
[-236.06712341 290.70837402]
[-224.41334534 281.26025391]
[-212.34454346 272.34838867]
[-199.88537598 263.99099731]
[-187.06127930 256.20513916]
[-173.89845276 249.00671387]
[-160.42379761 242.41044617]
[-146.66484070 236.42979431]
[-132.64968872 231.07698059]
[-118.40696716 226.36294556]
[-103.96578217 222.29731750]
[-89.35562897 218.88841248]
[-74.60636139 216.14317322]
[-59.74811554 214.06721497]
[-44.81123352 212.66479492]
[-29.82624054 211.93876648]
[-14.82374573 211.89060974]
[0.16560002 212.52041626]
[15.11117458 213.82691956]
[29.98244667 215.80744934]
[44.74903107 218.45793152]
[59.38076401 221.77299500]
[63.35285950 207.30847168]
[67.32495880 192.84393311]
[71.29705048 178.37940979]
[75.26914978 163.91488647]
[79.24124908 149.45036316]
[73.89601135 132.73524475]
[87.10452271 119.90493774]
[90.86081696 105.38288116]
[94.07409668 90.73109436]
[96.73989105 75.96987152]
[99.40568542 61.20865631]
[97.85121918 52.20746613]
[102.22261810 46.24821854]
[105.10789490 31.52832603]
[107.99316406 16.80843544]
[110.87844086 2.08854389]
[113.76371002 -12.63134766]
[116.53932190 -27.37231064]
[119.20511627 -42.13352585]
[121.87091064 -56.89474487]
[108.01073456 -62.79755783]
[95.81186676 -71.63697815]
[85.88619995 -82.96961975]
[78.73159790 -96.22705078]
[74.70693207 -110.74427795]
[74.01407623 -125.79312134]
[76.68779755 -140.61874390]
[82.59397125 -154.47747803]
[91.43634033 -166.67420959]
[102.77139282 -176.59713745]
[116.03055573 -183.74851990]
[130.54875183 -187.76966858]
[145.59776306 -188.45887756]
[160.42272949 -185.78157043]
[174.28004456 -179.87203979]
[186.47463989 -171.02670288]
[196.39480591 -159.68925476]
[203.54298401 -146.42835999]
[207.56062317 -131.90919495]
[208.24617004 -116.86000824]
[205.56527710 -102.03569031]
[199.65238953 -88.17980194]
[190.80410767 -75.98736572]
[179.46424866 -66.06993866]
[166.20161438 -58.92497253]
[151.68147278 -54.91086197]
[136.63212585 -54.22895050]
[133.96633911 -39.46773148]
[131.30053711 -24.70651436]
[133.20526123 -17.56551933]
[128.48359680 -9.74607468]
[125.59832764 4.97381639]
[122.71305847 19.69370842]
[119.82778931 34.41360092]
[116.94251251 49.13349152]
[114.16690063 63.87445450]
[111.50110626 78.63567352]
[108.83531189 93.39688873]
[122.45850372 87.11925507]
[135.92837524 93.71944427]
[139.31544495 108.33203125]
[130.12287903 120.18517303]
[115.12711334 120.54116058]
[105.38288116 109.13918304]
[101.62657928 123.66123962]
[107.48798370 135.15066528]
[104.06038666 147.16877747]
[93.70577240 153.42247009]
[89.73367310 167.88699341]
[85.76157379 182.35151672]
[81.78948212 196.81604004]
[77.81738281 211.28056335]
[73.84529114 225.74508667]
[88.11801147 230.36747742]
[102.16728210 235.63009644]
[115.96440125 241.52218628]
[129.48117065 248.03170776]
[142.68998718 255.14538574]
[155.56387329 262.84866333]
[168.07650757 271.12579346]
[180.20233154 279.95989990]
[191.91659546 289.33291626]
[203.19534302 299.22570801]
[214.01553345 309.61801147]
[224.35507202 320.48867798]
[234.19284058 331.81542969]
[243.50872803 343.57516479]
[252.28370667 355.74386597]
[260.49984741 368.29663086]
[268.14038086 381.20785522]
[275.18966675 394.45114136]
[281.63333130 407.99945068]
[287.45819092 421.82507324]
[292.65237427 435.89978027]
[297.20523071 450.19485474]
[301.10748291 464.68103027]
[304.35116577 479.32873535]
[306.92965698 494.10809326]
[308.83764648 508.98883057]
[310.07128906 523.94061279]
[310.62802124 538.93286133]
[310.50671387 553.93493652]
[309.70764160 568.91619873]
[308.23242188 583.84606934]
[306.08404541 598.69403076]
[303.26693726 613.42968750]
[299.78683472 628.02307129]
[295.65087891 642.44427490]
[290.86746216 656.66381836]
[285.44638062 670.65270996]
[279.39874268 684.38238525]
[272.73684692 697.82470703]
[265.47433472 710.95227051]
[257.62603760 723.73828125]
[249.20800781 736.15655518]
[240.23742676 748.18176270]
[230.73260498 759.78930664]
[220.71298218 770.95556641]
[210.19903564 781.65759277]
[199.21220398 791.87359619]
[187.77497864 801.58270264]
[175.91070557 810.76507568]
[163.64361572 819.40197754]
[150.99877930 827.47570801]
[138.00202942 834.96984863]
[124.67991638 841.86901855]
[111.05965424 848.15911865]
[97.16906738 853.82733154]
[83.03654480 858.86212158]
[68.69094086 863.25311279]
[54.16157913 866.99139404]
[39.47813416 870.06933594]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[78 151]
[79 150]
[80 149]
[81 148]
[82 147]
[83 146]
[85 143]
[86 142]
[87 136]
[88 135]
[89 134]
[91 133]
[92 132]
[93 131]
[94 130]
[95 129]
[96 127]
[97 126]
[98 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
