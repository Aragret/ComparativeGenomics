%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[148.19326782 596.35284424]
[135.12835693 604.17767334]
[120.00953674 606.00555420]
[105.45624542 601.51983643]
[93.98992920 591.49768066]
[87.59719086 577.67553711]
[87.38562012 562.44805908]
[93.39186859 548.45361328]
[104.57530975 538.11676025]
[118.99835968 533.22845459]
[120.33659363 518.28826904]
[113.76561737 504.92144775]
[122.70325470 491.86660767]
[124.04148865 476.92642212]
[117.47051239 463.55960083]
[126.40814972 450.50476074]
[127.74638367 435.56457520]
[121.17540741 422.19775391]
[130.11305237 409.14291382]
[131.45127869 394.20272827]
[124.88030243 380.83590698]
[133.81794739 367.78106689]
[134.71075439 352.80764771]
[135.15736389 337.81430054]
[135.60397339 322.82095337]
[128.24903870 309.86895752]
[136.39378357 296.30526733]
[136.84039307 281.31192017]
[135.50216675 266.37173462]
[132.39805603 251.69642639]
[129.29394531 237.02111816]
[126.18983459 222.34582520]
[123.08572388 207.67051697]
[119.43763733 193.12089539]
[115.25062561 178.71711731]
[111.06361389 164.31333923]
[106.87660217 149.90956116]
[102.68959045 135.50576782]
[98.50257874 121.10198975]
[94.31556702 106.69820404]
[91.77851105 105.00917053]
[89.79994965 102.35967255]
[88.73680878 98.95479584]
[88.86525726 95.12860870]
[90.33558655 91.31139374]
[87.01332855 76.68393707]
[83.69107056 62.05647659]
[80.36881256 47.42901611]
[70.28788757 58.53644943]
[55.30943680 57.73271942]
[46.47501373 45.61030579]
[50.29701996 31.10540009]
[63.95802307 24.91048050]
[77.38661194 31.59091187]
[73.01882172 23.56843185]
[75.24050903 16.51960945]
[73.23649597 1.65408182]
[63.72484207 -10.98866463]
[69.69240570 -24.63554955]
[67.68839264 -39.50107956]
[65.68437195 -54.36660767]
[63.68036270 -69.23213196]
[54.16870880 -81.87487793]
[60.13627243 -95.52176666]
[50.62461853 -108.16451263]
[56.59217834 -121.81139374]
[54.58816528 -136.67692566]
[52.58415222 -151.54244995]
[50.58013916 -166.40797424]
[48.57612610 -181.27351379]
[41.84909058 -167.86653137]
[29.71610260 -159.04663086]
[14.88770390 -156.78419495]
[0.67659700 -161.58467102]
[-9.74242115 -172.37559509]
[-14.04171467 -186.74626160]
[-11.26081085 -201.48622131]
[-2.02097130 -213.30253601]
[11.61360073 -219.55541992]
[26.59690857 -218.84793091]
[39.58163834 -211.33816528]
[47.66698074 -198.70376587]
[48.11358643 -213.69711304]
[48.56019211 -228.69046021]
[49.00679779 -243.68382263]
[38.70344543 -252.35881042]
[35.32690811 -265.19662476]
[39.89318085 -277.45349121]
[50.52523041 -284.73284912]
[51.19501495 -299.71789551]
[40.80844879 -311.32638550]
[41.70117569 -326.51379395]
[52.83210373 -336.34426880]
[53.50188828 -351.32931519]
[50.79904938 -357.36306763]
[51.45121002 -363.00857544]
[54.42128754 -366.74859619]
[55.53693771 -381.70703125]
[56.65258789 -396.66549683]
[57.76823425 -411.62393188]
[44.04981232 -418.11773682]
[33.60643005 -429.13137817]
[27.85046959 -443.17535400]
[27.56037903 -458.35034180]
[32.77538681 -472.60403442]
[42.79021072 -484.00875854]
[56.25042343 -491.02212524]
[71.33564758 -492.69558716]
[86.00572205 -488.80288696]
[98.27664948 -479.87042236]
[106.48887634 -467.10626221]
[109.53177643 -452.23666382]
[106.99382019 -437.27258301]
[99.21824646 -424.23782349]
[87.25662994 -414.89523315]
[72.72669220 -410.50830078]
[71.61103821 -395.54983521]
[70.49539185 -380.59140015]
[69.37974548 -365.63293457]
[68.48692322 -350.65951538]
[67.81713867 -335.67449951]
[78.02664948 -324.89016724]
[77.56085968 -309.68365479]
[66.18005371 -299.04812622]
[65.51026917 -284.06307983]
[77.37934113 -272.14822388]
[76.95019531 -254.99797058]
[64.00015259 -243.23721313]
[63.55354309 -228.24386597]
[63.10693741 -213.25050354]
[62.66033173 -198.25715637]
[63.44165421 -183.27752686]
[65.44567108 -168.41200256]
[67.44968414 -153.54646301]
[69.45369720 -138.68093872]
[71.45771027 -123.81541443]
[80.82601929 -112.23594666]
[75.00180054 -97.52577972]
[84.37010956 -85.94631195]
[78.54589081 -71.23614502]
[80.54990387 -56.37062073]
[82.55391693 -41.50509262]
[84.55792999 -26.63956261]
[93.92624664 -15.06009865]
[88.10202026 -0.34993184]
[90.10603333 14.51559639]
[92.22065735 29.36579323]
[94.99626923 44.10675812]
[98.31852722 58.73421860]
[101.64079285 73.36167908]
[104.96305084 87.98913574]
[108.71935272 102.51119995]
[112.90635681 116.91497803]
[117.09336853 131.31875610]
[121.28038025 145.72254944]
[125.46739197 160.12632751]
[129.65440369 174.53010559]
[133.84141541 188.93388367]
[143.24333191 177.24612427]
[158.24307251 177.15689087]
[167.78337097 188.73197937]
[164.83148193 203.43865967]
[151.56343079 210.43571472]
[137.76103210 204.56640625]
[140.86512756 219.24171448]
[143.96923828 233.91702271]
[147.07334900 248.59231567]
[150.17745972 263.26760864]
[154.56182861 248.92266846]
[163.53266907 236.90086365]
[176.03610229 228.61448669]
[190.60325623 225.03703308]
[205.52276611 226.58876038]
[219.04193115 233.08738708]
[229.57252502 243.76947021]
[235.87741089 257.38006592]
[237.21592712 272.32022095]
[233.43078613 286.83480835]
[224.96669006 299.21862793]
[212.81797791 308.01684570]
[198.41188049 312.19589233]
[183.44081116 311.26480103]
[169.66354370 305.33291626]
[158.69863892 295.09716797]
[151.83374023 281.75851440]
[151.38714600 296.75186157]
[158.71012878 310.77630615]
[150.59732056 323.26754761]
[150.15071106 338.26089478]
[149.70410156 353.25424194]
[151.89706421 357.00189209]
[152.70240784 360.86401367]
[152.25453186 364.39031982]
[150.82028198 367.22042847]
[148.75813293 369.11929321]
[155.23338318 383.55471802]
[146.39146423 395.54095459]
[145.05323792 410.48114014]
[151.52848816 424.91656494]
[142.68656921 436.90280151]
[141.34832764 451.84298706]
[147.82359314 466.27841187]
[138.98167419 478.26464844]
[137.64343262 493.20483398]
[144.11869812 507.64025879]
[135.27677917 519.62646484]
[133.93853760 534.56665039]
[147.26324463 541.94042969]
[156.43159485 554.10021973]
[159.85513306 568.93939209]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 207]
[11 206]
[13 204]
[14 203]
[16 201]
[17 200]
[19 198]
[20 197]
[22 195]
[23 190]
[24 189]
[25 188]
[27 186]
[28 185]
[29 168]
[30 167]
[31 166]
[32 165]
[33 164]
[34 158]
[35 157]
[36 156]
[37 155]
[38 154]
[39 153]
[40 152]
[45 151]
[46 150]
[47 149]
[48 148]
[54 147]
[56 146]
[57 145]
[59 143]
[60 142]
[61 141]
[62 140]
[64 138]
[66 136]
[67 135]
[68 134]
[69 133]
[70 132]
[82 131]
[83 130]
[84 129]
[85 128]
[89 125]
[90 124]
[93 121]
[94 120]
[97 119]
[98 118]
[99 117]
[100 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
