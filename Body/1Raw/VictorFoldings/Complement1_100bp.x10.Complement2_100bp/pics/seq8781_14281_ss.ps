%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[-16.38192749 637.50146484]
[-25.53437424 649.39843750]
[-35.71642685 660.42712402]
[-46.84609985 670.49871826]
[-58.83378601 679.53210449]
[-71.58296967 687.45446777]
[-84.99098969 694.20214844]
[-98.94989014 699.72082520]
[-113.34729767 703.96594238]
[-128.06726074 706.90338135]
[-142.99130249 708.50952148]
[-157.99922180 708.77136230]
[-172.97018433 707.68688965]
[-187.78367615 705.26470947]
[-202.32041931 701.52447510]
[-216.46334839 696.49615479]
[-230.09860229 690.22033691]
[-243.11640930 682.74749756]
[-255.41194153 674.13787842]
[-266.88619995 664.46069336]
[-277.44680786 653.79394531]
[-287.00872803 642.22344971]
[-295.49496460 629.84240723]
[-302.83721924 616.75054932]
[-308.97634888 603.05316162]
[-313.86291504 588.86065674]
[-317.45761108 574.28723145]
[-319.73144531 559.45025635]
[-320.66616821 544.46917725]
[-320.25421143 529.46466064]
[-318.49890137 514.55743408]
[-315.41436768 499.86758423]
[-311.02545166 485.51336670]
[-305.36746216 471.61035156]
[-298.48602295 458.27047729]
[-290.43649292 445.60119629]
[-281.28366089 433.70443726]
[-271.10128784 422.67605591]
[-259.97131348 412.60482788]
[-247.98333740 403.57183838]
[-235.23391724 395.64981079]
[-221.82569885 388.90252686]
[-207.86662292 383.38433838]
[-193.46908569 379.13964844]
[-178.74902344 376.20266724]
[-163.82495117 374.59698486]
[-148.81701660 374.33557129]
[-133.84608459 375.42053223]
[-119.03266144 377.84313965]
[-104.49604034 381.58383179]
[-90.35326385 386.61254883]
[-76.71819305 392.88879395]
[-69.25045013 379.87985229]
[-61.78271103 366.87088013]
[-54.31496811 353.86193848]
[-46.84722900 340.85299683]
[-39.37948608 327.84402466]
[-31.91174507 314.83508301]
[-42.29408646 304.06549072]
[-49.22808075 290.79330444]
[-52.14419556 276.09014893]
[-50.79772568 261.14599609]
[-45.28927231 247.17271423]
[-36.05730820 235.30583191]
[-23.84326553 226.51234436]
[-9.63200474 221.51182556]
[5.42759275 220.71760559]
[20.11551285 224.20257568]
[27.58325386 211.19361877]
[35.05099487 198.18466187]
[42.51873398 185.17572021]
[49.98647690 172.16676331]
[45.85999680 157.90115356]
[53.24803162 144.60183716]
[68.23909760 140.37033081]
[75.70684052 127.36138153]
[83.17458344 114.35243225]
[90.64232635 101.34347534]
[90.45398712 96.10148621]
[93.21605682 91.12712097]
[98.53102875 88.06313324]
[106.38278961 75.28229523]
[114.23454285 62.50144958]
[122.08629608 49.72060776]
[129.93804932 36.93976593]
[137.78981018 24.15892410]
[145.64155579 11.37808132]
[153.49331665 -1.40276122]
[161.34507751 -14.18360329]
[163.17070007 -23.13373756]
[169.41007996 -27.09505844]
[177.45124817 -39.75758362]
[185.11184692 -52.65390778]
[192.38507080 -65.77260590]
[199.65830994 -78.89129639]
[206.93153381 -92.00999451]
[194.73136902 -100.76628113]
[183.63027954 -110.87973785]
[173.77836609 -122.21360016]
[165.30888367 -134.61457825]
[158.33636475 -147.91497803]
[152.95510864 -161.93492126]
[149.23789978 -176.48478699]
[147.23498535 -191.36782837]
[146.97348022 -206.38276672]
[148.45689392 -221.32652283]
[151.66519165 -235.99700928]
[156.55496216 -250.19584656]
[163.06008911 -263.73098755]
[171.09259033 -276.41937256]
[180.54383850 -288.08944702]
[191.28602600 -298.58334351]
[203.17387390 -307.75915527]
[216.04660034 -315.49282837]
[229.73011780 -321.67971802]
[244.03938293 -326.23617554]
[258.78088379 -329.10058594]
[273.75524902 -330.23422241]
[288.75994873 -329.62173462]
[303.59210205 -327.27142334]
[318.05108643 -323.21502686]
[331.94137573 -317.50747681]
[345.07510376 -310.22589111]
[357.27468872 -301.46878052]
[368.37512207 -291.35458374]
[378.22625732 -280.02008057]
[386.69491577 -267.61853027]
[393.66656494 -254.31765747]
[399.04687500 -240.29736328]
[402.76312256 -225.74723816]
[404.76504517 -210.86407471]
[405.02554321 -195.84912109]
[403.54113770 -180.90545654]
[400.33184814 -166.23518372]
[395.44113159 -152.03668213]
[388.93511963 -138.50198364]
[380.90176392 -125.81411743]
[371.44973755 -114.14469147]
[360.70684814 -103.65150452]
[348.81838989 -94.47647095]
[335.94512939 -86.74367523]
[322.26119995 -80.55769348]
[307.95162964 -76.00218201]
[293.20996094 -73.13874817]
[278.23550415 -72.00611877]
[263.23083496 -72.61960602]
[248.39884949 -74.97092438]
[233.94013977 -79.02826691]
[220.05023193 -84.73676300]
[212.77699280 -71.61806488]
[205.50376892 -58.49937439]
[198.23054504 -45.38068008]
[198.87245178 -42.65192795]
[198.47215271 -39.50448990]
[196.86476135 -36.33405304]
[194.03152466 -33.58864212]
[190.11376953 -31.71640968]
[182.07260132 -19.05388451]
[174.12591553 -6.33184814]
[166.27415466 6.44899416]
[158.42240906 19.22983742]
[150.57064819 32.01068115]
[142.71890259 44.79152298]
[134.86714172 57.57236481]
[127.01538086 70.35321045]
[119.16362762 83.13404846]
[111.31187439 95.91489410]
[103.65127563 108.81121826]
[96.18353271 121.82016754]
[88.71578979 134.82911682]
[81.24805450 147.83807373]
[85.15387726 162.91728210]
[77.39521027 176.00382996]
[62.99542999 179.63450623]
[55.52768707 192.64346313]
[48.05994797 205.65240479]
[40.59220505 218.66136169]
[33.12446594 231.67031860]
[43.54085159 242.59637451]
[50.44944382 256.00137329]
[53.29795837 270.79498291]
[51.86393356 285.77670288]
[46.27209473 299.73318481]
[36.98355484 311.53652954]
[24.75779724 320.23547363]
[10.59057999 325.13195801]
[-4.36715460 325.83731079]
[-18.90279388 322.30282593]
[-26.37053490 335.31176758]
[-33.83827591 348.32073975]
[-41.30601501 361.32968140]
[-48.77375793 374.33862305]
[-56.24149704 387.34759521]
[-63.70923996 400.35653687]
[-51.41344833 408.96582031]
[-39.93889236 418.64263916]
[-29.37796021 429.30908203]
[-19.81568909 440.87927246]
[-11.32906532 453.26004028]
[-3.98642230 466.35171509]
[2.15312147 480.04885864]
[7.04013252 494.24124146]
[10.63526344 508.81454468]
[12.90956688 523.65142822]
[13.84473133 538.63250732]
[13.43322754 553.63708496]
[11.67836952 568.54431152]
[8.59428501 583.23425293]
[4.20580673 597.58862305]
[-1.45173144 611.49182129]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 194]
[53 193]
[54 192]
[55 191]
[56 190]
[57 189]
[58 188]
[68 178]
[69 177]
[70 176]
[71 175]
[72 174]
[75 171]
[76 170]
[77 169]
[78 168]
[81 167]
[82 166]
[83 165]
[84 164]
[85 163]
[86 162]
[87 161]
[88 160]
[89 159]
[91 158]
[92 157]
[93 152]
[94 151]
[95 150]
[96 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
