%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[60.87213135 227.98774719]
[60.40535736 242.98773193]
[58.80548096 257.90945435]
[56.08167267 272.66744995]
[52.24952698 287.17715454]
[47.33100128 301.35549927]
[41.35426331 315.12127686]
[34.35354996 328.39556885]
[26.36896133 341.10241699]
[17.44623184 353.16900635]
[7.63647223 364.52618408]
[-3.00412774 375.10897827]
[-14.41461945 384.85668945]
[-26.52964401 393.71353149]
[-39.27980804 401.62875366]
[-52.59207535 408.55700684]
[-66.39019775 414.45864868]
[-80.59513855 419.29983521]
[-95.12552643 423.05285645]
[-109.89813995 425.69619751]
[-124.82836151 427.21472168]
[-139.83065796 427.59973145]
[-154.81912231 426.84906006]
[-169.70787048 424.96694946]
[-184.41165161 421.96420288]
[-198.84622192 417.85803223]
[-212.92889404 412.67193604]
[-226.57902527 406.43563843]
[-239.71841431 399.18484497]
[-252.27178955 390.96112061]
[-264.16726685 381.81152344]
[-275.33670044 371.78848267]
[-285.71612549 360.94943237]
[-295.24606323 349.35644531]
[-303.87191772 337.07589722]
[-311.54431152 324.17816162]
[-318.21929932 310.73709106]
[-323.85864258 296.82971191]
[-328.42999268 282.53564453]
[-331.90722656 267.93679810]
[-334.27041626 253.11679077]
[-335.50598145 238.16050720]
[-335.60690308 223.15359497]
[-334.57257080 208.18203735]
[-332.40890503 193.33158875]
[-329.12829590 178.68730164]
[-324.74957275 164.33306885]
[-319.29776001 150.35110474]
[-312.80413818 136.82150269]
[-305.30587769 123.82174683]
[-296.84594727 111.42631531]
[-287.47277832 99.70619965]
[-277.24005127 88.72853851]
[-266.20642090 78.55621338]
[-254.43507385 69.24748230]
[-241.99340820 60.85566711]
[-228.95272827 53.42884064]
[-215.38769531 47.00954056]
[-201.37602234 41.63454056]
[-186.99798584 37.33462143]
[-172.33592224 34.13441849]
[-157.47383118 32.05226135]
[-142.49681091 31.10007477]
[-127.49069214 31.28331375]
[-112.54140472 32.60092926]
[-97.73457336 35.04537582]
[-83.15502930 38.60264587]
[-68.88626862 43.25236893]
[-55.01003265 48.96791077]
[-41.60579681 55.71653366]
[-28.75034714 63.45957565]
[-16.51731110 72.15269470]
[-4.97676611 81.74608612]
[5.80518770 92.18480682]
[15.76678944 103.40905762]
[24.85098076 115.35455322]
[33.00572586 127.95286560]
[46.17820358 120.77749634]
[59.35067749 113.60213470]
[72.52315521 106.42676544]
[85.69563293 99.25140381]
[93.14803314 87.42121124]
[107.12900543 87.57612610]
[120.30147552 80.40075684]
[133.47395325 73.22538757]
[127.03338623 59.67422867]
[121.34910583 45.78884506]
[116.43837738 31.61141396]
[112.31610107 17.18498802]
[108.99481201 2.55338168]
[106.48458862 -12.23896980]
[104.79306030 -27.14714241]
[103.92535400 -42.12585831]
[103.88411713 -57.12963104]
[104.66946411 -72.11289215]
[106.27901459 -87.03013611]
[108.70788574 -101.83606720]
[111.94869232 -116.48571014]
[115.99159241 -130.93458557]
[120.82431793 -145.13879395]
[126.43217468 -159.05520630]
[132.79815674 -172.64157104]
[139.90290833 -185.85661316]
[147.72485352 -198.66021729]
[156.24024963 -211.01347351]
[165.42323303 -222.87886047]
[175.24591064 -234.22038269]
[185.67845154 -245.00355530]
[196.68917847 -255.19566345]
[208.24462891 -264.76571655]
[220.30975342 -273.68469238]
[232.84786987 -281.92547607]
[245.82090759 -289.46304321]
[259.18948364 -296.27450562]
[272.91299438 -302.33920288]
[286.94973755 -307.63867188]
[301.25711060 -312.15682983]
[315.79165649 -315.87997437]
[330.50924683 -318.79678345]
[345.36514282 -320.89840698]
[360.31427002 -322.17846680]
[375.31121826 -322.63305664]
[390.31042480 -322.26080322]
[405.26635742 -321.06283569]
[420.13357544 -319.04281616]
[434.86694336 -316.20684814]
[449.42172241 -312.56356812]
[463.75369263 -308.12402344]
[477.81933594 -302.90170288]
[491.57592773 -296.91244507]
[504.98168945 -290.17446899]
[517.99591064 -282.70825195]
[530.57910156 -274.53643799]
[542.69299316 -265.68383789]
[554.30084229 -256.17736816]
[565.36737061 -246.04585266]
[575.85894775 -235.32011414]
[585.74371338 -224.03269958]
[594.99169922 -212.21789551]
[603.57482910 -199.91157532]
[611.46691895 -187.15112305]
[618.64410400 -173.97529602]
[625.08459473 -160.42408752]
[630.76879883 -146.53866577]
[635.67944336 -132.36119080]
[639.80157471 -117.93473816]
[643.12280273 -103.30310822]
[645.63287354 -88.51074219]
[647.32434082 -73.60255432]
[648.19189453 -58.62383270]
[648.23303223 -43.62005997]
[647.44757080 -28.63680267]
[645.83795166 -13.71956825]
[643.40899658 1.08634222]
[640.16802979 15.73596287]
[636.12506104 30.18480301]
[631.29223633 44.38898468]
[625.68426514 58.30536270]
[619.31817627 71.89168549]
[612.21337891 85.10667419]
[604.39129639 97.91020966]
[595.87585449 110.26340485]
[586.69274902 122.12874603]
[576.86999512 133.47018433]
[566.43737793 144.25329590]
[555.42657471 154.44531250]
[543.87109375 164.01530457]
[531.80590820 172.93418884]
[519.26770020 181.17488098]
[506.29461670 188.71235657]
[492.92599487 195.52372742]
[479.20245361 201.58831787]
[465.16564941 206.88768005]
[450.85824585 211.40574646]
[436.32366943 215.12879944]
[421.60607910 218.04550171]
[406.75015259 220.14701843]
[391.80102539 221.42697144]
[376.80407715 221.88145447]
[361.80487061 221.50909424]
[346.84893799 220.31103516]
[331.98175049 218.29090881]
[317.24838257 215.45483398]
[302.69363403 211.81144714]
[288.36169434 207.37179565]
[274.29611206 202.14936829]
[260.53955078 196.16003418]
[247.13383484 189.42196655]
[234.11964417 181.95564270]
[221.53652954 173.78373718]
[209.42269897 164.93106079]
[197.81494141 155.42449951]
[186.74848938 145.29292297]
[176.25698853 134.56710815]
[166.37226868 123.27962494]
[157.12435913 111.46475220]
[148.54136658 99.15837860]
[140.64932251 86.39786530]
[127.47684479 93.57323456]
[114.30436707 100.74859619]
[106.85196686 112.57878876]
[92.87099457 112.42387390]
[79.69852448 119.59924316]
[66.52604675 126.77461243]
[53.35356903 133.94998169]
[40.18109512 141.12533569]
[46.34291077 154.80924988]
[51.45217514 168.91998291]
[55.47962570 183.37670898]
[58.40219116 198.09663391]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[77 206]
[78 205]
[79 204]
[80 203]
[81 202]
[83 200]
[84 199]
[85 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
