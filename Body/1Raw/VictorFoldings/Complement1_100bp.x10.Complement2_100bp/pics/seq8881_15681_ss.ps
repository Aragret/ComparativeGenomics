%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[-0.09341835 203.19552612]
[-0.47007096 218.19680786]
[-1.88078713 233.13636780]
[-4.31884384 247.94300842]
[-7.77262306 262.54617310]
[-12.22566509 276.87625122]
[-17.65674973 290.86495972]
[-24.03999519 304.44561768]
[-31.34498024 317.55355835]
[-39.53689575 330.12628174]
[-48.57670212 342.10385132]
[-58.42131805 353.42922974]
[-69.02383423 364.04843140]
[-80.33371735 373.91085815]
[-92.29707336 382.96948242]
[-104.85689545 391.18115234]
[-117.95332336 398.50674438]
[-131.52395630 404.91131592]
[-145.50410461 410.36441040]
[-159.82716370 414.83996582]
[-174.42486572 418.31671143]
[-189.22764587 420.77804565]
[-204.16497803 422.21224976]
[-219.16566467 422.61248779]
[-234.15821838 421.97683716]
[-249.07119751 420.30838013]
[-263.83352661 417.61499023]
[-278.37484741 413.90957642]
[-292.62591553 409.20974731]
[-306.51873779 403.53793335]
[-319.98718262 396.92114258]
[-332.96701050 389.39089966]
[-345.39639282 380.98309326]
[-357.21609497 371.73782349]
[-368.36981201 361.69909668]
[-378.80432129 350.91479492]
[-388.46997070 339.43630981]
[-397.32067871 327.31829834]
[-405.31423950 314.61856079]
[-412.41259766 301.39758301]
[-418.58190918 287.71838379]
[-423.79275513 273.64614868]
[-428.02032471 259.24795532]
[-431.24447632 244.59239197]
[-433.44982910 229.74931335]
[-434.62588501 214.78944397]
[-434.76705933 199.78408813]
[-433.87261963 184.80474854]
[-431.94689941 169.92280579]
[-428.99902344 155.20918274]
[-425.04302979 140.73399353]
[-420.09783936 126.56623077]
[-414.18695068 112.77339935]
[-407.33856201 99.42123413]
[-399.58532715 86.57336426]
[-390.96417236 74.29101562]
[-381.51614380 62.63271332]
[-371.28634644 51.65402603]
[-360.32345581 41.40726852]
[-348.67977905 31.94126892]
[-336.41076660 23.30113983]
[-323.57489014 15.52805710]
[-310.23330688 8.65906048]
[-296.44961548 2.72688484]
[-282.28952026 -2.24019909]
[-267.82046509 -6.21852112]
[-253.11140442 -9.18912220]
[-238.23245239 -11.13784695]
[-223.25451660 -12.05540752]
[-208.24894714 -11.93743229]
[-193.28729248 -10.78448296]
[-178.44081116 -8.60205460]
[-163.78028870 -5.40054560]
[-149.37557983 -1.19521499]
[-135.29531860 3.99389791]
[-121.60660553 10.14206409]
[-108.37468719 17.21998405]
[-95.66261292 25.19392967]
[-83.53096008 34.02589798]
[-72.03754425 43.67380524]
[-61.23713684 54.09166718]
[-51.18120956 65.22984314]
[-41.91767883 77.03525543]
[-33.49069595 89.45163727]
[-25.94041634 102.41983032]
[-19.30282211 115.87802124]
[-13.60954285 129.76208496]
[0.62844580 125.04195404]
[14.86643505 120.32182312]
[29.10442352 115.60168457]
[43.34241486 110.88155365]
[57.58040237 106.16141510]
[71.81838989 101.44128418]
[86.05638123 96.72114563]
[95.49260712 86.40372467]
[109.22348785 89.04086304]
[123.46147156 84.32072449]
[137.69946289 79.60059357]
[133.88124084 65.08953857]
[130.98170471 50.36737442]
[129.01231384 35.49219513]
[127.98082733 20.52270889]
[127.89132690 5.51799440]
[128.74415588 -9.46273232]
[130.53594971 -24.36034775]
[133.25964355 -39.11605835]
[136.90447998 -53.67162704]
[141.45608521 -67.96961212]
[146.89648438 -81.95358276]
[153.20422363 -95.56835938]
[160.35438538 -108.76019287]
[168.31877136 -121.47704315]
[177.06593323 -133.66870117]
[186.56135559 -145.28706360]
[196.76757812 -156.28627014]
[207.64430237 -166.62292480]
[219.14860535 -176.25622559]
[231.23509216 -185.14814758]
[243.85606384 -193.26359558]
[256.96170044 -200.57055664]
[270.50027466 -207.04019165]
[284.41839600 -212.64695740]
[298.66107178 -217.36874390]
[313.17214966 -221.18688965]
[327.89434814 -224.08634949]
[342.76953125 -226.05566406]
[357.73901367 -227.08706665]
[372.74374390 -227.17649841]
[387.72445679 -226.32357788]
[402.62207031 -224.53170776]
[417.37774658 -221.80793762]
[431.93331909 -218.16302490]
[446.23126221 -213.61134338]
[460.21520996 -208.17086792]
[473.82995605 -201.86306763]
[487.02175903 -194.71282959]
[499.73855591 -186.74838257]
[511.93017578 -178.00115967]
[523.54846191 -168.50567627]
[534.54766846 -158.29939270]
[544.88421631 -147.42262268]
[554.51745605 -135.91825867]
[563.40930176 -123.83172607]
[571.52471924 -111.21071625]
[578.83160400 -98.10504150]
[585.30120850 -84.56642151]
[590.90789795 -70.64828491]
[595.62957764 -56.40556717]
[599.44763184 -41.89447784]
[602.34704590 -27.17227936]
[604.31628418 -12.29708004]
[605.34759521 2.67241693]
[605.43695068 17.67713356]
[604.58398438 32.65784836]
[602.79199219 47.55544662]
[600.06817627 62.31112671]
[596.42315674 76.86666107]
[591.87139893 91.16459656]
[586.43084717 105.14851379]
[580.12298584 118.76322174]
[572.97271729 131.95498657]
[565.00817871 144.67173767]
[556.26086426 156.86331177]
[546.76531982 168.48158264]
[536.55902100 179.48068237]
[525.68218994 189.81721497]
[514.17773438 199.45039368]
[502.09118652 208.34219360]
[489.47012329 216.45751953]
[476.36441040 223.76434326]
[462.82577515 230.23382568]
[448.90759277 235.84045410]
[434.66485596 240.56208801]
[420.15374756 244.38008118]
[405.43151855 247.27938843]
[390.55633545 249.24855042]
[375.58682251 250.27980042]
[360.58209229 250.36906433]
[345.60137939 249.51600647]
[330.70379639 247.72396851]
[315.94815063 245.00004578]
[301.39263916 241.35498047]
[287.09469604 236.80314636]
[273.11080933 231.36253357]
[259.49615479 225.05458069]
[246.30442810 217.90422058]
[233.58770752 209.93963623]
[221.39617920 201.19227600]
[209.77796936 191.69667053]
[198.77891541 181.49028015]
[188.44242859 170.61338806]
[178.80932617 159.10893250]
[169.91758728 147.02230835]
[161.80232239 134.40121460]
[154.49557495 121.29546356]
[148.02615356 107.75677490]
[142.41960144 93.83858490]
[128.18161011 98.55871582]
[113.94361877 103.27885437]
[104.50739288 113.59627533]
[90.77651215 110.95913696]
[76.53852844 115.67927551]
[62.30053711 120.39940643]
[48.06254578 125.11953735]
[33.82455826 129.83967590]
[19.58656883 134.55981445]
[5.34857988 139.27993774]
[-8.88940907 144.00007629]
[-5.16112375 158.53556824]
[-2.44454694 173.29365540]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[87 208]
[88 207]
[89 206]
[90 205]
[91 204]
[92 203]
[93 202]
[94 201]
[96 199]
[97 198]
[98 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
