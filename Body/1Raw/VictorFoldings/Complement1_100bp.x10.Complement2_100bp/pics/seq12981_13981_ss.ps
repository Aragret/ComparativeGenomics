%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGAxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[168.61088562 269.00164795]
[170.71569824 254.14196777]
[173.99447632 239.49649048]
[178.42646790 225.15782166]
[183.98368835 211.21661377]
[190.63096619 197.76098633]
[198.32629395 184.87603760]
[186.09980774 176.18620300]
[173.87332153 167.49638367]
[161.64683533 158.80656433]
[149.42034912 150.11672974]
[149.30897522 165.11631775]
[137.60734558 174.50097656]
[122.94145966 171.35269165]
[116.12246704 157.99224854]
[122.17707062 144.26847839]
[136.64042664 140.29774475]
[125.09412384 130.72262573]
[113.54782104 121.14750671]
[102.00151825 111.57238770]
[106.82686615 125.77506256]
[105.53945160 140.71971130]
[98.35622406 153.88790894]
[86.48767853 163.06056213]
[71.93387604 166.69192505]
[57.14738464 164.17005920]
[44.61999893 155.91993713]
[36.46279144 143.33184814]
[34.05039978 128.52711487]
[37.78935623 114.00057220]
[47.04957962 102.20022583]
[60.27055359 95.11462402]
[75.22431946 93.93782043]
[89.39232635 98.86898041]
[79.90342712 87.25171661]
[70.41452789 75.63445282]
[60.92563248 64.01718903]
[51.43673325 52.39992523]
[41.94783401 40.78266144]
[32.45893478 29.16539955]
[22.97003746 17.54813576]
[26.31902313 32.16949844]
[26.12083244 47.16819000]
[22.38667488 61.69595718]
[15.32773113 74.93119049]
[5.34322262 86.12536621]
[-7.00218010 94.64540100]
[-21.01028442 100.00945282]
[-35.88886261 101.91414642]
[-50.79646301 100.25177002]
[-64.88998413 95.11634064]
[-77.37237549 86.79828644]
[-87.53768158 75.76803589]
[-94.81102753 62.64940643]
[-98.78105164 48.18431473]
[-99.22324371 33.19083023]
[-96.11257935 18.51691628]
[-89.62500000 4.99244690]
[-80.12739563 -6.61770201]
[-68.15691376 -15.65691948]
[-54.39052963 -21.61399460]
[-39.60680771 -24.15202713]
[-24.64183998 -23.12747574]
[-10.34196377 -18.59828758]
[2.48409104 -10.82060814]
[13.11161518 -0.23345944]
[8.28561783 -14.43591499]
[3.45962000 -28.63837051]
[-1.36637759 -42.84082794]
[-6.19237518 -57.04328156]
[-11.01837254 -71.24573517]
[-25.75037384 -68.30921173]
[-40.73963547 -67.32077789]
[-55.72967911 -68.29735565]
[-70.46399689 -71.22222900]
[-84.69046783 -76.04534912]
[-98.16566467 -82.68418884]
[-110.65899658 -91.02514648]
[-121.95669556 -100.92549896]
[-131.86544800 -112.21583557]
[-140.21568298 -124.70296478]
[-146.86454773 -138.17321777]
[-151.69824219 -152.39610291]
[-154.63406372 -167.12825012]
[-155.62178040 -182.11755371]
[-154.64448547 -197.10754395]
[-151.71891785 -211.84173584]
[-146.89511108 -226.06797791]
[-140.25563049 -239.54284668]
[-131.91409302 -252.03579712]
[-122.01319885 -263.33300781]
[-110.72238922 -273.24124146]
[-98.23485565 -281.59088135]
[-84.76428223 -288.23907471]
[-70.54116821 -293.07211304]
[-55.80889130 -296.00723267]
[-40.81953430 -296.99423218]
[-25.82958603 -296.01623535]
[-11.09554672 -293.08996582]
[3.13046718 -288.26547241]
[16.60502815 -281.62536621]
[29.09757042 -273.28320312]
[40.39432907 -263.38177490]
[50.30200195 -252.09049988]
[58.65105438 -239.60256958]
[65.29862213 -226.13168335]
[70.13096619 -211.90834045]
[73.06538391 -197.17591858]
[74.05168152 -182.18652344]
[73.07295990 -167.19662476]
[70.14598846 -152.46272278]
[65.32083130 -138.23693848]
[58.68007278 -124.76268768]
[50.33732986 -112.27054596]
[40.43536377 -100.97425842]
[29.14361191 -91.06712341]
[16.65528679 -82.71866608]
[3.18408275 -76.07173157]
[8.01008034 -61.86927795]
[12.83607769 -47.66682434]
[17.66207504 -33.46436691]
[22.48807335 -19.26191330]
[27.31407166 -5.05945730]
[34.58729935 8.05923653]
[44.07619858 19.67650032]
[53.56509781 31.29376411]
[63.05399704 42.91102600]
[72.54289246 54.52828979]
[82.03179169 66.14555359]
[91.52069092 77.76281738]
[101.00959015 89.38008118]
[111.57663727 100.02609253]
[123.12294006 109.60121155]
[134.66923523 119.17633057]
[146.21554565 128.75144958]
[158.11016846 137.89024353]
[170.33665466 146.58007812]
[182.56314087 155.26989746]
[194.78962708 163.95971680]
[207.01611328 172.64955139]
[216.65476990 161.14578247]
[227.17692566 150.44419861]
[238.51608276 140.61242676]
[250.60052490 131.71263123]
[263.35388184 123.80109406]
[276.69546509 116.92782593]
[290.54098511 111.13628387]
[304.80285645 106.46309662]
[319.39096069 102.93778992]
[334.21301270 100.58265686]
[349.17532349 99.41260529]
[364.18331909 99.43500519]
[379.14208984 100.64974213]
[393.95703125 103.04911041]
[408.53454590 106.61796570]
[422.78240967 111.33372498]
[436.61056519 117.16658020]
[449.93157959 124.07965088]
[462.66122437 132.02923584]
[474.71905518 140.96507263]
[486.02880859 150.83065796]
[496.51895142 161.56362915]
[506.12322998 173.09611511]
[514.78082275 185.35520935]
[522.43713379 198.26341248]
[529.04364014 211.73910522]
[534.55859375 225.69708252]
[538.94714355 240.04910278]
[542.18157959 254.70443726]
[544.24133301 269.57040405]
[545.11352539 284.55303955]
[544.79260254 299.55761719]
[543.28051758 314.48925781]
[540.58691406 329.25354004]
[536.72875977 343.75717163]
[531.73052979 357.90841675]
[525.62371826 371.61779785]
[518.44702148 384.79864502]
[510.24578857 397.36764526]
[501.07186890 409.24533081]
[490.98324585 420.35656738]
[480.04373169 430.63116455]
[468.32244873 440.00408936]
[455.89355469 448.41613770]
[442.83560181 455.81411743]
[429.23117065 462.15124512]
[415.16622925 467.38745117]
[400.72976685 471.48962402]
[386.01296997 474.43185425]
[371.10897827 476.19552612]
[356.11193848 476.76950073]
[341.11672974 476.15011597]
[326.21813965 474.34133911]
[311.51034546 471.35455322]
[297.08633423 467.20864868]
[283.03732300 461.92987061]
[269.45214844 455.55157471]
[256.41665649 448.11410522]
[244.01329041 439.66445923]
[232.32046509 430.25604248]
[221.41210938 419.94839478]
[211.35717773 408.80664062]
[202.21926880 396.90124512]
[194.05612183 384.30746460]
[186.91937256 371.10491943]
[180.85414124 357.37710571]
[175.89875793 343.21081543]
[172.08456421 328.69555664]
[169.43568420 313.92318726]
[167.96884155 298.98703003]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 140]
[8 139]
[9 138]
[10 137]
[11 136]
[17 135]
[18 134]
[19 133]
[20 132]
[34 131]
[35 130]
[36 129]
[37 128]
[38 127]
[39 126]
[40 125]
[41 124]
[66 123]
[67 122]
[68 121]
[69 120]
[70 119]
[71 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
