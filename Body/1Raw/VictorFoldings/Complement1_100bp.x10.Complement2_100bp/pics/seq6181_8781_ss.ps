%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[84.80330658 480.12173462]
[89.10214996 465.69589233]
[96.21720123 452.43084717]
[105.85710907 440.86984253]
[117.62711334 431.48623657]
[131.04524231 424.66433716]
[127.07315063 410.19979858]
[123.10105896 395.73529053]
[119.12895966 381.27075195]
[115.15686035 366.80624390]
[110.35433960 361.18862915]
[111.23502350 352.09674072]
[102.70909119 364.43807983]
[87.97913361 367.27151489]
[75.48313141 358.97390747]
[72.37937927 344.29852295]
[80.44583130 331.65209961]
[95.06166077 328.27905273]
[107.85369873 336.11087036]
[105.40797424 321.31158447]
[102.96224213 306.51232910]
[100.51651764 291.71304321]
[98.07079315 276.91378784]
[95.62506104 262.11450195]
[81.63629150 256.99789429]
[72.02285767 245.48973083]
[69.44344330 230.61650085]
[74.68945312 216.35549927]
[86.44598389 206.57125854]
[84.00025940 191.77198792]
[81.55453491 176.97271729]
[79.10880280 162.17344666]
[74.72843933 176.51962280]
[67.66906738 189.75460815]
[58.19459915 201.38365173]
[46.65924835 210.97196960]
[33.49427414 218.16108704]
[19.19185829 222.68225098]
[4.28670597 224.36640930]
[-10.66394234 223.15063477]
[-25.10114479 219.08035278]
[-38.48515701 212.30775452]
[-50.31560898 203.08601379]
[-60.15021133 191.75991821]
[-67.62128448 178.75286865]
[-72.44952393 164.55117798]
[-74.45441437 149.68577576]
[-73.56101227 134.71240234]
[-69.80271149 120.19085693]
[-63.32001495 106.66404724]
[-54.35529327 94.63767242]
[-43.24369049 84.56134796]
[-30.40062523 76.81178284]
[-16.30624390 71.67871094]
[-1.48747802 69.35402679]
[13.50166416 69.92464447]
[28.10080338 73.36922455]
[41.76413727 79.55899811]
[53.98085785 88.26255035]
[64.29422760 99.15448761]
[72.31867218 111.82762146]
[77.75420380 125.80814362]
[80.39710999 140.56730652]
[84.58412170 126.16352844]
[88.77113342 111.75974274]
[83.78712463 101.23354340]
[87.12122345 90.07446289]
[97.06285858 84.00774384]
[101.46385956 69.66789246]
[105.86486053 55.32804871]
[110.26585388 40.98820114]
[113.58811951 26.36074066]
[115.81323242 11.52669811]
[118.03835297 -3.30734611]
[120.26346588 -18.14138985]
[122.26747894 -33.00691986]
[124.04994965 -47.90063477]
[118.00735474 -62.52245712]
[127.20223236 -74.24011993]
[128.98469543 -89.13383484]
[130.76716614 -104.02755737]
[132.54962158 -118.92127228]
[134.33209229 -133.81498718]
[136.11456299 -148.70870972]
[136.44953918 -163.70497131]
[135.33389282 -178.66342163]
[134.21824646 -193.62187195]
[133.10258484 -208.58032227]
[131.98693848 -223.53877258]
[130.87129211 -238.49723816]
[129.75564575 -253.45568848]
[114.90782166 -256.10012817]
[101.18445587 -262.35470581]
[89.44821167 -271.82632446]
[80.43683624 -283.91955566]
[74.71678925 -297.87417603]
[72.64763641 -312.81304932]
[74.35945892 -327.79702759]
[79.74463654 -341.88430786]
[88.46466064 -354.18923950]
[99.97138214 -363.93841553]
[113.54147339 -370.51895142]
[128.32191467 -373.51718140]
[143.38359070 -372.74465942]
[157.77970886 -368.24993896]
[170.60531616 -360.31555176]
[181.05419922 -349.44027710]
[188.46951294 -336.30773926]
[192.38513184 -321.74343872]
[192.55493164 -306.66293335]
[188.96821594 -292.01416016]
[181.85046387 -278.71798706]
[171.64909363 -267.61019897]
[159.00537109 -259.38903809]
[144.71409607 -254.57133484]
[145.82974243 -239.61288452]
[146.94538879 -224.65443420]
[148.06105042 -209.69596863]
[149.17669678 -194.73751831]
[150.29234314 -179.77906799]
[151.40798950 -164.82061768]
[158.28800964 -178.14973450]
[169.94354248 -187.59156799]
[184.41044617 -191.55503845]
[199.25076294 -189.37219238]
[211.96366882 -181.41088867]
[220.40678406 -169.01277161]
[223.15733337 -154.26710510]
[219.75177002 -139.65881348]
[210.76400757 -127.64965057]
[197.70863342 -120.26335907]
[182.78570557 -118.74467468]
[168.51000977 -123.34951019]
[157.28724670 -133.30187988]
[151.00828552 -146.92623901]
[149.22581482 -132.03251648]
[147.44334412 -117.13880157]
[145.66087341 -102.24508667]
[143.87841797 -87.35137177]
[142.09594727 -72.45765686]
[148.26603699 -58.90113068]
[138.94366455 -46.11816788]
[137.16119385 -31.22445297]
[139.35641479 -26.98298264]
[138.91047668 -21.31745911]
[135.09750366 -15.91627216]
[132.87239075 -1.08222878]
[130.64727783 13.75181484]
[128.42216492 28.58585930]
[138.97024536 17.92105865]
[153.41113281 13.86387157]
[167.97000122 17.47483444]
[178.84121704 27.81005287]
[183.18305969 42.16792297]
[179.86058044 56.79533386]
[169.74226379 67.86871338]
[155.47302246 72.49350739]
[140.78280640 69.46080780]
[129.51158142 59.56335449]
[124.60570526 45.38919830]
[120.20470428 59.72904587]
[115.80371094 74.06889343]
[111.40270996 88.40874481]
[115.57922363 104.65475464]
[103.17491150 115.94675446]
[98.98789978 130.35054016]
[94.80088806 144.75431824]
[93.90807343 159.72772217]
[96.35380554 174.52699280]
[98.79953003 189.32626343]
[101.24525452 204.12553406]
[115.52461243 209.60708618]
[125.07993317 221.42201233]
[127.42287445 236.33432007]
[122.02314758 250.32356262]
[110.42433167 259.66879272]
[112.87006378 274.46804810]
[115.31578827 289.26733398]
[117.76151276 304.06658936]
[120.20724487 318.86587524]
[122.65296936 333.66513062]
[125.75708008 348.34045410]
[129.62138367 362.83413696]
[133.59349060 377.29864502]
[137.56558228 391.76318359]
[141.53767395 406.22772217]
[145.50976562 420.69223022]
[160.53007507 419.70468140]
[175.44166565 421.76126099]
[189.63391113 426.77774048]
[202.52565002 434.54870605]
[213.58897400 444.75595093]
[222.37084961 456.98147583]
[228.51165771 470.72467041]
[231.75994873 485.42276001]
[231.98269653 500.47384644]
[229.17077637 515.26159668]
[223.43934631 529.18048096]
[215.02310181 541.66052246]
[204.26667786 552.19073486]
[191.61054993 560.33978271]
[177.57296753 565.77404785]
[162.72877502 568.27099609]
[147.68582153 567.72833252]
[133.06010437 564.16839600]
[119.45055389 557.73681641]
[107.41445923 548.69702148]
[97.44469452 537.41925049]
[89.94951630 524.36523438]
[85.23583984 510.06958008]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 187]
[7 186]
[8 185]
[9 184]
[10 183]
[12 182]
[19 181]
[20 180]
[21 179]
[22 178]
[23 177]
[24 176]
[29 171]
[30 170]
[31 169]
[32 168]
[63 167]
[64 166]
[65 165]
[68 163]
[69 162]
[70 161]
[71 160]
[72 149]
[73 148]
[74 147]
[75 146]
[76 143]
[77 142]
[79 140]
[80 139]
[81 138]
[82 137]
[83 136]
[84 135]
[85 121]
[86 120]
[87 119]
[88 118]
[89 117]
[90 116]
[91 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
