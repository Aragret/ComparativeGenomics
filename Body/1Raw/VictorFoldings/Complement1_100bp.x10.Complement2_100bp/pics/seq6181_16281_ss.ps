%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[139.32449341 875.52117920]
[124.49225616 873.26843262]
[109.77066803 870.37969971]
[95.18698883 866.86029053]
[80.76822662 862.71673584]
[66.54107666 857.95666504]
[52.53189468 852.58892822]
[38.76661301 846.62347412]
[25.27072716 840.07128906]
[12.06922626 832.94451904]
[-0.81344479 825.25646973]
[-13.35342884 817.02124023]
[-25.52750397 808.25415039]
[-37.31312561 798.97143555]
[-48.68847656 789.19024658]
[-59.63248062 778.92877197]
[-70.12488556 768.20587158]
[-80.14624786 757.04156494]
[-89.67801666 745.45642090]
[-98.70254517 733.47198486]
[-107.20311737 721.11029053]
[-115.16398621 708.39440918]
[-122.57042694 695.34777832]
[-129.40870667 681.99456787]
[-135.66616821 668.35955811]
[-141.33123779 654.46795654]
[-146.39340210 640.34545898]
[-150.84330750 626.01824951]
[-154.67269897 611.51287842]
[-157.87449646 596.85620117]
[-160.44274902 582.07537842]
[-162.37272644 567.19769287]
[-163.66085815 552.25073242]
[-164.30473328 537.26226807]
[-164.30317688 522.25988770]
[-163.65618896 507.27154541]
[-162.36495972 492.32489014]
[-160.43188477 477.44760132]
[-157.86054993 462.66729736]
[-154.65571594 448.01126099]
[-150.82331848 433.50668335]
[-146.37043762 419.18041992]
[-141.30532837 405.05899048]
[-135.63739014 391.16854858]
[-129.37709045 377.53482056]
[-122.53603363 364.18307495]
[-115.12688446 351.13796997]
[-107.16336823 338.42370605]
[-98.66023254 326.06384277]
[-89.63321686 314.08123779]
[-80.09903717 302.49807739]
[-70.07535553 291.33581543]
[-59.58072662 280.61517334]
[-48.63459015 270.35592651]
[-37.25720978 260.57711792]
[-25.46965981 251.29682922]
[-13.29376316 242.53227234]
[-0.75206947 234.29966736]
[12.13219738 226.61425781]
[25.33518028 219.49026489]
[38.83242798 212.94090271]
[52.59894562 206.97827148]
[66.60924530 201.61344910]
[80.83737946 196.85633850]
[95.25700378 192.71574402]
[109.84140778 189.19937134]
[106.95613861 174.47947693]
[104.07086182 159.75958252]
[101.18559265 145.03968811]
[98.30032349 130.31980896]
[95.41504669 115.59991455]
[84.06761932 103.24628448]
[89.67687988 87.43766022]
[86.57276917 72.76235962]
[83.46865845 58.08705902]
[80.36455536 43.41175461]
[77.26044464 28.73645401]
[74.15633392 14.06115150]
[69.37575531 28.27896118]
[59.57621765 39.63541412]
[46.21141434 46.44584656]
[31.26393318 47.69997025]
[16.95114708 43.21174622]
[5.39627266 33.64697266]
[-1.68659377 20.42453003]
[-3.24675083 5.50588608]
[0.94724166 -8.89586449]
[10.27322960 -20.64431000]
[23.34775734 -27.99663544]
[38.23130035 -29.86216927]
[52.71596527 -25.96417046]
[64.65304565 -16.88088417]
[72.27111053 -3.96156335]
[72.27111053 -18.96156311]
[72.27111053 -33.96156311]
[72.27111053 -48.96156311]
[72.27111053 -63.96156311]
[72.27111053 -78.96156311]
[58.21392441 -84.74636078]
[47.44404984 -95.47381592]
[41.60382080 -109.50806427]
[41.58382416 -124.70899200]
[47.38711166 -138.75856018]
[58.12872314 -149.51431274]
[72.17064667 -155.33607483]
[87.37158203 -155.33607483]
[101.41349792 -149.51431274]
[112.15511322 -138.75856018]
[117.95839691 -124.70899200]
[117.93840027 -109.50806427]
[112.09816742 -95.47381592]
[101.32830048 -84.74636078]
[87.27111053 -78.96156311]
[87.27111053 -63.96156311]
[87.27111053 -48.96156311]
[87.27111053 -33.96156311]
[87.27111053 -18.96156311]
[87.27111053 -3.96156335]
[88.83163452 10.95704174]
[91.93574524 25.63234329]
[95.03985596 40.30764771]
[98.14396667 54.98294830]
[101.24807739 69.65824890]
[104.35218811 84.33355713]
[113.71292877 91.26303101]
[116.03817749 102.67506409]
[110.13494110 112.71463776]
[113.02021027 127.43453217]
[115.90548706 142.15441895]
[118.79075623 156.87431335]
[121.67603302 171.59420776]
[124.56130219 186.31410217]
[139.39399719 184.06437683]
[154.30973816 182.45487976]
[169.28091431 181.48858643]
[184.27980042 181.16726685]
[199.27862549 181.49154663]
[214.24961853 182.46080017]
[229.16503906 184.07325745]
[243.99728394 186.32589722]
[258.71887207 189.21458435]
[273.30258179 192.73394775]
[287.72134399 196.87747192]
[301.94851685 201.63749695]
[315.95770264 207.00518799]
[329.72302246 212.97062683]
[343.21893311 219.52275085]
[356.42044067 226.64942932]
[369.30313110 234.33747864]
[381.84317017 242.57264709]
[394.01727295 251.33969116]
[405.80291748 260.62237549]
[417.17828369 270.40353394]
[428.12234497 280.66500854]
[438.61477661 291.38781738]
[448.63616943 302.55209351]
[458.16799927 314.13720703]
[467.19256592 326.12164307]
[475.69317627 338.48327637]
[483.65408325 351.19915771]
[491.06054688 364.24575806]
[497.89889526 377.59893799]
[504.15640259 391.23394775]
[509.82150269 405.12554932]
[514.88372803 419.24798584]
[519.33367920 433.57516479]
[523.16308594 448.08053589]
[526.36492920 462.73721313]
[528.93328857 477.51806641]
[530.86328125 492.39572144]
[532.15148926 507.34265137]
[532.79541016 522.33117676]
[532.79388428 537.33349609]
[532.14697266 552.32183838]
[530.85577393 567.26849365]
[528.92272949 582.14581299]
[526.35144043 596.92614746]
[523.14666748 611.58215332]
[519.31433105 626.08673096]
[514.86151123 640.41302490]
[509.79644775 654.53448486]
[504.12854004 668.42492676]
[497.86828613 682.05865479]
[491.02728271 695.41046143]
[483.61816406 708.45556641]
[475.65469360 721.16986084]
[467.15161133 733.52978516]
[458.12463379 745.51239014]
[448.59048462 757.09558105]
[438.56683350 768.25787354]
[428.07223511 778.97857666]
[417.12615967 789.23785400]
[405.74880981 799.01672363]
[393.96127319 808.29699707]
[381.78540039 817.06164551]
[369.24374390 825.29425049]
[356.35949707 832.97973633]
[343.15655518 840.10375977]
[329.65933228 846.65319824]
[315.89282227 852.61584473]
[301.88253784 857.98071289]
[287.65441895 862.73785400]
[273.23480225 866.87854004]
[258.65042114 870.39495850]
[243.92823792 873.28063965]
[229.09553528 875.53033447]
[214.17979431 877.13977051]
[199.20860291 878.10601807]
[184.20971680 878.42730713]
[169.21089172 878.10296631]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 132]
[67 131]
[68 130]
[69 129]
[70 128]
[71 127]
[73 124]
[74 123]
[75 122]
[76 121]
[77 120]
[78 119]
[93 118]
[94 117]
[95 116]
[96 115]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
