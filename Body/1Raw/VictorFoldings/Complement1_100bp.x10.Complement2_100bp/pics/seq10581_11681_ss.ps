%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCGxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[72.32507324 835.24951172]
[57.32527542 834.91821289]
[42.36337662 833.80230713]
[27.48038673 831.90490723]
[12.71709538 829.23114014]
[-1.88602984 825.78839111]
[-16.28896332 821.58612061]
[-30.45222664 816.63580322]
[-44.33700180 810.95104980]
[-57.90522766 804.54736328]
[-71.11971283 797.44238281]
[-83.94424438 789.65551758]
[-96.34366608 781.20819092]
[-108.28399658 772.12347412]
[-119.73250580 762.42626953]
[-130.65780640 752.14318848]
[-141.02995300 741.30242920]
[-150.82054138 729.93371582]
[-160.00270081 718.06811523]
[-168.55128479 705.73828125]
[-176.44285583 692.97790527]
[-183.65579224 679.82202148]
[-190.17031860 666.30670166]
[-195.96856689 652.46893311]
[-201.03465271 638.34667969]
[-205.35470581 623.97863770]
[-208.91685486 609.40417480]
[-211.71136475 594.66326904]
[-213.73056030 579.79626465]
[-214.96890259 564.84405518]
[-215.42301941 549.84747314]
[-215.09164429 534.84765625]
[-213.97569275 519.88574219]
[-212.07821655 505.00277710]
[-209.40443420 490.23950195]
[-205.96166992 475.63638306]
[-201.75933838 461.23345947]
[-196.80899048 447.07022095]
[-191.12416077 433.18545532]
[-184.72045898 419.61724854]
[-177.61543274 406.40277100]
[-169.82853699 393.57827759]
[-161.38113403 381.17886353]
[-152.29637146 369.23858643]
[-142.59916687 357.79010010]
[-132.31607056 346.86483765]
[-121.47527313 336.49270630]
[-110.10650635 326.70214844]
[-98.24092102 317.52001953]
[-85.91104126 308.97146606]
[-73.15065765 301.07995605]
[-59.99475098 293.86706543]
[-46.47938156 287.35256958]
[-32.64159393 281.55435181]
[-18.51931381 276.48831177]
[-4.15125036 272.16830444]
[10.42321301 268.60620117]
[25.16412926 265.81173706]
[40.03109741 263.79260254]
[54.98336029 262.55429077]
[69.97994232 262.10021973]
[84.97973633 262.43164062]
[86.09538269 247.47319031]
[87.21103668 232.51473999]
[88.10385132 217.54133606]
[88.77363586 202.55628967]
[89.44342041 187.57125854]
[75.61554718 179.21047974]
[67.84616852 164.93489075]
[68.33901215 148.59555054]
[77.05421448 134.65493774]
[91.69337463 126.96813965]
[92.13998413 111.97478485]
[85.68240356 99.57352448]
[92.86666870 87.57860565]
[93.31327820 72.58525848]
[92.64348602 57.60021973]
[90.86102295 42.70650101]
[89.07855988 27.81278419]
[87.29608917 12.91906738]
[78.83272552 25.30339050]
[64.74560547 30.45634079]
[50.28886414 26.45599556]
[40.85452271 14.79438400]
[39.96134949 -0.17900062]
[47.94247818 -12.87945652]
[61.82114792 -18.57002640]
[76.42095184 -15.12827015]
[86.29698944 -3.83680439]
[86.29698944 -18.83680534]
[86.29698944 -33.83680344]
[86.29698944 -48.83680344]
[78.55969238 -62.63697815]
[86.29698944 -75.36425018]
[86.29698944 -90.36425018]
[86.29698944 -105.36425018]
[86.29698944 -120.36425018]
[86.29698944 -135.36424255]
[86.29698944 -150.36424255]
[86.29698944 -165.36424255]
[72.95586395 -172.97410583]
[65.22089386 -186.24308777]
[65.17275238 -201.60189819]
[72.82438660 -214.91911316]
[86.11754608 -222.61244202]
[101.47644043 -222.61244202]
[114.76959991 -214.91911316]
[122.42123413 -201.60189819]
[122.37309265 -186.24308777]
[114.63812256 -172.97410583]
[101.29698944 -165.36424255]
[101.29698944 -150.36424255]
[101.29698944 -135.36424255]
[101.29698944 -120.36425018]
[101.29698944 -105.36425018]
[101.29698944 -90.36425018]
[101.29698944 -75.36425018]
[109.03429413 -62.63697815]
[101.29698944 -48.83680344]
[101.29698944 -33.83680344]
[101.29698944 -18.83680534]
[101.29698944 -3.83680439]
[102.18981171 11.13660145]
[103.97227478 26.03031921]
[105.75473785 40.92403412]
[107.53720856 55.81775284]
[114.88463593 42.74047089]
[127.73563385 35.00407791]
[142.73098755 34.63085175]
[155.95095825 41.71834946]
[163.93984985 54.41392136]
[164.60940552 69.39897156]
[157.78460693 82.75643921]
[145.24943542 90.99472809]
[130.28054810 91.96035767]
[116.79077911 85.40091705]
[108.30662537 73.03186035]
[107.86001587 88.02521515]
[114.31759644 100.42647552]
[107.13333130 112.42139435]
[106.68672180 127.41474152]
[118.95250702 134.13883972]
[127.08573151 145.43780518]
[129.54544067 159.07334900]
[125.90773773 172.37434387]
[116.93750763 182.76008606]
[104.42845917 188.24104309]
[103.75867462 203.22607422]
[103.08889008 218.21112061]
[105.79172516 224.24487305]
[105.13956451 229.89038086]
[102.16948700 233.63038635]
[101.05384064 248.58883667]
[99.93818665 263.54730225]
[114.82118988 265.44464111]
[129.58450317 268.11828613]
[144.18765259 271.56091309]
[158.59060669 275.76312256]
[172.75389099 280.71334839]
[186.63870239 286.39804077]
[200.20697021 292.80160522]
[213.42150879 299.90652466]
[226.24607849 307.69329834]
[238.64555359 316.14059448]
[250.58593750 325.22525024]
[262.03451538 334.92236328]
[272.95986938 345.20535278]
[283.33209229 356.04605103]
[293.12274170 367.41473389]
[302.30496216 379.28024292]
[310.85363770 391.61004639]
[318.74526978 404.37036133]
[325.95828247 417.52618408]
[332.47290039 431.04150391]
[338.27124023 444.87924194]
[343.33740234 459.00146484]
[347.65753174 473.36947632]
[351.21978760 487.94390869]
[354.01437378 502.68481445]
[356.03366089 517.55175781]
[357.27209473 532.50402832]
[357.72628784 547.50061035]
[357.39501953 562.50036621]
[356.27914429 577.46228027]
[354.38177490 592.34527588]
[351.70806885 607.10858154]
[348.26538086 621.71173096]
[344.06314087 636.11468506]
[339.11288452 650.27795410]
[333.42816162 664.16271973]
[327.02453613 677.73095703]
[319.91958618 690.94549561]
[312.13275146 703.77001953]
[303.68542480 716.16949463]
[294.60073853 728.10986328]
[284.90359497 739.55841064]
[274.62057495 750.48370361]
[263.77984619 760.85589600]
[252.41113281 770.64654541]
[240.54559326 779.82873535]
[228.21577454 788.37731934]
[215.45544434 796.26898193]
[202.29957581 803.48193359]
[188.78424072 809.99645996]
[174.94648743 815.79479980]
[160.82423401 820.86090088]
[146.45620728 825.18103027]
[131.88175964 828.74322510]
[117.14086151 831.53778076]
[102.27391052 833.55700684]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 154]
[63 153]
[64 152]
[65 149]
[66 148]
[67 147]
[72 141]
[73 140]
[75 138]
[76 137]
[77 126]
[78 125]
[79 124]
[80 123]
[89 122]
[90 121]
[91 120]
[92 119]
[94 117]
[95 116]
[96 115]
[97 114]
[98 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
