%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGAxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[115.39382172 334.79983521]
[105.33796692 345.99252319]
[93.34544373 355.07965088]
[79.84976959 361.73272705]
[65.33880615 365.71124268]
[50.33712387 366.87136841]
[35.38701248 365.17114258]
[21.02891159 360.67208862]
[7.78186274 353.53683472]
[-3.87526512 344.02325439]
[-13.52107334 332.47531128]
[-20.80687332 319.31045532]
[-25.46928596 305.00457764]
[-27.33976746 290.07479858]
[-26.35070419 275.06088257]
[-22.53784943 260.50552368]
[-16.03903198 246.93489075]
[-7.08918428 234.83956909]
[3.98816442 224.65679932]
[16.79257393 216.75466919]
[30.86117554 211.41885376]
[45.68539429 208.84222412]
[60.72934723 209.11791992]
[63.83345413 194.44261169]
[66.93756866 179.76731873]
[70.04167938 165.09201050]
[58.49416733 174.66567993]
[43.61709976 176.58213806]
[30.02029228 170.24757385]
[21.91686440 157.62480164]
[21.81775093 142.62512207]
[29.75366402 129.89636230]
[43.26557159 123.38266754]
[58.16666794 125.10236359]
[69.83968353 134.52259827]
[74.66761780 148.72465515]
[79.70452881 134.59562683]
[84.74144745 120.46659851]
[89.77836609 106.33756256]
[94.60436249 92.13510895]
[91.48714447 76.62403107]
[102.76422119 66.89383698]
[107.37822723 52.62110138]
[111.99224091 38.34836960]
[116.60624695 24.07563400]
[121.22026062 9.80290127]
[107.16487122 4.55684423]
[93.35713196 -1.31012845]
[79.82446289 -7.78636932]
[66.59371185 -14.85901928]
[53.69116974 -22.51403809]
[41.14244080 -30.73622513]
[28.97244072 -39.50925827]
[17.20533371 -48.81571579]
[5.86448193 -58.63712311]
[-5.02759838 -68.95397949]
[-15.44928169 -79.74581146]
[-25.37987709 -90.99117279]
[-34.79966736 -102.66775513]
[-43.68995285 -114.75236511]
[-52.03307724 -127.22101593]
[-59.81248474 -140.04895020]
[-67.01271820 -153.21069336]
[-73.61949921 -166.68011475]
[-79.61968994 -180.43049622]
[-85.00139618 -194.43449402]
[-89.75392151 -208.66433716]
[-93.86782837 -223.09176636]
[-97.33496094 -237.68814087]
[-100.14842224 -252.42446899]
[-102.30263519 -267.27151489]
[-103.79332733 -282.19976807]
[-104.61752319 -297.17959595]
[-104.77359772 -312.18127441]
[-104.26123810 -327.17504883]
[-103.08146667 -342.13107300]
[-101.23661804 -357.01971436]
[-98.73035431 -371.81140137]
[-95.56765747 -386.47674561]
[-91.75480652 -400.98663330]
[-87.29936981 -415.31228638]
[-82.21018982 -429.42523193]
[-76.49737549 -443.29745483]
[-70.17227173 -456.90142822]
[-63.24742889 -470.21011353]
[-55.73659897 -483.19714355]
[-47.65469360 -495.83666992]
[-39.01775742 -508.10363770]
[-29.84294128 -519.97363281]
[-20.14846039 -531.42321777]
[-9.95356178 -542.42950439]
[0.72151428 -552.97076416]
[11.85557270 -563.02600098]
[23.42650795 -572.57525635]
[35.41134644 -581.59960938]
[47.78629303 -590.08105469]
[60.52677917 -598.00286865]
[73.60751343 -605.34930420]
[87.00251770 -612.10565186]
[100.68519592 -618.25866699]
[114.62839508 -623.79602051]
[128.80442810 -628.70672607]
[143.18513489 -632.98107910]
[157.74198914 -636.61059570]
[172.44606018 -639.58801270]
[187.26817322 -641.90747070]
[202.17890930 -643.56433105]
[217.14863586 -644.55529785]
[232.14765930 -644.87847900]
[247.14617920 -644.53314209]
[262.11444092 -643.52001953]
[277.02270508 -641.84112549]
[291.84136963 -639.49981689]
[306.54101562 -636.50061035]
[321.09249878 -632.84960938]
[335.46688843 -628.55401611]
[349.63562012 -623.62237549]
[363.57061768 -618.06445312]
[377.24420166 -611.89123535]
[390.62921143 -605.11505127]
[403.69906616 -597.74932861]
[416.42785645 -589.80871582]
[428.79025269 -581.30895996]
[440.76174927 -572.26690674]
[452.31854248 -562.70056152]
[463.43774414 -552.62890625]
[474.09722900 -542.07189941]
[484.27584839 -531.05053711]
[493.95339966 -519.58666992]
[503.11065674 -507.70309448]
[511.72946167 -495.42340088]
[519.79266357 -482.77191162]
[527.28430176 -469.77383423]
[534.18951416 -456.45492554]
[540.49450684 -442.84161377]
[546.18682861 -428.96096802]
[551.25512695 -414.84051514]
[555.68939209 -400.50830078]
[559.48077393 -385.99276733]
[562.62182617 -371.32278442]
[565.10620117 -356.52740479]
[566.92907715 -341.63607788]
[568.08673096 -326.67831421]
[568.57696533 -311.68380737]
[568.39868164 -296.68237305]
[567.55236816 -281.70376587]
[566.03961182 -266.77774048]
[563.86346436 -251.93389893]
[561.02825928 -237.20173645]
[557.53955078 -222.61050415]
[553.40429688 -208.18917847]
[548.63079834 -193.96636963]
[543.22839355 -179.97032166]
[537.20788574 -166.22883606]
[530.58123779 -152.76918030]
[523.36151123 -139.61808777]
[515.56317139 -126.80167389]
[507.20162964 -114.34536743]
[498.29351807 -102.27390289]
[488.85647583 -90.61125183]
[478.90927124 -79.38057709]
[468.47164917 -68.60415649]
[457.56433105 -58.30340576]
[446.20898438 -48.49876404]
[434.42813110 -39.20970535]
[422.24520874 -30.45466423]
[409.68432617 -22.25102806]
[396.77047729 -14.61508369]
[383.52929688 -7.56199026]
[369.98709106 -1.10575294]
[356.17068481 4.74081135]
[342.10757446 9.96609402]
[327.82562256 14.55972099]
[313.35324097 18.51257133]
[298.71914673 21.81679916]
[283.95236206 24.46584129]
[269.08224487 26.45444107]
[254.13830566 27.77864838]
[239.15020752 28.43583298]
[224.14770508 28.42469406]
[209.16059875 27.74525070]
[194.21864319 26.39885330]
[179.35150146 24.38817406]
[164.58866882 21.71720505]
[149.95948792 18.39124870]
[135.49299622 14.41691017]
[130.87898254 28.68964386]
[126.26496887 42.96237564]
[121.65096283 57.23511124]
[117.03695679 71.50784302]
[120.48419952 85.99803925]
[108.87709808 96.74912262]
[110.14613342 101.83866882]
[108.47325134 107.27693939]
[103.90739441 111.37448120]
[98.87047577 125.50350952]
[93.83356476 139.63253784]
[88.79664612 153.76156616]
[84.71697998 168.19612122]
[81.61286926 182.87142944]
[78.50875854 197.54672241]
[75.40464783 212.22203064]
[89.27174377 218.06156921]
[101.78294373 226.42018127]
[112.48599243 236.99568176]
[120.99397278 249.40579224]
[126.99932861 263.20187378]
[130.28497314 277.88525391]
[130.73211670 292.92507935]
[128.32461548 307.77770996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 202]
[24 201]
[25 200]
[26 199]
[36 198]
[37 197]
[38 196]
[39 195]
[40 192]
[42 190]
[43 189]
[44 188]
[45 187]
[46 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
