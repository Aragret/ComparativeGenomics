%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[67.15755463 645.39465332]
[52.77432632 649.67285156]
[38.13020325 652.94860840]
[23.29497910 655.20617676]
[8.33934689 656.43493652]
[-6.66542101 656.62890625]
[-21.64781761 655.78717041]
[-36.53644943 653.91387939]
[-51.26035690 651.01782227]
[-65.74938202 647.11279297]
[-79.93446350 642.21752930]
[-93.74802399 636.35522461]
[-107.12421417 629.55389404]
[-119.99930573 621.84594727]
[-132.31193542 613.26806641]
[-144.00341797 603.86114502]
[-155.01805115 593.67004395]
[-165.30334473 582.74334717]
[-174.81027222 571.13305664]
[-183.49354553 558.89453125]
[-191.31176758 546.08605957]
[-198.22769165 532.76873779]
[-204.20834351 519.00604248]
[-209.22525024 504.86352539]
[-213.25448608 490.40853882]
[-216.27685547 475.71005249]
[-218.27795410 460.83804321]
[-219.24822998 445.86343384]
[-219.18309021 430.85754395]
[-218.08280945 415.89190674]
[-215.95266724 401.03787231]
[-212.80279541 386.36614990]
[-208.64819336 371.94671631]
[-203.50868225 357.84826660]
[-197.40875244 344.13800049]
[-190.37745667 330.88125610]
[-182.44830322 318.14117432]
[-173.65910339 305.97851562]
[-164.05172729 294.45120239]
[-153.67195129 283.61419678]
[-142.56924438 273.51910400]
[-130.79650879 264.21408081]
[-118.40987396 255.74343872]
[-105.46834564 248.14755249]
[-92.03359985 241.46261597]
[-78.16966248 235.72050476]
[-63.94260788 230.94854736]
[-49.42022324 227.16952515]
[-34.67172623 224.40141296]
[-19.76739120 222.65742493]
[-4.77824974 221.94586182]
[10.22426796 222.27011108]
[25.16866684 223.62864685]
[39.98373032 226.01496887]
[54.59885788 229.41772461]
[58.99985504 215.07786560]
[63.40085602 200.73802185]
[67.80184937 186.39817810]
[72.20285034 172.05833435]
[76.38986206 157.65454102]
[80.36196136 143.19001770]
[84.33405304 128.72549438]
[71.96410370 116.86904144]
[67.28262329 100.38648224]
[71.57344818 83.79792786]
[83.65987396 71.65258026]
[100.22736359 67.28112793]
[103.76702881 52.70475388]
[107.30670166 38.12837982]
[110.84637451 23.55200386]
[114.38604736 8.97562790]
[117.92572021 -5.60074711]
[121.46539307 -20.17712212]
[117.20314789 -35.41339111]
[127.72528839 -45.95538712]
[131.26496887 -60.53176498]
[117.02236176 -65.26544952]
[103.21931458 -71.15912628]
[89.95011139 -78.17252350]
[77.30538940 -86.25773621]
[65.37154388 -95.35953522]
[54.23007965 -105.41574097]
[43.95711136 -116.35766602]
[34.62281418 -128.11054993]
[26.29095268 -140.59413147]
[19.01844215 -153.72311401]
[12.85496330 -167.40780640]
[7.84261799 -181.55474854]
[4.01564646 -196.06729126]
[1.40019143 -210.84629822]
[0.01411908 -225.79080200]
[-0.13310194 -240.79873657]
[0.95953405 -255.76756287]
[3.28456306 -270.59503174]
[6.82610273 -285.17984009]
[11.55996037 -299.42239380]
[17.45379829 -313.22537231]
[24.46735382 -326.49447632]
[32.55271912 -339.13909912]
[41.65465927 -351.07284546]
[51.71100235 -362.21420288]
[62.65304565 -372.48703003]
[74.40605164 -381.82119751]
[86.88972473 -390.15289307]
[100.01879120 -397.42526245]
[113.70356750 -403.58856201]
[127.85056305 -408.60073853]
[142.36314392 -412.42755127]
[157.14218140 -415.04281616]
[172.08671570 -416.42871094]
[187.09463501 -416.57577515]
[202.06344604 -415.48294067]
[216.89088440 -413.15774536]
[231.47566223 -409.61602783]
[245.71815491 -404.88198853]
[259.52105713 -398.98800659]
[272.79010010 -391.97427368]
[285.43463135 -383.88876343]
[297.36825562 -374.78668213]
[308.50949097 -364.73022461]
[318.78219604 -353.78805542]
[328.11621094 -342.03494263]
[336.44778442 -329.55114746]
[343.71997070 -316.42199707]
[349.88311768 -302.73715210]
[354.89514160 -288.59008789]
[358.72174072 -274.07745361]
[361.33685303 -259.29840088]
[362.72256470 -244.35386658]
[362.86944580 -229.34593201]
[361.77645874 -214.37713623]
[359.45104980 -199.54971313]
[355.90917969 -184.96498108]
[351.17498779 -170.72254944]
[345.28082275 -156.91970825]
[338.26693726 -143.65075684]
[330.18127441 -131.00633240]
[321.07904053 -119.07280731]
[311.02243042 -107.93170166]
[300.08013916 -97.65912628]
[288.32693481 -88.32524872]
[275.84304810 -79.99383545]
[262.71380615 -72.72179413]
[249.02888489 -66.55879974]
[234.88177490 -61.54696274]
[220.36909485 -57.72050858]
[205.58999634 -55.10558319]
[190.64544678 -53.72004700]
[175.63751221 -53.57336044]
[160.66871643 -54.66653061]
[145.84133911 -56.99209213]
[142.30166626 -42.41571426]
[146.81709290 -28.22204971]
[136.04176331 -16.63745117]
[132.50209045 -2.06107497]
[128.96241760 12.51530075]
[125.42275238 27.09167671]
[121.88307953 41.66805267]
[118.34340668 56.24442673]
[114.80373383 70.82080078]
[124.72095490 78.56520081]
[130.98220825 89.47958374]
[132.66151428 101.94982147]
[129.51052856 114.13170624]
[121.99523926 124.22365570]
[111.22709656 130.73318481]
[98.79857635 132.69760132]
[94.82648468 147.16212463]
[90.85438538 161.62664795]
[92.15371704 168.10917664]
[90.26736450 173.47003174]
[86.54269409 176.45932007]
[82.14170074 190.79917908]
[77.74069977 205.13902283]
[73.33970642 219.47886658]
[68.93870544 233.81871033]
[82.94644928 239.20051575]
[96.54951477 245.53591919]
[109.68308258 252.79470825]
[122.28456116 260.94232178]
[134.29389954 269.93988037]
[145.65386963 279.74456787]
[156.31031799 290.30963135]
[166.21249390 301.58474731]
[175.31317139 313.51614380]
[183.56901550 326.04696655]
[190.94065857 339.11752319]
[197.39299011 352.66552734]
[202.89524841 366.62637329]
[207.42120361 380.93359375]
[210.94931030 395.51898193]
[213.46273804 410.31298828]
[214.94952393 425.24517822]
[215.40257263 440.24435425]
[214.81971741 455.23907471]
[213.20375061 470.15783691]
[210.56237793 484.92953491]
[206.90817261 499.48382568]
[202.25854492 513.75134277]
[196.63565063 527.66406250]
[190.06631470 541.15570068]
[182.58181763 554.16198730]
[174.21783447 566.62091064]
[165.01422119 578.47308350]
[155.01483154 589.66204834]
[144.26733398 600.13446045]
[132.82293701 609.84045410]
[120.73616791 618.73376465]
[108.06464386 626.77197266]
[94.86874390 633.91687012]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 176]
[56 175]
[57 174]
[58 173]
[59 172]
[60 169]
[61 168]
[62 167]
[67 160]
[68 159]
[69 158]
[70 157]
[71 156]
[72 155]
[73 154]
[75 152]
[76 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
