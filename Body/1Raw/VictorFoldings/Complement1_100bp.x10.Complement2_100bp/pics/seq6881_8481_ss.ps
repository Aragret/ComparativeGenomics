%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxUUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGC\
) } def
/len { sequence length } bind def

/coor [
[24.00544739 384.80325317]
[24.14099503 399.82357788]
[22.35461998 414.73788452]
[18.67565727 429.30133057]
[13.16451645 443.27471924]
[5.91169596 456.42861938]
[-2.96370578 468.54699707]
[-13.31594658 479.43090820]
[-24.97503281 488.90161133]
[-37.74951172 496.80355835]
[-51.42961884 503.00704956]
[-65.79071045 507.41015625]
[-80.59696198 509.94061279]
[-95.60523987 510.55685425]
[-110.56910706 509.24877930]
[-125.24283600 506.03784180]
[-139.38546753 500.97677612]
[-152.76477051 494.14871216]
[-165.16104126 485.66574097]
[-176.37071228 475.66717529]
[-186.20974731 464.31719971]
[-194.51654053 451.80218506]
[-201.15469360 438.32763672]
[-206.01522827 424.11483765]
[-209.01829529 409.39718628]
[-210.11460876 394.41632080]
[-209.28616333 379.41824341]
[-206.54653931 364.64926147]
[-201.94075012 350.35186768]
[-195.54441833 336.76089478]
[-187.46257019 324.09945679]
[-177.82791138 312.57546997]
[-166.79867554 302.37820435]
[-154.55596924 293.67507935]
[-141.30081177 286.60903931]
[-127.25086975 281.29608154]
[-112.63685608 277.82345581]
[-97.69875336 276.24819946]
[-82.68185425 276.59619141]
[-67.83275604 278.86166382]
[-53.39528275 283.00747681]
[-39.60651398 288.96551514]
[-31.94591713 276.06918335]
[-32.09820175 261.17535400]
[-18.39818001 253.26208496]
[-10.73758221 240.36576843]
[-3.07698488 227.46943665]
[4.58361244 214.57310486]
[12.24421024 201.67678833]
[19.90480804 188.78045654]
[27.56540489 175.88412476]
[35.22600174 162.98779297]
[42.88660049 150.09147644]
[29.94238663 157.67088318]
[15.19908810 160.43405151]
[0.38873062 158.05638123]
[-12.74877930 150.81719971]
[-22.67005920 139.56694031]
[-28.20956993 125.62728882]
[-28.71653175 110.63586426]
[-24.13138962 96.35382843]
[-14.99279976 84.45903015]
[-2.37435603 76.34886169]
[12.24153996 72.97608948]
[27.13782692 74.73694611]
[40.56450653 81.42457581]
[50.94422150 92.25331116]
[57.05757523 105.95100403]
[58.18637848 120.90847015]
[54.19734955 135.36993408]
[64.68485260 124.64555359]
[67.11397552 117.66550446]
[75.40923309 113.84104156]
[86.05523682 103.27399445]
[89.90921021 89.83380890]
[103.37771606 86.08000183]
[114.02371979 75.51294708]
[124.66973114 64.94589996]
[129.08818054 47.06969452]
[146.21780396 43.25618362]
[156.70530701 32.53180313]
[167.19281006 21.80742455]
[171.30958557 6.53120804]
[185.73991394 2.84139800]
[196.22741699 -7.88298178]
[206.55407715 -18.76231575]
[216.71763611 -29.79419327]
[226.88117981 -40.82606888]
[216.61582947 -51.77253342]
[207.17691040 -63.43912506]
[198.61479187 -75.76358795]
[190.97514343 -88.68017578]
[184.29872131 -102.11995697]
[178.62117004 -116.01124573]
[173.97276306 -130.27990723]
[170.37831116 -144.84982300]
[167.85697937 -159.64323425]
[166.42224121 -174.58123779]
[166.08174133 -189.58412170]
[166.83728027 -204.57183838]
[168.68486023 -219.46441650]
[171.61459351 -234.18240356]
[175.61087036 -248.64726257]
[180.65234375 -262.78182983]
[186.71214294 -276.51068115]
[193.75791931 -289.76055908]
[201.75209045 -302.46078491]
[210.65199280 -314.54357910]
[220.41014099 -325.94451904]
[230.97447205 -336.60269165]
[242.28863525 -346.46133423]
[254.29223633 -355.46774292]
[266.92126465 -363.57394409]
[280.10830688 -370.73663330]
[293.78302002 -376.91763306]
[307.87243652 -382.08395386]
[322.30136108 -386.20800781]
[336.99285889 -389.26782227]
[351.86849976 -391.24707031]
[366.84896851 -392.13516235]
[381.85427856 -391.92736816]
[396.80438232 -390.62481689]
[411.61950684 -388.23443604]
[426.22064209 -384.76901245]
[440.52987671 -380.24700928]
[454.47082520 -374.69253540]
[467.96914673 -368.13525391]
[480.95281982 -360.61016846]
[493.35253906 -352.15740967]
[505.10214233 -342.82205200]
[516.13897705 -332.65393066]
[526.40417480 -321.70730591]
[535.84289551 -310.04055786]
[544.40478516 -297.71594238]
[552.04425049 -284.79922485]
[558.72045898 -271.35934448]
[564.39776611 -257.46795654]
[569.04595947 -243.19921875]
[572.64013672 -228.62925720]
[575.16125488 -213.83578491]
[576.59570312 -198.89776611]
[576.93597412 -183.89488220]
[576.18017578 -168.90718079]
[574.33239746 -154.01463318]
[571.40240479 -139.29669189]
[567.40588379 -124.83189392]
[562.36419678 -110.69741821]
[556.30413818 -96.96866608]
[549.25817871 -83.71890259]
[541.26379395 -71.01880646]
[532.36370850 -58.93614578]
[522.60534668 -47.53538895]
[512.04083252 -36.87736130]
[500.72653198 -27.01893425]
[488.72277832 -18.01270103]
[476.09362793 -9.90671635]
[462.90646362 -2.74423075]
[449.23162842 3.43654132]
[435.14215088 8.60262203]
[420.71313477 12.72644901]
[406.02157593 15.78601837]
[391.14590454 17.76500511]
[376.16543579 18.65285301]
[361.16012573 18.44482231]
[346.21005249 17.14202499]
[331.39495850 14.75141048]
[316.79385376 11.28573418]
[302.48471069 6.76348782]
[288.54385376 1.20879984]
[275.04562378 -5.34869337]
[262.06210327 -12.87400436]
[249.66252136 -21.32698059]
[237.91305542 -30.66252327]
[227.74951172 -19.63064575]
[217.58596802 -8.59876919]
[216.88291931 -3.87491703]
[213.20492554 0.45744264]
[206.95179749 2.60451937]
[196.46429443 13.32889938]
[193.09765625 27.83803558]
[177.91719055 32.29492569]
[167.42968750 43.01930618]
[156.94218445 53.74368286]
[156.76367188 65.83892059]
[148.11413574 74.85940552]
[135.23678589 75.59191132]
[124.59076691 86.15895844]
[113.94476318 96.72600555]
[110.09078979 110.16619110]
[96.62228394 113.91999817]
[85.97628021 124.48705292]
[75.40923309 135.13305664]
[64.92173004 145.85743713]
[55.78292465 157.75207520]
[48.12232971 170.64839172]
[40.46173096 183.54472351]
[32.80113602 196.44105530]
[25.14053726 209.33737183]
[17.47993851 222.23370361]
[9.81934166 235.13003540]
[2.15874457 248.02635193]
[-5.50185299 260.92269897]
[-5.89750671 276.73895264]
[-19.04959106 283.72979736]
[-26.71018791 296.62612915]
[-14.88208103 305.88485718]
[-4.33510303 316.58016968]
[4.75755596 328.53640747]
[12.24658585 341.55728149]
[18.00900841 355.42892456]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 205]
[43 204]
[45 202]
[46 201]
[47 200]
[48 199]
[49 198]
[50 197]
[51 196]
[52 195]
[53 194]
[70 193]
[71 192]
[73 191]
[74 190]
[76 188]
[77 187]
[78 186]
[80 183]
[81 182]
[82 181]
[84 179]
[85 178]
[86 175]
[87 174]
[88 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
