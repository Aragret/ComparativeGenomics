%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[117.53073120 464.84307861]
[130.53567505 457.08743286]
[127.43156433 442.41210938]
[117.22795868 431.56152344]
[121.94195557 416.45889282]
[118.83784485 401.78359985]
[115.73373413 387.10830688]
[112.62962341 372.43298340]
[104.52126312 385.05261230]
[90.23603058 389.62774658]
[76.30493927 384.06677246]
[69.09709167 370.91201782]
[71.90782928 356.17773438]
[83.45211792 346.60018921]
[98.45205688 346.55810547]
[110.05083466 356.07235718]
[108.49031067 341.15374756]
[96.79399872 332.00323486]
[94.99888611 316.89587402]
[104.67608643 304.68975830]
[103.11556244 289.77114868]
[100.62147522 287.27877808]
[99.21066284 283.45455933]
[99.49597168 278.82077026]
[101.83378601 274.15368652]
[100.94097137 259.18029785]
[100.04815674 244.20689392]
[99.15534210 229.23347473]
[98.26252747 214.26007080]
[97.36971283 199.28666687]
[96.47689056 184.31326294]
[87.64056396 176.05216980]
[86.77420044 163.58488464]
[94.88635254 153.55712891]
[94.21656799 138.57208252]
[93.54678345 123.58705139]
[92.87699890 108.60201263]
[92.09567261 93.62237549]
[91.09141541 78.65602875]
[89.97576141 63.69757843]
[88.41524506 48.77897263]
[86.41122437 33.91344452]
[84.40721130 19.04791641]
[82.40319824 4.18238735]
[80.39918518 -10.68314075]
[77.51391602 -25.40303230]
[73.75761414 -39.92509079]
[70.00131226 -54.44715118]
[66.24501038 -68.96920776]
[62.48871231 -83.49127197]
[51.54210281 -94.91415405]
[55.84570694 -109.17347717]
[52.08940887 -123.69553375]
[47.73521805 -128.67073059]
[46.70228577 -134.25912476]
[48.44433212 -138.70594788]
[45.12207413 -153.33341980]
[41.79981613 -167.96087646]
[38.47755432 -182.58833313]
[23.62450600 -180.43727112]
[8.64750862 -179.47309875]
[-6.35874748 -179.70191956]
[-21.29938698 -181.12225342]
[-36.07994843 -183.72515869]
[-50.60698318 -187.49415588]
[-64.78865051 -192.40541077]
[-78.53527832 -198.42790222]
[-91.75995636 -205.52351379]
[-104.37908173 -213.64741516]
[-116.31286621 -222.74824524]
[-127.48585510 -232.76843262]
[-137.82742310 -243.64466858]
[-147.27215576 -255.30815125]
[-155.76037598 -267.68515015]
[-163.23840332 -280.69741821]
[-169.65895081 -294.26269531]
[-174.98143005 -308.29522705]
[-179.17218018 -322.70623779]
[-182.20472717 -337.40466309]
[-184.05989075 -352.29757690]
[-184.72593689 -367.29077148]
[-184.19865417 -382.28952026]
[-182.48138428 -397.19894409]
[-179.58496094 -411.92480469]
[-175.52774048 -426.37399292]
[-170.33532715 -440.45513916]
[-164.04057312 -454.07925415]
[-156.68327332 -467.16015625]
[-148.30995178 -479.61517334]
[-138.97354126 -491.36557007]
[-128.73306274 -502.33700562]
[-117.65326691 -512.46014404]
[-105.80420685 -521.67102051]
[-93.26078796 -529.91131592]
[-80.10233307 -537.12902832]
[-66.41201782 -543.27844238]
[-52.27640533 -548.32073975]
[-37.78486633 -552.22399902]
[-23.02902222 -554.96350098]
[-8.10216522 -556.52203369]
[6.90133190 -556.88970947]
[21.88661003 -556.06414795]
[36.75892639 -554.05065918]
[51.42425156 -550.86187744]
[65.78986359 -546.51800537]
[79.76494598 -541.04650879]
[93.26113129 -534.48199463]
[106.19309998 -526.86590576]
[118.47908020 -518.24645996]
[130.04141235 -508.67816162]
[140.80697632 -498.22146606]
[150.70771790 -486.94247437]
[159.68103027 -474.91253662]
[167.67019653 -462.20767212]
[174.62469482 -448.90823364]
[180.50056458 -435.09829712]
[185.26065063 -420.86517334]
[188.87484741 -406.29885864]
[191.32032776 -391.49142456]
[192.58160400 -376.53652954]
[192.65072632 -361.52868652]
[191.52723694 -346.56280518]
[189.21826172 -331.73348999]
[185.73837280 -317.13449097]
[181.10958862 -302.85812378]
[175.36117554 -288.99465942]
[168.52946472 -275.63174438]
[160.65765381 -262.85382080]
[151.79553223 -250.74174500]
[141.99908447 -239.37203979]
[131.33029175 -228.81661987]
[119.85659027 -219.14221191]
[107.65052032 -210.40998840]
[94.78925323 -202.67514038]
[81.35410309 -195.98657227]
[67.43000793 -190.38659668]
[53.10501480 -185.91059875]
[56.42727661 -171.28312683]
[59.74953461 -156.65567017]
[63.07179260 -142.02821350]
[66.61146545 -127.45183563]
[70.36776733 -112.92977905]
[81.04570007 -102.54560852]
[77.01077271 -87.24756622]
[80.76707458 -72.72550964]
[84.52336884 -58.20345306]
[88.27967072 -43.68139267]
[92.03597260 -29.15933228]
[98.76890564 -42.56334686]
[112.04130554 -49.55215454]
[126.90289307 -47.51910400]
[137.81065369 -37.22247314]
[140.69628906 -22.50265121]
[134.48348999 -8.84976578]
[121.48950958 -1.35600770]
[106.56076813 -2.81636214]
[95.26471710 -12.68715477]
[97.26873016 2.17837381]
[99.27274323 17.04390144]
[101.27675629 31.90942955]
[103.28076935 46.77495956]
[105.42565918 48.57983398]
[106.98485565 51.34308243]
[107.58973694 54.84587097]
[106.95764923 58.74009323]
[104.93421936 62.58192825]
[106.04986572 77.54038239]
[109.68215179 83.97686005]
[107.06907654 92.72956085]
[110.65433502 99.94887543]
[107.86203766 107.93222809]
[108.53182220 122.91726685]
[109.20160675 137.90229797]
[109.87139130 152.88734436]
[120.13887024 168.17329407]
[111.45030212 183.42045593]
[112.34311676 198.39385986]
[113.23593140 213.36726379]
[114.12874603 228.34066772]
[115.02156067 243.31407166]
[115.91437531 258.28747559]
[116.80719757 273.26089478]
[118.03417206 288.21060181]
[119.59469604 303.12921143]
[131.58836365 313.06851196]
[132.95843506 328.22033691]
[123.40892029 339.59320068]
[124.96943665 354.51181030]
[127.30492401 369.32888794]
[130.40904236 384.00418091]
[133.51315308 398.67950439]
[136.61726379 413.35479736]
[147.04289246 425.25506592]
[142.10687256 439.30801392]
[145.21096802 453.98330688]
[160.24249268 455.80871582]
[173.86576843 462.41818237]
[184.60304260 473.09478760]
[191.28962708 486.68038940]
[193.20019531 501.70132446]
[190.12751770 516.52819824]
[182.40489197 529.55279541]
[170.87001038 539.36224365]
[156.77407837 544.89251709]
[141.64613342 545.54364014]
[127.12714386 541.24511719]
[114.79200745 532.46313477]
[105.97875214 520.15032959]
[101.64337158 505.64230347]
[102.25614929 490.51275635]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 195]
[3 194]
[5 192]
[6 191]
[7 190]
[8 189]
[16 188]
[17 187]
[20 184]
[21 183]
[25 182]
[26 181]
[27 180]
[28 179]
[29 178]
[30 177]
[31 176]
[34 174]
[35 173]
[36 172]
[37 171]
[38 169]
[39 167]
[40 166]
[41 161]
[42 160]
[43 159]
[44 158]
[45 157]
[46 148]
[47 147]
[48 146]
[49 145]
[50 144]
[52 142]
[53 141]
[56 140]
[57 139]
[58 138]
[59 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
