%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[103.60536194 733.64221191]
[88.96800995 730.34356689]
[74.55176544 726.18365479]
[60.40727997 721.17700195]
[46.58423615 715.34124756]
[33.13118362 708.69683838]
[20.09538078 701.26708984]
[7.52261448 693.07818604]
[-4.54295206 684.15881348]
[-16.05893707 674.54034424]
[-26.98489189 664.25653076]
[-37.28243637 653.34350586]
[-46.91540146 641.83966064]
[-55.84995270 629.78533936]
[-64.05470276 617.22290039]
[-71.50083160 604.19647217]
[-78.16218567 590.75177002]
[-84.01537323 576.93609619]
[-89.03982544 562.79791260]
[-93.21789551 548.38690186]
[-96.53491211 533.75372314]
[-98.97921753 518.94976807]
[-100.54222870 504.02694702]
[-101.21846008 489.03775024]
[-101.00553131 474.03482056]
[-99.90419006 459.07086182]
[-97.91831207 444.19845581]
[-95.05486298 429.46978760]
[-91.32389832 414.93661499]
[-86.73854065 400.64999390]
[-81.31488037 386.66009521]
[-75.07197571 373.01608276]
[-68.03175354 359.76586914]
[-60.21894073 346.95599365]
[-51.66098022 334.63146973]
[-42.38793945 322.83554077]
[-32.43238068 311.60968018]
[-21.82928085 300.99331665]
[-10.61588097 291.02374268]
[1.16843176 281.73596191]
[13.48226357 273.16259766]
[26.28236198 265.33377075]
[39.52376556 258.27697754]
[53.15996170 252.01702881]
[67.14305115 246.57588196]
[81.42392731 241.97265625]
[95.95241547 238.22354126]
[110.67749023 235.34167480]
[108.67347717 220.47615051]
[106.66946411 205.61062622]
[97.30115509 194.03115845]
[103.12537384 179.32098389]
[93.75706482 167.74151611]
[99.58128357 153.03135681]
[97.57727051 138.16583252]
[95.57325745 123.30030060]
[93.56924438 108.43476868]
[91.01341248 93.65412140]
[80.58777618 81.75382996]
[85.52380371 67.70089722]
[82.41969299 53.02559662]
[79.31558228 38.35029602]
[68.88995361 26.45001030]
[73.82597351 12.39707756]
[70.33573914 8.51566887]
[68.83356476 4.12286091]
[69.18132782 0.06156706]
[70.92639923 -3.00226808]
[68.48066711 -17.80153847]
[66.03494263 -32.60081100]
[63.58921432 -47.40008163]
[48.59948730 -46.53971100]
[33.60323334 -47.27754974]
[18.77036667 -49.60523987]
[4.26895475 -53.49640656]
[-9.73668861 -58.90695572]
[-23.08786774 -65.77558899]
[-35.63330460 -74.02447510]
[-47.23085022 -83.56014252]
[-57.74909592 -94.27455139]
[-67.06886292 -106.04630280]
[-75.08454895 -118.74200439]
[-81.70532990 -132.21781921]
[-86.85618591 -146.32102966]
[-90.47875214 -160.89186096]
[-92.53199005 -175.76519775]
[-92.99263763 -190.77253723]
[-91.85546112 -205.74380493]
[-89.13335419 -220.50938416]
[-84.85715485 -234.90196228]
[-79.07532501 -248.75845337]
[-71.85337067 -261.92187500]
[-63.27312088 -274.24304199]
[-53.43180466 -285.58236694]
[-42.44092178 -295.81140137]
[-30.42501450 -304.81417847]
[-17.52022743 -312.48870850]
[-3.87278581 -318.74804688]
[10.36267757 -323.52127075]
[25.02486229 -326.75430298]
[39.94763565 -328.41049194]
[54.96191025 -328.47106934]
[69.89756012 -326.93536377]
[84.58535767 -323.82077026]
[98.85887909 -319.16259766]
[112.55638885 -313.01358032]
[125.52268982 -305.44345093]
[137.61085510 -296.53793335]
[148.68392944 -286.39794922]
[158.61643982 -275.13839722]
[167.29583740 -262.88687134]
[174.62379456 -249.78216553]
[180.51725769 -235.97277832]
[184.90946960 -221.61517334]
[187.75064087 -206.87205505]
[189.00860596 -191.91044617]
[188.66909790 -176.89988708]
[186.73594666 -162.01046753]
[183.23107910 -147.41087341]
[178.19421387 -133.26654053]
[171.68240356 -119.73774719]
[163.76942444 -106.97776794]
[154.54496765 -95.13118744]
[144.11352539 -84.33224487]
[132.59332275 -74.70329285]
[120.11486053 -66.35343170]
[106.81954193 -59.37727737]
[92.85802460 -53.85387421]
[78.38848877 -49.84580612]
[80.83421326 -35.04653549]
[83.27993774 -20.24726677]
[85.72566986 -5.44799566]
[88.50128174 9.29296780]
[98.70487976 20.14357567]
[93.99088287 35.24618530]
[97.09499359 49.92148590]
[100.19910431 64.59678650]
[110.40270996 75.44739532]
[105.68871307 90.55001068]
[115.93389130 79.59389496]
[130.89871216 80.62054443]
[139.55168152 92.87314606]
[135.51412964 107.31954193]
[121.76241302 113.31037903]
[108.43476868 106.43075562]
[110.43878174 121.29628754]
[112.44279480 136.16181946]
[114.44681549 151.02734375]
[123.95846558 163.67008972]
[117.99090576 177.31697083]
[127.50255585 189.95971680]
[121.53499603 203.60659790]
[123.53900909 218.47213745]
[125.54302216 233.33766174]
[140.50556946 232.21734619]
[155.50820923 231.98539734]
[170.49824524 232.64262390]
[185.42300415 234.18672180]
[200.23008728 236.61225891]
[214.86747742 239.91072083]
[229.28375244 244.07051086]
[243.42828369 249.07704163]
[257.25137329 254.91270447]
[270.70449829 261.55700684]
[283.74035645 268.98660278]
[296.31320190 277.17544556]
[308.37884521 286.09469604]
[319.89492798 295.71307373]
[330.82095337 305.99676514]
[341.11859131 316.90966797]
[350.75167847 328.41345215]
[359.68630981 340.46771240]
[367.89117432 353.03009033]
[375.33743286 366.05645752]
[381.99890137 379.50106812]
[387.85220337 393.31671143]
[392.87677002 407.45483398]
[397.05496216 421.86578369]
[400.37213135 436.49896240]
[402.81655884 451.30291748]
[404.37969971 466.22570801]
[405.05606079 481.21490479]
[404.84326172 496.21780396]
[403.74206543 511.18179321]
[401.75628662 526.05426025]
[398.89297485 540.78289795]
[395.16213989 555.31610107]
[390.57690430 569.60278320]
[385.15338135 583.59271240]
[378.91058350 597.23675537]
[371.87048340 610.48706055]
[364.05776978 623.29699707]
[355.49993896 635.62164307]
[346.22698975 647.41760254]
[336.27154541 658.64355469]
[325.66851807 669.26000977]
[314.45520020 679.22967529]
[302.67098999 688.51757812]
[290.35723877 697.09106445]
[277.55718994 704.91998291]
[264.31585693 711.97686768]
[250.67971802 718.23699951]
[236.69667053 723.67822266]
[222.41583252 728.28155518]
[207.88737488 732.03082275]
[193.16232300 734.91284180]
[178.29240417 736.91741943]
[163.32984924 738.03759766]
[148.32720947 738.26940918]
[133.33718872 737.61206055]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 154]
[49 153]
[50 152]
[52 150]
[54 148]
[55 147]
[56 146]
[57 145]
[58 139]
[60 137]
[61 136]
[62 135]
[64 133]
[68 132]
[69 131]
[70 130]
[71 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
