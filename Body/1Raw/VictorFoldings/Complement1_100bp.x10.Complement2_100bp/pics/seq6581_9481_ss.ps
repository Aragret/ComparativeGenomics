%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[72.87352753 463.01831055]
[66.99668884 476.84286499]
[59.36561203 489.78201294]
[50.11087418 501.61437988]
[39.39083862 512.13751221]
[27.38893509 521.17126465]
[14.31053448 528.56115723]
[0.37942466 534.18072510]
[-14.16601372 537.93371582]
[-29.07689095 539.75604248]
[-44.09806061 539.61645508]
[-58.97248840 537.51727295]
[-73.44566345 533.49456787]
[-87.26991272 527.61706543]
[-100.20870209 519.98535156]
[-112.04062653 510.73007202]
[-122.56322479 500.00955200]
[-131.59645081 488.00720215]
[-138.98571777 474.92846680]
[-144.60458374 460.99707031]
[-148.35691833 446.45144653]
[-150.17851257 431.54049683]
[-150.03819275 416.51934814]
[-147.93835449 401.64498901]
[-143.91493225 387.17202759]
[-138.03678894 373.34805298]
[-130.40447998 360.40963745]
[-121.14861298 348.57812500]
[-110.42757416 338.05606079]
[-98.42480469 329.02340698]
[-85.34570312 321.63476562]
[-71.41406250 316.01654053]
[-56.86826324 312.26489258]
[-41.95721436 310.44403076]
[-26.93605804 310.58505249]
[-12.06182766 312.68560791]
[2.41095972 316.70971680]
[8.27992058 302.90554810]
[14.14888096 289.10134888]
[12.00813484 274.36138916]
[24.52811623 264.68872070]
[21.46395302 247.40931702]
[36.26819229 236.45869446]
[41.93098068 222.56867981]
[47.59376526 208.67864990]
[53.25655365 194.78862000]
[47.26116943 181.20219421]
[52.80617142 167.03506470]
[67.09751129 160.83866882]
[54.41572189 152.01913452]
[44.00757599 140.60499573]
[36.39221954 127.16556549]
[31.94949150 112.37117004]
[30.90098190 96.95972443]
[33.29898834 81.69992828]
[39.02390671 67.35289001]
[47.79018402 54.63423157]
[59.16058350 44.17832184]
[72.56797028 36.50668335]
[87.34360504 32.00196075]
[102.75051880 30.88884163]
[118.02024078 33.22284317]
[123.47560120 19.25004768]
[128.93095398 5.27724886]
[134.38632202 -8.69554901]
[139.84167480 -22.66834641]
[143.70597839 -37.16204071]
[145.93109131 -51.99608231]
[148.15621948 -66.83012390]
[150.38133240 -81.66416931]
[152.60644531 -96.49821472]
[154.83155823 -111.33226013]
[157.05668640 -126.16630554]
[154.99623108 -132.44850159]
[156.23217773 -137.99552917]
[159.57524109 -141.40625000]
[162.24102783 -156.16746521]
[164.90682983 -170.92868042]
[167.57261658 -185.68989563]
[157.33258057 -174.72900391]
[143.38243103 -169.21595764]
[128.41575623 -170.21525574]
[115.32238007 -177.53395081]
[106.63040924 -189.75891113]
[104.01815033 -204.52969360]
[107.98997498 -218.99429321]
[117.77899170 -230.35981750]
[131.49510193 -236.43176270]
[146.48991394 -236.03773499]
[159.86819458 -229.25381470]
[169.04679871 -217.38986206]
[172.25346375 -202.73535156]
[169.83195496 -218.37014771]
[181.53227234 -227.58709717]
[186.77897644 -241.63955688]
[192.02569580 -255.69203186]
[197.27241516 -269.74450684]
[184.13291931 -277.03912354]
[172.22746277 -286.21069336]
[161.82199097 -297.05429077]
[153.14897156 -309.32769775]
[146.40219116 -322.75671387]
[141.73233032 -337.04132080]
[139.24375916 -351.86242676]
[138.99205017 -366.88885498]
[140.98281860 -381.78497314]
[145.17161560 -396.21798706]
[151.46484375 -409.86544800]
[159.72190857 -422.42245483]
[169.75834656 -433.60848999]
[181.34996033 -443.17364502]
[194.23776245 -450.90426636]
[208.13383484 -456.62759399]
[222.72775269 -460.21582031]
[237.69346619 -461.58874512]
[252.69665527 -460.71569824]
[267.40213013 -457.61621094]
[281.48135376 -452.35949707]
[294.61981201 -445.06301880]
[306.52395630 -435.88973999]
[316.92788696 -425.04467773]
[325.59915161 -412.77001953]
[332.34402466 -399.34005737]
[337.01184082 -385.05477905]
[339.49832153 -370.23333740]
[339.74789429 -355.20684814]
[337.75497437 -340.31100464]
[333.56414795 -325.87860107]
[327.26898193 -312.23202515]
[319.01010132 -299.67620850]
[308.97207642 -288.49157715]
[297.37911987 -278.92807007]
[284.49020386 -271.19931030]
[270.59332275 -265.47793579]
[255.99888611 -261.89181519]
[241.03297424 -260.52102661]
[226.02992249 -261.39620972]
[211.32489014 -264.49780273]
[206.07817078 -250.44531250]
[200.83145142 -236.39285278]
[195.58473206 -222.34037781]
[198.38151550 -207.71070862]
[186.30593872 -197.48863220]
[182.33383179 -183.02410889]
[179.66804504 -168.26289368]
[177.00224304 -153.50167847]
[174.33645630 -138.74046326]
[171.89073181 -123.94118500]
[169.66560364 -109.10713959]
[167.44049072 -94.27309418]
[165.21537781 -79.43905640]
[162.99024963 -64.60501099]
[160.76513672 -49.77096558]
[158.54002380 -34.93692398]
[167.81442261 -46.72613144]
[180.68402100 -54.43156052]
[195.45558167 -57.03942871]
[210.18565369 -54.20662689]
[222.93626404 -46.30585861]
[232.02981567 -34.37660599]
[236.26992798 -19.98836327]
[235.09872437 -5.03415775]
[228.67030334 8.51853180]
[217.83042908 18.88661385]
[204.00527954 24.70599174]
[189.01377869 25.21102333]
[174.82833862 20.33526421]
[163.31527710 10.72020435]
[155.98933411 -2.36912990]
[153.81446838 -17.21298981]
[148.35911560 -3.24019170]
[142.90376282 10.73260593]
[137.44839478 24.70540428]
[131.99304199 38.67820358]
[144.07022095 46.69208527]
[154.21209717 57.04692459]
[161.97331238 69.28800201]
[167.01303101 82.87776184]
[169.10995483 97.21942902]
[168.17199707 111.68319702]
[164.24032593 125.63391113]
[157.48762512 138.45893860]
[148.21041870 149.59509277]
[136.81610107 158.55332947]
[123.80504608 164.94026184]
[109.74861908 168.47541809]
[95.26409149 169.00354004]
[80.98754120 166.50146484]
[86.87294769 180.92366028]
[80.93221283 194.92944336]
[67.14658356 200.45140076]
[61.48379517 214.34143066]
[55.82100677 228.23146057]
[50.15822220 242.12149048]
[54.43207932 254.29100037]
[49.42957687 265.74343872]
[38.33229446 270.55767822]
[40.05325317 286.28500366]
[27.95305824 294.97030640]
[22.08409691 308.77450562]
[16.21513748 322.57867432]
[29.15465164 330.20913696]
[40.98745728 339.46331787]
[51.51107788 350.18283081]
[60.54543686 362.18432617]
[67.93594360 375.26235962]
[73.55614471 389.19320679]
[77.30986786 403.73846436]
[79.13288116 418.64926147]
[78.99398804 433.67044067]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 201]
[38 200]
[39 199]
[41 197]
[43 194]
[44 193]
[45 192]
[46 191]
[49 188]
[62 174]
[63 173]
[64 172]
[65 171]
[66 170]
[67 154]
[68 153]
[69 152]
[70 151]
[71 150]
[72 149]
[73 148]
[76 147]
[77 146]
[78 145]
[79 144]
[92 143]
[94 141]
[95 140]
[96 139]
[97 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
