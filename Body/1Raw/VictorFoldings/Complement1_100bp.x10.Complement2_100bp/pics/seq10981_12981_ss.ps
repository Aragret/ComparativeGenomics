%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAUxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[85.00155640 934.40258789]
[70.04100037 933.27239990]
[55.15612030 931.39202881]
[40.38452530 928.76611328]
[25.76352119 925.40130615]
[11.33004570 921.30615234]
[-2.87944055 916.49096680]
[-16.82904434 910.96795654]
[-30.48352432 904.75097656]
[-43.80839157 897.85583496]
[-56.76998520 890.29986572]
[-69.33556366 882.10217285]
[-81.47338104 873.28350830]
[-93.15278625 863.86614990]
[-104.34426117 853.87384033]
[-115.01955414 843.33184814]
[-125.15167999 832.26678467]
[-134.71504211 820.70660400]
[-143.68550110 808.68054199]
[-152.04039001 796.21893311]
[-159.75860596 783.35327148]
[-166.82063293 770.11608887]
[-173.20864868 756.54083252]
[-178.90652466 742.66168213]
[-183.89984131 728.51379395]
[-188.17601013 714.13293457]
[-191.72421265 699.55535889]
[-194.53549194 684.81793213]
[-196.60275269 669.95782471]
[-197.92076111 655.01263428]
[-198.48619080 640.02014160]
[-198.29762268 625.01812744]
[-197.35551453 610.04455566]
[-195.66227722 595.13726807]
[-193.22215271 580.33380127]
[-190.04133606 565.67169189]
[-186.12783813 551.18792725]
[-181.49154663 536.91906738]
[-176.14419556 522.90118408]
[-170.09925842 509.16964722]
[-163.37203979 495.75921631]
[-155.97952271 482.70370483]
[-147.94036865 470.03613281]
[-139.27488708 457.78848267]
[-130.00498962 445.99166870]
[-120.15406799 434.67553711]
[-109.74701691 423.86865234]
[-98.81012726 413.59832764]
[-87.37101746 403.89047241]
[-75.45860291 394.76962280]
[-63.10295105 386.25885010]
[-50.33529282 378.37960815]
[-37.18787003 371.15182495]
[-23.69389915 364.59378052]
[-9.88746643 358.72198486]
[4.19655371 353.55130005]
[18.52258301 349.09481812]
[33.05443192 345.36373901]
[47.75539017 342.36752319]
[62.58832550 340.11373901]
[77.51576233 338.60806274]
[92.50000000 337.85430908]
[92.50000000 322.85430908]
[92.50000000 307.85430908]
[92.50000000 292.85430908]
[78.67464447 287.21615601]
[68.03237152 276.68585205]
[62.21679688 262.84591675]
[62.14283752 247.79327393]
[67.85289764 233.82154846]
[78.50568390 223.07162476]
[92.50000000 217.20350647]
[92.50000000 202.20350647]
[92.50000000 187.20350647]
[92.50000000 172.20350647]
[92.50000000 157.20350647]
[92.50000000 142.20350647]
[92.50000000 127.20349884]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[92.50000000 72.79650116]
[92.50000000 57.79650116]
[92.50000000 42.79650116]
[92.50000000 27.79650116]
[82.61807251 21.18709755]
[77.20903015 10.73515606]
[77.51386261 -0.90962785]
[83.34121704 -10.85737228]
[93.14356995 -16.69519043]
[93.59017944 -31.68854141]
[86.26718903 -45.71296310]
[94.37999725 -58.20422363]
[94.82660675 -73.19757080]
[80.30104828 -77.23139954]
[67.16328430 -84.62480927]
[56.17712021 -94.94796753]
[47.98127365 -107.60069275]
[43.05224609 -121.84738159]
[41.67660522 -136.85974121]
[43.93432617 -151.76498413]
[49.69414520 -165.69653320]
[58.62120056 -177.84442139]
[70.19647980 -187.50238037]
[83.74701691 -194.10893250]
[98.48499298 -197.27995300]
[113.55356598 -196.83111572]
[128.07667542 -192.78848267]
[141.20996094 -185.38711548]
[152.18986511 -175.05729675]
[160.37803650 -162.39959717]
[165.29841614 -148.14991760]
[166.66496277 -133.13673401]
[164.39820862 -118.23285675]
[158.62994385 -104.30480957]
[149.69552612 -92.16233826]
[138.11439514 -82.51139069]
[124.55985260 -75.91306305]
[109.81995392 -72.75096893]
[109.37335205 -57.75761795]
[116.72827911 -44.80562210]
[108.58352661 -31.24193382]
[108.13692474 -16.24858475]
[121.46942902 -3.70426893]
[121.39750671 14.92119026]
[107.50000000 27.79650116]
[107.50000000 42.79650116]
[107.50000000 57.79650116]
[107.50000000 72.79650116]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[107.50000000 127.20349884]
[107.50000000 142.20350647]
[107.50000000 157.20350647]
[107.50000000 172.20350647]
[107.50000000 187.20350647]
[107.50000000 202.20350647]
[107.50000000 217.20350647]
[121.49431610 223.07162476]
[132.14710999 233.82154846]
[137.85716248 247.79327393]
[137.78320312 262.84591675]
[131.96763611 276.68585205]
[121.32535553 287.21615601]
[107.50000000 292.85430908]
[107.50000000 307.85430908]
[107.50000000 322.85430908]
[107.50000000 337.85430908]
[122.48423767 338.60806274]
[137.41168213 340.11373901]
[152.24461365 342.36752319]
[166.94557190 345.36373901]
[181.47741699 349.09481812]
[195.80345154 353.55130005]
[209.88746643 358.72198486]
[223.69389343 364.59378052]
[237.18786621 371.15182495]
[250.33529663 378.37960815]
[263.10296631 386.25885010]
[275.45858765 394.76962280]
[287.37103271 403.89047241]
[298.81011963 413.59832764]
[309.74700928 423.86865234]
[320.15405273 434.67553711]
[330.00497437 445.99166870]
[339.27490234 457.78848267]
[347.94036865 470.03613281]
[355.97952271 482.70370483]
[363.37203979 495.75921631]
[370.09927368 509.16964722]
[376.14419556 522.90118408]
[381.49154663 536.91906738]
[386.12783813 551.18792725]
[390.04132080 565.67169189]
[393.22216797 580.33380127]
[395.66226196 595.13726807]
[397.35552979 610.04455566]
[398.29760742 625.01812744]
[398.48620605 640.02014160]
[397.92074585 655.01263428]
[396.60275269 669.95782471]
[394.53549194 684.81793213]
[391.72421265 699.55535889]
[388.17599487 714.13293457]
[383.89984131 728.51379395]
[378.90652466 742.66168213]
[373.20864868 756.54083252]
[366.82061768 770.11608887]
[359.75860596 783.35327148]
[352.04040527 796.21893311]
[343.68551636 808.68054199]
[334.71505737 820.70660400]
[325.15167236 832.26678467]
[315.01956177 843.33184814]
[304.34426880 853.87384033]
[293.15277100 863.86614990]
[281.47338867 873.28350830]
[269.33557129 882.10217285]
[256.76998901 890.29986572]
[243.80839539 897.85583496]
[230.48352051 904.75097656]
[216.82904053 910.96795654]
[202.87944031 916.49096680]
[188.66995239 921.30615234]
[174.23648071 925.40130615]
[159.61547852 928.76611328]
[144.84387207 931.39202881]
[129.95899963 933.27239990]
[114.99844360 934.40258789]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 149]
[63 148]
[64 147]
[65 146]
[72 139]
[73 138]
[74 137]
[75 136]
[76 135]
[77 134]
[78 133]
[79 132]
[81 130]
[82 129]
[83 128]
[84 127]
[85 126]
[90 123]
[91 122]
[93 120]
[94 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
