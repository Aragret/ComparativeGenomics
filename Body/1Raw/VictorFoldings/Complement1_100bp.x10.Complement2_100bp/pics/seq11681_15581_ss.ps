%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[29.11542892 877.68536377]
[14.11256886 877.78363037]
[-0.87628132 877.12799072]
[-15.81325722 875.72009277]
[-30.66062737 873.56347656]
[-45.38088226 870.66351318]
[-59.93684387 867.02764893]
[-74.29174042 862.66503906]
[-88.40930176 857.58666992]
[-102.25387573 851.80541992]
[-115.79048920 845.33581543]
[-128.98493958 838.19421387]
[-141.80390930 830.39874268]
[-154.21499634 821.96905518]
[-166.18687439 812.92639160]
[-177.68928528 803.29357910]
[-188.69316101 793.09509277]
[-199.17073059 782.35656738]
[-209.09552002 771.10516357]
[-218.44244385 759.36926270]
[-227.18791199 747.17858887]
[-235.30981445 734.56390381]
[-242.78764343 721.55712891]
[-249.60250854 708.19097900]
[-255.73718262 694.49932861]
[-261.17617798 680.51672363]
[-265.90579224 666.27856445]
[-269.91400146 651.82067871]
[-273.19073486 637.17968750]
[-275.72772217 622.39257812]
[-277.51849365 607.49664307]
[-278.55859375 592.52954102]
[-278.84536743 577.52911377]
[-278.37808228 562.53320312]
[-277.15792847 547.57971191]
[-275.18801880 532.70642090]
[-272.47326660 517.95092773]
[-269.02053833 503.35043335]
[-264.83862305 488.94183350]
[-259.93801880 474.76159668]
[-254.33111572 460.84548950]
[-248.03210449 447.22866821]
[-241.05686951 433.94552612]
[-233.42304993 421.02963257]
[-225.14991760 408.51361084]
[-216.25837708 396.42907715]
[-206.77087402 384.80654907]
[-196.71141052 373.67541504]
[-186.10534668 363.06375122]
[-174.97952271 352.99841309]
[-163.36201477 343.50476074]
[-151.28218079 334.60684204]
[-138.77053833 326.32708740]
[-125.85868835 318.68646240]
[-112.57923889 311.70419312]
[-98.96574402 305.39797974]
[-85.05259705 299.78375244]
[-70.87493896 294.87564087]
[-56.46857834 290.68609619]
[-41.86991501 287.22567749]
[-27.11582184 284.50314331]
[-12.24357224 282.52532959]
[2.70926642 281.29727173]
[17.70492172 280.82208252]
[32.70551300 281.10092163]
[47.67314529 282.13311768]
[49.45561218 267.23941040]
[51.23807907 252.34567261]
[53.02054596 237.45196533]
[43.15047455 248.74717712]
[29.19539833 254.24769592]
[14.27291393 252.72471619]
[1.71674347 244.51846313]
[-5.66803217 231.46223450]
[-6.23163557 216.47282410]
[0.15184344 202.89891052]
[12.05631924 193.77293396]
[26.82230186 191.13366699]
[41.15103531 195.57072449]
[51.84143829 206.09284973]
[56.50525284 220.34941101]
[60.69226456 205.94563293]
[64.87928009 191.54185486]
[69.06628418 177.13806152]
[73.25329590 162.73428345]
[77.44030762 148.33050537]
[76.28883362 141.03010559]
[81.79837036 133.74430847]
[86.19936371 119.40445709]
[90.60036469 105.06460571]
[93.48563385 90.34471893]
[94.82387543 75.40453339]
[96.16210938 60.46434784]
[97.50034332 45.52416229]
[98.72731781 30.57442856]
[99.84296417 15.61597443]
[100.95861053 0.65752131]
[94.26914978 -13.67990112]
[102.93163300 -25.79644775]
[89.00711823 -31.74510765]
[77.77026367 -41.89458847]
[70.43997192 -55.14394760]
[67.81137085 -70.05599213]
[70.16959381 -85.01318359]
[77.25883484 -98.39307404]
[88.31011200 -108.74430084]
[102.12466431 -114.94406128]
[117.20398712 -116.31983948]
[131.91238403 -112.72239685]
[144.65441895 -104.54196930]
[154.04791260 -92.66590118]
[159.07392883 -78.38241577]
[159.18730164 -63.24089050]
[154.37570190 -48.88375473]
[145.16108704 -36.86836624]
[132.54298401 -28.49806595]
[117.89008331 -24.68079948]
[124.65934753 -11.41330528]
[115.91706848 1.77316999]
[114.80141449 16.73162270]
[113.68576813 31.69007683]
[116.32307434 38.59416580]
[112.44052887 46.86239624]
[111.10228729 61.80258179]
[109.76405334 76.74276733]
[108.42581940 91.68295288]
[117.16750336 79.49349213]
[129.86775208 71.51201630]
[144.64254761 68.92254639]
[159.30014038 72.10920715]
[171.66618347 80.59927368]
[179.90621948 93.13330078]
[182.79789734 107.85192871]
[179.91226196 122.57175446]
[171.67738342 135.10916138]
[159.31483459 143.60430908]
[144.65855408 146.79699707]
[129.88269043 144.21359253]
[117.17916870 136.23735046]
[108.43247223 124.05148315]
[104.94020844 109.46560669]
[100.53921509 123.80545044]
[96.13821411 138.14529419]
[91.84409332 152.51751709]
[87.65708160 166.92129517]
[83.47006989 181.32507324]
[79.28305817 195.72886658]
[75.09604645 210.13264465]
[70.90903473 224.53642273]
[67.91426086 239.23442078]
[66.13179779 254.12814331]
[64.34932709 269.02185059]
[62.56686401 283.91558838]
[77.35536194 286.44458008]
[91.99811554 289.71340942]
[106.45812988 293.71383667]
[120.69888306 298.43576050]
[134.68440247 303.86721802]
[148.37934875 309.99453735]
[161.74913025 316.80218506]
[174.75999451 324.27301025]
[187.37905884 332.38809204]
[199.57443237 341.12698364]
[211.31532288 350.46759033]
[222.57208252 360.38632202]
[233.31625366 370.85809326]
[243.52072144 381.85647583]
[253.15968323 393.35369873]
[262.20880127 405.32067871]
[270.64520264 417.72723389]
[278.44760132 430.54199219]
[285.59628296 443.73260498]
[292.07318115 457.26571655]
[297.86190796 471.10717773]
[302.94790649 485.22198486]
[307.31826782 499.57452393]
[310.96197510 514.12854004]
[313.86981201 528.84722900]
[316.03445435 543.69342041]
[317.45043945 558.62963867]
[318.11416626 573.61816406]
[318.02395630 588.62103271]
[317.18005371 603.60046387]
[315.58459473 618.51861572]
[313.24157715 633.33770752]
[310.15695190 648.02038574]
[306.33850098 662.52947998]
[301.79586792 676.82843018]
[296.54055786 690.88110352]
[290.58578491 704.65191650]
[283.94662476 718.10620117]
[276.63986206 731.20989990]
[268.68395996 743.92993164]
[260.09896851 756.23413086]
[250.90661621 768.09143066]
[241.13009644 779.47192383]
[230.79412842 790.34680176]
[219.92480469 800.68865967]
[208.54960632 810.47125244]
[196.69723511 819.67004395]
[184.39765930 828.26165771]
[171.68194580 836.22442627]
[158.58218384 843.53826904]
[145.13151550 850.18463135]
[131.36387634 856.14685059]
[117.31405640 861.40972900]
[103.01755524 865.96008301]
[88.51048279 869.78637695]
[73.82948303 872.87890625]
[59.01164627 875.22985840]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 153]
[67 152]
[68 151]
[69 150]
[81 149]
[82 148]
[83 147]
[84 146]
[85 145]
[86 144]
[88 143]
[89 142]
[90 141]
[91 126]
[92 125]
[93 124]
[94 123]
[95 121]
[96 120]
[97 119]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
