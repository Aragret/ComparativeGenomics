%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[84.51295471 434.83300781]
[69.87837219 431.40820312]
[55.93812561 425.78945923]
[43.01900864 418.10852051]
[31.42386055 408.54544067]
[21.42448616 397.32434082]
[13.25528717 384.70828247]
[7.10776043 370.99301147]
[3.12601328 356.50006104]
[1.40338290 341.56912231]
[1.98025072 326.55020142]
[4.84309387 311.79537964]
[9.92480373 297.65054321]
[17.10625648 284.44723511]
[26.21911049 272.49499512]
[37.04974747 262.07397461]
[49.34427643 253.42845154]
[62.81450272 246.76110840]
[77.14466095 242.22824097]
[91.99884033 239.93608093]
[91.99884033 224.93608093]
[84.26153564 212.20881653]
[91.99884033 198.40864563]
[91.99884033 183.40864563]
[91.99884033 168.40864563]
[91.99884033 153.40864563]
[91.99884033 138.40864563]
[88.85533905 131.71983337]
[92.11216736 123.18572998]
[92.33549500 108.18739319]
[81.63346863 118.69770813]
[66.68969727 119.99527740]
[54.33627319 111.48688507]
[50.22100830 97.06243896]
[56.22534943 83.31661224]
[69.60419464 76.53379822]
[84.24091339 79.81502533]
[93.44437408 91.66191101]
[95.22683716 76.76818848]
[97.00930786 61.87447357]
[98.79177094 46.98075485]
[100.57424164 32.08703995]
[93.23038483 21.48370934]
[95.02162170 9.11539268]
[104.44791412 1.53438938]
[106.45192719 -13.33113861]
[96.41477966 -2.18413377]
[82.37935638 3.10801601]
[67.48120117 1.36303055]
[55.04859924 -7.02925587]
[47.85903168 -20.19398499]
[47.51866150 -35.19012451]
[54.10352707 -48.66749191]
[66.14255524 -57.61521912]
[80.94619751 -60.03435135]
[95.20728302 -55.38445663]
[105.73983765 -44.70432663]
[110.19087982 -30.37991142]
[114.59188080 -44.71975708]
[118.99287415 -59.05960464]
[123.39387512 -73.39945221]
[127.79487610 -87.73929596]
[113.73114014 -92.96800995]
[99.99522400 -99.00561523]
[86.63359833 -105.83168030]
[73.69148254 -113.42310333]
[61.21266937 -121.75420380]
[49.23937988 -130.79678345]
[37.81212616 -140.52026367]
[26.96957779 -150.89172363]
[16.74842072 -161.87608337]
[7.18324327 -173.43615723]
[-1.69359195 -185.53285217]
[-9.85204697 -198.12521362]
[-17.26451683 -211.17063904]
[-23.90591812 -224.62501526]
[-29.75378036 -238.44276428]
[-34.78831482 -252.57717896]
[-38.99248886 -266.98040771]
[-42.35206985 -281.60372925]
[-44.85569763 -296.39764404]
[-46.49489975 -311.31210327]
[-47.26412582 -326.29663086]
[-47.16077423 -341.30053711]
[-46.18519592 -356.27307129]
[-44.34069061 -371.16351318]
[-41.63349915 -385.92153931]
[-38.07278442 -400.49719238]
[-33.67059326 -414.84112549]
[-28.44182205 -428.90484619]
[-22.40416336 -442.64074707]
[-15.57804489 -456.00231934]
[-7.98656607 -468.94442749]
[0.34458643 -481.42318726]
[9.38722229 -493.39645386]
[19.11074448 -504.82366943]
[29.48225021 -515.66619873]
[40.46664429 -525.88726807]
[52.02676392 -535.45239258]
[64.12348938 -544.32922363]
[76.71588898 -552.48760986]
[89.76135254 -559.90002441]
[103.21574402 -566.54138184]
[117.03353119 -572.38916016]
[131.16795349 -577.42364502]
[145.57121277 -581.62774658]
[160.19453430 -584.98730469]
[174.98846436 -587.49084473]
[189.90292358 -589.13000488]
[204.88746643 -589.89916992]
[219.89137268 -589.79571533]
[234.86389160 -588.82006836]
[249.75434875 -586.97552490]
[264.51235962 -584.26824951]
[279.08798218 -580.70751953]
[293.43191528 -576.30523682]
[307.49560547 -571.07641602]
[321.23147583 -565.03869629]
[334.59304810 -558.21252441]
[347.53509521 -550.62097168]
[360.01382446 -542.28979492]
[371.98706055 -533.24713135]
[383.41421509 -523.52355957]
[394.25668335 -513.15197754]
[404.47775269 -502.16754150]
[414.04281616 -490.60739136]
[422.91955566 -478.51062012]
[431.07791138 -465.91818237]
[438.49026489 -452.87271118]
[445.13156128 -439.41827393]
[450.97930908 -425.60046387]
[456.01373291 -411.46603394]
[460.21777344 -397.06274414]
[463.57723999 -382.43942261]
[466.08074951 -367.64547729]
[467.71981812 -352.73101807]
[468.48892212 -337.74645996]
[468.38546753 -322.74255371]
[467.40975952 -307.77005005]
[465.56512451 -292.87960815]
[462.85781860 -278.12161255]
[459.29696655 -263.54598999]
[454.89468384 -249.20207214]
[449.66577148 -235.13841248]
[443.62802124 -221.40255737]
[436.80178833 -208.04103088]
[429.21020508 -195.09901428]
[420.87893677 -182.62030029]
[411.83621216 -170.64710999]
[402.11257935 -159.21998596]
[391.74099731 -148.37756348]
[380.75650024 -138.15653992]
[369.19631958 -128.59150696]
[357.09951782 -119.71482849]
[344.50704956 -111.55652618]
[331.46151733 -104.14421844]
[318.00708008 -97.50298309]
[304.18923950 -91.65529633]
[290.05477905 -86.62093353]
[275.65148926 -82.41693878]
[261.02813721 -79.05754089]
[246.23419189 -76.55409241]
[231.31970215 -74.91507721]
[216.33515930 -74.14604187]
[201.33125305 -74.24958038]
[186.35874939 -75.22534180]
[171.46830750 -77.07003021]
[156.71031189 -79.77740479]
[142.13471985 -83.33830261]
[137.73371887 -68.99845123]
[133.33271790 -54.65860748]
[128.93173218 -40.31875992]
[124.53073120 -25.97891235]
[121.31745148 -11.32712555]
[119.31343842 3.53840303]
[126.84391785 19.38955116]
[115.46795654 33.86950302]
[113.68548584 48.76322174]
[111.90302277 63.65694046]
[110.12055969 78.55065918]
[108.33808899 93.44437408]
[107.33383179 108.41072083]
[107.11050415 123.40905762]
[106.99884033 138.40864563]
[106.99884033 153.40864563]
[106.99884033 168.40864563]
[106.99884033 183.40864563]
[106.99884033 198.40864563]
[114.73613739 212.20881653]
[106.99884033 224.93608093]
[106.99884033 239.93608093]
[121.85301208 242.22824097]
[136.18316650 246.76110840]
[149.65339661 253.42845154]
[161.94792175 262.07397461]
[172.77856445 272.49499512]
[181.89141846 284.44723511]
[189.07287598 297.65054321]
[194.15458679 311.79537964]
[197.01742554 326.55020142]
[197.59428406 341.56912231]
[195.87165833 356.50006104]
[191.88990784 370.99301147]
[185.74238586 384.70828247]
[177.57318115 397.32434082]
[167.57380676 408.54544067]
[155.97866821 418.10852051]
[143.05955505 425.78945923]
[129.11930847 431.40820312]
[114.48471832 434.83300781]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 191]
[21 190]
[23 188]
[24 187]
[25 186]
[26 185]
[27 184]
[29 183]
[30 182]
[38 181]
[39 180]
[40 179]
[41 178]
[42 177]
[45 175]
[46 174]
[58 173]
[59 172]
[60 171]
[61 170]
[62 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
