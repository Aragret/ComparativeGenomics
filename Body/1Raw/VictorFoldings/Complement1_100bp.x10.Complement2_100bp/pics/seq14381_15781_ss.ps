%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[14.25404263 802.54681396]
[-0.60292947 804.64990234]
[-15.56337452 805.80645752]
[-30.56705284 806.01177979]
[-45.55354691 805.26513672]
[-60.46251678 803.56951904]
[-75.23391724 800.93170166]
[-89.80828857 797.36230469]
[-104.12692261 792.87573242]
[-118.13217163 787.49005127]
[-131.76765442 781.22698975]
[-144.97843933 774.11169434]
[-157.71134949 766.17279053]
[-169.91510010 757.44238281]
[-181.54057312 747.95544434]
[-192.54093933 737.75036621]
[-202.87190247 726.86810303]
[-212.49186707 715.35247803]
[-221.36209106 703.24993896]
[-229.44686890 690.60919189]
[-236.71365356 677.48107910]
[-243.13314819 663.91857910]
[-248.67953491 649.97619629]
[-253.33047485 635.71008301]
[-257.06723022 621.17773438]
[-259.87475586 606.43762207]
[-261.74176025 591.54919434]
[-262.66073608 576.57226562]
[-262.62792969 561.56719971]
[-261.64352417 546.59442139]
[-259.71145630 531.71429443]
[-256.83953857 516.98657227]
[-253.03929138 502.47070312]
[-248.32604980 488.22509766]
[-242.71878052 474.30706787]
[-236.24005127 460.77273560]
[-228.91596985 447.67654419]
[-220.77601624 435.07122803]
[-211.85296631 423.00756836]
[-202.18276978 411.53414917]
[-191.80433655 400.69714355]
[-180.75947571 390.54019165]
[-169.09265137 381.10418701]
[-156.85086060 372.42718506]
[-144.08337402 364.54403687]
[-130.84161377 357.48654175]
[-117.17888641 351.28311157]
[-103.15023041 345.95870972]
[-88.81211853 341.53475952]
[-74.22229767 338.02911377]
[-59.43950272 335.45590210]
[-44.52326584 333.82543945]
[-29.53364944 333.14428711]
[-14.53101349 333.41522217]
[0.42423448 334.63714600]
[15.27187252 336.80514526]
[18.37598228 322.12982178]
[21.48009300 307.45452881]
[24.58420372 292.77923584]
[27.68831253 278.10391235]
[16.14080620 287.67758179]
[1.26373756 289.59405518]
[-12.33306980 283.25949097]
[-20.43649864 270.63671875]
[-20.53561211 255.63703918]
[-12.59969997 242.90827942]
[0.91221035 236.39457703]
[15.81330585 238.11427307]
[27.48631859 247.53451538]
[32.31425476 261.73657227]
[37.35116959 247.60754395]
[42.38808441 233.47851562]
[37.48847198 222.41865540]
[41.56917572 210.60630798]
[52.95811462 204.55197144]
[58.20483017 190.49951172]
[63.45154953 176.44703674]
[68.69826508 162.39456177]
[73.94498444 148.34208679]
[79.19170380 134.28962708]
[84.43842316 120.23715210]
[89.68514252 106.18467712]
[94.72205353 92.05564880]
[99.54805756 77.85319519]
[104.37405396 63.65073776]
[109.20005035 49.44828415]
[114.02604675 35.24582672]
[118.85204315 21.04337120]
[121.95615387 6.36806870]
[123.29438782 -8.57211590]
[124.63262177 -23.51230049]
[125.97085571 -38.45248795]
[127.30908966 -53.39266968]
[120.83383942 -67.82810211]
[129.67575073 -79.81433105]
[131.01399231 -94.75451660]
[116.75428772 -99.64576721]
[104.07987213 -107.80804443]
[93.72763062 -118.76680756]
[86.29942322 -131.88493347]
[82.22711182 -146.39973450]
[81.74745941 -161.46736145]
[84.88835144 -176.21179199]
[91.46717834 -189.77580261]
[101.10146332 -201.37080383]
[113.23107147 -210.32267761]
[127.15081024 -216.11097717]
[142.05140686 -218.39915466]
[157.06654358 -217.05421448]
[171.32328796 -212.15431213]
[183.99273682 -203.98435974]
[194.33833313 -193.01931763]
[201.75859070 -179.89669800]
[205.82209778 -165.37942505]
[206.29261780 -150.31150818]
[203.14279175 -135.56898499]
[196.55574036 -122.00896454]
[186.91442871 -110.41980743]
[174.77938843 -101.47528839]
[160.85615540 -95.69543457]
[145.95417786 -93.41628265]
[144.61593628 -78.47609711]
[151.18692017 -65.10929108]
[142.24928284 -52.05443573]
[140.91104126 -37.11425400]
[139.57281494 -22.17406654]
[138.23457336 -7.23388195]
[136.89634705 7.70630264]
[145.29653931 -4.72094822]
[157.39978027 -13.58163643]
[171.78416443 -17.83481789]
[186.75982666 -16.98083115]
[200.56745911 -11.12000370]
[211.58494568 -0.94085944]
[218.51795959 12.36076641]
[220.55203247 27.22221375]
[217.44818115 41.89757156]
[209.57106018 54.66279602]
[197.84605408 64.01823425]
[183.65061951 68.86483002]
[168.65240479 68.63320923]
[154.61340332 63.35057068]
[143.18287659 53.63752365]
[135.70370483 40.63514328]
[133.05450439 25.86936951]
[128.22850037 40.07182312]
[123.40250397 54.27428055]
[118.57650757 68.47673798]
[113.75051117 82.67919159]
[108.92451477 96.88164520]
[110.11763000 101.98952484]
[108.36396790 107.40229034]
[103.73760986 111.43139648]
[98.49089050 125.48387146]
[93.24417877 139.53634644]
[87.99745941 153.58880615]
[82.75074005 167.64128113]
[77.50402069 181.69375610]
[72.25730133 195.74623108]
[67.01058197 209.79869080]
[70.47868347 227.88333130]
[56.51711655 238.51542664]
[51.48019791 252.64445496]
[46.44328308 266.77349854]
[42.36361694 281.20803833]
[39.25950623 295.88333130]
[36.15539551 310.55865479]
[33.05128479 325.23394775]
[29.94717598 339.90924072]
[44.40099716 343.93908691]
[58.57012558 348.87753296]
[72.39751434 354.70471191]
[85.82747650 361.39712524]
[98.80594635 368.92785645]
[111.28064728 377.26657104]
[123.20135498 386.37973022]
[134.52008057 396.23056030]
[145.19122314 406.77944946]
[155.17182922 417.98391724]
[164.42172241 429.79882812]
[172.90362549 442.17660522]
[180.58340454 455.06744385]
[187.43014526 468.41940308]
[193.41624451 482.17874146]
[198.51762390 496.29000854]
[202.71374512 510.69644165]
[205.98770142 525.34002686]
[208.32630920 540.16174316]
[209.72013855 555.10192871]
[210.16362000 570.10046387]
[209.65492249 585.09692383]
[208.19610596 600.03094482]
[205.79306030 614.84234619]
[202.45545959 629.47149658]
[198.19671631 643.85955811]
[193.03401184 657.94854736]
[186.98811340 671.68170166]
[180.08337402 685.00372314]
[172.34761047 697.86102295]
[163.81195068 710.20184326]
[154.51075745 721.97637939]
[144.48152161 733.13732910]
[133.76458740 743.63970947]
[122.40312958 753.44122314]
[110.44289398 762.50244141]
[97.93204498 770.78680420]
[84.92095184 778.26104736]
[71.46200562 784.89501953]
[57.60940170 790.66198730]
[43.41892624 795.53875732]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 169]
[57 168]
[58 167]
[59 166]
[60 165]
[70 164]
[71 163]
[72 162]
[75 160]
[76 159]
[77 158]
[78 157]
[79 156]
[80 155]
[81 154]
[82 153]
[83 150]
[84 149]
[85 148]
[86 147]
[87 146]
[88 145]
[89 128]
[90 127]
[91 126]
[92 125]
[93 124]
[95 122]
[96 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
