%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[73.00760651 378.05087280]
[80.67356873 391.01419067]
[85.37314606 405.32250977]
[86.88653564 420.30661011]
[85.14295959 435.26568604]
[80.22395325 449.50006104]
[72.35959625 462.34396362]
[61.91771317 473.19668579]
[49.38669586 481.55059814]
[35.35264206 487.01495361]
[20.47194672 489.33422852]
[5.44060898 488.39990234]
[-9.03832912 484.25570679]
[-22.28766060 477.09542847]
[-33.68769073 467.25402832]
[-42.70521927 455.19177246]
[-48.91847992 441.47280884]
[-52.03686905 426.73886108]
[-51.91453171 411.67901611]
[-48.55718994 396.99765015]
[-42.12187195 383.38143921]
[-32.90957260 371.46728516]
[-21.35116386 361.81234741]
[-7.98725700 354.86828613]
[6.55709600 350.95986938]
[21.60162926 350.26986694]
[36.44268036 352.83056641]
[42.10546875 338.94055176]
[47.76825333 325.05050659]
[53.43104172 311.16049194]
[59.09382629 297.27044678]
[64.75661469 283.38043213]
[70.41940308 269.49041748]
[68.05943298 254.78395081]
[80.43402100 244.92594910]
[83.86508179 230.32362366]
[84.98072815 215.36517334]
[86.09637451 200.40672302]
[87.21202850 185.44825745]
[88.32767487 170.48980713]
[81.55841827 157.22232056]
[90.30069733 144.03584290]
[91.19351196 129.06243896]
[91.86329651 114.07740021]
[84.53608704 105.02458954]
[85.14273071 93.39389038]
[93.37198639 85.15248871]
[94.26480103 70.17908478]
[87.36262512 55.94284821]
[95.84374237 43.69867325]
[96.73656464 28.72526741]
[88.11506653 12.45408535]
[98.34272766 -1.80641663]
[99.01251221 -16.79145622]
[99.68229675 -31.77649498]
[100.35208130 -46.76153183]
[101.02186584 -61.74657059]
[101.69165039 -76.73161316]
[102.36143494 -91.71665192]
[103.03121948 -106.70169067]
[103.70101166 -121.68672943]
[104.37079620 -136.67176819]
[105.04058075 -151.65679932]
[105.71036530 -166.64184570]
[106.38014984 -181.62687683]
[99.26677704 -195.75877380]
[107.56465912 -208.12786865]
[97.39160919 -216.95530701]
[94.20658112 -229.84196472]
[98.95483398 -242.02949524]
[109.69408417 -249.14974976]
[110.58689880 -264.12316895]
[111.47971344 -279.09655762]
[112.37252808 -294.06997681]
[113.26535034 -309.04336548]
[98.43318176 -311.35671997]
[83.88806915 -315.06945801]
[69.76174927 -320.14804077]
[56.18214798 -326.54641724]
[43.27225113 -334.20666504]
[31.14897346 -343.05938721]
[19.92210579 -353.02444458]
[9.69332504 -364.01156616]
[0.55526668 -375.92123413]
[-7.40931225 -388.64562988]
[-14.12828159 -402.06951904]
[-19.54079247 -416.07125854]
[-23.59782410 -430.52413940]
[-26.26264000 -445.29721069]
[-27.51110077 -460.25668335]
[-27.33190536 -475.26708984]
[-25.72667122 -490.19250488]
[-22.70993996 -504.89776611]
[-18.30903244 -519.24963379]
[-12.56380177 -533.11822510]
[-5.52628040 -546.37786865]
[2.73979735 -558.90850830]
[12.15957069 -570.59661865]
[22.64772987 -581.33642578]
[34.10929108 -591.03063965]
[46.44045639 -599.59143066]
[59.52954865 -606.94128418]
[73.25802612 -613.01361084]
[87.50156403 -617.75354004]
[102.13115692 -621.11798096]
[117.01432800 -623.07653809]
[132.01628113 -623.61151123]
[147.00114441 -622.71801758]
[161.83323669 -620.40417480]
[176.37820435 -616.69085693]
[190.50434875 -611.61181641]
[204.08370972 -605.21289062]
[216.99333191 -597.55218506]
[229.11628723 -588.69903564]
[240.34278870 -578.73358154]
[250.57116699 -567.74609375]
[259.70880127 -555.83605957]
[267.67291260 -543.11138916]
[274.39138794 -529.68725586]
[279.80337524 -515.68530273]
[283.85989380 -501.23229980]
[286.52416992 -486.45913696]
[287.77209473 -471.49960327]
[287.59234619 -456.48919678]
[285.98657227 -441.56384277]
[282.96929932 -426.85870361]
[278.56787109 -412.50695801]
[272.82214355 -398.63861084]
[265.78411865 -385.37924194]
[257.51757812 -372.84890747]
[248.09739685 -361.16110229]
[237.60884094 -350.42169189]
[226.14692688 -340.72790527]
[213.81544495 -332.16757202]
[200.72608948 -324.81817627]
[186.99739075 -318.74633789]
[172.75367737 -314.00695801]
[158.12396240 -310.64303589]
[143.24072266 -308.68499756]
[128.23875427 -308.15057373]
[127.34593964 -293.17715454]
[126.45312500 -278.20376587]
[125.56030273 -263.23034668]
[124.66748810 -248.25694275]
[136.35784912 -236.16668701]
[135.67341614 -219.02473450]
[122.54969788 -207.45808411]
[129.71098328 -194.39801025]
[121.36518860 -180.95709229]
[120.69540405 -165.97206116]
[120.02561951 -150.98701477]
[119.35583496 -136.00198364]
[118.68605042 -121.01694489]
[118.01625824 -106.03190613]
[117.34647369 -91.04686737]
[116.67668915 -76.06182861]
[116.00690460 -61.07678604]
[115.33712006 -46.09174728]
[114.66733551 -31.10670853]
[113.99755096 -16.12166977]
[113.32776642 -1.13663149]
[121.25670624 7.99892855]
[120.82133484 20.48869324]
[111.70996857 29.61808395]
[110.81715393 44.59148788]
[117.78319550 57.75672913]
[109.23821259 71.07189941]
[108.34539032 86.04530334]
[116.23766327 100.84693909]
[106.84833527 114.74718475]
[106.17855072 129.73222351]
[108.88138580 135.76597595]
[108.22922516 141.41148376]
[105.25914764 145.15148926]
[111.94860840 159.48890686]
[103.28612518 171.60545349]
[102.17047882 186.56391907]
[101.05483246 201.52236938]
[99.93917847 216.48081970]
[98.82353210 231.43927002]
[106.56937408 218.59396362]
[117.45566559 208.27462769]
[130.69651794 201.22622681]
[145.33605957 197.95759583]
[160.31744385 198.70469666]
[174.55914307 203.41357422]
[187.03306580 211.74432373]
[196.83868408 223.09553528]
[203.26814270 236.64773560]
[205.85726929 251.42259216]
[204.41917419 266.35348511]
[199.05764771 280.36257935]
[190.15977478 292.43847656]
[178.36788940 301.70947266]
[164.53324890 307.50625610]
[149.65458679 309.41036987]
[134.80601501 307.28433228]
[121.05947113 301.28161621]
[109.40731812 291.83560181]
[100.69074249 279.62817383]
[95.53899384 265.54061890]
[94.32404327 250.58872986]
[96.27896881 266.28869629]
[84.30942535 275.15319824]
[78.64664459 289.04321289]
[72.98385620 302.93325806]
[67.32106781 316.82327271]
[61.65828323 330.71328735]
[55.99549484 344.60333252]
[50.33271027 358.49334717]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 210]
[28 209]
[29 208]
[30 207]
[31 206]
[32 205]
[33 204]
[35 202]
[36 180]
[37 179]
[38 178]
[39 177]
[40 176]
[42 174]
[43 171]
[44 170]
[47 168]
[48 167]
[50 165]
[51 164]
[53 161]
[54 160]
[55 159]
[56 158]
[57 157]
[58 156]
[59 155]
[60 154]
[61 153]
[62 152]
[63 151]
[64 150]
[65 149]
[67 147]
[71 144]
[72 143]
[73 142]
[74 141]
[75 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
