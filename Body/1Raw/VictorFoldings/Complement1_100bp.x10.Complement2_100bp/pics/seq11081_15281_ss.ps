%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[64.19969940 844.22253418]
[49.20225143 843.81982422]
[34.24095154 842.70397949]
[19.34969521 840.87750244]
[4.56221342 838.34454346]
[-10.08799648 835.11077881]
[-24.56774521 831.18365479]
[-38.84423065 826.57196045]
[-52.88511658 821.28625488]
[-66.65859222 815.33837891]
[-80.13345337 808.74188232]
[-93.27918243 801.51171875]
[-106.06598663 793.66424561]
[-118.46492004 785.21722412]
[-130.44787598 776.18975830]
[-141.98771667 766.60241699]
[-153.05830383 756.47680664]
[-163.63455200 745.83593750]
[-173.69250488 734.70385742]
[-183.20938110 723.10577393]
[-192.16363525 711.06805420]
[-200.53494263 698.61791992]
[-208.30438232 685.78350830]
[-215.45433044 672.59399414]
[-221.96859741 659.07916260]
[-227.83241272 645.26971436]
[-233.03251648 631.19689941]
[-237.55711365 616.89257812]
[-241.39596558 602.38916016]
[-244.54035950 587.71954346]
[-246.98318481 572.91687012]
[-248.71890259 558.01477051]
[-249.74359131 543.04693604]
[-250.05490112 528.04730225]
[-249.65216064 513.04986572]
[-248.53627014 498.08859253]
[-246.70974731 483.19732666]
[-244.17674255 468.40985107]
[-240.94299316 453.75964355]
[-237.01582336 439.27990723]
[-232.40411377 425.00341797]
[-227.11833191 410.96255493]
[-221.17044067 397.18908691]
[-214.57391357 383.71426392]
[-207.34371948 370.56854248]
[-199.49620056 357.78173828]
[-191.04914856 345.38284302]
[-182.02169800 333.39990234]
[-172.43429565 321.86007690]
[-162.30868530 310.78952026]
[-151.66777039 300.21328735]
[-140.53567505 290.15536499]
[-128.93760681 280.63851929]
[-116.89984131 271.68429565]
[-104.44966125 263.31301880]
[-91.61525726 255.54359436]
[-78.42570496 248.39367676]
[-64.91088104 241.87945557]
[-51.10140991 236.01565552]
[-37.02856827 230.81558228]
[-22.72423744 226.29101562]
[-8.22082138 222.45220947]
[6.44882679 219.30784607]
[21.25147438 216.86505127]
[36.15358734 215.12936401]
[51.12141037 214.10472107]
[66.12103271 213.79342651]
[81.11847687 214.19621277]
[82.23412323 199.23774719]
[83.34977722 184.27929688]
[84.46542358 169.32084656]
[85.58106995 154.36239624]
[83.85610962 152.15272522]
[82.90249634 149.12663269]
[83.03557587 145.57449341]
[84.45985413 141.89535522]
[87.23451996 138.55541992]
[89.23853302 123.68989563]
[78.97640228 115.33064270]
[74.15441895 103.00436401]
[76.02034760 89.90067291]
[84.09134674 79.41031647]
[96.27893829 74.24783325]
[98.50405121 59.41379166]
[100.72917175 44.57975006]
[102.95428467 29.74570656]
[104.95830536 14.88017750]
[106.74076843 -0.01353978]
[108.52323151 -14.90725708]
[110.30570221 -29.80097389]
[112.08816528 -44.69469070]
[97.65664673 -48.91144943]
[84.11607361 -55.44618225]
[71.83583832 -64.12062073]
[61.15097427 -74.69811249]
[52.35295486 -86.89010620]
[45.68180084 -100.36399841]
[41.31951141 -114.75219727]
[39.38508606 -129.66218567]
[39.93130112 -144.68721008]
[42.94325256 -159.41738892]
[48.33877563 -173.45085144]
[55.97067261 -186.40476990]
[65.63074493 -197.92575073]
[77.05545807 -207.69947815]
[89.93312836 -215.45933533]
[103.91245270 -220.99362183]
[118.61206818 -224.15135193]
[133.63095093 -224.84638977]
[148.55937195 -223.05976868]
[162.99008179 -218.84024048]
[176.52938843 -212.30290222]
[188.80795288 -203.62609863]
[199.49078369 -193.04653931]
[208.28645325 -180.85284424]
[214.95500183 -167.37768555]
[219.31452942 -152.98864746]
[221.24607849 -138.07827759]
[220.69697571 -123.05335236]
[217.68217468 -108.32376099]
[212.28395081 -94.29133606]
[204.64956665 -81.33888245]
[194.98727417 -69.81977081]
[183.56068420 -60.04823685]
[170.68150330 -52.29086304]
[156.70111084 -46.75927353]
[142.00090027 -43.60437012]
[126.98188019 -42.91222763]
[125.19941711 -28.01850891]
[123.41695404 -13.12479115]
[121.63448334 1.76892614]
[119.85202026 16.66264343]
[122.04724121 20.90411186]
[121.60129547 26.56963539]
[117.78833008 31.97082329]
[115.56321716 46.80486679]
[113.33809662 61.63891220]
[111.11298370 76.47295380]
[122.90837860 87.66199493]
[125.75975800 103.66811371]
[118.55386353 118.24210358]
[104.10406494 125.69390869]
[102.10005188 140.55943298]
[100.53952789 155.47804260]
[99.42387390 170.43649292]
[98.30822754 185.39494324]
[97.19258118 200.35339355]
[96.07693481 215.31185913]
[110.96819305 217.13827515]
[125.75569153 219.67117310]
[140.40591431 222.90483093]
[154.88568115 226.83190918]
[169.16218567 231.44351196]
[183.20309448 236.72920227]
[196.97659302 242.67700195]
[210.45149231 249.27342224]
[223.59724426 256.50354004]
[236.38409424 264.35098267]
[248.78306580 272.79794312]
[260.76605225 281.82531738]
[272.30593872 291.41262817]
[283.37658691 301.53817749]
[293.95288086 312.17901611]
[304.01089478 323.31103516]
[313.52780151 334.90905762]
[322.48211670 346.94674683]
[330.85348511 359.39688110]
[338.62298584 372.23123169]
[345.77297974 385.42071533]
[352.28732300 398.93551636]
[358.15118408 412.74493408]
[363.35134888 426.81774902]
[367.87603760 441.12203979]
[371.71493530 455.62542725]
[374.85940552 470.29504395]
[377.30230713 485.09768677]
[379.03808594 499.99978638]
[380.06283569 514.96759033]
[380.37420654 529.96722412]
[379.97155762 544.96466064]
[378.85571289 559.92596436]
[377.02926636 574.81726074]
[374.49633789 589.60473633]
[371.26263428 604.25494385]
[367.33554077 618.73468018]
[362.72387695 633.01116943]
[357.43817139 647.05212402]
[351.49035645 660.82556152]
[344.89389038 674.30047607]
[337.66372681 687.44622803]
[329.81628418 700.23303223]
[321.36929321 712.63195801]
[312.34188843 724.61492920]
[302.75454712 736.15484619]
[292.62896729 747.22540283]
[281.98809814 757.80169678]
[270.85604858 767.85968018]
[259.25802612 777.37658691]
[247.22030640 786.33087158]
[234.77017212 794.70220947]
[221.93579102 802.47167969]
[208.74627686 809.62164307]
[195.23149109 816.13592529]
[181.42204285 821.99981689]
[167.34922791 827.19995117]
[153.04490662 831.72454834]
[138.54151917 835.56341553]
[123.87187958 838.70788574]
[109.06924438 841.15075684]
[94.16713715 842.88647461]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 148]
[69 147]
[70 146]
[71 145]
[72 144]
[77 143]
[78 142]
[83 138]
[84 137]
[85 136]
[86 135]
[87 132]
[88 131]
[89 130]
[90 129]
[91 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
