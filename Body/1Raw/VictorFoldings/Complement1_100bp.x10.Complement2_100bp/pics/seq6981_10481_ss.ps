%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[80.57875824 610.12548828]
[71.15743256 598.32965088]
[65.26900482 584.42895508]
[63.35044098 569.45495605]
[65.54411316 554.51873779]
[71.68722534 540.72869873]
[81.32392883 529.10821533]
[93.73911285 520.51947021]
[108.01148987 515.59997559]
[107.11867523 500.62652588]
[106.22586060 485.65313721]
[105.33303833 470.67971802]
[104.44022369 455.70632935]
[103.54740906 440.73291016]
[102.65459442 425.75952148]
[101.76177979 410.78610229]
[93.28065491 398.54193115]
[100.18283844 384.30569458]
[99.29002380 369.33227539]
[98.39720154 354.35888672]
[89.56087494 346.09777832]
[88.69451141 333.63049316]
[96.80666351 323.60275269]
[88.50877380 311.23364258]
[95.62214661 297.10174561]
[87.32426453 284.73266602]
[94.43763733 270.60076904]
[93.76785278 255.61573792]
[93.09806824 240.63069153]
[92.42828369 225.64566040]
[91.75849915 210.66061401]
[91.08871460 195.67558289]
[89.11339569 193.68653870]
[87.80694580 190.79521179]
[87.51697540 187.25242615]
[88.49396515 183.43011475]
[90.85208130 179.78413391]
[83.30513000 166.94306946]
[91.24703979 153.25962830]
[91.47036743 138.26129150]
[88.42680359 131.52641296]
[91.81033325 123.04174805]
[92.25693512 108.04840088]
[92.59191132 93.05213928]
[92.81523895 78.05380249]
[93.03856659 63.05546570]
[79.13317108 56.97964478]
[68.64161682 46.07229233]
[63.14020538 32.01711273]
[63.43827057 16.96723747]
[69.45925140 3.21541524]
[80.25712585 -7.15527868]
[94.16489410 -12.58697224]
[94.38822174 -27.58530998]
[94.61154938 -42.58364868]
[87.08057404 -56.49748611]
[95.00650787 -69.10815430]
[95.22983551 -84.10649109]
[95.45316315 -99.10482788]
[92.45186615 -107.73210907]
[95.79312134 -114.32436371]
[96.23973083 -129.31771851]
[96.68634033 -144.31106567]
[97.13294220 -159.30441284]
[97.57955170 -174.29776001]
[89.31900024 -184.20362854]
[89.99964142 -196.68241882]
[98.71200562 -205.07417297]
[99.38179016 -220.05920410]
[89.20873260 -228.88664246]
[86.02370453 -241.77330017]
[90.77195740 -253.96084595]
[101.51120758 -261.08108521]
[102.40402985 -276.05450439]
[103.29684448 -291.02792358]
[91.44767761 -303.89712524]
[92.55031586 -321.01727295]
[105.43505096 -331.82571411]
[106.10483551 -346.81072998]
[106.77462006 -361.79577637]
[96.38805389 -373.40426636]
[97.28077698 -388.59167480]
[108.41170502 -398.42214966]
[109.08148956 -413.40719604]
[109.75127411 -428.39224243]
[94.98055267 -431.14392090]
[80.73656464 -435.92462158]
[67.29657745 -442.64123535]
[54.92219543 -451.16302490]
[43.85430145 -461.32409668]
[34.30833054 -472.92672729]
[26.47009659 -485.74499512]
[20.49217224 -499.52941895]
[16.49092293 -514.01171875]
[14.54423332 -528.90991211]
[14.68999386 -543.93402100]
[16.92536926 -558.79168701]
[21.20684814 -573.19360352]
[27.45108795 -586.85943604]
[35.53654480 -599.52325439]
[45.30582809 -610.93847656]
[56.56878281 -620.88287354]
[69.10617065 -629.16302490]
[82.67394257 -635.61755371]
[97.00800323 -640.12103271]
[111.82933807 -642.58563232]
[126.84943390 -642.96343994]
[141.77593994 -641.24707031]
[156.31828308 -637.47003174]
[170.19340515 -631.70574951]
[183.13122559 -624.06640625]
[194.87989807 -614.70080566]
[205.21073914 -603.79119873]
[213.92265320 -591.54992676]
[220.84606934 -578.21527100]
[225.84619141 -564.04681396]
[228.82572937 -549.32037354]
[229.72665405 -534.32257080]
[228.53144836 -519.34533691]
[225.26336670 -504.68020630]
[219.98602295 -490.61267090]
[212.80215454 -477.41653442]
[203.85159302 -465.34866333]
[193.30854797 -454.64395142]
[181.37826538 -445.51080322]
[168.29295349 -438.12698364]
[154.30732727 -432.63623047]
[139.69363403 -429.14538574]
[124.73631287 -427.72244263]
[124.06652832 -412.73739624]
[123.39674377 -397.75238037]
[133.60624695 -386.96804810]
[133.14045715 -371.76153564]
[121.75965881 -361.12600708]
[121.08987427 -346.14096069]
[120.42008972 -331.15591431]
[130.36030579 -322.95703125]
[133.81486511 -310.34164429]
[129.30645752 -297.85626221]
[118.27024841 -290.13510132]
[117.37743378 -275.16168213]
[116.48461914 -260.18829346]
[128.17497253 -248.09802246]
[127.49053955 -230.95606995]
[114.36682892 -219.38941956]
[113.69704437 -204.40438843]
[122.61165619 -189.28828430]
[112.57289886 -173.85115051]
[112.12628937 -158.85780334]
[111.67968750 -143.86445618]
[111.23307800 -128.87110901]
[110.78647614 -113.87775421]
[110.45149994 -98.88150024]
[110.22817230 -83.88316345]
[110.00484467 -68.88482666]
[117.55179596 -56.04376602]
[109.60988617 -42.36032104]
[109.38655853 -27.36198235]
[109.16323090 -12.36364460]
[122.90311432 -6.52027321]
[133.38742065 4.16731644]
[138.99629211 18.09230804]
[138.84614563 33.14438629]
[132.92869568 47.02954102]
[122.11703491 57.61968231]
[108.03690338 63.27879333]
[107.81357574 78.27713013]
[107.59024811 93.27546692]
[110.62862396 100.74144745]
[107.25028992 108.49501038]
[106.80368042 123.48835754]
[106.46870422 138.48461914]
[106.24537659 153.48295593]
[113.77635193 167.39678955]
[105.85042572 180.00746155]
[106.07375336 195.00579834]
[106.74353790 209.99082947]
[107.41332245 224.97587585]
[108.08310699 239.96090698]
[108.75289154 254.94595337]
[109.42267609 269.93099976]
[117.76847076 283.37191772]
[110.60718536 296.43197632]
[118.95298004 309.87289429]
[111.79170227 322.93295288]
[122.05918121 338.21890259]
[113.37061310 353.46606445]
[114.26342773 368.43948364]
[115.15624237 383.41287231]
[123.70122528 396.72805786]
[116.73518372 409.89328003]
[117.62799835 424.86669922]
[118.52081299 439.84008789]
[119.41363525 454.81350708]
[120.30644989 469.78692627]
[121.19926453 484.76031494]
[122.09207916 499.73373413]
[122.98489380 514.70715332]
[137.74073792 517.89581299]
[151.08856201 524.94836426]
[162.03785706 535.34136963]
[169.77613831 548.30371094]
[173.72914124 562.87341309]
[173.60356140 577.96936035]
[169.40869141 592.47125244]
[161.45582581 605.30303955]
[150.33511353 615.51245117]
[136.87181091 622.34197998]
[122.06495667 625.28466797]
[107.01332855 624.12231445]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 198]
[10 197]
[11 196]
[12 195]
[13 194]
[14 193]
[15 192]
[16 191]
[18 189]
[19 188]
[20 187]
[23 185]
[25 183]
[27 181]
[28 180]
[29 179]
[30 178]
[31 177]
[32 176]
[37 175]
[39 173]
[40 172]
[42 171]
[43 170]
[44 168]
[45 167]
[46 166]
[53 159]
[54 158]
[55 157]
[57 155]
[58 154]
[59 153]
[61 152]
[62 151]
[63 150]
[64 149]
[65 148]
[68 146]
[69 145]
[73 142]
[74 141]
[75 140]
[78 136]
[79 135]
[80 134]
[83 131]
[84 130]
[85 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
