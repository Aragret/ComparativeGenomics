%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[168.97756958 599.38232422]
[177.23698425 586.54705811]
[190.25198364 578.57379150]
[188.69146729 563.65521240]
[187.13093567 548.73657227]
[185.23765564 533.85656738]
[183.01252747 519.02252197]
[180.78741455 504.18847656]
[178.56230164 489.35443115]
[176.33718872 474.52038574]
[173.56156921 459.77941895]
[170.23931885 445.15194702]
[166.91705322 430.52450562]
[164.14445496 428.34619141]
[162.28921509 424.71670532]
[162.02186584 420.08184814]
[163.78852844 415.17004395]
[161.12272644 400.40881348]
[158.45692444 385.64761353]
[155.79113770 370.88638306]
[145.22430420 381.53259277]
[130.29667664 380.06085205]
[122.01235199 367.55606079]
[126.47822571 353.23626709]
[140.40222168 347.65753174]
[153.51911926 354.93090820]
[151.95860291 340.01229858]
[142.93920898 328.15905762]
[149.19882202 313.62881470]
[147.63829041 298.71020508]
[146.07777405 283.79159546]
[143.08300781 269.09359741]
[138.68200684 254.75375366]
[134.28100586 240.41389465]
[129.88000488 226.07405090]
[125.47901154 211.73420715]
[114.34804535 201.83718872]
[117.69586182 186.37423706]
[104.72024536 183.23170471]
[94.91316986 174.01403809]
[90.90951538 161.05099487]
[93.85722351 147.69699097]
[103.09079742 137.46311951]
[98.90378571 123.05934143]
[94.71677399 108.65556335]
[89.62160492 102.40962219]
[90.57636261 94.00609589]
[86.60427094 79.54156494]
[82.63217163 65.07704163]
[78.66007996 50.61252213]
[67.54460907 39.35387802]
[71.63543701 25.03206444]
[67.66334534 10.56754017]
[63.69124603 -3.89698386]
[59.71915054 -18.36150742]
[46.32107925 -30.99373627]
[51.41686249 -47.78659058]
[40.13500595 -58.87849045]
[44.01214981 -73.25962830]
[39.50452042 -87.56631470]
[34.67852020 -101.76876831]
[29.85252380 -115.97122192]
[15.17874908 -120.66020203]
[6.18476915 -132.94685364]
[6.15060234 -147.99552917]
[14.87977409 -160.03460693]
[10.05377579 -174.23707581]
[5.22777843 -188.43952942]
[-6.53810549 -199.01660156]
[-3.30698037 -213.55651855]
[-8.13297844 -227.75897217]
[-12.95897579 -241.96142578]
[-17.99767113 -227.83303833]
[-29.80955505 -218.58752441]
[-44.73458862 -217.08972168]
[-58.14808655 -223.80375671]
[-65.89373016 -236.64918518]
[-65.57144928 -251.64572144]
[-57.28110123 -264.14651489]
[-43.59154892 -270.27807617]
[-28.74464226 -268.14047241]
[-17.34071732 -258.39584351]
[-21.39105606 -263.62139893]
[-22.08953094 -269.26135254]
[-20.08589172 -273.59661865]
[-22.53162003 -288.39587402]
[-24.97734642 -303.19515991]
[-27.42307472 -317.99441528]
[-29.86880112 -332.79370117]
[-44.87630844 -334.42996216]
[-58.88540649 -340.05557251]
[-70.85653687 -349.25311279]
[-79.90135193 -361.34005737]
[-85.34866333 -375.41943359]
[-86.79425812 -390.44650269]
[-84.13085938 -405.30615234]
[-77.55610657 -418.89566040]
[-67.55788422 -430.20663452]
[-54.87813568 -438.39971924]
[-40.45777893 -442.86691284]
[-25.36689949 -443.27676392]
[-10.72534275 -439.59878540]
[2.38039184 -432.10598755]
[12.97777176 -421.35430908]
[20.28039932 -408.14166260]
[23.74637413 -393.44848633]
[23.11849403 -378.36511230]
[18.44335556 -364.01080322]
[10.06788349 -351.45080566]
[-1.38640666 -341.61709595]
[-15.06953049 -335.23941040]
[-12.62380314 -320.44015503]
[-10.17807579 -305.64086914]
[-7.73234844 -290.84161377]
[-5.28662109 -276.04232788]
[-2.62082553 -261.28112793]
[1.24347997 -246.78742981]
[6.06947756 -232.58497620]
[10.89547539 -218.38250732]
[22.31617165 -208.82128906]
[19.43023491 -193.26551819]
[24.25623131 -179.06306458]
[29.08222961 -164.86061096]
[43.33910370 -160.63218689]
[52.48047256 -148.67813110]
[52.83414841 -133.45550537]
[44.05498123 -120.79721832]
[48.88097763 -106.59476471]
[53.70697403 -92.39231110]
[56.69114304 -90.51425171]
[58.91391754 -87.09748077]
[59.66200256 -82.51560211]
[58.41593170 -77.44663239]
[69.39830780 -67.38498688]
[65.82064056 -51.97360229]
[76.26721954 -45.87477875]
[79.87336731 -33.90901566]
[74.18367767 -22.33360481]
[78.15576935 -7.86908007]
[82.12786865 6.59544373]
[86.09996033 21.05996704]
[96.93132019 31.28400993]
[93.12460327 46.64042282]
[97.09669495 61.10494995]
[101.06879425 75.56947327]
[105.04089355 90.03399658]
[109.12055969 104.46855164]
[113.30757141 118.87232971]
[117.49457550 133.27610779]
[133.48628235 138.78622437]
[142.94866943 152.60522461]
[142.31605530 169.17512512]
[132.03570557 181.97323608]
[143.48146057 192.89595032]
[139.81886292 207.33320618]
[144.21984863 221.67304993]
[148.62084961 236.01290894]
[153.02185059 250.35275269]
[157.42285156 264.69259644]
[161.17980957 250.17071533]
[170.45465088 238.38185120]
[183.68440247 231.31263733]
[198.63961792 230.15437317]
[212.80007935 235.10224915]
[223.77949524 245.32243347]
[229.72764587 259.09268188]
[229.64218140 274.09243774]
[223.53746033 287.79397583]
[212.44227600 297.88836670]
[198.22634888 302.67453003]
[183.28530884 301.34588623]
[170.13697815 294.12637329]
[160.99638367 282.23107910]
[162.55690002 297.14968872]
[164.11743164 312.06829834]
[173.24844360 324.98861694]
[166.87719727 338.45178223]
[168.43772888 353.37039185]
[170.55235291 368.22058105]
[173.21813965 382.98181152]
[175.88394165 397.74301147]
[178.54974365 412.50424194]
[181.54450989 427.20223999]
[184.86677551 441.82971191]
[188.18902588 456.45715332]
[198.26995850 445.34973145]
[213.24839783 446.15347290]
[222.08282471 458.27587891]
[218.26081848 472.78079224]
[204.59982300 478.97570801]
[191.17121887 472.29525757]
[193.39634705 487.12930298]
[195.62145996 501.96334839]
[197.84657288 516.79742432]
[200.07170105 531.63146973]
[203.32472229 535.71368408]
[204.56275940 540.18817139]
[203.97387695 544.22155762]
[202.04954529 547.17608643]
[203.61007690 562.09466553]
[205.17059326 577.01330566]
[219.55384827 582.12060547]
[230.29063416 592.96881104]
[235.24914551 607.40405273]
[233.44487000 622.56018066]
[225.23605347 635.42785645]
[212.25256348 643.45233154]
[197.07226562 645.04022217]
[182.70922852 639.87628174]
[172.01525879 628.98583984]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 201]
[4 200]
[5 199]
[6 195]
[7 194]
[8 193]
[9 192]
[10 191]
[11 185]
[12 184]
[13 183]
[17 182]
[18 181]
[19 180]
[20 179]
[26 178]
[27 177]
[29 175]
[30 174]
[31 173]
[32 159]
[33 158]
[34 157]
[35 156]
[36 155]
[38 153]
[43 149]
[44 148]
[45 147]
[47 146]
[48 145]
[49 144]
[50 143]
[52 141]
[53 140]
[54 139]
[55 138]
[57 135]
[59 133]
[60 129]
[61 128]
[62 127]
[66 123]
[67 122]
[68 121]
[70 119]
[71 118]
[72 117]
[82 116]
[85 115]
[86 114]
[87 113]
[88 112]
[89 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
