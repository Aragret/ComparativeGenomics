%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[146.38755798 688.56207275]
[133.67202759 680.59521484]
[121.49307251 671.83001709]
[109.90071869 662.30255127]
[98.94261932 652.05187988]
[88.66380310 641.12023926]
[79.10649872 629.55242920]
[70.30998230 617.39605713]
[62.31040192 604.70111084]
[55.14062881 591.51965332]
[48.83013153 577.90594482]
[43.40483475 563.91589355]
[38.88703537 549.60699463]
[35.29529572 535.03802490]
[32.64437866 520.26885986]
[30.94517326 505.36016846]
[30.20466423 490.37326050]
[30.42589569 475.36968994]
[31.60795593 460.41113281]
[33.74599075 445.55905151]
[36.83121109 430.87448120]
[40.85094070 416.41772461]
[45.78865814 402.24822998]
[51.62408066 388.42422485]
[58.33322525 375.00247192]
[65.88851929 362.03817749]
[74.25891876 349.58456421]
[83.41002655 337.69287109]
[93.30424500 326.41189575]
[103.90090942 315.78802490]
[115.15647125 305.86492920]
[127.02468872 296.68338013]
[139.45678711 288.28106689]
[152.40168762 280.69256592]
[165.80618286 273.94906616]
[159.93722534 260.14486694]
[147.83702087 251.45956421]
[149.55798340 235.73223877]
[143.68902588 221.92807007]
[137.82006836 208.12388611]
[131.95109558 194.31970215]
[126.08214569 180.51553345]
[120.21318054 166.71134949]
[114.34422302 152.90718079]
[100.15115356 154.81700134]
[85.94776154 152.98547363]
[72.70346069 147.53761292]
[61.32219315 138.84524536]
[52.58073807 127.50163269]
[47.07571793 114.28099060]
[45.18286133 100.08564758]
[47.03135300 85.88446045]
[52.49503326 72.64667511]
[61.20099640 61.27580261]
[72.55505371 52.54790878]
[66.89226532 38.65788269]
[61.22947693 24.76785469]
[55.56669235 10.87782764]
[49.90390396 -3.01219940]
[37.52932358 -12.87020493]
[39.88928986 -27.57666016]
[25.49954605 -23.29856300]
[10.75976467 -20.45152473]
[-4.18810129 -19.06296539]
[-19.20009232 -19.14625931]
[-34.13162994 -20.70060349]
[-48.83890915 -23.71102715]
[-63.18029404 -28.14853859]
[-77.01766205 -33.97040176]
[-90.21774292 -41.12054443]
[-102.65341949 -49.53010941]
[-114.20491791 -59.11810303]
[-124.76099396 -69.79218292]
[-134.21998596 -81.44955444]
[-142.49078369 -93.97795105]
[-149.49374390 -107.25670624]
[-155.16142273 -121.15793610]
[-159.43923950 -135.54776001]
[-162.28598022 -150.28759766]
[-163.67424011 -165.23548889]
[-163.59065247 -180.24748230]
[-162.03601074 -195.17898560]
[-159.02528381 -209.88621521]
[-154.58749390 -224.22750854]
[-148.76535034 -238.06475830]
[-141.61494446 -251.26469421]
[-133.20512390 -263.70019531]
[-123.61690521 -275.25152588]
[-112.94261169 -285.80737305]
[-101.28504944 -295.26614380]
[-88.75649261 -303.53668213]
[-75.47760010 -310.53936768]
[-61.57625198 -316.20678711]
[-47.18634033 -320.48431396]
[-32.44644547 -323.33074951]
[-17.49852371 -324.71871948]
[-2.48653674 -324.63482666]
[12.44493866 -323.07986450]
[27.15209961 -320.06887817]
[41.49330521 -315.63076782]
[55.33044052 -309.80838013]
[68.53023529 -302.65768433]
[80.96557617 -294.24761963]
[92.51669312 -284.65917969]
[103.07234192 -273.98468018]
[112.53086853 -262.32693481]
[120.80117035 -249.79820251]
[127.80359650 -236.51916504]
[133.47071838 -222.61770630]
[137.74795532 -208.22770691]
[140.59411621 -193.48774719]
[141.98176575 -178.53981018]
[141.89758301 -163.52781677]
[140.34233093 -148.59637451]
[137.33102417 -133.88928223]
[132.89265442 -119.54815674]
[127.06996918 -105.71114349]
[119.91902924 -92.51148224]
[111.50872040 -80.07631683]
[101.92003632 -68.52539062]
[91.24531555 -57.96995163]
[79.58737946 -48.51166534]
[67.05848694 -40.24161148]
[53.77931595 -33.23944855]
[65.74885559 -24.37494850]
[63.79393387 -8.67498589]
[69.45671844 5.21504068]
[75.11950684 19.10506821]
[80.78229523 32.99509430]
[86.44507599 46.88512039]
[101.93759155 45.21704865]
[117.27354431 47.97547913]
[131.21377563 54.93753052]
[142.63191223 65.54066467]
[150.60536194 78.92814636]
[154.48985291 94.01824188]
[153.97152710 109.59167480]
[149.09225464 124.39009094]
[140.24629211 137.21775818]
[128.14839172 147.03822327]
[134.01736450 160.84239197]
[139.88632202 174.64657593]
[145.75527954 188.45074463]
[151.62423706 202.25492859]
[157.49319458 216.05909729]
[163.36216736 229.86328125]
[175.88214111 239.53594971]
[173.74139404 254.27590942]
[179.61035156 268.08007812]
[193.76704407 263.10574341]
[208.21334839 259.04864502]
[222.88990784 255.92547607]
[237.73640442 253.74905396]
[252.69186401 252.52832031]
[267.69479370 252.26829529]
[282.68356323 252.97006226]
[297.59658813 254.63070679]
[312.37255859 257.24343872]
[326.95077515 260.79748535]
[341.27130127 265.27828979]
[355.27536011 270.66738892]
[368.90533447 276.94265747]
[382.10525513 284.07833862]
[394.82089233 292.04507446]
[406.99993896 300.81011963]
[418.59240723 310.33749390]
[429.55059814 320.58801270]
[439.82955933 331.51956177]
[449.38699341 343.08724976]
[458.18362427 355.24349976]
[466.18334961 367.93838501]
[473.35327148 381.11975098]
[479.66390991 394.73336792]
[485.08938599 408.72338867]
[489.60733032 423.03225708]
[493.19921875 437.60119629]
[495.85031128 452.37033081]
[497.54968262 467.27896118]
[498.29034424 482.26586914]
[498.06930542 497.26943970]
[496.88739014 512.22802734]
[494.74954224 527.08013916]
[491.66445923 541.76470947]
[487.64489746 556.22149658]
[482.70733643 570.39105225]
[476.87207031 584.21514893]
[470.16308594 597.63696289]
[462.60794067 610.60137939]
[454.23767090 623.05505371]
[445.08670044 634.94683838]
[435.19259644 646.22796631]
[424.59603882 656.85192871]
[413.34060669 666.77514648]
[401.47247314 675.95684814]
[389.04046631 684.35925293]
[376.09567261 691.94793701]
[362.69125366 698.69158936]
[348.88229370 704.56256104]
[334.72555542 709.53674316]
[320.27920532 713.59368896]
[305.60260010 716.71673584]
[290.75607300 718.89294434]
[275.80062866 720.11352539]
[260.79766846 720.37341309]
[245.80891418 719.67144775]
[230.89591980 718.01062012]
[216.11997986 715.39776611]
[201.54180908 711.84356689]
[187.22129822 707.36260986]
[173.21731567 701.97332764]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 149]
[36 148]
[38 146]
[39 145]
[40 144]
[41 143]
[42 142]
[43 141]
[44 140]
[55 130]
[56 129]
[57 128]
[58 127]
[59 126]
[61 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
