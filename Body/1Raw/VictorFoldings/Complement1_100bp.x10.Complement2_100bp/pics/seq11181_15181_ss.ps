%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAUxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[93.96672821 364.50482178]
[105.44986725 353.89013672]
[104.55705261 338.91671753]
[103.66423798 323.94332886]
[95.18311310 311.69915771]
[102.08529663 297.46292114]
[101.19248199 282.48950195]
[100.29966736 267.51611328]
[99.40684509 252.54269409]
[90.92572784 240.29852295]
[97.82790375 226.06228638]
[88.99157715 217.80117798]
[88.12521362 205.33389282]
[96.23736572 195.30615234]
[95.56758118 180.32110596]
[87.26969147 167.95201111]
[94.38306427 153.82011414]
[93.71327972 138.83508301]
[90.27424622 132.29330444]
[93.14675903 123.62229156]
[92.70014954 108.62894440]
[83.16566467 120.20881653]
[68.67498779 124.08442688]
[54.63279343 118.81027222]
[46.27647018 106.35346985]
[46.72271729 91.36010742]
[55.80509949 79.42234039]
[70.13611603 74.99265289]
[84.37064362 79.72322083]
[93.19992065 91.85075378]
[94.53815460 76.91056824]
[95.87638855 61.97038269]
[97.21462250 47.03019714]
[98.55285645 32.09001541]
[96.35503387 27.35539246]
[96.20781708 22.71517372]
[97.73186493 18.93465233]
[100.29905701 16.51766014]
[94.47483826 1.80749297]
[103.84314728 -9.77197170]
[105.84716034 -24.63749886]
[107.85117340 -39.50302887]
[109.85518646 -54.36855698]
[111.85919952 -69.23408508]
[110.06802368 -73.18954468]
[109.66885376 -77.11448669]
[110.48114777 -80.57505798]
[112.20204926 -83.24060059]
[114.45056915 -84.91461182]
[117.33583832 -99.63450623]
[120.22111511 -114.35439301]
[118.80083466 -123.37773132]
[123.26047516 -129.27124023]
[126.36458588 -143.94653320]
[129.46868896 -158.62184143]
[132.57279968 -173.29714966]
[126.46038055 -190.66723633]
[138.69030762 -203.25277710]
[141.57557678 -217.97267151]
[144.46084595 -232.69255066]
[147.34613037 -247.41244507]
[150.23139954 -262.13232422]
[153.11666870 -276.85223389]
[156.00193787 -291.57211304]
[158.88720703 -306.29202271]
[153.94888306 -321.32275391]
[163.98980713 -332.32409668]
[166.87507629 -347.04397583]
[169.76036072 -361.76385498]
[172.64562988 -376.48376465]
[158.17228699 -380.44982910]
[144.03138733 -385.47399902]
[130.30014038 -391.52874756]
[117.05356598 -398.58108521]
[104.36399841 -406.59246826]
[92.30075073 -415.51910400]
[80.92969513 -425.31228638]
[70.31295776 -435.91851807]
[60.50850677 -447.27987671]
[51.56990051 -459.33425903]
[43.54595947 -472.01589966]
[36.48050308 -485.25546265]
[30.41212463 -498.98071289]
[25.37396622 -513.11663818]
[21.39354515 -527.58599854]
[18.49260139 -542.30987549]
[16.68697929 -557.20776367]
[15.98654079 -572.19830322]
[16.39511108 -587.19964600]
[17.91045761 -602.12982178]
[20.52430534 -616.90734863]
[24.22237968 -631.45147705]
[28.98447990 -645.68280029]
[34.78459549 -659.52349854]
[41.59105301 -672.89807129]
[49.36667633 -685.73345947]
[58.06899261 -697.95953369]
[67.65047455 -709.50952148]
[78.05879974 -720.32037354]
[89.23710632 -730.33300781]
[101.12434387 -739.49273682]
[113.65560150 -747.74951172]
[126.76242065 -755.05834961]
[140.37322998 -761.37921143]
[154.41368103 -766.67755127]
[168.80708313 -770.92456055]
[183.47483826 -774.09698486]
[198.33683777 -776.17749023]
[213.31188965 -777.15466309]
[228.31822205 -777.02325439]
[243.27386475 -775.78393555]
[258.09713745 -773.44348145]
[272.70709229 -770.01464844]
[287.02389526 -765.51623535]
[300.96942139 -759.97277832]
[314.46743774 -753.41448975]
[327.44424438 -745.87725830]
[339.82894897 -737.40228271]
[351.55395508 -728.03576660]
[362.55520630 -717.82891846]
[372.77258301 -706.83740234]
[382.15029907 -695.12139893]
[390.63717651 -682.74481201]
[398.18679810 -669.77520752]
[404.75799561 -656.28344727]
[410.31481934 -642.34326172]
[414.82693481 -628.03076172]
[418.26971436 -613.42413330]
[420.62435913 -598.60308838]
[421.87799072 -583.64862061]
[422.02377319 -568.64245605]
[421.06091309 -553.66644287]
[418.99462891 -538.80249023]
[415.83627319 -524.13171387]
[411.60305786 -509.73422241]
[406.31808472 -495.68872070]
[400.01025391 -482.07186890]
[392.71401978 -468.95803833]
[384.46920776 -456.41891479]
[375.32086182 -444.52288818]
[365.31893921 -433.33502197]
[354.51806641 -422.91635132]
[342.97723389 -413.32382202]
[330.75949097 -404.60980225]
[317.93157959 -396.82189941]
[304.56350708 -390.00265503]
[290.72833252 -384.18930054]
[276.50161743 -379.41357422]
[261.96102905 -375.70156860]
[247.18603516 -373.07357788]
[232.25727844 -371.54394531]
[217.25633240 -371.12103271]
[202.26512146 -371.80712891]
[187.36552429 -373.59848022]
[184.48023987 -358.87860107]
[181.59497070 -344.15869141]
[178.70970154 -329.43881226]
[183.85440063 -315.46093750]
[173.60710144 -303.40673828]
[170.72183228 -288.68685913]
[167.83656311 -273.96694946]
[164.95129395 -259.24707031]
[162.06600952 -244.52717590]
[159.18074036 -229.80728149]
[156.29547119 -215.08738708]
[153.41020203 -200.36750793]
[159.89624023 -190.15682983]
[157.61293030 -177.86982727]
[147.24810791 -170.19303894]
[144.14399719 -155.51773071]
[141.03988647 -140.84243774]
[137.93577576 -126.16712952]
[134.94100952 -111.46912384]
[132.05572510 -96.74922943]
[129.17045593 -82.02934265]
[126.72473145 -67.23007202]
[124.72071838 -52.36454391]
[122.71670532 -37.49901581]
[120.71269226 -22.63348579]
[118.70867920 -7.76795769]
[124.67623901 5.87892723]
[115.16458893 18.52167320]
[113.49304199 33.42824936]
[112.15480804 48.36843109]
[110.81657410 63.30861664]
[109.47834015 78.24880219]
[108.14010620 93.18898773]
[107.69350433 108.18233490]
[108.14010620 123.17568970]
[108.69831848 138.16529846]
[109.36810303 153.15032959]
[117.71389771 166.59126282]
[110.55261993 179.65132141]
[111.22240448 194.63636780]
[121.48988342 209.92231750]
[112.80131531 225.16946411]
[121.34629822 238.48463440]
[114.38025665 251.64987183]
[115.27307129 266.62329102]
[116.16588593 281.59667969]
[117.05870056 296.57009888]
[125.60368347 309.88525391]
[118.63764191 323.05050659]
[119.53045654 338.02392578]
[120.42327118 352.99731445]
[133.08641052 362.17224121]
[136.83924866 377.35281372]
[129.90982056 391.37127686]
[115.56997681 397.60848999]
[100.59056854 393.11947632]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 205]
[3 204]
[4 203]
[6 201]
[7 200]
[8 199]
[9 198]
[11 196]
[14 194]
[15 193]
[17 191]
[18 190]
[20 189]
[21 188]
[30 187]
[31 186]
[32 185]
[33 184]
[34 183]
[38 182]
[40 180]
[41 179]
[42 178]
[43 177]
[44 176]
[49 175]
[50 174]
[51 173]
[53 172]
[54 171]
[55 170]
[56 169]
[58 166]
[59 165]
[60 164]
[61 163]
[62 162]
[63 161]
[64 160]
[65 159]
[67 157]
[68 156]
[69 155]
[70 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
