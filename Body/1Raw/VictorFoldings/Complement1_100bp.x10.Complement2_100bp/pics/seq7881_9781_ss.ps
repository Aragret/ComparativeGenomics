%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[186.18278503 326.78231812]
[196.34504700 315.71228027]
[208.01089478 306.23989868]
[200.35029602 293.34356689]
[192.68969727 280.44723511]
[184.93330383 267.60830688]
[177.08154297 254.82745361]
[169.22979736 242.04661560]
[161.37803650 229.26577759]
[148.12332153 222.47151184]
[147.49223328 206.66290283]
[139.64048767 193.88206482]
[131.78872681 181.10121155]
[123.93697357 168.32037354]
[116.08521271 155.53953552]
[115.36312866 170.52214050]
[107.84069061 183.49954224]
[95.19843292 191.57255554]
[80.26068115 192.93763733]
[66.36455536 187.28982544]
[56.61448669 175.89086914]
[53.18866730 161.28732300]
[56.85243607 146.74163818]
[66.78729248 135.50337219]
[80.77377319 130.08319092]
[95.68724823 131.69195557]
[108.19603729 139.97029114]
[102.53325653 126.08026123]
[96.87046814 112.19023132]
[90.89890289 98.43013000]
[84.62154388 84.80681610]
[78.34418488 71.18350220]
[65.54175568 61.88787842]
[67.24269104 47.09071350]
[60.96533203 33.46739960]
[54.68797302 19.84408379]
[41.88554764 10.54846382]
[43.58648300 -4.24870110]
[37.30912399 -17.87201691]
[30.72909546 -31.35175133]
[23.84968185 -44.68117905]
[16.97027016 -58.01060867]
[10.09085655 -71.34004211]
[3.21144438 -84.66947174]
[-3.66796803 -97.99889374]
[-10.54738045 -111.32832336]
[-24.33945084 -105.41460419]
[-38.51826096 -100.49987793]
[-53.01156235 -96.60917664]
[-67.74549103 -93.76233673]
[-82.64497375 -91.97386169]
[-97.63408661 -91.25286102]
[-112.63644409 -91.60301971]
[-127.57559204 -93.02254486]
[-142.37541199 -95.50420380]
[-156.96047974 -99.03535461]
[-171.25648499 -103.59799957]
[-185.19055176 -109.16889191]
[-198.69169617 -115.71963501]
[-211.69111633 -123.21685791]
[-224.12257385 -131.62234497]
[-235.92271423 -140.89328003]
[-247.03138733 -150.98239136]
[-257.39202881 -161.83830261]
[-266.95178223 -173.40567017]
[-275.66198730 -185.62554932]
[-283.47824097 -198.43568420]
[-290.36071777 -211.77078247]
[-296.27432251 -225.56289673]
[-301.18896484 -239.74174500]
[-305.07955933 -254.23507690]
[-307.92626953 -268.96902466]
[-309.71463013 -283.86853027]
[-310.43551636 -298.85763550]
[-310.08523560 -313.85998535]
[-308.66561890 -328.79913330]
[-306.18383789 -343.59893799]
[-302.65255737 -358.18399048]
[-298.08981323 -372.47994995]
[-292.51882935 -386.41397095]
[-285.96795654 -399.91506958]
[-278.47064209 -412.91442871]
[-270.06506348 -425.34582520]
[-260.79403687 -437.14587402]
[-250.70483398 -448.25448608]
[-239.84886169 -458.61502075]
[-228.28141785 -468.17471313]
[-216.06146240 -476.88482666]
[-203.25126648 -484.70098877]
[-189.91612244 -491.58334351]
[-176.12396240 -497.49685669]
[-161.94506836 -502.41137695]
[-147.45170593 -506.30184937]
[-132.71774292 -509.14846802]
[-117.81822968 -510.93670654]
[-102.82910156 -511.65747070]
[-87.82675171 -511.30709839]
[-72.88762665 -509.88732910]
[-58.08784485 -507.40545654]
[-43.50283051 -503.87408447]
[-29.20690346 -499.31121826]
[-15.27291393 -493.74011230]
[-1.77186608 -487.18914795]
[11.22743988 -479.69174194]
[23.65876389 -471.28607178]
[35.45875549 -462.01495361]
[46.56728363 -451.92565918]
[56.92774582 -441.06961060]
[66.48734283 -429.50207520]
[75.19736481 -417.28207397]
[83.01342010 -404.47180176]
[89.89568329 -391.13659668]
[95.80908203 -377.34439087]
[100.72348785 -363.16546631]
[104.61385345 -348.67208862]
[107.46035767 -333.93807983]
[109.24848938 -319.03857422]
[109.96913910 -304.04943848]
[109.61863708 -289.04708862]
[108.19876862 -274.10797119]
[105.71676636 -259.30822754]
[102.18528748 -244.72322083]
[97.62231445 -230.42733765]
[92.05110168 -216.49339294]
[85.50004578 -202.99238586]
[78.00252533 -189.99313354]
[69.59674835 -177.56187439]
[60.32555008 -165.76196289]
[50.23617554 -154.65350342]
[39.38003159 -144.29313660]
[27.81244469 -134.73362732]
[15.59235954 -126.02369690]
[2.78204846 -118.20774078]
[9.66146088 -104.87831116]
[16.54087448 -91.54888153]
[23.42028618 -78.21945190]
[30.29969788 -64.89002228]
[37.17911148 -51.56059265]
[44.05852509 -38.23116302]
[47.28826904 -36.81656265]
[49.99329758 -33.76732254]
[51.41278839 -29.34710312]
[50.93243790 -24.14937782]
[57.20980072 -10.52606201]
[69.56322479 -2.20487332]
[68.31128693 13.56672192]
[74.58864594 27.19003868]
[80.86601257 40.81335449]
[93.21943665 49.13454437]
[91.96749878 64.90613556]
[98.24485779 78.52945709]
[104.52221680 92.15277100]
[107.91429901 93.98748016]
[110.48120117 97.30845642]
[111.57727051 101.71363831]
[110.76049042 106.52745056]
[116.42327881 120.41747284]
[122.08606720 134.30749512]
[128.86605835 147.68777466]
[136.71781921 160.46861267]
[144.56956482 173.24946594]
[152.42132568 186.03030396]
[160.27308655 198.81114197]
[174.08940125 206.51957703]
[174.15887451 221.41401672]
[182.01063538 234.19485474]
[189.86239624 246.97570801]
[197.71414185 259.75653076]
[204.87265015 265.43051147]
[205.58602905 272.78665161]
[213.24661255 285.68298340]
[220.90721130 298.57928467]
[234.80596924 292.86593628]
[249.38851929 289.23724365]
[264.34399414 287.77053833]
[279.35366821 288.49710083]
[294.09756470 291.40142822]
[308.26144409 296.42163086]
[321.54339600 303.45068359]
[333.66030884 312.33877563]
[344.35394287 322.89645386]
[353.39630127 334.89868164]
[360.59469604 348.08963013]
[365.79565430 362.18811035]
[368.88836670 376.89367676]
[369.80685425 391.89279175]
[368.53158569 406.86584473]
[365.08972168 421.49359131]
[359.55462646 435.46429443]
[352.04431152 448.48016357]
[342.71881104 460.26376343]
[331.77691650 470.56390381]
[319.45187378 479.16104126]
[306.00637817 485.87197876]
[291.72702026 490.55358887]
[276.91815186 493.10614014]
[261.89544678 493.47521973]
[246.97911072 491.65295410]
[232.48707581 487.67816162]
[218.72825623 481.63558960]
[205.99591064 473.65405273]
[194.56143188 463.90362549]
[184.66853333 452.59219360]
[176.52812195 439.96081543]
[170.31365967 426.27877808]
[166.15765381 411.83767700]
[164.14866638 396.94534302]
[164.32951355 381.91918945]
[166.69636536 367.07949829]
[171.19874573 352.74261475]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 172]
[4 171]
[5 170]
[6 168]
[7 167]
[8 166]
[9 165]
[11 163]
[12 162]
[13 161]
[14 160]
[15 159]
[27 158]
[28 157]
[29 156]
[30 152]
[31 151]
[32 150]
[34 148]
[35 147]
[36 146]
[38 144]
[39 143]
[40 139]
[41 138]
[42 137]
[43 136]
[44 135]
[45 134]
[46 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
