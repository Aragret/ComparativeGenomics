%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[24.40382385 309.69393921]
[32.33118820 322.47143555]
[37.98495865 336.40496826]
[41.20246124 351.09359741]
[41.89112473 366.11468506]
[40.03113556 381.03610229]
[35.67600632 395.42849731]
[28.95104408 408.87774658]
[20.04973984 420.99694824]
[9.22820187 431.43737793]
[-3.20221281 439.89862061]
[-16.88385582 446.13726807]
[-31.42308044 449.97378540]
[-46.40156174 451.29782104]
[-61.38834381 450.07128906]
[-75.95222473 446.32940674]
[-89.67416382 440.17993164]
[-102.15937042 431.79974365]
[-113.04860687 421.42993164]
[-122.02857208 409.36892700]
[-128.84089661 395.96368408]
[-133.28956604 381.59994507]
[-135.24659729 366.69094849]
[-134.65568542 351.66567993]
[-131.53381348 336.95642090]
[-125.97081757 322.98641968]
[-118.12675476 310.15759277]
[-108.22731018 298.83908081]
[-96.55731201 289.35650635]
[-83.45253754 281.98269653]
[-69.29002380 276.92987061]
[-54.47726059 274.34335327]
[-39.44044113 274.29757690]
[-24.61220360 276.79385376]
[-10.41918945 281.76037598]
[-3.14595985 268.64169312]
[4.12726974 255.52297974]
[11.40049934 242.40429688]
[18.67372894 229.28559875]
[9.52673626 218.64266968]
[4.55141640 205.48878479]
[4.36448002 191.39678955]
[9.00876904 178.05914307]
[17.94566345 167.08468628]
[30.11746597 159.80455017]
[44.07255936 157.11073303]
[58.13850784 159.34684753]
[65.60624695 146.33789062]
[72.97693634 133.27371216]
[80.25016785 120.15501404]
[87.52339935 107.03631592]
[87.47257233 93.05458069]
[99.35791016 85.69045258]
[106.63114166 72.57176208]
[93.40906525 79.65531158]
[78.42692566 80.38700867]
[64.57752228 74.62556458]
[54.53498077 63.48342896]
[50.23833847 49.11196899]
[52.51722336 34.28608704]
[60.93161011 21.86843491]
[73.85681152 14.25666332]
[88.79718018 12.92048645]
[102.86796570 18.11789894]
[113.35231018 28.84536171]
[118.22586060 43.03157043]
[116.54718781 57.93859482]
[126.03608704 46.32133102]
[135.52497864 34.70406723]
[144.75209045 22.87779808]
[153.71278381 10.84842110]
[162.67347717 -1.18095660]
[171.63417053 -13.21033382]
[180.59486389 -25.23971176]
[166.54495239 -19.98613930]
[151.59936523 -21.26263237]
[138.64385986 -28.82271767]
[130.17994690 -41.20666122]
[127.84186554 -56.02332306]
[132.08106995 -70.41182709]
[142.07904053 -81.59399414]
[155.90530396 -87.41070557]
[170.89025879 -86.73886108]
[184.14051819 -79.70816803]
[193.09767151 -67.67615509]
[196.03224182 -52.96601486]
[192.37702942 -38.41690063]
[203.33293152 -48.66229248]
[214.28884888 -58.90768433]
[225.24475098 -69.15307617]
[236.20066833 -79.39846802]
[247.15657043 -89.64385986]
[258.11248779 -99.88925171]
[248.74192810 -111.61191559]
[240.30796814 -124.02548981]
[232.86132812 -137.05529785]
[226.44680786 -150.62298584]
[221.10298157 -164.64695740]
[216.86198425 -179.04286194]
[213.74931335 -193.72413635]
[211.78369141 -208.60246277]
[210.97694397 -223.58837891]
[211.33393860 -238.59173584]
[212.85250854 -253.52232361]
[215.52351379 -268.29031372]
[219.33091736 -282.80694580]
[224.25180054 -296.98486328]
[230.25657654 -310.73880005]
[237.30912781 -323.98605347]
[245.36703491 -336.64694214]
[254.38185120 -348.64535522]
[264.29934692 -359.90908813]
[275.05987549 -370.37039185]
[286.59872437 -379.96640015]
[298.84649658 -388.63937378]
[311.72952271 -396.33715820]
[325.17034912 -403.01342773]
[339.08810425 -408.62805176]
[353.39910889 -413.14727783]
[368.01730347 -416.54391479]
[382.85473633 -418.79754639]
[397.82220459 -419.89456177]
[412.82965088 -419.82843018]
[427.78686523 -418.59954834]
[442.60388184 -416.21524048]
[457.19155884 -412.68991089]
[471.46215820 -408.04476929]
[485.32992554 -402.30767822]
[498.71136475 -395.51321411]
[511.52606201 -387.70220947]
[523.69696045 -378.92163086]
[535.15075684 -369.22430420]
[545.81866455 -358.66857910]
[555.63653564 -347.31787109]
[564.54522705 -335.24047852]
[572.49127197 -322.50906372]
[579.42681885 -309.20016479]
[585.31011963 -295.39382935]
[590.10589600 -281.17312622]
[593.78521729 -266.62350464]
[596.32592773 -251.83253479]
[597.71289062 -236.88916016]
[597.93762207 -221.88322449]
[596.99884033 -206.90501404]
[594.90222168 -192.04458618]
[591.66027832 -177.39132690]
[587.29254150 -163.03334045]
[581.82531738 -149.05700684]
[575.29150391 -135.54637146]
[567.73034668 -122.58269501]
[559.18731689 -110.24394226]
[549.71380615 -98.60430908]
[539.36676025 -87.73381042]
[528.20849609 -77.69781494]
[516.30609131 -68.55668640]
[503.73104858 -60.36540604]
[490.55908203 -53.17322922]
[476.86935425 -47.02341461]
[462.74426270 -41.95294952]
[448.26870728 -37.99232864]
[433.52975464 -35.16537094]
[418.61605835 -33.48907471]
[403.61730957 -32.97352600]
[388.62368774 -33.62182617]
[373.72543335 -35.43007278]
[359.01208496 -38.38739395]
[344.57214355 -42.47600174]
[330.49246216 -47.67130661]
[316.85775757 -53.94206238]
[303.74993896 -61.25055695]
[291.24792480 -69.55283356]
[279.42687988 -78.79896545]
[268.35787964 -88.93334198]
[257.40197754 -78.68795013]
[246.44606018 -68.44255829]
[235.49014282 -58.19716644]
[224.53424072 -47.95177460]
[213.57832336 -37.70638275]
[202.62242126 -27.46099091]
[192.62425232 -16.27901649]
[183.66354370 -4.24963808]
[174.70285034 7.77973938]
[165.74215698 19.80911636]
[156.78146362 31.83849525]
[156.92701721 35.36144257]
[155.37342834 39.12992096]
[152.02389526 42.34455490]
[147.14224243 44.19296646]
[137.65335083 55.81023026]
[128.16445923 67.42749023]
[119.74983215 79.84498596]
[112.47660065 92.96368408]
[112.52742767 106.94541931]
[100.64208984 114.30954742]
[93.36885834 127.42823792]
[86.09563446 140.54693604]
[84.67146301 149.56965637]
[78.61520386 153.80563354]
[71.14746094 166.81459045]
[81.04857635 179.48249817]
[85.32007599 194.94293213]
[83.33640289 210.82061768]
[75.43065643 224.68794250]
[62.83909225 234.43614197]
[47.50790405 238.59591675]
[31.79242325 236.55882263]
[24.51919365 249.67752075]
[17.24596405 262.79620361]
[9.97273445 275.91491699]
[2.69950461 289.03359985]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 210]
[36 209]
[37 208]
[38 207]
[39 206]
[47 199]
[48 198]
[49 196]
[50 195]
[51 194]
[53 192]
[54 191]
[67 190]
[68 189]
[69 188]
[70 184]
[71 183]
[72 182]
[73 181]
[74 180]
[87 179]
[88 178]
[89 177]
[90 176]
[91 175]
[92 174]
[93 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
