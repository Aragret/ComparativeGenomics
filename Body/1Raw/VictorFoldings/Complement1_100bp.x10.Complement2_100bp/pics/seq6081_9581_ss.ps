%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[239.18226624 336.67181396]
[248.39189148 324.81372070]
[233.85809326 321.55517578]
[229.28833008 306.40832520]
[218.48616028 296.00094604]
[207.68400574 285.59356689]
[196.88185120 275.18618774]
[186.07969666 264.77880859]
[190.95660400 278.96386719]
[191.69711304 293.94558716]
[188.24282837 308.54241943]
[180.86616516 321.60324097]
[170.14888000 332.09799194]
[156.93617249 339.19900513]
[142.27006531 342.34631348]
[127.30719757 341.29165649]
[113.22757721 336.11822510]
[101.14160156 327.23400879]
[92.00241089 315.33966064]
[86.53076935 301.37322998]
[85.15818024 286.43618774]
[87.99290466 271.70645142]
[94.81137848 258.34576416]
[105.07586670 247.40774536]
[117.97687531 239.75502014]
[132.49696350 235.99113464]
[147.49104309 236.41291809]
[161.77658081 240.98709106]
[174.22956848 249.35525513]
[166.95634460 236.23657227]
[159.68312073 223.11787415]
[152.40988159 209.99917603]
[145.13665771 196.88047791]
[137.86343384 183.76179504]
[130.59019470 170.64309692]
[123.31697083 157.52439880]
[108.87596130 161.43252563]
[93.91931915 161.77186584]
[79.31592560 158.52270508]
[65.91412354 151.87379456]
[54.49246979 142.21141052]
[45.71446991 130.09683228]
[40.09006500 116.23384857]
[37.94599533 101.42779541]
[39.40681458 86.53880310]
[44.38765717 72.43180847]
[52.59917450 59.92631912]
[63.56433868 49.74882507]
[56.29110718 36.63013077]
[49.01787949 23.51143837]
[41.74464798 10.39274406]
[37.94528961 8.29064274]
[35.28048325 5.38146067]
[33.86463928 2.12097168]
[33.65238571 -1.04471290]
[34.45558548 -3.73041868]
[27.97608757 -17.25876427]
[21.49659348 -30.78710938]
[9.61292934 -35.80122375]
[4.49465132 -47.20240784]
[8.38801575 -58.65528107]
[2.11065555 -72.27859497]
[-4.16670513 -85.90191650]
[-15.97439861 -91.09239960]
[-20.92236328 -102.56852722]
[-16.85891342 -113.96216583]
[-22.93274689 -127.67742920]
[-29.00658035 -141.39270020]
[-35.08041382 -155.10795593]
[-49.51740646 -150.95019531]
[-64.38608551 -148.79705811]
[-79.40946960 -148.68865967]
[-94.30767822 -150.62702942]
[-108.80315399 -154.57604980]
[-122.62587738 -160.46215820]
[-135.51832581 -168.17568970]
[-147.24031067 -177.57295227]
[-157.57348633 -188.47888184]
[-166.32531738 -200.69032288]
[-173.33279419 -213.97975159]
[-178.46536255 -228.09960938]
[-181.62739563 -242.78686523]
[-182.75999451 -257.76788330]
[-181.84205627 -272.76358032]
[-178.89068604 -287.49462891]
[-173.96086121 -301.68652344]
[-167.14442444 -315.07495117]
[-158.56835938 -327.41049194]
[-148.39244080 -338.46328735]
[-136.80622864 -348.02746582]
[-124.02558136 -355.92483521]
[-110.28857422 -362.00830078]
[-95.85113525 -366.16448975]
[-80.98221588 -368.31604004]
[-65.95882416 -368.42279053]
[-51.06082916 -366.48281860]
[-36.56577682 -362.53222656]
[-22.74369621 -356.64462280]
[-9.85208702 -348.92968750]
[1.86888909 -339.53115845]
[12.20087624 -328.62411499]
[20.95139694 -316.41174316]
[27.95743370 -303.12155151]
[33.08846664 -289.00112915]
[36.24891281 -274.31353760]
[37.37989044 -259.33239746]
[36.46033096 -244.33677673]
[33.50736618 -229.60607910]
[28.57600594 -215.41468811]
[21.75812149 -202.02700806]
[13.18072510 -189.69241333]
[3.00360680 -178.64071655]
[-8.58363819 -169.07778931]
[-21.36514854 -161.18179321]
[-15.29131413 -147.46652222]
[-9.21748066 -133.75126648]
[-3.14364624 -120.03599548]
[11.57003021 -110.47175598]
[9.45661068 -92.17927551]
[15.73397160 -78.55595398]
[22.01133156 -64.93264008]
[36.86577606 -55.58852768]
[35.02493668 -37.26660538]
[41.50443268 -23.73826027]
[47.98392868 -10.20991421]
[54.86334229 3.11951470]
[62.13657379 16.23820877]
[69.40979767 29.35690308]
[76.68302917 42.47559738]
[91.12403870 38.56747437]
[106.08068085 38.22813416]
[120.68407440 41.47729492]
[134.08587646 48.12619781]
[145.50753784 57.78859711]
[154.28552246 69.90316772]
[159.90992737 83.76615143]
[162.05400085 98.57220459]
[160.59318542 113.46119690]
[155.61235046 127.56819153]
[147.40081787 140.07368469]
[136.43566895 150.25117493]
[143.70889282 163.36987305]
[150.98211670 176.48855591]
[158.25535583 189.60725403]
[165.52857971 202.72595215]
[172.80180359 215.84465027]
[180.07504272 228.96333313]
[187.34826660 242.08203125]
[196.48707581 253.97666931]
[207.28923035 264.38403320]
[218.09138489 274.79141235]
[228.89353943 285.19879150]
[239.69569397 295.60617065]
[255.00213623 299.60910034]
[258.79928589 314.01156616]
[270.30642700 304.36700439]
[282.77359009 296.00027466]
[296.05944824 289.00613403]
[310.01348877 283.46383667]
[324.47756958 279.43618774]
[339.28784180 276.96881104]
[354.27648926 276.08969116]
[369.27365112 276.80877686]
[384.10943604 279.11788940]
[398.61569214 282.99090576]
[412.62808228 288.38394165]
[425.98785400 295.23583984]
[438.54360962 303.46902466]
[450.15307617 312.99017334]
[460.68472290 323.69140625]
[470.01922607 335.45150757]
[478.05078125 348.13714600]
[484.68841553 361.60467529]
[489.85693359 375.70141602]
[493.49771118 390.26773071]
[495.56958008 405.13848877]
[496.04898071 420.14520264]
[494.93054199 435.11788940]
[492.22692871 449.88687134]
[487.96875000 464.28479004]
[482.20425415 478.14849854]
[474.99877930 491.32095337]
[466.43395996 503.65286255]
[456.60684204 515.00451660]
[445.62875366 525.24725342]
[433.62414551 534.26507568]
[420.72897339 541.95574951]
[407.08935547 548.23217773]
[392.85989380 553.02319336]
[378.20175171 556.27459717]
[363.28106689 557.94940186]
[348.26687622 558.02880859]
[333.32931519 556.51177979]
[318.63763428 553.41558838]
[304.35830688 548.77526855]
[290.65310669 542.64337158]
[277.67733765 535.08947754]
[265.57803345 526.19909668]
[254.49227905 516.07299805]
[244.54568481 504.82586670]
[235.85096741 492.58520508]
[228.50662231 479.48968506]
[222.59587097 465.68768311]
[218.18569946 451.33560181]
[215.32608032 436.59603882]
[214.04939270 421.63601685]
[214.37013245 406.62506104]
[216.28463745 391.73321533]
[219.77122498 377.12924194]
[224.79039001 362.97863770]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 155]
[4 153]
[5 152]
[6 151]
[7 150]
[8 149]
[29 148]
[30 147]
[31 146]
[32 145]
[33 144]
[34 143]
[35 142]
[36 141]
[48 129]
[49 128]
[50 127]
[51 126]
[56 125]
[57 124]
[58 123]
[61 121]
[62 120]
[63 119]
[66 117]
[67 116]
[68 115]
[69 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
