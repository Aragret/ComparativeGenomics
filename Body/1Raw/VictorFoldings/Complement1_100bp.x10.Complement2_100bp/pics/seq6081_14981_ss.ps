%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[1.68631721 318.13281250]
[2.81627655 333.10104370]
[2.56030703 348.10968018]
[0.92059290 363.03067017]
[-2.08887649 377.73672485]
[-6.44242430 392.10235596]
[-12.10290718 406.00500488]
[-19.02203178 419.32604980]
[-27.14076424 431.95184326]
[-36.38983536 443.77468872]
[-46.69033813 454.69366455]
[-57.95438385 464.61566162]
[-70.08587646 473.45599365]
[-82.98130798 481.13925171]
[-96.53066254 487.59988403]
[-110.61832428 492.78277588]
[-125.12412262 496.64367676]
[-139.92427063 499.14968872]
[-154.89251709 500.27938843]
[-169.90115356 500.02316284]
[-184.82211304 498.38320923]
[-199.52810669 495.37350464]
[-213.89366150 491.01971436]
[-227.79621887 485.35897827]
[-241.11715698 478.43963623]
[-253.74281311 470.32070923]
[-265.56549072 461.07144165]
[-276.48431396 450.77075195]
[-286.40609741 439.50653076]
[-295.24624634 427.37490845]
[-302.92929077 414.47933960]
[-309.38970947 400.92987061]
[-314.57235718 386.84213257]
[-318.43301392 372.33627319]
[-320.93875122 357.53607178]
[-322.06823730 342.56781006]
[-321.81176758 327.55917358]
[-320.17153931 312.63824463]
[-317.16159058 297.93228149]
[-312.80755615 283.56680298]
[-307.14660645 269.66436768]
[-300.22705078 256.34353638]
[-292.10787964 243.71800232]
[-282.85842896 231.89547729]
[-272.55755615 220.97683716]
[-261.29318237 211.05522156]
[-249.16139221 202.21528625]
[-236.26570129 194.53245544]
[-222.71614075 188.07228088]
[-208.62829590 182.88987732]
[-194.12237549 179.02944946]
[-179.32214355 176.52394104]
[-164.35385132 175.39472961]
[-149.34523010 175.65144348]
[-134.42433167 177.29190063]
[-119.71842957 180.30210876]
[-105.35301971 184.65637207]
[-91.45066071 190.31755066]
[-78.12995148 197.23735046]
[-65.50456238 205.35670471]
[-53.68219376 214.60636902]
[-42.76371765 224.90740967]
[-31.50762367 214.99276733]
[-20.25152779 205.07810974]
[-8.99543095 195.16346741]
[-4.55898046 180.94491577]
[10.91093254 177.62944031]
[22.16702843 167.71478271]
[33.42312241 157.80014038]
[44.30245972 147.47346497]
[47.73248291 130.26295471]
[65.50556183 125.44639587]
[75.83222961 114.56706238]
[86.15889740 103.68772888]
[89.61100006 90.13875580]
[102.96176910 85.98560333]
[113.28843689 75.10626984]
[123.61510468 64.22693634]
[133.94177246 53.34759903]
[144.26843262 42.46826553]
[147.90670776 34.08966827]
[154.83076477 31.50527573]
[158.94754028 16.22906113]
[173.37786865 12.53925037]
[183.86537170 1.81487060]
[183.34974670 -15.67093658]
[195.40263367 -27.87924194]
[212.21810913 -27.59863663]
[216.10697937 -42.93445206]
[230.48078918 -46.83869934]
[240.80744934 -57.71803284]
[251.13412476 -68.59736633]
[261.46078491 -79.47669983]
[271.78744507 -90.35603333]
[282.11413574 -101.23536682]
[292.44079590 -112.11470795]
[302.76745605 -122.99404144]
[313.09414673 -133.87336731]
[303.22189331 -145.18148804]
[294.45196533 -157.36436462]
[286.86138916 -170.31495667]
[280.51690674 -183.91944885]
[275.47427368 -198.05825806]
[271.77777100 -212.60716248]
[269.45989990 -227.43827820]
[268.54104614 -242.42126465]
[269.02929688 -257.42446899]
[270.92031860 -272.31604004]
[274.19750977 -286.96508789]
[278.83209229 -301.24285889]
[284.78329468 -315.02392578]
[291.99887085 -328.18713379]
[300.41534424 -340.61682129]
[309.95880127 -352.20376587]
[320.54534912 -362.84609985]
[332.08197021 -372.45031738]
[344.46722412 -380.93203735]
[357.59234619 -388.21667480]
[371.34191895 -394.24026489]
[385.59515381 -398.94982910]
[400.22674561 -402.30398560]
[415.10815430 -404.27325439]
[430.10861206 -404.84036255]
[445.09622192 -404.00027466]
[459.93930054 -401.76040649]
[474.50744629 -398.14044189]
[488.67257690 -393.17218018]
[502.31021118 -386.89929199]
[515.30053711 -379.37692261]
[527.52935791 -370.67114258]
[538.88922119 -360.85848999]
[549.28027344 -350.02517700]
[558.61120605 -338.26641846]
[566.79998779 -325.68557739]
[573.77471924 -312.39318848]
[579.47406006 -298.50607300]
[583.84796143 -284.14627075]
[586.85791016 -269.44000244]
[588.47753906 -254.51649475]
[588.69256592 -239.50688171]
[587.50109863 -224.54309082]
[584.91363525 -209.75663757]
[580.95288086 -195.27745056]
[575.65368652 -181.23277283]
[569.06256104 -167.74604797]
[561.23748779 -154.93577576]
[552.24725342 -142.91456604]
[542.17077637 -131.78805542]
[531.09667969 -121.65401459]
[519.12225342 -112.60150909]
[506.35275269 -104.71009827]
[492.90039062 -98.04913330]
[478.88339233 -92.67714691]
[464.42495728 -88.64135742]
[449.65209961 -85.97722626]
[434.69470215 -84.70816803]
[419.68417358 -84.84532928]
[404.75247192 -86.38751984]
[390.03076172 -89.32117462]
[375.64849854 -93.62051392]
[361.73199463 -99.24774933]
[348.40362549 -106.15344238]
[335.78045654 -114.27688599]
[323.97348022 -123.54670715]
[313.64678955 -112.66737366]
[303.32012939 -101.78803253]
[292.99346924 -90.90869904]
[282.66677856 -80.02936554]
[272.34011841 -69.15003204]
[262.01345825 -58.27069855]
[251.68678284 -47.39136505]
[241.36012268 -36.51202774]
[238.20986938 -21.95437813]
[223.09744263 -17.27196693]
[225.23204041 -4.56476450]
[219.57351685 7.22774172]
[207.98571777 13.70334244]
[194.58975220 12.30237198]
[184.10224915 23.02675056]
[180.73562622 37.53588867]
[165.55514526 41.99277878]
[155.14778137 52.79493332]
[144.82110596 63.67426682]
[134.49443054 74.55360413]
[124.16777039 85.43293762]
[113.84110260 96.31227112]
[110.38899994 109.86124420]
[97.03823090 114.01439667]
[86.71156311 124.89373016]
[76.38489532 135.77307129]
[75.94014740 148.66357422]
[67.11506653 157.51239014]
[55.02683640 157.96096802]
[69.82615662 160.40640259]
[77.27442932 173.42651367]
[71.88106537 187.42335510]
[57.62185287 192.07897949]
[45.00815201 183.96144104]
[43.33777618 169.05622864]
[32.08168030 178.97088623]
[20.82558441 188.88552856]
[15.58402157 203.81324768]
[0.91921997 206.41955566]
[-10.33687592 216.33421326]
[-21.59297180 226.24885559]
[-32.84906769 236.16351318]
[-24.00852966 248.29486084]
[-16.32505417 261.19015503]
[-9.86419773 274.73941040]
[-4.68108273 288.82699585]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 206]
[63 205]
[64 204]
[65 203]
[67 201]
[68 200]
[69 199]
[70 193]
[72 190]
[73 189]
[74 188]
[76 186]
[77 185]
[78 184]
[79 183]
[80 182]
[82 181]
[84 179]
[85 178]
[88 174]
[90 172]
[91 171]
[92 170]
[93 169]
[94 168]
[95 167]
[96 166]
[97 165]
[98 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
