%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[114.58057404 639.80548096]
[103.93447876 629.20886230]
[94.73090363 617.33776855]
[87.12097168 604.38720703]
[81.22966003 590.56976318]
[77.15368652 576.11242676]
[74.96000671 561.25256348]
[74.68462372 546.23413086]
[76.33206940 531.30383301]
[79.87528992 516.70678711]
[85.25610352 502.68270874]
[92.38614655 489.46185303]
[101.14833832 477.26135254]
[111.39880371 466.28152466]
[122.96921539 456.70269775]
[135.66957092 448.68215942]
[149.29133606 442.35159302]
[163.61080933 437.81497192]
[160.94500732 423.05374146]
[158.27922058 408.29254150]
[155.61341858 393.53131104]
[151.33122253 387.50765991]
[153.01953125 378.53060913]
[150.57380676 363.73132324]
[138.72402954 350.78723145]
[145.35090637 333.60684204]
[142.68511963 318.84561157]
[140.01931763 304.08441162]
[137.35351562 289.32318115]
[134.68772888 274.56198120]
[132.02192688 259.80075073]
[128.91781616 245.12544250]
[125.37815094 230.54907227]
[121.83847809 215.97270203]
[118.29880524 201.39631653]
[114.75913239 186.81994629]
[110.89482880 172.32624817]
[106.70781708 157.92247009]
[103.81048584 155.91304016]
[101.74249268 152.40042114]
[101.19974518 147.78970337]
[102.67091370 142.78143311]
[99.13124084 128.20506287]
[95.59156799 113.62868500]
[86.08058929 103.38013458]
[89.83205414 89.91098022]
[86.29238129 75.33460999]
[79.36062622 88.63689423]
[65.98564148 95.42732239]
[51.15597534 93.17322540]
[40.40271759 82.71533966]
[37.73657227 67.95418549]
[44.15194321 54.39531326]
[57.25605774 47.09584427]
[72.16139984 48.77830505]
[83.30924225 58.81618500]
[81.52677917 43.92246628]
[72.20440674 31.13950729]
[78.37449646 17.58298302]
[76.59202576 2.68926620]
[74.80956268 -12.20445061]
[73.02709198 -27.09816933]
[71.24462891 -41.99188614]
[69.46216583 -56.88560486]
[67.67969513 -71.77931976]
[56.49792099 -61.78092957]
[41.68436432 -64.13858032]
[34.15902710 -77.11429596]
[39.46931458 -91.14287567]
[53.70067215 -95.88295746]
[66.36139679 -87.84173584]
[65.69161224 -102.82677460]
[65.02182770 -117.81181335]
[54.75434875 -133.09776306]
[63.44292068 -148.34492493]
[54.89793777 -161.66009521]
[61.86397934 -174.82533264]
[60.97116470 -189.79873657]
[60.07834625 -204.77214050]
[59.18553162 -219.74554443]
[58.29271698 -234.71894836]
[57.39989853 -249.69235229]
[56.50708389 -264.66577148]
[55.61426926 -279.63916016]
[54.72145081 -294.61257935]
[39.77026367 -296.19744873]
[25.28388786 -300.22171021]
[11.65752983 -306.57562256]
[-0.73707807 -315.08584595]
[-11.56180000 -325.52017212]
[-20.52132988 -337.59396362]
[-27.37124634 -350.97787476]
[-31.92467690 -365.30670166]
[-34.05739975 -380.18963623]
[-33.71123505 -395.22061157]
[-30.89562798 -409.98956299]
[-25.68738747 -424.09359741]
[-18.22859764 -437.14797974]
[-8.72274017 -448.79650879]
[2.57085657 -458.72146606]
[15.34409618 -466.65203857]
[29.24851608 -472.37191772]
[43.90479279 -475.72503662]
[58.91308975 -476.61993408]
[73.86397552 -475.03219604]
[88.34957123 -471.00512695]
[101.97470856 -464.64859009]
[114.36767578 -456.13598633]
[125.19038391 -445.69958496]
[134.14758301 -433.62405396]
[140.99491882 -420.23886108]
[145.54559326 -405.90911865]
[147.67546082 -391.02578735]
[147.32640076 -375.99487305]
[144.50793457 -361.22647095]
[139.29698181 -347.12341309]
[131.83567810 -334.07049561]
[122.32757568 -322.42379761]
[111.03206635 -312.50100708]
[98.25730133 -304.57287598]
[84.35177612 -298.85568237]
[69.69485474 -295.50540161]
[70.58767700 -280.53198242]
[71.48049164 -265.55859375]
[72.37330627 -250.58517456]
[73.26612091 -235.61177063]
[74.15893555 -220.63836670]
[75.05175018 -205.66496277]
[75.94456482 -190.69155884]
[76.83738708 -175.71813965]
[85.31850433 -163.47396851]
[78.41632843 -149.23773193]
[87.25265503 -140.97663879]
[88.11901855 -128.50935364]
[80.00686646 -118.48159790]
[80.67665100 -103.49655914]
[81.34643555 -88.51152039]
[82.57341766 -73.56178284]
[84.35588074 -58.66806793]
[86.13834381 -43.77435303]
[87.92081451 -28.88063431]
[89.70327759 -13.98691654]
[91.48574066 0.90680033]
[93.26821136 15.80051804]
[102.46308136 27.51817894]
[96.42049408 42.14000320]
[98.20295715 57.03371811]
[100.86875916 71.79493713]
[104.40843201 86.37131500]
[113.91941071 96.61986542]
[110.16794586 110.08901978]
[113.70761871 124.66539001]
[117.24729156 139.24176025]
[121.11159515 153.73545837]
[125.29860687 168.13923645]
[129.06787109 171.75030518]
[130.89260864 176.01922607]
[130.84786987 180.09513855]
[129.33551025 183.28027344]
[132.87518311 197.85664368]
[136.41485596 212.43302917]
[139.95452881 227.00939941]
[143.49420166 241.58576965]
[146.60127258 244.61892700]
[148.40058899 248.12991333]
[148.90248108 251.64894104]
[148.26885986 254.75781250]
[146.78314209 257.13494873]
[149.44894409 271.89617920]
[152.11474609 286.65737915]
[154.78053284 301.41860962]
[157.44633484 316.17980957]
[160.11212158 330.94104004]
[170.24378967 338.92303467]
[172.16024780 351.27255249]
[165.37307739 361.28558350]
[167.81880188 376.08486938]
[170.37463379 390.86550903]
[173.04043579 405.62673950]
[175.70622253 420.38796997]
[178.37202454 435.14916992]
[193.37377930 434.39053345]
[208.34938049 435.55657959]
[223.05291748 438.62814331]
[237.24293518 443.55477905]
[250.68643188 450.25558472]
[263.16262817 458.62054443]
[274.46667480 468.51229858]
[284.41296387 479.76840210]
[292.83813477 492.20404053]
[299.60385132 505.61495972]
[304.59902954 519.78100586]
[307.74163818 534.46954346]
[308.98004150 549.43933105]
[308.29394531 564.44458008]
[305.69458008 579.23889160]
[301.22467041 593.57928467]
[294.95758057 607.23040771]
[286.99624634 619.96795654]
[277.47137451 631.58282471]
[266.53939819 641.88427734]
[254.37980652 650.70318604]
[241.19229126 657.89471436]
[227.19340515 663.34069824]
[212.61300659 666.95184326]
[197.69052124 668.66876221]
[182.67098999 668.46331787]
[167.80107117 666.33880615]
[153.32490540 662.33020020]
[139.48022461 656.50329590]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 181]
[19 180]
[20 179]
[21 178]
[23 177]
[24 176]
[26 173]
[27 172]
[28 171]
[29 170]
[30 169]
[31 168]
[32 163]
[33 162]
[34 161]
[35 160]
[36 159]
[37 155]
[38 154]
[42 153]
[43 152]
[44 151]
[46 149]
[47 148]
[56 147]
[57 146]
[59 144]
[60 143]
[61 142]
[62 141]
[63 140]
[64 139]
[65 138]
[71 137]
[72 136]
[73 135]
[75 132]
[77 130]
[78 129]
[79 128]
[80 127]
[81 126]
[82 125]
[83 124]
[84 123]
[85 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
