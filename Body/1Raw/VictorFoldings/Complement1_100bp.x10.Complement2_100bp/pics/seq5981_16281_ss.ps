%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[33.03467560 722.40026855]
[21.48564720 732.00482178]
[8.80319977 740.05371094]
[-4.80441236 746.41461182]
[-19.11373711 750.98315430]
[-33.88980484 753.68426514]
[-48.88998032 754.47369385]
[-63.86794281 753.33831787]
[-78.57774353 750.29693604]
[-92.77783203 745.39941406]
[-106.23503113 738.72619629]
[-118.72836304 730.38677979]
[-130.05267334 720.51824951]
[-140.02200317 709.28259277]
[-148.47265625 696.86425781]
[-155.26586914 683.46722412]
[-160.29006958 669.31146240]
[-163.46276855 654.62939453]
[-164.73187256 639.66217041]
[-164.07653809 624.65551758]
[-161.50752258 609.85595703]
[-157.06701660 595.50634766]
[-150.82794189 581.84246826]
[-142.89273071 569.08862305]
[-133.39169312 557.45422363]
[-122.48086548 547.13037109]
[-110.33938599 538.28656006]
[-97.16664886 531.06805420]
[-83.17894745 525.59332275]
[-68.60598755 521.95227051]
[-53.68705368 520.20477295]
[-38.66714096 520.37945557]
[-23.79288483 522.47344971]
[-27.88371086 508.15161133]
[-16.76824570 496.89297485]
[-12.79615021 482.42846680]
[-8.82405376 467.96392822]
[-12.91488171 453.64212036]
[-1.79941666 442.38348389]
[2.17267942 427.91894531]
[6.14477587 413.45443726]
[10.11687183 398.98989868]
[2.54947805 386.21218872]
[6.37169552 371.48651123]
[19.82545280 363.63577271]
[23.79755020 349.17123413]
[27.76964569 334.70672607]
[15.25105000 326.53079224]
[5.85975885 314.87002563]
[0.52529114 300.85845947]
[-0.21817103 285.86386108]
[3.71475005 271.35403442]
[11.95103645 258.75329590]
[23.69461632 249.30255127]
[37.80329514 243.93713379]
[52.89983749 243.19427490]
[56.87193298 228.72975159]
[60.84402847 214.26522827]
[64.81612396 199.80070496]
[68.78822327 185.33618164]
[64.69739532 171.01435852]
[75.81285858 159.75572205]
[71.72203064 145.43389893]
[82.83749390 134.17526245]
[86.80959320 119.71073914]
[90.78169250 105.24621582]
[94.21275330 90.64389038]
[97.09802246 75.92400360]
[99.98329926 61.20410919]
[102.86856842 46.48421860]
[105.75383759 31.76432610]
[99.38348389 14.48717308]
[111.42466736 1.72093773]
[114.09046173 -13.04027939]
[116.75625610 -27.80149651]
[119.42205811 -42.56271362]
[121.42607117 -57.42824173]
[122.76430511 -72.36842346]
[123.99127960 -87.31816101]
[125.10692596 -102.27661133]
[118.41746521 -116.61403656]
[127.07994843 -128.73059082]
[128.19560242 -143.68904114]
[129.31124878 -158.64749146]
[126.78925323 -164.75904846]
[127.60921478 -170.38262939]
[130.68933105 -174.03254700]
[132.24984741 -188.95115662]
[133.81037903 -203.86976624]
[135.37089539 -218.78836060]
[136.93142700 -233.70697021]
[125.66871643 -247.09243774]
[127.53470612 -264.14627075]
[140.88920593 -274.36859131]
[142.22744751 -289.30877686]
[135.75218201 -303.74420166]
[144.59410095 -315.73043823]
[130.42259216 -320.91027832]
[118.07517242 -329.58227539]
[108.39369965 -341.15515137]
[102.03827667 -354.83987427]
[99.44223022 -369.70333862]
[100.78255463 -384.73217773]
[105.96787262 -398.90167236]
[114.64463043 -411.24575806]
[126.22124481 -420.92276001]
[139.90840149 -427.27288818]
[154.77287292 -429.86322021]
[169.80119324 -428.51708984]
[183.96870422 -423.32629395]
[196.30941772 -414.64477539]
[205.98194885 -403.06442261]
[212.32681274 -389.37481689]
[214.91137695 -374.50933838]
[213.55944824 -359.48153687]
[208.36318970 -345.31604004]
[199.67689514 -332.97866821]
[188.09281921 -323.31060791]
[174.40077209 -316.97103882]
[159.53428650 -314.39221191]
[166.10527039 -301.02539062]
[157.16763306 -287.97055054]
[155.82939148 -273.03036499]
[165.39360046 -264.39581299]
[168.28141785 -251.63874817]
[163.22000122 -239.36712646]
[151.85002136 -232.14643860]
[150.28950500 -217.22784424]
[148.72897339 -202.30923462]
[147.16845703 -187.39062500]
[145.60792542 -172.47203064]
[144.26969910 -157.53184509]
[143.15405273 -142.57339478]
[142.03840637 -127.61493683]
[148.80766296 -114.34744263]
[140.06538391 -101.16096497]
[138.94973755 -86.20251465]
[141.58703613 -79.29842377]
[137.70448303 -71.03018951]
[136.36625671 -56.09000778]
[148.54127502 -64.85178375]
[163.36740112 -62.57444763]
[172.35153198 -50.56256485]
[170.34716797 -35.69708633]
[158.50248718 -26.49362946]
[143.60266113 -28.22435760]
[134.18327332 -39.89691925]
[131.51747131 -25.13570213]
[128.85168457 -10.37448406]
[126.18588257 4.38673306]
[132.82322693 14.49970818]
[130.72311401 26.81933975]
[120.47373199 34.64959717]
[117.58846283 49.36949158]
[114.70318604 64.08937836]
[111.81791687 78.80927277]
[108.93264008 93.52916718]
[122.64778900 87.45506287]
[136.01789856 94.25505829]
[139.18704224 108.91645813]
[129.81901550 120.63141632]
[114.81961060 120.76410675]
[105.24621582 109.21830750]
[101.27411652 123.68283081]
[97.30202484 138.14735413]
[101.10874176 153.50376892]
[90.27738190 163.72781372]
[94.08409882 179.08422852]
[83.25274658 189.30827332]
[79.28064728 203.77279663]
[75.30855560 218.23731995]
[71.33645630 232.70184326]
[67.36436462 247.16636658]
[79.96430206 255.51495361]
[89.35415649 267.33328247]
[94.62420654 281.45614624]
[95.27011108 296.49603271]
[91.24120331 310.97949219]
[82.94416809 323.49148560]
[71.20204163 332.81362915]
[57.17259598 338.04284668]
[42.23416901 338.67883301]
[38.26207352 353.14334106]
[34.28997803 367.60787964]
[41.84748840 381.22851562]
[37.61316681 395.84100342]
[24.58139610 402.96200562]
[20.60929871 417.42651367]
[16.63720322 431.89105225]
[12.66510677 446.35556030]
[16.47182465 461.71197510]
[5.64047003 471.93603516]
[1.66837358 486.40054321]
[-2.30372262 500.86508179]
[1.50299418 516.22149658]
[-9.32835960 526.44555664]
[4.52927542 532.24157715]
[17.53192902 539.76220703]
[29.46608543 548.88378906]
[40.13577652 559.45672607]
[49.36579132 571.30725098]
[57.00457382 584.24078369]
[62.92667770 598.04504395]
[67.03486633 612.49328613]
[69.26167297 627.34820557]
[69.57052612 642.36596680]
[67.95636749 657.29992676]
[64.44570160 671.90484619]
[59.09616470 685.94091797]
[51.99561310 699.17761230]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 196]
[35 194]
[36 193]
[37 192]
[39 190]
[40 189]
[41 188]
[42 187]
[45 184]
[46 183]
[47 182]
[56 173]
[57 172]
[58 171]
[59 170]
[60 169]
[62 167]
[64 165]
[65 164]
[66 163]
[67 157]
[68 156]
[69 155]
[70 154]
[71 153]
[73 150]
[74 149]
[75 148]
[76 147]
[77 140]
[78 139]
[79 137]
[80 136]
[82 134]
[83 133]
[84 132]
[87 131]
[88 130]
[89 129]
[90 128]
[91 127]
[94 123]
[95 122]
[97 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
