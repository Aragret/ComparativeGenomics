%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGUxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[82.18682098 693.65972900]
[67.48742676 690.62866211]
[53.08855438 686.39404297]
[39.08855820 680.98480225]
[25.58306885 674.43798828]
[12.66434765 666.79821777]
[0.42064431 658.11767578]
[-11.06440353 648.45574951]
[-21.71234131 637.87835693]
[-31.45042992 626.45782471]
[-40.21214676 614.27209473]
[-47.93764496 601.40441895]
[-54.57414246 587.94274902]
[-60.07630920 573.97906494]
[-64.40656281 559.60864258]
[-67.53531647 544.92974854]
[-69.44119263 530.04260254]
[-70.11119080 515.04888916]
[-69.54071808 500.05108643]
[-67.73367310 485.15161133]
[-64.70240021 470.45227051]
[-60.46761322 456.05343628]
[-55.05823517 442.05349731]
[-48.51121902 428.54809570]
[-40.87128830 415.62945557]
[-32.19063187 403.38586426]
[-22.52855110 391.90093994]
[-11.95104408 381.25311279]
[-0.53036880 371.51516724]
[11.65545750 362.75360107]
[24.52319336 355.02825928]
[37.98493576 348.39190674]
[51.94873047 342.88992310]
[66.31918335 338.55984497]
[80.99813080 335.43127441]
[95.88529968 333.52554321]
[87.58741760 321.15646362]
[94.70079041 307.02456665]
[86.40290833 294.65548706]
[93.51628113 280.52359009]
[92.84648895 265.53854370]
[92.17670441 250.55351257]
[91.50691986 235.56846619]
[90.83713531 220.58343506]
[79.94184113 230.89324951]
[64.94438171 230.61711121]
[54.43598938 219.91320801]
[54.43634796 204.91320801]
[64.94525146 194.20979309]
[79.94272614 193.93438721]
[90.83713531 204.24386597]
[91.50691986 189.25881958]
[84.34564209 176.19876099]
[92.69143677 162.75784302]
[93.36122131 147.77279663]
[93.47288513 132.77320862]
[93.02628326 117.77986145]
[82.55238342 107.76768494]
[82.12097931 93.28458405]
[91.98036957 82.66674042]
[91.53376007 67.67339325]
[91.08715820 52.68004227]
[90.64054871 37.68669510]
[90.19394684 22.69334412]
[89.74733734 7.69999361]
[81.60258484 -5.86369228]
[88.95751953 -18.81568909]
[88.51091003 -33.80904007]
[78.97642517 -22.22916603]
[64.48574829 -18.35355568]
[50.44355392 -23.62771416]
[42.08723068 -36.08451462]
[42.53347778 -51.07787323]
[51.61585999 -63.01564407]
[65.94686890 -67.44532776]
[80.18139648 -62.71476746]
[89.01068115 -50.58723068]
[90.34891510 -65.52741241]
[87.99760437 -74.35402679]
[91.81991577 -80.67951202]
[93.38043976 -95.59811401]
[94.94096375 -110.51672363]
[96.50148773 -125.43532562]
[97.83972168 -140.37551880]
[98.95536804 -155.33396912]
[100.07101440 -170.29241943]
[101.18666840 -185.25086975]
[98.70420074 -194.04150391]
[102.43190765 -200.42318726]
[95.95665741 -214.85862732]
[104.79856873 -226.84484863]
[90.27926636 -230.76414490]
[76.66120148 -237.14532471]
[64.35821533 -245.79446411]
[53.74417877 -256.44873047]
[45.14164352 -268.78436279]
[38.81202698 -282.42645264]
[34.94768524 -296.96047974]
[33.66604614 -311.94476318]
[35.00606155 -326.92391968]
[38.92700577 -341.44277954]
[45.30972672 -355.06011963]
[53.96026230 -367.36215210]
[64.61573029 -377.97497559]
[76.95232391 -386.57611084]
[90.59515381 -392.90417480]
[105.12961578 -396.76687622]
[120.11403656 -398.04681396]
[135.09304810 -396.70507812]
[149.61146545 -392.78250122]
[163.22808838 -386.39822388]
[175.52911377 -377.74630737]
[186.14073181 -367.08963013]
[194.74046326 -354.75207520]
[201.06698608 -341.10852051]
[204.92803955 -326.57360840]
[206.20626831 -311.58905029]
[204.86286926 -296.61019897]
[200.93862915 -282.09222412]
[194.55281067 -268.47631836]
[185.89949036 -256.17626953]
[175.24162292 -245.56587219]
[162.90307617 -236.96752930]
[149.25880432 -230.64256287]
[134.72346497 -226.78315735]
[119.73875427 -225.50662231]
[126.30973053 -212.13981628]
[117.37209320 -199.08496094]
[116.14511871 -184.13522339]
[115.02947235 -169.17677307]
[113.91381836 -154.21832275]
[112.79817200 -139.25985718]
[115.18059540 -135.12065125]
[114.98807526 -129.44085693]
[111.42008972 -123.87480164]
[109.85956573 -108.95619965]
[108.29904175 -94.03759766]
[106.73851776 -79.11898804]
[105.28910065 -64.18917847]
[103.95086670 -49.24899673]
[103.50426483 -34.25564575]
[103.95086670 -19.26229668]
[112.06367493 -6.77103472]
[104.74069214 7.25338793]
[105.18729401 22.24673843]
[105.63390350 37.24008942]
[106.08050537 52.23343658]
[106.52711487 67.22679138]
[106.97371674 82.22013855]
[117.44761658 92.23231506]
[117.87902069 106.71541595]
[108.01963043 117.33325958]
[108.46623993 132.32659912]
[120.49543762 123.36567688]
[135.03958130 127.03552246]
[141.37727356 140.63087463]
[134.83659363 154.12974548]
[120.23909760 157.58126831]
[108.34626007 148.44258118]
[107.67647552 163.42762756]
[114.78984833 177.55952454]
[106.49195862 189.92860413]
[105.82217407 204.91365051]
[105.82217407 219.91365051]
[106.49195862 234.89868164]
[107.16174316 249.88372803]
[107.83152771 264.86877441]
[108.50131989 279.85379028]
[116.84710693 293.29470825]
[109.68582916 306.35479736]
[118.03162384 319.79571533]
[110.87033844 332.85577393]
[125.86816406 333.42572021]
[140.76770020 335.23220825]
[155.46716309 338.26296997]
[169.86613464 342.49722290]
[183.86625671 347.90612793]
[197.37190247 354.45263672]
[210.29080200 362.09210205]
[222.53471375 370.77233887]
[234.01998901 380.43402100]
[244.66818237 391.01113892]
[254.40653992 402.43145752]
[263.16854858 414.61697388]
[270.89434814 427.48443604]
[277.53118896 440.94595337]
[283.03369141 454.90954590]
[287.36425781 469.27984619]
[290.49337769 483.95867920]
[292.39959717 498.84576416]
[293.06994629 513.83941650]
[292.49984741 528.83728027]
[290.69314575 543.73675537]
[287.66223145 558.43621826]
[283.42779541 572.83514404]
[278.01873779 586.83520508]
[271.47204590 600.34075928]
[263.83242798 613.25958252]
[255.15206909 625.50335693]
[245.49026489 636.98852539]
[234.91300964 647.63659668]
[223.49256897 657.37481689]
[211.30694580 666.13665771]
[198.43939209 673.86230469]
[184.97781372 680.49896240]
[171.01414490 686.00134277]
[156.64379883 690.33172607]
[141.96492004 693.46069336]
[127.07779694 695.36676025]
[112.08411407 696.03692627]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 172]
[38 170]
[40 168]
[41 167]
[42 166]
[43 165]
[44 164]
[51 163]
[52 162]
[54 160]
[55 159]
[56 153]
[57 152]
[60 149]
[61 148]
[62 147]
[63 146]
[64 145]
[65 144]
[67 142]
[68 141]
[77 140]
[78 139]
[80 138]
[81 137]
[82 136]
[83 135]
[84 132]
[85 131]
[86 130]
[87 129]
[89 128]
[91 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
