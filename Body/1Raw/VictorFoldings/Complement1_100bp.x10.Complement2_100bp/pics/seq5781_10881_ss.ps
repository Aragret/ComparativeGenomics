%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[108.81366730 679.18457031]
[94.49665833 674.68725586]
[80.54612732 669.15686035]
[67.03650665 662.62292480]
[54.03987885 655.12023926]
[41.62558365 646.68890381]
[29.85985756 637.37384033]
[18.80547905 627.22479248]
[8.52142715 616.29589844]
[-0.93742788 604.64550781]
[-9.52061749 592.33569336]
[-17.18234825 579.43218994]
[-23.88173676 566.00384521]
[-29.58304405 552.12231445]
[-34.25584793 537.86157227]
[-37.87521362 523.29785156]
[-40.42183685 508.50875854]
[-41.88212585 493.57324219]
[-42.24828720 478.57095337]
[-41.51837540 463.58197021]
[-39.69627380 448.68624878]
[-36.79171371 433.96328735]
[-32.82018661 419.49160767]
[-27.80288506 405.34844971]
[-21.76657867 391.60925293]
[-14.74347401 378.34735107]
[-6.77104235 365.63345337]
[2.10818005 353.53546143]
[11.84681702 342.11785889]
[22.39290810 331.44161987]
[33.69018555 321.56365967]
[45.67837524 312.53671265]
[58.29351044 304.40893555]
[71.46828461 297.22369385]
[85.13240051 291.01931763]
[99.21295929 285.82891846]
[113.63483429 281.68017578]
[128.32107544 278.59524536]
[126.31705475 263.72970581]
[124.31304169 248.86419678]
[122.30902863 233.99865723]
[120.30501556 219.13313293]
[118.30100250 204.26760864]
[115.41573334 189.54771423]
[104.73780060 179.16354370]
[108.77272797 163.86550903]
[105.01642609 149.34344482]
[94.33849335 138.95927429]
[98.37342072 123.66123962]
[94.61711884 109.13918304]
[90.32299805 94.76696777]
[85.49700165 80.56451416]
[80.67100525 66.36205292]
[68.90512085 55.78498077]
[72.13624573 41.24506760]
[67.31024170 27.04261017]
[62.48424911 12.84015465]
[57.65824890 -1.36230075]
[51.94090652 12.50535965]
[39.22507477 20.46196556]
[24.25344086 19.53989983]
[12.61005783 10.08307171]
[8.63761711 -4.38135767]
[13.81774235 -18.45851326]
[26.21837425 -26.89796448]
[41.21438599 -26.55200195]
[53.21330643 -17.54871178]
[50.10919571 -32.22401428]
[47.00508499 -46.89931870]
[43.90097809 -61.57461929]
[33.47534561 -73.47490692]
[38.41136932 -87.52783966]
[35.30725861 -102.20314026]
[30.46969986 -109.95141602]
[32.26789474 -117.11997986]
[29.38262367 -131.83987427]
[26.49735069 -146.55976868]
[23.61207771 -161.27964783]
[20.72680473 -175.99954224]
[5.70911837 -175.39167786]
[-9.22534657 -177.08348083]
[-23.72650337 -181.03529358]
[-37.45442581 -187.15449524]
[-50.08731079 -195.29762268]
[-61.32902527 -205.27380371]
[-70.91604614 -216.84919739]
[-78.62364197 -229.75242615]
[-84.27114105 -243.68103027]
[-87.72614288 -258.30853271]
[-88.90766907 -273.29199219]
[-87.78802490 -288.28021240]
[-84.39344788 -302.92184448]
[-78.80351257 -316.87365723]
[-71.14926147 -329.80859375]
[-61.61011505 -341.42346191]
[-50.40969086 -351.44598389]
[-37.81053543 -359.64120483]
[-24.10799789 -365.81704712]
[-9.62328053 -369.82870483]
[5.30407095 -371.58215332]
[20.32414055 -371.03631592]
[35.08483505 -368.20391846]
[49.24014282 -363.15142822]
[62.45824051 -355.99725342]
[74.42928314 -346.90908813]
[84.87264252 -336.10000610]
[93.54352570 -323.82333374]
[100.23866272 -310.36691284]
[104.80110931 -296.04614258]
[107.12392426 -281.19671631]
[107.15265656 -266.16677856]
[104.88662720 -251.30859375]
[100.37895203 -236.97048950]
[93.73530579 -223.48855591]
[85.11141968 -211.17884827]
[74.70944977 -200.32989502]
[62.77323914 -191.19604492]
[49.58258438 -183.99139404]
[35.44669724 -178.88482666]
[38.33197021 -164.16493225]
[41.21724319 -149.44503784]
[44.10251617 -134.72514343]
[46.98778915 -120.00525665]
[49.98256302 -105.30725098]
[53.08666992 -90.63195038]
[63.29027557 -79.78134155]
[58.57627869 -64.67872620]
[61.68038940 -50.00342560]
[64.78450012 -35.32812500]
[67.88861084 -20.65282249]
[71.86070251 -6.18829870]
[76.68670654 8.01415730]
[81.51270294 22.21661377]
[86.33869934 36.41906738]
[97.75939178 45.98028946]
[94.87345886 61.53606033]
[99.69945526 75.73851776]
[104.52545166 89.94097137]
[113.39611053 77.84503937]
[128.37689209 77.08612823]
[138.42454529 88.22367859]
[136.13229370 103.04749298]
[123.18990326 110.63002014]
[109.13918304 105.38288116]
[112.89547729 119.90493774]
[123.84208679 131.32781982]
[119.53848267 145.58714294]
[123.29478455 160.10920715]
[134.24139404 171.53208923]
[129.93778992 185.79141235]
[136.67073059 172.38740540]
[149.94313049 165.39859009]
[164.80470276 167.43164062]
[175.71247864 177.72827148]
[178.59809875 192.44808960]
[172.38531494 206.10098267]
[159.39132690 213.59474182]
[144.46258545 212.13438416]
[133.16653442 202.26359558]
[135.17054749 217.12911987]
[137.17456055 231.99464417]
[139.17857361 246.86018372]
[141.18258667 261.72570801]
[143.18659973 276.59124756]
[158.16546631 275.67703247]
[173.17111206 275.85864258]
[188.12347412 277.13513184]
[202.94276428 279.49969482]
[217.54991150 282.93966675]
[231.86700439 287.43673706]
[245.81762695 292.96688843]
[259.32736206 299.50061035]
[272.32409668 307.00305176]
[284.73852539 315.43420410]
[296.50442505 324.74905396]
[307.55895996 334.89791870]
[317.84320068 345.82666016]
[327.30224609 357.47692871]
[335.88562012 369.78659058]
[343.54757690 382.68997192]
[350.24719238 396.11819458]
[355.94873047 409.99966431]
[360.62176514 424.26028442]
[364.24136353 438.82394409]
[366.78823853 453.61300659]
[368.24874878 468.54849243]
[368.61517334 483.55078125]
[367.88549805 498.53976440]
[366.06365967 513.43554688]
[363.15933228 528.15856934]
[359.18804932 542.63031006]
[354.17095947 556.77349854]
[348.13488770 570.51281738]
[341.11199951 583.77484131]
[333.13977051 596.48883057]
[324.26074219 608.58703613]
[314.52230835 620.00476074]
[303.97637939 630.68121338]
[292.67929077 640.55932617]
[280.69122314 649.58648682]
[268.07623291 657.71447754]
[254.90158081 664.89990234]
[241.23756409 671.10449219]
[227.15708923 676.29516602]
[212.73529053 680.44409180]
[198.04910278 683.52929688]
[183.17687988 685.53424072]
[168.19799805 686.44818115]
[153.19235229 686.26629639]
[138.24002075 684.98956299]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 164]
[39 163]
[40 162]
[41 161]
[42 160]
[43 159]
[44 150]
[46 148]
[47 147]
[49 145]
[50 144]
[51 138]
[52 137]
[53 136]
[55 134]
[56 133]
[57 132]
[58 131]
[67 130]
[68 129]
[69 128]
[70 127]
[72 125]
[73 124]
[75 123]
[76 122]
[77 121]
[78 120]
[79 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
