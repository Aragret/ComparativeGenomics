%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[22.72364426 231.26174927]
[25.08210182 246.08468628]
[26.15756607 261.05548096]
[25.94207764 276.06332397]
[24.43723106 290.99707031]
[21.65416718 305.74615479]
[17.61349106 320.20141602]
[12.34512043 334.25579834]
[5.88805914 347.80526733]
[-1.70988488 360.74948120]
[-10.39245892 372.99261475]
[-20.09537697 384.44403076]
[-30.74680519 395.01892090]
[-42.26787949 404.63900757]
[-54.57329941 413.23309326]
[-67.57196045 420.73751831]
[-81.16762543 427.09671021]
[-95.25962830 432.26361084]
[-109.74364471 436.19995117]
[-124.51242828 438.87658691]
[-139.45663452 440.27371216]
[-154.46563721 440.38098145]
[-169.42828369 439.19760132]
[-184.23382568 436.73233032]
[-198.77262878 433.00341797]
[-212.93704224 428.03848267]
[-226.62220764 421.87426758]
[-239.72680664 414.55642700]
[-252.15380859 406.13909912]
[-263.81121826 396.68466187]
[-274.61270142 386.26309204]
[-284.47833252 374.95153809]
[-293.33499146 362.83377075]
[-301.11718750 349.99948120]
[-307.76727295 336.54370117]
[-313.23599243 322.56607056]
[-317.48287964 308.17004395]
[-320.47647095 293.46221924]
[-322.19461060 278.55151367]
[-322.62460327 263.54827881]
[-321.76324463 248.56364441]
[-319.61688232 233.70852661]
[-316.20147705 219.09291077]
[-311.54223633 204.82499695]
[-305.67373657 191.01045227]
[-298.63934326 177.75152588]
[-290.49121094 165.14639282]
[-281.28961182 153.28839111]
[-271.10272217 142.26530457]
[-260.00592041 132.15875244]
[-248.08139038 123.04354095]
[-235.41740417 114.98718262]
[-222.10774231 108.04930878]
[-208.25091553 102.28128815]
[-193.94953918 97.72583771]
[-179.30950928 94.41667175]
[-164.43917847 92.37829590]
[-149.44868469 91.62580109]
[-134.44897461 92.16475677]
[-119.55113983 93.99117279]
[-104.86545563 97.09152985]
[-90.50066376 101.44287872]
[-76.56311798 107.01298523]
[-63.15600204 113.76062775]
[-50.37857819 121.63584137]
[-38.32545853 130.58032227]
[-27.08586884 140.52783203]
[-16.74303436 151.40475464]
[-7.37352562 163.13052368]
[-1.07723570 149.63215637]
[14.69694328 148.41319275]
[27.17673683 140.09124756]
[39.65653229 131.76930237]
[52.13632584 123.44736481]
[64.61611938 115.12541962]
[77.09590912 106.80347443]
[89.45042419 98.29664612]
[100.63239288 88.29847717]
[110.63056946 77.11650085]
[120.62873840 65.93452454]
[130.62690735 54.75255203]
[140.62507629 43.57057953]
[150.62326050 32.38860321]
[160.62142944 21.20662880]
[161.68722534 16.09672165]
[164.34114075 12.28751469]
[167.82176208 10.16612816]
[171.32441711 9.76138973]
[181.81192017 -0.96298975]
[185.92868042 -16.23920441]
[200.35902405 -19.92901611]
[210.84652710 -30.65339470]
[221.33403015 -41.37777328]
[225.45079041 -56.65399170]
[239.88113403 -60.34379959]
[250.36863708 -71.06818390]
[240.59251404 -82.45751190]
[231.84625244 -94.65556335]
[224.19642639 -107.56948090]
[217.70123291 -121.10099792]
[212.41011047 -135.14710999]
[208.36334229 -149.60093689]
[205.59170532 -164.35246277]
[204.11631775 -179.28941345]
[203.94839478 -194.29811096]
[205.08921814 -209.26434326]
[207.53010559 -224.07418823]
[211.25248718 -238.61492920]
[216.22801208 -252.77590942]
[222.41882324 -266.44937134]
[229.77781677 -279.53121948]
[238.24896240 -291.92187500]
[247.76780701 -303.52709961]
[258.26190186 -314.25851440]
[269.65136719 -324.03448486]
[281.84954834 -332.78054810]
[294.76358032 -340.43020630]
[308.29516602 -346.92523193]
[322.34136963 -352.21615601]
[336.79525757 -356.26272583]
[351.54681396 -359.03411865]
[366.48379517 -360.50930786]
[381.49249268 -360.67703247]
[396.45870972 -359.53598022]
[411.26849365 -357.09490967]
[425.80920410 -353.37231445]
[439.97012329 -348.39660645]
[453.64346313 -342.20559692]
[466.72521973 -334.84640503]
[479.11578369 -326.37509155]
[490.72085571 -316.85607910]
[501.45211792 -306.36184692]
[511.22793579 -294.97222900]
[519.97381592 -282.77392578]
[527.62329102 -269.85980225]
[534.11810303 -256.32809448]
[539.40887451 -242.28184509]
[543.45520020 -227.82789612]
[546.22644043 -213.07630920]
[547.70141602 -198.13931274]
[547.86889648 -183.13059998]
[546.72766113 -168.16441345]
[544.28637695 -153.35462952]
[540.56359863 -138.81399536]
[535.58764648 -124.65314484]
[529.39648438 -110.97987366]
[522.03710938 -97.89823151]
[513.56561279 -85.50778961]
[504.04641724 -73.90284729]
[493.55203247 -63.17171860]
[482.16229248 -53.39608383]
[469.96386719 -44.65033722]
[457.04962158 -37.00104523]
[443.51785278 -30.50642204]
[429.47149658 -25.21589470]
[415.01751709 -21.16973114]
[400.26586914 -18.39872360]
[385.32885742 -16.92396355]
[370.32015991 -16.75667191]
[355.35397339 -17.89812469]
[340.54421997 -20.33963394]
[326.00363159 -24.06261826]
[311.84286499 -29.03874207]
[298.16967773 -35.23013306]
[285.08813477 -42.58967209]
[272.69781494 -51.06134415]
[261.09301758 -60.58068085]
[250.60551453 -49.85630035]
[247.23887634 -35.34716415]
[232.05841064 -30.89027405]
[221.57090759 -20.16589355]
[211.08340454 -9.44151402]
[207.71676636 5.06762171]
[192.53630066 9.52451134]
[182.04879761 20.24889183]
[171.80340576 31.20479965]
[161.80523682 42.38677597]
[151.80705261 53.56874847]
[141.80888367 64.75072479]
[131.81071472 75.93270111]
[121.81253815 87.11466980]
[111.81436920 98.29664612]
[126.03604889 93.52758789]
[141.02333069 94.14522552]
[154.80436707 100.06829071]
[165.56605530 110.51750946]
[171.89248657 124.11811066]
[172.95132446 139.08068848]
[168.60324097 153.43667603]
[159.42031860 165.29727173]
[146.61073303 173.10203552]
[131.85978699 175.82411194]
[117.10823059 173.10534668]
[104.29689026 165.30346680]
[95.11130524 153.44491577]
[90.76000977 139.08990479]
[91.81548309 124.12709045]
[98.14024353 110.52313232]
[95.04574585 116.36569977]
[90.19355774 119.32430267]
[85.41785431 119.28327179]
[72.93806458 127.60520935]
[60.45826721 135.92715454]
[47.97847366 144.24909973]
[35.49868011 152.57104492]
[23.01888657 160.89299011]
[15.82995892 174.98660278]
[0.94841808 175.61032104]
[8.17158985 188.76733398]
[14.23697186 202.49659729]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 208]
[71 206]
[72 205]
[73 204]
[74 203]
[75 202]
[76 201]
[77 198]
[78 182]
[79 181]
[80 180]
[81 179]
[82 178]
[83 177]
[84 176]
[88 175]
[89 174]
[91 172]
[92 171]
[93 170]
[95 168]
[96 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
