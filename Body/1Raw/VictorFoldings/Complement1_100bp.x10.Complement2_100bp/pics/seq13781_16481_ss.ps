%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGGxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[142.96907043 605.71020508]
[130.43722534 614.02050781]
[116.68112946 620.09320068]
[102.09656525 623.75360107]
[87.10316467 624.89642334]
[72.13231659 623.48870850]
[57.61476135 619.57098389]
[43.96819687 613.25598145]
[31.58526039 604.72540283]
[20.82223892 594.22467041]
[11.98880196 582.05590820]
[5.33910608 568.56927490]
[1.06447732 554.15277100]
[-0.71209562 539.22119141]
[0.06050297 524.20416260]
[3.36004400 509.53372192]
[9.09159279 495.63201904]
[17.09024239 482.89901733]
[27.12585258 471.70104980]
[38.90968323 462.36032104]
[52.10268784 455.14556885]
[66.32527924 450.26437378]
[81.16823578 447.85720825]
[96.20450592 447.99328613]
[98.87030792 433.23205566]
[93.51805878 419.33233643]
[103.58475494 407.12692261]
[106.25054932 392.36569214]
[108.91634369 377.60446167]
[111.58213806 362.84326172]
[114.02787018 348.04397583]
[116.25298309 333.20993042]
[118.47810364 318.37588501]
[120.70321655 303.54187012]
[120.59155273 288.54226685]
[118.14582825 273.74301147]
[115.70009613 258.94372559]
[106.05226898 251.64674377]
[103.89357758 239.33724976]
[110.91847229 228.51995850]
[108.69335938 213.68591309]
[106.46823883 198.85186768]
[104.24312592 184.01782227]
[102.01800537 169.18379211]
[99.79289246 154.34974670]
[95.69194031 148.20124817]
[97.64678192 139.27844238]
[95.64276886 124.41291046]
[93.63875580 109.54738617]
[86.48684692 122.73261261]
[73.75244904 130.65946960]
[58.76431274 131.25592041]
[45.44029617 124.36603546]
[37.26326370 111.79080963]
[36.37067413 96.81739044]
[42.99584579 83.35978699]
[55.40697861 74.93579102]
[70.35983276 73.74740601]
[83.94576263 80.10527039]
[92.61312866 92.34663391]
[92.83645630 77.34829712]
[92.94812012 62.34871292]
[92.94812012 47.34871292]
[92.94812012 32.34871292]
[92.94812012 17.34871483]
[92.83645630 2.34913039]
[84.89454651 -11.33431530]
[92.44150543 -24.17537308]
[92.21817780 -39.17370987]
[84.27626801 -52.85715485]
[91.82321930 -65.69821167]
[91.59989166 -80.69654846]
[80.91945648 -88.90282440]
[76.97304535 -101.57706451]
[80.98747253 -114.02561188]
[91.28387451 -121.77245331]
[91.28387451 -136.77246094]
[91.28387451 -151.77246094]
[91.28387451 -166.77246094]
[91.28387451 -181.77246094]
[76.37467957 -183.58168030]
[61.79227448 -187.17485046]
[47.74932098 -192.49957275]
[34.45059586 -199.47821045]
[22.09004211 -208.00898743]
[10.84791088 -217.96748352]
[0.88814461 -229.20849609]
[-7.64401388 -241.56809998]
[-14.62413979 -254.86604309]
[-19.95044327 -268.90838623]
[-23.54525185 -283.49038696]
[-25.35614014 -298.39938354]
[-25.35670090 -313.41796875]
[-23.54692841 -328.32708740]
[-19.95321083 -342.90936279]
[-14.62795734 -356.95211792]
[-7.64882565 -370.25057983]
[0.88240868 -382.61080933]
[10.84133434 -393.85256958]
[22.08272171 -403.81192017]
[34.44263840 -412.34359741]
[47.74083710 -419.32324219]
[61.78339767 -424.64901733]
[76.36553192 -428.24328613]
[91.27458954 -430.05361938]
[106.29315948 -430.05361938]
[121.20221710 -428.24328613]
[135.78434753 -424.64901733]
[149.82690430 -419.32324219]
[163.12510681 -412.34359741]
[175.48503113 -403.81192017]
[186.72640991 -393.85256958]
[196.68533325 -382.61080933]
[205.21656799 -370.25057983]
[212.19570923 -356.95211792]
[217.52096558 -342.90936279]
[221.11466980 -328.32708740]
[222.92445374 -313.41796875]
[222.92388916 -298.39938354]
[221.11299133 -283.49038696]
[217.51818848 -268.90838623]
[212.19189453 -254.86604309]
[205.21176147 -241.56809998]
[196.67959595 -229.20849609]
[186.71983337 -217.96748352]
[175.47770691 -208.00898743]
[163.11715698 -199.47821045]
[149.81843567 -192.49957275]
[135.77546692 -187.17485046]
[121.19306946 -183.58168030]
[106.28387451 -181.77246094]
[106.28387451 -166.77246094]
[106.28387451 -151.77246094]
[106.28387451 -136.77246094]
[106.28387451 -121.77245331]
[118.67313385 -110.39945984]
[119.01021576 -93.24716187]
[106.59822845 -80.91988373]
[106.82155609 -65.92153931]
[114.74748993 -53.31087875]
[107.21651459 -39.39703751]
[107.43984222 -24.39870071]
[115.36576843 -11.78803730]
[107.83479309 2.12580276]
[111.07752991 8.76707077]
[107.94812012 17.34871483]
[107.94812012 32.34871292]
[107.94812012 47.34871292]
[107.94812012 62.34871292]
[111.09162140 69.03752899]
[107.83479309 77.57162476]
[107.61146545 92.56996155]
[108.50428009 107.54337311]
[110.50829315 122.40889740]
[112.51230621 137.27442932]
[114.62693024 152.12461853]
[116.85205078 166.95866394]
[119.07716370 181.79270935]
[121.30228424 196.62675476]
[123.52740479 211.46080017]
[125.75251770 226.29484558]
[137.55455017 240.42967224]
[130.49937439 256.49801636]
[132.94509888 271.29727173]
[135.39082336 286.09655762]
[139.88670349 271.78616333]
[148.03041077 259.18933105]
[159.23403931 249.21543884]
[172.68881226 242.58450317]
[187.42338562 239.77522278]
[202.37408447 240.99038696]
[216.46159363 246.14228821]
[228.66893005 254.85900879]
[238.11482239 266.51126099]
[244.11738586 280.25787354]
[246.24325562 295.10647583]
[244.33900452 309.98510742]
[238.54206848 323.81967163]
[229.27095032 335.61148071]
[217.19493103 344.50921631]
[203.18580627 349.87057495]
[188.25488281 351.30853271]
[173.48005676 348.71923828]
[159.92791748 342.28964233]
[148.57682800 332.48388672]
[140.24621582 320.00988770]
[135.53726196 305.76696777]
[133.31214905 320.60101318]
[131.08703613 335.43505859]
[128.86190796 350.26910400]
[130.92236328 356.55130005]
[129.68641663 362.09832764]
[126.34336090 365.50906372]
[123.67755890 380.27026367]
[121.01176453 395.03149414]
[118.34597015 409.79269409]
[123.50753784 424.74826050]
[113.63152313 435.89785767]
[110.96572876 450.65908813]
[125.09977722 455.79098511]
[138.16314697 463.23791504]
[149.77996826 472.78555298]
[159.61599731 484.15921021]
[167.38824463 497.03167725]
[172.87309265 511.03256226]
[175.91270447 525.75903320]
[176.41964722 540.78735352]
[174.37931824 555.68518066]
[169.85044861 570.02386475]
[162.96331787 583.39080811]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 199]
[25 198]
[27 196]
[28 195]
[29 194]
[30 193]
[31 190]
[32 189]
[33 188]
[34 187]
[35 165]
[36 164]
[37 163]
[40 161]
[41 160]
[42 159]
[43 158]
[44 157]
[45 156]
[47 155]
[48 154]
[49 153]
[60 152]
[61 151]
[62 149]
[63 148]
[64 147]
[65 146]
[66 144]
[68 142]
[69 141]
[71 139]
[72 138]
[76 135]
[77 134]
[78 133]
[79 132]
[80 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
