%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUGxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[18.55825233 217.53451538]
[19.92526817 232.47991943]
[20.11545753 247.48652649]
[19.12764931 262.46179199]
[16.96793365 277.31335449]
[13.64962578 291.94973755]
[9.19318390 306.28060913]
[3.62608552 320.21765137]
[-3.01734734 333.67495728]
[-10.69615459 346.56951904]
[-19.36299324 358.82186890]
[-28.96442986 370.35644531]
[-39.44126511 381.10214233]
[-50.72890854 390.99270630]
[-62.75776291 399.96716309]
[-75.45366669 407.97018433]
[-88.73834991 414.95239258]
[-102.52989960 420.87075806]
[-116.74328613 425.68884277]
[-131.29087830 429.37686157]
[-146.08299255 431.91210938]
[-161.02842712 433.27899170]
[-176.03501892 433.46902466]
[-191.01026917 432.48104858]
[-205.86183167 430.32119751]
[-220.49815369 427.00274658]
[-234.82899475 422.54614258]
[-248.76599121 416.97891235]
[-262.22323608 410.33532715]
[-275.11770630 402.65640259]
[-287.36996460 393.98944092]
[-298.90444946 384.38787842]
[-309.65005493 373.91091919]
[-319.54049683 362.62319946]
[-328.51483154 350.59423828]
[-336.51770020 337.89825439]
[-343.49978638 324.61349487]
[-349.41802979 310.82189941]
[-354.23593140 296.60845947]
[-357.92379761 282.06082153]
[-360.45892334 267.26867676]
[-361.82562256 252.32324219]
[-362.01550293 237.31665039]
[-361.02740479 222.34140015]
[-358.86737061 207.48986816]
[-355.54876709 192.85357666]
[-351.09204102 178.52278137]
[-345.52465820 164.58583069]
[-338.88095093 151.12867737]
[-331.20187378 138.23425293]
[-322.53479004 125.98208618]
[-312.93310547 114.44770813]
[-302.45605469 103.70222473]
[-291.16821289 93.81188965]
[-279.13919067 84.83769226]
[-266.44311523 76.83494568]
[-253.15827942 69.85299683]
[-239.36660767 63.93489838]
[-225.15312195 59.11713028]
[-210.60545349 55.42939758]
[-195.81329346 52.89443970]
[-180.86784363 51.52788162]
[-165.86123657 51.33815384]
[-150.88601685 52.32641983]
[-136.03448486 54.48659134]
[-121.39823151 57.80534744]
[-107.06748962 62.26222610]
[-93.13059998 67.82975006]
[-79.67350769 74.47359467]
[-66.77916718 82.15280151]
[-54.52708817 90.82001495]
[-42.99280167 100.42180634]
[-32.24742889 110.89897156]
[-22.35721016 122.18691254]
[-13.38313103 134.21604919]
[-5.38051605 146.91220093]
[7.89733028 139.93374634]
[21.17517662 132.95529175]
[34.45302200 125.97683716]
[47.73086929 118.99838257]
[61.00871658 112.01993561]
[74.28656006 105.04148102]
[87.56440735 98.06302643]
[100.68310547 90.78979492]
[113.63610077 83.22541809]
[126.58909607 75.66104126]
[138.55143738 66.61103821]
[149.35359192 56.20366669]
[160.15574646 45.79629517]
[170.95790100 35.38891983]
[181.76005554 24.98154831]
[192.56222534 14.57417488]
[183.00733948 3.00148964]
[174.36637878 -9.26866150]
[166.69006348 -22.16427231]
[160.02340698 -35.60966492]
[154.40556335 -49.52593613]
[149.86949158 -63.83141708]
[146.44180298 -78.44215393]
[144.14263916 -93.27241516]
[142.98545837 -108.23515320]
[142.97706604 -123.24257660]
[144.11750793 -138.20660400]
[146.40010071 -153.03942871]
[149.81144714 -167.65399170]
[154.33152771 -181.96453857]
[159.93380737 -195.88706970]
[166.58541870 -209.33992004]
[174.24731445 -222.24409485]
[182.87454224 -234.52391052]
[192.41648865 -246.10726929]
[202.81712341 -256.92620850]
[214.01542664 -266.91723633]
[225.94569397 -276.02172852]
[238.53788757 -284.18624878]
[251.71812439 -291.36285400]
[265.40905762 -297.50949097]
[279.53033447 -302.59002686]
[293.99911499 -306.57470703]
[308.73043823 -309.44009399]
[323.63790894 -311.16940308]
[338.63400269 -311.75247192]
[353.63073730 -311.18588257]
[368.54006958 -309.47296143]
[383.27453613 -306.62377930]
[397.74768066 -302.65499878]
[411.87454224 -297.58999634]
[425.57223511 -291.45840454]
[438.76034546 -284.29626465]
[451.36151123 -276.14559937]
[463.30178833 -267.05422974]
[474.51104736 -257.07553101]
[484.92358398 -246.26802063]
[494.47824097 -234.69515991]
[503.11895752 -222.42483521]
[510.79504395 -209.52908325]
[517.46142578 -196.08355713]
[523.07904053 -182.16719055]
[527.61480713 -167.86161804]
[531.04223633 -153.25080872]
[533.34112549 -138.42051697]
[534.49804688 -123.45774841]
[534.50610352 -108.45032501]
[533.36541748 -93.48632050]
[531.08251953 -78.65354919]
[527.67089844 -64.03904724]
[523.15057373 -49.72858810]
[517.54803467 -35.80615234]
[510.89614868 -22.35343933]
[503.23400879 -9.44939995]
[494.60653687 2.83024192]
[485.06439209 14.41342163]
[474.66354370 25.23216629]
[463.46502686 35.22298431]
[451.53460693 44.32724380]
[438.94226074 52.49151611]
[425.76187134 59.66789627]
[412.07083130 65.81426239]
[397.94943237 70.89454651]
[383.48059082 74.87893677]
[368.74920654 77.74404907]
[353.84170532 79.47307587]
[338.84561157 80.05586243]
[323.84890747 79.48899078]
[308.93957520 77.77578735]
[294.20516968 74.92630768]
[279.73208618 70.95727539]
[265.60534668 65.89197540]
[251.90776062 59.76014328]
[238.71978760 52.59775925]
[226.11877441 44.44685364]
[214.17868042 35.35525894]
[202.96958923 25.37633133]
[192.16743469 35.78370285]
[181.36528015 46.19107819]
[170.56312561 56.59844971]
[159.76097107 67.00582123]
[148.95881653 77.41320038]
[163.44801331 73.53207397]
[178.39669800 74.77165985]
[192.04873657 80.98632812]
[202.80026245 91.44599152]
[209.38824463 104.92184448]
[211.03868103 119.83076477]
[207.55772400 134.42127991]
[199.35429382 146.97929382]
[187.39212036 156.02949524]
[173.07650757 160.50871277]
[158.08924866 159.89068604]
[144.19100952 154.24806213]
[133.01457214 144.24369812]
[125.87291718 131.05291748]
[123.60503387 116.22535706]
[126.47736359 101.50292969]
[134.15347290 88.61403656]
[121.20047760 96.17842102]
[108.24748230 103.74279785]
[106.74913025 107.29628754]
[103.69172668 110.17208099]
[99.41306305 111.68868256]
[94.54286194 111.34087372]
[81.26501465 118.31932831]
[67.98716736 125.29778290]
[54.70932007 132.27622986]
[41.43147659 139.25468445]
[28.15362930 146.23313904]
[14.87578297 153.21159363]
[1.59793651 160.19004822]
[7.51645994 173.98153687]
[12.33466339 188.19487000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[76 208]
[77 207]
[78 206]
[79 205]
[80 204]
[81 203]
[82 202]
[83 201]
[84 197]
[85 196]
[86 195]
[87 178]
[88 177]
[89 176]
[90 175]
[91 174]
[92 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
