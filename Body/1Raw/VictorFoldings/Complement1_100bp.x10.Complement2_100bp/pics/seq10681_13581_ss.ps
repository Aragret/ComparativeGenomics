%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUUxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[189.37596130 490.91952515]
[198.41294861 478.89257812]
[209.50617981 468.73110962]
[222.27780151 460.78128052]
[216.82244873 446.80847168]
[211.36708069 432.83566284]
[205.91172791 418.86288452]
[200.45637512 404.89007568]
[195.00100708 390.91726685]
[182.59225464 387.44564819]
[174.32531738 377.30957031]
[173.39198303 364.06799316]
[180.35647583 352.53933716]
[175.10975647 338.48684692]
[169.86303711 324.43438721]
[163.78919983 310.71911621]
[156.90979004 297.38967896]
[150.03038025 284.06024170]
[143.15097046 270.73083496]
[136.27156067 257.40139771]
[129.39213562 244.07196045]
[122.51273346 230.74253845]
[115.63331604 217.41311646]
[115.68711853 232.41300964]
[111.56813812 246.83639526]
[103.60122681 259.54577637]
[92.41468048 269.53881836]
[78.89071655 276.02746582]
[64.09590149 278.49996948]
[49.19699860 276.76135254]
[35.36901093 270.94869995]
[23.70246887 261.52047729]
[15.11744308 249.22016907]
[10.29098415 235.01786804]
[9.60372734 220.03363037]
[13.10987186 205.44914246]
[20.53291130 192.41464233]
[31.28742981 181.95803833]
[44.52528381 174.90402222]
[59.20248032 171.80888367]
[74.16151428 172.91671753]
[88.22265625 178.14015198]
[100.27697754 187.06726074]
[109.37553406 198.99703979]
[106.70973969 184.23582458]
[104.04393768 169.47460938]
[94.28854370 162.32206726]
[91.94681549 150.04606628]
[98.80988312 139.12539673]
[96.36415863 124.32612610]
[93.91842651 109.52685547]
[86.01649475 122.27673340]
[72.17350769 128.05357361]
[57.55257034 124.70273590]
[47.60691833 113.47402191]
[46.04603958 98.55545807]
[53.45210266 85.51129150]
[67.06282806 79.20668030]
[81.80175781 81.99308777]
[92.17213440 92.83230591]
[83.82634735 79.39138794]
[90.98762512 66.33132172]
[90.31784058 51.34628296]
[80.26037598 62.47495651]
[65.42033386 64.65970612]
[52.58237839 56.90167999]
[47.61585236 42.74775696]
[52.79138184 28.66891098]
[65.74279022 21.10180473]
[80.54885864 23.50601578]
[90.44113922 34.78409576]
[91.33395386 19.81069183]
[92.22676849 4.83728552]
[93.11959076 -10.13611984]
[94.01240540 -25.10952568]
[94.90522003 -40.08293152]
[88.00303650 -54.31916809]
[96.48416138 -66.56334686]
[97.37697601 -81.53675079]
[98.26979065 -96.51015472]
[99.16260529 -111.48355865]
[100.05542755 -126.45697021]
[100.94824219 -141.43037415]
[101.84105682 -156.40377808]
[87.78619385 -161.96420288]
[76.15390778 -171.58357239]
[68.07534790 -184.31013489]
[64.33105469 -198.89077759]
[65.27553558 -213.89447021]
[70.80372620 -227.85261536]
[80.36254883 -239.40290833]
[93.00616455 -247.42219543]
[107.48961639 -251.13575745]
[108.38243866 -266.10916138]
[109.27525330 -281.08258057]
[110.16806793 -296.05596924]
[95.84861755 -300.81158447]
[83.24847412 -309.11212158]
[73.22672272 -320.39160156]
[66.46667480 -333.88101196]
[63.42922974 -348.66061401]
[64.32149506 -363.72268677]
[69.08263397 -378.04031372]
[77.38802338 -390.63723755]
[88.67138672 -400.65463257]
[102.16339874 -407.40948486]
[116.94416809 -410.44122314]
[132.00590515 -409.54312134]
[146.32167053 -404.77645874]
[158.91540527 -396.46621704]
[168.92843628 -385.17898560]
[175.67807007 -371.68435669]
[178.70410156 -356.90243530]
[177.80020142 -341.84103394]
[173.02801514 -327.52709961]
[164.71289062 -314.93658447]
[153.42179871 -304.92791748]
[139.92457581 -298.18347168]
[125.14147186 -295.16317749]
[124.24865723 -280.18975830]
[123.35584259 -265.21633911]
[122.46302795 -250.24295044]
[136.40257263 -244.83460999]
[148.00366211 -235.36968994]
[156.12222290 -222.76535034]
[159.95257568 -208.24917603]
[159.10746765 -193.23957825]
[153.65707397 -179.20716858]
[144.12344360 -167.53077698]
[131.43048096 -159.36184692]
[116.81446075 -155.51095581]
[115.92164612 -140.53755188]
[115.02883148 -125.56414795]
[114.13601685 -110.59074402]
[113.24320221 -95.61734009]
[112.35037994 -80.64393616]
[111.45756531 -65.67052460]
[118.42360687 -52.50528717]
[109.87862396 -39.19011688]
[108.98580933 -24.21671104]
[108.09299469 -9.24330425]
[107.20018005 5.73010111]
[106.30736542 20.70350647]
[105.41454315 35.67691422]
[105.30287933 50.67649841]
[105.97266388 65.66153717]
[114.27055359 78.03062439]
[107.15717316 92.16252136]
[108.71769714 107.08112335]
[111.16342926 121.88039398]
[113.60915375 136.67967224]
[125.62033081 150.63722229]
[118.80516052 166.80880737]
[121.47095490 181.57002258]
[124.13674927 196.33123779]
[128.96275330 210.53369141]
[135.84216309 223.86312866]
[142.72157288 237.19255066]
[149.60098267 250.52198792]
[156.48039246 263.85140991]
[163.35981750 277.18084717]
[170.23922729 290.51028442]
[177.11863708 303.83969116]
[180.71557617 289.27734375]
[192.11042786 279.52249146]
[207.05320740 278.21343994]
[219.97061157 285.83847046]
[226.04476929 299.55358887]
[223.01017761 314.24340820]
[211.99865723 324.42901611]
[197.11723328 326.31140137]
[183.91551208 319.18765259]
[189.16223145 333.24014282]
[194.40895081 347.29260254]
[210.45426941 354.26159668]
[216.37840271 370.36187744]
[208.97381592 385.46191406]
[214.42916870 399.43472290]
[219.88452148 413.40750122]
[225.33988953 427.38031006]
[230.79524231 441.35311890]
[236.25059509 455.32589722]
[251.03018188 452.51904297]
[266.07388306 452.47592163]
[280.86929321 455.19805908]
[294.91253662 460.59271240]
[307.72525024 468.47616577]
[318.87109375 478.57989502]
[327.97036743 490.55975342]
[334.71322632 504.00775146]
[338.86999512 518.46582031]
[340.29907227 533.44158936]
[338.95181274 548.42486572]
[334.87405396 562.90545654]
[328.20474243 576.39007568]
[319.17098999 588.41943359]
[308.08053589 598.58386230]
[295.31103516 606.53717041]
[281.29748535 612.00842285]
[266.51715088 614.81134033]
[251.47343445 614.85040283]
[236.67874146 612.12426758]
[222.63696289 606.72583008]
[209.82637024 598.83892822]
[198.68327332 588.73217773]
[189.58720398 576.74987793]
[182.84796143 563.30004883]
[178.69509888 548.84088135]
[177.27006531 533.86474609]
[178.62136841 518.88183594]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 182]
[5 181]
[6 180]
[7 179]
[8 178]
[9 177]
[13 174]
[14 173]
[15 172]
[16 163]
[17 162]
[18 161]
[19 160]
[20 159]
[21 158]
[22 157]
[23 156]
[44 155]
[45 154]
[46 153]
[49 151]
[50 150]
[51 149]
[60 148]
[62 146]
[63 145]
[71 144]
[72 143]
[73 142]
[74 141]
[75 140]
[76 139]
[78 137]
[79 136]
[80 135]
[81 134]
[82 133]
[83 132]
[84 131]
[93 122]
[94 121]
[95 120]
[96 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
