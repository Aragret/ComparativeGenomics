%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[181.42378235 175.34803772]
[166.65722656 173.39913940]
[160.75433350 158.72036743]
[149.06675720 149.31820679]
[137.37916565 139.91606140]
[125.69158936 130.51391602]
[114.00401306 121.11175537]
[102.31642914 111.70960999]
[107.81979370 125.66356659]
[107.98365784 140.66267395]
[102.78646088 154.73353577]
[92.91197968 166.02488708]
[79.65937805 173.05116272]
[64.77226257 174.88792419]
[50.20928574 171.29353333]
[37.88645935 162.74087524]
[29.42506218 150.35520935]
[25.93833923 135.76606750]
[27.88502693 120.89292908]
[35.00900650 107.69258881]
[46.37299347 97.90179443]
[60.48186111 92.80867767]
[75.47934723 93.08332825]
[89.39427948 98.69090271]
[80.07939911 86.93364716]
[70.76451111 75.17639923]
[61.44963074 63.41914749]
[64.06771088 78.18890381]
[61.81329727 93.01852417]
[54.92430115 106.34300232]
[44.12773895 116.75617218]
[30.56299400 123.15911865]
[15.66158676 124.87611389]
[0.99609882 121.72595978]
[-11.88578606 114.04109955]
[-21.62461090 102.63253784]
[-27.19261551 88.70424652]
[-28.00219536 73.72611237]
[-23.96791267 59.27880478]
[-15.51551342 46.88699341]
[-3.53700304 37.85841370]
[10.70349979 33.14587021]
[25.70316124 33.24668884]
[39.87903214 38.15023422]
[51.73522568 47.33915710]
[45.66139221 33.62388992]
[39.58755875 19.90862274]
[33.51372147 6.19335699]
[19.39411545 11.27567196]
[4.94791222 15.33775234]
[-9.75126934 18.35889626]
[-24.62852669 20.32371140]
[-39.60804749 21.22218323]
[-54.61349487 21.04973412]
[-69.56841278 19.80724144]
[-84.39658356 17.50103951]
[-99.02245331 14.14287758]
[-113.37148285 9.74986935]
[-127.37055969 4.34440184]
[-140.94834900 -2.04598141]
[-154.03564453 -9.38871479]
[-166.56578064 -17.64638329]
[-178.47488403 -26.77690315]
[-189.70228577 -36.73374939]
[-200.19076538 -47.46618652]
[-209.88687134 -58.91952133]
[-218.74119568 -71.03538513]
[-226.70861816 -83.75204468]
[-233.74853516 -97.00469971]
[-239.82507324 -110.72580719]
[-244.90728760 -124.84545135]
[-248.96925354 -139.29168701]
[-251.99029541 -153.99089050]
[-253.95498657 -168.86816406]
[-254.85334778 -183.84768677]
[-254.68078613 -198.85313416]
[-253.43817139 -213.80804443]
[-251.13186646 -228.63619995]
[-247.77359009 -243.26203918]
[-243.38046265 -257.61105347]
[-237.97489929 -271.61007690]
[-231.58441162 -285.18780518]
[-224.24157715 -298.27505493]
[-215.98381042 -310.80514526]
[-206.85319519 -322.71417236]
[-196.89625549 -333.94149780]
[-186.16374207 -344.42987061]
[-174.71034241 -354.12588501]
[-162.59440613 -362.98013306]
[-149.87768555 -370.94744873]
[-136.62498474 -377.98727417]
[-122.90382385 -384.06372070]
[-108.78413391 -389.14581299]
[-94.33786774 -393.20767212]
[-79.63864136 -396.22857666]
[-64.76135254 -398.19317627]
[-49.78182220 -399.09143066]
[-34.77637482 -398.91873169]
[-19.82147980 -397.67602539]
[-4.99334288 -395.36959839]
[9.63247395 -392.01119995]
[23.98143959 -387.61798096]
[37.98043442 -382.21228027]
[51.55812073 -375.82171631]
[64.64531708 -368.47875977]
[77.17531586 -360.22091675]
[89.08428955 -351.09020996]
[100.31153107 -341.13317871]
[110.79984283 -330.40057373]
[120.49576569 -318.94711304]
[129.34989929 -306.83111572]
[137.31713867 -294.11431885]
[144.35685730 -280.86157227]
[150.43319702 -267.14035034]
[155.51518250 -253.02062988]
[159.57693481 -238.57434082]
[162.59773254 -223.87509155]
[164.56221008 -208.99778748]
[165.46032715 -194.01824951]
[165.28753662 -179.01280212]
[164.04470825 -164.05790710]
[161.73815918 -149.22979736]
[158.37966919 -134.60400391]
[153.98632812 -120.25507355]
[148.58053589 -106.25611877]
[142.18983459 -92.67848206]
[134.84680176 -79.59134674]
[126.58885193 -67.06140137]
[117.45805359 -55.15250397]
[107.50094604 -43.92533875]
[96.76827240 -33.43711090]
[85.31471252 -23.74127007]
[73.19864655 -14.88722515]
[60.48180389 -6.92009449]
[47.22898865 0.11952289]
[53.30282211 13.83478928]
[59.37665939 27.55005646]
[65.45049286 41.26532364]
[73.20688629 54.10426331]
[82.52176666 65.86151123]
[91.83664703 77.61876678]
[101.15153503 89.37601471]
[111.71858215 100.02202606]
[123.40615845 109.42417908]
[135.09373474 118.82633209]
[146.78132629 128.22848511]
[158.46890259 137.63063049]
[170.15647888 147.03277588]
[185.75901794 149.65417480]
[190.82592773 163.66044617]
[201.35348511 152.95767212]
[212.89437866 143.35630798]
[225.33392334 134.95178223]
[238.54849243 127.82759857]
[252.40673828 122.05459595]
[266.77093506 117.69012451]
[281.49832153 114.77758026]
[296.44250488 113.34589386]
[311.45498657 113.40930939]
[326.38653564 114.96718597]
[341.08880615 118.00405121]
[355.41561890 122.48970795]
[369.22457886 128.37959290]
[382.37850952 135.61514282]
[394.74661255 144.12446594]
[406.20596313 153.82299805]
[416.64273071 164.61431885]
[425.95312500 176.39120483]
[434.04467773 189.03659058]
[440.83688354 202.42480469]
[446.26232910 216.42277527]
[450.26699829 230.89140320]
[452.81115723 245.68687439]
[453.86950684 260.66213989]
[453.43154907 275.66836548]
[451.50155640 290.55639648]
[448.09881592 305.17828369]
[443.25704956 319.38873291]
[437.02444458 333.04644775]
[429.46292114 346.01571655]
[420.64764404 358.16763306]
[410.66619873 369.38143921]
[399.61782837 379.54568481]
[387.61230469 388.55932617]
[374.76895142 396.33282471]
[361.21542358 402.78887939]
[347.08642578 407.86331177]
[332.52239990 411.50573730]
[317.66802979 413.67993164]
[302.67102051 414.36428833]
[287.68041992 413.55203247]
[272.84515381 411.25115967]
[258.31271362 407.48461914]
[244.22753906 402.28979492]
[230.72958374 395.71835327]
[217.95303345 387.83557129]
[206.02484131 378.71981812]
[195.06358337 368.46166992]
[185.17817688 357.16311646]
[176.46690369 344.93643188]
[169.01629639 331.90310669]
[162.90045166 318.19271851]
[158.18011475 303.94149780]
[154.90223694 289.29110718]
[153.09936523 274.38714600]
[152.78942871 259.37771606]
[153.97549438 244.41203308]
[156.64579773 229.63880920]
[160.77378845 215.20487976]
[166.31845093 201.25369263]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[24 142]
[25 141]
[26 140]
[27 139]
[45 138]
[46 137]
[47 136]
[48 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
