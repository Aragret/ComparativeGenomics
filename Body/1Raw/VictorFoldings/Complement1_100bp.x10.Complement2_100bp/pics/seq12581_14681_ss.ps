%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[118.19704437 552.96618652]
[105.77544403 544.54138184]
[94.11306763 535.09344482]
[83.29396057 524.69055176]
[73.39605713 513.40759277]
[64.49069214 501.32583618]
[56.64201355 488.53237915]
[49.90657806 475.11941528]
[44.33292007 461.18356323]
[39.96119308 446.82522583]
[36.82289505 432.14785767]
[34.94064331 417.25723267]
[34.32799530 402.26062012]
[34.98936844 387.26608276]
[36.91999435 372.38162231]
[40.10596466 357.71453857]
[44.52432251 343.37048340]
[50.14323425 329.45281982]
[56.92221451 316.06179810]
[64.81242371 303.29391479]
[73.75700378 291.24121094]
[83.69150543 279.99044800]
[94.54436493 269.62274170]
[106.23737335 260.21276855]
[118.68628693 251.82835388]
[131.80140686 244.52989197]
[145.48822021 238.36997986]
[159.64814758 233.39297485]
[155.89184570 218.87092590]
[152.13554382 204.34886169]
[148.37924194 189.82679749]
[144.62294006 175.30474854]
[138.04292297 161.82501221]
[128.90411377 149.93037415]
[119.76531219 138.03573608]
[110.62651062 126.14111328]
[101.48770905 114.24647522]
[88.64146423 108.72691345]
[86.61766052 94.89232635]
[77.47885895 82.99768829]
[68.34005737 71.10305786]
[59.20125198 59.20842743]
[43.70064926 63.47921753]
[27.78614044 61.47950363]
[13.89093876 53.54482651]
[4.12807941 40.91587830]
[-0.03090190 25.54454613]
[2.02228737 9.79229546]
[9.94392300 -3.93263626]
[0.62903982 -15.68988800]
[-8.68584347 -27.44713974]
[-18.00072670 -39.20439148]
[-27.31560898 -50.96164322]
[-39.97930527 -42.89722443]
[-53.40508270 -36.17766571]
[-67.45062256 -30.87419128]
[-81.96703339 -27.04302597]
[-96.80043793 -24.72478104]
[-111.79358673 -23.94403076]
[-126.78754425 -24.70905304]
[-141.62336731 -27.01173401]
[-156.14378357 -30.82766914]
[-170.19488525 -36.11640549]
[-183.62770081 -42.82187653]
[-196.29985046 -50.87300491]
[-208.07699585 -60.18444061]
[-218.83430481 -70.65747833]
[-228.45771790 -82.18109894]
[-236.84524536 -94.63314819]
[-243.90795898 -107.88162231]
[-249.57099915 -121.78607941]
[-253.77433777 -136.19912720]
[-256.47341919 -150.96798706]
[-257.63958740 -165.93608093]
[-257.26055908 -180.94476318]
[-255.34028625 -195.83491516]
[-251.89915466 -210.44869995]
[-246.97364807 -224.63119507]
[-240.61595154 -238.23207092]
[-232.89347839 -251.10714722]
[-223.88809204 -263.11993408]
[-213.69525146 -274.14309692]
[-202.42301941 -284.05978394]
[-190.19085693 -292.76486206]
[-177.12846375 -300.16604614]
[-163.37428284 -306.18490601]
[-149.07414246 -310.75762939]
[-134.37960815 -313.83575439]
[-119.44645691 -315.38659668]
[-104.43299866 -315.39379883]
[-89.49837494 -313.85720825]
[-74.80090332 -310.79315186]
[-60.49638748 -306.23413086]
[-46.73646164 -300.22842407]
[-33.66698837 -292.83972168]
[-21.42650986 -284.14633179]
[-10.14478588 -274.24044800]
[0.05859403 -263.22705078]
[9.07546711 -251.22288513]
[16.81024933 -238.35519409]
[23.18094826 -224.76040649]
[28.12003136 -210.58262634]
[31.57514000 -195.97215271]
[33.50965118 -181.08384705]
[33.90305328 -166.07553101]
[32.75117874 -151.10632324]
[30.06623840 -136.33489990]
[25.87669373 -121.91783142]
[20.22695732 -108.00795746]
[13.17691612 -94.75273895]
[4.80130816 -82.29267120]
[-4.81108189 -70.75984955]
[-15.55835724 -60.27652359]
[-6.24347448 -48.51927185]
[3.07140827 -36.76202011]
[12.38629150 -25.00477028]
[21.70117378 -13.24751949]
[35.04248047 -17.60054398]
[49.09822083 -17.13720512]
[62.17933655 -11.89278221]
[72.70691681 -2.47831273]
[79.40279388 9.99052715]
[81.44469452 24.02561760]
[78.56716156 37.94398499]
[71.09588623 50.06962204]
[80.23468781 61.96425629]
[89.37348938 73.85888672]
[98.51229095 85.75352478]
[111.35853577 91.27308655]
[113.38233948 105.10767365]
[122.52114105 117.00231171]
[131.65994263 128.89694214]
[140.79875183 140.79158020]
[149.93754578 152.68620300]
[146.99459839 137.97773743]
[147.23788452 122.97971344]
[150.65634155 108.37443542]
[157.09446716 94.82635498]
[166.25936890 82.95181274]
[177.73408508 73.29102325]
[190.99659729 66.28348541]
[205.44357300 62.24800110]
[220.41773987 61.36815262]
[235.23789978 63.68397141]
[249.22981262 69.09010315]
[261.75695801 77.34059906]
[272.24942017 88.06011963]
[280.22985840 100.76100159]
[285.33523560 114.86544037]
[287.33328247 129.73176575]
[286.13311768 144.68368530]
[281.78930664 159.04095459]
[274.49948120 172.15043640]
[264.59527588 183.41572571]
[252.52726746 192.32432556]
[238.84446716 198.47096252]
[224.16935730 201.57600403]
[209.16957092 201.49818420]
[194.52746582 198.24105835]
[180.90917969 191.95278931]
[168.93424988 182.91944885]
[159.14500427 171.54844666]
[162.90130615 186.07049561]
[166.65760803 200.59255981]
[170.41390991 215.11462402]
[174.17021179 229.63667297]
[188.96743774 227.12356567]
[203.92449951 225.87442017]
[218.93359375 225.89822388]
[233.88661194 227.19480896]
[248.67581177 229.75483704]
[263.19461060 233.55987549]
[277.33840942 238.58248901]
[291.00531006 244.78648376]
[304.09683228 252.12719727]
[316.51864624 260.55169678]
[328.18127441 269.99929810]
[339.00064087 280.40194702]
[348.89883423 291.68466187]
[357.80450439 303.76614380]
[365.65353394 316.55938721]
[372.38931274 329.97219849]
[377.96331787 343.90789795]
[382.33541870 358.26611328]
[385.47409058 372.94338989]
[387.35675049 387.83398438]
[387.96975708 402.83059692]
[387.30877686 417.82516479]
[385.37854004 432.70965576]
[382.19296265 447.37680054]
[377.77496338 461.72097778]
[372.15640259 475.63879395]
[365.37777710 489.02999878]
[357.48791504 501.79806519]
[348.54364014 513.85101318]
[338.60940552 525.10205078]
[327.75683594 535.47003174]
[316.06405640 544.88031006]
[303.61535645 553.26501465]
[290.50042725 560.56384277]
[276.81378174 566.72412109]
[262.65399170 571.70147705]
[248.12309265 575.46002197]
[233.32579041 577.97277832]
[218.36869812 579.22155762]
[203.35960388 579.19732666]
[188.40661621 577.90039062]
[173.61749268 575.33996582]
[159.09878540 571.53454590]
[144.95510864 566.51159668]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 166]
[29 165]
[30 164]
[31 163]
[32 162]
[33 134]
[34 133]
[35 132]
[36 131]
[37 130]
[39 128]
[40 127]
[41 126]
[42 125]
[49 117]
[50 116]
[51 115]
[52 114]
[53 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
