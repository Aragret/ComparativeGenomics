%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[58.63264465 210.11582947]
[61.25254822 224.89533997]
[62.55597305 239.84855652]
[62.53271866 254.85845947]
[61.18296814 269.80755615]
[58.51728058 284.57888794]
[54.55652237 299.05679321]
[49.33169174 313.12799072]
[42.88368225 326.68234253]
[35.26295853 339.61380005]
[26.52916336 351.82110596]
[16.75065231 363.20874023]
[6.00395632 373.68759155]
[-5.62681437 383.17562866]
[-18.05063248 391.59860229]
[-31.17026329 398.89056396]
[-44.88302231 404.99447632]
[-59.08159256 409.86257935]
[-73.65484619 413.45672607]
[-88.48872375 415.74880981]
[-103.46713257 416.72088623]
[-118.47283936 416.36538696]
[-133.38839722 414.68502808]
[-148.09709167 411.69299316]
[-162.48377991 407.41271973]
[-176.43586731 401.87768555]
[-189.84417725 395.13119507]
[-202.60374451 387.22607422]
[-214.61473083 378.22418213]
[-225.78311157 368.19598389]
[-236.02148438 357.21997070]
[-245.24972534 345.38198853]
[-253.39559937 332.77478027]
[-260.39535522 319.49691772]
[-266.19424438 305.65240479]
[-270.74679565 291.34954834]
[-274.01748657 276.70031738]
[-275.98062134 261.81933594]
[-276.62091064 246.82307434]
[-275.93328857 231.82890320]
[-273.92315674 216.95419312]
[-270.60626221 202.31535339]
[-266.00854492 188.02694702]
[-260.16601562 174.20079041]
[-253.12435913 160.94512939]
[-244.93872070 148.36367798]
[-235.67315674 136.55491638]
[-225.40017700 125.61125946]
[-214.20019531 115.61836243]
[-202.16084290 106.65444183]
[-189.37638855 98.78964233]
[-175.94683838 92.08552551]
[-161.97734070 86.59455872]
[-147.57720947 82.35971832]
[-132.85916138 79.41414642]
[-117.93836212 77.78089905]
[-102.93161011 77.47274780]
[-87.95634460 78.49211884]
[-73.12977600 80.83103180]
[-58.56794357 84.47117615]
[-44.38481522 89.38406372]
[-30.69139290 95.53124237]
[-17.59484863 102.86460114]
[-5.19768524 111.32675171]
[6.40307283 120.85145569]
[17.11663246 131.36418152]
[26.85914230 142.78262329]
[39.08562851 134.09280396]
[51.31211472 125.40297699]
[63.53860092 116.71315765]
[75.76508331 108.02333069]
[87.99156952 99.33351135]
[100.08732605 90.46260834]
[112.04965973 81.41261292]
[124.01199341 72.36260986]
[130.34931946 57.86609650]
[145.16734314 56.35771942]
[157.12968445 47.30772018]
[169.09201050 38.25772095]
[160.70077515 25.81996155]
[152.99519348 12.94614792]
[145.99789429 -0.32595733]
[139.72940063 -13.95742416]
[134.20808411 -27.90826988]
[129.45016479 -42.13757324]
[125.46957397 -56.60359573]
[122.27799988 -71.26390839]
[119.88480377 -86.07551575]
[118.29700470 -100.99495697]
[117.51925659 -115.97848511]
[117.55384064 -130.98214722]
[118.40065765 -145.96192932]
[120.05722046 -160.87388611]
[122.51867676 -175.67430115]
[125.77780151 -190.31974792]
[129.82504272 -204.76725769]
[134.64851379 -218.97448730]
[140.23408508 -232.89971924]
[146.56535339 -246.50215149]
[153.62376404 -259.74185181]
[161.38861084 -272.58001709]
[169.83711243 -284.97894287]
[178.94447327 -296.90231323]
[188.68402100 -308.31512451]
[199.02714539 -319.18392944]
[209.94354248 -329.47680664]
[221.40116882 -339.16357422]
[233.36642456 -348.21585083]
[245.80421448 -356.60705566]
[258.67803955 -364.31259155]
[271.95016479 -371.30984497]
[285.58166504 -377.57830811]
[299.53253174 -383.09954834]
[313.76184082 -387.85742188]
[328.22787476 -391.83798218]
[342.88821411 -395.02951050]
[357.69982910 -397.42263794]
[372.61926270 -399.01040649]
[387.60281372 -399.78808594]
[402.60644531 -399.75347900]
[417.58624268 -398.90658569]
[432.49819946 -397.24996948]
[447.29861450 -394.78848267]
[461.94403076 -391.52929688]
[476.39154053 -387.48202515]
[490.59875488 -382.65850830]
[504.52395630 -377.07287598]
[518.12634277 -370.74157715]
[531.36602783 -363.68310547]
[544.20416260 -355.91821289]
[556.60308838 -347.46969604]
[568.52642822 -338.36227417]
[579.93920898 -328.62268066]
[590.80798340 -318.27951050]
[601.10083008 -307.36309814]
[610.78753662 -295.90542603]
[619.83978271 -283.94015503]
[628.23095703 -271.50234985]
[635.93646240 -258.62847900]
[642.93365479 -245.35632324]
[649.20202637 -231.72480774]
[654.72326660 -217.77392578]
[659.48107910 -203.54460144]
[663.46160889 -189.07855225]
[666.65307617 -174.41821289]
[669.04614258 -159.60659790]
[670.63385010 -144.68713379]
[671.41149902 -129.70359802]
[671.37683105 -114.69995117]
[670.52990723 -99.72016907]
[668.87322998 -84.80821991]
[666.41168213 -70.00782013]
[663.15246582 -55.36240005]
[659.10516357 -40.91490555]
[654.28155518 -26.70772171]
[648.69592285 -12.78251648]
[642.36456299 0.81986505]
[635.30603027 14.05952358]
[627.54113770 26.89762497]
[619.09252930 39.29651260]
[609.98510742 51.21981430]
[600.24548340 62.63256454]
[589.90228271 73.50128174]
[578.98577881 83.79409027]
[567.52813721 93.48079681]
[555.56280518 102.53298950]
[543.12493896 110.92411041]
[530.25103760 118.62955475]
[516.97888184 125.62672424]
[503.34735107 131.89508057]
[489.39645386 137.41624451]
[475.16711426 142.17404175]
[460.70104980 146.15447998]
[446.04067993 149.34590149]
[431.22906494 151.73895264]
[416.30960083 153.32661438]
[401.32608032 154.10420227]
[386.32241821 154.06947327]
[371.34265137 153.22250366]
[356.43069458 151.56579590]
[341.63031006 149.10418701]
[326.98489380 145.84490967]
[312.53741455 141.79753113]
[298.33026123 136.97392273]
[284.40505981 131.38821411]
[270.80270386 125.05680084]
[257.56307983 117.99826050]
[244.72499084 110.23328400]
[232.32612610 101.78466034]
[220.40286255 92.67716980]
[208.99014282 82.93751526]
[198.12145996 72.59427643]
[187.82868958 61.67778015]
[178.14201355 50.22005844]
[166.17968750 59.27005768]
[154.21734619 68.32006073]
[148.73565674 82.16925812]
[133.06199646 84.32495117]
[121.09966278 93.37494659]
[109.13732147 102.42494965]
[107.25963593 107.32273102]
[102.77147675 110.81983185]
[96.68139648 111.55998993]
[84.45491028 120.24981689]
[72.22842407 128.93963623]
[60.00193787 137.62947083]
[47.77545166 146.31929016]
[35.54896545 155.00910950]
[43.12958527 167.96411133]
[49.53556442 181.53839111]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 208]
[68 207]
[69 206]
[70 205]
[71 204]
[72 203]
[73 200]
[74 199]
[75 198]
[77 196]
[78 195]
[79 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
