%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAGxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[104.72370911 678.09912109]
[90.68798828 672.78326416]
[77.13919830 666.32653809]
[64.16988373 658.77294922]
[51.86863327 650.17419434]
[40.31949234 640.58892822]
[29.60134315 630.08270264]
[19.78740692 618.72729492]
[10.94472313 606.60015869]
[3.13369703 593.78430176]
[-3.59231234 580.36712646]
[-9.18735981 566.44036865]
[-13.61322403 552.09912109]
[-16.83967209 537.44134521]
[-18.84466362 522.56719971]
[-19.61450386 507.57833862]
[-19.14393044 492.57705688]
[-17.43616104 477.66589355]
[-14.50286007 462.94668579]
[-10.36406612 448.51995850]
[-5.04805040 434.48431396]
[1.40887141 420.93560791]
[8.96259212 407.96636963]
[17.56151009 395.66522217]
[27.14688683 384.11621094]
[37.65324402 373.39816284]
[49.00880814 363.58438110]
[61.13600922 354.74182129]
[73.95201111 346.93096924]
[87.36925507 340.20510864]
[101.29608917 334.61022949]
[115.63739014 330.18453979]
[130.29518127 326.95825195]
[128.29115295 312.09274292]
[126.28714752 297.22720337]
[124.28313446 282.36169434]
[122.27912140 267.49615479]
[120.27510834 252.63063049]
[118.27109528 237.76509094]
[115.82536316 222.96582031]
[112.94009399 208.24594116]
[110.05481720 193.52604675]
[107.16954803 178.80615234]
[97.12862396 167.80482483]
[102.06695557 152.77407837]
[99.18167877 138.05418396]
[89.14075470 127.05286407]
[94.07908630 112.02210999]
[90.15810394 126.50057983]
[83.35086060 139.86700439]
[73.94680786 151.55305481]
[62.34580612 161.06182861]
[49.04113770 167.98901367]
[34.59852219 172.04003906]
[19.63206863 173.04267883]
[4.77815914 170.95429993]
[-9.33161259 165.86367798]
[-22.09729004 157.98728943]
[-32.97607422 147.66004944]
[-41.50538635 135.32104492]
[-47.32256317 121.49497223]
[-50.18025208 106.76969910]
[-49.95693970 91.77136230]
[-46.66212845 77.13769531]
[-40.43590927 63.49092865]
[-31.54302788 51.41133499]
[-20.36161232 41.41253662]
[-7.36710262 33.91969299]
[6.88796902 29.25140190]
[21.79746819 27.60616302]
[36.72743607 29.05393028]
[51.04304504 33.53314590]
[64.13558197 40.85335159]
[75.44835663 50.70328522]
[84.50033569 62.66412735]
[90.90662384 76.22729492]
[94.39484406 90.81624603]
[89.90622711 75.64512634]
[100.27024841 64.94763184]
[103.59250641 50.32017517]
[106.91476440 35.69271469]
[110.23703003 21.06525421]
[97.73422241 13.92588425]
[87.76160431 3.56347680]
[81.12133789 -9.17551041]
[78.34388733 -23.25399208]
[79.64566040 -37.52867889]
[84.91216278 -50.84292221]
[93.70802307 -62.12044525]
[105.31295013 -70.45232391]
[118.78073120 -75.17025757]
[133.01635742 -75.90016174]
[136.55603027 -90.47653198]
[132.29377747 -105.71279907]
[142.81593323 -116.25479889]
[146.35560608 -130.83117676]
[149.89527893 -145.40754700]
[136.17604065 -151.57983398]
[123.82468414 -160.16813660]
[113.26190186 -170.87991333]
[104.84745026 -183.35034180]
[98.86793518 -197.15469360]
[95.52700043 -211.82278442]
[94.93844604 -226.85502625]
[97.12231445 -241.73942566]
[102.00422668 -255.96902466]
[109.41790009 -269.05917358]
[119.11083984 -280.56402588]
[130.75289917 -290.09173584]
[143.94755554 -297.31777954]
[158.24540710 -301.99603271]
[173.15945435 -303.96719360]
[188.18176270 -303.16409302]
[202.80065918 -299.61410522]
[216.51823425 -293.43811035]
[228.86727905 -284.84649658]
[239.42716980 -274.13186646]
[247.83825684 -261.65914917]
[253.81405640 -247.85321045]
[257.15103149 -233.18421936]
[257.73553467 -218.15180969]
[255.54765320 -203.26800537]
[250.66191101 -189.03971863]
[243.24470520 -175.95156860]
[233.54866028 -164.44932556]
[221.90403748 -154.92475891]
[208.70744324 -147.70228577]
[194.40832520 -143.02786255]
[179.49374390 -141.06072998]
[164.47164917 -141.86787415]
[160.93197632 -127.29150391]
[157.39230347 -112.71512604]
[161.90773010 -98.52146149]
[151.13240051 -86.93686676]
[147.59272766 -72.36048889]
[161.01191711 -64.28262329]
[171.29080200 -52.43864059]
[177.41413879 -37.98006821]
[178.77142334 -22.31757164]
[175.21786499 -6.98330832]
[167.08958435 6.51894474]
[155.17199707 16.86126328]
[140.62382507 23.02216911]
[124.86448669 24.38751411]
[121.54222870 39.01497269]
[118.21997070 53.64243317]
[114.89771271 68.26989746]
[119.62396240 82.39476013]
[109.02230835 94.13850403]
[108.79898071 109.13684082]
[119.04627991 121.19102478]
[113.90157318 135.16891479]
[116.78684235 149.88880920]
[127.03414154 161.94299316]
[121.88943481 175.92088318]
[124.77471161 190.64076233]
[127.65998077 205.36065674]
[130.54525757 220.08055115]
[133.51379395 223.24942017]
[135.15454102 226.83724976]
[135.49880981 230.37516785]
[134.72700500 233.45265198]
[133.13662720 235.76107788]
[135.14064026 250.62661743]
[137.14465332 265.49212646]
[139.14866638 280.35766602]
[141.15267944 295.22320557]
[143.15669250 310.08871460]
[145.16070557 324.95425415]
[160.14956665 324.18386841]
[175.15084839 324.65390015]
[190.06208801 326.36114502]
[204.78140259 329.29391479]
[219.20826721 333.43218994]
[233.24411011 338.74771118]
[246.79304504 345.20416260]
[259.76254272 352.75741577]
[272.06399536 361.35589600]
[283.61337280 370.94085693]
[294.33175659 381.44683838]
[304.14596558 392.80203247]
[312.98895264 404.92892456]
[320.80029297 417.74462891]
[327.52661133 431.16165161]
[333.12197876 445.08828735]
[337.54818726 459.42941284]
[340.77499390 474.08709717]
[342.78033447 488.96118164]
[343.55053711 503.95004272]
[343.08032227 518.95135498]
[341.37289429 533.86254883]
[338.43994141 548.58184814]
[334.30151367 563.00860596]
[328.98583984 577.04443359]
[322.52923584 590.59326172]
[314.97579956 603.56268311]
[306.37719727 615.86401367]
[296.79208374 627.41326904]
[286.28598022 638.13159180]
[274.93066406 647.94561768]
[262.80368042 656.78845215]
[249.98785400 664.59967041]
[236.57077026 671.32580566]
[222.64405823 676.92102051]
[208.30287170 681.34704590]
[193.64515686 684.57366943]
[178.77105713 686.57885742]
[163.78218079 687.34887695]
[148.78089905 686.87847900]
[133.86972046 685.17089844]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 169]
[34 168]
[35 167]
[36 166]
[37 165]
[38 164]
[39 163]
[40 158]
[41 157]
[42 156]
[43 155]
[45 153]
[46 152]
[48 150]
[77 149]
[79 147]
[80 146]
[81 145]
[82 144]
[92 135]
[93 134]
[95 132]
[96 131]
[97 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
