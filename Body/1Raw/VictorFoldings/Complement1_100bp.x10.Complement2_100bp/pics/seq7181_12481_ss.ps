%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[96.44951630 573.41809082]
[86.73123932 561.93792725]
[79.21919250 548.90686035]
[74.15485382 534.74377441]
[71.70101929 519.90405273]
[71.93657684 504.86459351]
[74.85394287 490.10897827]
[80.35935211 476.11145020]
[88.27581024 463.32205200]
[98.34885406 452.15182495]
[110.25466156 442.95989990]
[123.61051941 436.04174805]
[137.98709106 431.61975098]
[136.20462036 416.72604370]
[127.00975037 405.00839233]
[133.05233765 390.38656616]
[131.26988220 375.49282837]
[129.48741150 360.59912109]
[115.74105835 354.86297607]
[106.65107727 342.93704224]
[104.73836517 327.96343994]
[110.61592865 313.95092773]
[122.79762268 304.70141602]
[113.60275269 292.98373413]
[119.64533997 278.36190796]
[117.86287689 263.46820068]
[102.05988312 255.58549500]
[94.08201599 239.65426636]
[97.29242706 221.96887207]
[110.59141541 209.64431763]
[108.36629486 194.81027222]
[106.14117432 179.97622681]
[103.91606140 165.14218140]
[101.47033691 150.34291077]
[98.80453491 135.58169556]
[88.92852020 124.43209839]
[94.09008789 109.47653961]
[91.31447601 94.73557281]
[88.42920685 80.01568604]
[85.54393005 65.29579163]
[81.57183838 50.83126831]
[76.53491974 36.70223618]
[71.49800110 22.57320786]
[66.14682007 8.56018543]
[60.48403168 -5.32984161]
[54.82124329 -19.21986771]
[42.44666290 -29.07787514]
[44.80662918 -43.78432846]
[39.14384079 -57.67435837]
[33.48105240 -71.56438446]
[31.03465271 -56.76522446]
[22.84854507 -44.19591141]
[10.30223274 -35.97459412]
[-4.49000931 -33.48670959]
[-19.03542900 -37.15150833]
[-30.88286781 -46.35141373]
[-38.03582382 -59.53607178]
[-39.28889847 -74.48364258]
[-34.43092728 -88.67519379]
[-24.28056145 -99.71920013]
[-10.54831791 -105.75455475]
[4.45167923 -105.76419067]
[18.19166756 -99.74649048]
[28.35706520 -88.71411133]
[18.10976791 -100.76829529]
[23.25447273 -114.74618530]
[20.36919975 -129.46607971]
[17.48392677 -144.18595886]
[14.59865475 -158.90585327]
[11.71338177 -173.62574768]
[8.82810879 -188.34564209]
[5.94283628 -203.06553650]
[3.05756378 -217.78541565]
[-6.18782234 -205.97344971]
[-21.06031418 -204.02178955]
[-33.04027557 -213.04844666]
[-35.26503754 -227.88253784]
[-26.46015549 -240.02642822]
[-11.66946793 -242.52354431]
[0.63373333 -233.94421387]
[-0.92678970 -248.86282349]
[-2.48731279 -263.78143311]
[-13.85728645 -271.00210571]
[-18.91869926 -283.27371216]
[-16.03088951 -296.03079224]
[-6.46668291 -304.66534424]
[-7.80491734 -319.60552979]
[-9.14315128 -334.54571533]
[-10.48138523 -349.48590088]
[-11.81962013 -364.42608643]
[-13.15785408 -379.36627197]
[-14.49608803 -394.30645752]
[-29.31429100 -397.23861694]
[-42.70553207 -404.22796631]
[-53.58423996 -414.70797729]
[-61.06853104 -427.82904053]
[-64.55168152 -442.52749634]
[-63.75133514 -457.61178589]
[-58.73236465 -471.85913086]
[-49.90164185 -484.11453247]
[-37.97503281 -493.38452148]
[-23.91937256 -498.91760254]
[-8.87408924 -500.26525879]
[5.94116068 -497.31820679]
[19.32537270 -490.31539917]
[30.19354820 -479.82446289]
[37.66465378 -466.69589233]
[41.13303757 -451.99395752]
[40.31753540 -436.91046143]
[35.28425598 -422.66818237]
[26.44122696 -410.42166138]
[14.50530910 -401.16363525]
[0.44409689 -395.64468384]
[1.78233111 -380.70449829]
[3.12056518 -365.76431274]
[4.45879936 -350.82412720]
[5.79703379 -335.88394165]
[7.13526773 -320.94375610]
[8.47350216 -306.00357056]
[21.82800293 -295.78125000]
[23.69399834 -278.72741699]
[12.43129158 -265.34194946]
[13.99181461 -250.42333984]
[15.55233765 -235.50474548]
[17.77745438 -220.67070007]
[20.66272736 -205.95080566]
[23.54800034 -191.23091125]
[26.43327332 -176.51101685]
[29.31854630 -161.79113770]
[32.20381927 -147.07124329]
[35.08909225 -132.35134888]
[37.97436523 -117.63145447]
[48.01528931 -106.63013458]
[43.07695770 -91.59938049]
[47.37108231 -77.22717285]
[53.03386688 -63.33714294]
[58.69665527 -49.44711685]
[70.66619873 -40.58261871]
[68.71127319 -24.88265610]
[74.37406158 -10.99262810]
[80.03684235 2.89739871]
[83.12750244 4.59450293]
[85.54970551 7.87291431]
[86.56918335 12.40214825]
[85.62702942 17.53629112]
[90.66394806 31.66532135]
[95.70086670 45.79434967]
[99.96939850 31.41451836]
[110.78775024 21.02397537]
[125.32801819 17.33878708]
[139.78941345 21.32225227]
[150.39176941 31.93310165]
[154.36364746 46.39768600]
[150.66680908 60.93499756]
[140.26760864 71.74501801]
[125.88435364 76.00202942]
[111.27680969 72.59326935]
[100.26382446 62.41051865]
[103.14909363 77.13040924]
[106.03437042 91.85030365]
[110.55198669 98.52590179]
[108.85130310 106.81073761]
[118.91799927 119.01615906]
[113.56575775 132.91589355]
[116.23155212 147.67710876]
[120.20364380 152.96238708]
[120.81806946 158.61212158]
[118.75010681 162.91706848]
[120.97521973 177.75111389]
[123.20034027 192.58515930]
[125.42545319 207.41918945]
[137.18017578 211.67295837]
[145.95997620 220.46974182]
[150.14215088 232.09681702]
[148.99076843 244.32691956]
[142.78541565 254.84484863]
[132.75659180 261.68572998]
[134.53906250 276.57946777]
[143.86141968 289.36242676]
[137.69134521 302.91894531]
[151.71168518 309.03262329]
[160.72991943 321.26245117]
[162.40464783 336.26449585]
[156.38565063 349.99865723]
[144.38113403 358.81665039]
[146.16358948 373.71038818]
[147.94606018 388.60409546]
[157.26843262 401.38705444]
[151.09834290 414.94357300]
[152.88081360 429.83728027]
[167.89485168 430.74185181]
[182.50605774 434.31292725]
[196.24472046 440.43572998]
[208.66920471 448.91348267]
[219.38012695 459.47360229]
[228.03315735 471.77664185]
[234.35014343 485.42709351]
[238.12802124 499.98620605]
[239.24534607 514.98590088]
[237.66619873 529.94409180]
[233.44136047 544.37982178]
[226.70660400 557.82910156]
[217.67846680 569.85955811]
[206.64714050 580.08447266]
[193.96723938 588.17523193]
[180.04637146 593.87164307]
[165.33204651 596.99066162]
[150.29725647 597.43200684]
[135.42530823 595.18145752]
[121.19427490 590.31140137]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 190]
[14 189]
[16 187]
[17 186]
[18 185]
[23 180]
[25 178]
[26 177]
[30 171]
[31 170]
[32 169]
[33 168]
[34 165]
[35 164]
[37 162]
[38 160]
[39 159]
[40 158]
[41 147]
[42 146]
[43 145]
[44 141]
[45 140]
[46 139]
[48 137]
[49 136]
[50 135]
[64 134]
[66 132]
[67 131]
[68 130]
[69 129]
[70 128]
[71 127]
[72 126]
[73 125]
[80 124]
[81 123]
[82 122]
[86 119]
[87 118]
[88 117]
[89 116]
[90 115]
[91 114]
[92 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
