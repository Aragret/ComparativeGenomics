%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[146.52021790 768.69671631]
[131.96823120 765.04718018]
[117.59885406 760.73431396]
[103.44232941 755.76721191]
[89.52841187 750.15631104]
[75.88636780 743.91339111]
[62.54488373 737.05157471]
[49.53202057 729.58532715]
[36.87514114 721.53033447]
[24.60086823 712.90356445]
[12.73500919 703.72308350]
[1.30252063 694.00830078]
[-9.67255497 683.77954102]
[-20.16713524 673.05834961]
[-30.15915298 661.86737061]
[-39.62759399 650.22998047]
[-48.55253983 638.17077637]
[-56.91522980 625.71508789]
[-64.69807434 612.88903809]
[-71.88470459 599.71966553]
[-78.46000671 586.23468018]
[-84.41015625 572.46246338]
[-89.72263336 558.43188477]
[-94.38626862 544.17248535]
[-98.39125824 529.71429443]
[-101.72917938 515.08770752]
[-104.39300537 500.32342529]
[-106.37713623 485.45254517]
[-107.67740631 470.50634766]
[-108.29106903 455.51626587]
[-108.21685028 440.51379395]
[-107.45488739 425.53051758]
[-106.00679779 410.59790039]
[-103.87562561 395.74740601]
[-101.06584167 381.01022339]
[-97.58336639 366.41735840]
[-93.43551636 351.99948120]
[-88.63101196 337.78695679]
[-83.17996979 323.80963135]
[-77.09384155 310.09692383]
[-70.38543701 296.67764282]
[-63.06885147 283.58004761]
[-55.15948105 270.83166504]
[-46.67395782 258.45932007]
[-37.63012314 246.48899841]
[-28.04700089 234.94589233]
[-17.94474220 223.85427856]
[-7.34459448 213.23748779]
[3.73115253 203.11784363]
[15.25920486 193.51661682]
[27.21531868 184.45402527]
[39.57435226 175.94909668]
[52.31031036 168.01972961]
[65.39641571 160.68260193]
[78.80513763 153.95315552]
[92.50828552 147.84552002]
[106.47703552 142.37255859]
[101.65103912 128.17010498]
[96.82504272 113.96764374]
[86.43765259 104.60848999]
[88.97250366 90.85835266]
[77.20661926 80.28128052]
[80.43774414 65.74136353]
[75.61174774 51.53890991]
[60.98136520 54.90685272]
[46.08531952 56.77736282]
[31.07646370 57.13124847]
[16.10881233 55.96487808]
[1.33595896 53.29021835]
[-13.09050274 49.13471222]
[-27.02253342 43.54100800]
[-40.31716919 36.56650543]
[-52.83798218 28.28277397]
[-64.45648956 18.77481461]
[-75.05346680 8.14019871]
[-84.52017212 -3.51194596]
[-92.75946808 -16.06204987]
[-99.68679047 -29.38132858]
[-105.23106384 -43.33310318]
[-109.33539581 -57.77420807]
[-111.95766449 -72.55644989]
[-113.07096100 -87.52814484]
[-112.66386414 -102.53565216]
[-110.74055481 -117.42497253]
[-107.32076263 -132.04331970]
[-102.43958282 -146.24067688]
[-96.14710236 -159.87136841]
[-88.50788879 -172.79551697]
[-79.60034943 -184.88049316]
[-69.51586914 -196.00228882]
[-58.35794830 -206.04678345]
[-46.24107742 -214.91088867]
[-33.28959656 -222.50366211]
[-19.63640785 -228.74716187]
[-5.42161703 -233.57736206]
[9.20890999 -236.94465637]
[24.10503769 -238.81451416]
[39.11391068 -239.16773987]
[54.08150864 -238.00070190]
[68.85424805 -235.32539368]
[83.28052521 -231.16926575]
[97.21231079 -225.57493591]
[110.50663757 -218.59985352]
[123.02708435 -210.31556702]
[134.64517212 -200.80709839]
[145.24168396 -190.17201233]
[154.70788574 -178.51945496]
[162.94662476 -165.96899414]
[169.87335205 -152.64939880]
[175.41702271 -138.69738770]
[179.52070618 -124.25610352]
[182.14233398 -109.47373962]
[183.25497437 -94.50199890]
[182.84721375 -79.49451447]
[180.92324829 -64.60527802]
[177.50280762 -49.98707962]
[172.62100220 -35.78993225]
[166.32792664 -22.15951920]
[158.68814087 -9.23571110]
[149.78007507 2.84887385]
[139.69511414 13.97022724]
[128.53674316 24.01422501]
[116.41947937 32.87779999]
[103.46766663 40.47000122]
[89.81420135 46.71290970]
[94.64019775 60.91536713]
[106.06089783 70.47658539]
[103.17495728 86.03235626]
[113.56234741 95.39151001]
[111.02749634 109.14164734]
[115.85349274 123.34410095]
[120.67949677 137.54655457]
[135.09080505 133.37597656]
[149.67816162 129.87048340]
[164.41088867 127.03746796]
[179.25801086 124.88287354]
[194.18830872 123.41123962]
[209.17037964 122.62564850]
[224.17269897 122.52777100]
[239.16374207 123.11779785]
[254.11196899 124.39449310]
[268.98596191 126.35517120]
[283.75439453 128.99571228]
[298.38626099 132.31056213]
[312.85073853 136.29273987]
[327.11746216 140.93388367]
[341.15640259 146.22422791]
[354.93801880 152.15264893]
[368.43338013 158.70668030]
[381.61404419 165.87252808]
[394.45230103 173.63513184]
[406.92120361 181.97816467]
[418.99447632 190.88409424]
[430.64675903 200.33416748]
[441.85351562 210.30851746]
[452.59121704 220.78617859]
[462.83724976 231.74511719]
[472.57009888 243.16226196]
[481.76925659 255.01362610]
[490.41537476 267.27429199]
[498.49032593 279.91845703]
[505.97708130 292.91952515]
[512.85992432 306.25015259]
[519.12432861 319.88235474]
[524.75720215 333.78738403]
[529.74664307 347.93606567]
[534.08215332 362.29861450]
[537.75463867 376.84484863]
[540.75634766 391.54412842]
[543.08099365 406.36557007]
[544.72369385 421.27801514]
[545.68096924 436.25009155]
[545.95080566 451.25030518]
[545.53265381 466.24713135]
[544.42742920 481.20901489]
[542.63739014 496.10449219]
[540.16632080 510.90225220]
[537.01940918 525.57110596]
[533.20330811 540.08032227]
[528.72601318 554.39929199]
[523.59692383 568.49798584]
[517.82690430 582.34667969]
[511.42800903 595.91625977]
[504.41369629 609.17816162]
[496.79879761 622.10461426]
[488.59924316 634.66833496]
[479.83230591 646.84289551]
[470.51641846 658.60272217]
[460.67117310 669.92309570]
[450.31729126 680.78021240]
[439.47653198 691.15118408]
[428.17172241 701.01428223]
[416.42657471 710.34869385]
[404.26583862 719.13482666]
[391.71508789 727.35412598]
[378.80068970 734.98944092]
[365.54980469 742.02465820]
[351.99035645 748.44494629]
[338.15078735 754.23681641]
[324.06024170 759.38812256]
[309.74832153 763.88800049]
[295.24517822 767.72698975]
[280.58123779 770.89697266]
[265.78741455 773.39141846]
[250.89479065 775.20489502]
[235.93466187 776.33374023]
[220.93852234 776.77557373]
[205.93789673 776.52935791]
[190.96434021 775.59570312]
[176.04931641 773.97650146]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 132]
[58 131]
[59 130]
[61 128]
[63 126]
[64 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
