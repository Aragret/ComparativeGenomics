%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[15.11657047 568.56042480]
[4.58556938 579.32666016]
[-8.01389599 587.57696533]
[-22.09252548 592.92547607]
[-36.99183655 595.12194824]
[-52.01496124 594.06372070]
[-66.45923615 589.80029297]
[-79.64908600 582.53106689]
[-90.96759033 572.59600830]
[-99.88536072 560.45977783]
[-105.98530579 546.69006348]
[-108.98210907 531.93090820]
[-108.73561859 516.87255859]
[-105.25734711 502.21939087]
[-98.70999146 488.65673828]
[-89.39977264 476.81890869]
[-77.76215363 467.25961304]
[-64.34145355 460.42596436]
[-49.76536942 456.63757324]
[-34.71566010 456.07165527]
[-32.04986572 441.31042480]
[-29.38406944 426.54919434]
[-26.71827316 411.78799438]
[-24.05247879 397.02676392]
[-37.67567062 403.30441284]
[-51.14554596 396.70422363]
[-54.53261566 382.09161377]
[-45.34005356 370.23849487]
[-30.34427834 369.88250732]
[-20.60004616 381.28448486]
[-16.84374619 366.76242065]
[-13.08744526 352.24035645]
[-9.33114433 337.71829224]
[-10.69947147 330.45541382]
[-5.40930367 323.00881958]
[-1.43720722 308.54428101]
[2.53488898 294.07977295]
[6.50698519 279.61523438]
[10.47908115 265.15072632]
[14.45117760 250.68618774]
[18.42327309 236.22166443]
[7.94822359 246.95820618]
[-5.53705645 253.52687073]
[-20.44832993 255.15596008]
[-35.03383636 251.65408325]
[-47.58008194 243.43267822]
[-56.61314774 231.45755005]
[-61.07183838 217.13552856]
[-60.43235397 202.14916992]
[-54.76981354 188.25903320]
[-44.74945450 177.09693909]
[-31.54845428 169.97419739]
[-16.71765327 167.72755432]
[-1.99936140 170.62097168]
[10.87733364 178.31452942]
[20.39968872 189.90438843]
[25.44902802 204.02897644]
[25.43189049 219.03051758]
[32.70512009 205.91181946]
[39.97834778 192.79312134]
[47.25157928 179.67442322]
[54.52480698 166.55574036]
[53.92914963 151.67304993]
[67.38748932 143.35537720]
[74.66071320 130.23667908]
[74.06505585 115.35398865]
[87.52339935 107.03631592]
[87.47257233 93.05458069]
[99.35791016 85.69045258]
[106.63114166 72.57176208]
[113.90436554 59.45306396]
[121.17759705 46.33436966]
[128.45082092 33.21567917]
[135.72406006 20.09698296]
[142.99728394 6.97828960]
[149.27464294 -6.64502668]
[154.52136230 -20.69749832]
[159.76808167 -34.74996948]
[165.01480103 -48.80244064]
[170.26152039 -62.85491180]
[175.50823975 -76.90737915]
[174.79243469 -83.47998810]
[177.14953613 -88.65116882]
[181.12603760 -91.29624939]
[186.78883362 -105.18627930]
[192.45161438 -119.07630157]
[190.49668884 -134.77626038]
[202.46623230 -143.64076233]
[208.12901306 -157.53079224]
[213.79180908 -171.42082214]
[216.34764099 -186.20147705]
[215.67785645 -201.18650818]
[212.16836548 -209.61985779]
[215.11132812 -216.39929199]
[214.66471863 -231.39265442]
[214.21810913 -246.38600159]
[213.77151489 -261.37936401]
[199.54832458 -266.74304199]
[188.46382141 -277.14508057]
[182.20832825 -290.99923706]
[181.73576355 -306.19281006]
[187.11816406 -320.40893555]
[197.53477478 -331.47973633]
[211.39714050 -337.71701050]
[226.59132385 -338.16958618]
[240.80035400 -332.76849365]
[251.85745239 -322.33734131]
[258.07647705 -308.46676636]
[258.50906372 -293.27200317]
[253.08927917 -279.07009888]
[242.64358521 -268.02673340]
[228.76486206 -261.82595825]
[229.21147156 -246.83261108]
[229.65806580 -231.83924866]
[230.10467529 -216.84590149]
[230.66288757 -201.85629272]
[231.33267212 -186.87126160]
[237.36958313 -200.60281372]
[246.01306152 -212.86210632]
[256.91882324 -223.16087341]
[269.65249634 -231.08889771]
[283.70690918 -236.33041382]
[298.52227783 -238.67666626]
[313.50851440 -238.03417969]
[328.06869507 -234.42857361]
[341.62295532 -228.00343323]
[353.63137817 -219.01469421]
[363.61569214 -207.82034302]
[371.17825317 -194.86627197]
[376.01779175 -180.66842651]
[377.94158936 -165.79231262]
[376.87301636 -150.83041382]
[372.85461426 -136.37869263]
[366.04647827 -123.01271820]
[356.71972656 -111.26488495]
[345.24584961 -101.60308075]
[332.08187866 -94.41214752]
[317.75207520 -89.97848511]
[302.82727051 -88.47869873]
[287.90182495 -89.97251129]
[273.57025146 -94.40042877]
[260.40341187 -101.58609009]
[248.92565918 -111.24328613]
[239.59420776 -122.98738861]
[232.78070068 -136.35063171]
[228.75651550 -150.80075073]
[227.68182373 -165.75802612]
[222.01904297 -151.86801147]
[216.35626221 -137.97798157]
[218.71621704 -123.27152252]
[206.34164429 -113.41351318]
[200.67884827 -99.52349091]
[195.01606750 -85.63346100]
[189.56071472 -71.66066742]
[184.31399536 -57.60819244]
[179.06727600 -43.55572128]
[173.82055664 -29.50325012]
[168.57383728 -15.45077991]
[163.32711792 -1.39830852]
[175.85385132 -9.64942455]
[190.82174683 -10.63038158]
[204.31822205 -4.08475876]
[212.81532288 8.27643299]
[214.09196472 23.22200966]
[207.81439209 36.84523010]
[195.62356567 45.58501816]
[180.70614624 47.15681839]
[166.96150208 41.14976120]
[157.98245239 29.13407707]
[156.11598206 14.25151920]
[148.84275818 27.37021255]
[141.56951904 40.48890686]
[134.29629517 53.60760117]
[127.02306366 66.72629547]
[119.74983215 79.84498596]
[112.47660065 92.96368408]
[112.52742767 106.94541931]
[100.64208984 114.30954742]
[100.71752167 130.13056946]
[87.77941132 137.50990295]
[80.50617981 150.62860107]
[80.58161163 166.44963074]
[67.64350128 173.82896423]
[60.37027359 186.94766235]
[53.09704208 200.06634521]
[45.82381439 213.18504333]
[38.55058289 226.30374146]
[32.88779831 240.19377136]
[28.91570091 254.65829468]
[24.94360542 269.12280273]
[20.97150993 283.58734131]
[16.99941254 298.05184937]
[13.02731705 312.51638794]
[9.05522060 326.98089600]
[5.19091511 341.47460938]
[1.43461430 355.99667358]
[-2.32168651 370.51870728]
[-6.07798719 385.04077148]
[-9.29126072 399.69256592]
[-11.95705605 414.45379639]
[-14.62285233 429.21499634]
[-17.28864670 443.97622681]
[-19.95444298 458.73742676]
[-6.05335665 464.53173828]
[6.27686787 473.17926025]
[16.45952225 484.27554321]
[24.01834869 497.30160522]
[28.59980392 511.64819336]
[29.98960495 526.64428711]
[28.12274933 541.58843994]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 203]
[21 202]
[22 201]
[23 200]
[24 199]
[30 198]
[31 197]
[32 196]
[33 195]
[35 194]
[36 193]
[37 192]
[38 191]
[39 190]
[40 189]
[41 188]
[58 187]
[59 186]
[60 185]
[61 184]
[62 183]
[64 181]
[65 180]
[67 178]
[69 176]
[70 175]
[71 174]
[72 173]
[73 172]
[74 171]
[75 170]
[76 159]
[77 158]
[78 157]
[79 156]
[80 155]
[81 154]
[84 153]
[85 152]
[86 151]
[88 149]
[89 148]
[90 147]
[91 117]
[92 116]
[94 115]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
