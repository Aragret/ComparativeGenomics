%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[108.02705383 616.51635742]
[94.24687195 622.66198730]
[79.34547424 625.03070068]
[64.33886719 623.46099854]
[50.25021744 618.05987549]
[38.04011536 609.19555664]
[28.54106712 597.47247314]
[22.40073586 583.68994141]
[20.03777504 568.78759766]
[21.61329842 553.78161621]
[27.01988220 539.69506836]
[35.88889694 527.48834229]
[47.61563873 517.99383545]
[61.40056229 511.85882568]
[76.30377960 509.50161743]
[77.86430359 494.58300781]
[79.42482758 479.66442871]
[80.98535156 464.74581909]
[82.54587555 449.82720947]
[84.10639954 434.90859985]
[74.67180634 426.13259888]
[71.97425079 413.33398438]
[77.21781158 401.13906860]
[88.69403076 394.08847046]
[90.47649384 379.19476318]
[92.25895691 364.30102539]
[94.04142761 349.40731812]
[94.93424225 334.43389893]
[94.93424225 319.43389893]
[94.93424225 304.43389893]
[87.19693756 291.70663452]
[94.93424225 277.90646362]
[85.35354614 263.20349121]
[94.69298553 247.33351135]
[94.46965790 232.33517456]
[86.54373169 219.72451782]
[94.07470703 205.81066895]
[93.85137939 190.81233215]
[85.92544556 178.20167542]
[93.45642853 164.28782654]
[93.23310089 149.28948975]
[85.30716705 136.67883301]
[92.83814240 122.76499176]
[92.61481476 107.76665497]
[90.27932739 92.94958496]
[78.83358002 82.02688599]
[82.49617767 67.58962250]
[78.09518433 53.24977493]
[73.69418335 38.90992737]
[69.29318237 24.57007980]
[66.01107788 21.72723770]
[64.00598907 18.32957458]
[63.29551697 14.84666729]
[63.74296951 11.70558548]
[65.08456421 9.24422932]
[61.54488754 -5.33214569]
[58.00521469 -19.90852165]
[54.46554184 -34.48489761]
[50.92587280 -49.06127167]
[40.33707428 -56.42606354]
[37.68895721 -68.63963318]
[43.86810684 -79.03889465]
[40.54584885 -93.66635132]
[37.22358704 -108.29381561]
[33.90132904 -122.92127228]
[30.57906914 -137.54873657]
[25.75242615 -123.34649658]
[15.62645626 -112.28012085]
[1.90756488 -106.21447754]
[-13.09237385 -106.17173767]
[-26.84560776 -112.15910339]
[-37.03447342 -123.16760254]
[-41.94197083 -137.34210205]
[-40.74109650 -152.29396057]
[-33.63422394 -165.50350952]
[-21.81898308 -174.74472046]
[-7.28644800 -178.46029663]
[7.51439142 -176.02407837]
[20.08933449 -167.84661865]
[28.31988716 -155.30442810]
[27.87328148 -170.29777527]
[27.42667580 -185.29112244]
[19.28192329 -198.85481262]
[26.63685417 -211.80680847]
[26.19024849 -226.80015564]
[25.74364281 -241.79350281]
[25.29703712 -256.78686523]
[13.26783657 -247.82592773]
[-1.27631044 -251.49577332]
[-7.61399937 -265.09112549]
[-1.07332182 -278.58999634]
[13.52417755 -282.04153442]
[25.41701508 -272.90283203]
[18.30364227 -287.03472900]
[26.60152817 -299.40380859]
[27.27131271 -314.38885498]
[20.15793991 -328.52075195]
[28.45582581 -340.88983154]
[29.12561035 -355.87487793]
[15.21992588 -361.95733643]
[4.45325661 -372.65515137]
[-1.71829331 -386.52154541]
[-2.46007252 -401.68115234]
[2.32823849 -416.08380127]
[11.99905968 -427.78167725]
[25.24449348 -435.19265747]
[40.27320099 -437.31454468]
[55.05267715 -433.86032104]
[67.58411407 -425.29718018]
[76.17273712 -412.78320312]
[79.65701294 -398.01077271]
[77.56571960 -382.97778320]
[70.18167877 -369.71728516]
[58.50353241 -360.02270508]
[44.11064911 -355.20510864]
[43.44086456 -340.22006226]
[50.60214615 -327.16000366]
[42.25635147 -313.71905518]
[41.58656693 -298.73403931]
[48.74784851 -285.67395020]
[40.40205383 -272.23303223]
[40.29038620 -257.23345947]
[40.73699188 -242.24011230]
[41.18359756 -227.24676514]
[41.63020325 -212.25341797]
[49.74301529 -199.76214600]
[42.42002487 -185.73773193]
[42.86663055 -170.74438477]
[43.31323624 -155.75102234]
[45.20653152 -140.87098694]
[48.52878952 -126.24353027]
[51.85104752 -111.61607361]
[55.17330933 -96.98860931]
[58.49556732 -82.36115265]
[71.09478760 -70.14531708]
[65.50224304 -52.60094452]
[69.04191589 -38.02457047]
[72.58158875 -23.44819260]
[76.12126160 -8.87181854]
[79.66093445 5.70455742]
[83.63303375 20.16908073]
[88.03402710 34.50892639]
[92.43502808 48.84877396]
[96.83602905 63.18862152]
[107.96698761 73.08563995]
[104.61917877 88.54859161]
[107.31827545 73.79342651]
[114.19331360 60.46173859]
[124.64952850 49.70685577]
[137.78234863 42.45917511]
[152.45567322 39.34570312]
[167.40010071 40.63578033]
[181.32276917 46.21780014]
[193.01927185 55.60886765]
[201.47770691 67.99655914]
[205.96633911 82.30921173]
[206.09687805 97.30864716]
[201.85801697 111.69725037]
[193.61645508 124.23027802]
[182.08517456 133.82348633]
[168.26176453 139.64697266]
[153.34205627 141.19694519]
[138.61677551 138.33932495]
[125.35979462 131.32130432]
[114.71797943 120.75003052]
[107.61315155 107.54332733]
[107.83647919 122.54166412]
[115.77838898 136.22511292]
[108.23143768 149.06616211]
[108.45476532 164.06449890]
[116.39666748 177.74795532]
[108.84971619 190.58900452]
[109.07304382 205.58734131]
[117.01495361 219.27079773]
[109.46800232 232.11184692]
[109.69132996 247.11018372]
[118.38595581 256.63732910]
[118.26319885 269.13406372]
[109.93424225 277.90646362]
[117.67153931 291.70663452]
[109.93424225 304.43389893]
[109.93424225 319.43389893]
[109.93424225 334.43389893]
[119.80928040 323.14303589]
[134.40892029 319.70059204]
[148.28785706 325.39050293]
[156.26959229 338.09057617]
[155.37713623 353.06399536]
[145.94334412 364.72607422]
[131.48680115 368.72711182]
[117.39942932 363.57482910]
[108.93514252 351.18978882]
[107.15267944 366.08349609]
[105.37020874 380.97720337]
[103.58774567 395.87094116]
[114.64990997 409.42260742]
[112.53022003 426.44674683]
[99.02500153 436.46911621]
[97.46447754 451.38772583]
[95.90395355 466.30633545]
[94.34342957 481.22494507]
[92.78291321 496.14355469]
[91.22238922 511.06216431]
[105.31520081 516.45239258]
[117.53214264 525.30731201]
[127.04024506 537.02301025]
[133.19122314 550.80084229]
[135.56568909 565.70129395]
[134.00175476 580.70849609]
[128.60604858 594.79925537]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 203]
[16 202]
[17 201]
[18 200]
[19 199]
[20 198]
[24 195]
[25 194]
[26 193]
[27 192]
[28 183]
[29 182]
[30 181]
[32 179]
[34 176]
[35 175]
[37 173]
[38 172]
[40 170]
[41 169]
[43 167]
[44 166]
[45 146]
[47 144]
[48 143]
[49 142]
[50 141]
[55 140]
[56 139]
[57 138]
[58 137]
[59 136]
[62 134]
[63 133]
[64 132]
[65 131]
[66 130]
[80 129]
[81 128]
[82 127]
[84 125]
[85 124]
[86 123]
[87 122]
[93 121]
[95 119]
[96 118]
[98 116]
[99 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
