%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[132.74249268 910.67486572]
[117.90655518 908.44451904]
[103.18847656 905.53631592]
[88.61920166 901.95642090]
[74.22937775 897.71234131]
[60.04925537 892.81298828]
[46.10866547 887.26867676]
[32.43692398 881.09106445]
[19.06277847 874.29315186]
[6.01435995 866.88922119]
[-6.68089342 858.89483643]
[-18.99628258 850.32684326]
[-30.90590668 841.20318604]
[-42.38472366 831.54315186]
[-53.40858841 821.36706543]
[-63.95431900 810.69616699]
[-73.99974060 799.55310059]
[-83.52371979 787.96112061]
[-92.50623322 775.94470215]
[-100.92839050 763.52917480]
[-108.77248383 750.74047852]
[-116.02201080 737.60565186]
[-122.66172028 724.15228271]
[-128.67765808 710.40863037]
[-134.05717468 696.40362549]
[-138.78895569 682.16668701]
[-142.86303711 667.72784424]
[-146.27085876 653.11730957]
[-149.00526428 638.36596680]
[-151.06048584 623.50476074]
[-152.43220520 608.56494141]
[-153.11755371 593.57800293]
[-153.11508179 578.57531738]
[-152.42477417 563.58856201]
[-151.04811096 548.64923096]
[-148.98797607 533.78869629]
[-146.24870300 519.03826904]
[-142.83604431 504.42889404]
[-138.75720215 489.99136353]
[-134.02072144 475.75601196]
[-128.63658142 461.75277710]
[-122.61609650 448.01110840]
[-115.97193146 434.55993652]
[-108.71807098 421.42749023]
[-100.86975098 408.64141846]
[-92.44348907 396.22863770]
[-83.45700836 384.21520996]
[-73.92919159 372.62640381]
[-63.88009262 361.48660278]
[-53.33083725 350.81924438]
[-42.30360794 340.64675903]
[-30.82160187 330.99050903]
[-18.90896225 321.87081909]
[-6.59074306 313.30691528]
[6.10715151 305.31671143]
[19.15801620 297.91711426]
[32.53440475 291.12359619]
[46.20819092 284.95050049]
[60.15061188 279.41079712]
[74.33235168 274.51614380]
[88.72357941 270.27679443]
[103.29403687 266.70172119]
[118.01307678 263.79840088]
[115.78795624 248.96435547]
[113.56284332 234.13031006]
[104.02316284 222.69160461]
[109.62773132 207.89636230]
[107.40261078 193.06231689]
[92.60250854 185.96058655]
[84.87432861 171.28964233]
[87.43901062 154.73899841]
[99.48158264 142.86160278]
[97.03585052 128.06233215]
[94.59012604 113.26305389]
[85.86773682 102.33549500]
[90.61060333 89.18267059]
[76.33124542 83.70112610]
[66.77593231 71.88619232]
[64.43298340 56.97388458]
[69.83271027 42.98464203]
[81.43152618 33.63942337]
[78.98580170 18.84015083]
[76.54006958 4.04087973]
[74.09434509 -10.75839138]
[64.21048737 -23.11233521]
[69.76908112 -36.93084717]
[54.72946548 -37.72079086]
[40.21140289 -41.72577667]
[26.89393044 -48.75848389]
[15.39992714 -58.48997879]
[6.26699209 -70.46510315]
[-0.07771233 -84.12375641]
[-3.33743262 -98.82709503]
[-3.35970569 -113.88742828]
[-0.14348963 -128.60034180]
[6.16078711 -142.27770996]
[15.25826168 -154.27978516]
[26.72343063 -164.04524231]
[40.02004242 -171.11730957]
[54.52619934 -175.16522217]
[69.56340790 -175.99964905]
[84.42836761 -173.58155823]
[98.42580414 -168.02406311]
[110.90103912 -159.58708191]
[121.27058411 -148.66523743]
[129.04942322 -135.76936340]
[133.87374878 -121.50261688]
[135.51789856 -106.53227997]
[133.90498352 -91.55855560]
[129.11042786 -77.28177643]
[121.35850525 -64.36969757]
[111.01177216 -53.42624664]
[98.55416870 -44.96326065]
[84.56835175 -39.37657547]
[94.27727509 -28.08117294]
[88.89361572 -13.20411873]
[91.33934021 1.59515238]
[93.78507233 16.39442253]
[96.23079681 31.19369316]
[110.21957397 36.31031036]
[119.83300018 47.81847763]
[122.41241455 62.69170761]
[117.16640472 76.95271301]
[105.40987396 86.73694611]
[114.13226318 97.66450500]
[109.38939667 110.81732941]
[111.83512878 125.61660004]
[114.28085327 140.41587830]
[127.02919769 145.65708923]
[135.45619202 156.42762756]
[137.44493103 169.84829712]
[132.58175659 182.39794922]
[122.23665619 190.83720398]
[124.46177673 205.67124939]
[134.16059875 218.17097473]
[128.39688110 231.90519714]
[130.62199402 246.73924255]
[132.84712219 261.57327271]
[147.77020264 260.03027344]
[162.74833679 259.17303467]
[177.75003052 259.00341797]
[192.74372864 259.52175903]
[207.69789124 260.72695923]
[222.58106995 262.61648560]
[237.36196899 265.18637085]
[252.00950623 268.43118286]
[266.49288940 272.34414673]
[280.78164673 276.91702271]
[294.84570312 282.14016724]
[308.65551758 288.00262451]
[322.18206787 294.49203491]
[335.39685059 301.59478760]
[348.27209473 309.29589844]
[360.78073120 317.57922363]
[372.89645386 326.42730713]
[384.59381104 335.82153320]
[395.84814453 345.74218750]
[406.63580322 356.16839600]
[416.93414307 367.07818604]
[426.72146606 378.44866943]
[435.97720337 390.25592041]
[444.68185425 402.47506714]
[452.81716919 415.08047485]
[460.36602783 428.04559326]
[467.31253052 441.34317017]
[473.64205933 454.94525146]
[479.34133911 468.82321167]
[484.39837646 482.94784546]
[488.80252075 497.28952026]
[492.54452515 511.81799316]
[495.61651611 526.50274658]
[498.01199341 541.31292725]
[499.72598267 556.21734619]
[500.75485229 571.18469238]
[501.09643555 586.18341064]
[500.75003052 601.18206787]
[499.71633911 616.14904785]
[497.99752808 631.05291748]
[495.59725952 645.86230469]
[492.52053833 660.54608154]
[488.77386475 675.07336426]
[484.36511230 689.41363525]
[479.30352783 703.53662109]
[473.59976196 717.41278076]
[467.26583862 731.01275635]
[460.31503296 744.30810547]
[452.76202393 757.27081299]
[444.62265015 769.87359619]
[435.91403198 782.08996582]
[426.65451050 793.89422607]
[416.86352539 805.26153564]
[406.56167603 816.16802979]
[395.77062988 826.59075928]
[384.51309204 836.50775146]
[372.81274414 845.89819336]
[360.69415283 854.74237061]
[348.18283081 863.02166748]
[335.30511475 870.71862793]
[322.08804321 877.81713867]
[308.55941772 884.30218506]
[294.74771118 890.16015625]
[280.68194580 895.37878418]
[266.39172363 899.94708252]
[251.90708923 903.85534668]
[237.25849915 907.09545898]
[222.47677612 909.66058350]
[207.59298706 911.54534912]
[192.63842773 912.74566650]
[177.64457703 913.25921631]
[162.64294434 913.08471680]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 138]
[64 137]
[65 136]
[67 134]
[68 133]
[72 128]
[73 127]
[74 126]
[76 124]
[81 119]
[82 118]
[83 117]
[84 116]
[86 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
