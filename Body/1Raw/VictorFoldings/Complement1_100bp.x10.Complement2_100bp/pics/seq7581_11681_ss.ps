%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[138.81521606 540.80541992]
[133.93081665 526.59887695]
[130.98359680 511.86804199]
[130.02618408 496.87579346]
[131.07563782 481.88973999]
[134.11323547 467.17727661]
[139.08476257 453.00100708]
[145.90151978 439.61386108]
[154.44183350 427.25479126]
[164.55329895 416.14434814]
[176.05545044 406.48083496]
[188.74304199 398.43667603]
[202.38963318 392.15542603]
[197.98863220 377.81558228]
[193.58763123 363.47573853]
[189.08000183 349.16903687]
[184.46600342 334.89630127]
[179.41741943 329.49874878]
[179.89125061 320.37661743]
[175.49026489 306.03677368]
[171.08926392 291.69692993]
[166.26325989 277.49447632]
[161.01654053 263.44198608]
[155.76982117 249.38952637]
[150.10704041 235.49949646]
[144.03320312 221.78422546]
[137.95936584 208.06895447]
[126.79164124 203.42048645]
[121.61917877 192.04377747]
[125.71138000 179.81198120]
[119.84242249 166.00781250]
[113.97345734 152.20362854]
[108.10449982 138.39945984]
[102.23554230 124.59528351]
[96.36657715 110.79110718]
[92.39266205 125.25512695]
[81.30113983 135.35354614]
[66.52884674 137.95727539]
[52.65313721 132.25949097]
[43.97354889 120.02574158]
[43.17954636 105.04677582]
[50.51716232 91.96398163]
[63.71275330 84.83121490]
[78.67752838 85.85864258]
[90.77463531 94.72810364]
[86.80254364 80.26358032]
[82.83044434 65.79905701]
[71.71498108 54.54041672]
[75.80580902 40.21860123]
[69.93511200 54.02203751]
[57.59386444 62.54809570]
[42.60614014 63.15488434]
[29.61605072 55.65438080]
[22.64871407 42.37069702]
[23.86303329 27.41992950]
[32.88274384 15.43473625]
[46.91298294 10.12885857]
[61.60633469 13.14638042]
[72.41002655 23.55251312]
[70.40601349 8.68698502]
[68.40200043 -6.17854309]
[66.39798737 -21.04407120]
[64.17287445 -35.87811661]
[61.72714233 -50.67738724]
[59.28141785 -65.47665405]
[56.83568954 -80.27592468]
[46.95183182 -92.62987518]
[52.51042938 -106.44837952]
[43.32574463 -109.57438660]
[35.95469284 -115.79353333]
[31.38264084 -124.21927643]
[30.20059967 -133.67405701]
[32.52910995 -142.85383606]
[38.00743103 -150.50791931]
[45.84870148 -155.60939026]
[44.28818130 -170.52798462]
[42.72765732 -185.44659424]
[41.16713333 -200.36520386]
[29.17346573 -210.30450439]
[27.80339432 -225.45631409]
[37.35290909 -236.82919312]
[35.79238510 -251.74780273]
[34.23186493 -266.66641235]
[32.67134094 -281.58502197]
[31.11081696 -296.50360107]
[16.11190414 -297.63159180]
[1.55549157 -301.41983032]
[-12.09049034 -307.74652100]
[-24.38737869 -316.40829468]
[-34.93988037 -327.12670898]
[-43.40877914 -339.55722046]
[-49.52183151 -353.30023193]
[-53.08252716 -367.91397095]
[-53.97640610 -382.92864990]
[-52.17473602 -397.86160278]
[-47.73542786 -412.23284912]
[-40.80119324 -425.58035278]
[-31.59493256 -437.47509766]
[-20.41259575 -447.53466797]
[-7.61364365 -455.43572998]
[6.39048862 -460.92425537]
[21.14962578 -463.82385254]
[36.18932343 -464.04129028]
[51.02611542 -461.56958008]
[65.18306732 -456.48818970]
[78.20507812 -448.96044922]
[89.67356110 -439.22833252]
[99.21983337 -427.60473633]
[106.53704071 -414.46325684]
[111.38995361 -400.22637939]
[113.62257385 -385.35171509]
[113.16312408 -370.31747437]
[110.02639008 -355.60690308]
[104.31319427 -341.69293213]
[96.20719147 -329.02276611]
[85.96895599 -318.00378418]
[73.92761230 -308.99014282]
[60.47023773 -302.27160645]
[46.02942276 -298.06414795]
[47.58994675 -283.14553833]
[49.15046692 -268.22692871]
[50.71099091 -253.30831909]
[52.27151489 -238.38972473]
[63.96782684 -229.23921204]
[65.76293945 -214.13185120]
[56.08573914 -201.92572021]
[57.64626312 -187.00712585]
[59.20678329 -172.08851624]
[60.76730728 -157.16990662]
[77.67115784 -145.67854309]
[80.63843536 -125.15805817]
[67.30970001 -108.89411163]
[77.01862335 -97.59870911]
[71.63495636 -82.72165680]
[74.08068848 -67.92238617]
[76.52641296 -53.12311172]
[78.97214508 -38.32384109]
[82.26404572 -34.86372375]
[83.41726685 -29.29891586]
[81.26351929 -23.04808426]
[83.26753235 -8.18255711]
[85.27154541 6.68297148]
[87.27555847 21.54850006]
[90.27033234 36.24650192]
[101.10168457 46.47054672]
[97.29496765 61.82696152]
[101.26706696 76.29148102]
[105.23915863 90.75601196]
[110.17075348 104.92214203]
[116.03971863 118.72631836]
[121.90867615 132.53050232]
[127.77763367 146.33467102]
[133.64659119 160.13885498]
[139.51556396 173.94302368]
[154.48120117 184.67201233]
[151.67463684 201.99513245]
[157.74847412 215.71038818]
[163.82231140 229.42565918]
[167.41897583 231.85833740]
[169.81361389 234.99366760]
[170.93292236 238.36746216]
[170.86189270 241.53945923]
[169.82229614 244.14280701]
[175.06901550 258.19528198]
[180.31573486 272.24774170]
[183.76123047 274.89019775]
[185.96499634 278.16247559]
[186.88151550 281.59692383]
[186.62182617 284.75906372]
[185.42910767 287.29592896]
[189.83010864 301.63577271]
[194.23110962 315.97561646]
[198.73873901 330.28228760]
[203.35273743 344.55502319]
[208.97013855 351.75799561]
[207.92749023 359.07473755]
[212.32847595 373.41458130]
[216.72947693 387.75442505]
[231.55020142 385.29885864]
[246.56596375 384.84066772]
[261.50881958 386.38803101]
[276.11209106 389.91336060]
[290.11517334 395.35369873]
[303.26815796 402.61196899]
[315.33630371 411.55868530]
[326.10424805 422.03411865]
[335.37979126 433.85134888]
[342.99746704 446.79949951]
[348.82128906 460.64749146]
[352.74734497 475.14816284]
[354.70553589 490.04275513]
[354.66094971 505.06546021]
[352.61434937 519.94818115]
[348.60229492 534.42529297]
[342.69635010 548.23840332]
[335.00195312 561.14111328]
[325.65637207 572.90307617]
[314.82644653 583.31439209]
[302.70538330 592.18933105]
[289.50955200 599.36938477]
[275.47442627 604.72650146]
[260.85049438 608.16503906]
[245.89869690 609.62365723]
[230.88591003 609.07635498]
[216.08003235 606.53283691]
[201.74530029 602.03851318]
[188.13754272 595.67358398]
[175.49957275 587.55169678]
[164.05696106 577.81774902]
[154.01391602 566.64538574]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 178]
[14 177]
[15 176]
[16 174]
[17 173]
[19 172]
[20 171]
[21 170]
[22 165]
[23 164]
[24 163]
[25 158]
[26 157]
[27 156]
[30 154]
[31 153]
[32 152]
[33 151]
[34 150]
[35 149]
[45 148]
[46 147]
[47 146]
[49 144]
[59 143]
[60 142]
[61 141]
[62 140]
[63 137]
[64 136]
[65 135]
[66 134]
[68 132]
[75 129]
[76 128]
[77 127]
[78 126]
[81 123]
[82 122]
[83 121]
[84 120]
[85 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
