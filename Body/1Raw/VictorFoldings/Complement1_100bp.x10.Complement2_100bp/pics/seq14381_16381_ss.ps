%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[89.41503143 280.91229248]
[89.34681702 265.10815430]
[100.53296661 253.94367981]
[100.30963898 238.94534302]
[100.08631134 223.94700623]
[99.86298370 208.94866943]
[91.93705750 196.33801270]
[99.46803284 182.42416382]
[99.24470520 167.42582703]
[99.02137756 152.42749023]
[98.79804993 137.42915344]
[98.57472229 122.43081665]
[95.36145020 107.77902985]
[91.99705505 105.89402008]
[89.47988892 102.53519440]
[88.44952393 98.11418152]
[89.33788300 93.31306458]
[83.88252258 79.34027100]
[78.42716980 65.36746979]
[72.97180939 51.39467239]
[67.51645660 37.42187500]
[62.06109619 23.44907761]
[54.59335709 10.44012642]
[45.27847290 -1.31712520]
[35.96359253 -13.07437611]
[21.32916641 -19.08638000]
[19.49025536 -33.86703110]
[10.17537212 -45.62428284]
[0.86048967 -57.38153458]
[-8.45439339 -69.13878632]
[-23.02643967 -62.36092758]
[-38.78541946 -59.25160980]
[-54.82298279 -59.98596191]
[-70.21569824 -64.51768494]
[-84.07823944 -72.58193207]
[-95.61425781 -83.71083069]
[-104.16217804 -97.26055908]
[-109.23311615 -112.44863892]
[-110.53884125 -128.39910889]
[-108.00815582 -144.19305420]
[-101.79077148 -158.92152405]
[-92.24843597 -171.73785400]
[-101.90924835 -183.21255493]
[-111.57005310 -194.68725586]
[-121.23086548 -206.16195679]
[-130.89167786 -217.63665771]
[-140.55249023 -229.11135864]
[-152.84397888 -220.49644470]
[-165.84877014 -213.00157166]
[-179.46508789 -206.68540955]
[-193.58633423 -201.59739685]
[-208.10200500 -197.77732849]
[-222.89849854 -195.25512695]
[-237.86000061 -194.05052185]
[-252.86941528 -194.17292786]
[-267.80926514 -195.62141418]
[-282.56265259 -198.38462830]
[-297.01409912 -202.44094849]
[-311.05047607 -207.75862122]
[-324.56195068 -214.29603577]
[-337.44274902 -222.00202942]
[-349.59210205 -230.81628418]
[-360.91488647 -240.66981506]
[-371.32250977 -251.48550415]
[-380.73348999 -263.17871094]
[-389.07418823 -275.65789795]
[-396.27932739 -288.82540894]
[-402.29254150 -302.57821655]
[-407.06671143 -316.80862427]
[-410.56451416 -331.40530396]
[-412.75854492 -346.25399780]
[-413.63165283 -361.23849487]
[-413.17700195 -376.24154663]
[-411.39816284 -391.14566040]
[-408.30902100 -405.83425903]
[-403.93377686 -420.19235229]
[-398.30667114 -434.10757446]
[-391.47177124 -447.47103882]
[-383.48251343 -460.17810059]
[-374.40148926 -472.12933350]
[-364.29971313 -483.23123169]
[-353.25628662 -493.39688110]
[-341.35763550 -502.54669189]
[-328.69683838 -510.60910034]
[-315.37304688 -517.52099609]
[-301.49053955 -523.22827148]
[-287.15789795 -527.68627930]
[-272.48736572 -530.86004639]
[-257.59375000 -532.72485352]
[-242.59358215 -533.26605225]
[-227.60429382 -532.47943115]
[-212.74319458 -530.37103271]
[-198.12658691 -526.95751953]
[-183.86885071 -522.26550293]
[-170.08160400 -516.33172607]
[-156.87274170 -509.20269775]
[-144.34564209 -500.93411255]
[-132.59835815 -491.59072876]
[-121.72280884 -481.24566650]
[-111.80413055 -469.97991943]
[-102.91993713 -457.88162231]
[-95.13977814 -445.04547119]
[-88.52452850 -431.57192993]
[-83.12596893 -417.56646729]
[-78.98635864 -403.13867188]
[-76.13808441 -388.40145874]
[-74.60343933 -373.47021484]
[-74.39443970 -358.46176147]
[-75.51272583 -343.49356079]
[-77.94953918 -328.68276978]
[-81.68579865 -314.14529419]
[-86.69228363 -299.99493408]
[-92.92979431 -286.34240723]
[-100.34951782 -273.29461670]
[-108.89337921 -260.95361328]
[-118.49452209 -249.41603088]
[-129.07778931 -238.77217102]
[-119.41697693 -227.29747009]
[-109.75616455 -215.82276917]
[-100.09535980 -204.34806824]
[-90.43454742 -192.87336731]
[-80.77373505 -181.39866638]
[-68.39291382 -187.90402222]
[-54.92020798 -191.68122864]
[-40.94938278 -192.56108093]
[-27.09674072 -190.50209045]
[-13.97392464 -185.59254456]
[-2.16090369 -178.04655457]
[7.81964684 -168.19491577]
[15.52547836 -156.47041321]
[20.61436272 -143.38896179]
[22.85928917 -129.52682495]
[22.15859604 -115.49524689]
[18.54056358 -101.91351318]
[12.16228867 -89.38159943]
[3.30285811 -78.45366669]
[12.61774063 -66.69641876]
[21.93262291 -54.93916702]
[31.24750710 -43.18191528]
[45.21566772 -38.01086807]
[47.72084045 -22.38925934]
[57.03572464 -10.63200760]
[66.35060883 1.12524331]
[63.41255951 -13.58420467]
[64.68025970 -28.53054047]
[70.05373383 -42.53503036]
[79.10919952 -54.49322891]
[91.13251495 -63.46205521]
[105.17546844 -68.73419189]
[120.13057709 -69.89385986]
[134.81840515 -66.84960175]
[148.08062744 -59.84149551]
[158.87132263 -49.42223740]
[166.33949280 -36.41352844]
[169.89614868 -21.84128952]
[169.26083374 -6.85474920]
[164.48361206 7.36419010]
[155.94126892 19.69416428]
[144.30746460 29.16278076]
[130.49971008 35.02330399]
[115.60691833 36.81354904]
[100.80361938 34.39233017]
[87.25725555 27.95059586]
[76.03389740 17.99372101]
[81.48925018 31.96651840]
[86.94461060 45.93931580]
[92.39996338 59.91211319]
[97.85532379 73.88491058]
[103.31068420 87.85771179]
[109.07671356 101.70519257]
[109.68775177 86.71764374]
[113.46337128 72.20059967]
[120.23181915 58.81448364]
[129.68518066 47.16827774]
[141.39337158 37.79180527]
[154.82376099 31.11163330]
[169.36534119 27.43166733]
[184.35659790 26.91932106]
[199.11549377 29.59790039]
[212.97062683 35.34555054]
[225.29165649 43.90078735]
[235.51808167 54.87440872]
[243.18464661 67.76718903]
[247.94258118 81.99259186]
[249.57543945 96.90345001]
[248.00892639 111.82142639]
[243.31431580 126.06785583]
[235.70516968 138.99461365]
[225.52767944 150.01361084]
[213.24481201 158.62358093]
[199.41539001 164.43280029]
[184.66854858 167.17700195]
[169.67517090 166.73135376]
[155.11735535 163.11610413]
[141.65739441 156.49574280]
[129.90760803 147.17144775]
[120.40253448 135.56741333]
[113.57305908 122.20748901]
[113.79638672 137.20582581]
[114.01971436 152.20416260]
[114.24304199 167.20249939]
[114.46636963 182.20083618]
[122.40827942 195.88429260]
[114.86132050 208.72534180]
[115.08464813 223.72367859]
[115.30797577 238.72201538]
[115.53131104 253.72035217]
[127.04491425 264.54681396]
[127.44727325 280.34597778]
[116.49967957 291.74447632]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 207]
[4 206]
[5 205]
[6 204]
[8 202]
[9 201]
[10 200]
[11 199]
[12 198]
[13 170]
[17 169]
[18 168]
[19 167]
[20 166]
[21 165]
[22 164]
[23 143]
[24 142]
[25 141]
[27 139]
[28 138]
[29 137]
[30 136]
[42 122]
[43 121]
[44 120]
[45 119]
[46 118]
[47 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
