%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[210.14556885 421.66369629]
[209.67416382 406.66146851]
[210.51208496 391.67523193]
[212.65298462 376.81906128]
[216.08053589 362.20599365]
[220.76866150 347.94729614]
[226.68170166 334.15145874]
[233.77462769 320.92346191]
[241.99346924 308.36401367]
[251.27568054 296.56866455]
[261.55059814 285.62719727]
[251.55242920 274.44525146]
[241.55426025 263.26327515]
[231.55607605 252.08128357]
[221.55790710 240.89930725]
[211.55973816 229.71734619]
[201.56156921 218.53536987]
[191.39802551 207.50349426]
[181.07135010 196.62416077]
[170.74468994 185.74481201]
[156.37088013 181.84057617]
[152.48200989 166.50476074]
[142.15533447 155.62542725]
[131.82867432 144.74609375]
[121.50199890 133.86676025]
[111.17533112 122.98741913]
[100.84866333 112.10808563]
[104.77399445 126.58537292]
[103.85160828 141.55697632]
[98.17883301 155.44293213]
[88.35433960 166.77780151]
[75.41493225 174.36540222]
[60.72612762 177.40498352]
[45.83807755 175.57579041]
[32.32195282 169.07083130]
[21.60414124 158.57662964]
[14.81571865 145.20062256]
[12.67308426 130.35444641]
[15.40235424 115.60483551]
[22.71550369 102.50835419]
[33.84075928 92.44710541]
[47.60404205 86.48287201]
[62.55288315 85.24508667]
[77.10969543 88.86437225]
[89.73841095 96.95889282]
[82.46517944 83.84020233]
[75.19194794 70.72150421]
[67.91872406 57.60280991]
[60.64549255 44.48411942]
[53.37226105 31.36542320]
[46.09903336 18.24672890]
[42.05011368 32.68993759]
[29.73592377 41.25502396]
[14.78634548 40.02614975]
[4.03612614 29.56513977]
[2.40011930 14.65462303]
[10.62628651 2.11149073]
[24.95373344 -2.32970738]
[38.83352280 3.36272669]
[32.96456146 -10.44145012]
[27.09560013 -24.24562645]
[21.12403870 -38.00572968]
[15.05020428 -51.72099686]
[8.71392727 -58.30046463]
[8.98973083 -65.68597412]
[3.12077022 -79.49015045]
[-2.74819064 -93.29432678]
[-17.18721390 -89.15980530]
[-32.02488708 -86.83106232]
[-47.03627396 -86.34338379]
[-61.99380875 -87.70417786]
[-76.67073822 -90.89280701]
[-90.84456635 -95.86093140]
[-104.30041504 -102.53324127]
[-116.83429718 -110.80858612]
[-128.25621033 -120.56151581]
[-138.39300537 -131.64416504]
[-147.09098816 -143.88853455]
[-154.21832275 -157.10900879]
[-159.66694641 -171.10514832]
[-163.35426331 -185.66479492]
[-165.22438049 -200.56721497]
[-165.24893188 -215.58651733]
[-163.42756653 -230.49497986]
[-159.78788757 -245.06660461]
[-154.38507080 -259.08050537]
[-147.30101013 -272.32418823]
[-138.64311218 -284.59695435]
[-128.54261780 -295.71270752]
[-117.15267181 -305.50292969]
[-104.64591217 -313.81921387]
[-91.21195984 -320.53549194]
[-77.05445862 -325.54995728]
[-62.38803482 -328.78656006]
[-47.43502808 -330.19625854]
[-32.42212677 -329.75769043]
[-17.57691574 -327.47747803]
[-3.12444901 -323.39019775]
[10.71617889 -317.55783081]
[23.73514748 -310.06875610]
[35.73509216 -301.03656006]
[46.53409958 -290.59811401]
[55.96845627 -278.91168213]
[63.89514160 -266.15441895]
[70.19398499 -252.51976013]
[74.76950836 -238.21437073]
[77.55233002 -223.45512390]
[78.50028229 -208.46575928]
[77.59898376 -193.47351074]
[74.86209869 -178.70567322]
[70.33111572 -164.38612366]
[64.07472992 -150.73191833]
[56.18778229 -137.95005798]
[46.78984070 -126.23433685]
[36.02336884 -115.76234436]
[24.05158806 -106.69282532]
[11.05598640 -99.16328430]
[16.92494774 -85.35910797]
[22.79390717 -71.55493164]
[28.76547050 -57.79483032]
[34.83930588 -44.07956314]
[40.42201614 -39.23651505]
[40.89977646 -30.11458778]
[46.76873779 -16.31041145]
[52.63769913 -2.50623417]
[59.21772766 10.97350025]
[66.49095917 24.09219360]
[73.76418304 37.21088791]
[81.03741455 50.32958221]
[88.31064606 63.44827652]
[95.58387756 76.56697083]
[102.85710144 89.68566132]
[111.72799683 101.78141785]
[122.05466461 112.66075134]
[132.38133240 123.54008484]
[142.70800781 134.41941833]
[153.03466797 145.29875183]
[163.36134338 156.17808533]
[178.47377014 160.86050415]
[181.62402344 175.41815186]
[191.95068359 186.29748535]
[202.27735901 197.17681885]
[208.49781799 199.41676331]
[212.11091614 203.80339050]
[212.74354553 208.53718567]
[222.74171448 219.71916199]
[232.73988342 230.90113831]
[242.73805237 242.08311462]
[252.73623657 253.26509094]
[262.73440552 264.44705200]
[272.73257446 275.62902832]
[284.75088501 266.63739014]
[297.50711060 258.72741699]
[310.90423584 251.95933533]
[324.84024048 246.38465881]
[339.20907593 242.04582214]
[353.90139771 238.97581482]
[368.80538940 237.19802856]
[383.80761719 236.72599792]
[398.79388428 237.56329346]
[413.65014648 239.70355225]
[428.26333618 243.13049316]
[442.52224731 247.81802368]
[456.31835938 253.73046875]
[469.54663086 260.82284546]
[482.10644531 269.04116821]
[493.90216064 278.32287598]
[504.84405518 288.59735107]
[514.84881592 299.78634644]
[523.84027100 311.80477905]
[531.75006104 324.56112671]
[538.51794434 337.95834351]
[544.09246826 351.89443970]
[548.43109131 366.26333618]
[551.50091553 380.95571899]
[553.27844238 395.85971069]
[553.75030518 410.86193848]
[552.91278076 425.84820557]
[550.77233887 440.70443726]
[547.34515381 455.31759644]
[542.65740967 469.57641602]
[536.74481201 483.37243652]
[529.65222168 496.60061646]
[521.43371582 509.16030884]
[512.15185547 520.95593262]
[501.87725830 531.89764404]
[490.68807983 541.90222168]
[478.66952515 550.89355469]
[465.91308594 558.80316162]
[452.51577759 565.57086182]
[438.57962036 571.14514160]
[424.21063232 575.48358154]
[409.51821899 578.55322266]
[394.61419678 580.33056641]
[379.61196899 580.80218506]
[364.62570190 579.96447754]
[349.76950073 577.82379150]
[335.15640259 574.39642334]
[320.89764404 569.70849609]
[307.10171509 563.79565430]
[293.87362671 556.70294189]
[281.31402588 548.48425293]
[269.51858521 539.20220947]
[258.57696533 528.92742920]
[248.57254028 517.73815918]
[239.58139038 505.71945190]
[231.67195129 492.96289062]
[224.90444946 479.56549072]
[219.33035278 465.62924194]
[214.99211121 451.26022339]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 151]
[12 150]
[13 149]
[14 148]
[15 147]
[16 146]
[17 145]
[18 142]
[19 141]
[20 140]
[22 138]
[23 137]
[24 136]
[25 135]
[26 134]
[27 133]
[45 132]
[46 131]
[47 130]
[48 129]
[49 128]
[50 127]
[51 126]
[59 125]
[60 124]
[61 123]
[62 121]
[63 120]
[65 119]
[66 118]
[67 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
