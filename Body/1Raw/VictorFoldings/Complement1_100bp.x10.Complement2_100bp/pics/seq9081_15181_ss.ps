%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[75.43554688 682.45379639]
[61.02707672 686.67279053]
[46.26116943 689.38793945]
[31.29434586 690.57037354]
[16.28526688 690.20770264]
[1.39303505 688.30358887]
[-13.22448254 684.87835693]
[-27.41233253 679.96832275]
[-41.02011490 673.62542725]
[-53.90357971 665.91693115]
[-65.92615509 656.92462158]
[-76.96039581 646.74377441]
[-86.88933563 635.48236084]
[-95.60771179 623.25964355]
[-103.02311707 610.20532227]
[-109.05693817 596.45770264]
[-113.64521027 582.16253662]
[-116.73930359 567.47137451]
[-118.30641174 552.53991699]
[-118.32992554 537.52648926]
[-116.80959320 522.59014893]
[-113.76152802 507.88937378]
[-109.21805573 493.57992554]
[-103.22732544 479.81347656]
[-95.85284424 466.73596191]
[-87.17279053 454.48602295]
[-77.27917480 443.19354248]
[-66.27687073 432.97817993]
[-54.28252411 423.94827271]
[-41.42326355 416.19949341]
[-27.83541679 409.81399536]
[-13.66301537 404.85949707]
[0.94370216 401.38848877]
[15.82989693 399.43780518]
[30.83776665 399.02807617]
[45.80821991 400.16366577]
[48.47401428 385.40243530]
[51.13980865 370.64123535]
[53.80560684 355.88000488]
[56.47140121 341.11880493]
[59.13719559 326.35757446]
[61.80299377 311.59634399]
[64.46878815 296.83514404]
[59.11654282 282.93539429]
[69.18323517 270.72998047]
[71.84902954 255.96876526]
[74.18451691 241.15170288]
[76.18852997 226.28616333]
[78.19255066 211.42063904]
[80.19656372 196.55511475]
[82.08985138 181.67507935]
[83.87232208 166.78135681]
[85.65478516 151.88764954]
[78.42727661 142.18766785]
[79.79039001 129.76487732]
[89.55553436 121.33843994]
[91.55954742 106.47290802]
[92.45236206 91.49950409]
[92.11738586 76.50325012]
[91.67077637 61.50989532]
[91.22417450 46.51654816]
[90.77756500 31.52319717]
[90.33096313 16.52984619]
[80.79647064 28.10972023]
[66.30579376 31.98533249]
[52.26360321 26.71117210]
[43.90727997 14.25437260]
[44.35352707 -0.73898834]
[53.43590927 -12.67675781]
[67.76692200 -17.10644150]
[82.00144958 -12.37587929]
[90.83073425 -0.24834335]
[92.16896820 -15.18852806]
[93.50720215 -30.12871361]
[94.84543610 -45.06889725]
[81.83663177 -37.60090256]
[67.83162689 -42.97304535]
[63.15439606 -57.22518539]
[71.25281525 -69.85117340]
[86.15702820 -71.54360199]
[96.87963867 -61.05642700]
[99.32537079 -75.85569763]
[101.77109528 -90.65496826]
[86.95869446 -96.89007568]
[74.06507111 -106.46961975]
[63.83038330 -118.83869171]
[56.84096146 -133.28239441]
[53.49572372 -148.96714783]
[53.98339081 -164.98881531]
[58.27187347 -180.42485046]
[66.11032104 -194.38732910]
[77.04381561 -206.07412720]
[90.43976593 -214.81492615]
[105.52449036 -220.10971069]
[121.42792511 -221.65733337]
[123.43193817 -236.52285767]
[125.43595123 -251.38838196]
[127.43996429 -266.25390625]
[129.44398499 -281.11944580]
[131.44799805 -295.98498535]
[117.72174072 -302.31594849]
[106.47250366 -312.41278076]
[98.70056152 -325.37768555]
[95.09699249 -340.05780029]
[95.98222351 -355.14779663]
[101.27753448 -369.30584717]
[110.51206970 -381.27310181]
[122.86470795 -389.98538208]
[137.23706055 -394.66799927]
[152.35113525 -394.90460205]
[166.86302185 -390.67413330]
[179.48229980 -382.35278320]
[189.08691406 -370.68045044]
[194.82278442 -356.69506836]
[196.17991638 -341.64019775]
[193.03761292 -326.85446167]
[185.67529297 -313.65267944]
[174.74761963 -303.20864868]
[161.22625732 -296.45114136]
[146.31352234 -293.98095703]
[144.30950928 -279.11541748]
[142.30549622 -264.24990845]
[140.30148315 -249.38436890]
[138.29747009 -234.51884460]
[136.29345703 -219.65332031]
[149.43141174 -214.85763550]
[161.28305054 -207.41990662]
[171.32400513 -197.66607666]
[179.10940552 -186.02465820]
[184.29348755 -173.00784302]
[186.64508057 -159.18904114]
[186.05778503 -145.17756653]
[182.55490112 -131.59178162]
[176.28843689 -119.03182220]
[167.53253174 -108.05308533]
[156.67149353 -99.14165497]
[144.18286133 -92.69278717]
[130.61651611 -88.99338531]
[116.57036591 -88.20924377]
[114.12464142 -73.40997314]
[111.67890930 -58.61069870]
[109.78562164 -43.73066330]
[108.44738770 -28.79047966]
[107.10915375 -13.85029411]
[105.77091980 1.08989084]
[105.32431030 16.08324051]
[105.77091980 31.07659149]
[106.21752167 46.06994247]
[106.66413116 61.06328964]
[107.11073303 76.05664062]
[110.45199585 82.64889526]
[107.45069885 91.27617645]
[116.11875153 79.03424835]
[129.70486450 72.67678833]
[144.65768433 73.86562347]
[157.06855774 82.29000092]
[163.69332886 95.74780273]
[162.80029297 110.72119904]
[154.62287903 123.29616547]
[141.29864502 130.18565369]
[126.31053162 129.58876038]
[113.57637787 121.66150665]
[106.42507172 108.47692871]
[104.42105865 123.34245300]
[111.80847931 140.20980835]
[100.54850006 153.67010498]
[98.76603699 168.56382751]
[96.98357391 183.45755005]
[99.07103729 192.35025024]
[95.06208801 198.55912781]
[93.05807495 213.42465210]
[91.05406189 228.29019165]
[89.05004883 243.15571594]
[91.03427124 247.98374939]
[90.97414398 252.62591553]
[89.28280640 256.33462524]
[86.61025238 258.63455200]
[83.94445801 273.39578247]
[89.10602570 288.35134888]
[79.23000336 299.50094604]
[76.56420898 314.26214600]
[73.89841461 329.02337646]
[71.23262024 343.78457642]
[68.56682587 358.54580688]
[65.90102386 373.30703735]
[63.23523331 388.06823730]
[60.56943512 402.82946777]
[74.99143219 407.00198364]
[88.90796661 412.63531494]
[102.17150116 419.66967773]
[114.64144135 428.03057861]
[126.18560028 437.62936401]
[136.68159485 448.36425781]
[146.01818848 460.12149048]
[154.09637451 472.77639771]
[160.83053589 486.19485474]
[166.14927673 500.23461914]
[169.99623108 514.74688721]
[172.33061218 529.57769775]
[173.12767029 544.57000732]
[172.37895203 559.56481934]
[170.09240723 574.40313721]
[166.29228210 588.92767334]
[161.01882935 602.98449707]
[154.32797241 616.42462158]
[146.29063416 629.10552979]
[136.99201965 640.89282227]
[126.53068542 651.66149902]
[115.01753998 661.29742432]
[102.57462311 669.69848633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 187]
[37 186]
[38 185]
[39 184]
[40 183]
[41 182]
[42 181]
[43 180]
[45 178]
[46 177]
[47 173]
[48 172]
[49 171]
[50 170]
[51 168]
[52 167]
[53 166]
[56 164]
[57 163]
[58 152]
[59 150]
[60 149]
[61 148]
[62 147]
[63 146]
[72 145]
[73 144]
[74 143]
[75 142]
[81 141]
[82 140]
[83 139]
[95 125]
[96 124]
[97 123]
[98 122]
[99 121]
[100 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
