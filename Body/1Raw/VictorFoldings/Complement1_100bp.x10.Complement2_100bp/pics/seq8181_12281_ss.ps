%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[178.31002808 280.98205566]
[185.34390259 267.71826172]
[193.70433044 255.24798584]
[203.30264282 243.70346069]
[192.81515503 232.97908020]
[182.32765198 222.25469971]
[171.84014893 211.53031921]
[161.35264587 200.80593872]
[150.86514282 190.08155823]
[154.45140076 204.64654541]
[152.26687622 219.48661804]
[144.63565063 232.40036011]
[132.68977356 241.47206116]
[118.20133972 245.35601807]
[103.31961060 243.47605896]
[90.25221252 236.11106873]
[80.93762207 224.35357666]
[76.75759125 209.94776917]
[78.33221436 195.03065491]
[85.42789459 181.81507874]
[96.99203491 172.26150513]
[111.30916595 167.78717041]
[126.25542450 169.05578613]
[139.61212158 175.87797546]
[131.57093811 163.21545410]
[123.52976990 150.55293274]
[115.39455414 137.95062256]
[107.16574860 125.40921783]
[98.93693542 112.86782074]
[100.74662018 127.75825500]
[98.98912048 142.65493774]
[93.76382446 156.71539307]
[85.36626434 169.14442444]
[74.27134705 179.23912048]
[61.10655594 186.42857361]
[46.61641693 190.30618286]
[31.62041855 190.65264893]
[16.96665764 187.44839478]
[3.48387742 180.87460327]
[-8.06540775 171.30308533]
[-17.02803040 159.27514648]
[-22.89710808 145.47102356]
[-25.34071732 130.67140198]
[-24.22066116 115.71327209]
[-19.60028458 101.44259644]
[-11.74088860 88.66645050]
[-1.08696365 78.10739136]
[11.75896072 70.36256409]
[26.07038307 65.87000275]
[41.03792572 64.88376617]
[55.81510162 67.45963287]
[69.56618500 73.45192719]
[81.51349640 82.52176666]
[90.98191833 94.15709686]
[87.65966034 79.52963257]
[84.33739471 64.90217590]
[81.01513672 50.27471542]
[77.69287872 35.64725494]
[74.37062073 21.01979446]
[71.04836273 6.39233398]
[67.72609711 -8.23512650]
[64.40383911 -22.86258698]
[54.32292175 -11.75515366]
[39.34447098 -12.55888462]
[30.51004219 -24.68129730]
[34.33205032 -39.18620300]
[47.99305344 -45.38112259]
[61.42164612 -38.70069122]
[59.19652939 -53.53473663]
[56.97141266 -68.36878204]
[54.74629593 -83.20281982]
[52.52117920 -98.03686523]
[37.50593185 -99.19803619]
[23.13251686 -103.66942596]
[10.12084198 -111.22371674]
[-0.87813890 -121.47924805]
[-9.31499290 -133.91932678]
[-14.76925278 -147.91825867]
[-16.97036934 -162.77279663]
[-15.81113052 -177.73745728]
[-11.35288429 -192.06199646]
[-3.82229137 -205.02894592]
[6.40018797 -215.98959351]
[18.79951859 -224.39642334]
[32.75204086 -229.83049011]
[30.52692223 -244.66453552]
[28.30180550 -259.49856567]
[26.07668877 -274.33261108]
[23.85157204 -289.16665649]
[8.85795975 -290.85604858]
[-5.18715429 -296.36941528]
[-17.32615280 -305.33084106]
[-26.73138046 -317.12933350]
[-32.76156998 -330.96041870]
[-35.00557327 -345.88110352]
[-33.31039429 -360.87405396]
[-27.79160881 -374.91705322]
[-18.82549858 -387.05258179]
[-7.02338743 -396.45324707]
[6.81003618 -402.47811890]
[21.73158646 -404.71633911]
[36.72388840 -403.01538086]
[50.76473999 -397.49118042]
[62.89681625 -388.52038574]
[72.29293060 -376.71463013]
[78.31243896 -362.87887573]
[80.54492188 -347.95648193]
[78.83815765 -332.96484375]
[73.30853271 -318.92611694]
[64.33305359 -306.79751587]
[52.52368546 -297.40594482]
[38.68561554 -291.39178467]
[40.91073227 -276.55773926]
[43.13584900 -261.72369385]
[45.36096573 -246.88964844]
[47.58608246 -232.05560303]
[62.51890564 -230.95436096]
[76.83910370 -226.55548096]
[89.82754517 -219.07649231]
[100.83121490 -208.88969421]
[109.29606628 -196.50363159]
[114.79492188 -182.53768921]
[117.04898834 -167.69110107]
[115.94206238 -152.70797729]
[111.52643585 -138.34001160]
[104.02049255 -125.30873108]
[93.79788971 -114.26928711]
[81.36895752 -105.77752686]
[67.35522461 -100.26198578]
[69.58033752 -85.42794037]
[71.80545807 -70.59389496]
[74.03057098 -55.75985336]
[76.25569153 -40.92580795]
[79.03130341 -26.18484497]
[82.35356140 -11.55738544]
[85.67581940 3.07007456]
[88.99807739 17.69753456]
[92.32034302 32.32499313]
[95.64260101 46.95245361]
[98.96485901 61.57991409]
[102.28711700 76.20737457]
[105.60937500 90.83483887]
[111.47834015 104.63901520]
[119.70714569 117.18041229]
[127.93595123 129.72181702]
[135.26020813 135.18011475]
[136.19229126 142.51176453]
[144.23347473 155.17428589]
[152.27464294 167.83680725]
[161.58952332 179.59405518]
[172.07702637 190.31843567]
[182.56452942 201.04281616]
[193.05203247 211.76719666]
[203.53952026 222.49157715]
[214.02702332 233.21595764]
[225.78302002 223.87783813]
[238.43688965 215.79798889]
[251.85446167 209.06207275]
[265.89352417 203.74148560]
[280.40527344 199.89262390]
[295.23580933 197.55630493]
[310.22799683 196.75727844]
[325.22290039 197.50402832]
[340.06149292 199.78862000]
[354.58657837 203.58685303]
[368.64410400 208.85845947]
[382.08508301 215.54754639]
[394.76702881 223.58322144]
[406.55554199 232.88029480]
[417.32559204 243.34020996]
[426.96304321 254.85209656]
[435.36575317 267.29391479]
[442.44461060 280.53378296]
[448.12457275 294.43130493]
[452.34548950 308.83923340]
[455.06256104 323.60479736]
[456.24697876 338.57144165]
[455.88623047 353.58056641]
[453.98413086 368.47305298]
[450.56082153 383.09103394]
[445.65258789 397.27951050]
[439.31146240 410.88812256]
[431.60470581 423.77261353]
[422.61395264 435.79635620]
[412.43457031 446.83193970]
[401.17443848 456.76235962]
[388.95288086 465.48233032]
[375.89950562 472.89944458]
[362.15267944 478.93508911]
[347.85812378 483.52523804]
[333.16735840 486.62124634]
[318.23611450 488.19030762]
[303.22268677 488.21578979]
[288.28619385 486.69741821]
[273.58499146 483.65127563]
[259.27493286 479.10968018]
[245.50769043 473.12075806]
[232.42922974 465.74798584]
[220.17816162 457.06954956]
[208.88436890 447.17739868]
[198.66757202 436.17645264]
[189.63607788 424.18328857]
[181.88562012 411.32504272]
[175.49835205 397.73803711]
[170.54199219 383.56628418]
[167.06907654 368.96002197]
[165.11642456 354.07406616]
[164.70472717 339.06625366]
[165.83834839 324.09567261]
[168.50527954 309.32098389]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 155]
[5 154]
[6 153]
[7 152]
[8 151]
[9 150]
[24 149]
[25 148]
[26 147]
[27 145]
[28 144]
[29 143]
[54 142]
[55 141]
[56 140]
[57 139]
[58 138]
[59 137]
[60 136]
[61 135]
[62 134]
[68 133]
[69 132]
[70 131]
[71 130]
[72 129]
[85 116]
[86 115]
[87 114]
[88 113]
[89 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
