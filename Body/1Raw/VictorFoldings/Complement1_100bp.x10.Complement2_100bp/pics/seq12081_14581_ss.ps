%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUGxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[87.71150970 588.58892822]
[73.83331299 582.88269043]
[60.36259079 576.27166748]
[47.35824585 568.78485107]
[34.87714767 560.45489502]
[22.97387123 551.31829834]
[11.70046520 541.41497803]
[1.10622644 530.78820801]
[-8.76251793 519.48449707]
[-17.86261368 507.55328369]
[-26.15427017 495.04672241]
[-33.60122681 482.01950073]
[-40.17092514 468.52859497]
[-45.83462906 454.63296509]
[-50.56758118 440.39343262]
[-54.34907913 425.87219238]
[-57.16258621 411.13281250]
[-58.99580765 396.23968506]
[-59.84072113 381.25796509]
[-59.69363022 366.25317383]
[-58.55518341 351.29089355]
[-56.43035507 336.43655396]
[-53.32843781 321.75515747]
[-49.26299667 307.31085205]
[-44.25180817 293.16680908]
[-38.31678772 279.38491821]
[-31.48388100 266.02536011]
[-23.78297234 253.14663696]
[-15.24773407 240.80502319]
[-5.91549063 229.05450439]
[4.17295170 217.94644165]
[14.97347832 207.52941895]
[26.43885994 197.84898376]
[38.51896286 188.94747925]
[51.16096115 180.86381531]
[64.30957031 173.63334656]
[77.90730286 167.28768921]
[91.89469910 161.85459900]
[106.21058655 157.35781860]
[102.67091370 142.78143311]
[99.13124084 128.20506287]
[95.59156799 113.62868500]
[86.08058929 103.38013458]
[89.83205414 89.91098022]
[86.29238129 75.33460999]
[82.75270844 60.75823212]
[79.21303558 46.18185806]
[75.67336273 31.60548210]
[72.13368988 17.02910614]
[68.59401703 2.45273137]
[65.05434418 -12.12364388]
[61.51467514 -26.70001984]
[57.97500229 -41.27639389]
[54.43532944 -55.85277176]
[50.89565659 -70.42914581]
[36.09317398 -67.96157837]
[21.15005684 -66.58110809]
[6.14603710 -66.29510498]
[-8.83883286 -67.10509491]
[-23.72460175 -69.00675201]
[-38.43184662 -71.98993683]
[-52.88209534 -76.03872681]
[-66.99825287 -81.13152313]
[-80.70499420 -87.24114990]
[-93.92919922 -94.33501434]
[-106.60029602 -102.37525940]
[-118.65069580 -111.31899261]
[-130.01608276 -121.11849213]
[-140.63584900 -131.72148132]
[-150.45329285 -143.07136536]
[-159.41606140 -155.10762024]
[-167.47631836 -167.76599121]
[-174.59106445 -180.97897339]
[-180.72235107 -194.67604065]
[-185.83744812 -208.78413391]
[-189.90907288 -223.22796631]
[-192.91549683 -237.93048096]
[-194.84066772 -252.81321716]
[-195.67434692 -267.79678345]
[-195.41204834 -282.80123901]
[-194.05519104 -297.74652100]
[-191.61102295 -312.55288696]
[-188.09257507 -327.14132690]
[-183.51861572 -341.43405151]
[-177.91354370 -355.35473633]
[-171.30728149 -368.82913208]
[-163.73506165 -381.78536987]
[-155.23730469 -394.15429688]
[-145.85932922 -405.86993408]
[-135.65119934 -416.86978149]
[-124.66734314 -427.09509277]
[-112.96639252 -436.49139404]
[-100.61076355 -445.00848389]
[-87.66638947 -452.60095215]
[-74.20232391 -459.22827148]
[-60.29041672 -464.85510254]
[-46.00488663 -469.45141602]
[-31.42195702 -472.99267578]
[-16.61943245 -475.45999146]
[-1.67629445 -476.84020996]
[13.32773018 -477.12597656]
[28.31258583 -476.31573486]
[43.19832230 -474.41384888]
[57.90551758 -471.43041992]
[72.35569763 -467.38137817]
[86.47177124 -462.28836060]
[100.17842102 -456.17849731]
[113.40250397 -449.08441162]
[126.07347107 -441.04397583]
[138.12371826 -432.10003662]
[149.48895264 -422.30035400]
[160.10853577 -411.69720459]
[169.92579651 -400.34713745]
[178.88836670 -388.31072998]
[186.94842529 -375.65222168]
[194.06295776 -362.43914795]
[200.19401550 -348.74197388]
[205.30886841 -334.63378906]
[209.38026428 -320.18988037]
[212.38644409 -305.48733521]
[214.31137085 -290.60455322]
[215.14479065 -275.62097168]
[214.88226318 -260.61651611]
[213.52516174 -245.67126465]
[211.08074951 -230.86494446]
[207.56205750 -216.27655029]
[202.98785400 -201.98391724]
[197.38256836 -188.06332397]
[190.77607727 -174.58901978]
[183.20365906 -161.63291931]
[174.70568848 -149.26412964]
[165.32752991 -137.54864502]
[155.11920166 -126.54898071]
[144.13517761 -116.32382965]
[132.43408203 -106.92774200]
[120.07830811 -98.41085052]
[107.13380432 -90.81859589]
[93.66963959 -84.19149017]
[79.75763702 -78.56488800]
[65.47203064 -73.96881866]
[69.01170349 -59.39244080]
[72.55137634 -44.81606674]
[76.09104919 -30.23969078]
[79.63072205 -15.66331673]
[83.17039490 -1.08694100]
[86.71006775 13.48943424]
[90.24974060 28.06580925]
[93.78941345 42.64218521]
[97.32908630 57.21855927]
[100.86875916 71.79493713]
[104.40843201 86.37131500]
[113.91941071 96.61986542]
[110.16794586 110.08901978]
[113.70761871 124.66539001]
[117.24729156 139.24176025]
[120.78696442 153.81814575]
[135.57081604 151.24844360]
[150.49218750 149.66145325]
[165.48580933 149.06408691]
[180.48614502 149.45896912]
[195.42756653 150.84437561]
[210.24476624 153.21424866]
[224.87294006 156.55821228]
[239.24813843 160.86166382]
[253.30747986 166.10575867]
[266.98950195 172.26759338]
[280.23434448 179.32020569]
[292.98413086 187.23277283]
[305.18310547 195.97067261]
[316.77789307 205.49571228]
[327.71783447 215.76623535]
[337.95504761 226.73733521]
[347.44479370 238.36103821]
[356.14559937 250.58650208]
[364.01934814 263.36029053]
[371.03167725 276.62652588]
[377.15188599 290.32720947]
[382.35324097 304.40243530]
[386.61294556 318.79061890]
[389.91244507 333.42889404]
[392.23727417 348.25323486]
[393.57723999 363.19882202]
[393.92651367 378.20025635]
[393.28359985 393.19201660]
[391.65124512 408.10848999]
[389.03662109 422.88446045]
[385.45117188 437.45532227]
[380.91052246 451.75735474]
[375.43460083 465.72805786]
[369.04730225 479.30627441]
[361.77658081 492.43267822]
[353.65423584 505.04983521]
[344.71575928 517.10260010]
[335.00024414 528.53826904]
[324.55017090 539.30682373]
[313.41125488 549.36120605]
[301.63217163 558.65740967]
[289.26446533 567.15478516]
[276.36221313 574.81616211]
[262.98178101 581.60809326]
[249.18176270 587.50085449]
[235.02243042 592.46868896]
[220.56573486 596.48986816]
[205.87489319 599.54681396]
[191.01412964 601.62609863]
[176.04844666 602.71868896]
[161.04325867 602.81982422]
[146.06420898 601.92895508]
[131.17677307 600.05010986]
[116.44606018 597.19146729]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 156]
[40 155]
[41 154]
[42 153]
[44 151]
[45 150]
[46 149]
[47 148]
[48 147]
[49 146]
[50 145]
[51 144]
[52 143]
[53 142]
[54 141]
[55 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
