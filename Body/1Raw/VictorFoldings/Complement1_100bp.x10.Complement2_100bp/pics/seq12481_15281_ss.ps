%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[150.05552673 313.04055786]
[149.92707825 298.03311157]
[150.99137878 283.06289673]
[153.24171448 268.22454834]
[156.66386414 253.61192322]
[161.23616028 239.31736755]
[166.92973328 225.43127441]
[173.70855713 212.04144287]
[181.52976990 199.23252869]
[190.34394836 187.08549500]
[178.94149780 177.33952332]
[167.53903198 167.59356689]
[156.13656616 157.84759521]
[144.73410034 148.10163879]
[130.03211975 145.71394348]
[124.56889343 130.86592102]
[109.86691284 128.47824097]
[104.40367889 113.63022614]
[90.69329071 110.88854980]
[85.85035706 97.77223969]
[70.33279419 94.68745422]
[65.68514252 80.53653717]
[54.28268051 70.79056549]
[41.38651276 71.01786804]
[32.09001541 62.66568756]
[31.01239395 50.61722946]
[19.75629807 40.70257950]
[8.50020313 30.78792763]
[-2.75589275 20.87327576]
[-18.22580528 17.55780411]
[-22.66225624 3.33925295]
[-33.91835022 -6.57539845]
[-45.17444611 -16.49004936]
[-55.86272812 -5.95678759]
[-67.26738739 3.79629278]
[-79.33161926 12.72060108]
[-91.99531555 20.77167702]
[-105.19537354 27.90940857]
[-118.86605072 34.09823990]
[-132.93922424 39.30733109]
[-147.34478760 43.51073837]
[-162.01097107 46.68751526]
[-176.86471558 48.82183456]
[-191.83201599 49.90306854]
[-206.83828735 49.92582321]
[-221.80879211 48.88999176]
[-236.66894531 46.80072784]
[-251.34469604 43.66844940]
[-265.76293945 39.50875473]
[-279.85183716 34.34236526]
[-293.54122925 28.19502831]
[-306.76287842 21.09736252]
[-319.45092773 13.08473206]
[-331.54217529 4.19705439]
[-342.97637939 -5.52139187]
[-353.69653320 -16.02218819]
[-363.64929199 -27.25302124]
[-372.78503418 -39.15793991]
[-381.05825806 -51.67763138]
[-388.42776489 -64.74972534]
[-394.85678101 -78.30908966]
[-400.31332397 -92.28818512]
[-404.77023315 -106.61735535]
[-408.20523071 -121.22521210]
[-410.60125732 -136.03898621]
[-411.94635010 -150.98487854]
[-412.23382568 -165.98841858]
[-411.46228027 -180.97486877]
[-409.63546753 -195.86955261]
[-406.76257324 -210.59828186]
[-402.85787964 -225.08767700]
[-397.94085693 -239.26553345]
[-392.03598022 -253.06123352]
[-385.17263794 -266.40603638]
[-377.38510132 -279.23345947]
[-368.71209717 -291.47961426]
[-359.19689941 -303.08346558]
[-348.88684082 -313.98721313]
[-337.83334351 -324.13656616]
[-326.09143066 -333.48089600]
[-313.71963501 -341.97369385]
[-300.77960205 -349.57263184]
[-287.33575439 -356.23986816]
[-273.45507812 -361.94216919]
[-259.20678711 -366.65115356]
[-244.66178894 -370.34332275]
[-229.89257812 -373.00030518]
[-214.97274780 -374.60885620]
[-199.97660828 -375.16098022]
[-184.97888184 -374.65390015]
[-170.05429077 -373.09017944]
[-155.27717590 -370.47753906]
[-140.72116089 -366.82907104]
[-126.45876312 -362.16290283]
[-112.56104279 -356.50231934]
[-99.09723663 -349.87548828]
[-86.13442230 -342.31542969]
[-73.73717499 -333.85983276]
[-61.96726608 -324.55081177]
[-50.88332748 -314.43472290]
[-40.54058075 -303.56198120]
[-30.99055290 -291.98675537]
[-22.28082275 -279.76669312]
[-14.45478153 -266.96270752]
[-7.55141878 -253.63858032]
[-1.60512722 -239.86068726]
[3.35446858 -225.69766235]
[7.30266047 -211.22006226]
[10.21977806 -196.50003052]
[12.09128857 -181.61090088]
[12.90786743 -166.62683105]
[12.66544724 -151.62249756]
[11.36523628 -136.67263794]
[9.01371098 -121.85173035]
[5.62258720 -107.23361206]
[1.20875955 -92.89112091]
[-4.20578241 -78.89570618]
[-10.59406376 -65.31709290]
[-17.92425728 -52.22292709]
[-26.15984535 -39.67844772]
[-35.25979614 -27.74614525]
[-24.00370026 -17.83149338]
[-12.74760532 -7.91684294]
[1.91719663 -5.31053162]
[7.15875864 9.61718082]
[18.41485405 19.53183174]
[29.67094994 29.44648361]
[40.92704391 39.36113358]
[58.29286194 41.89004135]
[64.02864838 59.38810730]
[75.43110657 69.13407135]
[90.13308716 71.52175903]
[95.59632111 86.36977386]
[109.30670929 89.11145020]
[114.14964294 102.22776031]
[129.66720581 105.31254578]
[134.31486511 119.46346283]
[149.83241272 122.54824829]
[154.48007202 136.69917297]
[165.88253784 146.44512939]
[177.28500366 156.19110107]
[188.68745422 165.93707275]
[200.08992004 175.68302917]
[210.71644592 165.08506775]
[222.15141296 155.36488342]
[234.32249451 146.58393860]
[247.15274048 138.79776001]
[260.56106567 132.05557251]
[274.46267700 126.39999390]
[288.76965332 121.86679077]
[303.39160156 118.48461151]
[318.23602295 116.27484894]
[333.20907593 115.25147247]
[348.21612549 115.42095184]
[363.16226196 116.78221130]
[377.95300293 119.32666016]
[392.49484253 123.03819275]
[406.69580078 127.89334869]
[420.46612549 133.86143494]
[433.71875000 140.90472412]
[446.36990356 148.97866821]
[458.33956909 158.03222656]
[469.55209351 168.00817871]
[479.93658447 178.84342957]
[489.42736816 190.46948242]
[497.96444702 202.81283569]
[505.49383545 215.79544067]
[511.96798706 229.33523560]
[517.34588623 243.34658813]
[521.59356689 257.74093628]
[524.68420410 272.42724609]
[526.59826660 287.31271362]
[527.32354736 302.30316162]
[526.85559082 317.30386353]
[525.19726562 332.21997070]
[522.35913086 346.95715332]
[518.35900879 361.42227173]
[513.22235107 375.52386475]
[506.98150635 389.17272949]
[499.67596436 402.28262329]
[491.35195923 414.77066040]
[482.06207275 426.55786133]
[471.86505127 437.56970215]
[460.82534790 447.73657227]
[449.01278687 456.99420166]
[436.50207520 465.28405762]
[423.37225342 472.55371094]
[409.70635986 478.75723267]
[395.59078979 483.85534668]
[381.11477661 487.81585693]
[366.36990356 490.61373901]
[351.44931030 492.23126221]
[336.44738770 492.65823364]
[321.45895386 491.89193726]
[306.57879639 489.93722534]
[291.90097046 486.80645752]
[277.51831055 482.51940918]
[263.52169800 477.10321045]
[249.99966431 470.59207153]
[237.03768921 463.02722168]
[224.71772766 454.45642090]
[213.11766052 444.93389893]
[202.31083679 434.51983643]
[192.36558533 423.28009033]
[183.34477234 411.28570557]
[175.30545044 398.61251831]
[168.29841614 385.34069824]
[162.36799622 371.55410767]
[157.55168152 357.33990479]
[153.87992859 342.78799438]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 143]
[11 142]
[12 141]
[13 140]
[14 139]
[16 137]
[18 135]
[20 133]
[22 131]
[23 130]
[26 128]
[27 127]
[28 126]
[29 125]
[31 123]
[32 122]
[33 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
