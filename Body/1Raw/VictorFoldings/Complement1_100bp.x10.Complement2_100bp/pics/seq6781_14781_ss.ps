%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[74.55574799 415.12512207]
[66.38688660 427.71350098]
[57.33096313 439.67962646]
[47.43519592 450.96109009]
[36.75117493 461.49911499]
[25.33460236 471.23867798]
[13.24499989 480.12908936]
[0.54539859 488.12396240]
[-12.69799232 495.18161011]
[-26.41612625 501.26522827]
[-40.53748322 506.34313965]
[-54.98844147 510.38882446]
[-69.69365692 513.38122559]
[-84.57646179 515.30468750]
[-99.55927277 516.14923096]
[-114.56396484 515.91046143]
[-129.51231384 514.58959961]
[-144.32637024 512.19354248]
[-158.92893982 508.73477173]
[-173.24385071 504.23132324]
[-187.19647217 498.70666504]
[-200.71409607 492.18963623]
[-213.72621155 484.71417236]
[-226.16499329 476.31927490]
[-237.96559143 467.04867554]
[-249.06648254 456.95077515]
[-259.40979004 446.07815552]
[-268.94158936 434.48751831]
[-277.61218262 422.23931885]
[-285.37634277 409.39736938]
[-292.19363403 396.02865601]
[-298.02850342 382.20288086]
[-302.85049438 367.99212646]
[-306.63452148 353.47045898]
[-309.36080933 338.71359253]
[-311.01516724 323.79846191]
[-311.58895874 308.80282593]
[-311.07919312 293.80490112]
[-309.48855591 278.88287354]
[-306.82531738 264.11447144]
[-303.10333252 249.57678223]
[-298.34207153 235.34555054]
[-292.56631470 221.49497986]
[-285.80618286 208.09729004]
[-278.09689331 195.22230530]
[-269.47869873 182.93717957]
[-259.99649048 171.30595398]
[-249.69970703 160.38926697]
[-238.64204407 150.24403381]
[-226.88114929 140.92314148]
[-214.47831726 132.47520447]
[-201.49824524 124.94424438]
[-188.00859070 118.36952972]
[-174.07966614 112.78535461]
[-159.78411865 108.22080994]
[-145.19647217 104.69970703]
[-130.39276123 102.24040222]
[-115.45019531 100.85571289]
[-100.44666290 100.55286407]
[-85.46038818 101.33343506]
[-70.56950378 103.19334412]
[-55.85163879 106.12290955]
[-41.38353729 110.10684967]
[-27.24062347 115.12438965]
[-13.49663544 121.14938354]
[-0.22322585 128.15040588]
[12.51040173 136.09097290]
[24.63785934 144.92965698]
[36.09592056 154.62040710]
[39.46255493 140.11128235]
[54.64302444 135.65438843]
[65.13052368 124.93000793]
[75.61802673 114.20562744]
[86.10552979 103.48124695]
[89.75897217 89.98517609]
[103.17008972 86.03125000]
[113.65759277 75.30686951]
[124.14509583 64.58248901]
[134.47175598 53.70315933]
[144.63531494 42.67127991]
[154.79885864 31.63940430]
[164.96240234 20.60752678]
[166.10417175 15.51405430]
[168.81449890 11.74478245]
[172.32632446 9.67545223]
[175.83460999 9.32290840]
[186.48062134 -1.24413955]
[197.12661743 -11.81118774]
[187.33258057 -23.18069458]
[178.36492920 -35.21274567]
[170.26835632 -47.84739304]
[163.08319092 -61.02169800]
[156.84523010 -74.67002106]
[151.58554077 -88.72436523]
[147.33035278 -103.11471558]
[144.10083008 -117.76938629]
[141.91310120 -132.61535645]
[140.77803040 -147.57865906]
[140.70129395 -162.58476257]
[141.68327332 -177.55888367]
[143.71907043 -192.42645264]
[146.79853821 -207.11337280]
[150.90634155 -221.54649353]
[156.02201843 -235.65390015]
[162.12007141 -249.36531067]
[169.17013550 -262.61239624]
[177.13706970 -275.32919312]
[185.98120117 -287.45233154]
[195.65844727 -298.92141724]
[206.12062073 -309.67929077]
[217.31556702 -319.67236328]
[229.18754578 -328.85089111]
[241.67739868 -337.16909790]
[254.72290039 -344.58554077]
[268.25906372 -351.06332397]
[282.21841431 -356.57009888]
[296.53146362 -361.07852173]
[311.12689209 -364.56604004]
[325.93194580 -367.01535034]
[340.87289429 -368.41418457]
[355.87530518 -368.75564575]
[370.86444092 -368.03799438]
[385.76559448 -366.26480103]
[400.50457764 -363.44488525]
[415.00790405 -359.59234619]
[429.20336914 -354.72634888]
[443.02020264 -348.87112427]
[456.38961792 -342.05584717]
[469.24496460 -334.31448364]
[481.52224731 -325.68560791]
[493.16024780 -316.21218872]
[504.10101318 -305.94143677]
[514.29003906 -294.92449951]
[523.67657471 -283.21627808]
[532.21380615 -270.87512207]
[539.85925293 -257.96249390]
[546.57482910 -244.54272461]
[552.32702637 -230.68266296]
[557.08721924 -216.45138550]
[560.83166504 -201.91976929]
[563.54174805 -187.16021729]
[565.20397949 -172.24626160]
[565.81005859 -157.25221252]
[565.35693359 -142.25276184]
[563.84686279 -127.32263184]
[561.28741455 -112.53620911]
[557.69134521 -97.96717072]
[553.07647705 -83.68807983]
[547.46594238 -69.77008820]
[540.88757324 -56.28253555]
[533.37420654 -43.29261017]
[524.96325684 -30.86502838]
[515.69659424 -19.06170845]
[505.62045288 -7.94145298]
[494.78500366 2.44033790]
[483.24420166 12.03194141]
[471.05557251 20.78557205]
[458.27981567 28.65762138]
[444.98059082 35.60886765]
[431.22418213 41.60467911]
[417.07907104 46.61519241]
[402.61578369 50.61543274]
[387.90634155 53.58548355]
[373.02404785 55.51054001]
[358.04299927 56.38101196]
[343.03790283 56.19256592]
[328.08343506 54.94614029]
[313.25418091 52.64794159]
[298.62396240 49.30942535]
[284.26568604 44.94721603]
[270.25088501 39.58305359]
[256.64938354 33.24365616]
[243.52893066 25.96061134]
[230.95491028 17.77020073]
[218.98994446 8.71323109]
[207.69366455 -1.16517854]
[197.04766846 9.40186882]
[186.40165710 19.96891594]
[175.99427795 30.77107239]
[165.83073425 41.80295181]
[155.66719055 52.83482742]
[145.50363159 63.86670685]
[144.80059814 68.59056091]
[141.12260437 72.92292023]
[134.86947632 75.06999207]
[124.38197327 85.79437256]
[113.89447021 96.51875305]
[110.24102783 110.01482391]
[96.82991028 113.96875000]
[86.34240723 124.69313049]
[75.85490417 135.41751099]
[65.36740875 146.14189148]
[61.25063324 161.41810608]
[46.82029724 165.10791016]
[56.76451111 176.34671021]
[65.87182617 188.27375793]
[74.09477234 200.82687378]
[81.39047241 213.94062805]
[87.72088623 227.54664612]
[93.05301666 241.57397461]
[97.35905457 255.94950867]
[100.61656952 270.59826660]
[102.80855560 285.44390869]
[103.92359924 300.40902710]
[103.95587921 315.41558838]
[102.90522766 330.38534546]
[100.77713013 345.24026489]
[97.58267212 359.90292358]
[93.33851624 374.29684448]
[88.06678009 388.34698486]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 194]
[71 192]
[72 191]
[73 190]
[74 189]
[76 187]
[77 186]
[78 185]
[79 182]
[80 181]
[81 180]
[82 179]
[86 178]
[87 177]
[88 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
