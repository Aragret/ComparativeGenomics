%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[115.86515045 450.31097412]
[119.79146576 435.80288696]
[125.88652039 422.06423950]
[134.00743103 409.41705322]
[143.96383667 398.15780640]
[155.52233887 388.55044556]
[168.41200256 380.82019043]
[162.74920654 366.93014526]
[157.08642578 353.04013062]
[151.42364502 339.15008545]
[145.76084900 325.26007080]
[140.87905884 339.44345093]
[128.65936279 348.14279175]
[113.65939331 348.11349487]
[101.47377014 339.36645508]
[96.64743805 325.16412354]
[100.98049164 310.80358887]
[112.85681152 301.64102173]
[127.84682465 301.09378052]
[140.36035156 309.36691284]
[129.52900696 299.14288330]
[133.33572388 283.78646851]
[129.36363220 269.32192993]
[125.39153290 254.85742188]
[115.03691101 248.60374451]
[111.60931396 236.58561707]
[117.47071838 225.09619141]
[115.12654877 223.55899048]
[113.25004578 221.00059509]
[112.23320770 217.59451294]
[112.39806366 213.65277100]
[113.95063019 209.59770203]
[111.06535339 194.87780762]
[108.18008423 180.15792847]
[105.29480743 165.43803406]
[102.40953827 150.71813965]
[99.52426910 135.99824524]
[96.63899231 121.27835846]
[93.75372314 106.55846405]
[90.89038849 103.97511292]
[89.17965698 100.14219666]
[89.15407562 95.60276794]
[91.08373260 91.11765289]
[88.85861969 76.28361511]
[86.63349915 61.44956970]
[78.54261780 74.08039093]
[64.61515808 79.65048218]
[50.04572678 76.08233643]
[40.26835632 64.70679474]
[38.92976761 49.76663971]
[46.52921677 36.83418655]
[60.23230362 30.73291969]
[74.92810822 33.73846054]
[85.13596344 44.73087311]
[84.68935394 29.73752213]
[84.24275208 14.74417210]
[83.79614258 -0.24917741]
[71.14390564 -9.03707504]
[66.15065765 -23.42181778]
[70.53327179 -37.81822968]
[82.41053772 -46.76633453]
[74.26578522 -60.33002090]
[81.62071991 -73.28202057]
[81.17411041 -88.27536774]
[80.72750854 -103.26871490]
[80.28089905 -118.26206970]
[79.83429718 -133.25541687]
[77.08942413 -137.69532776]
[76.39184570 -142.28517151]
[77.45584869 -146.22000122]
[79.71764374 -148.92494202]
[79.94097137 -163.92327881]
[80.16429901 -178.92161560]
[70.82485199 -194.79159546]
[80.40554810 -209.49455261]
[80.40554810 -224.49455261]
[80.40554810 -239.49455261]
[80.40554810 -254.49455261]
[65.48387909 -256.17495728]
[50.84418106 -259.51550293]
[36.67057037 -264.47421265]
[23.14129639 -270.98873901]
[10.42650127 -278.97708130]
[-1.31391418 -288.33886719]
[-11.93230057 -298.95629883]
[-21.29512024 -310.69586182]
[-29.28462410 -323.40994263]
[-35.80033875 -336.93862915]
[-40.76032257 -351.11181641]
[-44.10219574 -365.75119019]
[-45.78393173 -380.67272949]
[-45.78437805 -395.68872070]
[-44.10353470 -410.61032104]
[-40.76253891 -425.24993896]
[-35.80340576 -439.42340088]
[-29.28849792 -452.95245361]
[-21.29975319 -465.66702271]
[-11.93763638 -477.40716553]
[-1.31988585 -488.02523804]
[10.41996956 -497.38769531]
[23.13428688 -505.37683105]
[36.66317368 -511.89212036]
[50.83648682 -516.85168457]
[65.47598267 -520.19311523]
[80.39755249 -521.87438965]
[95.41354370 -521.87438965]
[110.33511353 -520.19311523]
[124.97460938 -516.85168457]
[139.14791870 -511.89212036]
[152.67680359 -505.37683105]
[165.39112854 -497.38769531]
[177.13098145 -488.02523804]
[187.74873352 -477.40716553]
[197.11085510 -465.66702271]
[205.09959412 -452.95245361]
[211.61450195 -439.42340088]
[216.57363892 -425.24993896]
[219.91462708 -410.61032104]
[221.59547424 -395.68872070]
[221.59503174 -380.67272949]
[219.91328430 -365.75119019]
[216.57141113 -351.11181641]
[211.61143494 -336.93862915]
[205.09571838 -323.40994263]
[197.10621643 -310.69586182]
[187.74339294 -298.95629883]
[177.12501526 -288.33886719]
[165.38459778 -278.97708130]
[152.66979980 -270.98873901]
[139.14051819 -264.47421265]
[124.96691132 -259.51550293]
[110.32721710 -256.17495728]
[95.40554810 -254.49455261]
[95.40554810 -239.49455261]
[95.40554810 -224.49455261]
[95.40554810 -209.49455261]
[103.73450470 -200.72215271]
[103.85726929 -188.22540283]
[95.16263580 -178.69828796]
[94.93930817 -163.69995117]
[94.71598053 -148.70161438]
[94.82764435 -133.70202637]
[95.27425385 -118.70867157]
[95.72085571 -103.71532440]
[96.16746521 -88.72196960]
[96.61406708 -73.72862244]
[104.72687531 -61.23736191]
[97.40389252 -47.21294022]
[109.79269409 -38.98764801]
[115.02443695 -24.87761688]
[110.89623260 -10.22117424]
[98.78948975 -0.69578332]
[99.23609924 14.29756641]
[99.68270111 29.29091644]
[100.12931061 44.28426743]
[101.46754456 59.22445297]
[103.69266510 74.05849457]
[105.91777802 88.89253998]
[108.47360992 103.67319489]
[111.35888672 118.39308167]
[114.24415588 133.11297607]
[117.12943268 147.83287048]
[120.01470184 162.55276489]
[122.89997101 177.27264404]
[125.78524780 191.99253845]
[128.67051697 206.71243286]
[131.99278259 221.33988953]
[145.20129395 234.17019653]
[139.85604858 250.88531494]
[143.82815552 265.34985352]
[147.80024719 279.81436157]
[158.91571045 291.07299805]
[154.82489014 305.39483643]
[159.65087891 319.59729004]
[165.31365967 333.48730469]
[170.97645569 347.37734985]
[176.63923645 361.26736450]
[182.30203247 375.15737915]
[196.92234802 371.67218018]
[211.90335083 370.45974731]
[226.89385986 371.54843140]
[241.54246521 374.91278076]
[255.50578308 380.47390747]
[268.45651245 388.10144043]
[280.09103394 397.61657715]
[290.13665771 408.79629517]
[298.35787964 421.37847900]
[304.56198120 435.06823730]
[308.60354614 449.54464722]
[310.38781738 464.46835327]
[309.87295532 479.48950195]
[307.07107544 494.25601196]
[302.04782104 508.42172241]
[294.92092896 521.65460205]
[285.85751343 533.64434814]
[275.07000732 544.10998535]
[262.81127930 552.80621338]
[249.36868286 559.52911377]
[235.05737305 564.12115479]
[220.21278381 566.47460938]
[205.18292236 566.53436279]
[190.32009888 564.29901123]
[175.97271729 559.82092285]
[162.47709656 553.20513916]
[150.14959717 544.60668945]
[139.27920532 534.22717285]
[130.12072754 522.30981445]
[122.88885498 509.13406372]
[117.75311279 495.00875854]
[114.83388519 480.26498413]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 178]
[8 177]
[9 176]
[10 175]
[11 174]
[20 173]
[22 171]
[23 170]
[24 169]
[27 167]
[32 166]
[33 165]
[34 164]
[35 163]
[36 162]
[37 161]
[38 160]
[39 159]
[43 158]
[44 157]
[45 156]
[54 155]
[55 154]
[56 153]
[57 152]
[61 148]
[63 146]
[64 145]
[65 144]
[66 143]
[67 142]
[71 141]
[72 140]
[73 139]
[75 136]
[76 135]
[77 134]
[78 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
