%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[5.79906416 961.86053467]
[-9.19007397 962.49273682]
[-24.19250488 962.46130371]
[-39.17885971 961.76623535]
[-54.11980438 960.40899658]
[-68.98609161 958.39215088]
[-83.74861145 955.71972656]
[-98.37847137 952.39697266]
[-112.84703827 948.43023682]
[-127.12598419 943.82745361]
[-141.18734741 938.59759521]
[-155.00361633 932.75079346]
[-168.54774475 926.29864502]
[-181.79321289 919.25366211]
[-194.71409607 911.62969971]
[-207.28509521 903.44171143]
[-219.48161316 894.70562744]
[-231.27975464 885.43859863]
[-242.65644836 875.65875244]
[-253.58940125 865.38531494]
[-264.05722046 854.63830566]
[-274.03942871 843.43872070]
[-283.51647949 831.80865479]
[-292.46981812 819.77069092]
[-300.88189697 807.34851074]
[-308.73626709 794.56640625]
[-316.01754761 781.44934082]
[-322.71151733 768.02307129]
[-328.80502319 754.31384277]
[-334.28616333 740.34844971]
[-339.14419556 726.15435791]
[-343.36962891 711.75921631]
[-346.95416260 697.19128418]
[-349.89080811 682.47906494]
[-352.17382812 667.65130615]
[-353.79870605 652.73706055]
[-354.76229858 637.76562500]
[-355.06271362 622.76611328]
[-354.69934082 607.76806641]
[-353.67294312 592.80078125]
[-351.98544312 577.89349365]
[-349.64022827 563.07550049]
[-346.64187622 548.37567139]
[-342.99621582 533.82293701]
[-338.71038818 519.44567871]
[-333.79281616 505.27206421]
[-328.25311279 491.32983398]
[-322.10211182 477.64630127]
[-315.35186768 464.24822998]
[-308.01559448 451.16186523]
[-300.10763550 438.41281128]
[-291.64349365 426.02603149]
[-282.63970947 414.02578735]
[-273.11395264 402.43554688]
[-263.08480835 391.27801514]
[-252.57197571 380.57504272]
[-241.59599304 370.34753418]
[-230.17835999 360.61553955]
[-218.34141541 351.39813232]
[-206.10835266 342.71331787]
[-193.50308228 334.57812500]
[-180.55032349 327.00845337]
[-167.27540588 320.01916504]
[-153.70431519 313.62390137]
[-139.86361694 307.83517456]
[-125.78042603 302.66433716]
[-111.48229218 298.12152100]
[-96.99720764 294.21560669]
[-82.35352325 290.95422363]
[-67.57991791 288.34378052]
[-52.70529556 286.38940430]
[-37.75878906 285.09487915]
[-22.76964760 284.46273804]
[-7.76721621 284.49426270]
[7.21913671 285.18933105]
[22.16007614 286.54663086]
[37.02635193 288.56350708]
[51.78886414 291.23599243]
[55.11112595 276.60852051]
[58.43338394 261.98107910]
[61.75564194 247.35360718]
[65.07790375 232.72615051]
[68.40016174 218.09869385]
[56.16173172 205.36714172]
[53.99671936 187.68200684]
[62.95937729 172.10156250]
[79.62467957 164.95834351]
[82.50994873 150.23846436]
[85.39522552 135.51856995]
[88.28049469 120.79867554]
[78.32053375 109.99662781]
[76.57256317 95.40794373]
[83.69869232 82.55869293]
[96.99961090 76.31605530]
[99.88488770 61.59616089]
[94.94655609 46.56541061]
[104.98748016 35.56408691]
[107.87274933 20.84419632]
[110.75802612 6.12430573]
[97.03369141 -0.09979272]
[85.11504364 -9.32164669]
[75.64484406 -21.04393196]
[69.13380432 -34.63448334]
[65.93305206 -49.36037445]
[66.21520996 -64.42745972]
[69.96504974 -79.02319336]
[76.98036194 -92.36044312]
[86.88280487 -103.71994019]
[99.13835907 -112.48909760]
[113.08610535 -118.19499207]
[127.97384644 -120.52991486]
[142.99870300 -119.36795044]
[157.35041809 -114.77175903]
[170.25502014 -106.98920441]
[181.01657104 -96.44000244]
[189.05471802 -83.69303894]
[193.93597412 -69.43576050]
[195.39709473 -54.43703079]
[193.35928345 -39.50572205]
[187.93244934 -25.44705200]
[179.40924072 -13.01919270]
[168.24931335 -2.89236188]
[155.05450439 4.38731384]
[140.53639221 8.42724991]
[125.47792053 9.00957870]
[122.59264374 23.72946930]
[119.70737457 38.44935989]
[124.85207367 52.42724609]
[114.60477448 64.48143768]
[111.71950531 79.20132446]
[121.67946625 90.00337219]
[123.42743683 104.59205627]
[116.30130768 117.44130707]
[103.00038910 123.68394470]
[100.11511230 138.40383911]
[97.22984314 153.12373352]
[94.34456635 167.84362793]
[103.98836517 175.79756165]
[109.30445862 187.03176880]
[109.33948517 199.38807678]
[104.14815521 210.52140808]
[94.77126312 218.34489441]
[83.02762604 221.42094421]
[79.70536041 236.04840088]
[76.38310242 250.67587280]
[73.06084442 265.30331421]
[69.73858643 279.93078613]
[66.41632843 294.55825806]
[80.88490295 298.52487183]
[95.16386414 303.12762451]
[109.22525024 308.35745239]
[123.04154968 314.20416260]
[136.58569336 320.65628052]
[149.83119202 327.70120239]
[162.75210571 335.32513428]
[175.32313538 343.51309204]
[187.51966858 352.24914551]
[199.31785583 361.51611328]
[210.69458008 371.29589844]
[221.62757874 381.56933594]
[232.09544373 392.31631470]
[242.07768250 403.51580811]
[251.55476379 415.14590454]
[260.50814819 427.18380737]
[268.92025757 439.60595703]
[276.77468872 452.38806152]
[284.05603027 465.50506592]
[290.75003052 478.93130493]
[296.84359741 492.64053345]
[302.32476807 506.60586548]
[307.18286133 520.79998779]
[311.40835571 535.19506836]
[314.99295044 549.76300049]
[317.92965698 564.47521973]
[320.21270752 579.30297852]
[321.83764648 594.21716309]
[322.80130005 609.18865967]
[323.10177612 624.18811035]
[322.73846436 639.18615723]
[321.71209717 654.15350342]
[320.02465820 669.06079102]
[317.67950439 683.87878418]
[314.68118286 698.57861328]
[311.03558350 713.13134766]
[306.74981689 727.50866699]
[301.83230591 741.68231201]
[296.29263306 755.62451172]
[290.14169312 769.30810547]
[283.39147949 782.70617676]
[276.05526733 795.79254150]
[268.14733887 808.54162598]
[259.68325806 820.92846680]
[250.67951965 832.92871094]
[241.15379333 844.51898193]
[231.12471008 855.67657471]
[220.61190796 866.37957764]
[209.63595581 876.60711670]
[198.21835327 886.33917236]
[186.38145447 895.55664062]
[174.14840698 904.24145508]
[161.54318237 912.37670898]
[148.59045410 919.94641113]
[135.31555176 926.93579102]
[121.74448395 933.33111572]
[107.90381622 939.11987305]
[93.82064056 944.29077148]
[79.52252197 948.83361816]
[65.03744507 952.73962402]
[50.39377975 956.00103760]
[35.62017822 958.61151123]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[78 148]
[79 147]
[80 146]
[81 145]
[82 144]
[83 143]
[87 137]
[88 136]
[89 135]
[90 134]
[94 130]
[95 129]
[97 127]
[98 126]
[99 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
