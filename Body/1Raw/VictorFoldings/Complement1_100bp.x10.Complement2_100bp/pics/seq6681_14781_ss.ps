%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[32.74665833 493.80993652]
[37.08493042 508.24749756]
[37.84130096 523.30377197]
[34.97180176 538.10339355]
[28.64326286 551.78601074]
[19.22361374 563.55603027]
[7.26050234 572.72918701]
[-6.55055285 578.77221680]
[-21.40659523 581.33380127]
[-36.44391251 580.26489258]
[-50.78825760 575.62774658]
[-63.60566330 567.69189453]
[-74.15094757 556.91876221]
[-81.81101990 543.93469238]
[-86.14054108 529.49450684]
[-86.88777924 514.43774414]
[-84.00931549 499.63986206]
[-77.67247772 485.96112061]
[-68.24569702 474.19680786]
[-56.27702332 465.03088379]
[-42.46230698 458.99621582]
[-27.60471535 456.44369507]
[-12.56804943 457.52169800]
[-7.95404005 443.24896240]
[-3.34003067 428.97622681]
[1.27397859 414.70349121]
[5.88798809 400.43075562]
[10.50199699 386.15802002]
[15.11600685 371.88528442]
[4.24838400 361.66961670]
[-1.12819874 347.69097900]
[0.10266679 332.70278931]
[7.75022745 319.68222046]
[20.34381866 311.23898315]
[35.41540527 309.09219360]
[40.02941513 294.81945801]
[44.64342499 280.54672241]
[37.22916794 270.00830078]
[37.23856354 256.92846680]
[44.89223862 246.08265686]
[57.57909393 241.55958557]
[62.40509033 227.35711670]
[61.58074188 220.01258850]
[67.41011047 212.98007202]
[71.48977661 198.54551697]
[74.59388733 183.87020874]
[77.69799805 169.19491577]
[80.80210876 154.51960754]
[83.90621948 139.84429932]
[71.25640869 131.94346619]
[62.06908798 120.19467163]
[57.45096970 106.01319885]
[57.95835495 91.10737610]
[63.53012466 77.27277374]
[73.49510193 66.17591095]
[86.65288544 59.15354156]
[101.41847992 57.05158234]
[104.52259064 42.37628174]
[107.62670135 27.70097923]
[109.40916443 12.80726147]
[109.85577393 -2.18608856]
[110.30237579 -17.17943954]
[110.74898529 -32.17278671]
[111.19558716 -47.16613770]
[97.14916229 -52.81620407]
[85.90442657 -62.91213989]
[78.80565643 -76.22106934]
[76.69259644 -91.12761688]
[79.80117035 -105.82994080]
[87.73731232 -118.55755615]
[99.52679443 -127.78453064]
[113.73481750 -132.41244507]
[114.18141937 -147.40579224]
[114.62802887 -162.39913940]
[101.66970825 -170.52497864]
[94.56544495 -183.95726013]
[95.13465118 -199.04176331]
[103.12440491 -211.73112488]
[116.30418396 -218.67079163]
[116.75079346 -233.66413879]
[117.19739532 -248.65748596]
[117.53237152 -263.65374756]
[117.75569916 -278.65206909]
[117.75569916 -293.65206909]
[117.53237152 -308.65042114]
[117.30904388 -323.64877319]
[117.08571625 -338.64709473]
[116.86238861 -353.64544678]
[102.02392578 -356.10705566]
[87.86352539 -361.17883301]
[74.83639526 -368.69772339]
[63.36130905 -378.42202759]
[53.80713654 -390.03915405]
[46.48100662 -403.17565918]
[41.61842346 -417.40924072]
[39.37569809 -432.28237915]
[39.82492828 -447.31692505]
[42.95167160 -462.02963257]
[48.65541458 -475.94750977]
[56.75280380 -488.62313843]
[66.98354340 -499.64910889]
[79.01876831 -508.67092896]
[92.47157288 -515.39862061]
[106.90953064 -519.61584473]
[121.86849976 -521.18713379]
[136.86763000 -520.06195068]
[151.42474365 -516.27642822]
[165.07189941 -509.95227051]
[177.37039185 -501.29278564]
[187.92488098 -490.57632446]
[196.39608765 -478.14736938]
[202.51168823 -464.40548706]
[206.07508850 -449.79241943]
[206.97175598 -434.77792358]
[205.17285156 -419.84460449]
[200.73620605 -405.47253418]
[193.80445862 -392.12374878]
[184.60040283 -380.22729492]
[173.41992188 -370.16564941]
[160.62243652 -362.26223755]
[146.61932373 -356.77108765]
[131.86073303 -353.86877441]
[132.08406067 -338.87042236]
[132.30738831 -323.87210083]
[132.53071594 -308.87374878]
[132.75404358 -293.87539673]
[135.49624634 -289.96524048]
[135.81121826 -284.29092407]
[132.75404358 -278.42874146]
[132.53071594 -263.43041992]
[135.57427979 -256.69555664]
[132.19075012 -248.21087646]
[131.74414062 -233.21752930]
[131.29753113 -218.22418213]
[144.04089355 -210.51234436]
[151.26119995 -197.36993408]
[150.93154907 -182.27828979]
[143.04037476 -169.29266357]
[129.62138367 -161.95252991]
[129.17477417 -146.95918274]
[128.72816467 -131.96583557]
[142.63552856 -126.50045776]
[153.85491943 -116.58811188]
[161.01942444 -103.41069794]
[163.24739075 -88.54941559]
[160.25082397 -73.79507446]
[152.37248230 -60.93225861]
[140.54676819 -51.52352142]
[126.18894196 -46.71953201]
[125.74233246 -31.72618294]
[125.29573059 -16.73283195]
[124.84912109 -1.73948276]
[124.40251923 13.25386715]
[132.90332031 0.89521021]
[145.88130188 -6.62621832]
[160.83062744 -7.85814810]
[174.86480713 -2.56271315]
[185.27407837 8.23762131]
[190.04855347 22.45747948]
[188.26637268 37.35123062]
[180.27162170 50.04312515]
[167.60800171 58.08255386]
[152.72061157 59.91723251]
[138.48402405 55.19290924]
[127.64705658 44.82178116]
[122.30200195 30.80508804]
[119.19789124 45.48039246]
[116.09378052 60.15569305]
[128.74359131 68.05654144]
[137.93090820 79.80532837]
[142.54902649 93.98680115]
[142.04164124 108.89262390]
[136.46987915 122.72722626]
[126.50489807 133.82408142]
[113.34711456 140.84645081]
[98.58152008 142.94841003]
[95.47740936 157.62371826]
[92.37329865 172.29902649]
[89.26918793 186.97431946]
[86.16507721 201.64962769]
[97.71258545 192.07595825]
[112.58965302 190.15950012]
[126.18646240 196.49406433]
[134.28988647 209.11683655]
[134.38900757 224.11651611]
[126.45309448 236.84527588]
[112.94118500 243.35897827]
[98.04008484 241.63928223]
[86.36707306 232.21903992]
[81.53913879 218.01698303]
[76.60754395 232.18312073]
[71.78154755 246.38557434]
[79.79986572 261.93310547]
[74.20307159 278.15011597]
[58.91615677 285.16073608]
[54.30214691 299.43347168]
[49.68813705 313.70620728]
[60.65096664 324.26925659]
[65.91893768 338.48669434]
[64.49741364 353.51995850]
[56.72166061 366.39236450]
[44.17980576 374.57839966]
[29.38874054 376.49929810]
[24.77473068 390.77203369]
[20.16072083 405.04476929]
[15.54671192 419.31750488]
[10.93270302 433.59024048]
[6.31869364 447.86297607]
[1.70468426 462.13571167]
[14.52690125 470.06375122]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 209]
[24 208]
[25 207]
[26 206]
[27 205]
[28 204]
[29 203]
[35 197]
[36 196]
[37 195]
[41 192]
[42 191]
[44 190]
[45 180]
[46 179]
[47 178]
[48 177]
[49 176]
[57 168]
[58 167]
[59 166]
[60 153]
[61 152]
[62 151]
[63 150]
[64 149]
[72 141]
[73 140]
[74 139]
[79 134]
[80 133]
[81 132]
[82 130]
[83 129]
[84 126]
[85 125]
[86 124]
[87 123]
[88 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
