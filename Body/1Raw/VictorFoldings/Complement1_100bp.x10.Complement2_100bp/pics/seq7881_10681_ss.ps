%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[233.20478821 340.87716675]
[239.35968018 327.18283081]
[246.91233826 314.20687866]
[255.77998352 302.09149170]
[265.86547852 290.96942139]
[255.86730957 279.78744507]
[245.86914062 268.60549927]
[235.87097168 257.42352295]
[225.87278748 246.24153137]
[215.87461853 235.05955505]
[211.24081421 233.90335083]
[207.28411865 229.82394409]
[205.75131226 223.39260864]
[196.09049988 211.91790771]
[186.42970276 200.44320679]
[176.68373108 189.04074097]
[166.85314941 177.71115112]
[156.60775757 166.75523376]
[145.96174622 156.18818665]
[135.31573486 145.62113953]
[124.66973114 135.05409241]
[114.02371979 124.48705292]
[103.37771606 113.91999817]
[89.90921021 110.16619110]
[86.05523682 96.72600555]
[75.40923309 86.15895844]
[70.36177826 84.82843781]
[66.69597626 81.97971344]
[64.75877380 78.39331055]
[64.53702545 74.87434387]
[54.37348175 63.84246445]
[44.20993423 52.81058502]
[34.04638672 41.77870941]
[23.09047699 31.53331757]
[11.40289593 22.13116646]
[-0.28468505 12.72901535]
[-11.97226620 3.32686424]
[-23.65984726 -6.07528687]
[-32.30796814 -9.01599979]
[-35.45008087 -15.70546436]
[-46.99637985 -25.28058434]
[-57.56117249 -14.61837101]
[-69.02695465 -4.93160677]
[-81.30400085 3.70389366]
[-94.29621124 11.22054482]
[-107.90190887 17.55951881]
[-122.01461029 22.67120171]
[-136.52386475 26.51558685]
[-151.31610107 29.06258774]
[-166.27555847 30.29226875]
[-181.28517151 30.19500923]
[-196.22743225 28.77156448]
[-210.98542786 26.03308105]
[-225.44363403 22.00098801]
[-239.48890686 16.70684242]
[-253.01132202 10.19208145]
[-265.90502930 2.50769091]
[-278.06912231 -6.28618670]
[-289.40841675 -16.12072563]
[-299.83413696 -26.91895676]
[-309.26470947 -38.59636688]
[-317.62634277 -51.06156540]
[-324.85351562 -64.21698761]
[-330.88977051 -77.95967865]
[-335.68777466 -92.18207550]
[-339.21002197 -106.77287292]
[-341.42895508 -121.61787415]
[-342.32717896 -136.60089111]
[-341.89767456 -151.60466003]
[-340.14379883 -166.51176453]
[-337.07928467 -181.20552063]
[-332.72811890 -195.57092285]
[-327.12435913 -209.49555969]
[-320.31185913 -222.87043762]
[-312.34393311 -235.59088135]
[-303.28292847 -247.55732727]
[-293.19976807 -258.67611694]
[-282.17340088 -268.86026001]
[-270.29010010 -278.03002930]
[-257.64285278 -286.11364746]
[-244.33065796 -293.04785156]
[-230.45770264 -298.77838135]
[-216.13258362 -303.26037598]
[-201.46739197 -306.45877075]
[-186.57690430 -308.34854126]
[-171.57768250 -308.91485596]
[-156.58709717 -308.15332031]
[-141.72247314 -306.06988525]
[-127.10015869 -302.68084717]
[-112.83458710 -298.01275635]
[-99.03741455 -292.10211182]
[-85.81662750 -284.99520874]
[-73.27568817 -276.74761963]
[-61.51275253 -267.42395020]
[-50.61988068 -257.09713745]
[-40.68233109 -245.84800720]
[-31.77787971 -233.76461792]
[-23.97621346 -220.94152832]
[-17.33839226 -207.47909546]
[-11.91636944 -193.48269653]
[-7.75257969 -179.06185913]
[-4.87961054 -164.32946777]
[-3.31994677 -149.40080261]
[-3.08579612 -134.39270020]
[-4.17899036 -119.42264557]
[-6.59097433 -104.60779572]
[-10.30287075 -90.06408691]
[-15.28562737 -75.90534973]
[-21.50024605 -62.24240494]
[-28.89809227 -49.18217850]
[-37.42126083 -36.82688522]
[-25.87495995 -27.25176620]
[-14.25769615 -17.76286888]
[-2.57011509 -8.36071682]
[9.11746597 1.04143417]
[20.80504799 10.44358540]
[32.49263000 19.84573555]
[28.60253334 5.35894394]
[32.38143921 -9.15724945]
[42.84155273 -19.90834427]
[57.24861908 -24.08403206]
[71.83666992 -20.59279823]
[82.79242706 -10.34724045]
[87.25207520 3.97447491]
[84.04987335 18.62868690]
[74.02288055 29.78481865]
[59.79211044 34.52668381]
[45.07826233 31.61516190]
[55.24180984 42.64704132]
[65.40535736 53.67891693]
[75.56890106 64.71079254]
[85.97628021 75.51294708]
[96.62228394 86.08000183]
[110.09078979 89.83380890]
[113.94476318 103.27399445]
[124.59076691 113.84104156]
[135.23678589 124.40808868]
[145.88278198 134.97514343]
[156.52879333 145.54219055]
[167.17480469 156.10923767]
[169.73034668 141.32852173]
[182.80554199 133.97738647]
[196.76184082 139.47480774]
[201.31118774 153.76828003]
[193.09996033 166.32119751]
[178.18273926 167.88056946]
[188.01332092 179.21015930]
[196.00115967 183.64100647]
[197.90438843 190.78239441]
[207.56520081 202.25709534]
[217.22601318 213.73179626]
[227.05659485 225.06138611]
[237.05476379 236.24336243]
[247.05294800 247.42533875]
[257.05111694 258.60729980]
[267.04928589 269.78927612]
[277.04745483 280.97125244]
[289.22415161 272.18798828]
[302.25222778 264.72564697]
[315.98901367 258.66601562]
[330.28393555 254.07550049]
[344.98037720 251.00437927]
[359.91735840 249.48629761]
[374.93118286 249.53790283]
[389.85736084 251.15861511]
[404.53237915 254.33068848]
[418.79541016 259.01934814]
[432.49020386 265.17324829]
[445.46667480 272.72497559]
[457.58270264 281.59173584]
[468.70553589 291.67642212]
[478.71322632 302.86853027]
[487.49621582 315.04544067]
[494.95825195 328.07369995]
[501.01751709 341.81060791]
[505.60769653 356.10565186]
[508.67846680 370.80218506]
[510.19619751 385.73919678]
[510.14422607 400.75302124]
[508.52313232 415.67916870]
[505.35070801 430.35409546]
[500.66171265 444.61700439]
[494.50747681 458.31164551]
[486.95544434 471.28796387]
[478.08837891 483.40377808]
[468.00341797 494.52633667]
[456.81106567 504.53378296]
[444.63397217 513.31646729]
[431.60549927 520.77819824]
[417.86843872 526.83709717]
[403.57330322 531.42694092]
[388.87667847 534.49737549]
[373.93963623 536.01470947]
[358.92581177 535.96240234]
[343.99969482 534.34094238]
[329.32485962 531.16815186]
[315.06207275 526.47882080]
[301.36758423 520.32421875]
[288.39144897 512.77191162]
[276.27584839 503.90454102]
[265.15353394 493.81930542]
[255.14634705 482.62670898]
[246.36396790 470.44940186]
[238.90257263 457.42074585]
[232.84394836 443.68353271]
[228.25447083 429.38827515]
[225.18441772 414.69158936]
[223.66743469 399.75451660]
[223.72012329 384.74069214]
[225.34193420 369.81463623]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 157]
[6 156]
[7 155]
[8 154]
[9 153]
[10 152]
[13 151]
[14 150]
[15 149]
[16 147]
[17 146]
[18 140]
[19 139]
[20 138]
[21 137]
[22 136]
[23 135]
[25 133]
[26 132]
[30 131]
[31 130]
[32 129]
[33 128]
[34 117]
[35 116]
[36 115]
[37 114]
[38 113]
[40 112]
[41 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
