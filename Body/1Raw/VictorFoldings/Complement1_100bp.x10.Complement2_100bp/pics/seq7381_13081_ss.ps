%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[55.16611862 723.43109131]
[40.23286438 724.88916016]
[25.24009514 725.47644043]
[10.23854160 725.19104004]
[-4.72103500 724.03381348]
[-19.58801651 722.00872803]
[-34.31209564 719.12261963]
[-48.84345245 715.38531494]
[-63.13291550 710.80938721]
[-77.13214111 705.41027832]
[-90.79374695 699.20635986]
[-104.07151031 692.21862793]
[-116.92050934 684.47064209]
[-129.29727173 675.98864746]
[-141.15989685 666.80139160]
[-152.46826172 656.93988037]
[-163.18409729 646.43756104]
[-173.27114868 635.32995605]
[-182.69528198 623.65460205]
[-191.42462158 611.45098877]
[-199.42959595 598.76055908]
[-206.68315125 585.62609863]
[-213.16072083 572.09210205]
[-218.84040833 558.20434570]
[-223.70297241 544.00982666]
[-227.73197937 529.55664062]
[-230.91378784 514.89361572]
[-233.23762512 500.07040405]
[-234.69564819 485.13714600]
[-235.28289795 470.14437866]
[-234.99740601 455.14282227]
[-233.84013367 440.18325806]
[-231.81498718 425.31628418]
[-228.92883301 410.59219360]
[-225.19143677 396.06085205]
[-220.61543274 381.77142334]
[-215.21630859 367.77221680]
[-209.01234436 354.11062622]
[-202.02450562 340.83288574]
[-194.27647400 327.98394775]
[-185.79444885 315.60720825]
[-176.60711670 303.74462891]
[-166.74559021 292.43630981]
[-156.24320984 281.72048950]
[-145.13554382 271.63348389]
[-133.46015930 262.20941162]
[-121.25655365 253.48013306]
[-108.56604004 245.47520447]
[-95.43154907 238.22171021]
[-81.89752197 231.74418640]
[-68.00975800 226.06455994]
[-53.81525421 221.20205688]
[-39.36203003 217.17311096]
[-24.69899750 213.99136353]
[-9.87576866 211.66758728]
[5.05749750 210.20962524]
[20.05027199 209.62243652]
[35.05182266 209.90798950]
[50.01139069 211.06532288]
[64.87834930 213.09053040]
[67.76362610 198.37063599]
[70.64889526 183.65074158]
[73.53417206 168.93084717]
[76.41944122 154.21096802]
[64.01989746 162.65200806]
[49.08340454 161.27311707]
[38.43873978 150.70472717]
[36.95249176 135.77853394]
[45.30415726 123.31861115]
[59.67546844 119.02146149]
[73.49604797 124.85168457]
[80.44757843 138.14561462]
[84.84857178 123.80577087]
[89.24957275 109.46591949]
[86.30645752 95.79735565]
[96.41058350 86.13307953]
[100.81157684 71.79323578]
[105.21257782 57.45338440]
[109.61357880 43.11353683]
[106.26576233 27.65059090]
[117.39672089 17.75357246]
[121.79772186 3.41372490]
[107.91493225 -2.29527903]
[94.61812592 -9.26088524]
[82.02075958 -17.42366219]
[70.23030090 -26.71397018]
[59.34735489 -37.05254364]
[49.46476746 -48.35117722]
[40.66685486 -60.51346970]
[33.02867889 -73.43565369]
[26.61540985 -87.00748444]
[21.48176193 -101.11317444]
[17.67153549 -115.63236237]
[15.21724033 -130.44117737]
[14.13981438 -145.41328430]
[14.44845009 -160.42092896]
[16.14051437 -175.33607483]
[19.20157242 -190.03146362]
[23.60550499 -204.38172913]
[29.31473923 -218.26441956]
[36.28056717 -231.56111145]
[44.44355392 -244.15834045]
[53.73405838 -255.94863892]
[64.07281494 -266.83142090]
[75.37161255 -276.71380615]
[87.53404999 -285.51153564]
[100.45636749 -293.14947510]
[114.02830505 -299.56253052]
[128.13407898 -304.69595337]
[142.65332031 -308.50592041]
[157.46218872 -310.95996094]
[172.43429565 -312.03713989]
[187.44194031 -311.72827148]
[202.35705566 -310.03594971]
[217.05239868 -306.97463989]
[231.40258789 -302.57046509]
[245.28518677 -296.86102295]
[258.58175659 -289.89495850]
[271.17886353 -281.73175049]
[282.96899414 -272.44107056]
[293.85159302 -262.10214233]
[303.73382568 -250.80316162]
[312.53131104 -238.64057922]
[320.16906738 -225.71813965]
[326.58187866 -212.14608765]
[331.71505737 -198.04023743]
[335.52481079 -183.52091980]
[337.97860718 -168.71202087]
[339.05554199 -153.73988342]
[338.74639893 -138.73225403]
[337.05383301 -123.81716919]
[333.99227905 -109.12187195]
[329.58789062 -94.77175903]
[323.87817383 -80.88925171]
[316.91192627 -67.59279633]
[308.74850464 -54.99583817]
[299.45761108 -43.20584488]
[289.11849976 -32.32341385]
[277.81936646 -22.44139099]
[265.65664673 -13.64408684]
[252.73406982 -6.00655699]
[239.16191101 0.40603438]
[225.05596924 5.53897667]
[210.53659058 9.34847641]
[195.72766113 11.80203247]
[180.75549316 12.87871075]
[165.74786377 12.56932449]
[150.83280945 10.87651443]
[136.13757324 7.81472301]
[131.73657227 22.15456963]
[135.39916992 36.59183502]
[123.95342255 47.51453781]
[119.55242157 61.85438538]
[115.15142822 76.19422913]
[110.75042725 90.53408051]
[113.69354248 104.20264435]
[103.58941650 113.86692047]
[99.18842316 128.20677185]
[94.78742218 142.54661560]
[91.13933563 157.09623718]
[88.25405884 171.81613159]
[85.36878967 186.53601074]
[82.48352051 201.25590515]
[79.59824371 215.97579956]
[94.12963104 219.71302795]
[108.41913605 224.28884888]
[122.41840363 229.68778992]
[136.08006287 235.89160156]
[149.35787964 242.87925720]
[162.20695496 250.62713623]
[174.58377075 259.10900879]
[186.44648743 268.29620361]
[197.75492859 278.15759277]
[208.47085571 288.65982056]
[218.55799866 299.76736450]
[227.98222351 311.44262695]
[236.71165466 323.64611816]
[244.71673584 336.33654785]
[251.97039795 349.47094727]
[258.44808960 363.00488281]
[264.12786865 376.89257812]
[268.99057007 391.08703613]
[273.01968384 405.54019165]
[276.20162964 420.20318604]
[278.52560425 435.02639771]
[279.98373413 449.95965576]
[280.57110596 464.95242310]
[280.28573608 479.95397949]
[279.12860107 494.91354370]
[277.10357666 509.78054810]
[274.21752930 524.50463867]
[270.48025513 539.03601074]
[265.90435791 553.32550049]
[260.50537109 567.32470703]
[254.30151367 580.98638916]
[247.31379700 594.26416016]
[239.56585693 607.11322021]
[231.08393860 619.48999023]
[221.89669800 631.35266113]
[212.03526306 642.66107178]
[201.53298950 653.37695312]
[190.42539978 663.46405029]
[178.75007629 672.88824463]
[166.54655457 681.61761475]
[153.85610962 689.62261963]
[140.72167969 696.87622070]
[127.18770599 703.35388184]
[113.29998779 709.03363037]
[99.10552216 713.89624023]
[84.65233612 717.92529297]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 164]
[61 163]
[62 162]
[63 161]
[64 160]
[72 159]
[73 158]
[74 157]
[76 155]
[77 154]
[78 153]
[79 152]
[81 150]
[82 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
