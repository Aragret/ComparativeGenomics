%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[145.29339600 646.43743896]
[135.56091309 635.00744629]
[126.99565125 622.67846680]
[119.68010712 609.56933594]
[113.68471527 595.80627441]
[109.06723022 581.52178955]
[105.87212372 566.85351562]
[104.13016510 551.94274902]
[103.85812378 536.93298340]
[105.05862427 521.96881104]
[107.72010040 507.19439697]
[111.81693268 492.75201416]
[117.30965424 478.78073120]
[124.14537048 465.41510010]
[132.25823975 452.78387451]
[141.57014465 441.00866699]
[151.99139404 430.20291138]
[163.42161560 420.47067261]
[175.75074768 411.90563965]
[188.86003113 404.59036255]
[202.62321472 398.59524536]
[198.00921631 384.32250977]
[193.39520264 370.04977417]
[188.78118896 355.77703857]
[184.16717529 341.50430298]
[179.55317688 327.23159790]
[174.51625061 313.10256958]
[162.68002319 304.06082153]
[164.86848450 288.39172363]
[159.41311646 274.41891479]
[153.95776367 260.44610596]
[148.50241089 246.47332764]
[143.04704285 232.50051880]
[129.34516907 226.77392578]
[123.61360931 212.68124390]
[129.71308899 198.34826660]
[124.25772858 184.37547302]
[118.80237579 170.40266418]
[113.34701538 156.42987061]
[107.89166260 142.45707703]
[102.43630219 128.48428345]
[98.49961853 125.78028870]
[96.21977234 120.57458496]
[97.03335571 114.01336670]
[86.50777435 104.80989838]
[88.83761597 91.02355194]
[83.80070496 76.89452362]
[71.87864685 66.49379730]
[74.89293671 51.90738678]
[69.85601807 37.77835464]
[64.81909943 23.64932632]
[49.70912170 24.03134537]
[35.24045944 19.73014450]
[22.82649231 11.17901802]
[13.67581844 -0.77423400]
[8.67459965 -14.95134258]
[8.30075550 -29.95971298]
[12.57831669 -44.32921600]
[21.07630730 -56.65618896]
[32.95213318 -65.74055481]
[27.91521645 -79.86959076]
[22.87829971 -93.99861908]
[17.04893112 -101.03113556]
[17.87327957 -108.37567139]
[13.04728222 -122.57812500]
[8.22128487 -136.78057861]
[-3.54459953 -147.35765076]
[-0.31347412 -161.89756775]
[-5.13947201 -176.10002136]
[-19.83803558 -173.01626587]
[-34.80113983 -171.72674561]
[-49.81058121 -172.25027466]
[-64.64746857 -174.57922363]
[-79.09545135 -178.67961121]
[-92.94382477 -184.49166870]
[-105.99064636 -191.93060303]
[-118.04563904 -200.88796997]
[-128.93302917 -211.23312378]
[-138.49401855 -222.81521606]
[-146.58921814 -235.46531677]
[-153.10054016 -248.99899292]
[-157.93302917 -263.21884155]
[-161.01625061 -277.91751099]
[-162.30520630 -292.88067627]
[-161.78111267 -307.89010620]
[-159.45161438 -322.72689819]
[-155.35067749 -337.17471313]
[-149.53811646 -351.02288818]
[-142.09867859 -364.06942749]
[-133.14086914 -376.12408447]
[-122.79531097 -387.01107788]
[-111.21286774 -396.57165527]
[-98.56245422 -404.66635132]
[-85.02854156 -411.17718506]
[-70.80850983 -416.00915527]
[-56.10971451 -419.09179688]
[-41.14651489 -420.38021851]
[-26.13711357 -419.85556030]
[-11.30039501 -417.52551270]
[3.14727831 -413.42404175]
[16.99521637 -407.61093140]
[30.04147720 -400.17102051]
[42.09580612 -391.21276855]
[52.98241806 -380.86679077]
[62.54254913 -369.28399658]
[70.63678741 -356.63327026]
[77.14710236 -343.09912109]
[81.97853851 -328.87890625]
[85.06065369 -314.17999268]
[86.34849548 -299.21673584]
[85.82328033 -284.20736694]
[83.49266815 -269.37072754]
[79.39065552 -254.92321777]
[73.57705688 -241.07550049]
[66.13664246 -228.02951050]
[57.17792892 -215.97552490]
[46.83155441 -205.08929443]
[35.24839783 -195.52960205]
[22.59737778 -187.43582153]
[9.06298351 -180.92602539]
[13.88898182 -166.72357178]
[25.30967903 -157.16235352]
[22.42374039 -141.60658264]
[27.24973869 -127.40412140]
[32.07573700 -113.20166779]
[37.00732803 -99.03553009]
[42.04424667 -84.90650177]
[47.08116150 -70.77747345]
[62.02551270 -71.25434113]
[76.40502930 -67.08306122]
[88.80798340 -58.66006851]
[98.01264191 -46.79983139]
[103.10762024 -32.65614700]
[103.58211517 -17.60988808]
[99.37707520 -3.13418317]
[90.89223480 9.34980583]
[78.94813538 18.61240959]
[83.98504639 32.74143982]
[89.02196503 46.87046814]
[100.58374786 56.26059341]
[97.92973328 71.85760498]
[102.96664429 85.98663330]
[113.49222565 95.19010162]
[111.16238403 108.97644806]
[116.40910339 123.02892303]
[121.86445618 137.00172424]
[127.31981659 150.97451782]
[132.77517700 164.94731140]
[138.23052979 178.92010498]
[143.68588257 192.89291382]
[157.88339233 199.30139160]
[163.21684265 213.54951477]
[157.01985168 227.04516602]
[162.47520447 241.01795959]
[167.93055725 254.99076843]
[173.38592529 268.96356201]
[178.84127808 282.93637085]
[191.06771851 292.97750854]
[188.48905945 307.64718628]
[191.97351074 310.23806763]
[194.22575378 313.47717285]
[195.19329834 316.89758301]
[194.98071289 320.06326294]
[193.82591248 322.61758423]
[198.43991089 336.89031982]
[203.05392456 351.16305542]
[207.66793823 365.43576050]
[212.28193665 379.70849609]
[216.89595032 393.98123169]
[231.56402588 390.78524780]
[246.47473145 389.04238892]
[261.48446655 388.76943970]
[276.44869995 389.96905518]
[291.22326660 392.62963867]
[305.66589355 396.72561646]
[319.63751221 402.21749878]
[333.00354004 409.05239868]
[345.63528442 417.16452026]
[357.41104126 426.47570801]
[368.21740723 436.89633179]
[377.95034790 448.32595825]
[386.51611328 460.65457153]
[393.83218384 473.76342773]
[399.82812500 487.52624512]
[404.44616699 501.81051636]
[407.64187622 516.47863770]
[409.38442993 531.38940430]
[409.65707397 546.39916992]
[408.45715332 561.36334229]
[405.79626465 576.13787842]
[401.70001221 590.58044434]
[396.20785522 604.55194092]
[389.37268066 617.91784668]
[381.26031494 630.54937744]
[371.94888306 642.32495117]
[361.52807617 653.13110352]
[350.09823608 662.86383057]
[337.76943970 671.42932129]
[324.66046143 678.74517822]
[310.89749146 684.74078369]
[296.61312866 689.35858154]
[281.94494629 692.55395508]
[267.03414917 694.29626465]
[252.02439880 694.56860352]
[237.06024170 693.36840820]
[222.28576660 690.70721436]
[207.84329224 686.61065674]
[193.87190247 681.11822510]
[180.50613403 674.28277588]
[167.87474060 666.17016602]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 169]
[22 168]
[23 167]
[24 166]
[25 165]
[26 164]
[27 159]
[29 157]
[30 156]
[31 155]
[32 154]
[33 153]
[36 150]
[37 149]
[38 148]
[39 147]
[40 146]
[41 145]
[44 144]
[46 142]
[47 141]
[49 139]
[50 138]
[51 137]
[60 128]
[61 127]
[62 126]
[64 125]
[65 124]
[66 123]
[68 121]
[69 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
