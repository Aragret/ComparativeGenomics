%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[20.82295609 512.01434326]
[23.53940964 526.82366943]
[23.11708641 541.87408447]
[19.57444954 556.50769043]
[13.06636524 570.08483887]
[3.87734199 582.01190186]
[-7.59091711 591.76757812]
[-20.83706856 598.92529297]
[-35.28204727 603.17224121]
[-50.29438400 604.32263184]
[-65.21779633 602.32629395]
[-79.39990234 597.27050781]
[-92.22072601 589.37615967]
[-103.11978912 578.98846436]
[-111.62062836 566.56152344]
[-117.35163116 552.63854980]
[-120.06225586 537.82818604]
[-119.63401031 522.77795410]
[-116.08561707 508.14569092]
[-109.57219696 494.57110596]
[-100.37847900 482.64764404]
[-88.90637970 472.89651489]
[-75.65741730 465.74398804]
[-61.21076584 461.50274658]
[-46.19798279 460.35821533]
[-31.27535248 462.36044312]
[-26.23843575 448.23141479]
[-21.20152092 434.10238647]
[-16.16460419 419.97335815]
[-11.12768841 405.84432983]
[-14.14197731 391.25790405]
[-2.21992040 380.85717773]
[2.81699586 366.72814941]
[7.85391188 352.59912109]
[4.83962250 338.01272583]
[16.76167870 327.61199951]
[7.93422794 311.57479858]
[13.73186970 293.87448120]
[30.91601753 285.89831543]
[35.53002548 271.62557983]
[40.14403534 257.35284424]
[44.75804520 243.08012390]
[49.37205505 228.80738831]
[45.92480850 214.31718445]
[57.53191376 203.56610107]
[54.08466721 189.07591248]
[65.69177246 178.32482910]
[60.46503448 167.41575623]
[64.19223022 155.48715210]
[75.39585876 149.09642029]
[80.22186279 134.89396667]
[85.04785919 120.69150543]
[89.87385559 106.48905182]
[94.48786163 92.21631622]
[91.14005280 76.75337219]
[102.27101135 66.85634613]
[106.67201233 52.51650238]
[111.07300568 38.17665482]
[115.47400665 23.83680725]
[119.87500763 9.49696064]
[118.70453644 4.41000700]
[119.52075958 -0.16023171]
[121.79415894 -3.54352999]
[124.80595398 -5.37694693]
[129.84288025 -19.50597572]
[134.87979126 -33.63500595]
[139.91670227 -47.76403427]
[144.95362854 -61.89306641]
[149.99053955 -76.02209473]
[149.05668640 -80.26259613]
[149.47837830 -84.18518829]
[150.98922729 -87.40275574]
[153.22448730 -89.65447235]
[155.77075195 -90.82693481]
[161.63970947 -104.63111115]
[167.50866699 -118.43528748]
[156.80187988 -127.08456421]
[148.71044922 -138.20314026]
[143.78208923 -151.02713013]
[142.34751892 -164.67759705]
[144.49821472 -178.22076416]
[150.08062744 -190.73196411]
[158.70715332 -201.35868835]
[169.78298950 -209.37870789]
[182.54718018 -214.24920654]
[196.12487793 -215.64343262]
[209.58732605 -213.47265625]
[208.33538818 -229.24424744]
[220.68881226 -237.56542969]
[226.96617126 -251.18875122]
[233.24354553 -264.81207275]
[239.52090454 -278.43539429]
[235.79469299 -290.78359985]
[241.30358887 -302.00125122]
[252.60476685 -306.31515503]
[259.08425903 -319.84350586]
[265.56375122 -333.37185669]
[272.04327393 -346.90020752]
[259.50250244 -355.17324829]
[248.20512390 -365.07693481]
[238.36157227 -376.42672729]
[230.15522766 -389.01123047]
[223.73896790 -402.59597778]
[219.23231506 -416.92788696]
[216.71925354 -431.73999023]
[216.24658203 -446.75634766]
[217.82308960 -461.69717407]
[221.41944885 -476.28414917]
[226.96862793 -490.24554443]
[234.36724854 -503.32122803]
[243.47749329 -515.26763916]
[254.12965393 -525.86224365]
[266.12527466 -534.90765381]
[279.24084473 -542.23535156]
[293.23211670 -547.70880127]
[307.83834839 -551.22607422]
[322.78750610 -552.72161865]
[337.80105591 -552.16760254]
[352.59933472 -549.57427979]
[366.90661621 -544.99005127]
[380.45642090 -538.50030518]
[392.99624634 -530.22589111]
[404.29257202 -520.32098389]
[414.13488770 -508.97012329]
[422.33987427 -496.38473511]
[428.75466919 -482.79931641]
[433.25976562 -468.46688843]
[435.77124023 -453.65454102]
[436.24227905 -438.63815308]
[434.66415405 -423.69747925]
[431.06622314 -409.11090088]
[425.51553345 -395.15011597]
[418.11547852 -382.07519531]
[409.00393677 -370.12976074]
[398.35064697 -359.53631592]
[386.35406494 -350.49221802]
[373.23767090 -343.16595459]
[359.24581909 -337.69403076]
[344.63919067 -334.17834473]
[329.68988037 -332.68438721]
[314.67639160 -333.24005127]
[299.87841797 -335.83493042]
[285.57159424 -340.42071533]
[279.09210205 -326.89236450]
[272.61260986 -313.36401367]
[266.13311768 -299.83566284]
[268.42266846 -282.43667603]
[253.14421082 -272.15802002]
[246.86685181 -258.53469849]
[240.58949280 -244.91139221]
[234.31213379 -231.28807068]
[236.01306152 -216.49090576]
[223.21064758 -207.19529724]
[235.36585999 -196.32933044]
[243.58218384 -182.22550964]
[247.04702759 -166.25584412]
[245.41062927 -149.97804260]
[238.82141113 -134.98347473]
[227.91255188 -122.74164581]
[213.74118042 -114.45613098]
[197.68594360 -110.94631958]
[181.31285095 -112.56632996]
[175.44387817 -98.76215363]
[169.57492065 -84.95797729]
[164.11956787 -70.98517609]
[159.08265686 -56.85614777]
[154.04573059 -42.72711945]
[149.00881958 -28.59808922]
[143.97190857 -14.46905994]
[138.93498230 -0.34003052]
[134.21485901 13.89795876]
[129.81385803 28.23780632]
[125.41285706 42.57765198]
[121.01185608 56.91749954]
[116.61086273 71.25734711]
[120.27346039 85.69461060]
[108.82771301 96.61731720]
[110.17238617 101.68740082]
[108.58065796 107.14997864]
[104.07630920 111.31504822]
[99.25031281 125.51750183]
[94.42431641 139.71995544]
[89.59832001 153.92240906]
[93.60332489 171.89576721]
[79.96450043 182.93884277]
[83.08172607 198.44992065]
[71.80464172 208.18011475]
[74.92186737 223.69119263]
[63.64478683 233.42138672]
[59.03077698 247.69412231]
[54.41676712 261.96685791]
[49.80276108 276.23959351]
[45.18875122 290.51232910]
[52.55849838 299.84097290]
[54.49026871 311.44998169]
[50.61826706 322.43640137]
[42.01351547 330.10934448]
[30.89070892 332.64889526]
[33.54472351 348.24591064]
[21.98294067 357.63604736]
[16.94602585 371.76507568]
[11.90910912 385.89410400]
[14.56312466 401.49111938]
[3.00134158 410.88122559]
[-2.03557467 425.01025391]
[-7.07249069 439.13928223]
[-12.10940742 453.26831055]
[-17.14632416 467.39733887]
[-4.32239866 475.28662109]
[6.58074760 485.67001343]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 208]
[27 207]
[28 206]
[29 205]
[30 204]
[32 202]
[33 201]
[34 200]
[36 198]
[39 193]
[40 192]
[41 191]
[42 190]
[43 189]
[45 187]
[47 185]
[50 183]
[51 182]
[52 181]
[53 180]
[54 177]
[56 175]
[57 174]
[58 173]
[59 172]
[60 171]
[64 170]
[65 169]
[66 168]
[67 167]
[68 166]
[69 165]
[74 164]
[75 163]
[76 162]
[87 153]
[89 151]
[90 150]
[91 149]
[92 148]
[95 146]
[96 145]
[97 144]
[98 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
