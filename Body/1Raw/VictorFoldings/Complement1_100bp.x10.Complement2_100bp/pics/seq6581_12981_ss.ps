%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[169.58053589 522.12384033]
[162.47998047 508.90264893]
[156.39965820 495.18234253]
[151.37442017 481.04147339]
[147.43302917 466.56103516]
[144.59806824 451.82400513]
[142.88577271 436.91476440]
[142.30595398 421.91870117]
[142.86193848 406.92178345]
[144.55055237 392.00982666]
[147.36209106 377.26831055]
[151.28047180 362.78161621]
[156.28323364 348.63278198]
[162.34175110 334.90283203]
[169.42129517 321.67037964]
[177.48132324 309.01126099]
[186.47566223 296.99798584]
[196.35279846 285.69931030]
[207.05615234 275.18002319]
[218.52441406 265.50033569]
[209.74382019 253.33889771]
[200.96321106 241.17744446]
[192.18261719 229.01597595]
[183.40200806 216.85452271]
[174.53111267 204.75877380]
[165.57041931 192.72940063]
[156.34332275 180.90312195]
[146.85441589 169.28585815]
[137.36552429 157.66859436]
[127.87662506 146.05133057]
[118.38772583 134.43406677]
[108.89882660 122.81681061]
[99.40992737 111.19954681]
[97.99230194 126.13240814]
[87.39632416 136.74961853]
[72.46633911 138.19714355]
[60.02811813 129.81318665]
[55.76826477 115.43077850]
[61.63431549 101.62536621]
[74.94439697 94.70859528]
[89.61489868 97.84370422]
[81.38608551 85.30229950]
[73.15727997 72.76090240]
[64.74266052 60.34340668]
[56.14409637 48.05257034]
[47.54553223 35.76173019]
[49.27986145 50.66113281]
[46.14677048 65.33027649]
[38.47690201 78.22109222]
[27.07967567 87.97317505]
[13.15786934 93.55738068]
[-1.81931555 94.38438416]
[-16.27130127 90.36691284]
[-28.67293549 81.92893219]
[-37.71544647 69.96092987]
[-42.44455338 55.72592163]
[-42.36117935 40.72615433]
[-37.47413254 26.54458809]
[-28.29914665 14.67784405]
[-15.80448151 6.37824392]
[-1.30873036 2.52166486]
[13.65833664 3.51510119]
[27.51720810 9.25371265]
[38.80544662 19.13204002]
[33.55873108 5.07956791]
[28.31201172 -8.97290325]
[23.06529236 -23.02537346]
[17.81857491 -37.07784653]
[12.57185650 -51.13031769]
[7.32513857 -65.18278503]
[2.07842064 -79.23526001]
[-12.58044910 -75.94416809]
[-27.55092812 -74.67984009]
[-42.55412674 -75.46584320]
[-57.31054306 -78.28753662]
[-71.54527283 -83.09233856]
[-84.99314117 -89.79075623]
[-97.40361023 -98.25798798]
[-108.54547882 -108.33629608]
[-118.21119690 -119.83793640]
[-126.22068787 -132.54862976]
[-132.42472839 -146.23159790]
[-136.70776367 -160.63192749]
[-138.98999023 -175.48133850]
[-139.22889709 -190.50321960]
[-137.42002869 -205.41769409]
[-133.59709167 -219.94694519]
[-127.83129120 -233.82026672]
[-120.23004150 -246.77923584]
[-110.93496704 -258.58242798]
[-100.11920929 -269.00994873]
[-87.98426819 -277.86755371]
[-74.75621796 -284.99020386]
[-60.68147278 -290.24523926]
[-46.02224731 -293.53475952]
[-31.05163193 -294.79745483]
[-16.04851913 -294.00982666]
[-1.29240716 -291.18652344]
[12.94180489 -286.38018799]
[26.38894272 -279.68032837]
[38.79849625 -271.21173096]
[49.93927765 -261.13223267]
[59.60374832 -249.62954712]
[67.61186218 -236.91796875]
[73.81443024 -223.23434448]
[78.09590912 -208.83355713]
[80.37652588 -193.98388672]
[80.61380768 -178.96199036]
[78.80332184 -164.04769897]
[74.97880554 -149.51887512]
[69.21150208 -135.64616394]
[61.60885620 -122.68801880]
[52.31250000 -110.88584137]
[41.49561691 -100.45948792]
[29.35971832 -91.60320282]
[16.13089180 -84.48197937]
[21.37760925 -70.42950439]
[26.62432861 -56.37703323]
[31.87104607 -42.32456207]
[37.11776352 -28.27209282]
[42.36448288 -14.21962166]
[47.61120224 -0.16715008]
[52.85791779 13.88532162]
[59.83637238 27.16316795]
[68.43493652 39.45400620]
[77.03350067 51.74484253]
[81.49708557 53.44349670]
[84.94097900 57.96418762]
[85.69867706 64.53209686]
[93.92749023 77.07349396]
[102.15629578 89.61489868]
[111.02719116 101.71064758]
[120.51609039 113.32791138]
[130.00498962 124.94517517]
[139.49388123 136.56243896]
[148.98278809 148.17970276]
[158.47167969 159.79696655]
[167.96058655 171.41423035]
[172.84222412 173.26263428]
[176.19177246 176.47727966]
[177.74534607 180.24575806]
[177.59979248 183.76870728]
[186.56048584 195.79808044]
[194.19664001 200.81076050]
[195.56346130 208.07392883]
[204.34407043 220.23538208]
[213.12466431 232.39683533]
[221.90527344 244.55828857]
[230.68588257 256.71975708]
[243.48260498 248.88003540]
[256.83560181 242.03057861]
[270.66836548 236.21061707]
[284.90167236 231.45349121]
[299.45401001 227.78643799]
[314.24197388 225.23045349]
[329.18090820 223.80021667]
[344.18524170 223.50387573]
[359.16897583 224.34315491]
[374.04635620 226.31324768]
[388.73211670 229.40284729]
[403.14215088 233.59428406]
[417.19393921 238.86352539]
[430.80697632 245.18040466]
[443.90325928 252.50874329]
[456.40780640 260.80654907]
[468.24899292 270.02630615]
[479.35897827 280.11517334]
[489.67413330 291.01541138]
[499.13537598 302.66455078]
[507.68850708 314.99584961]
[515.28454590 327.93872070]
[521.87994385 341.41900635]
[527.43695068 355.35949707]
[531.92376709 369.68029785]
[535.31463623 384.29946899]
[537.59014893 399.13317871]
[538.73730469 414.09652710]
[538.74951172 429.10375977]
[537.62664795 444.06893921]
[535.37524414 458.90634155]
[532.00817871 473.53097534]
[527.54461670 487.85906982]
[522.01031494 501.80856323]
[515.43682861 515.29956055]
[507.86181641 528.25476074]
[499.32876587 540.59997559]
[489.88647461 552.26446533]
[479.58905029 563.18145752]
[468.49548340 573.28839111]
[456.66928101 582.52734375]
[444.17825317 590.84545898]
[431.09387207 598.19506836]
[417.49114990 604.53405762]
[403.44793701 609.82617188]
[389.04473877 614.04101562]
[374.36401367 617.15447998]
[359.48986816 619.14874268]
[344.50747681 620.01239014]
[329.50271606 619.74041748]
[314.56146240 618.33447266]
[299.76934814 615.80255127]
[285.21109009 612.15917969]
[270.97006226 607.42517090]
[257.12786865 601.62768555]
[243.76374817 594.79992676]
[230.95429993 586.98107910]
[218.77285767 578.21575928]
[207.28923035 568.55432129]
[196.56916809 558.05206299]
[186.67408752 546.76910400]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 149]
[21 148]
[22 147]
[23 146]
[24 145]
[25 143]
[26 142]
[27 138]
[28 137]
[29 136]
[30 135]
[31 134]
[32 133]
[33 132]
[41 131]
[42 130]
[43 129]
[44 126]
[45 125]
[46 124]
[64 123]
[65 122]
[66 121]
[67 120]
[68 119]
[69 118]
[70 117]
[71 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
