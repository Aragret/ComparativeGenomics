%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUGxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[108.14214325 409.35189819]
[99.67992401 421.76849365]
[89.53671265 432.85433960]
[77.91900635 442.38375854]
[65.06333160 450.16271973]
[51.23141479 456.03289795]
[36.70485306 459.87472534]
[21.77939034 461.61004639]
[6.75888824 461.20349121]
[-8.05085373 458.66336060]
[-22.34832954 454.04135132]
[-35.84246063 447.43157959]
[-48.25852203 438.96856689]
[-59.34374237 428.82467651]
[-68.87243652 417.20639038]
[-76.65061188 404.35021973]
[-82.51992035 390.51794434]
[-86.36087036 375.99114990]
[-88.09525299 361.06558228]
[-87.68777466 346.04510498]
[-85.14672089 331.23553467]
[-80.52382660 316.93832397]
[-73.91321564 303.44461060]
[-65.44945526 291.02908325]
[-55.30487061 279.94448853]
[-43.68598938 270.41650391]
[-30.82935333 262.63912964]
[-16.99670982 256.77066040]
[-2.46967220 252.93061829]
[12.45600605 251.19715881]
[27.47645760 251.60557556]
[42.28588486 254.14753723]
[46.89989471 239.87480164]
[51.51390457 225.60206604]
[56.12791443 211.32934570]
[60.74192047 197.05661011]
[65.35593414 182.78387451]
[69.96994019 168.51113892]
[74.58395386 154.23840332]
[79.19795990 139.96566772]
[83.81196594 125.69293976]
[88.42597961 111.42020416]
[83.75758362 100.75027466]
[87.42245483 89.69541931]
[97.54031372 83.92738342]
[102.36631012 69.72492981]
[88.38890839 64.27458954]
[74.66628265 58.21131134]
[61.22527695 51.54697418]
[48.09222031 44.29461670]
[35.29280853 36.46843719]
[22.85210800 28.08375931]
[10.79446507 19.15699196]
[-0.85651475 9.70561123]
[-12.07802391 -0.25188133]
[-22.84809685 -10.69599247]
[-33.14564896 -21.60627937]
[-42.95052338 -32.96138000]
[-52.24352646 -44.73907471]
[-61.00646591 -56.91629791]
[-69.22219086 -69.46922302]
[-76.87461090 -82.37326050]
[-83.94875336 -95.60317230]
[-90.43077087 -109.13304138]
[-96.30796814 -122.93639374]
[-101.56884766 -136.98619080]
[-106.20310211 -151.25495911]
[-110.20166779 -165.71475220]
[-113.55671692 -180.33724976]
[-116.26167297 -195.09384155]
[-118.31125641 -209.95564270]
[-119.70143890 -224.89355469]
[-120.42950439 -239.87834167]
[-120.49403381 -254.88067627]
[-119.89489746 -269.87115479]
[-118.63326263 -284.82049561]
[-116.71160126 -299.69937134]
[-114.13368225 -314.47869873]
[-110.90454865 -329.12951660]
[-107.03051758 -343.62316895]
[-102.51917267 -357.93127441]
[-97.37934875 -372.02581787]
[-91.62110901 -385.87921143]
[-85.25571442 -399.46432495]
[-78.29563904 -412.75460815]
[-70.75450897 -425.72399902]
[-62.64706802 -438.34713745]
[-53.98920441 -450.59927368]
[-44.79785919 -462.45648193]
[-35.09102631 -473.89550781]
[-24.88770866 -484.89395142]
[-14.20787716 -495.43032837]
[-3.07243943 -505.48397827]
[8.49680710 -515.03521729]
[20.47721291 -524.06542969]
[32.84532928 -532.55676270]
[45.57694244 -540.49279785]
[58.64712906 -547.85784912]
[72.03030396 -554.63757324]
[85.70027161 -560.81866455]
[99.63027191 -566.38903809]
[113.79302979 -571.33776855]
[128.16082764 -575.65521240]
[142.70553589 -579.33288574]
[157.39868164 -582.36364746]
[172.21151733 -584.74145508]
[187.11502075 -586.46173096]
[202.08003235 -587.52105713]
[217.07727051 -587.91741943]
[232.07734680 -587.65002441]
[247.05091858 -586.71942139]
[261.96865845 -585.12731934]
[276.80139160 -582.87695312]
[291.52005005 -579.97271729]
[306.09585571 -576.42022705]
[320.50024414 -572.22650146]
[334.70504761 -567.39971924]
[348.68240356 -561.94934082]
[362.40502930 -555.88598633]
[375.84600830 -549.22161865]
[388.97903442 -541.96917725]
[401.77841187 -534.14294434]
[414.21908569 -525.75823975]
[426.27670288 -516.83142090]
[437.92764282 -507.38000488]
[449.14910889 -497.42248535]
[459.91915894 -486.97833252]
[470.21667480 -476.06799316]
[480.02148438 -464.71286011]
[489.31445312 -452.93515015]
[498.07736206 -440.75787354]
[506.29302979 -428.20492554]
[513.94543457 -415.30087280]
[521.01953125 -402.07092285]
[527.50146484 -388.54104614]
[533.37860107 -374.73767090]
[538.63946533 -360.68783569]
[543.27362061 -346.41906738]
[547.27215576 -331.95925903]
[550.62713623 -317.33673096]
[553.33209229 -302.58013916]
[555.38159180 -287.71832275]
[556.77172852 -272.78039551]
[557.49975586 -257.79562378]
[557.56420898 -242.79328918]
[556.96502686 -227.80279541]
[555.70330811 -212.85348511]
[553.78161621 -197.97460938]
[551.20361328 -183.19529724]
[547.97442627 -168.54447937]
[544.10034180 -154.05085754]
[539.58898926 -139.74276733]
[534.44909668 -125.64824677]
[528.69079590 -111.79486847]
[522.32537842 -98.20976257]
[515.36523438 -84.91951752]
[507.82406616 -71.95014954]
[499.71658325 -59.32705307]
[491.05865479 -47.07492828]
[481.86727905 -35.21776581]
[472.16040039 -23.77877426]
[461.95703125 -12.78034782]
[451.27716064 -2.24401474]
[440.14169312 7.80959845]
[428.57241821 17.36081123]
[416.59197998 26.39092636]
[404.22381592 34.88226700]
[391.49218750 42.81821442]
[378.42196655 50.18322754]
[365.03878784 56.96289444]
[351.36877441 63.14393997]
[337.43878174 68.71426392]
[323.27600098 73.66296387]
[308.90817261 77.98035431]
[294.36346436 81.65798187]
[279.67028809 84.68865204]
[264.85745239 87.06642151]
[249.95393372 88.78663635]
[234.98892212 89.84593964]
[219.99168396 90.24225616]
[204.99160767 89.97480011]
[190.01805115 89.04410553]
[175.10029602 87.45198822]
[160.26757812 85.20156860]
[145.54891968 82.29724884]
[130.97314453 78.74472046]
[116.56876373 74.55092621]
[111.74276733 88.75337982]
[115.43373108 105.11654663]
[102.69870758 116.03421021]
[98.08470154 130.30694580]
[93.47069550 144.57968140]
[88.85668182 158.85241699]
[84.24267578 173.12515259]
[79.62866211 187.39788818]
[75.01465607 201.67060852]
[70.40065002 215.94334412]
[65.78663635 230.21607971]
[61.17262650 244.48881531]
[56.55862045 258.76153564]
[70.05356598 265.36965942]
[82.47068024 273.83111572]
[93.55715179 283.97363281]
[103.08728027 295.59075928]
[110.86705017 308.44595337]
[116.73807526 322.27749634]
[120.58081818 336.80383301]
[122.31705475 351.72918701]
[121.91143036 366.74969482]
[119.37220764 381.55960083]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 200]
[33 199]
[34 198]
[35 197]
[36 196]
[37 195]
[38 194]
[39 193]
[40 192]
[41 191]
[42 190]
[45 188]
[46 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
