%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxGGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[114.60067749 843.34448242]
[100.33525085 838.62817383]
[86.86508179 831.97229004]
[74.45236206 823.50646973]
[63.33871460 813.39544678]
[53.74046707 801.83599854]
[45.84445190 789.05322266]
[39.80437088 775.29595947]
[35.73778915 760.83190918]
[33.72386932 745.94262695]
[33.80181122 730.91796875]
[35.97010040 716.05041504]
[40.18652344 701.62933350]
[46.36901474 687.93542480]
[54.39722443 675.23522949]
[64.11488342 663.77606201]
[75.33283234 653.78088379]
[87.83271790 645.44427490]
[101.37121582 638.92846680]
[115.68480682 634.36041260]
[130.49485779 631.82891846]
[130.04824829 616.83557129]
[129.60165405 601.84222412]
[129.15504456 586.84887695]
[128.70843506 571.85552979]
[128.15022278 556.86590576]
[127.48043823 541.88085938]
[119.18255615 529.51177979]
[126.29592896 515.37988281]
[125.62614441 500.39486694]
[124.95635986 485.40982056]
[124.28657532 470.42477417]
[123.61678314 455.43972778]
[122.94699860 440.45471191]
[122.27721405 425.46966553]
[121.60742950 410.48461914]
[120.93764496 395.49957275]
[120.26786041 380.51455688]
[119.59807587 365.52951050]
[118.92829132 350.54446411]
[118.25850677 335.55941772]
[117.14286041 320.60098267]
[115.58233643 305.68237305]
[114.02181244 290.76376343]
[112.46128845 275.84515381]
[97.10826111 274.08193970]
[82.52312469 268.95223999]
[69.43471527 260.70913696]
[58.49778366 249.76133728]
[50.26028061 236.65293884]
[45.13587189 222.03640747]
[43.38318253 206.64010620]
[45.09275055 191.23193359]
[50.18233490 176.58113098]
[58.40089798 163.41975403]
[69.34095001 152.40621948]
[82.45877075 144.09228516]
[97.10144806 138.89540100]
[95.31897736 124.00168610]
[93.53651428 109.10797119]
[91.64321899 94.22793579]
[89.63920593 79.36240387]
[87.63519287 64.49687958]
[78.12354279 51.85413361]
[84.09110260 38.20724869]
[74.32595825 29.78081703]
[72.96284485 17.35802841]
[80.19035339 7.65804338]
[78.40789032 -7.23567390]
[76.62541962 -22.12939072]
[74.84295654 -37.02310944]
[71.62968445 -51.67489624]
[67.01567078 -65.94763184]
[62.40166473 -80.22035980]
[57.78765488 -94.49309540]
[54.51217270 -79.85508728]
[45.94727325 -67.54077148]
[33.36351395 -59.37688828]
[18.62761497 -56.57450867]
[3.92556405 -59.54935074]
[-8.56167984 -67.86010742]
[-16.98170662 -80.27394104]
[-20.08545685 -94.94931793]
[-17.41250610 -109.70924377]
[-9.35937309 -122.36416626]
[2.87931061 -131.03680420]
[17.48800659 -134.44061279]
[32.29960251 -132.07067871]
[45.11688995 -124.27855682]
[54.03767395 -112.22188568]
[52.47714996 -127.14048767]
[50.91662598 -142.05909729]
[36.08404922 -144.97218323]
[22.76988029 -152.12928772]
[12.15800095 -162.89402771]
[5.19201612 -176.30918884]
[2.49133492 -191.18190002]
[4.29610109 -206.18971252]
[10.44583511 -219.99812317]
[20.39370728 -231.37928772]
[33.25516129 -239.32124329]
[47.88656235 -243.11775208]
[62.98689651 -242.43124390]
[77.21345520 -237.32278442]
[89.30121613 -228.24658203]
[98.17535400 -216.00970459]
[103.04678345 -201.70025635]
[103.48233032 -186.59059143]
[99.44327545 -172.02427673]
[91.28876495 -159.29653931]
[79.74389648 -149.53910828]
[65.83523560 -143.61961365]
[67.39575195 -128.70101929]
[68.95627594 -113.78240967]
[72.06038666 -99.10710144]
[76.67440033 -84.83437347]
[81.28840637 -70.56163788]
[85.90242004 -56.28890610]
[89.44274902 -70.86511993]
[98.54104614 -82.79076385]
[111.66408539 -90.05615997]
[126.60039520 -91.43695831]
[140.83294678 -86.70046997]
[151.96331787 -76.64487457]
[158.11582947 -62.96472168]
[158.25369263 -47.96535492]
[152.35365295 -34.17443085]
[141.40998840 -23.91596222]
[127.26689148 -18.91868210]
[112.30772400 -20.02471924]
[99.05336761 -27.04768562]
[89.73667145 -38.80557251]
[91.51914215 -23.91185760]
[93.30160522 -9.01813984]
[95.08406830 5.87557745]
[106.34404755 19.33588219]
[98.95662689 36.20323563]
[108.32494354 47.78269958]
[102.50072479 62.49286652]
[104.50473785 77.35839081]
[106.50875092 92.22392273]
[110.62101746 99.15657806]
[108.43022919 107.32550812]
[110.21269226 122.21922302]
[111.99516296 137.11294556]
[126.50746155 138.50849915]
[140.40428162 142.89665222]
[153.07586670 150.08216858]
[163.96675110 159.74719238]
[172.60012817 171.46520996]
[178.59877014 184.71989441]
[181.70143127 198.92790222]
[181.77427673 213.46447754]
[178.81663513 227.69096375]
[172.96092224 240.98289490]
[164.46670532 252.75729370]
[153.70924377 262.49838257]
[141.16281128 269.78005981]
[127.37989044 274.28463745]
[128.94041443 289.20324707]
[130.50094604 304.12185669]
[132.06146240 319.04046631]
[134.73545837 322.46151733]
[136.04956055 326.18142700]
[136.07681274 329.73596191]
[135.03352356 332.73229980]
[133.24354553 334.88964844]
[133.91333008 349.87469482]
[134.58311462 364.85971069]
[135.25289917 379.84475708]
[135.92268372 394.82980347]
[136.59246826 409.81484985]
[137.26225281 424.79986572]
[137.93203735 439.78491211]
[138.60182190 454.76995850]
[139.27160645 469.75500488]
[139.94139099 484.74002075]
[140.61117554 499.72506714]
[141.28096008 514.71008301]
[149.62675476 528.15100098]
[142.46548462 541.21112061]
[143.13526917 556.19610596]
[146.64474487 564.62945557]
[143.70178223 571.40893555]
[144.14839172 586.40228271]
[144.59500122 601.39562988]
[145.04161072 616.38897705]
[145.48820496 631.38232422]
[160.42268372 633.02783203]
[174.98278809 636.73583984]
[188.88511658 642.43420410]
[201.85903931 650.01202393]
[213.65202332 659.32177734]
[224.03451538 670.18225098]
[232.80442810 682.38208008]
[239.79103088 695.68371582]
[244.85833740 709.82824707]
[247.90771484 724.54040527]
[248.87979126 739.53375244]
[247.75567627 754.51654053]
[244.55722046 769.19696045]
[239.34669495 783.28942871]
[232.22552490 796.51947021]
[223.33232117 808.62969971]
[212.84019470 819.38427734]
[200.95338440 828.57397461]
[187.90325928 836.01977539]
[173.94384766 841.57684326]
[159.34687805 845.13702393]
[144.39648438 846.63092041]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 188]
[22 187]
[23 186]
[24 185]
[25 184]
[26 182]
[27 181]
[29 179]
[30 178]
[31 177]
[32 176]
[33 175]
[34 174]
[35 173]
[36 172]
[37 171]
[38 170]
[39 169]
[40 168]
[41 167]
[42 162]
[43 161]
[44 160]
[45 159]
[58 145]
[59 144]
[60 143]
[61 141]
[62 140]
[63 139]
[65 137]
[68 135]
[69 134]
[70 133]
[71 132]
[72 118]
[73 117]
[74 116]
[75 115]
[90 114]
[91 113]
[92 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
