%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[9.93024445 447.63186646]
[10.22263145 462.64834595]
[8.66740704 477.58691406]
[5.28815079 492.22113037]
[0.13608937 506.32913208]
[-6.71067238 519.69708252]
[-15.14833927 532.12225342]
[-25.04899979 543.41632080]
[-36.26255798 553.40814209]
[-48.61902618 561.94610596]
[-61.93107986 568.90087891]
[-75.99691010 574.16699219]
[-90.60328674 577.66467285]
[-105.52877045 579.34075928]
[-120.54711151 579.16998291]
[-135.43061829 577.15484619]
[-149.95367432 573.32598877]
[-163.89610291 567.74133301]
[-177.04655457 560.48559570]
[-189.20565796 551.66882324]
[-200.18908691 541.42462158]
[-209.83033752 529.90826416]
[-217.98326111 517.29443359]
[-224.52424622 503.77423096]
[-229.35414124 489.55270386]
[-232.39971924 474.84542847]
[-233.61480713 459.87536621]
[-232.98100281 444.86944580]
[-230.50790405 430.05514526]
[-226.23298645 415.65704346]
[-220.22108459 401.89346313]
[-212.56332397 388.97299194]
[-203.37579346 377.09155273]
[-192.79777527 366.42922974]
[-180.98962402 357.14767456]
[-168.13037109 349.38757324]
[-154.41491699 343.26660156]
[-140.05122375 338.87753296]
[-125.25703430 336.28692627]
[-110.25660706 335.53399658]
[-95.27735901 336.63021851]
[-80.54636383 339.55895996]
[-66.28694916 344.27581787]
[-52.71527481 350.70925903]
[-44.67410278 338.04672241]
[-36.63292694 325.38421631]
[-28.59175491 312.72167969]
[-20.55058289 300.05914307]
[-19.61849976 292.72750854]
[-12.29424191 287.26919556]
[-4.06543446 274.72781372]
[3.59516311 261.83148193]
[10.67226887 248.60595703]
[17.74937439 235.38043213]
[24.82647896 222.15490723]
[31.90358543 208.92936707]
[38.98069000 195.70384216]
[46.05779648 182.47831726]
[53.13490295 169.25279236]
[53.51910019 161.87213135]
[60.41710281 155.88418579]
[67.69033051 142.76550293]
[74.96356201 129.64680481]
[82.23678589 116.52810669]
[89.51001740 103.40941620]
[74.59144592 104.97023010]
[63.96125793 94.38726807]
[65.45563507 79.46189117]
[77.97297668 71.19653320]
[92.28596497 75.68411255]
[97.84370422 89.61489868]
[106.07250977 77.07349396]
[114.30132294 64.53209686]
[122.53012848 51.99069595]
[113.10911560 40.17113495]
[107.80985260 26.03747559]
[107.13951874 10.97829247]
[111.15120697 -3.53106570]
[119.43988800 -16.07300568]
[131.18334961 -25.42619133]
[145.22366333 -30.68448257]
[160.18141174 -31.34470177]
[174.59118652 -27.35476303]
[182.81999207 -39.89616394]
[191.04879761 -52.43756485]
[199.27760315 -64.97896576]
[205.95779419 -78.40933990]
[210.99472046 -92.53836823]
[216.03163147 -106.66739655]
[221.06854248 -120.79643250]
[226.10546875 -134.92546082]
[225.29188538 -141.48667908]
[227.57173157 -146.69238281]
[231.50842285 -149.39637756]
[236.96377563 -163.36917114]
[242.41912842 -177.34196472]
[247.87448120 -191.31475830]
[234.82029724 -198.75828552]
[222.98905945 -208.02325439]
[212.63296509 -218.91220093]
[203.97276306 -231.19302368]
[197.19302368 -244.60395813]
[192.43826294 -258.85913086]
[189.80982971 -273.65472412]
[189.36376953 -288.67532349]
[191.10955811 -303.60083008]
[195.01000977 -318.11303711]
[200.98197937 -331.90264893]
[208.89816284 -344.67575073]
[218.58984375 -356.16003418]
[229.85041809 -366.11077881]
[242.43989563 -374.31582642]
[256.08990479 -380.60034180]
[270.50952148 -384.83032227]
[285.39138794 -386.91561890]
[300.41824341 -386.81176758]
[315.26986694 -384.52102661]
[329.62963867 -380.09219360]
[343.19149780 -373.61965942]
[355.66638184 -365.24142456]
[366.78839111 -355.13601685]
[376.32043457 -343.51889038]
[384.05935669 -330.63760376]
[389.84020996 -316.76678467]
[393.53973389 -302.20205688]
[395.07910156 -287.25387573]
[394.42550659 -272.24084473]
[391.59286499 -257.48300171]
[386.64157104 -243.29489136]
[379.67715454 -229.97894287]
[370.84808350 -217.81896973]
[360.34249878 -207.07417297]
[348.38433838 -197.97357178]
[335.22854614 -190.71116638]
[321.15548706 -185.44172668]
[306.46514893 -182.27758789]
[291.47064209 -181.28620911]
[276.49160767 -182.48867798]
[261.84729004 -185.85940552]
[256.39193726 -171.88661194]
[250.93656921 -157.91381836]
[245.48121643 -143.94100952]
[240.23449707 -129.88854980]
[235.19758606 -115.75951385]
[230.16065979 -101.63048553]
[225.12374878 -87.50145721]
[220.08683777 -73.37242126]
[231.33142090 -83.30013275]
[245.26789856 -88.84760284]
[260.25903320 -89.36312866]
[274.54367065 -84.78614044]
[286.44369507 -75.65435028]
[294.56106567 -63.04053879]
[297.94219971 -48.42657471]
[296.18984985 -33.52928162]
[289.50988770 -20.09878731]
[278.68710327 -9.71288776]
[264.99288940 -3.59170938]
[250.03607178 -2.45436263]
[235.57374573 -6.43446159]
[223.30493164 -15.06442833]
[214.67097473 -27.33042145]
[210.68615723 -41.79144669]
[211.81900024 -56.75015640]
[203.59019470 -44.20875549]
[195.36138916 -31.66735649]
[187.13258362 -19.12595558]
[196.52929688 -7.49570894]
[201.87840271 6.48847103]
[202.64427185 21.46156693]
[198.73933411 35.95785522]
[190.53387451 48.55440140]
[178.82092285 58.01071548]
[164.73965454 63.39091873]
[149.66462708 64.15635681]
[135.07153320 60.21950150]
[126.84272003 72.76090240]
[118.61391449 85.30229950]
[110.38510132 97.84370422]
[102.62871552 110.68264771]
[95.35548401 123.80133820]
[88.08225250 136.92002869]
[80.80902100 150.03872681]
[73.53579712 163.15742493]
[66.36042786 176.32989502]
[59.28332520 189.55541992]
[52.20621872 202.78094482]
[45.12911224 216.00648499]
[38.05200577 229.23200989]
[30.97490120 242.45753479]
[23.89779663 255.68305969]
[16.82069016 268.90859985]
[31.45327377 265.60897827]
[44.20639038 273.50567627]
[47.77447891 288.07513428]
[40.11357117 300.97125244]
[25.61218643 304.80661011]
[12.57737637 297.38409424]
[8.47596645 282.95660400]
[0.24715820 295.49801636]
[-7.88805771 308.10034180]
[-15.92923069 320.76284790]
[-23.97040367 333.42538452]
[-32.01157761 346.08789062]
[-40.05274963 358.75042725]
[-28.45873451 368.29812622]
[-18.12593079 379.19824219]
[-9.21097851 391.28555298]
[-1.84902883 404.37683105]
[3.84831452 418.27359009]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 205]
[45 204]
[46 203]
[47 202]
[48 201]
[50 200]
[51 199]
[52 192]
[53 191]
[54 190]
[55 189]
[56 188]
[57 187]
[58 186]
[59 185]
[61 184]
[62 183]
[63 182]
[64 181]
[65 180]
[71 179]
[72 178]
[73 177]
[74 176]
[83 167]
[84 166]
[85 165]
[86 164]
[87 147]
[88 146]
[89 145]
[90 144]
[91 143]
[94 142]
[95 141]
[96 140]
[97 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
