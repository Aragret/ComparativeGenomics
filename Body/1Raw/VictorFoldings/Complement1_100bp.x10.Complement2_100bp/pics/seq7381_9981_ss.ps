%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[121.26171112 657.94354248]
[108.35647583 650.28613281]
[96.01028442 641.75665283]
[84.28197479 632.39569092]
[73.22743988 622.24792480]
[62.89934921 611.36163330]
[53.34693146 599.78869629]
[44.61570740 587.58435059]
[36.74728394 574.80670166]
[29.77915573 561.51666260]
[23.74453354 547.77752686]
[18.67217255 533.65478516]
[14.58624554 519.21569824]
[11.50622559 504.52917480]
[9.44678974 489.66516113]
[8.41775131 474.69445801]
[8.42401505 459.68844604]
[9.46555138 444.71859741]
[11.53739548 429.85629272]
[14.62967491 415.17236328]
[18.72765350 400.73672485]
[23.81180382 386.61822510]
[29.85789490 372.88412476]
[36.83711243 359.59988403]
[44.71620178 346.82879639]
[53.45761490 334.63174438]
[63.01969147 323.06680298]
[73.35686493 312.18914795]
[84.41986847 302.05056763]
[96.15599060 292.69943237]
[108.50930023 284.18023682]
[121.42092133 276.53363037]
[134.82933044 269.79602051]
[148.67062378 263.99954224]
[143.84461975 249.79708862]
[139.01863098 235.59463501]
[127.59793091 226.03341675]
[130.48387146 210.47764587]
[125.65787506 196.27519226]
[120.83187103 182.07273865]
[116.00587463 167.87028503]
[102.20415497 157.03149414]
[105.94111633 139.00050354]
[94.37933350 129.61038208]
[97.03335571 114.01336670]
[86.50777435 104.80989838]
[88.83761597 91.02355194]
[83.80070496 76.89452362]
[78.76378632 62.76549149]
[72.99774933 48.91800690]
[66.51825714 35.38965988]
[60.03876114 21.86131477]
[58.15272522 36.74227142]
[50.06965256 49.37808990]
[37.35025024 57.32899094]
[22.45043755 59.05978012]
[8.24713802 54.23626709]
[-2.51721644 43.78979874]
[-7.76419735 29.73742676]
[-6.48069429 14.79244041]
[1.08546793 1.84048367]
[13.47338200 -6.61762381]
[28.29113579 -8.94875336]
[42.67765427 -4.70280170]
[53.85586548 5.30144453]
[49.88376617 -9.16307926]
[45.91167068 -23.62760353]
[41.93957520 -38.09212875]
[37.96747971 -52.55665207]
[33.99538422 -67.02117157]
[30.02328682 -81.48570251]
[26.05119133 -95.95022583]
[14.93572521 -107.20886230]
[19.02655411 -121.53067780]
[15.05445671 -135.99520874]
[11.08236122 -150.45973206]
[3.73950744 -137.37988281]
[-10.24808311 -131.96255493]
[-24.48547173 -136.68450928]
[-32.46351624 -149.38690186]
[-30.53476524 -164.26237488]
[-19.58101273 -174.51007080]
[-4.61017036 -175.44488525]
[7.53433990 -166.63787842]
[5.08861256 -181.43714905]
[2.64288521 -196.23641968]
[0.19715782 -211.03569031]
[-2.24856949 -225.83496094]
[-17.27310753 -227.14419556]
[-31.49975777 -232.14952087]
[-44.03421783 -240.53630066]
[-54.08856583 -251.77732849]
[-61.03077316 -265.16601562]
[-64.42445374 -279.86068726]
[-64.05626678 -294.93768311]
[-59.94936371 -309.44918823]
[-52.36190796 -322.48303223]
[-41.77085114 -333.21990967]
[-28.84195709 -340.98486328]
[-14.38794804 -345.28979492]
[0.68258584 -345.86410522]
[15.42229843 -342.67166138]
[28.90463829 -335.91314697]
[40.28209686 -326.01342773]
[48.83947372 -313.59481812]
[54.03884506 -299.43792725]
[55.55337906 -284.43270874]
[53.28786469 -269.52236938]
[47.38471603 -255.64419556]
[38.21501160 -243.67057800]
[26.35516739 -234.35420227]
[12.55070114 -228.28070068]
[14.99642849 -213.48143005]
[17.44215584 -198.68215942]
[19.88788414 -183.88288879]
[22.33361053 -169.08361816]
[25.54688454 -154.43182373]
[29.51898003 -139.96730042]
[33.49107742 -125.50277710]
[44.32242966 -115.27873230]
[40.51571274 -99.92231750]
[44.48781204 -85.45779419]
[48.45990753 -70.99327087]
[52.43200302 -56.52874756]
[56.40409851 -42.06422424]
[60.37619400 -27.59969902]
[64.34828949 -13.13517570]
[68.32038879 1.32934833]
[73.56710815 15.38181973]
[80.04660034 28.91016579]
[86.52610016 42.43851089]
[91.42751312 28.26190567]
[104.22967529 20.44495773]
[119.07960510 22.56146812]
[129.18811035 33.64379501]
[129.93373108 48.62525558]
[120.97556305 60.65651703]
[106.40917969 64.23706055]
[92.89281464 57.72857666]
[97.92973328 71.85760498]
[102.96664429 85.98663330]
[113.49222565 95.19010162]
[111.16238403 108.97644806]
[123.08444214 119.37717438]
[120.07015228 133.96359253]
[131.36769104 140.18681335]
[135.27206421 152.05860901]
[130.20832825 163.04428101]
[135.03433228 177.24673462]
[139.86032104 191.44918823]
[144.68632507 205.65165710]
[156.45220947 216.22872925]
[153.22108459 230.76864624]
[158.04708862 244.97109985]
[162.87307739 259.17355347]
[177.38041687 255.33715820]
[192.11785889 252.51078796]
[207.01518250 250.70791626]
[222.00140381 249.93711853]
[237.00508118 250.20208740]
[251.95472717 251.50155640]
[266.77911377 253.82931519]
[281.40756226 257.17428589]
[295.77038574 261.52050781]
[309.79916382 266.84732056]
[323.42697144 273.12927246]
[336.58892822 280.33648682]
[349.22229004 288.43457031]
[361.26681519 297.38497925]
[372.66519165 307.14498901]
[383.36300659 317.66815186]
[393.30935669 328.90432739]
[402.45678711 340.79989624]
[410.76171875 353.29824829]
[418.18460083 366.33978271]
[424.69006348 379.86233521]
[430.24703979 393.80151367]
[434.82913208 408.09085083]
[438.41442871 422.66229248]
[440.98590088 437.44631958]
[442.53125000 452.37255859]
[443.04315186 467.36984253]
[442.51916504 482.36672974]
[440.96173096 497.29171753]
[438.37835693 512.07366943]
[434.78128052 526.64221191]
[430.18768311 540.92785645]
[424.61941528 554.86254883]
[418.10308838 568.37982178]
[410.66967773 581.41534424]
[402.35464478 593.90698242]
[393.19760132 605.79522705]
[383.24221802 617.02331543]
[372.53588867 627.53784180]
[361.12966919 637.28869629]
[349.07788086 646.22937012]
[336.43798828 654.31726074]
[323.27023315 661.51379395]
[309.63735962 667.78479004]
[295.60430908 673.10028076]
[281.23797607 677.43487549]
[266.60681152 680.76806641]
[251.78056335 683.08386230]
[236.82986450 684.37127686]
[221.82597351 684.62408447]
[206.84039307 683.84124756]
[191.94451904 682.02630615]
[177.20936584 679.18804932]
[162.70513916 675.33996582]
[148.50094604 670.50036621]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 155]
[35 154]
[36 153]
[38 151]
[39 150]
[40 149]
[41 148]
[43 145]
[45 143]
[47 141]
[48 140]
[49 139]
[50 131]
[51 130]
[52 129]
[65 128]
[66 127]
[67 126]
[68 125]
[69 124]
[70 123]
[71 122]
[72 121]
[74 119]
[75 118]
[76 117]
[84 116]
[85 115]
[86 114]
[87 113]
[88 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
