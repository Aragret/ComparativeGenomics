%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[164.60722351 715.90582275]
[157.57720947 702.63568115]
[152.13534546 688.63922119]
[148.35519409 674.10552979]
[146.28790283 659.23132324]
[145.96141052 644.21765137]
[147.38014221 629.26763916]
[150.52491760 614.58337402]
[155.35319519 600.36352539]
[161.79969788 586.80035400]
[169.77720642 574.07733154]
[179.17787170 562.36645508]
[189.87454224 551.82617188]
[201.72256470 542.59899902]
[214.56170654 534.80969238]
[228.21832275 528.56365967]
[223.60432434 514.29089355]
[218.99031067 500.01818848]
[214.37629700 485.74545288]
[209.76229858 471.47271729]
[205.14828491 457.19998169]
[200.53427124 442.92724609]
[195.92025757 428.65451050]
[191.30625916 414.38177490]
[186.69224548 400.10903931]
[182.07823181 385.83630371]
[177.46423340 371.56356812]
[166.84069824 365.77850342]
[162.87988281 353.92541504]
[168.22241211 342.18572998]
[163.82141113 327.84588623]
[160.09674072 324.85656738]
[158.21038818 319.49572754]
[159.50971985 313.01318359]
[155.53762817 298.54867554]
[151.56553650 284.08413696]
[147.59342957 269.61962891]
[143.62133789 255.15509033]
[139.32720947 240.78288269]
[134.71321106 226.51014709]
[130.09919739 212.23741150]
[125.37906647 197.99943542]
[120.55306244 183.79696655]
[115.72706604 169.59451294]
[104.30637360 160.03329468]
[107.19230652 144.47752380]
[102.36631012 130.27507019]
[97.54031372 116.07261658]
[84.64415741 105.34576416]
[88.09108734 88.92945862]
[83.05416870 74.80043030]
[71.13211060 64.39970398]
[74.14640045 49.81329346]
[69.10948944 35.68426514]
[64.07257080 21.55523491]
[59.03565598 7.42620564]
[53.78893661 -6.62626553]
[48.33358002 -20.59906387]
[42.87822342 -34.57186127]
[37.96367645 -38.99439240]
[36.27399063 -44.42044067]
[37.47527313 -49.04277420]
[32.43835449 -63.17180252]
[26.60898781 -70.20431519]
[27.43333626 -77.54885864]
[22.60733986 -91.75131226]
[5.30634356 -99.47075653]
[-0.75418681 -117.08277130]
[7.83351612 -133.24961853]
[-4.24207067 -143.47169495]
[-1.44528532 -158.10136414]
[-6.69200373 -172.15383911]
[-11.93872166 -186.20629883]
[-26.64374733 -183.10472107]
[-41.64680481 -182.22953796]
[-56.61272049 -183.60032654]
[-71.20714569 -187.18646240]
[-85.10404205 -192.90782166]
[-97.99294281 -200.63659668]
[-109.58590698 -210.20010376]
[-119.62394714 -221.38471985]
[-127.88280487 -233.94055176]
[-134.17797852 -247.58709717]
[-138.36882019 -262.01950073]
[-140.36172485 -276.91534424]
[-140.11215210 -291.94183350]
[-137.62567139 -306.76327515]
[-132.95787048 -321.04855347]
[-126.21298218 -334.47854614]
[-117.54172516 -346.75317383]
[-107.13779449 -357.59826660]
[-95.23363495 -366.77151489]
[-82.09518433 -374.06802368]
[-68.01595306 -379.32470703]
[-53.31048584 -382.42422485]
[-38.30730438 -383.29724121]
[-23.34158516 -381.92431641]
[-8.74766827 -378.33612061]
[5.14841223 -372.61279297]
[18.03621292 -364.88217163]
[29.62781715 -355.31701660]
[39.66426086 -344.13098145]
[47.92132950 -331.57397461]
[54.21455383 -317.92651367]
[58.40334702 -303.49349976]
[60.39412308 -288.59738159]
[60.14241028 -273.57092285]
[57.65383148 -258.74984741]
[52.98398209 -244.46522522]
[46.23719025 -231.03620911]
[37.56418228 -218.76280212]
[27.15871048 -207.91918945]
[15.25324249 -198.74763489]
[2.11374950 -191.45301819]
[7.36046791 -177.40054321]
[12.60718632 -163.34808350]
[24.30749321 -154.13113403]
[21.88598824 -138.49633789]
[33.04537201 -136.12265015]
[41.76340866 -128.57867432]
[45.79855347 -117.65112305]
[44.03983688 -106.01463318]
[36.80979538 -96.57730865]
[41.63579178 -82.37485504]
[46.56738663 -68.20871735]
[51.60430145 -54.07968903]
[56.85102081 -40.02721786]
[62.30637741 -26.05442047]
[67.76173401 -12.08162212]
[71.69841766 -9.37763214]
[73.97826385 -4.17193127]
[73.16468048 2.38928962]
[78.20159912 16.51832008]
[83.23851776 30.64734840]
[88.27543640 44.77637863]
[99.83721924 54.16650391]
[97.18319702 69.76351166]
[102.22011566 83.89254761]
[112.42272949 89.50930023]
[116.25178528 100.50836945]
[111.74276733 111.24662018]
[116.56876373 125.44907379]
[121.39476776 139.65153503]
[133.16064453 150.22860718]
[129.92951965 164.76852417]
[134.75552368 178.97097778]
[139.58151245 193.17343140]
[145.30554199 200.29196167]
[144.37193298 207.62341309]
[148.98594666 221.89614868]
[153.59994507 236.16886902]
[157.47505188 239.66612244]
[159.42607117 243.87881470]
[159.50271606 247.95423889]
[158.08586121 251.18299866]
[162.05795288 265.64752197]
[166.03005981 280.11206055]
[170.00215149 294.57656860]
[173.97424316 309.04110718]
[178.16125488 323.44488525]
[182.56225586 337.78472900]
[196.33049011 350.01245117]
[191.73695374 366.94958496]
[196.35096741 381.22232056]
[200.96498108 395.49502563]
[205.57899475 409.76776123]
[210.19299316 424.04049683]
[214.80700684 438.31323242]
[219.42102051 452.58596802]
[224.03501892 466.85870361]
[228.64903259 481.13143921]
[233.26304626 495.40417480]
[237.87705994 509.67691040]
[242.49105835 523.94964600]
[257.21963501 521.01947021]
[272.18878174 519.81909180]
[287.19607544 520.36462402]
[302.03857422 522.64874268]
[316.51550293 526.64056396]
[330.43112183 532.28613281]
[343.59719849 539.50903320]
[355.83572388 548.21166992]
[366.98117065 558.27624512]
[376.88278198 569.56671143]
[385.40667725 581.93035889]
[392.43756104 595.19995117]
[397.88037109 609.19610596]
[401.66149902 623.72949219]
[403.72979736 638.60357666]
[404.05728149 653.61724854]
[402.63952637 668.56738281]
[399.49572754 683.25183105]
[394.66839600 697.47198486]
[388.22280884 711.03558350]
[380.24615479 723.75915527]
[370.84628296 735.47064209]
[360.15029907 746.01165771]
[348.30288696 755.23962402]
[335.46426392 763.02978516]
[321.80807495 769.27673340]
[307.51895142 773.89605713]
[292.79019165 776.82519531]
[277.82098389 778.02459717]
[262.81372070 777.47808838]
[247.97138977 775.19293213]
[233.49470520 771.20013428]
[219.57946777 765.55364990]
[206.41386414 758.32989502]
[194.17591858 749.62646484]
[183.03115845 739.56115723]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 174]
[17 173]
[18 172]
[19 171]
[20 170]
[21 169]
[22 168]
[23 167]
[24 166]
[25 165]
[26 164]
[27 163]
[30 161]
[31 160]
[34 159]
[35 158]
[36 157]
[37 156]
[38 155]
[39 151]
[40 150]
[41 149]
[42 147]
[43 146]
[44 145]
[46 143]
[47 142]
[48 141]
[50 138]
[51 137]
[53 135]
[54 134]
[55 133]
[56 132]
[57 129]
[58 128]
[59 127]
[62 126]
[63 125]
[65 124]
[66 123]
[69 118]
[71 116]
[72 115]
[73 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
