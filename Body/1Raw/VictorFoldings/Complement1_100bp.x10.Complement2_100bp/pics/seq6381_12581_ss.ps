%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[29.04951096 381.35055542]
[23.05025482 395.10546875]
[16.09568024 408.40295410]
[8.22043419 421.17672729]
[-0.53624707 433.36315918]
[-10.13073921 444.90158081]
[-20.51524162 455.73443604]
[-31.63801765 465.80780029]
[-43.44365692 475.07150269]
[-55.87334061 483.47933960]
[-68.86515045 490.98947144]
[-82.35434723 497.56442261]
[-96.27374268 503.17150879]
[-110.55398560 507.78277588]
[-125.12392426 511.37521362]
[-139.91098022 513.93096924]
[-154.84149170 515.43725586]
[-169.84104919 515.88665771]
[-184.83496094 515.27685547]
[-199.74848938 513.61090088]
[-214.50737000 510.89709473]
[-229.03804016 507.14898682]
[-243.26814270 502.38522339]
[-257.12673950 496.62957764]
[-270.54483032 489.91064453]
[-283.45556641 482.26199341]
[-295.79458618 473.72164917]
[-307.50045776 464.33218384]
[-318.51483154 454.14041138]
[-328.78283691 443.19708252]
[-338.25335693 431.55670166]
[-346.87915039 419.27725220]
[-354.61730957 406.41998291]
[-361.42922974 393.04885864]
[-367.28100586 379.23052979]
[-372.14343262 365.03387451]
[-375.99237061 350.52957153]
[-378.80856323 335.78988647]
[-380.57803345 320.88830566]
[-381.29196167 305.89898682]
[-380.94674683 290.89666748]
[-379.54415894 275.95605469]
[-377.09115601 261.15161133]
[-373.59994507 246.55706787]
[-369.08798218 232.24516296]
[-363.57769775 218.28715515]
[-357.09652710 204.75262451]
[-349.67681885 191.70898438]
[-341.35546875 179.22122192]
[-332.17398071 167.35153198]
[-322.17810059 156.15908813]
[-311.41760254 145.69960022]
[-299.94610596 136.02522278]
[-287.82077026 127.18413544]
[-275.10198975 119.22037506]
[-261.85311890 112.17362976]
[-248.14018250 106.07901001]
[-234.03150940 100.96686554]
[-219.59735107 96.86267090]
[-204.90966797 93.78688049]
[-190.04159546 91.75480652]
[-175.06721497 90.77658081]
[-160.06112671 90.85707092]
[-145.09811401 91.99588013]
[-130.25268555 94.18733215]
[-115.59883118 97.42050934]
[-101.20954895 101.67931366]
[-87.15651703 106.94251251]
[-73.50975800 113.18389130]
[-60.33724976 120.37235260]
[-47.70462799 128.47209167]
[-35.67482376 137.44274902]
[-24.30776787 147.23963928]
[-13.66009331 157.81394958]
[-3.78484583 169.11299133]
[8.17749119 160.06298828]
[20.13982773 151.01298523]
[32.10216522 141.96298218]
[44.06450272 132.91299438]
[56.02683640 123.86299133]
[51.08556366 110.50995636]
[50.10577393 96.30574036]
[53.16682434 82.40071869]
[60.02079773 69.92102814]
[70.11260986 59.87737274]
[82.62494659 53.08317184]
[96.54445648 50.08867264]
[110.74382019 51.13639832]
[124.07306671 56.14149094]
[135.45268250 64.69860077]
[147.54843140 55.82770157]
[159.64418030 46.95680618]
[171.73992920 38.08591080]
[183.83567810 29.21501732]
[195.93144226 20.34412193]
[208.02719116 11.47322655]
[220.12294006 2.60233068]
[212.21179199 -10.15078926]
[205.31271362 -23.47861862]
[199.46719360 -37.30099869]
[194.71038818 -51.53479767]
[191.07089233 -66.09441376]
[188.57061768 -80.89228821]
[187.22459412 -95.83940887]
[187.04092407 -110.84589386]
[188.02069092 -125.82148743]
[190.15800476 -140.67611694]
[193.44003296 -155.32046509]
[197.84701538 -169.66642761]
[203.35246277 -183.62774658]
[209.92326355 -197.12045288]
[217.51988220 -210.06338501]
[226.09664917 -222.37872314]
[235.60197449 -233.99237061]
[245.97868347 -244.83451843]
[257.16439819 -254.83993530]
[269.09179688 -263.94845581]
[281.68920898 -272.10528564]
[294.88079834 -279.26138306]
[308.58731079 -285.37371826]
[322.72622681 -290.40548706]
[337.21258545 -294.32647705]
[351.95919800 -297.11309814]
[366.87744141 -298.74856567]
[381.87753296 -299.22308350]
[396.86932373 -298.53375244]
[411.76257324 -296.68472290]
[426.46777344 -293.68713379]
[440.89645386 -289.55902100]
[454.96185303 -284.32522583]
[468.57937622 -278.01718140]
[481.66711426 -270.67282104]
[494.14636230 -262.33636475]
[505.94207764 -253.05790710]
[516.98327637 -242.89328003]
[527.20361328 -231.90361023]
[536.54162598 -220.15496826]
[544.94110107 -207.71803284]
[552.35150146 -194.66760254]
[558.72833252 -181.08215332]
[564.03320312 -167.04339600]
[568.23425293 -152.63577271]
[571.30615234 -137.94592285]
[573.23046875 -123.06218719]
[573.99560547 -108.07409668]
[573.59692383 -93.07178497]
[572.03692627 -78.14547729]
[569.32495117 -63.38494492]
[565.47723389 -48.87895966]
[560.51702881 -34.71475983]
[554.47406006 -20.97753906]
[547.38476562 -7.74991131]
[539.29174805 4.88856983]
[530.24365234 16.86189270]
[520.29492188 28.09804916]
[509.50540161 38.52946091]
[497.93997192 48.09339142]
[485.66815186 56.73232651]
[472.76379395 64.39430237]
[459.30450439 71.03324127]
[445.37121582 76.60921478]
[431.04769897 81.08869171]
[416.42016602 84.44473267]
[401.57650757 86.65714264]
[386.60607910 87.71263123]
[371.59884644 87.60483551]
[356.64511108 86.33441162]
[341.83477783 83.90900421]
[327.25695801 80.34318542]
[312.99926758 75.65841675]
[299.14752197 69.88287354]
[285.78497314 63.05127335]
[272.99200439 55.20471954]
[260.84558105 46.39039612]
[249.41870117 36.66131592]
[238.78012085 26.07599068]
[228.99383545 14.69808292]
[216.89808655 23.56897736]
[204.80233765 32.43987274]
[192.70657349 41.31076813]
[180.61082458 50.18166351]
[168.51507568 59.05255890]
[156.41932678 67.92345428]
[144.32357788 76.79434967]
[149.32359314 91.61764526]
[149.50117493 107.26050568]
[144.83894348 122.19348907]
[135.79272461 134.95657349]
[123.24699402 144.30189514]
[108.42836761 149.31575012]
[92.78569031 149.50793457]
[77.84835815 144.85963440]
[65.07683563 135.82533264]
[53.11450195 144.87532043]
[41.15216446 153.92532349]
[29.18982697 162.97532654]
[17.22749138 172.02532959]
[5.26515388 181.07533264]
[13.45241737 193.65139771]
[20.73217773 206.77366638]
[27.06817055 220.37677002]
[32.42882538 234.39291382]
[36.78744125 248.75227356]
[40.12229538 263.38333130]
[42.41678238 278.21316528]
[43.65946579 293.16790771]
[43.84415817 308.17309570]
[42.96993256 323.15390015]
[41.04115295 338.03570557]
[38.06742477 352.74441528]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[75 198]
[76 197]
[77 196]
[78 195]
[79 194]
[80 193]
[90 184]
[91 183]
[92 182]
[93 181]
[94 180]
[95 179]
[96 178]
[97 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
