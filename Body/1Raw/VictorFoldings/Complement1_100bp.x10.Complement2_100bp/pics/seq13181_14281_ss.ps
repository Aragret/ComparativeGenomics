%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAAxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[7.36440182 799.01245117]
[-7.49432087 801.08673096]
[-22.43442345 802.45697021]
[-37.42256546 803.12017822]
[-52.42530823 803.07489014]
[-67.40917206 802.32110596]
[-82.34072113 800.86053467]
[-97.18663025 798.69647217]
[-111.91378784 795.83374023]
[-126.48931885 792.27874756]
[-140.88070679 788.03936768]
[-155.05583191 783.12506104]
[-168.98306274 777.54687500]
[-182.63134766 771.31719971]
[-195.97019958 764.44989014]
[-208.96986389 756.96038818]
[-221.60133362 748.86529541]
[-233.83642578 740.18273926]
[-245.64784241 730.93212891]
[-257.00921631 721.13397217]
[-267.89520264 710.81024170]
[-278.28152466 699.98394775]
[-288.14498901 688.67919922]
[-297.46356201 676.92132568]
[-306.21649170 664.73645020]
[-314.38424683 652.15185547]
[-321.94857788 639.19561768]
[-328.89263916 625.89654541]
[-335.20086670 612.28442383]
[-340.85925293 598.38958740]
[-345.85516357 584.24298096]
[-350.17742920 569.87628174]
[-353.81640625 555.32147217]
[-356.76397705 540.61108398]
[-359.01354980 525.77789307]
[-360.56015015 510.85501099]
[-361.40029907 495.87573242]
[-361.53210449 480.87350464]
[-360.95532227 465.88177490]
[-359.67117310 450.93402100]
[-357.68255615 436.06359863]
[-354.99392700 421.30368042]
[-351.61126709 406.68716431]
[-347.54211426 392.24673462]
[-342.79556274 378.01455688]
[-337.38220215 364.02243042]
[-331.31411743 350.30154419]
[-324.60482788 336.88253784]
[-317.26934814 323.79534912]
[-309.32397461 311.06915283]
[-300.78649902 298.73239136]
[-291.67596436 286.81259155]
[-282.01266479 275.33630371]
[-271.81817627 264.32916260]
[-261.11526489 253.81573486]
[-249.92782593 243.81947327]
[-238.28077698 234.36270142]
[-226.20013428 225.46649170]
[-213.71286011 217.15071106]
[-200.84680176 209.43392944]
[-187.63067627 202.33332825]
[-174.09397888 195.86479187]
[-160.26690674 190.04272461]
[-146.18032837 184.88012695]
[-131.86564636 180.38853455]
[-117.35483551 176.57794189]
[-102.68025970 173.45687866]
[-87.87466431 171.03228760]
[-72.97108459 169.30960083]
[-58.00278091 168.29263306]
[-43.00315475 167.98368835]
[-28.00567055 168.38342285]
[-13.04379654 169.49096680]
[1.84908068 171.30384827]
[16.63973045 173.81800842]
[31.29514694 177.02783203]
[45.78263092 180.92619324]
[60.06985092 185.50434875]
[65.31657410 171.45188904]
[62.51978683 156.82220459]
[74.59537506 146.60014343]
[79.84209442 132.54766846]
[85.08880615 118.49519348]
[90.33552551 104.44272614]
[94.52253723 90.03894043]
[97.62664795 75.36363983]
[100.73075867 60.68833923]
[103.83486938 46.01303482]
[106.72013855 31.29314423]
[109.38594055 16.53192711]
[102.75905609 -0.64846611]
[114.60883331 -13.59256172]
[117.05455780 -28.39183235]
[119.50028992 -43.19110489]
[121.94601440 -57.99037552]
[124.39174652 -72.78964233]
[110.33670044 -78.17858887]
[97.65434265 -86.28677368]
[86.86399841 -96.78217316]
[78.40753174 -109.23500824]
[72.63121796 -123.13533020]
[69.77160645 -137.91395569]
[69.94579315 -152.96568298]
[73.14663696 -167.67416382]
[79.24307251 -181.43708801]
[87.98545837 -193.69090271]
[99.01579285 -203.93377686]
[111.88238525 -211.74630737]
[126.05837250 -216.80854797]
[140.96324158 -218.91322327]
[155.98666382 -217.97415161]
[170.51341248 -214.02976990]
[183.94865417 -207.24160767]
[195.74221802 -197.88763428]
[205.41116333 -186.35087585]
[212.55953979 -173.10379028]
[216.89463806 -158.68879700]
[218.23893738 -143.69621277]
[216.53738403 -128.73995972]
[211.85966492 -114.43247986]
[204.39732361 -101.35966492]
[194.45594788 -90.05684662]
[182.44261169 -80.98685455]
[168.84927368 -74.52110291]
[154.23255920 -70.92436218]
[139.19100952 -70.34391785]
[136.74528503 -55.54464722]
[134.29956055 -40.74537659]
[131.85383606 -25.94610405]
[129.40811157 -11.14683437]
[136.19528198 -1.13379967]
[134.27882385 11.21573257]
[124.14715576 19.19772339]
[121.48136139 33.95893860]
[123.42022705 38.32355118]
[122.63786316 43.95248795]
[118.51016998 49.11714554]
[115.40605927 63.79244995]
[112.30194855 78.46775055]
[109.19783783 93.14305115]
[120.36199951 83.12499237]
[135.01876831 79.93453979]
[149.33691406 84.40566254]
[159.57368469 95.36962128]
[163.05323792 109.96046448]
[158.86601257 124.36418152]
[148.10653687 134.81567383]
[133.58731079 138.58294678]
[119.10364532 134.68125916]
[108.44152069 124.13047028]
[104.38800049 109.68944550]
[99.14128113 123.74191284]
[93.89456177 137.79438782]
[88.64784241 151.84686279]
[91.06935120 167.48165894]
[79.36904144 176.69859314]
[74.12232208 190.75106812]
[87.91395569 196.65660095]
[101.41130829 203.20684814]
[114.58427429 210.38719177]
[127.40345001 218.18161011]
[139.84024048 226.57270813]
[151.86689758 235.54176331]
[163.45655823 245.06877136]
[174.58338928 255.13246155]
[185.22256470 265.71038818]
[195.35032654 276.77893066]
[204.94407654 288.31341553]
[213.98240662 300.28808594]
[222.44517517 312.67623901]
[230.31346130 325.45019531]
[237.56973267 338.58148193]
[244.19778442 352.04080200]
[250.18283081 365.79812622]
[255.51152039 379.82272339]
[260.17196655 394.08331299]
[264.15374756 408.54806519]
[267.44802856 423.18475342]
[270.04739380 437.96066284]
[271.94607544 452.84283447]
[273.13983154 467.79809570]
[273.62603760 482.79299927]
[273.40353394 497.79418945]
[272.47286987 512.76806641]
[270.83612061 527.68133545]
[268.49691772 542.50067139]
[265.46047974 557.19299316]
[261.73358154 571.72552490]
[257.32458496 586.06585693]
[252.24327087 600.18194580]
[246.50100708 614.04235840]
[240.11059570 627.61614990]
[233.08630371 640.87298584]
[225.44378662 653.78326416]
[217.20013428 666.31829834]
[208.37370300 678.45001221]
[198.98422241 690.15136719]
[189.05261230 701.39624023]
[178.60105896 712.15960693]
[167.65286255 722.41735840]
[156.23248291 732.14660645]
[144.36537170 741.32574463]
[132.07801819 749.93420410]
[119.39784241 757.95275879]
[106.35314941 765.36358643]
[92.97303772 772.15008545]
[79.28736115 778.29718018]
[65.32666016 783.79107666]
[51.12208939 788.61956787]
[36.70534134 792.77191162]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[78 157]
[79 156]
[81 154]
[82 153]
[83 152]
[84 151]
[85 140]
[86 139]
[87 138]
[88 137]
[89 134]
[90 133]
[92 130]
[93 129]
[94 128]
[95 127]
[96 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
