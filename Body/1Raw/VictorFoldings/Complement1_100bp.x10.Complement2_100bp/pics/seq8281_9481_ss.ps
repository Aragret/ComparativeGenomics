%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[54.16157913 432.49041748]
[46.00165939 445.08444214]
[36.96408081 457.06423950]
[27.09489441 468.36874390]
[16.44439697 478.94042969]
[5.06685591 488.72534180]
[-6.97974730 497.67367554]
[-19.63402748 505.73980713]
[-32.83149719 512.88262939]
[-46.50490952 519.06579590]
[-60.58458328 524.25769043]
[-74.99877167 528.43194580]
[-89.67402649 531.56726074]
[-104.53556061 533.64764404]
[-119.50764465 534.66253662]
[-134.51397705 534.60675049]
[-149.47810364 533.48052979]
[-164.32376099 531.28967285]
[-178.97528076 528.04528809]
[-193.35803223 523.76397705]
[-207.39871216 518.46746826]
[-221.02575684 512.18286133]
[-234.16973877 504.94207764]
[-246.76368713 496.78204346]
[-258.74340820 487.74438477]
[-270.04788208 477.87512207]
[-280.61944580 467.22454834]
[-290.40429688 455.84692383]
[-299.35253906 443.80026245]
[-307.41857910 431.14590454]
[-314.56130981 417.94839478]
[-320.74432373 404.27493286]
[-325.93612671 390.19522095]
[-330.11026001 375.78097534]
[-333.24548340 361.10571289]
[-335.32577515 346.24417114]
[-336.34054565 331.27206421]
[-336.28463745 316.26574707]
[-335.15829468 301.30160522]
[-332.96731567 286.45599365]
[-329.72283936 271.80447388]
[-325.44140625 257.42175293]
[-320.14480591 243.38113403]
[-313.86007690 229.75413513]
[-306.61917114 216.61019897]
[-298.45907593 204.01631165]
[-289.42129517 192.03666687]
[-279.55194092 180.73228455]
[-268.90127563 170.16078186]
[-257.52359009 160.37602234]
[-245.47685242 151.42787170]
[-232.82244873 143.36193848]
[-219.62487793 136.21931458]
[-205.95137024 130.03639221]
[-191.87161255 124.84468842]
[-177.45736694 120.67065430]
[-162.78205872 117.53556824]
[-147.92048645 115.45539093]
[-132.94839478 114.44073486]
[-117.94205475 114.49676514]
[-102.97795105 115.62319946]
[-88.13233948 117.81429291]
[-73.48085785 121.05888367]
[-59.09817123 125.34043884]
[-45.05757904 130.63713074]
[-31.43062592 136.92198181]
[-18.28674889 144.16296387]
[-5.69293165 152.32318115]
[6.28665352 161.36103821]
[17.59095955 171.23046875]
[28.23696709 160.66342163]
[38.88297653 150.09637451]
[42.46525955 135.63897705]
[57.71040344 131.40859985]
[68.35641479 120.84154510]
[71.93869019 106.38414764]
[87.18383789 102.15376282]
[97.51050568 91.27442932]
[107.50868225 80.09245300]
[117.50685120 68.91047668]
[127.50502014 57.72850418]
[112.61127472 55.94633484]
[104.58905029 43.27179337]
[109.35204315 29.04808426]
[123.38915253 23.76039505]
[136.35273743 31.30661392]
[138.68699646 46.12236404]
[149.48915100 35.71499252]
[160.29130554 25.30761719]
[171.09346008 14.90024471]
[181.89562988 4.49287176]
[182.91552734 -8.36491299]
[192.12692261 -16.81085396]
[204.22312927 -16.71921349]
[215.17903137 -26.96460533]
[226.13493347 -37.20999527]
[237.09085083 -47.45538712]
[227.81910706 -59.25861740]
[219.59635925 -71.81520081]
[212.48347473 -85.03217316]
[206.53314209 -98.81168365]
[201.78938293 -113.05170441]
[198.28733826 -127.64681244]
[196.05294800 -142.48895264]
[195.10272217 -157.46821594]
[195.44372559 -172.47372437]
[197.07342529 -187.39436340]
[199.97975159 -202.11967468]
[204.14118958 -216.54061890]
[209.52691650 -230.55046082]
[216.09707642 -244.04544067]
[223.80302429 -256.92565918]
[232.58769226 -269.09573364]
[242.38604736 -280.46560669]
[253.12554932 -290.95104980]
[264.72668457 -300.47445679]
[277.10354614 -308.96530151]
[290.16452026 -316.36071777]
[303.81289673 -322.60598755]
[317.94760132 -327.65484619]
[332.46405029 -331.46990967]
[347.25469971 -334.02294922]
[362.21008301 -335.29504395]
[377.21945190 -335.27676392]
[392.17166138 -333.96829224]
[406.95608521 -331.37927246]
[421.46316528 -327.52890015]
[435.58557129 -322.44564819]
[449.21871948 -316.16720581]
[462.26165771 -308.73999023]
[474.61782837 -300.21905518]
[486.19573975 -290.66744995]
[496.90969849 -280.15591431]
[506.68035889 -268.76223755]
[515.43536377 -256.57080078]
[523.10992432 -243.67187500]
[529.64721680 -230.16094971]
[534.99884033 -216.13804626]
[539.12518311 -201.70701599]
[541.99566650 -186.97467041]
[543.58905029 -172.05010986]
[543.89355469 -157.04382324]
[542.90686035 -142.06690979]
[540.63635254 -127.23026276]
[537.09881592 -112.64371490]
[532.32043457 -98.41528320]
[526.33654785 -84.65029144]
[519.19152832 -71.45066833]
[510.93826294 -58.91413116]
[501.63781738 -47.13349915]
[491.35910034 -36.19599533]
[480.17816162 -26.18260002]
[468.17779541 -17.16744804]
[455.44686890 -9.21728611]
[442.07965088 -2.39097524]
[428.17507935 3.26094437]
[413.83609009 7.69662714]
[399.16888428 10.88323212]
[384.28204346 12.79716587]
[369.28576660 13.42425823]
[354.29110718 12.75986671]
[339.40905762 10.80891037]
[324.74981689 7.58583355]
[310.42193604 3.11449909]
[296.53146362 -2.57198811]
[283.18124390 -9.43152714]
[270.47012329 -17.41333008]
[258.49224854 -26.45830345]
[247.33624268 -36.49947739]
[236.38032532 -26.25408745]
[225.42442322 -16.00869560]
[214.46852112 -5.76330423]
[210.27342224 11.27688694]
[192.30299377 15.29502773]
[181.50083923 25.70240211]
[170.69868469 36.10977554]
[159.89653015 46.51714706]
[149.09437561 56.92452240]
[138.68699646 67.72667694]
[128.68882751 78.90865326]
[118.69065094 90.09062958]
[108.69248199 101.27259827]
[108.60402679 104.31918335]
[107.40509796 107.40091705]
[105.08052826 110.10643768]
[101.76734924 112.02453613]
[97.75088501 112.79977417]
[93.40713501 128.01300049]
[78.92346191 131.48756409]
[68.27745056 142.05461121]
[63.93369675 157.26783752]
[49.45002365 160.74238586]
[38.80401611 171.30943298]
[28.15800667 181.87648010]
[37.94302368 193.25395203]
[46.89144516 205.30049133]
[54.95767593 217.95469666]
[62.10060501 231.15211487]
[68.28383636 244.82548523]
[73.47586823 258.90512085]
[77.65023041 273.31927490]
[80.78565979 287.99450684]
[82.86617279 302.85601807]
[83.88117981 317.82809448]
[83.82549286 332.83444214]
[82.69940186 347.79855347]
[80.50865173 362.64422607]
[77.26439667 377.29577637]
[72.98316956 391.67855835]
[67.68679810 405.71929932]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 194]
[71 193]
[72 192]
[74 190]
[75 189]
[77 187]
[78 182]
[79 181]
[80 180]
[81 179]
[87 178]
[88 177]
[89 176]
[90 175]
[91 174]
[94 172]
[95 171]
[96 170]
[97 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
