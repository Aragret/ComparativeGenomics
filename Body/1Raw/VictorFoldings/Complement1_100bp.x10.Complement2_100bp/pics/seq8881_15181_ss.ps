%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[66.88036346 536.97027588]
[54.86677551 545.96215820]
[42.26144409 554.10382080]
[29.12444305 561.35638428]
[15.51837826 567.68536377]
[1.50809097 573.06054688]
[-12.83965492 577.45629883]
[-27.45648384 580.85174561]
[-42.27274323 583.23065186]
[-57.21781921 584.58166504]
[-72.22049713 584.89843750]
[-87.20928192 584.17932129]
[-102.11273956 582.42791748]
[-116.85984802 579.65240479]
[-131.38034058 575.86608887]
[-145.60501099 571.08703613]
[-159.46606445 565.33795166]
[-172.89746094 558.64630127]
[-185.83517456 551.04394531]
[-198.21757507 542.56707764]
[-209.98564148 533.25616455]
[-221.08328247 523.15551758]
[-231.45762634 512.31329346]
[-241.05923462 500.78118896]
[-249.84234619 488.61410522]
[-257.76510620 475.87005615]
[-264.78976440 462.60980225]
[-270.88284302 448.89645386]
[-276.01528931 434.79544067]
[-280.16265869 420.37393188]
[-283.30517578 405.70065308]
[-285.42788696 390.84552002]
[-286.52066040 375.87936401]
[-286.57830811 360.87344360]
[-285.60049438 345.89932251]
[-283.59197998 331.02832031]
[-280.56222534 316.33132935]
[-276.52575684 301.87838745]
[-271.50177002 287.73837280]
[-265.51422119 273.97863770]
[-258.59161377 260.66479492]
[-250.76698303 247.86029053]
[-242.07759094 235.62611389]
[-232.56484985 224.02058411]
[-222.27407837 213.09899902]
[-211.25434875 202.91342163]
[-199.55815125 193.51237488]
[-187.24122620 184.94067383]
[-174.36227417 177.23915100]
[-160.98268127 170.44451904]
[-147.16619873 164.58915710]
[-132.97865295 159.70097351]
[-118.48767853 155.80323792]
[-103.76232147 152.91455078]
[-88.87275696 151.04867554]
[-73.88993835 150.21449280]
[-58.88526917 150.41598511]
[-43.93025589 151.65220642]
[-29.09616089 153.91723633]
[-14.45368195 157.20028687]
[-0.07259537 161.48573303]
[13.97856617 166.75312805]
[27.63284111 172.97738647]
[40.82516098 180.12886047]
[48.86633301 167.46632385]
[56.90750885 154.80380249]
[64.94867706 142.14128113]
[72.89536285 129.41923523]
[80.74711609 116.63839722]
[88.59887695 103.85755920]
[75.54325104 111.24340057]
[60.76044846 113.78676605]
[45.98713303 111.18885040]
[32.95885849 103.75486755]
[23.20617676 92.35815430]
[17.87482262 78.33757019]
[17.59111595 63.34025574]
[22.38838768 49.12807083]
[31.70306015 37.37065125]
[44.44085312 29.44924927]
[59.10534668 26.29446030]
[73.97376251 28.27690887]
[87.29938507 35.16369629]
[97.51673126 46.14576721]
[103.42546844 59.93296432]
[104.33145142 74.90557861]
[100.12755585 89.30605316]
[110.77355957 78.73900604]
[121.41957092 68.17195892]
[132.06558228 57.60490799]
[142.71159363 47.03786087]
[147.05534363 31.82463264]
[161.53901672 28.35007668]
[172.18502808 17.78302956]
[182.83103943 7.21598148]
[193.47703552 -3.35106635]
[203.96453857 -14.07544613]
[214.29121399 -24.95478058]
[224.61787415 -35.83411407]
[234.94454956 -46.71344757]
[225.13877869 -58.08118820]
[216.51361084 -70.36878967]
[209.15476990 -83.45413208]
[203.13540649 -97.20716095]
[198.51531982 -111.49118805]
[195.34045410 -126.16425323]
[193.64233398 -141.08052063]
[193.43786621 -156.09173584]
[194.72906494 -171.04872131]
[197.50309753 -185.80282593]
[201.73240662 -200.20738220]
[207.37493896 -214.11926270]
[214.37463379 -227.40019226]
[222.66191101 -239.91816711]
[232.15441895 -251.54876709]
[242.75779724 -262.17642212]
[254.36666870 -271.69549561]
[266.86566162 -280.01138306]
[280.13055420 -287.04141235]
[294.02947998 -292.71572876]
[308.42434692 -296.97796631]
[323.17205811 -299.78573608]
[338.12603760 -301.11111450]
[353.13769531 -300.94097900]
[368.05780029 -299.27697754]
[382.73809814 -296.13565063]
[397.03265381 -291.54824829]
[410.79940796 -285.56033325]
[423.90155029 -278.23144531]
[436.20883179 -269.63439941]
[447.59896851 -259.85464478]
[457.95870972 -248.98937988]
[467.18515015 -237.14660645]
[475.18658447 -224.44400024]
[481.88345337 -211.00784302]
[487.20919800 -196.97163391]
[491.11093140 -182.47491455]
[493.54983521 -167.66172791]
[494.50167847 -152.67932129]
[493.95700073 -137.67658997]
[491.92123413 -122.80264282]
[488.41461182 -108.20530701]
[483.47195435 -94.02967072]
[477.14239502 -80.41661072]
[469.48886108 -67.50142670]
[460.58737183 -55.41248322]
[450.52645874 -44.26992416]
[439.40609741 -34.18449402]
[427.33679199 -25.25642776]
[414.43850708 -17.57445717]
[400.83941650 -11.21493530]
[386.67468262 -6.24106550]
[372.08511353 -2.70228195]
[357.21569824 -0.63375521]
[342.21420288 -0.05604413]
[327.22973633 -0.97489035]
[312.41122437 -3.38116169]
[297.90591431 -7.25094318]
[283.85803223 -12.54577351]
[270.40713501 -19.21302986]
[257.68695068 -27.18644714]
[245.82388306 -36.38677979]
[235.49720764 -25.50744629]
[225.17054749 -14.62811184]
[214.84387207 -3.74877739]
[214.07058716 0.96408397]
[210.32849121 5.24120378]
[204.04408264 7.29494238]
[193.39808655 17.86198997]
[182.75207520 28.42903709]
[172.10606384 38.99608612]
[168.52378845 53.45349121]
[153.27864075 57.68386841]
[142.63262939 68.25091553]
[131.98661804 78.81796265]
[121.34060669 89.38500977]
[110.69460297 99.95206451]
[101.37971497 111.70931244]
[93.52796173 124.49015808]
[85.67620850 137.27099609]
[83.85057068 146.22113037]
[77.61120605 150.18244934]
[69.57003021 162.84497070]
[61.52885818 175.50750732]
[53.48768616 188.17002869]
[65.57023621 197.06904602]
[77.01004791 206.78045654]
[87.75258636 217.25798035]
[97.74667358 228.45167542]
[106.94467926 240.30821228]
[115.30277252 252.77107239]
[122.78111267 265.78088379]
[129.34407043 279.27563477]
[134.96037292 293.19100952]
[139.60324097 307.46072388]
[143.25056458 322.01672363]
[145.88496399 336.78970337]
[147.49386597 351.70922852]
[148.06962585 366.70419312]
[147.60948181 381.70315552]
[146.11563110 396.63464355]
[143.59519958 411.42749023]
[140.06019592 426.01116943]
[135.52745056 440.31625366]
[130.01860046 454.27450562]
[123.55986023 467.81945801]
[116.18202972 480.88653564]
[107.92025757 493.41345215]
[98.81392670 505.34054565]
[88.90642548 516.61096191]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 185]
[65 184]
[66 183]
[67 182]
[68 180]
[69 179]
[70 178]
[87 177]
[88 176]
[89 175]
[90 174]
[91 173]
[93 171]
[94 170]
[95 169]
[96 168]
[97 165]
[98 164]
[99 163]
[100 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
