%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[102.88623047 625.88909912]
[89.74428558 618.63616943]
[77.31634521 610.21826172]
[65.70538330 600.70507812]
[55.00762177 590.17541504]
[45.31170273 578.71661377]
[36.69797516 566.42358398]
[29.23781013 553.39819336]
[22.99303055 539.74835205]
[18.01538467 525.58715820]
[14.34611607 511.03207397]
[12.01563263 496.20358276]
[11.04324532 481.22460938]
[11.43701172 466.21926880]
[13.19366837 451.31188965]
[16.29866028 436.62603760]
[20.72625542 422.28338623]
[26.43976784 408.40280151]
[33.39184952 395.09927368]
[41.52489471 382.48306274]
[50.77150726 370.65869141]
[61.05506516 359.72418213]
[72.29035950 349.77011108]
[84.38427734 340.87896729]
[97.23661041 333.12445068]
[110.74085999 326.57077026]
[124.78512573 321.27230835]
[139.25302124 317.27288818]
[136.58721924 302.51165771]
[133.92143250 287.75045776]
[131.25563049 272.98922729]
[128.26084900 258.29122925]
[124.93859863 243.66377258]
[121.61633301 229.03630066]
[111.25231171 218.33882141]
[115.74093628 203.16769409]
[112.41867065 188.54023743]
[109.09641266 173.91278076]
[105.77415466 159.28532410]
[102.45189667 144.65785217]
[92.08786774 133.96037292]
[96.57649231 118.78924561]
[84.37232208 110.97870636]
[81.16312408 96.84904480]
[88.79605103 84.53301239]
[85.47379303 69.90554810]
[82.15152740 55.27809143]
[71.54987335 43.53434753]
[76.27612305 29.40948105]
[72.95386505 14.78202152]
[69.16480255 29.29556847]
[61.31724548 42.07898712]
[50.09007645 52.02638626]
[36.45456696 58.27721405]
[21.59032059 60.29071045]
[6.78324509 57.89269257]
[-6.68570137 51.29061127]
[-17.65131760 41.05561066]
[-25.16497040 28.07312202]
[-28.57665443 13.46625996]
[-27.59122086 -1.50133574]
[-22.29392242 -15.53481865]
[-13.14302826 -27.42015076]
[-0.93018162 -36.12913513]
[13.28808403 -40.90835190]
[28.28174591 -41.34435654]
[42.75370407 -37.39942932]
[55.45198441 -29.41484261]
[65.27806854 -18.08134460]
[71.38094330 -4.38278723]
[72.27375793 -19.35619354]
[73.05508423 -34.33583069]
[73.72486877 -49.32086945]
[74.39465332 -64.30590820]
[75.06443787 -79.29094696]
[75.73422241 -94.27598572]
[76.40400696 -109.26102448]
[77.07379150 -124.24606323]
[77.74357605 -139.23109436]
[78.41336823 -154.21614075]
[79.08315277 -169.20117188]
[64.26470947 -171.64048767]
[49.83879852 -175.81533813]
[36.00792694 -181.66711426]
[22.96626091 -189.11367798]
[10.89688587 -198.05049133]
[-0.03076218 -208.35209656]
[-9.66327763 -219.87385559]
[-17.86543465 -232.45404053]
[-24.52208710 -245.91603088]
[-29.53978539 -260.07086182]
[-32.84809113 -274.71978760]
[-34.40056229 -289.65719604]
[-34.17539597 -304.67337036]
[-32.17576599 -319.55752563]
[-28.42973137 -334.10070801]
[-22.98988914 -348.09872437]
[-15.93260384 -361.35507202]
[-7.35694838 -373.68368530]
[2.61668897 -384.91143799]
[13.84829330 -394.88076782]
[26.18019104 -403.45169067]
[39.43925858 -410.50387573]
[53.43936539 -415.93835449]
[67.98396301 -419.67880249]
[82.86888123 -421.67272949]
[97.88514709 -421.89212036]
[112.82196045 -420.33389282]
[127.46962738 -417.01995850]
[141.62252808 -411.99682617]
[155.08195496 -405.33502197]
[167.65899658 -397.12802124]
[179.17704773 -387.49108887]
[189.47445679 -376.55947876]
[198.40661621 -364.48666382]
[205.84817505 -351.44213867]
[211.69464111 -337.60903931]
[215.86395264 -323.18151855]
[218.29757690 -308.36215210]
[218.96133423 -293.35894775]
[217.84591675 -278.38256836]
[214.96699524 -263.64321899]
[210.36495972 -249.34785461]
[204.10444641 -235.69712830]
[196.27331543 -222.88269043]
[186.98152161 -211.08442688]
[176.35949707 -200.46798706]
[164.55635071 -191.18238831]
[151.73780823 -183.35798645]
[138.08380127 -177.10464478]
[123.78601074 -172.51013184]
[109.04515839 -169.63894653]
[94.06819153 -168.53138733]
[93.39840698 -153.54635620]
[92.72861481 -138.56130981]
[92.05883026 -123.57627869]
[91.38904572 -108.59123993]
[90.71926117 -93.60620117]
[90.04947662 -78.62116241]
[89.37969208 -63.63612366]
[88.70990753 -48.65108490]
[88.04012299 -33.66604614]
[90.88181305 -26.84354019]
[87.24716949 -18.46337700]
[86.35435486 -3.48997116]
[87.58132935 11.45976257]
[90.90358734 26.08722305]
[101.26760864 36.78471375]
[96.77899170 51.95582962]
[100.10124969 66.58329010]
[103.42350769 81.21075439]
[115.62767792 89.02129364]
[118.83687592 103.15095520]
[111.20394897 115.46698761]
[121.80560303 127.21073151]
[117.07935333 141.33560181]
[120.40161133 155.96305847]
[123.72387695 170.59051514]
[127.04613495 185.21797180]
[130.36839294 199.84544373]
[140.97004700 211.58918762]
[136.24378967 225.71405029]
[139.56605530 240.34150696]
[142.88832092 254.96896362]
[146.43595886 258.79797363]
[148.00337219 263.16793823]
[147.71611023 267.23394775]
[146.01684570 270.32342529]
[148.68264771 285.08465576]
[151.34843445 299.84585571]
[154.01423645 314.60708618]
[168.96713257 313.29327393]
[183.97753906 313.34463501]
[198.92109680 314.76077271]
[213.67396545 317.52996826]
[228.11387634 321.62924194]
[242.12120056 327.02462769]
[255.57984924 333.67141724]
[268.37829590 341.51455688]
[280.41049194 350.48904419]
[291.57675171 360.52050781]
[301.78451538 371.52578735]
[310.94921875 383.41375732]
[318.99493408 396.08584595]
[325.85491943 409.43710327]
[331.47241211 423.35684204]
[335.80081177 437.72973633]
[338.80426025 452.43667603]
[340.45788574 467.35583496]
[340.74798584 482.36352539]
[339.67211914 497.33541870]
[337.23925781 512.14746094]
[333.46951294 526.67687988]
[328.39416504 540.80334473]
[322.05520630 554.40966797]
[314.50524902 567.38323975]
[305.80679321 579.61645508]
[296.03192139 591.00805664]
[285.26168823 601.46350098]
[273.58526611 610.89624023]
[261.09948730 619.22808838]
[247.90774536 626.39007568]
[234.11938477 632.32269287]
[219.84866333 636.97692871]
[205.21383667 640.31414795]
[190.33616638 642.30676270]
[175.33895874 642.93817139]
[160.34645081 642.20312500]
[145.48291016 640.10784912]
[130.87149048 636.66955566]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 171]
[29 170]
[30 169]
[31 168]
[32 164]
[33 163]
[34 162]
[36 160]
[37 159]
[38 158]
[39 157]
[40 156]
[42 154]
[45 151]
[46 150]
[47 149]
[49 147]
[50 146]
[70 145]
[71 144]
[72 142]
[73 141]
[74 140]
[75 139]
[76 138]
[77 137]
[78 136]
[79 135]
[80 134]
[81 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
