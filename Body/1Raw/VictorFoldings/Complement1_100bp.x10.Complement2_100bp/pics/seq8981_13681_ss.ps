%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[116.60433960 695.93597412]
[102.59152222 690.56811523]
[88.97306061 684.26647949]
[75.81108856 677.05987549]
[63.16566467 668.98114014]
[51.09448624 660.06713867]
[39.65263367 650.35852051]
[28.89231110 639.89959717]
[18.86261749 628.73815918]
[9.60931683 616.92504883]
[1.17462885 604.51422119]
[-6.40296030 591.56225586]
[-13.08887482 578.12829590]
[-18.85260773 564.27362061]
[-23.66786194 550.06140137]
[-27.51266670 535.55657959]
[-30.36947632 520.82525635]
[-32.22525787 505.93469238]
[-33.07154083 490.95281982]
[-32.90446854 475.94799805]
[-31.72480011 460.98864746]
[-29.53791809 446.14309692]
[-26.35380173 431.47906494]
[-22.18697929 417.06341553]
[-17.05646324 402.96197510]
[-10.98566246 389.23907471]
[-4.00227833 375.95730591]
[3.86182666 363.17727661]
[12.57076931 350.95733643]
[22.08481216 339.35321045]
[32.36054611 328.41781616]
[43.35108566 318.20111084]
[55.00627899 308.74969482]
[67.27294922 300.10668945]
[80.09512329 292.31149292]
[93.41429138 285.39974976]
[107.16969299 279.40292358]
[121.29856110 274.34838867]
[135.73641968 270.25924683]
[132.63230896 255.58395386]
[129.52819824 240.90866089]
[126.42409515 226.23335266]
[122.88442230 211.65698242]
[118.91232300 197.19245911]
[114.94023132 182.72793579]
[110.96813202 168.26341248]
[106.99604034 153.79888916]
[96.16468048 143.57484436]
[99.97139740 128.21842957]
[95.99930573 113.75389862]
[86.18740082 103.79307556]
[89.53617096 90.21819305]
[85.56407928 75.75366974]
[81.59197998 61.28914642]
[77.40496826 46.88536453]
[73.00397491 32.54551697]
[61.55822372 21.62281609]
[65.22082520 7.18555069]
[60.81982422 -7.15429640]
[56.41882706 -21.49414253]
[52.01782990 -35.83399200]
[47.61682892 -50.17383957]
[43.21583176 -64.51368713]
[38.81483459 -78.85353088]
[34.41383743 -93.19338226]
[30.01283836 -107.53322601]
[18.56708908 -118.45592499]
[22.22968864 -132.89318848]
[17.82869148 -147.23303223]
[3.05812955 -144.52250671]
[-11.92723560 -143.54508972]
[-26.92474556 -144.31401062]
[-41.73157501 -146.81887817]
[-56.14747620 -151.02580261]
[-69.97749329 -156.87791443]
[-83.03459167 -164.29603577]
[-95.14218903 -173.17988586]
[-106.13654327 -183.40928650]
[-115.86896515 -194.84591675]
[-124.20783234 -207.33509827]
[-131.04039001 -220.70794678]
[-136.27421570 -234.78358459]
[-139.83853149 -249.37165833]
[-141.68513489 -264.27490234]
[-141.78904724 -279.29174805]
[-140.14888000 -294.21911621]
[-136.78681946 -308.85513306]
[-131.74830627 -323.00186157]
[-125.10148621 -336.46798706]
[-116.93626404 -349.07138062]
[-107.36305237 -360.64160156]
[-96.51132965 -371.02221680]
[-84.52784729 -380.07275391]
[-71.57466888 -387.67089844]
[-57.82696915 -393.71386719]
[-43.47067261 -398.11990356]
[-28.69993019 -400.82946777]
[-13.71450043 -401.80587769]
[1.28295755 -401.03594971]
[16.08961868 -398.53009033]
[30.50524139 -394.32220459]
[44.33486938 -388.46917725]
[57.39147186 -381.05017090]
[69.49847412 -372.16552734]
[80.49214172 -361.93536377]
[90.22380066 -350.49810791]
[98.56184387 -338.00836182]
[105.39350128 -324.63507080]
[110.62638092 -310.55908203]
[114.18972778 -295.97076416]
[116.03533936 -281.06738281]
[116.13825989 -266.05053711]
[114.49709320 -251.12327576]
[111.13404083 -236.48748779]
[106.09458923 -222.34109497]
[99.44687653 -208.87541199]
[91.28080750 -196.27256775]
[81.70683289 -184.70297241]
[70.85441589 -174.32310486]
[58.87032700 -165.27334595]
[45.91664124 -157.67607117]
[32.16853714 -151.63403320]
[36.56953812 -137.29418945]
[47.70049667 -127.39717102]
[44.35268402 -111.93422699]
[48.75368500 -97.59437561]
[53.15468216 -83.25453186]
[57.55567932 -68.91468048]
[61.95667648 -54.57483673]
[66.35767365 -40.23498917]
[70.75867462 -25.89514160]
[75.15967560 -11.55529404]
[79.56066895 2.78455281]
[90.69162750 12.68157196]
[87.34381866 28.14451981]
[91.74481964 42.48436737]
[95.46948242 45.47366333]
[97.35583496 50.83451462]
[96.05650330 57.31705093]
[100.02860260 71.78157043]
[104.00069427 86.24610138]
[113.81259918 96.20692444]
[110.46382904 109.78180695]
[114.43592072 124.24633026]
[125.55139160 135.50497437]
[121.46056366 149.82678223]
[125.43265533 164.29130554]
[129.40475464 178.75582886]
[133.37684631 193.22035217]
[137.34893799 207.68487549]
[140.54495239 210.62417603]
[142.44799805 214.08004761]
[143.05445862 217.58255005]
[142.51367188 220.70892334]
[141.09939575 223.12924194]
[144.20350647 237.80455017]
[147.30761719 252.47984314]
[150.41172791 267.15515137]
[165.26878357 265.04785156]
[180.23422241 263.94836426]
[195.23973083 263.86169434]
[210.21685791 264.78823853]
[225.09727478 266.72378540]
[239.81306458 269.65948486]
[254.29708862 273.58197021]
[268.48327637 278.47329712]
[282.30688477 284.31118774]
[295.70483398 291.06900024]
[308.61599731 298.71588135]
[320.98144531 307.21694946]
[332.74481201 316.53341675]
[343.85235596 326.62277222]
[354.25344849 337.43899536]
[363.90060425 348.93270874]
[372.74978638 361.05148315]
[380.76065063 373.74002075]
[387.89666748 386.94039917]
[394.12521362 400.59243774]
[399.41790771 414.63381958]
[403.75061035 429.00048828]
[407.10351562 443.62686157]
[409.46133423 458.44622803]
[410.81332397 473.39096069]
[411.15332031 488.39285278]
[410.47976685 503.38351440]
[408.79571533 518.29449463]
[406.10888672 533.05773926]
[402.43151855 547.60589600]
[397.78036499 561.87268066]
[392.17669678 575.79284668]
[385.64605713 589.30297852]
[378.21823120 602.34143066]
[369.92715454 614.84863281]
[360.81060791 626.76757812]
[350.91021729 638.04388428]
[340.27114868 648.62609863]
[328.94195557 658.46594238]
[316.97430420 667.51849365]
[304.42282104 675.74243164]
[291.34478760 683.10028076]
[277.79986572 689.55841064]
[263.84985352 695.08746338]
[249.55838013 699.66204834]
[234.99069214 703.26141357]
[220.21324158 705.86914062]
[205.29347229 707.47326660]
[190.29943848 708.06646729]
[175.29956055 707.64611816]
[160.36228943 706.21405029]
[145.55577087 703.77679443]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 158]
[40 157]
[41 156]
[42 155]
[43 150]
[44 149]
[45 148]
[46 147]
[47 146]
[49 144]
[50 143]
[52 141]
[53 140]
[54 139]
[55 136]
[56 135]
[58 133]
[59 132]
[60 131]
[61 130]
[62 129]
[63 128]
[64 127]
[65 126]
[66 125]
[68 123]
[69 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
