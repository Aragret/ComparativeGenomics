%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[111.32365417 341.02450562]
[96.80664062 344.97052002]
[81.81171417 346.18161011]
[66.84958649 344.61654663]
[52.42987061 340.32861328]
[39.04369354 333.46383667]
[27.14698029 324.25607300]
[17.14493370 313.01892090]
[9.37821770 300.13510132]
[4.11136341 286.04345703]
[1.52375782 271.22390747]
[1.70353413 256.18121338]
[4.64456940 241.42773438]
[10.24669266 227.46597290]
[18.31909752 214.77145386]
[28.58684158 203.77655029]
[40.70021057 194.85572815]
[54.24662399 188.31283569]
[68.76469421 184.37074280]
[83.75994873 183.16369629]
[85.32047272 168.24508667]
[86.88099670 153.32647705]
[88.44152069 138.40788269]
[90.00204468 123.48927307]
[91.56256866 108.57066345]
[92.90080261 93.63047791]
[94.01644897 78.67202759]
[95.13209534 63.71357346]
[96.24774933 48.75511932]
[81.34309387 47.04919815]
[66.51747131 44.75577927]
[51.79402161 41.87843704]
[37.19574738 38.42166901]
[22.74543381 34.39086914]
[8.46564388 29.79233170]
[-5.62132502 24.63323975]
[-19.49347878 18.92164612]
[-33.12915421 12.66646957]
[-46.50706482 5.87747669]
[-59.60632324 -1.43473232]
[-72.40647125 -9.25874043]
[-84.88752747 -17.58233070]
[-97.02999878 -26.39250755]
[-108.81493378 -35.67551422]
[-120.22393036 -45.41685867]
[-131.23916626 -55.60132980]
[-141.84346008 -66.21302032]
[-152.02023315 -77.23537445]
[-161.75360107 -88.65116119]
[-171.02838135 -100.44258118]
[-179.83007812 -112.59120178]
[-188.14494324 -125.07807159]
[-195.96002197 -137.88368225]
[-203.26307678 -150.98803711]
[-210.04272461 -164.37068176]
[-216.28837585 -178.01072693]
[-221.99028015 -191.88687134]
[-227.13954163 -205.97743225]
[-231.72810364 -220.26043701]
[-235.74880981 -234.71356201]
[-239.19538879 -249.31423950]
[-242.06243896 -264.03970337]
[-244.34550476 -278.86691284]
[-246.04103088 -293.77276611]
[-247.14633179 -308.73394775]
[-247.65971375 -323.72711182]
[-247.58036804 -338.72888184]
[-246.90840149 -353.71578979]
[-245.64488220 -368.66445923]
[-243.79177856 -383.55151367]
[-241.35198975 -398.35375977]
[-238.32931519 -413.04806519]
[-234.72848511 -427.61148071]
[-230.55509949 -442.02124023]
[-225.81570435 -456.25491333]
[-220.51768494 -470.29022217]
[-214.66929626 -484.10525513]
[-208.27970886 -497.67846680]
[-201.35887146 -510.98864746]
[-193.91758728 -524.01501465]
[-185.96749878 -536.73724365]
[-177.52099609 -549.13543701]
[-168.59127808 -561.19030762]
[-159.19227600 -572.88293457]
[-149.33868408 -584.19512939]
[-139.04588318 -595.10919189]
[-128.32992554 -605.60809326]
[-117.20756531 -615.67547607]
[-105.69615936 -625.29559326]
[-93.81368256 -634.45343018]
[-81.57868958 -643.13464355]
[-69.01027679 -651.32574463]
[-56.12807846 -659.01391602]
[-42.95220184 -666.18713379]
[-29.50322151 -672.83422852]
[-15.80213642 -678.94476318]
[-1.87033892 -684.50933838]
[12.27041721 -689.51910400]
[26.59805489 -693.96630859]
[41.09019852 -697.84405518]
[55.72422791 -701.14617920]
[70.47728729 -703.86761475]
[85.32633972 -706.00402832]
[100.24820709 -707.55218506]
[115.21958923 -708.50964355]
[130.21710205 -708.87487793]
[145.21734619 -708.64727783]
[160.19688416 -707.82727051]
[175.13232422 -706.41613770]
[190.00036621 -704.41601562]
[204.77778625 -701.83013916]
[219.44149780 -698.66241455]
[233.96861267 -694.91784668]
[248.33645630 -690.60229492]
[262.52258301 -685.72247314]
[276.50488281 -680.28607178]
[290.26144409 -674.30145264]
[303.77087402 -667.77807617]
[317.01202393 -660.72607422]
[329.96423340 -653.15643311]
[342.60726929 -645.08105469]
[354.92141724 -636.51245117]
[366.88745117 -627.46405029]
[378.48666382 -617.95001221]
[389.70092773 -607.98510742]
[400.51278687 -597.58496094]
[410.90530396 -586.76580811]
[420.86230469 -575.54455566]
[430.36819458 -563.93865967]
[439.40817261 -551.96624756]
[447.96807861 -539.64605713]
[456.03460693 -526.99737549]
[463.59509277 -514.03979492]
[470.63778687 -500.79370117]
[477.15170288 -487.27972412]
[483.12658691 -473.51892090]
[488.55319214 -459.53283691]
[493.42303467 -445.34326172]
[497.72845459 -430.97238159]
[501.46279907 -416.44262695]
[504.62017822 -401.77670288]
[507.19570923 -386.99746704]
[509.18536377 -372.12802124]
[510.58599854 -357.19158936]
[511.39547729 -342.21148682]
[511.61248779 -327.21109009]
[511.23672485 -312.21383667]
[510.26873779 -297.24313354]
[508.71011353 -282.32235718]
[506.56320190 -267.47479248]
[503.83139038 -252.72366333]
[500.51895142 -238.09196472]
[496.63104248 -223.60253906]
[492.17376709 -209.27804565]
[487.15402222 -195.14080811]
[481.57971191 -181.21293640]
[475.45947266 -167.51614380]
[468.80291748 -154.07185364]
[461.62042236 -140.90101624]
[453.92321777 -128.02423096]
[445.72326660 -115.46158600]
[437.03344727 -103.23270416]
[427.86727905 -91.35666656]
[418.23907471 -79.85203552]
[408.16387939 -68.73675537]
[397.65740967 -58.02819824]
[386.73608398 -47.74307251]
[375.41699219 -37.89743805]
[363.71774292 -28.50667191]
[351.65661621 -19.58543587]
[339.25247192 -11.14765835]
[326.52465820 -3.20651412]
[313.49307251 4.22559786]
[300.17800903 11.13707256]
[286.60031128 17.51711845]
[272.78115845 23.35577583]
[258.74212646 28.64392471]
[244.50514221 33.37331390]
[230.09242249 37.53655243]
[215.52648926 41.12714005]
[200.83006287 44.13947678]
[186.02610779 46.56885529]
[171.13774109 48.41148376]
[156.18820190 49.66448212]
[141.20082092 50.32589722]
[126.19901276 50.39469528]
[111.20619965 49.87076950]
[110.09055328 64.82922363]
[108.97490692 79.78767395]
[107.85925293 94.74613190]
[110.29347229 99.39247894]
[109.95115662 105.07192230]
[106.48117065 110.13118744]
[104.92064667 125.04979706]
[103.36012268 139.96839905]
[101.79960632 154.88700867]
[100.23908234 169.80560303]
[98.67855835 184.72421265]
[113.09942627 189.00827026]
[126.48745728 195.86941528]
[138.38664246 205.07397461]
[148.39172363 216.30842590]
[156.16191101 229.19015503]
[161.43257141 243.28039551]
[164.02416992 258.09924316]
[163.84844971 273.14196777]
[160.91139221 287.89624023]
[155.31303406 301.85952759]
[147.24404907 314.55621338]
[136.97926331 325.55389404]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 198]
[21 197]
[22 196]
[23 195]
[24 194]
[25 193]
[26 190]
[27 189]
[28 188]
[29 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
