%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[-9.63889599 324.82739258]
[-12.33805561 339.58956909]
[-16.12007523 354.11206055]
[-20.96429634 368.31561279]
[-26.84426117 382.12261963]
[-33.72785568 395.45767212]
[-41.57748413 408.24792480]
[-50.35027695 420.42352295]
[-59.99831390 431.91796875]
[-70.46890259 442.66851807]
[-81.70485687 452.61639404]
[-93.64480591 461.70733643]
[-106.22354126 469.89160156]
[-119.37236786 477.12457275]
[-133.01945496 483.36669922]
[-147.09027100 488.58392334]
[-161.50796509 492.74771118]
[-176.19380188 495.83535767]
[-191.06756592 497.82995605]
[-206.04801941 498.72064209]
[-221.05334473 498.50256348]
[-236.00157166 497.17687988]
[-250.81108093 494.75082397]
[-265.40097046 491.23770142]
[-279.69158936 486.65664673]
[-293.60482788 481.03271484]
[-307.06472778 474.39660645]
[-319.99780273 466.78454590]
[-332.33337402 458.23812866]
[-344.00405884 448.80404663]
[-354.94616699 438.53381348]
[-365.09988403 427.48352051]
[-374.40979004 415.71353149]
[-382.82501221 403.28811646]
[-390.29962158 390.27511597]
[-396.79275513 376.74566650]
[-402.26898193 362.77359009]
[-406.69836426 348.43527222]
[-410.05670166 333.80895996]
[-412.32571411 318.97457886]
[-413.49295044 304.01315308]
[-413.55203247 289.00634766]
[-412.50268555 274.03619385]
[-410.35061646 259.18438721]
[-407.10754395 244.53208923]
[-402.79122925 230.15931702]
[-397.42523193 216.14456177]
[-391.03887939 202.56437683]
[-383.66699219 189.49293518]
[-375.34988403 177.00161743]
[-366.13299561 165.15864563]
[-356.06661987 154.02871704]
[-345.20574951 143.67262268]
[-333.60971069 134.14691162]
[-321.34185791 125.50360870]
[-308.46914673 117.78993225]
[-295.06192017 111.04800415]
[-281.19338989 105.31465149]
[-266.93933105 100.62119293]
[-252.37754822 96.99324799]
[-237.58760071 94.45064545]
[-222.65026855 93.00726318]
[-207.64714050 92.67098999]
[-192.66014099 93.44366455]
[-177.77113342 95.32106018]
[-163.06143188 98.29292297]
[-148.61137390 102.34302521]
[-134.49990845 107.44924927]
[-120.80407715 113.58369446]
[-107.59869385 120.71287537]
[-94.95588684 128.79783630]
[-82.94470215 137.79443359]
[-71.63074493 147.65351868]
[-61.07580185 158.32124329]
[-51.33753204 169.73934937]
[-42.46911240 181.84548950]
[-29.74707603 173.89880371]
[-17.02503967 165.95211792]
[-4.30300426 158.00543213]
[8.41903210 150.05874634]
[21.08155632 142.01757812]
[33.68386841 133.88235474]
[40.18043137 120.47922516]
[55.97101212 119.49526215]
[68.57332611 111.36004639]
[81.17563629 103.22483063]
[84.32937622 89.08268738]
[96.50280762 81.22432709]
[110.68914795 84.17285919]
[123.29145813 76.03764343]
[135.70895386 67.62302399]
[147.93544006 58.93320084]
[160.16192627 50.24337769]
[172.38841248 41.55355453]
[184.61489868 32.86372757]
[189.79685974 25.34141922]
[197.08872986 24.13714218]
[204.06703186 9.93805981]
[218.93763733 9.09284973]
[231.29214478 0.58602256]
[223.81614685 -12.42790127]
[217.42578125 -26.00788879]
[212.16358948 -40.06356812]
[208.06459045 -54.50139999]
[205.15603638 -69.22529602]
[203.45732117 -84.13727570]
[202.97972107 -99.13809967]
[203.72642517 -114.12793732]
[205.69247437 -129.00703430]
[208.86477661 -143.67636108]
[213.22221375 -158.03831482]
[218.73577881 -171.99729919]
[225.36880493 -185.46041870]
[233.07714844 -198.33810425]
[241.80947876 -210.54461670]
[251.50772095 -221.99873352]
[262.10729980 -232.62425232]
[273.53771973 -242.35043335]
[285.72286987 -251.11256409]
[298.58166504 -258.85232544]
[312.02853394 -265.51821899]
[325.97402954 -271.06588745]
[340.32528687 -275.45837402]
[354.98681641 -278.66650391]
[369.86108398 -280.66888428]
[384.84902954 -281.45220947]
[399.85098267 -281.01126099]
[414.76705933 -279.34896851]
[429.49804688 -276.47637939]
[443.94583130 -272.41265869]
[458.01431274 -267.18481445]
[471.60989380 -260.82763672]
[484.64202881 -253.38345337]
[497.02401733 -244.90179443]
[508.67349243 -235.43908691]
[519.51287842 -225.05831909]
[529.47009277 -213.82858276]
[538.47882080 -201.82460022]
[546.47912598 -189.12626648]
[553.41778564 -175.81806946]
[559.24859619 -161.98860168]
[563.93280029 -147.72987366]
[567.43914795 -133.13677979]
[569.74432373 -118.30644989]
[570.83306885 -103.33756256]
[570.69805908 -88.32975006]
[569.34020996 -73.38287354]
[566.76855469 -58.59641266]
[563.00024414 -44.06876755]
[558.06030273 -29.89662170]
[551.98162842 -16.17428398]
[544.80462646 -2.99308085]
[536.57720947 9.55927086]
[527.35394287 21.39923477]
[517.19635010 32.44801712]
[506.17193604 42.63208771]
[494.35409546 51.88367462]
[481.82150269 60.14120865]
[468.65753174 67.34973145]
[454.94982910 73.46128082]
[440.78955078 78.43517303]
[426.27096558 82.23831940]
[411.49072266 84.84539795]
[396.54714966 86.23906708]
[381.53970337 86.41004944]
[366.56823730 85.35720825]
[351.73242188 83.08755493]
[337.13098145 79.61618042]
[322.86105347 74.96619415]
[309.01763916 69.16854858]
[295.69287109 62.26181412]
[282.97540283 54.29195786]
[270.94985962 45.31202698]
[259.69628906 35.38177109]
[249.28956604 24.56728363]
[239.79898071 12.94053173]
[227.44447327 21.44735909]
[221.34983826 35.03797531]
[205.59556580 36.49164963]
[193.30471802 45.09021378]
[181.07823181 53.78004074]
[168.85174561 62.46986389]
[156.62527466 71.15969086]
[144.39878845 79.84951019]
[143.45361328 83.24642181]
[140.81617737 86.35430908]
[136.64021301 88.38275909]
[131.42668152 88.63995361]
[118.82436371 96.77516937]
[115.67062378 110.91731262]
[103.49719238 118.77567291]
[89.31085205 115.82714081]
[76.70854187 123.96235657]
[64.10622406 132.09756470]
[56.70826340 146.08258057]
[41.81908417 146.48466492]
[29.21677208 154.61988831]
[23.70409775 161.90330505]
[16.36571693 162.78077698]
[3.64368033 170.72746277]
[-9.07835579 178.67414856]
[-21.80039215 186.62083435]
[-34.52243042 194.56752014]
[-27.53356361 207.84768677]
[-21.54456329 221.60774231]
[-16.58813858 235.77253723]
[-12.69135857 250.26467896]
[-9.87550926 265.00503540]
[-8.15596771 279.91311646]
[-7.54212570 294.90744019]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[76 203]
[77 202]
[78 201]
[79 200]
[80 199]
[81 197]
[82 196]
[84 194]
[85 193]
[86 192]
[89 189]
[90 188]
[91 184]
[92 183]
[93 182]
[94 181]
[95 180]
[97 179]
[99 177]
[100 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
