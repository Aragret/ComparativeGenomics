%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[-23.81620979 204.51850891]
[-20.47904205 219.15122986]
[-18.34568787 234.00724792]
[-17.43034554 248.98773193]
[-17.73910713 263.99298096]
[-19.26991653 278.92312622]
[-22.01258659 293.67883301]
[-25.94886589 308.16186523]
[-31.05255890 322.27587891]
[-37.28969955 335.92691040]
[-44.61878204 349.02413940]
[-52.99103165 361.48040771]
[-62.35072708 373.21279907]
[-72.63558197 384.14321899]
[-83.77716064 394.19897461]
[-95.70130157 403.31311035]
[-108.32866669 411.42498779]
[-121.57520294 418.48062134]
[-135.35276794 424.43304443]
[-149.56967163 429.24267578]
[-164.13130188 432.87747192]
[-178.94075012 435.31326294]
[-193.89945984 436.53381348]
[-208.90788269 436.53103638]
[-223.86614990 435.30493164]
[-238.67469788 432.86364746]
[-253.23497009 429.22344971]
[-267.45010376 424.40856934]
[-281.22546387 418.45104980]
[-294.46939087 411.39050293]
[-307.09371948 403.27392578]
[-319.01449585 394.15536499]
[-330.15234375 384.09548950]
[-340.43313599 373.16125488]
[-349.78848267 361.42538452]
[-358.15612793 348.96603394]
[-365.48034668 335.86608887]
[-371.71243286 322.21273804]
[-376.81088257 308.09686279]
[-380.74179077 293.61233521]
[-383.47900391 278.85565186]
[-385.00427246 263.92492676]
[-385.30749512 248.91955566]
[-384.38659668 233.93940735]
[-382.24774170 219.08418274]
[-378.90512085 204.45271301]
[-374.38104248 190.14237976]
[-368.70559692 176.24842834]
[-361.91653442 162.86331177]
[-354.05902100 150.07611084]
[-345.18539429 137.97190857]
[-335.35467529 126.63128662]
[-324.63229370 116.12969971]
[-313.08963013 106.53703308]
[-300.80343628 97.91713715]
[-287.85552979 90.32735443]
[-274.33209229 83.81822205]
[-260.32305908 78.43303680]
[-245.92172241 74.20764160]
[-231.22387695 71.17015839]
[-216.32736206 69.34080505]
[-201.33129883 68.73175049]
[-186.33549500 69.34705353]
[-171.43974304 71.18260956]
[-156.74316406 74.22621155]
[-142.34356689 78.45760345]
[-128.33680725 83.84861755]
[-114.81605530 90.36339569]
[-101.87131500 97.95855713]
[-89.58873749 106.58358002]
[-78.05004883 116.18105316]
[-67.33203888 126.68710327]
[-57.50604630 138.03182983]
[-48.63745499 150.13970947]
[-40.78528214 162.93017578]
[-27.40501022 156.15019226]
[-14.02473640 149.37019348]
[-0.64446342 142.59020996]
[12.73581028 135.81021118]
[26.11608315 129.03022766]
[39.49635696 122.25022888]
[47.35205841 109.59569550]
[63.15932083 110.25984192]
[76.53959656 103.47985077]
[89.91986847 96.69985962]
[103.03855896 89.42662811]
[115.87750244 81.67023468]
[127.35220337 72.00942993]
[137.18278503 60.67983627]
[147.01336670 49.35024261]
[142.11770630 34.85956573]
[145.11273193 19.96236420]
[155.09593201 8.63972855]
[169.31106567 3.86627889]
[183.90858459 6.82906485]
[193.73916626 -4.50052834]
[203.56974792 -15.83012199]
[213.40032959 -27.15971375]
[223.23091125 -38.48930740]
[212.94459534 -49.42469788]
[203.81739807 -61.34464645]
[195.94296265 -74.12683105]
[189.40208435 -87.64009094]
[184.26191711 -101.74575043]
[180.57518005 -116.29906464]
[178.37973022 -131.15069580]
[177.69805908 -146.14823914]
[178.53720093 -161.13780212]
[180.88851929 -175.96556091]
[184.72789001 -190.47935486]
[190.01591492 -204.53024292]
[196.69834900 -217.97406006]
[204.70658875 -230.67283630]
[213.95848083 -242.49627686]
[224.35906982 -253.32302856]
[235.80163574 -263.04202271]
[248.16876221 -271.55349731]
[261.33355713 -278.77011108]
[275.16088867 -284.61782837]
[289.50888062 -289.03665161]
[304.23031616 -291.98120117]
[319.17410278 -293.42126465]
[334.18692017 -293.34210205]
[349.11471558 -291.74450684]
[363.80429077 -288.64486694]
[378.10488892 -284.07498169]
[391.86978149 -278.08175659]
[404.95770264 -270.72668457]
[417.23437500 -262.08526611]
[428.57382202 -252.24613953]
[438.85964966 -241.31030273]
[447.98632812 -229.38995361]
[455.86019897 -216.60742188]
[462.40048218 -203.09387207]
[467.54000854 -188.98799133]
[471.22610474 -174.43450928]
[473.42092896 -159.58277893]
[474.10192871 -144.58520508]
[473.26211548 -129.59568787]
[470.91015625 -114.76803589]
[467.07015991 -100.25440979]
[461.78149414 -86.20374298]
[455.09848022 -72.76021576]
[447.08969116 -60.06179047]
[437.83728027 -48.23876572]
[427.43618774 -37.41246796]
[415.99319458 -27.69398689]
[403.62570190 -19.18305779]
[390.46060181 -11.96701336]
[376.63302612 -6.11990166]
[362.28482056 -1.70172429]
[347.56326294 1.24218094]
[332.61938477 2.68160486]
[317.60656738 2.60177660]
[302.67886353 1.00351548]
[287.98944092 -2.09677792]
[273.68902588 -6.66728973]
[259.92440796 -12.66111851]
[246.83679199 -20.01675797]
[234.56050110 -28.65872765]
[224.72991943 -17.32913399]
[214.89933777 -5.99954081]
[205.06875610 5.33005238]
[195.23817444 16.65964508]
[200.22926331 30.69370079]
[197.50746155 45.43981171]
[187.70527649 56.91952133]
[173.37908936 61.98477173]
[158.34295654 59.18082428]
[148.51237488 70.51041412]
[138.68179321 81.84001160]
[152.56716919 76.16581726]
[167.46208191 74.39338684]
[182.29125977 76.65068054]
[195.98417664 82.77473450]
[207.55233765 92.32344055]
[216.16059875 104.60749054]
[221.18754578 118.74006653]
[222.27026367 133.70094299]
[219.33061218 148.41006470]
[212.58078003 161.80558777]
[202.50807190 172.92045593]
[189.83961487 180.95228577]
[175.48999023 185.32127380]
[160.49507141 185.71197510]
[145.93737793 182.09622192]
[132.86784363 174.73503113]
[122.22996521 164.15980530]
[114.79169464 151.13397217]
[111.09001160 136.59790039]
[111.39215088 121.60093689]
[115.67628479 107.22574615]
[123.63389587 94.50917816]
[110.79495239 102.26557159]
[124.51033783 108.33913422]
[128.46078491 122.80958557]
[119.73418427 135.00984192]
[104.76345062 135.94633484]
[94.58444977 124.92871094]
[96.69985962 110.08013153]
[83.31958771 116.86012268]
[69.93930817 123.64011383]
[61.12656021 136.77960205]
[46.27634811 135.63050842]
[32.89607620 142.41049194]
[19.51580048 149.19049072]
[6.13552809 155.97047424]
[-7.24474525 162.75047302]
[-20.62501907 169.53045654]
[-34.00529099 176.31045532]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[75 210]
[76 209]
[77 208]
[78 207]
[79 206]
[80 205]
[81 204]
[83 202]
[84 201]
[85 200]
[86 194]
[87 193]
[88 171]
[89 170]
[90 169]
[95 164]
[96 163]
[97 162]
[98 161]
[99 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
