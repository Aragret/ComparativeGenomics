%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAUxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[68.26969147 714.75012207]
[59.52836609 727.03997803]
[48.00477600 736.76922607]
[34.42330551 743.32623291]
[19.63769722 746.29882812]
[4.57738400 745.50024414]
[-9.81092930 740.98059082]
[-22.62277985 733.02398682]
[-33.05280685 722.13061523]
[-40.44536591 708.98529053]
[-44.33575821 694.41418457]
[-44.47943115 679.33343506]
[-40.86734772 664.69091797]
[-33.72657013 651.40704346]
[-23.50597572 640.31695557]
[-10.84803677 632.11773682]
[3.45155740 627.32476807]
[18.49392319 626.23937988]
[21.15971756 611.47814941]
[23.82551384 596.71697998]
[26.49130821 581.95574951]
[29.15710449 567.19451904]
[31.82289886 552.43328857]
[26.47065544 538.53356934]
[36.53734970 526.32812500]
[39.20314407 511.56692505]
[41.86893845 496.80572510]
[27.21262169 490.44122314]
[14.48794842 480.76309204]
[4.43017149 468.32546997]
[-2.37835431 453.84216309]
[-5.54189110 438.14550781]
[-4.87431431 422.13876343]
[-0.41006023 406.74386597]
[7.59762716 392.84857178]
[18.69105721 381.25512695]
[32.23425293 372.63397217]
[47.44941330 367.48495483]
[63.46157074 366.10845947]
[65.68668365 351.27441406]
[59.92296600 337.54019165]
[69.62179565 325.04046631]
[71.84691620 310.20642090]
[73.74020386 295.32638550]
[75.30072784 280.40780640]
[76.86125183 265.48919678]
[78.42177582 250.57058716]
[72.05054474 237.10742188]
[81.18155670 224.18708801]
[74.81031799 210.72392273]
[83.94133759 197.80358887]
[85.50185394 182.88497925]
[71.83723450 171.69795227]
[67.58602142 154.39540100]
[74.63373566 137.86030579]
[90.33211517 128.78735352]
[91.44776917 113.82889557]
[83.77674103 98.91139984]
[93.37198639 85.15248871]
[94.26480103 70.17908478]
[95.15762329 55.20568085]
[96.05043793 40.23227310]
[80.76014709 28.71956062]
[75.53927612 10.46162891]
[82.32347107 -7.11401749]
[98.20248413 -16.97048569]
[98.42581177 -31.96882248]
[98.64913940 -46.96715927]
[88.21777344 -55.48778915]
[84.65046692 -68.27391052]
[89.03375244 -80.59741974]
[99.55624390 -88.03426361]
[92.23326111 -102.05868530]
[100.34606934 -114.54994965]
[100.79267120 -129.54330444]
[101.23928070 -144.53665161]
[101.68588257 -159.52999878]
[102.13249207 -174.52334595]
[99.25997925 -183.19436646]
[102.69901276 -189.73612976]
[103.36879730 -204.72117615]
[104.03858185 -219.70620728]
[104.59679413 -234.69581604]
[105.04339600 -249.68917847]
[92.93666077 -259.21456909]
[88.80845642 -273.87100220]
[94.04019165 -287.98104858]
[106.42900085 -296.20632935]
[106.87561035 -311.19967651]
[107.32221222 -326.19302368]
[104.44969940 -334.86404419]
[107.88873291 -341.40582275]
[108.55852509 -356.39086914]
[109.11672974 -371.38046265]
[109.56333923 -386.37380981]
[110.00994110 -401.36715698]
[110.45655060 -416.36050415]
[110.90315247 -431.35385132]
[96.81047058 -436.93704224]
[85.47930145 -447.00582886]
[78.27794647 -460.34436035]
[76.07600403 -475.34194946]
[79.13935852 -490.18753052]
[87.09811401 -503.08847046]
[98.99119568 -512.48687744]
[113.38246155 -517.24792480]
[128.53410339 -516.79656982]
[142.61647034 -511.18743896]
[153.92906189 -501.09777832]
[161.10583496 -487.74600220]
[163.28013611 -472.74438477]
[160.18942261 -457.90447998]
[152.20690918 -445.01821899]
[140.29652405 -435.64175415]
[125.89650726 -430.90725708]
[125.44989777 -415.91390991]
[125.00329590 -400.92056274]
[124.55668640 -385.92721558]
[124.11008453 -370.93386841]
[127.05303955 -364.15441895]
[123.54356384 -355.72106934]
[122.87377167 -340.73602295]
[122.31556702 -325.74642944]
[121.86895752 -310.75308228]
[121.42235565 -295.75973511]
[133.29962158 -286.81161499]
[137.68223572 -272.41522217]
[132.68898010 -258.03045654]
[120.03675079 -249.24256897]
[119.59014130 -234.24922180]
[122.53309631 -227.46977234]
[119.02362061 -219.03642273]
[118.35383606 -204.05139160]
[117.68405151 -189.06634521]
[117.12583923 -174.07673645]
[116.67922974 -159.08338928]
[116.23262787 -144.09004211]
[115.78601837 -129.09669495]
[115.33941650 -114.10334015]
[122.69435120 -101.15134430]
[114.54959106 -87.58765411]
[126.59474182 -75.85083008]
[126.42098999 -58.69609833]
[113.64747620 -46.74383163]
[113.42414856 -31.74549484]
[113.20082092 -16.74715805]
[123.23049927 -11.86286449]
[130.74743652 -3.55060530]
[134.63728333 7.01442814]
[134.30212402 18.31913757]
[129.75212097 28.72920227]
[121.60951996 36.72535706]
[111.02384186 41.12509155]
[110.13102722 56.09849548]
[109.23821259 71.07189941]
[108.34539032 86.04530334]
[115.53700256 95.20619965]
[114.75726318 106.82658386]
[106.40621948 114.94454193]
[105.29057312 129.90299988]
[115.81121063 136.65458679]
[122.42461395 147.17749023]
[123.92770386 159.44207764]
[120.09613800 171.11341858]
[111.71536255 179.99574280]
[100.42046356 184.44551086]
[98.85993958 199.36410522]
[105.11955261 213.89434814]
[96.10015869 225.74760437]
[102.35977936 240.27784729]
[93.34037781 252.13110352]
[91.77986145 267.04971313]
[90.21933746 281.96832275]
[88.65881348 296.88693237]
[90.78590393 301.65374756]
[90.86401367 306.29562378]
[89.28385162 310.05303955]
[86.68096161 312.43154907]
[84.45584106 327.26559448]
[90.06040192 342.06085205]
[80.52072906 353.49954224]
[78.29561615 368.33358765]
[91.41953278 373.40032959]
[103.19018555 381.09338379]
[113.08963776 391.07107544]
[120.68292999 402.89129639]
[125.63724518 416.03106689]
[127.73643494 429.90963745]
[126.89048004 443.91421509]
[123.13935089 457.42700195]
[116.65111542 469.85244751]
[107.71439362 480.64352417]
[96.72556305 489.32571411]
[84.17115021 495.51803589]
[70.60627747 498.94958496]
[56.63015747 499.47149658]
[53.96436310 514.23272705]
[51.29856491 528.99395752]
[56.46013641 543.94952393]
[46.58411789 555.09912109]
[43.91831970 569.86029053]
[41.25252533 584.62152100]
[38.58673096 599.38275146]
[35.92093658 614.14398193]
[33.25513840 628.90521240]
[46.96765137 635.18353271]
[58.68747330 644.67547607]
[67.67789459 656.78430176]
[73.37376404 670.74877930]
[75.41703033 685.69122314]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 205]
[19 204]
[20 203]
[21 202]
[22 201]
[23 200]
[25 198]
[26 197]
[27 196]
[39 182]
[40 181]
[42 179]
[43 178]
[44 174]
[45 173]
[46 172]
[47 171]
[49 169]
[51 167]
[52 166]
[56 160]
[57 159]
[59 156]
[60 155]
[61 154]
[62 153]
[66 146]
[67 145]
[68 144]
[72 141]
[74 139]
[75 138]
[76 137]
[77 136]
[78 135]
[80 134]
[81 133]
[82 132]
[83 130]
[84 129]
[88 125]
[89 124]
[90 123]
[92 122]
[93 121]
[94 119]
[95 118]
[96 117]
[97 116]
[98 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
