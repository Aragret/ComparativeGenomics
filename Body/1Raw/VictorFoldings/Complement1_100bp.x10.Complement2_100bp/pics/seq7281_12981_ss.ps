%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[77.44096375 618.40502930]
[68.19707489 630.23999023]
[57.64170837 640.92181396]
[45.91760635 650.30596924]
[33.18332672 658.26550293]
[19.61108589 664.69287109]
[5.38443613 669.50109863]
[-9.30422592 672.62512207]
[-24.25625229 674.02276611]
[-39.26943588 673.67510986]
[-54.14073944 671.58685303]
[-68.66904449 667.78619385]
[-82.65786743 662.32458496]
[-95.91803741 655.27581787]
[-108.27021790 646.73535156]
[-119.54735565 636.81854248]
[-129.59695435 625.65960693]
[-138.28308105 613.40942383]
[-145.48829651 600.23358154]
[-151.11512756 586.31042480]
[-155.08750916 571.82812500]
[-157.35169983 556.98260498]
[-157.87707520 541.97454834]
[-156.65653992 527.00701904]
[-153.70658875 512.28240967]
[-149.06713867 497.99984741]
[-142.80090332 484.35247803]
[-134.99266052 471.52487183]
[-125.74797821 459.69049072]
[-115.19189453 449.00939941]
[-103.46717072 439.62603760]
[-90.73236084 431.66732788]
[-77.15969086 425.24087524]
[-62.93272018 420.43362427]
[-48.24384689 417.31054688]
[-33.29172897 415.91390991]
[-18.27856827 416.26257324]
[-3.40740561 418.35183716]
[11.12064457 422.15344238]
[16.57600212 408.18066406]
[22.03135872 394.20785522]
[27.48671532 380.23504639]
[32.94207382 366.26226807]
[37.44970322 351.95556641]
[40.98937225 337.37921143]
[44.52904510 322.80282593]
[48.06871796 308.22644043]
[51.60839081 293.65008545]
[55.14806366 279.07369995]
[58.68773651 264.49731445]
[61.79184723 249.82202148]
[64.45764160 235.06080627]
[67.12343597 220.29959106]
[65.18456268 215.93498230]
[65.96693420 210.30604553]
[70.09462738 205.14138794]
[73.19873810 190.46607971]
[76.30284119 175.79077148]
[79.40695190 161.11547852]
[74.47093201 147.06254578]
[84.89656067 135.16226196]
[88.00067139 120.48695374]
[91.10478210 105.81165314]
[93.21940613 90.96145630]
[94.33505249 76.00299835]
[95.45070648 61.04454803]
[88.76124573 46.70712662]
[97.42372131 34.59057999]
[98.53937531 19.63212585]
[99.65502167 4.67367172]
[100.77066803 -10.28478146]
[101.88632202 -25.24323463]
[103.00196838 -40.20168686]
[88.17079926 -45.00660324]
[74.92384338 -53.21007919]
[64.02565002 -64.33375549]
[56.10403061 -77.73088074]
[51.61389160 -92.62390900]
[50.81113052 -108.14961243]
[53.73805618 -123.40916443]
[60.22115707 -137.52011108]
[69.88140106 -149.66746521]
[82.15639496 -159.15072632]
[96.33310699 -165.42430115]
[111.58930969 -168.12889099]
[112.48212433 -183.10229492]
[113.37493896 -198.07569885]
[106.47276306 -212.31193542]
[114.95388031 -224.55610657]
[100.89902496 -230.11653137]
[89.26673126 -239.73590088]
[81.18817139 -252.46246338]
[77.44388580 -267.04312134]
[78.38835907 -282.04678345]
[83.91655731 -296.00494385]
[93.47537231 -307.55523682]
[106.11899567 -315.57452393]
[120.60244751 -319.28808594]
[121.49526215 -334.26150513]
[122.38807678 -349.23489380]
[108.70013428 -355.84616089]
[98.58786011 -367.19561768]
[93.59331512 -381.55261230]
[94.47813416 -396.72775269]
[101.10737610 -410.40701294]
[112.47013855 -420.50433350]
[126.83367920 -425.47998047]
[142.00765991 -424.57519531]
[155.67817688 -417.92797852]
[165.76054382 -406.55194092]
[170.71730042 -392.18185425]
[169.79255676 -377.00909424]
[163.12734985 -363.34735107]
[151.73806763 -353.27993774]
[137.36148071 -348.34210205]
[136.46867371 -333.36868286]
[135.57585144 -318.39526367]
[149.51539612 -312.98693848]
[161.11648560 -303.52200317]
[169.23504639 -290.91769409]
[173.06539917 -276.40151978]
[172.22029114 -261.39190674]
[166.76989746 -247.35949707]
[157.23626709 -235.68310547]
[144.54331970 -227.51417542]
[129.92729187 -223.66329956]
[136.89332581 -210.49804688]
[128.34834290 -197.18287659]
[127.45552826 -182.20947266]
[126.56271362 -167.23606873]
[140.42738342 -163.15208435]
[153.03862000 -156.07524109]
[163.75958252 -146.35910034]
[172.04800415 -134.49055481]
[177.48362732 -121.06551361]
[179.78958130 -106.75893402]
[178.84638977 -92.29090881]
[174.69821167 -78.39040375]
[167.55079651 -65.75853729]
[157.76123047 -55.03323746]
[145.82012939 -46.75699234]
[132.32705688 -41.34943008]
[117.96041870 -39.08604050]
[116.84477234 -24.12758636]
[115.72912598 -9.16913319]
[114.61347198 5.78932047]
[113.49782562 20.74777412]
[112.38217926 35.70622635]
[119.15143585 48.97372055]
[110.40915680 62.16019821]
[109.29351044 77.11865234]
[108.17785645 92.07710266]
[118.34279633 81.04650879]
[132.83045959 77.15962982]
[147.15167236 81.62087250]
[156.86886597 93.04785919]
[158.97106934 107.89981842]
[152.80686951 121.57471466]
[140.28633118 129.83522034]
[125.28906250 130.12173462]
[112.46214294 122.34548950]
[105.78008270 108.91576385]
[102.67597198 123.59106445]
[99.57186127 138.26637268]
[104.28586578 153.36897278]
[94.08226013 164.21958923]
[90.97814941 178.89488220]
[87.87403870 193.57019043]
[84.76992798 208.24549866]
[81.88465118 222.96537781]
[79.21885681 237.72659302]
[76.55306244 252.48782349]
[78.16583252 256.51931763]
[78.38935089 260.45816040]
[77.42333984 263.87902832]
[75.58513641 266.46505737]
[73.26411438 268.03698730]
[69.72444153 282.61337280]
[66.18476868 297.18975830]
[62.64509583 311.76611328]
[59.10542297 326.34249878]
[55.56575012 340.91888428]
[52.02607727 355.49523926]
[63.85350800 346.26965332]
[78.78104401 344.79696655]
[92.18321991 351.53356934]
[99.90722656 364.39199829]
[99.55970001 379.38796997]
[91.24832153 391.87481689]
[77.54846954 397.98333740]
[62.70517731 395.82073975]
[51.31781387 386.05712891]
[46.91487122 371.71762085]
[41.45951462 385.69042969]
[36.00415802 399.66320801]
[30.54879951 413.63601685]
[25.09344292 427.60882568]
[38.35408020 434.65664673]
[50.70682907 443.19631958]
[61.98463058 453.11236572]
[72.03497314 464.27062988]
[80.72192383 476.52026367]
[87.92801666 489.69558716]
[93.55577850 503.61837769]
[97.52912140 518.10040283]
[99.79429626 532.94580078]
[100.32067871 547.95379639]
[99.10114288 562.92138672]
[96.15217590 577.64617920]
[91.51367950 591.92907715]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 197]
[40 196]
[41 195]
[42 194]
[43 193]
[44 183]
[45 182]
[46 181]
[47 180]
[48 179]
[49 178]
[50 177]
[51 172]
[52 171]
[53 170]
[56 169]
[57 168]
[58 167]
[59 166]
[61 164]
[62 163]
[63 162]
[64 152]
[65 151]
[66 150]
[68 148]
[69 147]
[70 146]
[71 145]
[72 144]
[73 143]
[85 130]
[86 129]
[87 128]
[89 126]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
