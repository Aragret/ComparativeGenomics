%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[120.22981262 426.12670898]
[118.93960571 441.24954224]
[112.27001190 454.88336182]
[101.12303925 465.18429565]
[87.00623322 470.75927734]
[71.82877350 470.85427856]
[57.64328003 465.45648193]
[46.36822510 455.29586792]
[39.52847672 441.74661255]
[38.04904556 426.64114380]
[42.13001633 412.02230835]
[51.21946716 399.86721802]
[64.08813477 391.81973267]
[78.99562073 388.96823120]
[81.66141510 374.20700073]
[76.30917358 360.30728149]
[86.37586975 348.10183716]
[89.04166412 333.34063721]
[91.70745850 318.57940674]
[94.37325287 303.81820679]
[97.03904724 289.05697632]
[99.70484161 274.29577637]
[102.37064362 259.53454590]
[103.59761810 244.58480835]
[103.37429047 229.58647156]
[103.15096283 214.58813477]
[102.92763519 199.58979797]
[95.00170135 186.97914124]
[102.53267670 173.06529236]
[102.30934906 158.06695557]
[102.08602142 143.06861877]
[99.97139740 128.21842957]
[95.99930573 113.75389862]
[86.18740082 103.79307556]
[89.53617096 90.21819305]
[85.56407928 75.75366974]
[81.59197998 61.28914642]
[77.61988068 46.82462311]
[62.15585709 47.76529694]
[46.83843994 45.47998428]
[32.33303833 40.07033157]
[19.26929665 31.77365303]
[8.21376610 20.95253754]
[-0.35467961 8.07898617]
[-6.06556988 -6.28616619]
[-8.67286491 -21.51768875]
[-8.06554890 -36.95316315]
[-4.27236032 -51.92179108]
[2.53956318 -65.77355957]
[12.07204628 -77.90744019]
[23.90892601 -87.79750061]
[37.53422546 -95.01567841]
[33.34721375 -109.41945648]
[29.16020203 -123.82324219]
[24.97319221 -138.22702026]
[20.78618050 -152.63079834]
[16.59916878 -167.03459167]
[12.41215801 -181.43836975]
[8.22514629 -195.84214783]
[5.61150455 -181.07160950]
[0.02390188 -167.15116882]
[-8.30007458 -154.67272949]
[-19.00648499 -144.16688538]
[-31.64008713 -136.08035278]
[-45.66369247 -130.75695801]
[-60.48101425 -128.42308044]
[-75.46200562 -129.17793274]
[-89.96967316 -132.98944092]
[-103.38714600 -139.69551086]
[-115.14389801 -149.01103210]
[-124.74003601 -160.53987122]
[-131.76751709 -173.79183960]
[-135.92753601 -188.20343018]
[-137.04319763 -203.16188049]
[-135.06707764 -218.03114319]
[-130.08319092 -232.17897034]
[-122.30345917 -245.00378418]
[-112.05867767 -255.96026611]
[-99.78446198 -264.58255005]
[-86.00272369 -270.50399780]
[-71.29945374 -273.47283936]
[-56.29986191 -273.36282349]
[-41.64172363 -270.17864990]
[-27.94831467 -264.05569458]
[-15.80188751 -255.25430298]
[-5.71891260 -244.14874268]
[1.87187541 -231.21119690]
[6.64775133 -216.99162292]
[8.65176487 -231.85716248]
[10.65577888 -246.72268677]
[12.65979290 -261.58822632]
[14.33133316 -276.49478149]
[15.66956711 -291.43496704]
[5.81170654 -303.49566650]
[7.38169479 -318.62808228]
[18.94047356 -327.95172119]
[20.27870750 -342.89190674]
[21.61694145 -357.83209229]
[7.55572987 -363.35104370]
[-4.38018751 -372.60903931]
[-13.22321796 -384.85559082]
[-18.25649643 -399.09786987]
[-19.07199669 -414.18136597]
[-15.60361290 -428.88330078]
[-8.13250828 -442.01187134]
[2.73566699 -452.50277710]
[16.11987877 -459.50561523]
[30.93512917 -462.45263672]
[45.98041153 -461.10501099]
[60.03607178 -455.57189941]
[71.96268463 -446.30194092]
[80.79340363 -434.04650879]
[85.81237030 -419.79919434]
[86.61272430 -404.71487427]
[83.12957001 -390.01644897]
[75.64527893 -376.89538574]
[64.76657104 -366.41537476]
[51.37533188 -359.42599487]
[36.55712891 -356.49383545]
[35.21889496 -341.55364990]
[33.88065720 -326.61346436]
[43.59844208 -315.38403320]
[42.45410919 -300.21350098]
[30.60975266 -290.09674072]
[29.27151871 -275.15655518]
[31.23962784 -272.23098755]
[31.88849831 -268.20681763]
[30.71720505 -263.71444702]
[27.52532005 -259.58419800]
[25.52130699 -244.71867371]
[23.51729393 -229.85314941]
[21.51327896 -214.98760986]
[22.62892914 -200.02915955]
[26.81593895 -185.62538147]
[31.00295067 -171.22160339]
[35.18996048 -156.81781006]
[39.37697220 -142.41403198]
[43.56398392 -128.01025391]
[47.75099564 -113.60646820]
[51.93800735 -99.20269012]
[66.42658997 -100.43082428]
[80.88039398 -98.79996490]
[94.74050903 -94.37122345]
[107.47062683 -87.31391907]
[118.57774353 -77.89913177]
[127.63128662 -66.48929596]
[134.27978516 -53.52420807]
[138.26451111 -39.50412750]
[139.42961121 -24.97043037]
[137.72807312 -10.48472691]
[133.22375488 3.39284372]
[126.08889008 16.12527657]
[116.59758759 27.21947670]
[105.11521912 36.24536133]
[92.08441162 42.85252762]
[96.05650330 57.31705093]
[100.02860260 71.78157043]
[104.00069427 86.24610138]
[113.81259918 96.20692444]
[110.46382904 109.78180695]
[114.43592072 124.24633026]
[117.80543518 109.62968445]
[125.68241882 96.86437225]
[137.23561096 87.29756165]
[151.24574280 81.93884277]
[166.23432922 81.35375214]
[180.61958313 85.60402679]
[192.88336182 94.24111938]
[201.73147583 106.35354614]
[206.23014832 120.66305542]
[205.90461731 135.65951538]
[200.78926086 149.76034546]
[191.42388916 161.47741699]
[178.79685974 169.57420349]
[164.24072266 173.19625854]
[149.29165649 171.96130371]
[135.52723694 165.99969482]
[124.40006256 155.94056702]
[117.08435822 142.84529114]
[117.30768585 157.84362793]
[117.53101349 172.84196472]
[125.47292328 186.52542114]
[117.92597198 199.36647034]
[118.14929962 214.36480713]
[118.37262726 229.36314392]
[118.59595490 244.36148071]
[126.25714111 231.46551514]
[138.45399475 222.73414612]
[153.13114929 219.63880920]
[167.81524658 222.70109558]
[180.03173828 231.40495300]
[187.72193909 244.28364563]
[189.58992004 259.16687012]
[185.32090759 273.54656982]
[175.63427734 284.99948120]
[162.16241455 291.59561157]
[147.17555237 292.22335815]
[133.19924927 286.77697754]
[122.58876038 276.17428589]
[117.13185883 262.20034790]
[114.46606445 276.96154785]
[111.80027008 291.72277832]
[109.13446808 306.48400879]
[106.46867371 321.24520874]
[103.80287933 336.00643921]
[101.13708496 350.76763916]
[106.29865265 365.72320557]
[96.42263794 376.87280273]
[93.75684357 391.63403320]
[106.72524261 399.51977539]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 209]
[15 208]
[17 206]
[18 205]
[19 204]
[20 203]
[21 202]
[22 201]
[23 200]
[24 186]
[25 185]
[26 184]
[27 183]
[29 181]
[30 180]
[31 179]
[32 161]
[33 160]
[35 158]
[36 157]
[37 156]
[38 155]
[52 140]
[53 139]
[54 138]
[55 137]
[56 136]
[57 135]
[58 134]
[59 133]
[88 132]
[89 131]
[90 130]
[91 129]
[92 125]
[93 124]
[96 121]
[97 120]
[98 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
