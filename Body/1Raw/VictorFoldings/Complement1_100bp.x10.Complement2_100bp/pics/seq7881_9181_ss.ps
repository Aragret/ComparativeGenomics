%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[60.43534851 425.92883301]
[62.39546967 410.91427612]
[69.12683868 397.35083008]
[79.89928436 386.70971680]
[93.54428864 380.14523315]
[91.76182556 365.25152588]
[89.97935486 350.35778809]
[88.19689178 335.46408081]
[84.28082275 329.19619751]
[86.50046539 320.33557129]
[84.93994141 305.41696167]
[81.85982513 301.76702881]
[81.03986359 296.14346313]
[83.56185913 290.03189087]
[82.44620514 275.07345581]
[74.03002167 287.48989868]
[60.27923965 293.48287964]
[45.45468140 291.19540405]
[34.14989853 281.33630371]
[29.86780548 266.96051025]
[33.93525314 252.52250671]
[45.09189606 242.49607849]
[59.88073349 239.98802185]
[73.71927643 245.77548218]
[82.31958771 258.06539917]
[83.21240234 243.09199524]
[84.10521698 228.11859131]
[77.13917542 214.95335388]
[85.68415833 201.63816833]
[86.57698059 186.66476440]
[87.46979523 171.69136047]
[88.36260986 156.71795654]
[85.62281036 149.85389709]
[89.38182068 141.52877808]
[90.49746704 126.57032776]
[91.61312103 111.61187744]
[85.71572876 98.93463135]
[93.42842865 87.27247620]
[94.54407501 72.31402588]
[95.65972900 57.35557175]
[96.77537537 42.39711761]
[97.89102173 27.43866348]
[95.99773407 12.55862808]
[91.17173004 -1.64382708]
[86.34573364 -15.84628296]
[81.51973724 -30.04873848]
[76.69374084 -44.25119400]
[71.86774445 -58.45365143]
[67.04174805 -72.65610504]
[65.09602356 -57.78283691]
[60.04030609 -43.66052246]
[52.10459900 -30.93163490]
[41.64992142 -20.17525673]
[29.15188789 -11.88072872]
[15.17908001 -6.42539692]
[0.36716634 -4.05744219]
[-14.61001015 -4.88459110]
[-29.07108879 -8.86921406]
[-42.35818481 -15.83003616]
[-53.86682892 -25.45038795]
[-63.07344818 -37.29260635]
[-69.55920410 -50.81795120]
[-73.02904510 -65.41110992]
[-73.32510376 -80.40818787]
[-70.43392944 -95.12691498]
[-64.48703003 -108.89769745]
[-55.75496674 -121.09405518]
[-44.63498306 -131.16113281]
[-31.63296318 -138.64093018]
[-17.34041405 -143.19319153]
[-2.40755248 -144.61080933]
[12.48627758 -142.82928467]
[26.66350555 -137.92967224]
[39.47916412 -130.13487244]
[50.35022354 -119.79949188]
[58.78212357 -107.39373016]
[64.39245605 -93.47778320]
[65.50810242 -108.43624115]
[66.62374878 -123.39469147]
[67.73940277 -138.35314941]
[68.85504913 -153.31159973]
[69.97069550 -168.27005005]
[71.08634949 -183.22850037]
[71.53295135 -198.22186279]
[71.30962372 -213.22019958]
[63.36771774 -226.90364075]
[70.91467285 -239.74470520]
[70.69134521 -254.74304199]
[68.33322906 -258.38903809]
[67.35623932 -262.21133423]
[67.64620209 -265.75411987]
[68.95265198 -268.64544678]
[70.92797089 -270.63449097]
[71.59775543 -285.61953735]
[72.26753998 -300.60455322]
[72.93732452 -315.58959961]
[58.59328842 -320.29611206]
[46.05160522 -328.69900513]
[36.24295807 -340.17477417]
[29.89521027 -353.87179565]
[27.47940636 -368.77368164]
[29.17481422 -383.77462769]
[34.85562515 -397.76144409]
[44.10028839 -409.69622803]
[56.22278214 -418.69332886]
[70.32353973 -424.08508301]
[85.35619354 -425.47143555]
[100.20521545 -422.74948120]
[113.76871490 -416.12118530]
[125.04018402 -406.07846069]
[133.18321228 -393.36651611]
[137.59353638 -378.92864990]
[137.94386292 -363.83627319]
[134.20820618 -349.20932007]
[126.66378784 -336.13323975]
[115.87043762 -325.57833862]
[102.62909698 -318.32785034]
[87.92236328 -314.91983032]
[87.25257874 -299.93478394]
[86.58279419 -284.94973755]
[85.91300964 -269.96469116]
[85.68968201 -254.96636963]
[85.91300964 -239.96803284]
[93.83894348 -227.35736084]
[86.30796051 -213.44352722]
[86.53128815 -198.44519043]
[97.72872162 -208.42604065]
[112.71131134 -207.70350647]
[122.89634705 -196.69145203]
[122.44937897 -181.69812012]
[111.62645721 -171.31234741]
[96.62743378 -171.48358154]
[86.04479980 -182.11285400]
[84.92915344 -167.15440369]
[83.81349945 -152.19595337]
[82.69785309 -137.23750305]
[81.58220673 -122.27904510]
[80.46655273 -107.32059479]
[79.35090637 -92.36213684]
[81.24420166 -77.48210144]
[86.07019806 -63.27964783]
[90.89619446 -49.07719040]
[95.72219086 -34.87473679]
[100.54818726 -20.67228127]
[105.37419128 -6.46982479]
[110.20018768 7.73263073]
[112.14590454 -7.14063931]
[117.20162201 -21.26295280]
[125.13732910 -33.99184036]
[135.59201050 -44.74821854]
[148.09004211 -53.04274750]
[162.06285095 -58.49807739]
[176.87477112 -60.86603165]
[191.85194397 -60.03888321]
[206.31301880 -56.05426025]
[219.60011292 -49.09343719]
[231.10876465 -39.47308731]
[240.31538391 -27.63086700]
[246.80113220 -14.10552216]
[250.27098083 0.48763415]
[250.56703186 15.48471165]
[247.67585754 30.20344353]
[241.72895813 43.97422791]
[232.99690247 56.17058182]
[221.87690735 66.23765564]
[208.87489319 73.71746063]
[194.58235168 78.26972198]
[179.64949036 79.68733215]
[164.75564575 77.90580750]
[150.57843018 73.00620270]
[137.76277161 65.21139526]
[126.89170837 54.87601852]
[118.45980835 42.47025299]
[112.84947968 28.55431175]
[111.73382568 43.51276398]
[110.61817932 58.47121811]
[109.50253296 73.42967224]
[108.38687897 88.38812256]
[114.28427124 101.06536865]
[106.57157135 112.72752380]
[105.45592499 127.68597412]
[104.34027100 142.64442444]
[103.33601379 157.61077881]
[102.44319916 172.58418274]
[101.55038452 187.55758667]
[100.65756989 202.53099060]
[107.55974579 216.76722717]
[99.07862854 229.01139832]
[98.18580627 243.98480225]
[97.29299164 258.95822144]
[97.40466309 273.95779419]
[98.52030945 288.91625977]
[99.85854340 303.85644531]
[101.41906738 318.77505493]
[103.09060669 333.68161011]
[104.87306976 348.57534790]
[106.65554047 363.46905518]
[108.43800354 378.36276245]
[123.24672699 381.52194214]
[136.22601318 389.32046509]
[145.96795654 400.91241455]
[151.41581726 415.04037476]
[151.97868347 430.17187500]
[147.59545898 444.66552734]
[138.74162292 456.94918823]
[126.37758636 465.69042969]
[111.84448242 469.94104004]
[96.71877289 469.23995972]
[82.64116669 463.66323853]
[71.13871002 453.81579590]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 198]
[6 197]
[7 196]
[8 195]
[10 194]
[11 193]
[14 192]
[15 191]
[25 190]
[26 189]
[27 188]
[29 186]
[30 185]
[31 184]
[32 183]
[34 182]
[35 181]
[36 180]
[38 178]
[39 177]
[40 176]
[41 175]
[42 174]
[43 146]
[44 145]
[45 144]
[46 143]
[47 142]
[48 141]
[49 140]
[77 139]
[78 138]
[79 137]
[80 136]
[81 135]
[82 134]
[83 133]
[84 126]
[85 125]
[87 123]
[88 122]
[93 121]
[94 120]
[95 119]
[96 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
