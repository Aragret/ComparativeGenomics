%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[93.28395844 564.62640381]
[77.49542999 563.92071533]
[66.89206696 552.20129395]
[67.76465607 536.42114258]
[79.59549713 525.94226074]
[80.26528168 510.95724487]
[80.93506622 495.97219849]
[81.60485077 480.98715210]
[82.27463531 466.00210571]
[82.72124481 451.00875854]
[82.94457245 436.01043701]
[83.16790009 421.01208496]
[83.39122772 406.01376343]
[83.61455536 391.01541138]
[83.83788300 376.01708984]
[70.09800720 370.17370605]
[59.61368942 359.48611450]
[54.00481796 345.56112671]
[54.15497589 330.50903320]
[60.07242203 316.62390137]
[70.88407898 306.03375244]
[84.96421051 300.37463379]
[85.18753815 285.37631226]
[85.41086578 270.37796021]
[77.86391449 257.53689575]
[85.80582428 243.85345459]
[86.02915192 228.85511780]
[86.25247955 213.85678101]
[86.47580719 198.85844421]
[86.69913483 183.86010742]
[84.84571075 181.75701904]
[83.71366882 178.79306030]
[83.63508606 175.23930359]
[84.83785248 171.48191833]
[87.40879822 167.98275757]
[88.52445221 153.02429199]
[81.75518799 139.75680542]
[90.49746704 126.57032776]
[91.61312103 111.61187744]
[85.71572876 98.93463135]
[93.42842865 87.27247620]
[92.20145416 72.32274628]
[81.42612457 60.73814392]
[85.94155121 46.54447937]
[82.40188599 31.96810341]
[78.86221313 17.39172745]
[75.32254028 2.81535196]
[72.02132416 17.44757652]
[65.96587372 31.17097092]
[57.38257980 43.47247314]
[46.59232712 53.89218903]
[33.99851990 62.04056168]
[20.07198524 67.61296844]
[5.33337927 70.40106964]
[-9.66628456 70.30063629]
[-24.36623383 67.31542206]
[-38.21689987 61.55702972]
[-50.70046234 53.24074554]
[-61.35021973 42.67747498]
[-69.76802063 30.26213646]
[-75.63916016 16.45888519]
[-78.74414062 1.78376603]
[-78.96687317 -13.21458054]
[-76.29904938 -27.97542953]
[-70.84038544 -41.94693756]
[-62.79497528 -54.60676956]
[-52.46358871 -65.48162842]
[-40.23248291 -74.16494751]
[-26.55892181 -80.33209229]
[-11.95410252 -83.75251007]
[3.03596425 -84.29831696]
[17.85086250 -81.94910431]
[31.93672752 -76.79270935]
[44.76694870 -69.02190399]
[55.86185837 -58.92720413]
[64.80666351 -46.88600540]
[71.26696014 -33.34848404]
[75.00028229 -18.82676888]
[78.10439301 -33.50207138]
[81.20850372 -48.17737198]
[84.31261444 -62.85267639]
[87.41672516 -77.52797699]
[90.52083588 -92.20327759]
[93.40610504 -106.92317200]
[96.07189941 -121.68438721]
[98.73769379 -136.44560242]
[93.57612610 -151.40116882]
[103.45214844 -162.55076599]
[106.11794281 -177.31198120]
[108.78373718 -192.07319641]
[111.44953156 -206.83441162]
[106.28796387 -221.78997803]
[116.16397858 -232.93957520]
[118.82978058 -247.70079041]
[121.49557495 -262.46200562]
[124.16136932 -277.22323608]
[126.82716370 -291.98443604]
[112.88851166 -297.67721558]
[100.43827820 -306.14392090]
[90.02071381 -317.01446533]
[82.09124756 -329.81356812]
[76.99652100 -343.98175049]
[74.95924377 -358.89962769]
[76.06848145 -373.91506958]
[80.27574158 -388.37164307]
[87.39710236 -401.63739014]
[97.12124634 -413.13235474]
[109.02308655 -422.35406494]
[122.58230591 -428.89938354]
[137.20617676 -432.48217773]
[152.25538635 -432.94577026]
[167.07205200 -430.26995850]
[181.00846863 -424.57171631]
[193.45536804 -416.10009766]
[203.86865234 -405.22549438]
[211.79307556 -392.42324829]
[216.88224792 -378.25308228]
[218.91365051 -363.33438110]
[217.79850769 -348.31939697]
[213.58555603 -333.86447144]
[206.45896912 -320.60153198]
[196.73030090 -309.11038208]
[184.82484436 -299.89334106]
[171.26304626 -293.35336304]
[156.63777161 -289.77633667]
[141.58837891 -289.31863403]
[138.92259216 -274.55743408]
[136.25679016 -259.79620361]
[133.59098816 -245.03498840]
[130.92520142 -230.27377319]
[136.27745056 -216.37403870]
[126.21074677 -204.16862488]
[123.54495239 -189.40740967]
[120.87915802 -174.64617920]
[118.21336365 -159.88496399]
[123.56560516 -145.98522949]
[113.49891663 -133.77981567]
[110.83312225 -119.01859283]
[108.16732025 -104.25737762]
[110.10619354 -99.89276886]
[109.32382965 -94.26383209]
[105.19613647 -89.09916687]
[102.09202576 -74.42386627]
[98.98791504 -59.74856567]
[95.88380432 -45.07326126]
[92.77969360 -30.39796066]
[89.67558289 -15.72265816]
[89.89891052 -0.72432047]
[93.43858337 13.85205460]
[96.97825623 28.42843056]
[100.51792908 43.00480652]
[111.04007721 53.54680634]
[106.77782440 68.78307343]
[110.19689178 54.17793655]
[117.38114166 41.01029968]
[127.81192017 30.23074341]
[140.73623657 22.61745644]
[155.22105408 18.72004318]
[170.22071838 18.81986618]
[184.65238953 22.90971756]
[197.47422791 30.69434547]
[207.76062012 41.61177444]
[214.76898193 54.87386322]
[217.99334717 69.52320862]
[217.20098877 84.50226593]
[212.44908142 98.72968292]
[204.08067322 111.17836761]
[192.69989014 120.94964600]
[179.12832642 127.33810425]
[164.34570312 129.88256836]
[149.41921997 128.39935303]
[135.42640686 122.99552917]
[123.37744141 114.06120300]
[114.14212799 102.24134827]
[108.38687897 88.38812256]
[114.28427124 101.06536865]
[106.57157135 112.72752380]
[105.45592499 127.68597412]
[112.14538574 142.02339172]
[103.48290253 154.13993835]
[102.36725616 169.09840393]
[101.69747162 184.08343506]
[101.47414398 199.08177185]
[101.25081635 214.08010864]
[101.02748871 229.07844543]
[100.80416107 244.07678223]
[108.33513641 257.99063110]
[100.40920258 270.60128784]
[100.18587494 285.59963989]
[99.96254730 300.59796143]
[113.86794281 306.67379761]
[124.35950470 317.58114624]
[129.86091614 331.63632202]
[129.56285095 346.68618774]
[123.54186249 360.43801880]
[112.74398804 370.80871582]
[98.83621979 376.24041748]
[98.61289215 391.23873901]
[98.38956451 406.23709106]
[98.16623688 421.23541260]
[97.94290924 436.23376465]
[97.71958160 451.23208618]
[100.60086823 457.18270874]
[100.11708832 462.84512329]
[97.25967407 466.67190552]
[96.58988953 481.65695190]
[95.92010498 496.64196777]
[95.25032043 511.62701416]
[94.58053589 526.61206055]
[105.42932892 538.10461426]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 209]
[6 208]
[7 207]
[8 206]
[9 205]
[10 202]
[11 201]
[12 200]
[13 199]
[14 198]
[15 197]
[22 190]
[23 189]
[24 188]
[26 186]
[27 185]
[28 184]
[29 183]
[30 182]
[35 181]
[36 180]
[38 178]
[39 177]
[41 175]
[42 153]
[44 151]
[45 150]
[46 149]
[47 148]
[78 147]
[79 146]
[80 145]
[81 144]
[82 143]
[83 142]
[84 139]
[85 138]
[86 137]
[88 135]
[89 134]
[90 133]
[91 132]
[93 130]
[94 129]
[95 128]
[96 127]
[97 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
