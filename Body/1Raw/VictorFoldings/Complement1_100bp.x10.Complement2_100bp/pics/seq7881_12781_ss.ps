%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[19.04757500 581.31903076]
[18.06905937 596.33093262]
[14.34854507 610.90734863]
[8.01274967 624.55181885]
[-0.72253078 636.79968262]
[-11.55977631 647.23370361]
[-24.12987328 655.49853516]
[-38.00469208 661.31262207]
[-52.71165848 664.47802734]
[-67.74985504 664.88690186]
[-82.60709381 662.52532959]
[-96.77734375 657.47375488]
[-109.77796173 649.90417480]
[-121.16616058 640.07440186]
[-130.55406189 628.31933594]
[-137.62190247 615.03930664]
[-142.12898254 600.68652344]
[-143.92176819 585.75000000]
[-142.93920898 570.73834229]
[-139.21475220 556.16290283]
[-132.87528992 542.52014160]
[-124.13670349 530.27465820]
[-113.29664612 519.84356689]
[-100.72431946 511.58212280]
[-86.84793854 505.77172852]
[-72.14012146 502.61029053]
[-57.10181046 502.20547485]
[-42.24520493 504.57104492]
[-37.20829010 490.44201660]
[-32.17137527 476.31298828]
[-40.72033310 464.14529419]
[-40.46212006 449.09878540]
[-31.28620529 436.94738770]
[-16.54424477 432.47741699]
[-11.50732899 418.34838867]
[-6.47041273 404.21936035]
[-1.43349659 390.09033203]
[3.60341954 375.96130371]
[8.64033604 361.83227539]
[7.92542744 354.47625732]
[13.85885334 347.53131104]
[19.10557175 333.47885132]
[24.35229111 319.42639160]
[29.59900856 305.37390137]
[34.84572601 291.32144165]
[40.09244537 277.26898193]
[44.70645523 262.99624634]
[48.67855072 248.53170776]
[52.65064621 234.06718445]
[56.62274170 219.60266113]
[60.59483719 205.13813782]
[64.56693268 190.67361450]
[63.02518845 186.15342712]
[64.30662537 180.61674500]
[68.87862396 175.84092712]
[73.27961731 161.50108337]
[77.68061829 147.16123962]
[74.01802063 132.72396851]
[85.46376801 121.80126953]
[89.86476898 107.46142578]
[93.94443512 93.02687073]
[97.70073700 78.50481415]
[93.66580200 63.20677567]
[104.34373474 52.82260132]
[108.10003662 38.30054474]
[111.20414734 23.62524033]
[113.64987183 8.82597065]
[116.09560394 -5.97330046]
[118.54132843 -20.77257156]
[116.85301971 -29.74962234]
[121.13521576 -35.77329254]
[123.80101013 -50.53451157]
[118.63944244 -65.49007416]
[128.51545715 -76.63967133]
[119.16263580 -64.91258240]
[106.54427338 -56.80227280]
[91.99203491 -53.16464615]
[77.04164886 -54.38359070]
[63.27085495 -60.33046722]
[52.13292694 -70.37768555]
[44.80327606 -83.46493530]
[42.05541992 -98.21109772]
[44.17934036 -113.05996704]
[50.95089722 -126.44451141]
[61.65547180 -136.95222473]
[75.16339111 -143.47421265]
[90.04911804 -145.32217407]
[104.74174500 -142.30110168]
[117.69070435 -134.72982788]
[127.52947998 -123.40734100]
[133.21974182 -109.52854919]
[134.16099548 -94.55792236]
[140.43835449 -108.18123627]
[146.71571350 -121.80455017]
[152.99307251 -135.42787170]
[159.27043152 -149.05117798]
[165.54779053 -162.67449951]
[171.82514954 -176.29782104]
[159.18626404 -184.42213440]
[147.80110168 -194.22642517]
[137.89129639 -205.51986694]
[129.64973450 -218.08262634]
[123.23685455 -231.67016602]
[118.77747345 -246.01799011]
[116.35839844 -260.84683228]
[116.02671814 -275.86801147]
[117.78888702 -290.78915405]
[121.61060333 -305.31985474]
[127.41748047 -319.17718506]
[135.09648132 -332.09149170]
[144.49813843 -343.81134033]
[155.43943787 -354.10864258]
[167.70739746 -362.78292847]
[181.06324768 -369.66534424]
[195.24697876 -374.62191772]
[209.98251343 -377.55621338]
[224.98303223 -378.41107178]
[239.95652771 -377.16986084]
[254.61154175 -373.85678101]
[268.66281128 -368.53625488]
[281.83682251 -361.31188965]
[293.87713623 -352.32427979]
[304.54940796 -341.74841309]
[313.64587402 -329.79013062]
[320.98947144 -316.68222046]
[326.43725586 -302.67980957]
[329.88317871 -288.05545044]
[331.26019287 -273.09384155]
[330.54147339 -258.08618164]
[327.74099731 -243.32463074]
[322.91329956 -229.09649658]
[316.15234375 -215.67877197]
[307.58972168 -203.33259583]
[297.39215088 -192.29832458]
[285.75805664 -182.79072571]
[272.91397095 -174.99487305]
[259.10986328 -169.06250000]
[244.61447144 -165.10910034]
[229.70991516 -163.21162415]
[214.68634033 -163.40701294]
[199.83616638 -165.69143677]
[185.44847107 -170.02046204]
[179.17111206 -156.39714050]
[172.89375305 -142.77381897]
[166.61639404 -129.15051270]
[160.33903503 -115.52719116]
[154.06166077 -101.90387726]
[147.78430176 -88.28055573]
[143.27667236 -73.97386932]
[148.62892151 -60.07413483]
[138.56222534 -47.86871338]
[135.89643860 -33.10749817]
[133.34060669 -18.32684326]
[130.89486694 -3.52757311]
[128.44914246 11.27169800]
[126.00341797 26.07096863]
[138.79640198 18.23899841]
[153.41206360 21.61274147]
[161.47792053 34.25956345]
[158.37345886 48.93479156]
[145.87705994 57.23178864]
[131.14723206 54.39765549]
[122.62210083 42.05684280]
[118.86579895 56.57890320]
[123.16940308 70.83822632]
[112.22279358 82.26110840]
[108.46649170 96.78317261]
[109.93298340 100.34992981]
[109.82017517 104.54577637]
[107.88237762 108.65089417]
[104.20461273 111.86241913]
[99.80361176 126.20227051]
[103.15142822 141.66522217]
[92.02046967 151.56224060]
[87.61946869 165.90208435]
[83.21846771 180.24192810]
[79.03145599 194.64570618]
[75.05936432 209.11022949]
[71.08726501 223.57475281]
[67.11517334 238.03927612]
[63.14307404 252.50379944]
[59.17097855 266.96832275]
[72.70933533 260.50976562]
[86.89470673 265.38574219]
[93.60107422 278.80307007]
[88.98672485 293.07568359]
[75.69496155 300.02761841]
[61.33992004 295.67645264]
[54.14491653 282.51568604]
[48.89819717 296.56814575]
[43.65147781 310.62063599]
[38.40476227 324.67309570]
[33.15804291 338.72555542]
[27.91132545 352.77804565]
[22.76936531 366.86917114]
[17.73244858 380.99819946]
[12.69553280 395.12722778]
[7.65861654 409.25625610]
[2.62170053 423.38531494]
[-2.41521573 437.51434326]
[6.17451763 450.30194092]
[5.59423733 465.51760864]
[-3.72409630 477.33422852]
[-18.04234505 481.34991455]
[-23.07926178 495.47894287]
[-28.11617661 509.60797119]
[-15.11351681 517.17407227]
[-3.72267032 527.00073242]
[5.66839504 538.75323486]
[12.73982334 552.03143311]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 206]
[29 205]
[30 204]
[34 200]
[35 199]
[36 198]
[37 197]
[38 196]
[39 195]
[41 194]
[42 193]
[43 192]
[44 191]
[45 190]
[46 189]
[47 182]
[48 181]
[49 180]
[50 179]
[51 178]
[52 177]
[55 176]
[56 175]
[57 174]
[59 172]
[60 171]
[61 167]
[62 166]
[64 164]
[65 163]
[66 156]
[67 155]
[68 154]
[69 153]
[71 152]
[72 151]
[74 149]
[92 148]
[93 147]
[94 146]
[95 145]
[96 144]
[97 143]
[98 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
