%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[158.84092712 516.85058594]
[153.33302307 502.87680054]
[149.61997986 488.32290649]
[147.76036072 473.41836548]
[147.78347778 458.39828491]
[149.68898010 443.49954224]
[153.44682312 428.95712280]
[158.99771118 415.00039673]
[166.25413513 401.84942627]
[175.10162354 389.71166992]
[185.40065002 378.77853394]
[196.98878479 369.22247314]
[209.68325806 361.19418335]
[223.28385925 354.82028198]
[218.66986084 340.54754639]
[214.05584717 326.27481079]
[209.44183350 312.00207520]
[204.82783508 297.72933960]
[200.21382141 283.45660400]
[193.83522034 269.88040161]
[185.79403687 257.21789551]
[177.75286865 244.55535889]
[169.71170044 231.89283752]
[157.97796631 228.95242310]
[151.17509460 218.46887207]
[153.40754700 205.76536560]
[145.55578613 192.98452759]
[133.86712646 189.86973572]
[127.22110748 179.28607178]
[129.64244080 166.61721802]
[121.98184204 153.72088623]
[114.32125092 140.82455444]
[109.99636078 138.79862976]
[106.89823914 134.03431702]
[106.63114166 127.42823792]
[99.35791016 114.30954742]
[87.47257233 106.94541931]
[87.52339935 92.96368408]
[80.25016785 79.84498596]
[72.97693634 66.72629547]
[69.17757416 64.62419128]
[66.51277161 61.71501160]
[65.09692383 58.45452118]
[64.88467407 55.28883743]
[65.68787384 52.60313034]
[59.20837784 39.07478714]
[58.94082642 54.07239914]
[54.85182953 68.50431061]
[47.21260071 81.41330719]
[36.52981949 91.94318390]
[23.51203537 99.39551544]
[9.02267456 103.27603912]
[-5.97723722 103.32735443]
[-20.49281120 99.54606628]
[-33.56127930 92.18297577]
[-44.31585693 81.72644043]
[-52.04323578 68.87001801]
[-56.23088074 54.46641922]
[-56.60104370 39.47098923]
[-53.12917328 24.87831497]
[-46.04554367 11.65627956]
[-35.81998825 0.68185306]
[-23.13073349 -7.31707096]
[-8.81940937 -11.80995274]
[6.16476583 -12.49879456]
[20.82794380 -9.33790874]
[34.19757080 -2.53694630]
[45.38688660 7.45301056]
[53.65599442 19.97397423]
[51.87352753 5.08025742]
[50.09106445 -9.81346035]
[48.30859756 -24.70717812]
[46.52613068 -39.60089493]
[37.20376587 -52.38385391]
[43.37384796 -65.94037628]
[41.59138107 -80.83409882]
[39.80891418 -95.72781372]
[30.48654747 -108.51077271]
[36.65663147 -122.06729889]
[34.87416458 -136.96101379]
[25.55179787 -149.74397278]
[31.72187996 -163.30049133]
[29.93941498 -178.19421387]
[14.92039967 -178.88635254]
[0.22018011 -182.04125977]
[-13.76021194 -187.57284546]
[-26.63938141 -195.33023071]
[-38.06597519 -205.10176086]
[-47.72826385 -216.62088013]
[-55.36265945 -229.57331848]
[-60.76088333 -243.60574341]
[-63.77567673 -258.33532715]
[-64.32478333 -273.36026001]
[-62.39323044 -288.27062988]
[-58.03371048 -302.65966797]
[-51.36515427 -316.13482666]
[-42.56948471 -328.32852173]
[-31.88665581 -338.90808105]
[-19.60809898 -347.58489990]
[-6.06878424 -354.12222290]
[8.36192513 -358.34176636]
[23.29034996 -360.12838745]
[38.30923080 -359.43334961]
[53.00884247 -356.27560425]
[66.98816681 -350.74133301]
[79.86584473 -342.98147583]
[91.29055023 -333.20773315]
[100.95062256 -321.68676758]
[108.58251953 -308.73284912]
[113.97804260 -294.69937134]
[116.98999786 -279.96920776]
[117.53620911 -264.94418335]
[115.60178375 -250.03417969]
[111.23949432 -235.64598083]
[104.56834412 -222.17210388]
[95.77032471 -209.98010254]
[85.08545685 -199.40260315]
[72.80522919 -190.72816467]
[59.26465225 -184.19343567]
[44.83312988 -179.97668457]
[46.61559677 -165.08296204]
[55.81047058 -153.36529541]
[49.76788330 -138.74348450]
[51.55034637 -123.84976196]
[60.74522018 -112.13210297]
[54.70263290 -97.51027679]
[56.48509598 -82.61656189]
[58.26756287 -67.72284698]
[67.46243286 -56.00518417]
[61.41984940 -41.38336182]
[63.20231247 -26.48964310]
[64.98477936 -11.59592628]
[66.76724243 3.29779148]
[68.54971313 18.19150925]
[72.73672485 32.59529114]
[79.21621704 46.12363815]
[86.09563446 59.45306396]
[93.36885834 72.57176208]
[100.64208984 85.69045258]
[112.52742767 93.05458069]
[112.47660065 107.03631592]
[119.74983215 120.15501404]
[127.21757507 133.16395569]
[134.87817383 146.06028748]
[142.53877258 158.95661926]
[158.80364990 167.58999634]
[158.33662415 185.13276672]
[166.18838501 197.91362000]
[182.58000183 206.30387878]
[182.37422180 223.85165405]
[190.41539001 236.51419067]
[198.45657349 249.17671204]
[206.49774170 261.83923340]
[205.43043518 246.87725830]
[209.21540833 232.36264038]
[217.45323181 219.82716370]
[229.27455139 210.59371948]
[243.43182373 205.63671875]
[258.43099976 205.47930908]
[272.68917847 210.13809204]
[284.70166016 219.12141418]
[293.20074463 231.48124695]
[297.28952026 245.91322327]
[296.53643799 260.89431763]
[291.02102661 274.84350586]
[281.32531738 286.28872681]
[268.47253418 294.02215576]
[253.81903076 297.22760010]
[238.91125488 295.56683350]
[225.32244873 289.21511841]
[214.48655701 278.84259033]
[219.10055542 293.11532593]
[223.71456909 307.38806152]
[228.32858276 321.66079712]
[232.94259644 335.93353271]
[237.55659485 350.20626831]
[252.31459045 347.41256714]
[267.30636597 346.49060059]
[282.29547119 347.45492554]
[297.04550171 350.29034424]
[311.32385254 354.95211792]
[324.90533447 361.36669922]
[337.57568359 369.43298340]
[349.13516235 379.02371216]
[359.40139771 389.98764038]
[368.21249390 402.15182495]
[375.42950439 415.32446289]
[380.93856812 429.29776001]
[384.65286255 443.85137939]
[386.51373291 458.75573730]
[386.49188232 473.77581787]
[384.58761597 488.67471313]
[380.83102417 503.21746826]
[375.28128052 517.17468262]
[368.02597046 530.32623291]
[359.17950439 542.46472168]
[348.88140869 553.39874268]
[337.29406738 562.95574951]
[324.60028076 570.98516846]
[311.00021362 577.36016846]
[296.70834351 581.98040771]
[281.95013428 584.77282715]
[266.95828247 585.69354248]
[251.96923828 584.72796631]
[237.21943665 581.89129639]
[222.94148254 577.22833252]
[209.36056519 570.81256104]
[196.69087219 562.74523926]
[185.13221741 553.15356445]
[174.86689758 542.18878174]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 176]
[15 175]
[16 174]
[17 173]
[18 172]
[19 171]
[20 153]
[21 152]
[22 151]
[23 150]
[26 148]
[27 147]
[30 145]
[31 144]
[32 143]
[35 142]
[36 141]
[38 139]
[39 138]
[40 137]
[45 136]
[46 135]
[69 134]
[70 133]
[71 132]
[72 131]
[73 130]
[75 128]
[76 127]
[77 126]
[79 124]
[80 123]
[82 121]
[83 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
