%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAAxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[26.02062607 331.11154175]
[25.18172836 346.09826660]
[23.00279236 360.94949341]
[19.50136375 375.54559326]
[14.70563412 389.76907349]
[8.65421581 403.50540161]
[1.39583325 416.64395142]
[-7.01107311 429.07901001]
[-16.49881363 440.71038818]
[-26.99099922 451.44445801]
[-38.40314865 461.19479370]
[-50.64337540 469.88287354]
[-63.61313248 477.43878174]
[-77.20798492 483.80166626]
[-91.31848145 488.92028809]
[-105.83100128 492.75341797]
[-120.62870026 495.27023315]
[-135.59243774 496.45043945]
[-150.60171509 496.28454590]
[-165.53572083 494.77386475]
[-180.27416992 491.93060303]
[-194.69842529 487.77761841]
[-208.69232178 482.34835815]
[-222.14321899 475.68655396]
[-234.94279480 467.84582520]
[-246.98799133 458.88928223]
[-258.18185425 448.88909912]
[-268.43420410 437.92572021]
[-277.66253662 426.08746338]
[-285.79254150 413.46966553]
[-292.75872803 400.17385864]
[-298.50506592 386.30712891]
[-302.98522949 371.98114014]
[-306.16317749 357.31118774]
[-308.01330566 342.41546631]
[-308.52075195 327.41381836]
[-307.68139648 312.42712402]
[-305.50201416 297.57595825]
[-302.00012207 282.97998047]
[-297.20397949 268.75665283]
[-291.15213013 255.02050781]
[-283.89334106 241.88215637]
[-275.48605347 229.44737244]
[-265.99795532 217.81628418]
[-255.50544739 207.08251953]
[-244.09300232 197.33253479]
[-231.85250854 188.64480591]
[-218.88252258 181.08930969]
[-205.28747559 174.72683716]
[-191.17681885 169.60865784]
[-176.66418457 165.77595520]
[-161.86640930 163.25961304]
[-146.90263367 162.07986450]
[-131.89335632 162.24621582]
[-116.95941162 163.75733948]
[-102.22103882 166.60105896]
[-87.79692078 170.75447083]
[-73.80317688 176.18415833]
[-60.35248947 182.84638977]
[-47.55315399 190.68751526]
[-35.50822449 199.64440918]
[-24.31468582 209.64494324]
[-13.35877609 199.39955139]
[-2.40286660 189.15415955]
[8.55304241 178.90876770]
[19.50895119 168.66337585]
[23.76802063 149.80212402]
[43.47120285 145.54219055]
[54.11721420 134.97514343]
[64.76322174 124.40808868]
[75.40923309 113.84104156]
[86.05523682 103.27399445]
[89.90921021 89.83380890]
[103.37771606 86.08000183]
[112.69259644 74.32274628]
[120.54434967 61.54190445]
[128.39610291 48.76106262]
[136.24786377 35.98022079]
[144.09962463 23.19937706]
[151.95137024 10.41853428]
[159.80313110 -2.36230826]
[167.65489197 -15.14315033]
[175.50663757 -27.92399406]
[183.35839844 -40.70483398]
[171.21810913 -49.52763748]
[159.79804993 -59.26469803]
[149.16687012 -69.85745239]
[139.38851929 -81.24218750]
[130.52182007 -93.35044861]
[122.62007904 -106.10939789]
[115.73083496 -119.44231415]
[109.89550781 -133.26899719]
[105.14920807 -147.50630188]
[101.52046204 -162.06860352]
[99.03110504 -176.86831665]
[97.69610596 -191.81643677]
[97.52349854 -206.82304382]
[98.51431274 -221.79791260]
[100.66259003 -236.65097046]
[103.95541382 -251.29287720]
[108.37298584 -265.63558960]
[113.88872528 -279.59283447]
[120.46947479 -293.08068848]
[128.07563782 -306.01803589]
[136.66148376 -318.32702637]
[146.17538452 -329.93365479]
[156.56008911 -340.76815796]
[167.75317383 -350.76531982]
[179.68730164 -359.86502075]
[192.29071045 -368.01257324]
[205.48759460 -375.15893555]
[219.19859314 -381.26113892]
[233.34123230 -386.28250122]
[247.83045959 -390.19281006]
[262.57913208 -392.96853638]
[277.49856567 -394.59301758]
[292.49902344 -395.05642700]
[307.49029541 -394.35604858]
[322.38217163 -392.49603271]
[337.08517456 -389.48760986]
[351.51080322 -385.34887695]
[365.57232666 -380.10467529]
[379.18521118 -373.78659058]
[392.26751709 -366.43258667]
[404.74063110 -358.08691406]
[416.52947998 -348.79977417]
[427.56320190 -338.62701416]
[437.77542114 -327.62979126]
[447.10473633 -315.87426758]
[455.49502563 -303.43112183]
[462.89581299 -290.37524414]
[469.26263428 -276.78509521]
[474.55715942 -262.74243164]
[478.74752808 -248.33171082]
[481.80859375 -233.63958740]
[483.72192383 -218.75445557]
[484.47601318 -203.76579285]
[484.06631470 -188.76377869]
[482.49526978 -173.83862305]
[479.77239990 -159.08009338]
[475.91400146 -144.57695007]
[470.94332886 -130.41642761]
[464.89025879 -116.68366241]
[457.79119873 -103.46126556]
[449.68887329 -90.82875824]
[440.63195801 -78.86211395]
[430.67492676 -67.63330078]
[419.87771606 -57.20985031]
[408.30520630 -47.65445328]
[396.02703857 -39.02457428]
[383.11703491 -31.37212181]
[369.65283203 -24.74311066]
[355.71542358 -19.17741585]
[341.38864136 -14.70850658]
[326.75860596 -11.36326122]
[311.91333008 -9.16179848]
[296.94210815 -8.11735916]
[281.93499756 -8.23622322]
[266.98217773 -9.51767635]
[252.17366028 -11.95401192]
[237.59844971 -15.53057766]
[223.34423828 -20.22586250]
[209.49673462 -26.01162910]
[196.13923645 -32.85308075]
[188.28747559 -20.07223701]
[180.43572998 -7.29139519]
[172.58396912 5.48944712]
[164.73222351 18.27029037]
[156.88046265 31.05113220]
[149.02870178 43.83197403]
[141.17695618 56.61281586]
[133.32519531 69.39366150]
[125.47344208 82.17449951]
[138.52906799 74.78865814]
[153.31187439 72.24529266]
[168.08518982 74.84320831]
[181.11344910 82.27719116]
[190.86613464 93.67391205]
[196.19749451 107.69448853]
[196.48120117 122.69180298]
[191.68392944 136.90399170]
[182.36924744 148.66140747]
[169.63145447 156.58280945]
[154.96696472 159.73759460]
[140.09854126 157.75515747]
[126.77292633 150.86836243]
[116.55558777 139.88629150]
[110.64685059 126.09909058]
[109.74086761 111.12648010]
[113.94476318 96.72600555]
[110.09078979 110.16619110]
[96.62228394 113.91999817]
[85.97628021 124.48705292]
[75.33026886 135.05409241]
[64.68425751 145.62113953]
[54.03824997 156.18818665]
[54.62646484 167.04925537]
[49.25085449 176.25158691]
[39.89469528 180.87875366]
[29.75434303 179.61929321]
[18.79843521 189.86468506]
[7.84252501 200.11007690]
[-3.11338449 210.35546875]
[-14.06929398 220.60086060]
[-4.84060240 232.43882751]
[3.28977895 245.05639648]
[10.25638771 258.35198975]
[16.00313187 272.21853638]
[20.48373985 286.54440308]
[23.66213799 301.21423340]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 204]
[63 203]
[64 202]
[65 201]
[66 200]
[68 196]
[69 195]
[70 194]
[71 193]
[72 192]
[74 190]
[75 173]
[76 172]
[77 171]
[78 170]
[79 169]
[80 168]
[81 167]
[82 166]
[83 165]
[84 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
