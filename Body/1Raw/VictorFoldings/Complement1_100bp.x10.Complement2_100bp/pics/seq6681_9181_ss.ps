%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[87.84381866 834.39770508]
[73.13099670 837.38287354]
[58.19404602 838.88830566]
[43.18143463 838.89898682]
[28.24236488 837.41479492]
[13.52530956 834.45050049]
[-0.82346207 830.03564453]
[-14.66134167 824.21398926]
[-27.85079765 817.04339600]
[-40.26074600 808.59521484]
[-51.76784134 798.95336914]
[-62.25772858 788.21368408]
[-71.62614441 776.48291016]
[-79.77997589 763.87756348]
[-86.63819122 750.52307129]
[-92.13262939 736.55200195]
[-96.20867920 722.10333252]
[-98.82582855 707.32061768]
[-99.95806122 692.35076904]
[-99.59413910 677.34252930]
[-97.73767090 662.44519043]
[-94.40710449 647.80664062]
[-89.63555145 633.57250977]
[-83.47042084 619.88421631]
[-75.97299194 606.87774658]
[-67.21778870 594.68249512]
[-57.29181290 583.41955566]
[-46.29372406 573.20092773]
[-34.33282471 564.12811279]
[-21.52799606 556.29138184]
[-8.00649738 549.76849365]
[6.09728336 544.62438965]
[20.64317322 540.91009521]
[35.48660660 538.66265869]
[50.48005295 537.90429688]
[65.47450256 538.64257812]
[67.69962311 523.80853271]
[69.92473602 508.97448730]
[72.03936005 494.12429810]
[74.04337311 479.25875854]
[76.04738617 464.39324951]
[78.05140686 449.52770996]
[72.08383942 435.88082886]
[81.59549713 423.23806763]
[83.59951019 408.37255859]
[85.60352325 393.50701904]
[87.60753632 378.64151001]
[89.61154938 363.77597046]
[91.61556244 348.91043091]
[92.84253693 333.96069336]
[93.28914642 318.96734619]
[93.73574829 303.97399902]
[94.18235779 288.98065186]
[94.62895966 273.98730469]
[95.07556915 258.99395752]
[95.52217102 244.00061035]
[86.38349152 229.01890564]
[96.19129944 213.43402100]
[96.41462708 198.43568420]
[96.19129944 183.43734741]
[95.52151489 168.45231628]
[94.85173035 153.46726990]
[94.18194580 138.48223877]
[93.51216125 123.49720001]
[92.84237671 108.51216125]
[81.94707489 118.82198334]
[66.94961548 118.54584503]
[56.44122314 107.84193420]
[56.44158173 92.84193420]
[66.95048523 82.13852692]
[81.94795990 81.86310577]
[92.84237671 92.17258453]
[93.51216125 77.18754578]
[94.18194580 62.20251083]
[94.85173035 47.21747208]
[95.29833221 32.22412109]
[95.52165985 17.22578430]
[95.74498749 2.22744656]
[95.96831512 -12.77089119]
[92.96702576 -21.39817619]
[96.30828094 -27.99042892]
[96.75489044 -42.98377991]
[97.20149231 -57.97712708]
[97.64810181 -72.97048187]
[97.64810181 -87.97048187]
[89.50334930 -101.53416443]
[96.85827637 -114.48616028]
[96.41167450 -129.47950745]
[95.96506500 -144.47285461]
[87.82031250 -158.03654480]
[95.17524719 -170.98854065]
[80.39356232 -173.89535522]
[66.62951660 -180.01898193]
[54.57352066 -189.05229187]
[44.83028793 -200.54216003]
[37.88853836 -213.91227722]
[34.09646988 -228.49198914]
[33.64428329 -243.54998779]
[36.55466843 -258.33096313]
[42.68164062 -272.09350586]
[51.71786880 -284.14733887]
[63.21010208 -293.88778687]
[76.58189392 -300.82629395]
[91.16252136 -304.61483765]
[106.22062683 -305.06335449]
[121.00090027 -302.14938354]
[134.76197815 -296.01907349]
[146.81359863 -286.97994995]
[156.55125427 -275.48535156]
[163.48652649 -262.11187744]
[167.27153015 -247.53033447]
[167.71641541 -232.47210693]
[164.79887390 -217.69255066]
[158.66523743 -203.93295288]
[149.62316895 -191.88352966]
[138.12620544 -182.14865112]
[124.75106049 -175.21662903]
[110.16859436 -171.43515015]
[118.28140259 -158.94389343]
[110.95841980 -144.91946411]
[111.40502167 -129.92611694]
[111.85163116 -114.93276978]
[119.96443939 -102.44150543]
[112.64144897 -88.41708374]
[114.58692932 -86.39885712]
[115.85018921 -83.48839569]
[116.08737946 -79.94168854]
[115.05358887 -76.13435364]
[112.64144897 -72.52387238]
[112.19483948 -57.53052139]
[111.74823761 -42.53717422]
[111.30162811 -27.54382324]
[110.96665192 -12.54756355]
[110.74332428 2.45077419]
[110.51999664 17.44911194]
[110.29666901 32.44744873]
[112.92124176 36.43752289]
[113.06713104 42.11869812]
[109.83676910 47.88725662]
[109.16698456 62.87229538]
[108.49720001 77.85733032]
[107.82741547 92.84236908]
[107.82741547 107.84236908]
[108.49720001 122.82740784]
[109.16698456 137.81245422]
[109.83676910 152.79748535]
[110.50655365 167.78253174]
[111.17633820 182.76756287]
[113.64196014 186.34173584]
[114.73232269 190.13325500]
[114.54796600 193.68310547]
[113.32818604 196.61204529]
[111.41296387 198.65901184]
[111.18963623 213.65734863]
[119.59675598 223.43913269]
[119.10197449 235.92668152]
[110.51552582 244.44720459]
[110.06891632 259.44055176]
[109.62231445 274.43389893]
[109.17570496 289.42727661]
[108.72910309 304.42062378]
[108.28249359 319.41397095]
[107.83588409 334.40731812]
[118.69320679 324.05749512]
[133.65464783 322.98254395]
[145.88002014 331.67391968]
[149.78007507 346.15805054]
[143.57174683 359.81295776]
[130.09339905 366.39581299]
[115.50714874 362.89706421]
[106.48108673 350.91445923]
[104.47707367 365.77996826]
[102.47306061 380.64550781]
[100.46904755 395.51104736]
[98.46503448 410.37655640]
[96.46102142 425.24209595]
[102.28524017 439.95227051]
[92.91693115 451.53173828]
[90.91291809 466.39724731]
[88.90890503 481.26278687]
[86.90489197 496.12829590]
[88.85972595 505.05111694]
[84.75878143 511.19961548]
[82.53366852 526.03363037]
[80.30854797 540.86767578]
[94.85970306 544.56127930]
[108.97078705 549.68530273]
[122.50154877 556.18896484]
[135.31750488 564.00750732]
[147.29129028 573.06329346]
[158.30390930 583.26629639]
[168.24588013 594.51507568]
[177.01841736 606.69787598]
[184.53433228 619.69366455]
[190.71891785 633.37316895]
[195.51071167 647.60052490]
[198.86209106 662.23425293]
[200.73974609 677.12902832]
[201.12501526 692.13665771]
[200.01406860 707.10815430]
[197.41793823 721.89459229]
[193.36244202 736.34906006]
[187.88787842 750.32788086]
[181.04866028 763.69213867]
[172.91275024 776.30902100]
[163.56103516 788.05310059]
[153.08642578 798.80773926]
[141.59304810 808.46594238]
[129.19512939 816.93176270]
[116.01588440 824.12103271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 185]
[37 184]
[38 183]
[39 181]
[40 180]
[41 179]
[42 178]
[44 176]
[45 175]
[46 174]
[47 173]
[48 172]
[49 171]
[50 163]
[51 162]
[52 161]
[53 160]
[54 159]
[55 158]
[56 157]
[58 154]
[59 153]
[60 148]
[61 147]
[62 146]
[63 145]
[64 144]
[65 143]
[72 142]
[73 141]
[74 140]
[75 139]
[76 136]
[77 135]
[78 134]
[79 133]
[81 132]
[82 131]
[83 130]
[84 129]
[85 124]
[87 122]
[88 121]
[89 120]
[91 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
