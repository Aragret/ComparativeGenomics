%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[63.18015289 760.01123047]
[48.26366806 761.65612793]
[33.26643753 762.19488525]
[18.27037048 761.62463379]
[3.35737348 759.94836426]
[-11.39110470 757.17535400]
[-25.89451027 753.32073975]
[-40.07363129 748.40545654]
[-53.85102844 742.45648193]
[-67.15144348 735.50622559]
[-79.90224457 727.59265137]
[-92.03379059 718.75903320]
[-103.47981262 709.05358887]
[-114.17780304 698.52929688]
[-124.06932831 687.24371338]
[-133.10037231 675.25836182]
[-141.22158813 662.63885498]
[-148.38865662 649.45397949]
[-154.56239319 635.77581787]
[-159.70912170 621.67907715]
[-163.80068970 607.24072266]
[-166.81477356 592.53961182]
[-168.73490906 577.65606689]
[-169.55059814 562.67132568]
[-169.25740051 547.66729736]
[-167.85691833 532.72589111]
[-165.35678101 517.92871094]
[-161.77066040 503.35656738]
[-157.11814880 489.08908081]
[-151.42463684 475.20413208]
[-144.72122192 461.77761841]
[-137.04454041 448.88281250]
[-128.43649292 436.59017944]
[-118.94411469 424.96685791]
[-108.61923981 414.07629395]
[-97.51825714 403.97802734]
[-85.70180511 394.72714233]
[-73.23441315 386.37420654]
[-60.18418503 378.96484375]
[-46.62239075 372.53952026]
[-32.62310028 367.13330078]
[-18.26277733 362.77572632]
[-3.61985016 359.49063110]
[11.22570324 357.29592896]
[26.19280243 356.20358276]
[41.19969940 356.21960449]
[56.16443253 357.34387207]
[58.38954926 342.50982666]
[60.61466599 327.67578125]
[62.83978271 312.84173584]
[65.06490326 298.00769043]
[67.29001617 283.17364502]
[54.40699387 273.41967773]
[48.16493607 258.41326904]
[50.35496521 242.21385193]
[60.47318268 229.25556946]
[75.83260345 223.13346863]
[69.86503601 209.48658752]
[79.37669373 196.84384155]
[81.38070679 181.97830200]
[83.38471985 167.11277771]
[85.38873291 152.24725342]
[79.42117310 138.60037231]
[88.93282318 125.95761871]
[90.93683624 111.09209442]
[85.80446625 98.08631134]
[94.19763184 86.90389252]
[96.20164490 72.03836823]
[83.64752960 80.24775696]
[68.93788910 77.31067657]
[60.49907684 64.90960693]
[63.16522598 50.14845657]
[75.40904236 41.48307419]
[90.21672058 43.87738800]
[99.10551453 55.95890427]
[102.42777252 41.33144379]
[105.75003052 26.70398331]
[109.07228851 12.07652378]
[112.39454651 -2.55093646]
[101.08247375 7.29979324]
[86.37982178 10.27167988]
[72.12983704 5.58787823]
[62.05743408 -5.52727652]
[58.79550934 -20.16831017]
[63.19672394 -34.50809097]
[74.11061096 -44.79823303]
[88.68431091 -48.34892273]
[103.10828400 -44.23201370]
[113.61214447 -33.52365875]
[117.45021057 -19.02388191]
[122.90557098 -32.99667740]
[128.36093140 -46.96947861]
[133.81628418 -60.94227600]
[131.62782288 -76.61138916]
[143.46406555 -85.65311432]
[148.91941833 -99.62591553]
[154.37477112 -113.59870911]
[159.83012390 -127.57151031]
[146.82681274 -135.10900879]
[135.12654114 -144.54322815]
[125.00360870 -155.65296936]
[116.69529724 -168.17784119]
[110.39637756 -181.82423401]
[106.25449371 -196.27226257]
[104.36673737 -211.18322754]
[104.77737427 -226.20759583]
[107.47676086 -240.99317932]
[112.40163422 -255.19340515]
[119.43653870 -268.47537231]
[128.41656494 -280.52774048]
[139.13122559 -291.06796265]
[151.32933044 -299.84899902]
[164.72494507 -306.66500854]
[179.00407410 -311.35617065]
[193.83197021 -313.81256104]
[208.86105347 -313.97659302]
[223.73902893 -311.84439087]
[238.11714172 -307.46597290]
[251.65832520 -300.94393921]
[264.04516602 -292.43121338]
[274.98730469 -282.12734985]
[284.22824097 -270.27383423]
[291.55133057 -257.14855957]
[296.78494263 -243.05920410]
[299.80636597 -228.33605957]
[300.54479980 -213.32421875]
[298.98294067 -198.37561035]
[295.15734863 -183.84063721]
[289.15777588 -170.06002808]
[281.12478638 -157.35681152]
[271.24673462 -146.02877808]
[259.75512695 -136.34146118]
[246.91941833 -128.52195740]
[233.04043579 -122.75357056]
[218.44354248 -119.17150116]
[203.47091675 -117.85973358]
[188.47352600 -118.84901428]
[173.80293274 -122.11614990]
[168.34756470 -108.14335632]
[162.89221191 -94.17055511]
[157.43685913 -80.19776154]
[160.01551819 -65.52806854]
[147.78907776 -55.48691940]
[142.33372498 -41.51411819]
[136.87837219 -27.54132271]
[131.42300415 -13.56852436]
[127.02201080 0.77132297]
[123.69975281 15.39878273]
[120.37748718 30.02624321]
[117.05522919 44.65370178]
[113.73297119 59.28116226]
[111.06717682 74.04238129]
[109.06316376 88.90790558]
[114.19553375 101.91368866]
[105.80236816 113.09610748]
[103.79835510 127.96163177]
[109.62257385 142.67179871]
[100.25426483 154.25126648]
[98.25024414 169.11679077]
[96.24623108 183.98231506]
[94.24221802 198.84785461]
[100.06644440 213.55801392]
[90.69812775 225.13748169]
[102.19781494 233.10115051]
[109.11141205 245.18495178]
[110.13920593 259.00241089]
[105.13747406 271.85275269]
[95.13543701 281.24893188]
[82.12406158 285.39877319]
[79.89894104 300.23281860]
[77.67382812 315.06686401]
[75.44870758 329.90090942]
[73.22359467 344.73495483]
[70.99847412 359.56900024]
[85.63446808 362.88485718]
[99.98561096 367.27255249]
[113.97351074 372.70816040]
[127.52178192 379.16195679]
[140.55642700 386.59872437]
[153.00624084 394.97784424]
[164.80323792 404.25350952]
[175.88298035 414.37509155]
[186.18495178 425.28729248]
[195.65290833 436.93054199]
[204.23510742 449.24124146]
[211.88470459 462.15213013]
[218.55989075 475.59271240]
[224.22422791 489.48956299]
[228.84677124 503.76678467]
[232.40226746 518.34643555]
[234.87132263 533.14880371]
[236.24041748 548.09313965]
[236.50210571 563.09777832]
[235.65493774 578.08074951]
[233.70355225 592.96020508]
[230.65858459 607.65496826]
[226.53669739 622.08471680]
[221.36038208 636.17059326]
[215.15792847 649.83575439]
[207.96319580 663.00555420]
[199.81547546 675.60803223]
[190.75927734 687.57434082]
[180.84407043 698.83911133]
[170.12400818 709.34088135]
[158.65762329 719.02227783]
[146.50755310 727.83044434]
[133.74015808 735.71716309]
[120.42517090 742.63946533]
[106.63530731 748.55950928]
[92.44589233 753.44500732]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 174]
[48 173]
[49 172]
[50 171]
[51 170]
[52 169]
[57 163]
[59 161]
[60 160]
[61 159]
[62 158]
[64 156]
[65 155]
[67 153]
[68 152]
[75 151]
[76 150]
[77 149]
[78 148]
[79 147]
[90 146]
[91 145]
[92 144]
[93 143]
[95 141]
[96 140]
[97 139]
[98 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
