%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[53.09485626 738.49340820]
[39.04884338 733.20928955]
[25.43699265 726.89031982]
[12.33542347 719.57177734]
[-0.18259101 711.29461670]
[-12.04704571 702.10510254]
[-23.19158745 692.05468750]
[-33.55389404 681.19946289]
[-43.07600784 669.60028076]
[-51.70468521 657.32189941]
[-59.39166641 644.43304443]
[-66.09396362 631.00579834]
[-71.77408600 617.11523438]
[-76.40028381 602.83898926]
[-79.94667053 588.25695801]
[-82.39341736 573.45068359]
[-83.72684479 558.50299072]
[-83.93949890 543.49743652]
[-83.03018188 528.51794434]
[-81.00397491 513.64825439]
[-77.87222290 498.97161865]
[-73.65243530 484.57003784]
[-68.36820221 470.52404785]
[-62.04908752 456.91226196]
[-54.73042679 443.81076050]
[-46.45314789 431.29281616]
[-37.26354218 419.42843628]
[-27.21300316 408.28399658]
[-16.35773468 397.92178345]
[-4.75844812 388.39978027]
[7.51998949 379.77120972]
[20.40891075 372.08432007]
[33.83623505 365.38214111]
[47.72687149 359.70214844]
[62.00313568 355.07608032]
[76.58518982 351.52981567]
[74.13945770 336.73056030]
[71.69373322 321.93127441]
[69.24800873 307.13201904]
[66.80227661 292.33273315]
[64.35655212 277.53347778]
[61.91082382 262.73419189]
[57.55467987 277.08773804]
[50.04693222 290.07363892]
[39.78141785 301.01068115]
[27.29664421 309.32516479]
[13.24754047 314.58090210]
[-1.62890708 316.50216675]
[-16.55230904 314.98822021]
[-30.73981476 310.11843872]
[-43.44717407 302.14831543]
[-54.00778580 291.49591064]
[-61.86766052 278.72006226]
[-66.61448669 264.49096680]
[-67.99925232 249.55500793]
[-65.94931793 234.69573975]
[-60.57221985 220.69264221]
[-52.15002823 208.28028870]
[-41.12455368 198.10980225]
[-28.07416916 190.71469116]
[-13.68347454 186.48292542]
[1.29262304 185.63645935]
[16.06850815 188.21971130]
[29.86906815 194.09718323]
[41.97035217 202.96052551]
[51.73755264 214.34480286]
[58.65829849 227.65281677]
[62.36976624 242.18809509]
[65.47387695 227.51280212]
[68.57798767 212.83749390]
[71.68209839 198.16220093]
[74.78620911 183.48689270]
[77.89031982 168.81158447]
[69.57579803 156.50694275]
[72.51474762 141.57987976]
[85.47737122 132.94227600]
[88.58148193 118.26697540]
[91.68559265 103.59166718]
[90.06130219 100.09394836]
[89.98663330 95.89724731]
[91.73920441 91.70970154]
[95.26989746 88.33715820]
[99.02619934 73.81509399]
[102.78249359 59.29303741]
[106.53879547 44.77097702]
[93.65881348 52.45902252]
[78.83087921 50.19354630]
[68.83412933 39.01030350]
[68.23893738 24.02211571]
[77.31742096 12.08138371]
[91.91902161 8.64724827]
[105.36808014 15.28975010]
[111.51601410 28.97387505]
[116.76273346 14.92140293]
[122.00945282 0.86893213]
[125.11356354 -13.80637074]
[126.00637817 -28.77977562]
[126.89919281 -43.75318146]
[127.79200745 -58.72658920]
[128.68482971 -73.69999695]
[114.99687958 -80.31123352]
[104.88460541 -91.66070557]
[99.89006805 -106.01769257]
[100.77487946 -121.19284821]
[107.40412140 -134.87208557]
[118.76688385 -144.96942139]
[133.13043213 -149.94506836]
[148.30441284 -149.04029846]
[161.97491455 -142.39306641]
[172.05729675 -131.01702881]
[177.01403809 -116.64695740]
[176.08930969 -101.47417450]
[169.42410278 -87.81242371]
[158.03480530 -77.74502563]
[143.65823364 -72.80717468]
[142.76541138 -57.83377075]
[141.87260437 -42.86036682]
[140.97978210 -27.88696098]
[140.08695984 -12.91355419]
[147.70126343 -25.83727455]
[158.60868835 -36.13426590]
[171.94905090 -42.99246216]
[186.67025757 -45.87100220]
[201.61134338 -44.54286957]
[215.59399414 -39.11280441]
[227.51545715 -30.00905037]
[236.43559265 -17.94956207]
[241.65089417 -3.88540125]
[242.75007629 11.07427120]
[239.64643860 25.74967384]
[232.58476257 38.98344421]
[222.12194824 49.73191071]
[209.08314514 57.14740753]
[194.49664307 60.64511108]
[179.51280212 59.94918442]
[165.31329346 55.11450958]
[153.01795959 46.52236557]
[143.59648132 34.85036850]
[137.79183960 21.01902199]
[136.06192017 6.11565018]
[130.81520081 20.16812134]
[125.56848907 34.22059250]
[121.06085968 48.52727890]
[117.30455780 63.04933929]
[113.54825592 77.57139587]
[109.79195404 92.09346008]
[106.36089325 106.69577789]
[103.25678253 121.37107849]
[100.15267181 136.04638672]
[108.50749969 149.19303894]
[105.15043640 164.03166199]
[92.56562042 171.91569519]
[89.46150970 186.59100342]
[86.35739899 201.26631165]
[83.25328827 215.94160461]
[80.14917755 230.61691284]
[77.04506683 245.29220581]
[76.71009064 260.28848267]
[79.15582275 275.08773804]
[81.60154724 289.88702393]
[84.04727936 304.68627930]
[86.49300385 319.48556519]
[88.93872833 334.28482056]
[91.38446045 349.08410645]
[106.33213806 347.75027466]
[121.33769989 347.53723145]
[136.31721497 348.44613647]
[151.18693542 350.47195435]
[165.86367798 353.60333252]
[180.26536560 357.82272339]
[194.31147766 363.10659790]
[207.92343140 369.42535400]
[221.02513123 376.74365234]
[233.54328918 385.02059937]
[245.40791321 394.20989990]
[256.55264282 404.26013184]
[266.91513062 415.11514282]
[276.43743896 426.71417236]
[285.06634521 438.99237061]
[292.75354004 451.88110352]
[299.45608521 465.30825806]
[305.13644409 479.19873047]
[309.76290894 493.47488403]
[313.30953979 508.05682373]
[315.75656128 522.86303711]
[317.09024048 537.81072998]
[317.30316162 552.81628418]
[316.39410400 567.79583740]
[314.36816406 582.66552734]
[311.23666382 597.34222412]
[307.01712036 611.74389648]
[301.73315430 625.78997803]
[295.41427612 639.40185547]
[288.09585571 652.50347900]
[279.81878662 665.02160645]
[270.62939453 676.88610840]
[260.57904053 688.03076172]
[249.72396851 698.39312744]
[238.12484741 707.91534424]
[225.84655762 716.54412842]
[212.95777893 724.23126221]
[199.53056335 730.93365479]
[185.64002991 736.61389160]
[171.36384583 741.24023438]
[156.78186035 744.78674316]
[141.97561646 747.23364258]
[127.02790833 748.56719971]
[112.02234650 748.77996826]
[97.04283905 747.87078857]
[82.17316437 745.84472656]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 164]
[37 163]
[38 162]
[39 161]
[40 160]
[41 159]
[42 158]
[68 157]
[69 156]
[70 155]
[71 154]
[72 153]
[73 152]
[76 149]
[77 148]
[78 147]
[82 146]
[83 145]
[84 144]
[85 143]
[93 142]
[94 141]
[95 140]
[96 119]
[97 118]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
