%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCGxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[83.25067139 658.51422119]
[68.59845734 655.24450684]
[54.34460831 650.53210449]
[40.63080597 644.42388916]
[27.59333992 636.98059082]
[15.36178875 628.27612305]
[4.05771589 618.39703369]
[-6.20652962 607.44146729]
[-15.32893372 595.51837158]
[-23.21883202 582.74621582]
[-29.79780960 569.25195312]
[-35.00048065 555.16961670]
[-38.77513123 540.63928223]
[-41.08425522 525.80535889]
[-41.90489960 510.81518555]
[-41.22890472 495.81777954]
[-39.06299210 480.96221924]
[-35.42868423 466.39614868]
[-30.36211014 452.26434326]
[-23.91361809 438.70721436]
[-16.14729881 425.85952759]
[-7.14034033 413.84896851]
[3.01773977 402.79492188]
[14.22598362 392.80725098]
[26.37299538 383.98519897]
[39.33804703 376.41644287]
[52.99228668 370.17620850]
[67.20001221 365.32653809]
[81.82000732 361.91561890]
[96.70697021 359.97735596]
[96.26036072 344.98400879]
[92.91910553 338.39175415]
[95.92040253 329.76446533]
[95.69707489 314.76614380]
[95.47374725 299.76779175]
[95.25041962 284.76947021]
[87.32448578 272.15881348]
[94.85546112 258.24496460]
[94.63213348 243.24662781]
[80.72436523 237.81492615]
[69.92649078 227.44422913]
[63.90550613 213.69241333]
[63.60744095 198.64253235]
[69.10885620 184.58735657]
[79.60041046 173.68000793]
[93.50580597 167.60418701]
[93.28247833 152.60585022]
[93.05915070 137.60751343]
[92.83582306 122.60916901]
[92.61249542 107.61083221]
[91.83117676 92.63119507]
[90.49293518 77.69100952]
[89.15470123 62.75082397]
[87.81646729 47.81064224]
[86.14492798 32.90406799]
[84.14091492 18.03853798]
[82.13690186 3.17300987]
[80.13288879 -11.69251823]
[78.12887573 -26.55804634]
[76.12486267 -41.42357635]
[73.35019684 -44.76351547]
[71.92591858 -48.44263840]
[71.79283905 -51.99477768]
[72.74645233 -55.02087021]
[74.47141266 -57.23054504]
[73.35576630 -72.18899536]
[72.24011230 -87.14745331]
[71.12446594 -102.10590363]
[70.00881958 -117.06436157]
[66.79554749 -131.71614075]
[61.54882812 -145.76861572]
[56.30210876 -159.82109070]
[51.05538940 -173.87356567]
[45.80867004 -187.92602539]
[40.56195450 -201.97850037]
[35.31523514 -216.03097534]
[20.52741814 -213.29389954]
[5.48897171 -213.16647339]
[-9.34310341 -215.65255737]
[-23.51807785 -220.67662048]
[-36.60519028 -228.08598328]
[-48.20673370 -237.65548706]
[-57.97015762 -249.09429932]
[-65.59875488 -262.05484009]
[-70.86071014 -276.14324951]
[-73.59610748 -290.93136597]
[-73.72183228 -305.96981812]
[-71.23406219 -320.80163574]
[-66.20838928 -334.97604370]
[-58.79753876 -348.06231689]
[-49.22672653 -359.66275024]
[-37.78679657 -369.42489624]
[-24.82539177 -377.05203247]
[-10.73639679 -382.31237793]
[4.05204010 -385.04608154]
[19.09051514 -385.17010498]
[33.92202759 -382.68066406]
[48.09585953 -377.65338135]
[61.18128967 -370.24105835]
[72.78066254 -360.66891479]
[82.54149628 -349.22787476]
[90.16715240 -336.26562500]
[95.42591095 -322.17602539]
[98.15795898 -307.38726807]
[98.28027344 -292.34878540]
[95.78913116 -277.51754761]
[90.76024628 -263.34429932]
[83.34642792 -250.25970459]
[73.77298737 -238.66140747]
[62.33084106 -228.90188599]
[49.36770630 -221.27769470]
[54.61442566 -207.22521973]
[59.86114502 -193.17274475]
[65.10786438 -179.12026978]
[70.35457611 -165.06781006]
[75.60129547 -151.01533508]
[80.84801483 -136.96286011]
[82.66408539 -151.85252380]
[88.73342133 -165.56977844]
[98.53095245 -176.92796326]
[111.20910645 -184.94447327]
[125.67109680 -188.92579651]
[140.66580200 -188.52751160]
[154.89605713 -183.78408813]
[167.13076782 -175.10585022]
[176.31153870 -163.24357605]
[181.64411926 -149.22346497]
[182.66720581 -134.25839233]
[179.29228210 -119.64299774]
[171.81132507 -106.64164734]
[160.87149048 -96.37908936]
[147.41918945 -89.74314117]
[132.61819458 -87.30788422]
[117.74893188 -89.28398132]
[104.09774017 -95.50048065]
[92.84558105 -105.41960144]
[84.96726990 -118.18000793]
[86.08292389 -103.22154999]
[87.19857025 -88.26309967]
[88.31421661 -73.30464935]
[89.42986298 -58.34619141]
[90.99038696 -43.42758942]
[92.99440002 -28.56205940]
[94.99842072 -13.69653225]
[97.00243378 1.16899621]
[99.00644684 16.03452492]
[101.01045990 30.90005302]
[103.57765198 33.31704712]
[105.10169983 37.09756470]
[104.95448303 41.73778534]
[102.75665283 46.47240448]
[104.09488678 61.41259003]
[105.43312073 76.35277557]
[106.77135468 91.29296112]
[118.24586487 81.63192749]
[132.98266602 84.42958832]
[140.11831665 97.62361145]
[134.39271545 111.48785400]
[120.02652740 115.80211639]
[107.61083221 107.38750458]
[107.83415985 122.38584137]
[108.05748749 137.38418579]
[108.28081512 152.38252258]
[108.50414276 167.38085938]
[122.58427429 173.03996277]
[133.39593506 183.63011169]
[139.31338501 197.51525879]
[139.46353149 212.56733704]
[133.85466003 226.49234009]
[123.37035370 237.17991638]
[109.63047028 243.02330017]
[109.85379791 258.02163696]
[117.79570770 271.70507812]
[110.24875641 284.54614258]
[110.47208405 299.54446411]
[110.69541168 314.54281616]
[110.91873932 329.54113770]
[111.25371552 344.53741455]
[111.70031738 359.53076172]
[126.67625427 360.57949829]
[141.47335815 363.11416626]
[155.94454956 367.10958862]
[169.94599915 372.52603149]
[183.33856201 379.30966187]
[195.98913574 387.39306641]
[207.77198792 396.69592285]
[218.57000732 407.12576294]
[228.27587891 418.57891846]
[236.79313660 430.94155884]
[244.03712463 444.09082031]
[249.93586731 457.89602661]
[254.43070984 472.21994019]
[257.47698975 486.92025757]
[259.04446411 501.85079956]
[259.11749268 516.86322021]
[257.69540405 531.80834961]
[254.79231262 546.53759766]
[250.43705750 560.90460205]
[244.67292786 574.76654053]
[237.55723572 587.98565674]
[229.16067505 600.43060303]
[219.56672668 611.97766113]
[208.87069702 622.51208496]
[197.17893982 631.92913818]
[184.60762024 640.13525391]
[171.28169250 647.04888916]
[157.33361816 652.60131836]
[142.90199280 656.73736572]
[128.13024902 659.41595459]
[113.16522980 660.61035156]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 179]
[31 178]
[33 177]
[34 176]
[35 175]
[36 174]
[38 172]
[39 171]
[46 164]
[47 163]
[48 162]
[49 161]
[50 160]
[51 154]
[52 153]
[53 152]
[54 151]
[55 147]
[56 146]
[57 145]
[58 144]
[59 143]
[60 142]
[65 141]
[66 140]
[67 139]
[68 138]
[69 137]
[70 117]
[71 116]
[72 115]
[73 114]
[74 113]
[75 112]
[76 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
