%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[119.69851685 673.00897217]
[108.18371582 663.37359619]
[97.75834656 652.56878662]
[88.54054260 640.71697998]
[80.63474274 627.95257568]
[74.13053131 614.42010498]
[69.10160828 600.27294922]
[65.60494995 585.67138672]
[63.68017197 570.78088379]
[63.34909058 555.77014160]
[64.61545563 540.80926514]
[67.46492004 526.06774902]
[71.86519623 511.71261597]
[77.76641846 497.90652466]
[85.10173035 484.80593872]
[93.78801727 472.55929565]
[103.72684479 461.30532837]
[114.80561829 451.17156982]
[126.89878845 442.27285767]
[139.86933899 434.70999146]
[153.57031250 428.56869507]
[167.84643555 423.91851807]
[164.74232483 409.24322510]
[154.53872681 398.39260864]
[159.25271606 383.29000854]
[156.14862061 368.61468506]
[143.56379700 360.73065186]
[140.20672607 345.89202881]
[148.56155396 332.74539185]
[145.45744324 318.07006836]
[142.35333252 303.39477539]
[139.24923706 288.71948242]
[136.14512634 274.04415894]
[122.20354462 260.64569092]
[128.74571228 241.57836914]
[125.20603943 227.00199890]
[121.66636658 212.42561340]
[117.80206299 197.93193054]
[113.61505127 183.52813721]
[109.42803955 169.12435913]
[106.53070831 167.11492920]
[104.46272278 163.60231018]
[103.91996765 158.99159241]
[105.39114380 153.98333740]
[101.85147095 139.40695190]
[91.32932281 128.86495972]
[95.59156799 113.62868500]
[86.08058929 103.38013458]
[89.83205414 89.91098022]
[86.29238129 75.33460999]
[77.58364868 87.54763031]
[62.81313705 90.16143799]
[50.44206619 81.67871857]
[47.55714417 66.95875549]
[55.81098938 54.43381882]
[70.47542572 51.27875900]
[83.14943695 59.30016327]
[80.92432404 44.46611786]
[78.69920349 29.63207436]
[76.47409058 14.79803085]
[74.24897003 -0.03601325]
[72.02385712 -14.87005711]
[69.79873657 -29.70410156]
[66.54571533 -33.78636932]
[65.30766296 -38.26080322]
[65.89654541 -42.29419327]
[67.82088470 -45.24872971]
[66.26036072 -60.16733551]
[64.69983673 -75.08593750]
[63.13931274 -90.00454712]
[61.57879257 -104.92314911]
[52.44777679 -117.84349060]
[58.81901169 -131.30664062]
[57.25848770 -146.22525024]
[48.12747574 -159.14558411]
[54.49871063 -172.60874939]
[52.93818665 -187.52735901]
[41.60878754 -177.69654846]
[26.83197403 -180.27449036]
[19.50066376 -193.36080933]
[25.01922417 -207.30877686]
[39.31958008 -211.83644104]
[51.85918045 -203.60762024]
[51.41257477 -218.60096741]
[40.19137955 -229.40478516]
[39.95204163 -244.61653137]
[50.32098389 -255.24765015]
[49.87437820 -270.24099731]
[49.42777252 -285.23434448]
[48.98116684 -300.22769165]
[35.10788345 -306.49615479]
[25.37165833 -318.11907959]
[21.66255379 -332.75680542]
[24.66432762 -347.49282837]
[33.72911072 -359.41503906]
[47.01631546 -366.19116211]
[46.56970978 -381.18450928]
[46.12310410 -396.17785645]
[32.15954971 -402.34078979]
[22.25936127 -413.95755005]
[18.38822556 -428.72158813]
[21.31475830 -443.70153809]
[30.45789719 -455.92306519]
[44.00226593 -462.95959473]
[59.25861359 -463.41403198]
[73.19779205 -457.19613647]
[83.05215454 -445.54049683]
[86.86511993 -430.76132202]
[83.87962341 -415.79302979]
[74.68842316 -403.60760498]
[61.11645508 -396.62445068]
[61.56306076 -381.63110352]
[62.00966644 -366.63775635]
[75.67663574 -360.66452026]
[85.43496704 -349.30300903]
[89.30852509 -334.77175903]
[86.47724915 -319.93923950]
[77.45009613 -307.75738525]
[63.97451401 -300.67431641]
[64.42111969 -285.68096924]
[64.86772919 -270.68759155]
[65.31433105 -255.69425964]
[76.29766846 -245.69915771]
[76.96417236 -230.50013733]
[66.40592194 -219.04757690]
[66.85253143 -204.05421448]
[67.85678864 -189.08787537]
[69.41731262 -174.16926575]
[78.43670654 -162.31600952]
[72.17709351 -147.78576660]
[73.73761749 -132.86717224]
[82.75701141 -121.01390839]
[76.49739838 -106.48367310]
[78.05792236 -91.56506348]
[79.61843872 -76.64646149]
[81.17896271 -61.72785950]
[82.73948669 -46.80925369]
[84.63278198 -31.92921829]
[86.85789490 -17.09517479]
[89.08301544 -2.26113033]
[91.30812836 12.57291317]
[93.53324890 27.40695763]
[95.75836945 42.24100113]
[97.98348236 57.07504272]
[100.86875916 71.79493713]
[104.40843201 86.37131500]
[113.91941071 96.61986542]
[110.16794586 110.08901978]
[120.94327545 121.67361450]
[116.42784119 135.86727905]
[119.96751404 150.44366455]
[123.83182526 164.93734741]
[128.01882935 179.34112549]
[132.20584106 193.74491882]
[135.97509766 197.35598755]
[137.79983521 201.62489319]
[137.75509644 205.70080566]
[136.24273682 208.88594055]
[139.78240967 223.46232605]
[143.32208252 238.03869629]
[152.92254639 243.15139771]
[158.01940918 252.51101685]
[157.14193726 262.91189575]
[150.82041931 270.94006348]
[153.92453003 285.61535645]
[157.02864075 300.29064941]
[160.13275146 314.96597290]
[163.23686218 329.64126587]
[176.19947815 338.27886963]
[179.13844299 353.20593262]
[170.82391357 365.51058960]
[173.92802429 380.18588257]
[184.35365295 392.08618164]
[179.41763306 406.13909912]
[182.52174377 420.81439209]
[197.45809937 419.28555298]
[212.47235107 419.35305786]
[227.39434814 421.01611328]
[242.05505371 424.25585938]
[256.28833008 429.03564453]
[269.93289185 435.30123901]
[282.83413696 442.98171997]
[294.84591675 451.99002075]
[305.83209229 462.22409058]
[315.66818237 473.56793213]
[324.24276733 485.89306641]
[331.45867920 499.05981445]
[337.23413086 512.91894531]
[341.50372314 527.31347656]
[344.21902466 542.08032227]
[345.34933472 557.05212402]
[344.88180542 572.05920410]
[342.82171631 586.93164062]
[339.19244385 601.50079346]
[334.03509521 615.60162354]
[327.40814209 629.07440186]
[319.38662720 641.76641846]
[310.06143188 653.53387451]
[299.53826904 664.24346924]
[287.93634033 673.77380371]
[275.38711548 682.01690674]
[262.03277588 688.87939453]
[248.02464294 694.28350830]
[233.52145386 698.16802979]
[218.68751526 700.48889160]
[203.69091797 701.21984863]
[188.70159912 700.35260010]
[173.88937378 697.89691162]
[159.42208862 693.88073730]
[145.46366882 688.34948730]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 175]
[23 174]
[25 172]
[26 171]
[29 168]
[30 167]
[31 166]
[32 165]
[33 164]
[35 160]
[36 159]
[37 158]
[38 154]
[39 153]
[40 152]
[44 151]
[45 150]
[47 148]
[49 146]
[50 145]
[57 144]
[58 143]
[59 142]
[60 141]
[61 140]
[62 139]
[63 138]
[67 137]
[68 136]
[69 135]
[70 134]
[71 133]
[73 131]
[74 130]
[76 128]
[77 127]
[83 126]
[84 125]
[87 122]
[88 121]
[89 120]
[90 119]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
