%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[59.22721863 876.15051270]
[44.22447586 875.99847412]
[29.25066376 875.05487061]
[14.34752083 873.32232666]
[-0.44341692 870.80566406]
[-15.08092499 867.51190186]
[-29.52420616 863.45025635]
[-43.73300171 858.63201904]
[-57.66771317 853.07061768]
[-71.28949738 846.78155518]
[-84.56038666 839.78234863]
[-97.44340515 832.09252930]
[-109.90262604 823.73352051]
[-121.90334320 814.72857666]
[-133.41209412 805.10290527]
[-144.39680481 794.88323975]
[-154.82685852 784.09808350]
[-164.67318726 772.77752686]
[-173.90834045 760.95306396]
[-182.50659180 748.65771484]
[-190.44396973 735.92578125]
[-197.69834900 722.79260254]
[-204.24949646 709.29492188]
[-210.07919312 695.47027588]
[-215.17114258 681.35729980]
[-219.51118469 666.99517822]
[-223.08721924 652.42407227]
[-225.88925171 637.68457031]
[-227.90951538 622.81768799]
[-229.14234924 607.86486816]
[-229.58432007 592.86785889]
[-229.23420715 577.86846924]
[-228.09298706 562.90838623]
[-226.16383362 548.02941895]
[-223.45211792 533.27301025]
[-219.96539307 518.68029785]
[-215.71340942 504.29187012]
[-210.70797729 490.14794922]
[-204.96308899 476.28787231]
[-198.49472046 462.75030518]
[-191.32092285 449.57296753]
[-183.46168518 436.79260254]
[-174.93890381 424.44482422]
[-165.77633667 412.56405640]
[-155.99952698 401.18338013]
[-145.63572693 390.33456421]
[-134.71382141 380.04782104]
[-123.26424408 370.35180664]
[-111.31890869 361.27355957]
[-98.91111755 352.83840942]
[-86.07544708 345.06982422]
[-72.84767151 337.98947144]
[-59.26465988 331.61706543]
[-45.36427689 325.97042847]
[-31.18525696 321.06524658]
[-16.76712418 316.91519165]
[-2.15006566 313.53186035]
[12.62518120 310.92465210]
[27.51743317 309.10086060]
[42.48518372 308.06555176]
[57.48671341 307.82162476]
[72.48020935 308.36972046]
[73.81844330 293.42953491]
[75.15667725 278.48934937]
[76.49491119 263.54916382]
[69.92393494 250.18237305]
[78.86157227 237.12751770]
[80.19980621 222.18733215]
[73.62882996 208.82052612]
[82.56646729 195.76567078]
[80.03224945 188.82307434]
[84.03746796 180.61357117]
[85.59799194 165.69496155]
[87.15851593 150.77636719]
[88.71903992 135.85775757]
[90.27956390 120.93914795]
[91.84008789 106.02054596]
[89.47990417 98.31327057]
[93.53651428 90.89202881]
[93.98311615 75.89868164]
[93.09030151 60.92527390]
[92.19748688 45.95186615]
[91.30467224 30.97846222]
[82.19329834 21.84907150]
[81.75793457 9.35930729]
[89.68687439 0.22374739]
[89.01708984 -14.76129150]
[88.34730530 -29.74633026]
[87.67752075 -44.73136902]
[87.00772858 -59.71640778]
[78.66194153 -73.15732574]
[85.82321930 -86.21739197]
[77.47742462 -99.65830994]
[84.63871002 -112.71837616]
[83.96892548 -127.70341492]
[83.29913330 -142.68846130]
[68.90625000 -147.50605774]
[57.22810364 -157.20066833]
[49.84406662 -170.46115112]
[47.75277328 -185.49414062]
[51.23704529 -200.26655579]
[59.82567215 -212.78054810]
[72.35710907 -221.34368896]
[87.13658142 -224.79791260]
[102.16529083 -222.67602539]
[115.41072845 -215.26502991]
[125.08155060 -203.56718445]
[129.86985779 -189.16452026]
[129.12808228 -174.00489807]
[122.95652771 -160.13851929]
[112.18985748 -149.44070435]
[98.28417206 -143.35824585]
[98.95396423 -128.37319946]
[99.62374878 -113.38816071]
[107.92163086 -101.01907349]
[100.80825806 -86.88717651]
[109.10614777 -74.51808929]
[101.99276733 -60.38619232]
[102.66255951 -45.40115356]
[103.33234406 -30.41611481]
[104.00212860 -15.43107700]
[104.67191315 -0.44603777]
[114.89957428 13.81446362]
[106.27807617 30.08564568]
[107.17089081 45.05905151]
[108.06370544 60.03245926]
[108.95652771 75.00586700]
[116.32083893 61.93808365]
[128.57604980 53.28881073]
[143.35585022 50.72808075]
[157.80650330 54.75032806]
[169.13781738 64.57892609]
[175.16189575 78.31612396]
[174.71556091 93.30947876]
[167.88502502 106.66401672]
[155.98913574 115.80118561]
[141.32479858 118.95673370]
[126.72349548 115.52137756]
[115.00447845 106.15843201]
[108.43022919 92.67449188]
[106.75868988 107.58106995]
[105.19816589 122.49967194]
[103.63764191 137.41827393]
[102.07711792 152.33688354]
[100.51659393 167.25549316]
[98.95607758 182.17408752]
[97.50665283 197.10389709]
[103.98191071 211.53933716]
[95.13999176 223.52555847]
[93.80175781 238.46574402]
[100.27701569 252.90118408]
[91.43509674 264.88742065]
[90.09686279 279.82760620]
[88.75862885 294.76779175]
[87.42039490 309.70797729]
[102.27262115 311.83322144]
[116.99199677 314.73934937]
[131.53747559 318.41824341]
[145.86854553 322.85964966]
[159.94523621 328.05117798]
[173.72831726 333.97839355]
[187.17938232 340.62478638]
[200.26094055 347.97177124]
[212.93652344 355.99890137]
[225.17080688 364.68380737]
[236.92970276 374.00228882]
[248.18040466 383.92834473]
[258.89160156 394.43435669]
[269.03338623 405.49099731]
[278.57751465 417.06747437]
[287.49740601 429.13150024]
[295.76818848 441.64947510]
[303.36679077 454.58651733]
[310.27203369 467.90652466]
[316.46472168 481.57241821]
[321.92752075 495.54608154]
[326.64523315 509.78854370]
[330.60473633 524.26019287]
[333.79498291 538.92059326]
[336.20706177 553.72894287]
[337.83428955 568.64398193]
[338.67205811 583.62408447]
[338.71810913 598.62750244]
[337.97225952 613.61248779]
[336.43664551 628.53717041]
[334.11547852 643.36004639]
[331.01528931 658.03979492]
[327.14465332 672.53540039]
[322.51443481 686.80657959]
[317.13748169 700.81353760]
[311.02880859 714.51715088]
[304.20544434 727.87927246]
[296.68637085 740.86273193]
[288.49258423 753.43121338]
[279.64691162 765.54974365]
[270.17398071 777.18457031]
[260.10025024 788.30328369]
[249.45375061 798.87481689]
[238.26416016 808.86975098]
[226.56269836 818.26019287]
[214.38194275 827.02001953]
[201.75585938 835.12481689]
[188.71963501 842.55194092]
[175.30961609 849.28076172]
[161.56315613 855.29248047]
[147.51860046 860.57031250]
[133.21507263 865.09960938]
[118.69243622 868.86767578]
[103.99118042 871.86407471]
[89.15227509 874.08044434]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 155]
[63 154]
[64 153]
[65 152]
[67 150]
[68 149]
[70 147]
[72 146]
[73 145]
[74 144]
[75 143]
[76 142]
[77 141]
[79 140]
[80 127]
[81 126]
[82 125]
[83 124]
[86 122]
[87 121]
[88 120]
[89 119]
[90 118]
[92 116]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
