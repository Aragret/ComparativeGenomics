%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[206.61761475 509.08914185]
[219.47979736 500.93536377]
[217.25468445 486.10131836]
[215.02955627 471.26727295]
[212.80444336 456.43322754]
[209.59117126 441.78143311]
[205.40415955 427.37765503]
[194.42178345 417.31600952]
[197.99945068 401.90460205]
[193.81243896 387.50082397]
[189.62542725 373.09704590]
[185.43841553 358.69326782]
[182.54107666 356.68383789]
[180.47308350 353.17123413]
[179.93034363 348.56051636]
[181.40151978 343.55224609]
[177.86184692 328.97586060]
[174.32217407 314.39947510]
[170.78250122 299.82312012]
[166.16848755 285.55038452]
[160.50570679 271.66033936]
[154.84291077 257.77032471]
[142.87336731 248.90582275]
[144.82829285 233.20585632]
[132.85874939 224.34136963]
[134.81367493 208.64140320]
[129.15089417 194.75137329]
[118.12651062 189.77246094]
[113.29507446 178.24679565]
[117.74964905 166.14225769]
[112.29428864 152.16946411]
[106.83893585 138.19667053]
[101.38357544 124.22386932]
[95.92822266 110.25106812]
[87.60652161 122.73102570]
[72.67456055 124.15811157]
[62.13962555 113.48032379]
[63.76767349 98.56893921]
[76.35857391 90.41606903]
[90.62957764 95.03057861]
[86.22857666 80.69072723]
[81.82758331 66.35088348]
[79.37933350 81.14973450]
[73.37447357 94.89533997]
[64.18020630 106.74714661]
[52.35874939 115.98041534]
[38.63299942 122.03052521]
[23.84228897 124.52750397]
[8.89107800 123.31867218]
[-5.30636311 118.47794342]
[-17.88185501 110.30133057]
[-28.06640244 99.28883362]
[-35.23721313 86.11387634]
[-38.95579529 71.58211517]
[-38.99475098 56.58216476]
[-35.35169983 42.03128433]
[-28.24941635 28.81926155]
[-18.12220573 17.75401688]
[-5.58935308 9.51219654]
[8.58275318 4.59778976]
[23.52748489 3.31131458]
[38.33096313 5.73143959]
[52.08795166 11.71017361]
[63.95720673 20.88191414]
[73.21291351 32.68580627]
[79.28910065 46.40006256]
[79.95888519 31.41502380]
[80.62866974 16.42998505]
[81.07527161 1.43663490]
[81.29859924 -13.56170273]
[81.52192688 -28.56003952]
[81.74525452 -43.55837631]
[81.96858215 -58.55671310]
[82.19190979 -73.55505371]
[81.85693359 -88.55130768]
[73.31195068 -101.86648560]
[80.27799225 -115.03172302]
[79.38517761 -130.00512695]
[78.49236298 -144.97853088]
[69.38099670 -154.10792542]
[68.94562531 -166.59768677]
[76.87456512 -175.73324585]
[68.52877045 -189.17416382]
[75.69004822 -202.23423767]
[75.02026367 -217.21926880]
[63.63946152 -227.85482788]
[63.17367172 -243.06132507]
[73.38317871 -253.84564209]
[72.71339417 -268.83068848]
[72.04360962 -283.81573486]
[71.37382507 -298.80075073]
[56.56834030 -301.61044312]
[42.81013870 -307.75930786]
[30.84118652 -316.91577148]
[21.30695343 -328.58605957]
[14.72160912 -342.14074707]
[11.44029236 -356.84890747]
[11.63996124 -371.91729736]
[15.30984592 -386.53335571]
[22.25203705 -399.90881348]
[32.09214783 -411.32232666]
[44.29951477 -420.15844727]
[58.21581268 -425.94061279]
[73.09054565 -428.35699463]
[88.12155151 -427.27731323]
[102.49820709 -422.75976562]
[115.44522095 -415.04797363]
[126.26435852 -404.55783081]
[134.37216187 -391.85507202]
[139.33139038 -377.62472534]
[140.87460327 -362.63421631]
[138.91856384 -347.69198608]
[133.56877136 -333.60379028]
[125.11373138 -321.12948608]
[114.00940704 -310.94171143]
[100.85464478 -303.58990479]
[86.35886383 -299.47055054]
[87.02864838 -284.48550415]
[87.69843292 -269.50045776]
[88.36821747 -254.51542664]
[99.49914551 -244.68496704]
[100.39186859 -229.49754333]
[90.00530243 -217.88905334]
[90.67508698 -202.90402222]
[98.97297668 -190.53492737]
[91.85960388 -176.40303040]
[102.08726501 -162.14253235]
[93.46576691 -145.87135315]
[94.35858154 -130.89794922]
[95.25140381 -115.92453766]
[103.73252106 -103.68036652]
[96.83034515 -89.44412994]
[108.58740997 -98.75923920]
[123.23437500 -95.52405548]
[129.97402954 -82.12342072]
[123.83817291 -68.43579102]
[109.34990692 -64.55117798]
[97.19024658 -73.33172607]
[96.96691895 -58.33338547]
[96.74359131 -43.33504868]
[96.52026367 -28.33671188]
[96.29693604 -13.33837509]
[96.07360840 1.65996265]
[98.69818115 5.65003633]
[98.84407043 11.33121014]
[95.61370850 17.09976959]
[94.94392395 32.08480835]
[94.27413940 47.06984711]
[96.16742706 61.94988251]
[100.56842804 76.28972626]
[104.96942139 90.62957764]
[109.90101624 104.79571533]
[115.35637665 118.76850891]
[120.81172943 132.74130249]
[126.26708984 146.71411133]
[131.72244263 160.68690491]
[146.36201477 171.85671997]
[143.04092407 189.08859253]
[148.70370483 202.97860718]
[161.07829285 212.83662415]
[158.71832275 227.54307556]
[171.09291077 237.40107727]
[168.73294067 252.10754395]
[174.39572144 265.99755859]
[180.05851746 279.88760376]
[183.68069458 265.33151245]
[194.02429199 254.46826172]
[208.38551331 250.13748169]
[223.01034546 253.47123718]
[234.07592773 263.59808350]
[238.68972778 277.87088013]
[235.64569092 292.55877686]
[225.73956299 303.82235718]
[211.56074524 308.71737671]
[196.81555176 305.96426392]
[185.35887146 296.28344727]
[188.89854431 310.85980225]
[192.43821716 325.43618774]
[195.97789001 340.01257324]
[199.84219360 354.50625610]
[204.02920532 368.91003418]
[208.21621704 383.31381226]
[212.40322876 397.71759033]
[223.68508911 408.80950928]
[219.80793762 423.19064331]
[223.99494934 437.59442139]
[229.65948486 423.70510864]
[241.87242126 414.99624634]
[256.84945679 414.16638184]
[269.94976807 421.47265625]
[277.11410522 434.65112305]
[276.12252808 449.61831665]
[267.28225708 461.73648071]
[253.33256531 467.25064087]
[238.59591675 464.45223999]
[227.63848877 454.20809937]
[229.86360168 469.04214478]
[232.08871460 483.87619019]
[234.31384277 498.71023560]
[249.00227356 502.73141479]
[260.78115845 512.38427734]
[267.60971069 525.99639893]
[268.30487061 541.20947266]
[262.74618530 555.38763428]
[251.89671326 566.07452393]
[237.63623047 571.41851807]
[222.43540955 570.49371338]
[208.92791748 563.46044922]
[199.45399475 551.53717041]
[195.65504456 536.78967285]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 199]
[3 198]
[4 197]
[5 196]
[6 186]
[7 185]
[9 183]
[10 182]
[11 181]
[12 180]
[16 179]
[17 178]
[18 177]
[19 176]
[20 165]
[21 164]
[22 163]
[24 161]
[26 159]
[27 158]
[30 156]
[31 155]
[32 154]
[33 153]
[34 152]
[40 151]
[41 150]
[42 149]
[66 148]
[67 147]
[68 146]
[69 143]
[70 142]
[71 141]
[72 140]
[73 139]
[74 138]
[75 132]
[77 130]
[78 129]
[79 128]
[82 126]
[84 124]
[85 123]
[88 120]
[89 119]
[90 118]
[91 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
