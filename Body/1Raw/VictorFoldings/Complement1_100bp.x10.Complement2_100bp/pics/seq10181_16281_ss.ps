%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[38.50449371 592.52941895]
[25.71475983 600.37615967]
[12.45755768 607.40441895]
[-1.21479118 613.58636475]
[-15.24832916 618.89758301]
[-29.58767128 623.31719971]
[-44.17622757 626.82769775]
[-58.95642090 629.41522217]
[-73.86992645 631.06958008]
[-88.85787964 631.78424072]
[-103.86112976 631.55639648]
[-118.82046509 630.38696289]
[-133.67686462 628.28051758]
[-148.37165833 625.24536133]
[-162.84689331 621.29351807]
[-177.04542542 616.44055176]
[-190.91120911 610.70562744]
[-204.38954163 604.11132812]
[-217.42721558 596.68377686]
[-229.97277832 588.45227051]
[-241.97673035 579.44921875]
[-253.39167786 569.71020508]
[-264.17257690 559.27368164]
[-274.27688599 548.18078613]
[-283.66473389 536.47528076]
[-292.29907227 524.20349121]
[-300.14578247 511.41369629]
[-307.17395020 498.15646362]
[-313.35583496 484.48406982]
[-318.66699219 470.45050049]
[-323.08651733 456.11114502]
[-326.59692383 441.52255249]
[-329.18435669 426.74234009]
[-330.83865356 411.82885742]
[-331.55325317 396.84088135]
[-331.32534790 381.83764648]
[-330.15579224 366.87829590]
[-328.04925537 352.02191162]
[-325.01403809 337.32711792]
[-321.06210327 322.85192871]
[-316.20907593 308.65341187]
[-310.47409058 294.78765869]
[-303.87976074 281.30935669]
[-296.45214844 268.27172852]
[-288.22052002 255.72621155]
[-279.21743774 243.72230530]
[-269.47836304 232.30740356]
[-259.04174805 221.52656555]
[-247.94880676 211.42230225]
[-236.24328613 202.03451538]
[-223.97140503 193.40025330]
[-211.18159485 185.55360413]
[-197.92431641 178.52549744]
[-184.25190735 172.34370422]
[-170.21830750 167.03260803]
[-155.87892151 162.61317444]
[-141.29032898 159.10284424]
[-126.51010895 156.51547241]
[-111.59658813 154.86125183]
[-96.60862732 154.14674377]
[-81.60537720 154.37474060]
[-66.64604950 155.54434204]
[-51.78968430 157.65095520]
[-37.09490967 160.68626404]
[-22.61971855 164.63825989]
[-8.42124081 169.49137878]
[5.44448900 175.22644043]
[18.92274857 181.82083130]
[31.96034431 189.24851990]
[40.18915176 176.70712280]
[48.41796112 164.16572571]
[56.64677048 151.62432861]
[64.87557983 139.08291626]
[73.10438538 126.54151917]
[74.14552307 119.22456360]
[81.55023193 113.87591553]
[89.96485138 101.45841980]
[91.52022552 93.54935455]
[98.59833527 88.91996765]
[100.16925049 73.17694092]
[113.80486298 67.18366241]
[122.40342712 54.89282608]
[131.00199890 42.60198975]
[139.50881958 30.24748039]
[147.92343140 17.82998466]
[156.33805847 5.41248941]
[144.61276245 -3.95509100]
[133.65858459 -14.21375561]
[123.54307556 -25.30025673]
[114.32859039 -37.14624023]
[106.07193756 -49.67866898]
[98.82403564 -62.82028198]
[92.62955475 -76.49004364]
[87.52669525 -90.60369110]
[83.54691315 -105.07419586]
[80.71475983 -119.81233978]
[79.04767609 -134.72726440]
[78.55595398 -149.72700500]
[79.24262238 -164.71908569]
[81.10344696 -179.61108398]
[84.12696075 -194.31117249]
[88.29450989 -208.72871399]
[93.58040619 -222.77482605]
[99.95206451 -236.36291504]
[107.37019348 -249.40919495]
[115.78906250 -261.83322144]
[125.15676117 -273.55844116]
[135.41554260 -284.51251221]
[146.50213623 -294.62789917]
[158.34822083 -303.84225464]
[170.88073730 -312.09878540]
[184.02241516 -319.34655762]
[197.69224548 -325.54089355]
[211.80593872 -330.64361572]
[226.27648926 -334.62326050]
[241.01466370 -337.45526123]
[255.92959595 -339.12219238]
[270.92935181 -339.61373901]
[285.92141724 -338.92694092]
[300.81338501 -337.06594849]
[315.51345825 -334.04229736]
[329.93096924 -329.87460327]
[343.97702026 -324.58856201]
[357.56503296 -318.21676636]
[370.61123657 -310.79849243]
[383.03518677 -302.37951660]
[394.76031494 -293.01168823]
[405.71426392 -282.75280762]
[415.82955933 -271.66607666]
[425.04379272 -259.81991577]
[433.30020142 -247.28732300]
[440.54782104 -234.14555359]
[446.74203491 -220.47566223]
[451.84460449 -206.36192322]
[455.82409668 -191.89132690]
[458.65594482 -177.15312195]
[460.32272339 -162.23817444]
[460.81411743 -147.23841858]
[460.12716675 -132.24635315]
[458.26602173 -117.35439301]
[455.24221802 -102.65437317]
[451.07437134 -88.23690796]
[445.78817749 -74.19090271]
[439.41625977 -60.60294724]
[431.99786377 -47.55681992]
[423.57873535 -35.13294983]
[414.21078491 -23.40794373]
[403.95178223 -12.45408535]
[392.86499023 -2.33891249]
[381.01870728 6.87521172]
[368.48602295 15.13147831]
[355.34420776 22.37898445]
[341.67425537 28.57304382]
[327.56045532 33.67547226]
[313.08981323 37.65480423]
[298.35159302 40.48651123]
[283.43661499 42.15313721]
[268.43685913 42.64439774]
[253.44479370 41.95726776]
[238.55285645 40.09598923]
[223.85287476 37.07202911]
[209.43545532 32.90403748]
[195.38949585 27.61771011]
[181.80160522 21.24563789]
[168.75555420 13.82710838]
[160.34092712 26.24460411]
[151.92631531 38.66209793]
[150.77635193 45.96274185]
[143.29283142 51.20055389]
[134.69425964 63.49139023]
[126.09570312 75.78222656]
[125.13980865 90.64613342]
[110.88917542 97.51853180]
[102.38234711 109.87303925]
[93.96772766 122.29053497]
[85.64578247 134.77032471]
[77.41697693 147.31172180]
[69.18817139 159.85313416]
[60.95936203 172.39453125]
[52.73055267 184.93592834]
[44.50174713 197.47732544]
[56.50578308 206.48025513]
[67.92083740 216.21914673]
[78.70185089 226.65557861]
[88.80628204 237.74836731]
[98.19424438 249.45373535]
[106.82869720 261.72546387]
[114.67556000 274.51516724]
[121.70386505 287.77233887]
[127.88587189 301.44464111]
[133.19718933 315.47814941]
[137.61685181 329.81747437]
[141.12741089 344.40600586]
[143.71501160 359.18618774]
[145.36946106 374.09970093]
[146.08421326 389.08764648]
[145.85644531 404.09088135]
[144.68707275 419.05023193]
[142.58068848 433.90664673]
[139.54562378 448.60147095]
[135.59384155 463.07672119]
[130.74095154 477.27526855]
[125.00610352 491.14108276]
[118.41192627 504.61944580]
[110.98444366 517.65716553]
[102.75296783 530.20275879]
[93.74998474 542.20678711]
[84.01103210 553.62176514]
[73.57453918 564.40270996]
[62.48169708 574.50708008]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 181]
[70 180]
[71 179]
[72 178]
[73 177]
[74 176]
[76 175]
[77 174]
[79 173]
[81 171]
[82 170]
[83 169]
[84 167]
[85 166]
[86 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
