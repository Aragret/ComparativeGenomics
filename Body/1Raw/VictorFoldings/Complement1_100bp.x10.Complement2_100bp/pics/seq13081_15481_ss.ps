%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCGxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[190.15898132 752.95672607]
[176.23242188 747.37664795]
[162.58940125 741.13525391]
[149.26132202 734.24688721]
[136.27883911 726.72747803]
[123.67179108 718.59423828]
[111.46919250 709.86590576]
[99.69910431 700.56262207]
[88.38859558 690.70562744]
[77.56369019 680.31774902]
[67.24928284 669.42279053]
[57.46908951 658.04589844]
[48.24561310 646.21313477]
[39.60006714 633.95172119]
[31.55233002 621.28991699]
[24.12091827 608.25683594]
[17.32292366 594.88250732]
[11.17397976 581.19757080]
[5.68823099 567.23352051]
[0.87829375 553.02258301]
[-3.24476838 538.59735107]
[-6.67147207 523.99102783]
[-9.39393616 509.23721313]
[-11.40589809 494.36984253]
[-12.70273113 479.42309570]
[-13.28145313 464.43136597]
[-13.14073086 449.42913818]
[-12.28088951 434.45089722]
[-10.70390701 419.53109741]
[-8.41341019 404.70407104]
[-5.41466618 390.00393677]
[-1.71457326 375.46444702]
[2.67835832 361.11911011]
[7.75402451 347.00088501]
[13.50075150 333.14224243]
[19.90532112 319.57504272]
[26.95300293 306.33053589]
[34.62758636 293.43914795]
[42.91142273 280.93057251]
[51.78545380 268.83352661]
[61.22927094 257.17584229]
[71.22115326 245.98437500]
[81.73812103 235.28482056]
[92.75598907 225.10182190]
[104.24939728 215.45877075]
[116.19193268 206.37786865]
[128.55612183 197.87998962]
[141.31350708 189.98468018]
[128.37539673 182.60534668]
[128.45082092 166.78431702]
[121.17759705 153.66563416]
[113.90436554 140.54693604]
[106.63114166 127.42823792]
[99.35791016 114.30954742]
[87.47257233 106.94541931]
[87.52339935 92.96368408]
[80.25016785 79.84498596]
[72.97693634 66.72629547]
[73.54745483 81.71543884]
[70.10655975 96.31544495]
[62.90263367 109.47232819]
[52.45574570 120.23627472]
[39.52006531 127.83023071]
[25.02942848 131.70597839]
[10.02992630 131.58372498]
[-4.39561319 127.47230530]
[-17.20579720 119.66851044]
[-27.47585106 108.73571777]
[-34.46436691 95.46316528]
[-37.66683578 80.80901337]
[-36.85207748 65.83115387]
[-32.07889938 51.61085892]
[-23.69189072 39.17470169]
[-12.29650974 29.42045593]
[1.28459692 23.05228996]
[16.07099915 20.52992821]
[30.99525261 22.03546143]
[44.97996521 27.46020508]
[57.01556778 36.41254044]
[66.23377991 48.24719620]
[63.34850693 33.52730560]
[60.46323395 18.80741501]
[55.21587753 32.85964584]
[44.76490784 43.61963272]
[30.87150383 49.27412415]
[15.87694168 48.87023926]
[2.30807185 42.47603989]
[-7.54851341 31.16906357]
[-12.03180695 16.85473251]
[-10.38629436 1.94526255]
[-2.88927293 -11.04683781]
[9.19587612 -19.93217278]
[23.83259392 -23.21340561]
[38.55433655 -20.33759117]
[50.88022995 -11.78935623]
[58.73370743 0.99233335]
[58.73370743 -14.00766659]
[58.73370743 -29.00766754]
[58.73370743 -44.00766754]
[44.95983887 -50.58362961]
[35.40991211 -62.49000168]
[31.98007202 -77.36276245]
[35.35131836 -92.24890900]
[44.85428238 -104.19279480]
[58.60214996 -110.82295227]
[73.86526489 -110.82295227]
[87.61312866 -104.19279480]
[97.11609650 -92.24890900]
[100.48734283 -77.36276245]
[97.05750275 -62.49000168]
[87.50757599 -50.58362961]
[73.73371124 -44.00766754]
[73.73371124 -29.00766754]
[73.73371124 -14.00766659]
[73.73371124 0.99233335]
[75.18312836 15.92214203]
[78.06839752 30.64203262]
[80.95367432 45.36192322]
[86.09563446 59.45306396]
[93.36885834 72.57176208]
[100.64208984 85.69045258]
[112.52742767 93.05458069]
[112.47660065 107.03631592]
[119.74983215 120.15501404]
[127.02306366 133.27371216]
[134.29629517 146.39239502]
[141.56951904 159.51109314]
[155.02786255 167.82876587]
[154.43220520 182.71145630]
[167.88708496 176.07421875]
[181.64472961 170.08970642]
[195.67346191 164.77169800]
[209.94105530 160.13240051]
[224.41465759 156.18251038]
[239.06098938 152.93107605]
[253.84637451 150.38562012]
[268.73678589 148.55197144]
[283.69799805 147.43434143]
[298.69558716 147.03530884]
[313.69506836 147.35580444]
[328.66192627 148.39508057]
[343.56173706 150.15074158]
[358.36026001 152.61875916]
[373.02340698 155.79344177]
[387.51748657 159.66751099]
[401.80917358 164.23202515]
[415.86557007 169.47651672]
[429.65435791 175.38891602]
[443.14379883 181.95561218]
[456.30291748 189.16149902]
[469.10140991 196.99002075]
[481.50982666 205.42315674]
[493.49966431 214.44151306]
[505.04330444 224.02435303]
[516.11425781 234.14964294]
[526.68701172 244.79406738]
[536.73724365 255.93316650]
[546.24188232 267.54132080]
[555.17901611 279.59182739]
[563.52807617 292.05694580]
[571.26995850 304.90802002]
[578.38677979 318.11553955]
[584.86218262 331.64904785]
[590.68127441 345.47747803]
[595.83062744 359.56896973]
[600.29846191 373.89117432]
[604.07452393 388.41110229]
[607.15008545 403.09536743]
[609.51800537 417.91021729]
[611.17297363 432.82156372]
[612.11108398 447.79510498]
[612.33020020 462.79641724]
[611.82983398 477.79095459]
[610.61114502 492.74426270]
[608.67694092 507.62194824]
[606.03161621 522.38983154]
[602.68133545 537.01385498]
[598.63372803 551.46044922]
[593.89813232 565.69635010]
[588.48541260 579.68884277]
[582.40808105 593.40570068]
[575.68011475 606.81542969]
[568.31689453 619.88714600]
[560.33544922 632.59082031]
[551.75408936 644.89727783]
[542.59259033 656.77807617]
[532.87200928 668.20599365]
[522.61468506 679.15466309]
[511.84420776 689.59899902]
[500.58538818 699.51495361]
[488.86410522 708.87963867]
[476.70727539 717.67163086]
[464.14291382 725.87066650]
[451.19989014 733.45782471]
[437.90802002 740.41571045]
[424.29779053 746.72833252]
[410.40060425 752.38116455]
[396.24832153 757.36120605]
[381.87359619 761.65698242]
[367.30941772 765.25860596]
[352.58932495 768.15777588]
[337.74713135 770.34790039]
[322.81701660 771.82391357]
[307.83331299 772.58239746]
[292.83044434 772.62158203]
[277.84298706 771.94146729]
[262.90536499 770.54351807]
[248.05194092 768.43096924]
[233.31687927 765.60876465]
[218.73408508 762.08331299]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 129]
[50 127]
[51 126]
[52 125]
[53 124]
[54 123]
[56 121]
[57 120]
[58 119]
[80 118]
[81 117]
[82 116]
[96 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
