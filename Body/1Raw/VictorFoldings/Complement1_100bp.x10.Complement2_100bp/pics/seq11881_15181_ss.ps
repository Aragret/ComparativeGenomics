%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGGxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[93.33580780 451.05505371]
[97.29585266 436.47784424]
[105.20353699 423.60751343]
[116.41781616 413.48739624]
[130.02960205 406.93789673]
[127.58386993 392.13864136]
[125.13814545 377.33935547]
[122.69241333 362.54010010]
[120.05439758 360.20062256]
[118.41846466 356.46713257]
[118.42745972 351.82458496]
[120.48334503 347.02664185]
[118.70088196 332.13290405]
[116.91841125 317.23919678]
[107.72354126 305.52154541]
[113.76612854 290.89971924]
[111.98366547 276.00601196]
[110.20119476 261.11227417]
[98.94121552 247.65197754]
[106.32863617 230.78462219]
[104.32462311 215.91909790]
[101.13719940 212.36250305]
[100.15016937 206.76582336]
[102.48908234 200.58189392]
[100.92855835 185.66328430]
[99.36803436 170.74467468]
[97.80751038 155.82608032]
[96.24698639 140.90747070]
[94.68647003 125.98886871]
[93.12594604 111.07025909]
[87.92318726 125.13906860]
[79.65581512 137.65507507]
[68.75751495 147.96173096]
[55.79999161 155.51835632]
[41.46297073 159.92854309]
[26.49854088 160.96095276]
[11.69170856 158.56143188]
[-2.18078852 152.85583496]
[-14.39122868 144.14347839]
[-24.29907608 132.88139343]
[-31.38458252 119.66036224]
[-35.27606201 105.17394257]
[-35.76937103 90.18205261]
[-32.83863068 75.47114563]
[-26.63758469 61.81292725]
[-17.49152756 49.92387390]
[-5.88024139 40.42766190]
[7.58716869 33.82244492]
[22.20422745 30.45472145]
[37.20415497 30.50115395]
[51.80008698 33.95930481]
[65.22634888 40.64776993]
[76.77861786 50.21568680]
[85.85089874 62.16113663]
[91.96726990 75.85748291]
[94.80699921 90.58790588]
[98.77909851 76.12338257]
[102.75119019 61.65885925]
[106.72328949 47.19433594]
[92.59436035 52.23153305]
[79.76703644 44.45594406]
[77.69714355 29.59944344]
[87.91053772 18.61369324]
[102.87827301 19.59697914]
[111.56641388 31.82283020]
[116.60332489 17.69379997]
[121.64024353 3.56477118]
[121.57421112 -5.56942034]
[126.85876465 -10.73617172]
[132.10548401 -24.78864288]
[137.35220337 -38.84111404]
[142.59892273 -52.89358521]
[147.84564209 -66.94606018]
[138.19065857 -78.80896759]
[135.78573608 -93.81273651]
[141.17787170 -107.91207123]
[152.82539368 -117.35617828]
[167.53712463 -119.68648529]
[172.78384399 -133.73895264]
[178.03056335 -147.79142761]
[183.27728271 -161.84390259]
[188.52400208 -175.89637756]
[193.66596985 -189.98751831]
[198.70288086 -204.11654663]
[190.09480286 -214.88185120]
[187.94717407 -228.38763428]
[192.71530151 -241.08938599]
[203.05363464 -249.70698547]
[216.19328308 -252.07164001]
[221.44000244 -266.12411499]
[226.68672180 -280.17657471]
[213.32263184 -287.02621460]
[200.84410095 -295.38101196]
[189.41992188 -305.12805176]
[179.20455933 -316.13543701]
[170.33619690 -328.25439453]
[162.93473816 -341.32095337]
[157.10031128 -355.15841675]
[152.91178894 -369.57968140]
[150.42584229 -384.38970947]
[149.67607117 -399.38818359]
[150.67262268 -414.37228394]
[153.40202332 -429.13937378]
[157.82736206 -443.48974609]
[163.88879395 -457.22930908]
[171.50433350 -470.17227173]
[180.57098389 -482.14358521]
[190.96615601 -492.98132324]
[202.54924011 -502.53897095]
[215.16360474 -510.68725586]
[228.63864136 -517.31597900]
[242.79212952 -522.33544922]
[257.43264771 -525.67785645]
[272.36221313 -527.29797363]
[287.37890625 -527.17388916]
[302.27966309 -525.30725098]
[316.86294556 -521.72332764]
[330.93151855 -516.47058105]
[344.29516602 -509.62005615]
[356.77313232 -501.26440430]
[368.19665527 -491.51660156]
[378.41128540 -480.50851440]
[387.27883911 -468.38900757]
[394.67944336 -455.32192993]
[400.51293945 -441.48406982]
[404.70050049 -427.06253052]
[407.18545532 -412.25234985]
[407.93423462 -397.25381470]
[406.93667603 -382.26977539]
[404.20626831 -367.50286865]
[399.77996826 -353.15280151]
[393.71765137 -339.41363525]
[386.10122681 -326.47119141]
[377.03378296 -314.50048828]
[366.63787842 -303.66342163]
[355.05416870 -294.10656738]
[342.43927002 -285.95910645]
[328.96377563 -279.33129883]
[314.80996704 -274.31274414]
[300.16921997 -270.97134399]
[285.23953247 -269.35223389]
[270.22286987 -269.47732544]
[255.32223511 -271.34497070]
[240.73919678 -274.92987061]
[235.49247742 -260.87738037]
[230.24575806 -246.82492065]
[239.74612427 -233.43759155]
[239.39135742 -216.85940552]
[229.12322998 -203.62812805]
[212.83190918 -199.07962036]
[207.79499817 -184.95059204]
[208.50990295 -177.59460449]
[202.57647705 -170.64965820]
[197.32975769 -156.59718323]
[192.08303833 -142.54470825]
[186.83631897 -128.49223328]
[181.58959961 -114.43976593]
[191.17425537 -103.03800964]
[193.78230286 -88.27135468]
[188.61470032 -74.08818817]
[176.96519470 -64.33186340]
[161.89810181 -61.69933701]
[156.65138245 -47.64686584]
[151.40466309 -33.59439468]
[146.15795898 -19.54192543]
[140.91123962 -5.48945332]
[135.76927185 8.60168743]
[130.73236084 22.73071671]
[125.69544220 36.85974503]
[121.18781281 51.16643143]
[117.21571350 65.63095856]
[113.24362183 80.09548187]
[109.27152252 94.56000519]
[108.04454803 109.50973511]
[109.60507202 124.42834473]
[111.16559601 139.34695435]
[112.72612000 154.26554871]
[114.28664398 169.18415833]
[115.84716034 184.10276794]
[117.40768433 199.02136230]
[119.19015503 213.91508484]
[121.19416809 228.78060913]
[130.95930481 237.20704651]
[132.32241821 249.62983704]
[125.09491730 259.32980347]
[126.87738037 274.22354126]
[128.65985107 289.11724854]
[137.98220825 301.90020752]
[131.81213379 315.45672607]
[133.59458923 330.35046387]
[135.37705994 345.24417114]
[137.49168396 360.09436035]
[139.93740845 374.89364624]
[142.38314819 389.69290161]
[144.82887268 404.49218750]
[159.82411194 406.31408691]
[173.69810486 412.28811646]
[185.32615662 421.92996216]
[193.76560974 434.45800781]
[198.33233643 448.85668945]
[198.65612793 463.95874023]
[194.71072388 478.53991699]
[186.81597900 491.41815186]
[175.61186218 501.54953003]
[162.00666809 508.11270142]
[147.10330200 510.57565308]
[132.10989380 508.73867798]
[118.24190521 502.75070190]
[106.62355042 493.09719849]
[98.19667816 480.56066895]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 195]
[6 194]
[7 193]
[8 192]
[12 191]
[13 190]
[14 189]
[16 187]
[17 186]
[18 185]
[20 182]
[21 181]
[24 180]
[25 179]
[26 178]
[27 177]
[28 176]
[29 175]
[30 174]
[56 173]
[57 172]
[58 171]
[59 170]
[65 169]
[66 168]
[67 167]
[69 166]
[70 165]
[71 164]
[72 163]
[73 162]
[78 157]
[79 156]
[80 155]
[81 154]
[82 153]
[83 151]
[84 150]
[89 146]
[90 145]
[91 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
