%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[164.53358459 380.65930176]
[166.35272217 365.75646973]
[169.69456482 351.11965942]
[174.52368164 336.90405273]
[180.78889465 323.26031494]
[188.42378235 310.33312988]
[197.34741211 298.25946045]
[207.46517944 287.16735840]
[218.66984558 277.17437744]
[209.88923645 265.01293945]
[201.10862732 252.85148621]
[192.32803345 240.69001770]
[178.45912170 246.32400513]
[163.63589478 248.47616577]
[148.71936035 247.01708984]
[134.57702637 242.02726746]
[122.03240967 233.79266357]
[111.81710052 222.78831482]
[104.52806854 209.65093994]
[100.59282684 195.14207458]
[100.24430084 180.10395813]
[103.50709534 165.41064453]
[110.19579315 151.91717529]
[119.92547607 140.40983582]
[111.14487457 128.24838257]
[102.36426544 116.08692932]
[90.99935913 113.54132843]
[84.25228119 104.04826355]
[85.58466339 92.47821808]
[76.98609924 80.18737793]
[68.38753510 67.89653778]
[59.78897476 55.60570526]
[51.19041061 43.31486511]
[34.32846069 35.91511917]
[33.48941422 18.38620377]
[24.70880890 6.22474861]
[15.92820644 -5.93670750]
[7.14760303 -18.09816360]
[-5.57786083 -10.14631748]
[-18.80603409 -3.06220078]
[-32.47783279 3.12254834]
[-46.53219986 8.38030720]
[-60.90636444 12.68759251]
[-75.53612518 16.02516747]
[-90.35614014 18.37812424]
[-105.30022430 19.73595428]
[-120.30162048 20.09259415]
[-135.29335022 19.44645119]
[-150.20843506 17.80040932]
[-164.98027039 15.16182327]
[-179.54287720 11.54247379]
[-193.83122253 6.95852900]
[-207.78147888 1.43046081]
[-221.33134460 -5.01704073]
[-234.42031860 -12.35517979]
[-246.98991394 -20.55117989]
[-258.98400879 -29.56843948]
[-270.34902954 -39.36668015]
[-281.03421021 -49.90214539]
[-290.99185181 -61.12777710]
[-300.17745972 -72.99343872]
[-308.55001831 -85.44613647]
[-316.07211304 -98.43025208]
[-322.71017456 -111.88779449]
[-328.43450928 -125.75866699]
[-333.21963501 -139.98089600]
[-337.04409790 -154.49099731]
[-339.89086914 -169.22412109]
[-341.74719238 -184.11450195]
[-342.60482788 -199.09561157]
[-342.45989990 -214.10055542]
[-341.31307983 -229.06230164]
[-339.16946411 -243.91404724]
[-336.03866577 -258.58944702]
[-331.93463135 -273.02294922]
[-326.87570190 -287.15011597]
[-320.88449097 -300.90783691]
[-313.98773193 -314.23464966]
[-306.21624756 -327.07104492]
[-297.60473633 -339.35971069]
[-288.19165039 -351.04571533]
[-278.01904297 -362.07693481]
[-267.13235474 -372.40402222]
[-255.58020020 -381.98092651]
[-243.41416931 -390.76483154]
[-230.68859863 -398.71652222]
[-217.46034241 -405.80047607]
[-203.78846741 -411.98504639]
[-189.73402405 -417.24261475]
[-175.35980225 -421.54974365]
[-160.73001099 -424.88711548]
[-145.90995789 -427.23989868]
[-130.96586609 -428.59753418]
[-115.96445465 -428.95397949]
[-100.97274017 -428.30764771]
[-86.05767822 -426.66143799]
[-71.28587341 -424.02264404]
[-56.72331238 -420.40313721]
[-42.43502808 -415.81900024]
[-28.48483658 -410.29074097]
[-14.93504715 -403.84307861]
[-1.84617531 -396.50479126]
[10.72332096 -388.30862427]
[22.71730232 -379.29119873]
[34.08220291 -369.49282837]
[44.76725769 -358.95721436]
[54.72475052 -347.73147583]
[63.91020584 -335.86569214]
[72.28260040 -323.41290283]
[79.80453491 -310.42868042]
[86.44242096 -296.97103882]
[92.16661072 -283.10012817]
[96.95153809 -268.87780762]
[100.77582550 -254.36767578]
[103.62240601 -239.63450623]
[105.47855377 -224.74411011]
[106.33599091 -209.76298523]
[106.19087219 -194.75804138]
[105.04385376 -179.79631042]
[102.90006256 -164.94459534]
[99.76907349 -150.26924133]
[95.66486359 -135.83578491]
[90.60576630 -121.70868683]
[84.61437225 -107.95104980]
[77.71745300 -94.62432098]
[69.94580078 -81.78801727]
[61.33412933 -69.49946594]
[51.92090225 -57.81356049]
[41.74816132 -46.78248978]
[30.86133766 -36.45551682]
[19.30905914 -26.87876701]
[28.08966255 -14.71731091]
[36.87026596 -2.55585480]
[45.65086746 9.60560131]
[57.53881836 11.84239578]
[64.95361328 21.90244293]
[63.48124695 34.71630096]
[72.07981110 47.00714111]
[80.67837524 59.29797745]
[89.27693939 71.58881378]
[97.87550354 83.87965393]
[113.25329590 90.58038330]
[114.52572632 107.30632782]
[123.30632782 119.46778107]
[132.08692932 131.62924194]
[146.07138062 126.01490784]
[160.98414612 123.91207123]
[175.95774841 125.43865204]
[190.12223816 130.50160217]
[202.65571594 138.80252075]
[212.83203125 149.85527039]
[220.06283569 163.01443481]
[223.93162537 177.51300049]
[224.21771240 192.50706482]
[220.90879822 207.12496948]
[214.20147705 220.51794434]
[204.48948669 231.90942383]
[213.27009583 244.07087708]
[222.05068970 256.23233032]
[230.83129883 268.39379883]
[243.84245300 260.90286255]
[257.55490112 254.78950500]
[271.82324219 250.11849976]
[286.49624634 246.93934631]
[301.41836548 245.28575134]
[316.43142700 245.17526245]
[331.37625122 246.60903931]
[346.09445190 249.57188416]
[360.43002319 254.03237915]
[374.23092651 259.94323730]
[387.35095215 267.24185181]
[399.65093994 275.85076904]
[411.00057983 285.67880249]
[421.27951050 296.62173462]
[430.37875366 308.56356812]
[438.20190430 321.37771606]
[444.66601562 334.92834473]
[449.70254517 349.07180786]
[453.25808716 363.65817261]
[455.29501343 378.53280640]
[455.79168701 393.53805542]
[454.74282837 408.51483154]
[452.15960693 423.30438232]
[448.06936646 437.74993896]
[442.51547241 451.69836426]
[435.55682373 465.00180054]
[427.26715088 477.51919556]
[417.73434448 489.11788940]
[407.05947876 499.67492676]
[395.35568237 509.07836914]
[382.74700928 517.22857666]
[369.36715698 524.03912354]
[355.35794067 529.43780518]
[340.86788940 533.36743164]
[326.05056763 535.78637695]
[311.06304932 536.66888428]
[296.06423950 536.00567627]
[281.21313477 533.80377197]
[266.66714478 530.08648682]
[252.58045959 524.89324951]
[239.10243225 518.27911377]
[226.37591553 510.31420898]
[214.53582764 501.08294678]
[203.70767212 490.68316650]
[194.00625610 479.22515869]
[185.53437805 466.83032227]
[178.38188171 453.63012695]
[172.62458801 439.76443481]
[168.32350159 425.38024902]
[165.52423096 410.63003540]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 160]
[10 159]
[11 158]
[12 157]
[24 145]
[25 144]
[26 143]
[29 141]
[30 140]
[31 139]
[32 138]
[33 137]
[35 134]
[36 133]
[37 132]
[38 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
