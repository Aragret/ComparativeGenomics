%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[68.72298431 833.34020996]
[53.98796844 830.49176025]
[39.52186203 826.49603271]
[25.41385460 821.37762451]
[11.75092888 815.16809082]
[-1.38267982 807.90563965]
[-13.90599632 799.63519287]
[-25.74180984 790.40765381]
[-36.81714630 780.27990723]
[-47.06372452 769.31445312]
[-56.41836929 757.57879639]
[-64.82340240 745.14544678]
[-72.22700500 732.09088135]
[-78.58353424 718.49572754]
[-83.85379028 704.44372559]
[-88.00528717 690.02154541]
[-91.01243591 675.31811523]
[-92.85668182 660.42407227]
[-93.52666473 645.43121338]
[-93.01824188 630.43200684]
[-91.33456421 615.51898193]
[-88.48600006 600.78399658]
[-84.49011993 586.31793213]
[-79.37155151 572.20996094]
[-73.16186523 558.54711914]
[-65.89933014 545.41357422]
[-57.62873459 532.89031982]
[-48.40106964 521.05462646]
[-38.27322006 509.97940063]
[-27.30763817 499.73291016]
[-15.57192326 490.37838745]
[-3.13843441 481.97348022]
[9.91617107 474.57003784]
[23.51140594 468.21362305]
[37.56344986 462.94351196]
[51.98566818 458.79217529]
[66.68914032 455.78518677]
[81.58321381 453.94107056]
[80.91342926 438.95602417]
[80.24364471 423.97100830]
[79.57386017 408.98596191]
[78.90407562 394.00091553]
[78.23429108 379.01586914]
[77.56449890 364.03085327]
[76.78318024 349.05120850]
[75.89036560 334.07778931]
[74.99755096 319.10440063]
[74.10473633 304.13098145]
[73.21191406 289.15759277]
[62.77307510 275.05093384]
[71.15135956 258.65319824]
[70.03571320 243.69474792]
[68.92005920 228.73629761]
[67.80441284 213.77783203]
[62.04975128 227.63005066]
[52.81468582 239.45010376]
[40.76589966 248.38468933]
[26.77320480 253.78880310]
[11.84674644 255.27232361]
[-2.93592048 252.72816467]
[-16.50762367 246.33998108]
[-27.88860893 236.56895447]
[-36.25727463 224.12043762]
[-41.00947952 209.89312744]
[-41.80215454 194.91407776]
[-38.57808304 180.26466370]
[-31.57000542 167.00242615]
[-21.28384590 156.08479309]
[-8.46216774 148.29989624]
[5.96941757 144.20974731]
[20.96908379 144.10960388]
[35.45399094 148.00671387]
[48.37845993 155.61973572]
[58.80946732 166.39907837]
[65.99398041 179.56655884]
[69.41346741 194.17279053]
[72.95314026 179.59640503]
[76.49281311 165.02003479]
[80.03248596 150.44366455]
[75.51705170 136.24998474]
[86.29238129 124.66539001]
[89.83205414 110.08901978]
[86.08058929 96.61986542]
[95.59156799 86.37131500]
[99.13124084 71.79493713]
[94.86899567 56.55867004]
[105.39114380 46.01667023]
[108.93081665 31.44029427]
[112.47048950 16.86392021]
[106.87794495 -0.68045324]
[119.47716522 -12.89628792]
[122.79942322 -27.52374840]
[126.12168121 -42.15120697]
[124.97069550 -51.21283340]
[129.60383606 -56.97094345]
[133.14350891 -71.54731750]
[136.68318176 -86.12369537]
[138.79780579 -100.97389221]
[139.46759033 -115.95893097]
[140.13737488 -130.94396973]
[126.49670410 -137.71539307]
[116.79453278 -149.45368958]
[112.71179962 -164.12513733]
[114.95587921 -179.18780518]
[123.13796234 -192.03199768]
[135.84045410 -200.43238831]
[150.86256409 -202.93356323]
[165.60163879 -199.10215759]
[177.50402832 -189.60200500]
[184.50758362 -176.07905579]
[185.39889526 -160.87625122]
[180.02351379 -146.62754822]
[169.31278992 -135.80165100]
[155.12240601 -130.27418518]
[154.45262146 -115.28914642]
[153.78283691 -100.30410767]
[162.19802856 -112.72122192]
[174.89295959 -120.71112061]
[189.72833252 -122.92738342]
[204.20411682 -118.99651337]
[215.88088989 -109.58094025]
[222.79090881 -96.26735687]
[223.76971436 -81.29932404]
[218.65235901 -67.19922638]
[208.30120850 -56.34317780]
[194.46063232 -50.56061172]
[179.46296692 -50.82599258]
[165.83563232 -57.09459686]
[155.87503052 -68.31005859]
[151.25955200 -82.58402252]
[147.71987915 -68.00764465]
[144.18020630 -53.43127060]
[140.74914551 -38.82894897]
[137.42687988 -24.20148849]
[134.10462952 -9.57402802]
[140.28378296 0.82523310]
[137.63566589 13.03880119]
[127.04685974 20.40359116]
[123.50718689 34.97996902]
[119.96751404 49.55634308]
[124.48294830 63.75000763]
[113.70761871 75.33460999]
[110.16794586 89.91098022]
[113.91941071 103.38013458]
[104.40843201 113.62868500]
[100.86875916 128.20506287]
[105.13100433 143.44132996]
[94.60885620 153.98333740]
[91.06918335 168.55970764]
[87.52951050 183.13607788]
[83.98983765 197.71246338]
[82.76286316 212.66218567]
[83.87851715 227.62063599]
[84.99416351 242.57910156]
[86.10980988 257.53753662]
[95.35609436 266.53027344]
[95.97737122 279.01217651]
[88.18532562 288.26477051]
[89.07814026 303.23815918]
[89.97095490 318.21157837]
[90.86376953 333.18499756]
[91.75658417 348.15838623]
[95.39123535 356.53854370]
[92.54953766 363.36105347]
[93.21932983 378.34609985]
[93.88911438 393.33114624]
[94.55889893 408.31616211]
[95.22868347 423.30120850]
[95.89846802 438.28625488]
[96.56825256 453.27130127]
[111.56745148 453.77923584]
[126.48056793 455.46246338]
[141.21563721 458.31057739]
[155.68182373 462.30603027]
[169.78993225 467.42416382]
[183.45298767 473.63342285]
[196.58674622 480.89556885]
[209.11022949 489.16577148]
[220.94622803 498.39306641]
[232.02177429 508.52056885]
[242.26858521 519.48583984]
[251.62345886 531.22125244]
[260.02874756 543.65454102]
[267.43261719 556.70886230]
[273.78942871 570.30395508]
[279.05996704 584.35583496]
[283.21176147 598.77789307]
[286.21920776 613.48126221]
[288.06375122 628.37530518]
[288.73403931 643.36810303]
[288.22592163 658.36730957]
[286.54257202 673.28039551]
[283.69430542 688.01544189]
[279.69869995 702.48162842]
[274.58044434 716.58966064]
[268.37103271 730.25262451]
[261.10876465 743.38635254]
[252.83842468 755.90972900]
[243.61099243 767.74566650]
[233.48336792 778.82110596]
[222.51799011 789.06774902]
[210.78247070 798.42254639]
[198.34915161 806.82769775]
[185.29470825 814.23144531]
[171.69960022 820.58807373]
[157.64765930 825.85852051]
[143.22552490 830.01013184]
[128.52210999 833.01745605]
[113.62808228 834.86181641]
[98.63524628 835.53198242]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 170]
[39 169]
[40 168]
[41 167]
[42 166]
[43 165]
[44 164]
[45 162]
[46 161]
[47 160]
[48 159]
[49 158]
[51 155]
[52 154]
[53 153]
[54 152]
[76 151]
[77 150]
[78 149]
[79 148]
[81 146]
[82 145]
[84 143]
[85 142]
[87 140]
[88 139]
[89 138]
[91 135]
[92 134]
[93 133]
[95 132]
[96 131]
[97 130]
[98 116]
[99 115]
[100 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
