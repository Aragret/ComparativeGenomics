%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[80.97295380 919.07257080]
[65.99533844 918.21276855]
[51.06771851 916.71807861]
[36.21698380 914.59118652]
[21.46989822 911.83593750]
[6.85303640 908.45727539]
[-7.60725975 904.46130371]
[-21.88493156 899.85516357]
[-35.95425034 894.64727783]
[-49.78986359 888.84692383]
[-63.36683655 882.46466064]
[-76.66070557 875.51184082]
[-89.64750671 868.00115967]
[-102.30384827 859.94598389]
[-114.60691071 851.36096191]
[-126.53453064 842.26153564]
[-138.06520081 832.66406250]
[-149.17817688 822.58587646]
[-159.85339355 812.04510498]
[-170.07162476 801.06072998]
[-179.81446838 789.65264893]
[-189.06434631 777.84130859]
[-197.80461121 765.64801025]
[-206.01950073 753.09478760]
[-213.69421387 740.20422363]
[-220.81492615 726.99957275]
[-227.36878967 713.50457764]
[-233.34400940 699.74359131]
[-238.72981262 685.74139404]
[-243.51649475 671.52325439]
[-247.69541931 657.11474609]
[-251.25906372 642.54187012]
[-254.20101929 627.83087158]
[-256.51596069 613.00830078]
[-258.19973755 598.10083008]
[-259.24929810 583.13531494]
[-259.66275024 568.13873291]
[-259.43936157 553.13812256]
[-258.57952881 538.16052246]
[-257.08480835 523.23291016]
[-254.95788574 508.38220215]
[-252.20260620 493.63510132]
[-248.82391357 479.01824951]
[-244.82791138 464.55795288]
[-240.22178650 450.28030396]
[-235.01385498 436.21099854]
[-229.21350098 422.37536621]
[-222.83117676 408.79843140]
[-215.87837219 395.50457764]
[-208.36763000 382.51776123]
[-200.31248474 369.86145020]
[-191.72743225 357.55841064]
[-182.62796021 345.63079834]
[-173.03047180 334.10012817]
[-162.95225525 322.98718262]
[-152.41148376 312.31198120]
[-141.42712402 302.09375000]
[-130.01898193 292.35095215]
[-118.20764160 283.10107422]
[-106.01435852 274.36083984]
[-93.46111298 266.14596558]
[-80.57052612 258.47128296]
[-67.36583710 251.35058594]
[-53.87083435 244.79673767]
[-40.10983658 238.82153320]
[-26.10764122 233.43576050]
[-11.88948631 228.64910889]
[2.51901078 224.47019958]
[17.09188271 220.90657043]
[31.80286980 217.96464539]
[46.62545776 215.64973450]
[61.53293991 213.96598816]
[76.49845123 212.91644287]
[91.49502563 212.50300598]
[91.71835327 197.50466919]
[91.94168091 182.50633240]
[92.16500854 167.50799561]
[92.38833618 152.50965881]
[92.50000000 137.51007080]
[92.50000000 122.51007843]
[92.50000000 107.51007843]
[91.60718536 92.53667450]
[89.82471466 77.64295197]
[88.04225159 62.74923706]
[86.25978851 47.85551834]
[72.87398529 40.23144150]
[66.61730194 26.34953690]
[69.69805908 11.61953545]
[80.72965240 1.64747536]
[78.94718933 -13.24624157]
[77.16471863 -28.13995934]
[62.26578522 -30.62962151]
[48.67238235 -37.21718979]
[37.48646927 -47.36864471]
[29.61483383 -60.26104736]
[25.69559669 -74.84927368]
[26.04647446 -89.95071411]
[30.63902092 -104.34117126]
[39.10094070 -116.85406494]
[50.74626160 -126.47504425]
[64.63095093 -132.42416382]
[79.62944031 -134.21917725]
[94.52586365 -131.71453857]
[108.11264038 -125.11331940]
[119.28835297 -114.95063782]
[127.14703369 -102.05033112]
[131.05160522 -87.45817566]
[130.68556213 -72.35709381]
[126.07855988 -57.97126007]
[117.60407257 -45.46686935]
[105.94909668 -35.85759735]
[92.05843353 -29.92242432]
[93.84090424 -15.02870750]
[95.62336731 -0.13499056]
[108.69660187 6.95222759]
[115.16630554 20.53923798]
[112.36215210 35.50553513]
[101.15350342 46.07305145]
[102.93596649 60.96677017]
[104.71843719 75.86048889]
[106.50090027 90.75420380]
[114.96426392 78.36988068]
[129.05139160 73.21693420]
[143.50813293 77.21727753]
[152.94247437 88.87889099]
[153.83564758 103.85227203]
[145.85450745 116.55272675]
[131.97584534 122.24330139]
[117.37603760 118.80154419]
[107.50000000 107.51007843]
[107.50000000 122.51007843]
[107.50000000 137.51007080]
[110.62940979 146.09172058]
[107.38667297 152.73298645]
[107.16334534 167.73132324]
[106.94001770 182.72966003]
[106.71669006 197.72799683]
[106.49336243 212.72633362]
[121.47097015 213.58609009]
[136.39860535 215.08074951]
[151.24934387 217.20759583]
[165.99642944 219.96281433]
[180.61331177 223.34143066]
[195.07362366 227.33737183]
[209.35130310 231.94342041]
[223.42063904 237.15127563]
[237.25627136 242.95156860]
[250.83326721 249.33383179]
[264.12716675 256.28656006]
[277.11398315 263.79724121]
[289.77035522 271.85235596]
[302.07342529 280.43731689]
[314.00109863 289.53674316]
[325.53179932 299.13415527]
[336.64477539 309.21234131]
[347.32003784 319.75308228]
[357.53829956 330.73736572]
[367.28118896 342.14544678]
[376.53109741 353.95675659]
[385.27142334 366.14999390]
[393.48635864 378.70321655]
[401.16110229 391.59375000]
[408.28186035 404.79840088]
[414.83575439 418.29339600]
[420.81103516 432.05435181]
[426.19686890 446.05651855]
[430.98358154 460.27465820]
[435.16256714 474.68313599]
[438.72625732 489.25598145]
[441.66827393 503.96694946]
[443.98324585 518.78955078]
[445.66708374 533.69702148]
[446.71667480 548.66253662]
[447.13018799 563.65905762]
[446.90686035 578.65966797]
[446.04705811 593.63732910]
[444.55239868 608.56494141]
[442.42550659 623.41564941]
[439.67028809 638.16278076]
[436.29162598 652.77960205]
[432.29568481 667.23992920]
[427.68960571 681.51757812]
[422.48171997 695.58691406]
[416.68139648 709.42254639]
[410.29913330 722.99951172]
[403.34637451 736.29339600]
[395.83566284 749.28021240]
[387.78054810 761.93658447]
[379.19555664 774.23968506]
[370.09613037 786.16729736]
[360.49865723 797.69799805]
[350.42047119 808.81097412]
[339.87973022 819.48620605]
[328.89541626 829.70446777]
[317.48730469 839.44732666]
[305.67599487 848.69720459]
[293.48272705 857.43750000]
[280.92950439 865.65240479]
[268.03897095 873.32714844]
[254.83428955 880.44787598]
[241.33930969 887.00177002]
[227.57832336 892.97698975]
[213.57615662 898.36285400]
[199.35801697 903.14953613]
[184.94952393 907.32849121]
[170.37666321 910.89215088]
[155.66569519 913.83410645]
[140.84310913 916.14910889]
[125.93563080 917.83288574]
[110.97012329 918.88244629]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[74 138]
[75 137]
[76 136]
[77 135]
[78 134]
[79 132]
[80 131]
[81 130]
[82 121]
[83 120]
[84 119]
[85 118]
[89 114]
[90 113]
[91 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
