%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[33.37484741 887.45764160]
[18.37686920 887.82885742]
[3.37743688 887.52191162]
[-11.59280491 886.53753662]
[-26.50327301 884.87768555]
[-41.32350540 882.54577637]
[-56.02322769 879.54656982]
[-70.57241058 875.88616943]
[-84.94132233 871.57202148]
[-99.10060883 866.61303711]
[-113.02135468 861.01928711]
[-126.67511749 854.80224609]
[-140.03399658 847.97448730]
[-153.07069397 840.55010986]
[-165.75859070 832.54425049]
[-178.07176208 823.97320557]
[-189.98506165 814.85449219]
[-201.47413635 805.20678711]
[-212.51551819 795.04974365]
[-223.08663940 784.40417480]
[-233.16593933 773.29180908]
[-242.73278809 761.73529053]
[-251.76765442 749.75830078]
[-260.25207520 737.38525391]
[-268.16876221 724.64154053]
[-275.50146484 711.55303955]
[-282.23526001 698.14654541]
[-288.35635376 684.44952393]
[-293.85229492 670.48986816]
[-298.71179199 656.29614258]
[-302.92495728 641.89727783]
[-306.48318481 627.32275391]
[-309.37918091 612.60235596]
[-311.60702515 597.76611328]
[-313.16220093 582.84436035]
[-314.04150391 567.86761475]
[-314.24316406 552.86639404]
[-313.76672363 537.87139893]
[-312.61322021 522.91320801]
[-310.78494263 508.02246094]
[-308.28567505 493.22955322]
[-305.12048340 478.56466675]
[-301.29589844 464.05776978]
[-296.81964111 449.73855591]
[-291.70095825 435.63619995]
[-285.95022583 421.77957153]
[-279.57922363 408.19696045]
[-272.60095215 394.91610718]
[-265.02969360 381.96414185]
[-256.88092041 369.36752319]
[-248.17123413 357.15203857]
[-238.91847229 345.34255981]
[-229.14152527 333.96325684]
[-218.86035156 323.03738403]
[-208.09597778 312.58724976]
[-196.87037659 302.63418579]
[-185.20649719 293.19857788]
[-173.12815857 284.29965210]
[-160.66003418 275.95559692]
[-147.82760620 268.18347168]
[-134.65708923 260.99917603]
[-121.17536926 254.41732788]
[-107.41001129 248.45141602]
[-93.38912964 243.11363220]
[-79.14136505 238.41485596]
[-64.69583893 234.36470032]
[-50.08204269 230.97143555]
[-35.32984543 228.24200439]
[-20.46937943 226.18197632]
[-5.53100586 224.79554749]
[9.45475674 224.08557129]
[24.45729446 224.05348206]
[39.44595718 224.69935608]
[54.39012527 226.02188110]
[69.25926208 228.01832581]
[71.92505646 213.25711060]
[74.59085846 198.49589539]
[69.23860931 184.59614563]
[79.30530548 172.39073181]
[81.97109985 157.62951660]
[84.63689423 142.86830139]
[87.30268860 128.10708618]
[76.45626831 119.92291260]
[70.17948151 107.87187195]
[69.69060516 94.29296875]
[75.08451843 81.82175446]
[85.31431580 72.87878418]
[98.39448547 69.19980621]
[101.27975464 54.47991562]
[104.16503143 39.76002502]
[107.05030060 25.04013252]
[109.93556976 10.32024002]
[112.82084656 -4.39965105]
[114.71413422 -19.27968597]
[115.60695648 -34.25308990]
[116.49977112 -49.22649765]
[109.59758759 -63.46273422]
[118.07871246 -75.70690918]
[118.97152710 -90.68031311]
[105.05132294 -96.68062592]
[94.02496338 -107.08231354]
[87.22393799 -120.62934113]
[85.46949768 -135.68582153]
[88.97351074 -150.43362427]
[97.31284332 -163.09188843]
[109.48047638 -172.13203430]
[124.00711823 -176.46244812]
[139.13859558 -175.56021118]
[153.04772949 -169.53425598]
[164.05490112 -159.11227417]
[170.83094788 -145.55273438]
[172.55763245 -130.49304199]
[169.02644348 -115.75171661]
[160.66380310 -103.10885620]
[148.47952271 -94.09114075]
[133.94493103 -89.78749847]
[133.05212402 -74.81409454]
[140.01815796 -61.64885330]
[131.47317505 -48.33368301]
[130.58035278 -33.36027527]
[129.68754578 -18.38686943]
[139.68711853 -29.56758499]
[154.11531067 -33.66972733]
[168.50135803 -29.42220497]
[178.38760376 -18.14115715]
[180.71069336 -3.32214046]
[174.75077820 10.44301224]
[162.35461426 18.88901901]
[147.36328125 19.39879036]
[134.42201233 11.81437111]
[127.54073334 -1.51437831]
[124.65546417 13.20551300]
[121.77019501 27.92540359]
[118.88491821 42.64529419]
[115.99964905 57.36518860]
[113.11437225 72.08507538]
[125.37612152 82.47053528]
[130.74960327 97.61430359]
[127.77620697 113.40566254]
[117.26306152 125.55809784]
[102.06391144 130.77287292]
[99.39810944 145.53408813]
[96.73231506 160.29530334]
[94.06652069 175.05653381]
[99.22808838 190.01208496]
[89.35207367 201.16168213]
[86.68627930 215.92289734]
[84.02048492 230.68412781]
[98.64868164 234.01472473]
[113.11143494 238.00294495]
[127.37920380 242.64062500]
[141.42282104 247.91828918]
[155.21362305 253.82514954]
[168.72341919 260.34915161]
[181.92460632 267.47698975]
[194.79022217 275.19403076]
[207.29399109 283.48458862]
[219.41033936 292.33166504]
[231.11454773 301.71722412]
[242.38269043 311.62207031]
[253.19175720 322.02600098]
[263.51965332 332.90771484]
[273.34527588 344.24502563]
[282.64855957 356.01470947]
[291.41049194 368.19281006]
[299.61318970 380.75436401]
[307.23986816 393.67376709]
[314.27496338 406.92459106]
[320.70410156 420.47979736]
[326.51416016 434.31164551]
[331.69326782 448.39193726]
[336.23080444 462.69186401]
[340.11755371 477.18222046]
[343.34552002 491.83340454]
[345.90817261 506.61547852]
[347.80023193 521.49829102]
[349.01785278 536.45135498]
[349.55850220 551.44415283]
[349.42114258 566.44610596]
[348.60601807 581.42651367]
[347.11480713 596.35479736]
[344.95053101 611.20043945]
[342.11764526 625.93310547]
[338.62191772 640.52276611]
[334.47048950 654.93951416]
[329.67184448 669.15393066]
[324.23580933 683.13702393]
[318.17343140 696.86016846]
[311.49716187 710.29534912]
[304.22058105 723.41516113]
[296.35861206 736.19274902]
[287.92727661 748.60198975]
[278.94381714 760.61755371]
[269.42657471 772.21496582]
[259.39498901 783.37042236]
[248.86956787 794.06121826]
[237.87181091 804.26544189]
[226.42417908 813.96228027]
[214.55007935 823.13195801]
[202.27374268 831.75567627]
[189.62026978 839.81591797]
[176.61549377 847.29608154]
[163.28599548 854.18096924]
[149.65901184 860.45648193]
[135.76235962 866.10986328]
[121.62445068 871.12945557]
[107.27415466 875.50512695]
[92.74079132 879.22778320]
[78.05406189 882.28997803]
[63.24395370 884.68542480]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[75 148]
[76 147]
[77 146]
[79 144]
[80 143]
[81 142]
[82 141]
[88 136]
[89 135]
[90 134]
[91 133]
[92 132]
[93 131]
[94 121]
[95 120]
[96 119]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
