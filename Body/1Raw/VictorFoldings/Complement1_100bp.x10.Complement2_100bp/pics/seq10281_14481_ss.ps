%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[56.62771606 324.39291382]
[52.86570358 338.92135620]
[47.98915482 353.11459351]
[42.02739716 366.88723755]
[35.01628494 380.15646362]
[26.99798203 392.84246826]
[18.02071381 404.86898804]
[8.13847351 416.16366577]
[-2.58930779 426.65856934]
[-14.09811020 436.29058838]
[-26.31871796 445.00180054]
[-39.17763138 452.73980713]
[-52.59751892 459.45803833]
[-66.49766541 465.11614990]
[-80.79447937 469.68008423]
[-95.40197754 473.12237549]
[-110.23229980 475.42236328]
[-125.19625092 476.56616211]
[-140.20385742 476.54693604]
[-155.16482544 475.36480713]
[-169.98921204 473.02682495]
[-184.58782959 469.54711914]
[-198.87290955 464.94656372]
[-212.75851440 459.25286865]
[-226.16114807 452.50024414]
[-239.00018311 444.72933960]
[-251.19844055 435.98684692]
[-262.68252563 426.32534790]
[-273.38336182 415.80300903]
[-283.23663330 404.48303223]
[-292.18307495 392.43356323]
[-300.16882324 379.72705078]
[-307.14593506 366.43988037]
[-313.07238770 352.65200806]
[-317.91253662 338.44635010]
[-321.63732910 323.90832520]
[-324.22430420 309.12536621]
[-325.65792847 294.18637085]
[-325.92956543 279.18121338]
[-325.03759766 264.20016479]
[-322.98739624 249.33323669]
[-319.79129028 234.66992188]
[-315.46847534 220.29835510]
[-310.04495239 206.30500793]
[-303.55337524 192.77401733]
[-296.03274536 179.78677368]
[-287.52832031 167.42137146]
[-278.09124756 155.75219727]
[-267.77825928 144.84941101]
[-256.65142822 134.77859497]
[-244.77760315 125.60031128]
[-232.22824097 117.36976624]
[-219.07881165 110.13645935]
[-205.40838623 103.94388580]
[-191.29919434 98.82929993]
[-176.83607483 94.82345581]
[-162.10603333 91.95044708]
[-147.19766235 90.22755432]
[-132.20059204 89.66513062]
[-117.20503998 90.26656342]
[-102.30118561 92.02824402]
[-87.57866669 94.93955994]
[-73.12602997 98.98301697]
[-59.03018951 104.13429260]
[-45.37592697 110.36241150]
[-32.24535370 117.62989807]
[-19.71744919 125.89306641]
[-7.86755276 135.10220337]
[3.23306704 145.20193481]
[13.51764870 156.13151550]
[25.20523071 146.72937012]
[36.89281082 137.32720947]
[48.58039093 127.92506409]
[49.01613235 125.15589905]
[50.57502747 122.39248657]
[53.26038742 120.06347656]
[56.92041397 118.59082794]
[61.25505447 118.33615875]
[73.48154449 109.64633179]
[85.70803070 100.95650482]
[91.70182800 88.32456970]
[105.60214996 86.81700897]
[117.82863617 78.12718201]
[130.05511475 69.43735504]
[142.28160095 60.74753189]
[154.50808716 52.05770874]
[156.67918396 47.31076813]
[160.11085510 44.18396759]
[163.97489929 42.88616943]
[167.48019409 43.26726532]
[180.08250427 35.13204956]
[192.68481445 26.99683189]
[205.28712463 18.86161613]
[217.88945007 10.72640038]
[210.63996887 -2.41231513]
[204.31423950 -16.01987648]
[198.94236755 -30.03143501]
[194.54998779 -44.38021851]
[191.15802002 -58.99785233]
[188.78262329 -73.81467438]
[187.43511963 -88.76007080]
[187.12191772 -103.76282501]
[187.84454346 -118.75143433]
[189.59951782 -133.65447998]
[192.37850952 -148.40093994]
[196.16824341 -162.92051697]
[200.95068359 -177.14405823]
[206.70303345 -191.00375366]
[213.39787292 -204.43356323]
[221.00329590 -217.36949158]
[229.48307800 -229.74987793]
[238.79678345 -241.51574707]
[248.90005493 -252.61099243]
[259.74472046 -262.98278809]
[271.27911377 -272.58166504]
[283.44824219 -281.36187744]
[296.19418335 -289.28164673]
[309.45611572 -296.30316162]
[323.17086792 -302.39297485]
[337.27310181 -307.52209473]
[351.69558716 -311.66604614]
[366.36962891 -314.80511475]
[381.22525024 -316.92428589]
[396.19168091 -318.01351929]
[411.19760132 -318.06759644]
[426.17150879 -317.08627319]
[441.04202271 -315.07421875]
[455.73828125 -312.04101562]
[470.19027710 -308.00112915]
[484.32910156 -302.97378540]
[498.08740234 -296.98297119]
[511.39962769 -290.05722046]
[524.20227051 -282.22955322]
[536.43438721 -273.53726196]
[548.03765869 -264.02178955]
[558.95684814 -253.72843933]
[569.13977051 -242.70629883]
[578.53808594 -231.00787354]
[587.10687256 -218.68891907]
[594.80535889 -205.80815125]
[601.59680176 -192.42694092]
[607.44891357 -178.60906982]
[612.33374023 -164.42037964]
[616.22802734 -149.92848206]
[619.11322021 -135.20243835]
[620.97558594 -120.31243134]
[621.80621338 -105.32942200]
[621.60119629 -90.32479858]
[620.36145020 -75.37007904]
[618.09289551 -60.53652191]
[614.80639648 -45.89481735]
[610.51751709 -31.51474571]
[605.24682617 -17.46483040]
[599.01928711 -3.81202865]
[591.86474609 9.37859917]
[583.81713867 22.04419136]
[574.91491699 34.12438965]
[565.20050049 45.56163025]
[554.72015381 56.30140305]
[543.52380371 66.29253387]
[531.66485596 75.48740387]
[519.19976807 83.84220123]
[506.18798828 91.31710052]
[492.69149780 97.87649536]
[478.77462769 103.48911285]
[464.50372314 108.12821960]
[449.94671631 111.77169037]
[435.17306519 114.40218353]
[420.25311279 116.00714111]
[405.25799561 116.57893372]
[390.25915527 116.11482239]
[375.32806396 114.61702728]
[360.53588867 112.09268951]
[345.95312500 108.55382538]
[331.64926147 104.01731110]
[317.69244385 98.50476074]
[304.14920044 92.04244995]
[291.08410645 84.66116333]
[278.55935669 76.39608765]
[266.63467407 67.28659821]
[255.36688232 57.37612152]
[244.80969238 46.71187592]
[235.01338196 35.34468079]
[226.02465820 23.32871246]
[213.42234802 31.46392822]
[200.82003784 39.59914398]
[188.21772766 47.73435974]
[175.61541748 55.86957550]
[163.19792175 64.28419495]
[150.97143555 72.97402191]
[138.74494934 81.66384125]
[126.51845551 90.35366821]
[114.29196930 99.04349518]
[108.29817200 111.67543030]
[94.39785004 113.18299103]
[82.17136383 121.87281799]
[69.94487762 130.56263733]
[57.98254395 139.61264038]
[46.29496384 149.01480103]
[34.60737991 158.41694641]
[22.91979980 167.81909180]
[31.39251137 180.20623779]
[38.87982941 193.21272278]
[45.33672333 206.76029968]
[50.72435760 220.76750183]
[55.01033401 235.15008545]
[58.16887665 249.82154846]
[60.18098068 264.69366455]
[61.03455353 279.67697144]
[60.72446060 294.68139648]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 201]
[71 200]
[72 199]
[73 198]
[78 197]
[79 196]
[80 195]
[82 193]
[83 192]
[84 191]
[85 190]
[86 189]
[90 188]
[91 187]
[92 186]
[93 185]
[94 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
