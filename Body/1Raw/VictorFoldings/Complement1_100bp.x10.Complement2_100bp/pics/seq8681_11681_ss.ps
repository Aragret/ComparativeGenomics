%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[127.09468079 634.16705322]
[114.09030151 626.68261719]
[101.54758453 618.44793701]
[89.50975800 609.49127197]
[78.01832581 599.84362793]
[67.11289978 589.53820801]
[56.83106995 578.61047363]
[47.20829010 567.09820557]
[38.27772522 555.04101562]
[30.07015991 542.48052979]
[22.61389160 529.45996094]
[15.93462181 516.02429199]
[10.05537415 502.21975708]
[4.99641752 488.09399414]
[0.77519095 473.69567871]
[-2.59375453 459.07443237]
[-5.09880495 444.28067017]
[-6.73132515 429.36538696]
[-7.48568773 414.38003540]
[-7.35929108 399.37622070]
[-6.35257244 384.40567017]
[-4.46900082 369.52001953]
[-1.71507037 354.77056885]
[1.89972603 340.20816040]
[6.36292744 325.88299561]
[11.65914726 311.84445190]
[17.77013016 298.14093018]
[24.67480850 284.81967163]
[32.34938049 271.92660522]
[40.76739120 259.50616455]
[49.89981842 247.60115051]
[59.71518707 236.25262451]
[70.17965698 225.49969482]
[81.25715637 215.37944031]
[92.90949249 205.92674255]
[105.09650421 197.17419434]
[117.77618408 189.15196228]
[130.90480042 181.88768005]
[124.42531586 168.35934448]
[117.94581604 154.83099365]
[111.46632385 141.30264282]
[104.98682404 127.77430725]
[98.50733185 114.24595642]
[87.08138275 106.18746185]
[87.96432495 92.23353577]
[75.02492523 83.12955475]
[76.50536346 68.30870819]
[70.02586365 54.78036499]
[63.54637146 41.25201797]
[49.56514359 46.70523071]
[35.21549225 51.09837341]
[20.57766151 54.40687180]
[5.73351812 56.61222839]
[-9.23392582 57.70210648]
[-24.24096489 57.67041397]
[-39.20367050 56.51732635]
[-54.03836823 54.24929047]
[-68.66209412 50.87899399]
[-82.99305725 46.42528152]
[-96.95112610 40.91306305]
[-110.45823669 34.37316513]
[-123.43884277 26.84215927]
[-135.82035828 18.36216545]
[-147.53353882 8.98060703]
[-158.51287842 -1.25005019]
[-168.69697571 -12.27259159]
[-178.02886963 -24.02537537]
[-186.45637512 -36.44267273]
[-193.93237305 -49.45503998]
[-200.41503906 -62.98970413]
[-205.86813354 -76.97097778]
[-210.26115417 -91.32067108]
[-213.56951904 -105.95852661]
[-215.77474976 -120.80268860]
[-216.86448669 -135.77014160]
[-216.83267212 -150.77719116]
[-215.67944336 -165.73988342]
[-213.41128540 -180.57455444]
[-210.04086304 -195.19825745]
[-205.58702087 -209.52917480]
[-200.07467651 -223.48719788]
[-193.53465271 -236.99424744]
[-186.00354004 -249.97479248]
[-177.52343750 -262.35623169]
[-168.14176941 -274.06933594]
[-157.91102600 -285.04858398]
[-146.88838196 -295.23257446]
[-135.13552856 -304.56436157]
[-122.71815491 -312.99176025]
[-109.70571899 -320.46765137]
[-96.17099762 -326.95019531]
[-82.18967438 -332.40316772]
[-67.83994293 -336.79605103]
[-53.20205688 -340.10430908]
[-38.35787201 -342.30938721]
[-23.39041138 -343.39901733]
[-8.38337231 -343.36706543]
[6.57931423 -342.21368408]
[21.41397095 -339.94540405]
[36.03763580 -336.57485962]
[50.36852646 -332.12088013]
[64.32649994 -326.60842896]
[77.83348846 -320.06826782]
[90.81396484 -312.53704834]
[103.19532776 -304.05682373]
[114.90834045 -294.67507935]
[125.88749695 -284.44421387]
[136.07139587 -273.42150879]
[145.40309143 -261.66854858]
[153.83038330 -249.25109863]
[161.30615234 -236.23860168]
[167.78857422 -222.70382690]
[173.24142456 -208.72245789]
[177.63418579 -194.37268066]
[180.94230652 -179.73477173]
[183.14726257 -164.89056396]
[184.23674011 -149.92309570]
[184.20465088 -134.91606140]
[183.05117798 -119.95337677]
[180.78274536 -105.11874390]
[177.41206360 -90.49510956]
[172.95797729 -76.16425323]
[167.44538879 -62.20633316]
[160.90512085 -48.69940186]
[153.37377930 -35.71899414]
[144.89346313 -23.33770180]
[135.51158142 -11.62477016]
[125.28063965 -0.64570296]
[114.25782776 9.53810024]
[102.50479889 18.86968613]
[90.08728027 27.29687119]
[77.07471466 34.77252197]
[83.55421448 48.30086899]
[90.03370667 61.82921219]
[102.50965118 69.96555328]
[101.49266815 85.75404358]
[112.91861725 93.81253815]
[112.03567505 107.76646423]
[118.51516724 121.29480743]
[124.99466705 134.82315063]
[131.47416687 148.35150146]
[137.95365906 161.87985229]
[144.43315125 175.40818787]
[158.32243347 169.73204041]
[172.52087402 164.88081360]
[186.97956848 160.87123108]
[201.64865112 157.71710205]
[216.47755432 155.42929077]
[231.41516113 154.01571655]
[246.40998840 153.48123169]
[261.41033936 153.82766724]
[276.36450195 155.05384827]
[291.22091675 157.15554810]
[305.92840576 160.12551880]
[320.43621826 163.95352173]
[334.69439697 168.62634277]
[348.65371704 174.12789917]
[362.26614380 180.43920898]
[375.48471069 187.53852844]
[388.26382446 195.40138245]
[400.55947876 204.00065613]
[412.32925415 213.30671692]
[423.53259277 223.28747559]
[434.13088989 233.90853882]
[444.08755493 245.13328552]
[453.36834717 256.92300415]
[461.94119263 269.23709106]
[469.77661133 282.03305054]
[476.84753418 295.26681519]
[483.12960815 308.89276123]
[488.60119629 322.86386108]
[493.24340820 337.13201904]
[497.04025269 351.64804077]
[499.97863770 366.36184692]
[502.04846191 381.22274780]
[503.24252319 396.17950439]
[503.55679321 411.18057251]
[502.99011230 426.17422485]
[501.54446411 441.10876465]
[499.22485352 455.93270874]
[496.03921509 470.59500122]
[491.99859619 485.04504395]
[487.11691284 499.23306274]
[481.41098022 513.11010742]
[474.90045166 526.62835693]
[467.60778809 539.74127197]
[459.55813599 552.40356445]
[450.77923584 564.57159424]
[441.30136108 576.20343018]
[431.15716553 587.25903320]
[420.38162231 597.70019531]
[409.01190186 607.49102783]
[397.08715820 616.59765625]
[384.64852905 624.98876953]
[371.73886108 632.63543701]
[358.40270996 639.51129150]
[344.68600464 645.59259033]
[330.63604736 650.85845947]
[316.30123901 655.29064941]
[301.73104858 658.87390137]
[286.97567749 661.59594727]
[272.08599854 663.44726562]
[257.11331177 664.42163086]
[242.10925293 664.51556396]
[227.12554932 663.72875977]
[212.21383667 662.06396484]
[197.42553711 659.52691650]
[182.81161499 656.12634277]
[168.42245483 651.87396240]
[154.30766296 646.78448486]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 143]
[39 142]
[40 141]
[41 140]
[42 139]
[43 138]
[45 136]
[47 134]
[48 133]
[49 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
