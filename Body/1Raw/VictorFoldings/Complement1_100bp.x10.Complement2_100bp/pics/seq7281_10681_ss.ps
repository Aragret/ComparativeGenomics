%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[119.90737915 969.50219727]
[104.97357178 968.07214355]
[90.11106110 966.03027344]
[75.34490967 963.37988281]
[60.70001984 960.12554932]
[46.20108795 956.27264404]
[31.87255669 951.82775879]
[17.73859215 946.79840088]
[3.82302570 941.19299316]
[-9.85067749 935.02099609]
[-23.25946045 928.29284668]
[-36.38071442 921.01983643]
[-49.19231033 913.21429443]
[-61.67264938 904.88934326]
[-73.80068207 896.05902100]
[-85.55596161 886.73822021]
[-96.91867065 876.94268799]
[-107.86963654 866.68890381]
[-118.39040375 855.99420166]
[-128.46322632 844.87658691]
[-138.07112122 833.35473633]
[-147.19787598 821.44824219]
[-155.82812500 809.17700195]
[-163.94729614 796.56182861]
[-171.54171753 783.62396240]
[-178.59855652 770.38519287]
[-185.10592651 756.86791992]
[-191.05287170 743.09484863]
[-196.42933655 729.08923340]
[-201.22627258 714.87469482]
[-205.43557739 700.47515869]
[-209.05017090 685.91503906]
[-212.06393433 671.21875000]
[-214.47181702 656.41107178]
[-216.26972961 641.51708984]
[-217.45465088 626.56182861]
[-218.02459717 611.57055664]
[-217.97859192 596.56848145]
[-217.31669617 581.58099365]
[-216.04006958 566.63330078]
[-214.15083313 551.75061035]
[-211.65217590 536.95800781]
[-208.54830933 522.28051758]
[-204.84448242 507.74276733]
[-200.54692078 493.36938477]
[-195.66288757 479.18453979]
[-190.20062256 465.21215820]
[-184.16931152 451.47583008]
[-177.57914734 437.99868774]
[-170.44123840 424.80346680]
[-162.76760864 411.91241455]
[-154.57119751 399.34729004]
[-145.86584473 387.12924194]
[-136.66622925 375.27890015]
[-126.98783875 363.81625366]
[-116.84701538 352.76058960]
[-106.26084900 342.13061523]
[-95.24719238 331.94418335]
[-83.82461548 322.21853638]
[-72.01238251 312.97003174]
[-59.83041382 304.21426392]
[-47.29924774 295.96603394]
[-34.44001389 288.23919678]
[-21.27439499 281.04684448]
[-7.82459402 274.40106201]
[5.88671017 268.31304932]
[19.83639717 262.79309082]
[34.00094604 257.85049438]
[48.35646820 253.49360657]
[62.87876511 249.72975159]
[77.54334259 246.56527710]
[92.32546997 244.00552368]
[107.20022583 242.05482483]
[105.86199188 227.11463928]
[104.52375793 212.17445374]
[103.18552399 197.23426819]
[101.84729004 182.29408264]
[100.50905609 167.35389709]
[99.17082214 152.41371155]
[97.49927521 137.50714111]
[95.49526215 122.64160919]
[93.49124908 107.77607727]
[89.37898254 100.84342194]
[91.56977081 92.67449188]
[89.78730774 77.78077698]
[88.00483704 62.88706207]
[78.68247223 50.10409927]
[84.85255432 36.54757690]
[83.07009125 21.65386009]
[81.28762054 6.76014185]
[66.35095978 4.62508392]
[52.47622299 -1.30400991]
[40.60942078 -10.62288380]
[31.55964851 -22.69616127]
[25.94393539 -36.70066833]
[24.14517021 -51.68154907]
[26.28599548 -66.61739349]
[32.22044754 -80.48983765]
[41.54390335 -92.35303497]
[53.62067413 -101.39814758]
[67.62734985 -107.00845337]
[82.60892487 -108.80142975]
[97.54393005 -106.65483856]
[111.41408539 -100.71503448]
[123.27368927 -91.38700104]
[132.31413269 -79.30673981]
[137.91903687 -65.29789734]
[139.70622253 -50.31563187]
[137.55386353 -35.38145065]
[131.60870361 -21.51359177]
[122.27609253 -9.65759182]
[110.19233704 -0.62181103]
[96.18134308 4.97767591]
[97.96380615 19.87139320]
[99.74626923 34.76511002]
[108.94114685 46.48277283]
[102.89855194 61.10459518]
[104.68102264 75.99831390]
[106.46348572 90.89202881]
[108.35678101 105.77206421]
[110.36079407 120.63759613]
[112.36480713 135.50312805]
[115.55669403 139.63337708]
[116.72798157 144.12573242]
[116.07911682 148.14991760]
[114.11100769 151.07546997]
[115.44924164 166.01565552]
[116.78747559 180.95584106]
[118.12570953 195.89602661]
[119.46394348 210.83621216]
[120.80217743 225.77639771]
[122.14041138 240.71658325]
[137.12506104 239.99270630]
[152.12678528 239.88462830]
[167.12031555 240.39254761]
[182.08033752 241.51557922]
[196.98164368 243.25186157]
[211.79910278 245.59846497]
[226.50773621 248.55140686]
[241.08273315 252.10572815]
[255.49951172 256.25543213]
[269.73376465 260.99349976]
[283.76150513 266.31198120]
[297.55908203 272.20190430]
[311.10317993 278.65328979]
[324.37103271 285.65530396]
[337.34020996 293.19613647]
[349.98886108 301.26303101]
[362.29565430 309.84243774]
[374.23986816 318.91986084]
[385.80133057 328.48001099]
[396.96054077 338.50674438]
[407.69869995 348.98318481]
[417.99771118 359.89163208]
[427.84017944 371.21371460]
[437.20950317 382.93032837]
[446.08990479 395.02172852]
[454.46643066 407.46752930]
[462.32492065 420.24673462]
[469.65213013 433.33776855]
[476.43569946 446.71859741]
[482.66421509 460.36666870]
[488.32714844 474.25891113]
[493.41494751 488.37194824]
[497.91906738 502.68197632]
[501.83187866 517.16485596]
[505.14682007 531.79614258]
[507.85824585 546.55120850]
[509.96163940 561.40515137]
[511.45339966 576.33288574]
[512.33105469 591.30932617]
[512.59313965 606.30914307]
[512.23913574 621.30712891]
[511.26974487 636.27789307]
[509.68652344 651.19622803]
[507.49212646 666.03698730]
[504.69033813 680.77514648]
[501.28582764 695.38586426]
[497.28433228 709.84448242]
[492.69259644 724.12664795]
[487.51840210 738.20825195]
[481.77044678 752.06549072]
[475.45840454 765.67517090]
[468.59295654 779.01416016]
[461.18566895 792.06005859]
[453.24902344 804.79089355]
[444.79638672 817.18505859]
[435.84204102 829.22186279]
[426.40109253 840.88079834]
[416.48941040 852.14239502]
[406.12377930 862.98748779]
[395.32162476 873.39794922]
[384.10116577 883.35607910]
[372.48135376 892.84521484]
[360.48175049 901.84930420]
[348.12258911 910.35308838]
[335.42474365 918.34234619]
[322.40957642 925.80358887]
[309.09909058 932.72412109]
[295.51568604 939.09240723]
[281.68231201 944.89764404]
[267.62222290 950.13006592]
[253.35920715 954.78082275]
[238.91726685 958.84210205]
[224.32075500 962.30706787]
[209.59431458 965.16979980]
[194.76274109 967.42559814]
[179.85107422 969.07049561]
[164.88444519 970.10186768]
[149.88810730 970.51788330]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 132]
[74 131]
[75 130]
[76 129]
[77 128]
[78 127]
[79 126]
[80 122]
[81 121]
[82 120]
[84 119]
[85 118]
[86 117]
[88 115]
[89 114]
[90 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
