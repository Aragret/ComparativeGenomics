%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[137.03141785 915.54187012]
[122.12780762 913.82659912]
[107.30418396 911.52008057]
[92.58397675 908.62609863]
[77.99045563 905.14923096]
[63.54671097 901.09484863]
[49.27556992 896.46948242]
[35.19960022 891.28033447]
[21.34106255 885.53576660]
[7.72186470 879.24468994]
[-5.63645506 872.41717529]
[-18.71277618 865.06402588]
[-31.48641968 857.19671631]
[-43.93719101 848.82788086]
[-56.04539871 839.97064209]
[-67.79190063 830.63897705]
[-79.15812683 820.84771729]
[-90.12609863 810.61236572]
[-100.67846680 799.94897461]
[-110.79856110 788.87457275]
[-120.47037506 777.40649414]
[-129.67860413 765.56304932]
[-138.40870667 753.36285400]
[-146.64686584 740.82519531]
[-154.38006592 727.96990967]
[-161.59605408 714.81738281]
[-168.28344727 701.38836670]
[-174.43167114 687.70410156]
[-180.03099060 673.78625488]
[-185.07254028 659.65673828]
[-189.54838562 645.33801270]
[-193.45141602 630.85266113]
[-196.77548218 616.22357178]
[-199.51530457 601.47387695]
[-201.66658020 586.62695312]
[-203.22587585 571.70617676]
[-204.19075012 556.73529053]
[-204.55967712 541.73779297]
[-204.33204651 526.73754883]
[-203.50825500 511.75820923]
[-202.08958435 496.82345581]
[-200.07826233 481.95690918]
[-197.47750854 467.18206787]
[-194.29141235 452.52230835]
[-190.52500916 438.00082397]
[-186.18424988 423.64053345]
[-181.27601624 409.46417236]
[-175.80807495 395.49417114]
[-169.78903198 381.75259399]
[-163.22843933 368.26116943]
[-156.13667297 355.04125977]
[-148.52491760 342.11373901]
[-140.40524292 329.49902344]
[-131.79046631 317.21713257]
[-122.69420624 305.28744507]
[-113.13085175 293.72879028]
[-103.11553192 282.55950928]
[-92.66408539 271.79721069]
[-81.79302216 261.45895386]
[-70.51953888 251.56106567]
[-58.86146545 242.11918640]
[-46.83723450 233.14826965]
[-34.46585464 224.66247559]
[-21.76688957 216.67523193]
[-8.76041889 209.19917297]
[4.53298950 202.24612427]
[18.09231758 195.82707214]
[31.89612579 189.95216370]
[45.92258835 184.63069153]
[60.14952087 179.87106323]
[74.55443573 175.68081665]
[89.11454773 172.06657410]
[103.80683899 169.03405762]
[94.09791565 157.73864746]
[99.48158264 142.86160278]
[97.03585052 128.06233215]
[94.59012604 113.26305389]
[85.86773682 102.33549500]
[90.61060333 89.18267059]
[88.16487122 74.38339996]
[85.71914673 59.58412933]
[83.27342224 44.78485870]
[79.95997620 40.75147247]
[78.65544891 36.29597092]
[79.18421936 32.25425720]
[81.06434631 29.27139854]
[79.28188324 14.37768173]
[77.49942017 -0.51603526]
[75.71694946 -15.40975285]
[60.75372314 -17.24420738]
[46.66456223 -22.60694885]
[34.26859665 -31.18619537]
[24.28650856 -42.48315811]
[17.29864502 -55.84104538]
[13.71127033 -70.48325348]
[13.73295116 -85.55849457]
[17.36242485 -100.19032288]
[24.38868141 -113.52805328]
[34.40322113 -124.79625702]
[46.82381439 -133.33981323]
[60.92834091 -138.66200256]
[75.89678192 -140.45341492]
[90.85889435 -138.60989380]
[104.94480133 -133.23860168]
[117.33557129 -124.65184784]
[127.31080627 -113.34883881]
[134.29057312 -99.98671722]
[137.86906433 -85.34233856]
[137.83824158 -70.26711273]
[134.19990540 -55.63748550]
[127.16555786 -42.30401611]
[117.14418793 -31.04188347]
[104.71842194 -22.50586128]
[90.61067200 -17.19221878]
[92.39313507 -2.29850125]
[94.17559814 12.59521580]
[95.95806885 27.48893356]
[98.07269287 42.33913040]
[100.51841736 57.13840103]
[102.96414948 71.93767548]
[105.40987396 86.73694611]
[114.13226318 97.66450500]
[109.38939667 110.81732941]
[111.83512878 125.61660004]
[114.28085327 140.41587830]
[124.16471100 152.76982117]
[118.60610962 166.58833313]
[133.49288940 164.73262024]
[148.44166565 163.47021484]
[163.42881775 162.80313110]
[178.43063354 162.73240662]
[193.42341614 163.25816345]
[208.38342285 164.37956238]
[223.28703308 166.09483337]
[238.11067200 168.40126038]
[252.83088684 171.29521179]
[267.42440796 174.77209473]
[281.86816406 178.82641602]
[296.13931274 183.45175171]
[310.21530151 188.64082336]
[324.07385254 194.38539124]
[337.69308472 200.67639160]
[351.05142212 207.50387573]
[364.12774658 214.85704041]
[376.90142822 222.72425842]
[389.35220337 231.09309387]
[401.46044922 239.95031738]
[413.20697021 249.28192139]
[424.57321167 259.07315063]
[435.54119873 269.30850220]
[446.09362793 279.97183228]
[456.21374512 291.04626465]
[465.88558960 302.51425171]
[475.09384155 314.35772705]
[483.82397461 326.55789185]
[492.06216431 339.09552002]
[499.79537964 351.95074463]
[507.01141357 365.10327148]
[513.69885254 378.53225708]
[519.84710693 392.21649170]
[525.44647217 406.13436890]
[530.48803711 420.26382446]
[534.96392822 434.58258057]
[538.86700439 449.06793213]
[542.19110107 463.69702148]
[544.93096924 478.44668579]
[547.08227539 493.29364014]
[548.64160156 508.21435547]
[549.60656738 523.18530273]
[549.97552490 538.18273926]
[549.74792480 553.18298340]
[548.92413330 568.16235352]
[547.50549316 583.09710693]
[545.49426270 597.96368408]
[542.89355469 612.73852539]
[539.70745850 627.39825439]
[535.94110107 641.91979980]
[531.60040283 656.28009033]
[526.69219971 670.45642090]
[521.22430420 684.42645264]
[515.20526123 698.16802979]
[508.64471436 711.65948486]
[501.55297852 724.87939453]
[493.94128418 737.80694580]
[485.82162476 750.42169189]
[477.20687866 762.70361328]
[468.11065674 774.63336182]
[458.54733276 786.19201660]
[448.53204346 797.36132812]
[438.08062744 808.12365723]
[427.20959473 818.46191406]
[415.93612671 828.35986328]
[404.27807617 837.80175781]
[392.25387573 846.77270508]
[379.88250732 855.25854492]
[367.18356323 863.24578857]
[354.17712402 870.72186279]
[340.88372803 877.67498779]
[327.32443237 884.09405518]
[313.52062988 889.96899414]
[299.49417114 895.29052734]
[285.26724243 900.05017090]
[270.86236572 904.24047852]
[256.30224609 907.85473633]
[241.60997009 910.88732910]
[226.80873108 913.33337402]
[211.92195129 915.18902588]
[196.97317505 916.45141602]
[181.98602295 917.11846924]
[166.98419189 917.18914795]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 127]
[75 125]
[76 124]
[77 123]
[79 121]
[80 120]
[81 119]
[82 118]
[86 117]
[87 116]
[88 115]
[89 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
