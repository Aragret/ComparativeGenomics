%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAUxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[129.11277771 388.66052246]
[127.69123840 373.71496582]
[127.78902435 358.70223999]
[129.40515137 343.77645874]
[132.52301025 329.09075928]
[137.11062622 314.79583740]
[143.12092590 301.03839111]
[150.49221802 287.95959473]
[159.14886475 275.69363403]
[169.00204468 264.36642456]
[179.95063782 254.09416199]
[191.88230896 244.98226929]
[184.03054810 232.20143127]
[176.17878723 219.42059326]
[168.04357910 206.81828308]
[159.62895203 194.40078735]
[151.21434021 181.98329163]
[142.79972839 169.56579590]
[134.38510132 157.14830017]
[125.97048187 144.73080444]
[117.55586243 132.31330872]
[108.32876587 120.48703766]
[98.33059692 109.30506134]
[93.29563904 107.83429718]
[89.44312286 103.64723206]
[88.20729065 97.63810730]
[78.54647827 86.16340637]
[68.88566589 74.68870544]
[59.22485733 63.21400452]
[55.09210587 61.88196945]
[51.91747665 59.53969193]
[49.90090942 56.61243057]
[49.08369827 53.54668808]
[49.35529709 50.75663757]
[40.39459991 38.72726059]
[31.43390465 26.69788361]
[22.47320938 14.66850567]
[13.51251316 2.63912821]
[13.06401920 17.63242149]
[4.66875076 30.06300735]
[-9.07192707 36.07913208]
[-23.90031624 33.81663895]
[-35.22167587 23.97657776]
[-39.52796555 9.60800552]
[-35.48482895 -4.83682251]
[-24.34507942 -14.88201809]
[-9.56048679 -17.41496849]
[4.28798103 -11.65065002]
[-2.98524833 -24.76934433]
[-10.25847816 -37.88803864]
[-17.53170776 -51.00673294]
[-24.80493736 -64.12542725]
[-32.07816696 -77.24411774]
[-45.78948593 -71.13764191]
[-59.98084641 -66.24942780]
[-74.54424286 -62.61668777]
[-89.36884308 -60.26706696]
[-104.34181213 -59.21844864]
[-119.34918976 -59.47880936]
[-134.27677917 -61.04617310]
[-149.01094055 -63.90860748]
[-163.43957520 -68.04432678]
[-177.45283508 -73.42185974]
[-190.94407654 -80.00027466]
[-203.81063843 -87.72950745]
[-215.95458984 -96.55073547]
[-227.28349304 -106.39681244]
[-237.71113586 -117.19281006]
[-247.15815735 -128.85656738]
[-255.55265808 -141.29930115]
[-262.83074951 -154.42633057]
[-268.93704224 -168.13774109]
[-273.82504272 -182.32916260]
[-277.45758057 -196.89260864]
[-279.80697632 -211.71723938]
[-280.85540771 -226.69023132]
[-280.59481812 -241.69760132]
[-279.02725220 -256.62518311]
[-276.16461182 -271.35931396]
[-272.02868652 -285.78787231]
[-266.65097046 -299.80105591]
[-260.07235718 -313.29220581]
[-252.34294128 -326.15866089]
[-243.52154541 -338.30249023]
[-233.67530823 -349.63125610]
[-222.87916565 -360.05874634]
[-211.21527100 -369.50558472]
[-198.77241516 -377.89993286]
[-185.64529419 -385.17782593]
[-171.93380737 -391.28390503]
[-157.74230957 -396.17172241]
[-143.17880249 -399.80407715]
[-128.35414124 -402.15325928]
[-113.38114929 -403.20147705]
[-98.37377167 -402.94067383]
[-83.44622803 -401.37289429]
[-68.71213531 -398.51007080]
[-54.28363037 -394.37393188]
[-40.27051926 -388.99600220]
[-26.77945518 -382.41720581]
[-13.91311264 -374.68762207]
[-1.76941681 -365.86605835]
[9.55921078 -356.01965332]
[19.98655128 -345.22335815]
[29.43324471 -333.55935669]
[37.82739639 -321.11636353]
[45.10511398 -307.98913574]
[51.21101761 -294.27755737]
[56.09863281 -280.08599854]
[59.73075867 -265.52246094]
[62.07975769 -250.69775391]
[63.12774658 -235.72474670]
[62.86675262 -220.71736145]
[61.29876328 -205.78985596]
[58.43570709 -191.05580139]
[54.29938126 -176.62734985]
[48.92126083 -162.61431885]
[42.34227753 -149.12333679]
[34.61250305 -136.25711060]
[25.79076767 -124.11353302]
[15.94421005 -112.78504181]
[5.14777184 -102.35785675]
[-6.51637983 -92.91132355]
[-18.95947266 -84.51734924]
[-11.68624306 -71.39865875]
[-4.41301298 -58.27996063]
[2.86021638 -45.16126633]
[10.13344574 -32.04257202]
[17.40667534 -18.92387962]
[25.54189110 -6.32156801]
[34.50258636 5.70780993]
[43.46328354 17.73718834]
[52.42398071 29.76656532]
[61.38467407 41.79594421]
[70.69955444 53.55319595]
[80.36036682 65.02789307]
[90.02117920 76.50259399]
[99.68199158 87.97729492]
[109.51257324 99.30688477]
[119.51074219 110.48886108]
[118.61981201 95.51534271]
[125.87260437 82.38533783]
[139.02175903 75.16732025]
[153.99285889 76.09786987]
[166.14695740 84.88864899]
[171.71798706 98.81573486]
[168.97967529 113.56367493]
[158.78053284 124.56265259]
[144.28086853 128.40452576]
[129.97335815 123.89868164]
[138.38798523 136.31617737]
[146.80259705 148.73367310]
[155.21722412 161.15116882]
[163.63183594 173.56866455]
[172.04644775 185.98616028]
[180.46107483 198.40365601]
[185.15834045 200.68022156]
[188.20773315 204.18086243]
[189.41891479 208.07292175]
[188.95964050 211.56883240]
[196.81138611 224.34967041]
[204.66314697 237.13052368]
[218.18421936 230.60581970]
[232.29602051 225.48252869]
[246.85372925 221.81321716]
[261.70797729 219.63552856]
[276.70632935 218.97181702]
[291.69488525 219.82887268]
[306.51980591 222.19793701]
[321.02899170 226.05467224]
[335.07354736 231.35951233]
[348.50936890 238.05801392]
[361.19854736 246.08145142]
[373.01092529 255.34747314]
[383.82522583 265.76101685]
[393.53051758 277.21520996]
[402.02719116 289.59249878]
[409.22805786 302.76589966]
[415.05920410 316.60021973]
[419.46084595 330.95352173]
[422.38778687 345.67846680]
[423.80999756 360.62396240]
[423.71286011 375.63668823]
[422.09741211 390.56253052]
[418.98016357 405.24838257]
[414.39318848 419.54351807]
[408.38351440 433.30120850]
[401.01278687 446.38034058]
[392.35665894 458.64666748]
[382.50399780 469.97433472]
[371.55584717 480.24707031]
[359.62460327 489.35946655]
[346.83264160 497.21804810]
[333.31127930 503.74215698]
[319.19924927 508.86480713]
[304.64138794 512.53350830]
[289.78704834 514.71051025]
[274.78866577 515.37359619]
[259.80014038 514.51586914]
[244.97532654 512.14617920]
[230.46630859 508.28878784]
[216.42198181 502.98330688]
[202.98646545 496.28421021]
[190.29762268 488.26022339]
[178.48568726 478.99368286]
[167.67182922 468.57968140]
[157.96705627 457.12506104]
[149.47093201 444.74737549]
[142.27064514 431.57366943]
[136.44007874 417.73907471]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 162]
[13 161]
[14 160]
[15 156]
[16 155]
[17 154]
[18 153]
[19 152]
[20 151]
[21 150]
[22 140]
[23 139]
[26 138]
[27 137]
[28 136]
[29 135]
[34 134]
[35 133]
[36 132]
[37 131]
[38 130]
[48 129]
[49 128]
[50 127]
[51 126]
[52 125]
[53 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
