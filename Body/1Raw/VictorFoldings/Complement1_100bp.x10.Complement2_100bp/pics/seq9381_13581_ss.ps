%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[127.60408783 574.42346191]
[131.90292358 559.99761963]
[139.01799011 546.73254395]
[148.65788269 535.17156982]
[160.42790222 525.78796387]
[173.84602356 518.96606445]
[169.87393188 504.50152588]
[165.90184021 490.03698730]
[161.92973328 475.57247925]
[148.79762268 463.93139648]
[153.60118103 446.15481567]
[149.41416931 431.75103760]
[145.22715759 417.34725952]
[141.04014587 402.94345093]
[136.85314941 388.53967285]
[132.66613770 374.13589478]
[128.47912598 359.73211670]
[124.29210663 345.32833862]
[120.10509491 330.92456055]
[115.91808319 316.52078247]
[111.73107147 302.11700439]
[104.58377838 315.30471802]
[90.67839050 320.92968750]
[76.37227631 316.42022705]
[68.20599365 303.83804321]
[69.91306305 288.93548584]
[80.71302795 278.52584839]
[95.66828918 277.36825562]
[107.94258118 285.99343872]
[105.27677917 271.23223877]
[102.61098480 256.47100830]
[99.94519043 241.70979309]
[92.86642456 254.93443298]
[79.81372833 262.32546997]
[64.83164215 261.59268188]
[52.56251144 252.96318054]
[46.80807114 239.11087036]
[49.35139084 224.32806396]
[59.40439606 213.19535828]
[73.85205841 209.16235352]
[88.21760559 213.47871399]
[98.04982758 224.80722046]
[89.75194550 212.43812561]
[96.86531830 198.30622864]
[96.19553375 183.32119751]
[95.52574921 168.33615112]
[94.85596466 153.35112000]
[94.18618011 138.36607361]
[93.51638794 123.38103485]
[92.84660339 108.39599609]
[80.95215607 117.53503418]
[66.35498047 114.08213043]
[59.81557846 100.58264160]
[66.15455627 86.98788452]
[80.69905090 83.31941223]
[92.72663116 92.28002167]
[93.17323303 77.28667450]
[93.61984253 62.29332352]
[86.29685211 48.26889801]
[94.40966034 35.77763748]
[93.62834167 20.79800034]
[91.62432861 5.93247223]
[89.62030792 -8.93305588]
[87.61629486 -23.79858398]
[85.61228180 -38.66411209]
[77.95006561 -25.76874924]
[64.58036804 -18.96792793]
[49.64593887 -20.36895370]
[37.77437592 -29.53770447]
[32.64421082 -43.63314438]
[35.84508133 -58.28764725]
[46.38516235 -68.96035767]
[60.99849319 -72.34421539]
[75.15698242 -67.39070129]
[84.47354889 -55.63447189]
[84.47354889 -70.63446808]
[76.73625183 -84.43463898]
[84.47354889 -97.16191101]
[84.47354889 -112.16191101]
[84.47354889 -127.16191101]
[84.47354889 -142.16191101]
[69.40802002 -146.98379517]
[56.58570480 -156.21386719]
[47.25475311 -168.93888855]
[42.31888962 -183.90608215]
[42.24987030 -199.64656067]
[47.04244995 -214.61944580]
[56.21604156 -227.36270142]
[68.86289215 -236.63591003]
[83.73791504 -241.54103088]
[83.51458740 -256.53936768]
[83.29125977 -271.53768921]
[83.06793213 -286.53604126]
[82.84460449 -301.53436279]
[68.24586487 -305.37875366]
[55.22626877 -313.02026367]
[44.75196075 -323.89187622]
[37.60020447 -337.18679810]
[34.30170822 -351.91845703]
[35.10123825 -366.99371338]
[39.93946838 -381.29388428]
[48.45737076 -393.75772095]
[60.02285385 -403.46041870]
[73.77768707 -409.68191528]
[88.70117188 -411.96057129]
[103.68588257 -410.12725830]
[117.61985779 -404.31805420]
[129.46910095 -394.96401978]
[138.35432434 -382.75927734]
[143.61618042 -368.60952759]
[144.86419678 -353.56475830]
[142.00578308 -338.74139404]
[135.25303650 -325.23944092]
[125.10705566 -314.06082153]
[112.32074738 -306.03503418]
[97.84294128 -301.75769043]
[98.06626892 -286.75936890]
[98.28959656 -271.76101685]
[98.51292419 -256.76269531]
[98.73625183 -241.76435852]
[112.45666504 -237.89961243]
[124.54501343 -230.31594849]
[134.01634216 -219.62069702]
[140.09596252 -206.67512512]
[142.28277588 -192.52511597]
[140.39059448 -178.31663513]
[134.56396484 -165.20295715]
[125.26713562 -154.25106812]
[113.24709320 -146.35479736]
[99.47354889 -142.16191101]
[99.47354889 -127.16191101]
[99.47354889 -112.16191101]
[99.47354889 -97.16191101]
[107.21085358 -84.43463898]
[99.47354889 -70.63446808]
[99.47354889 -55.63447189]
[100.47781372 -40.66812515]
[102.48182678 -25.80259705]
[104.48583984 -10.93706989]
[106.48985291 3.92845869]
[108.49386597 18.79398727]
[115.22090149 5.38701200]
[127.35388947 -3.43288708]
[142.18228149 -5.69532204]
[156.39340210 -0.89485878]
[166.81240845 9.89606667]
[171.11170959 24.26673317]
[168.33081055 39.00669861]
[159.09095764 50.82301712]
[145.45639038 57.07588959]
[130.47308350 56.36841202]
[117.48834991 48.85863876]
[109.40300751 36.22424316]
[116.75794220 49.17624283]
[108.61318970 62.73992920]
[108.16658020 77.73327637]
[107.71997833 92.72663116]
[107.83164215 107.72621155]
[108.50142670 122.71125031]
[109.17121887 137.69628906]
[109.84100342 152.68133545]
[110.51078796 167.66636658]
[111.18057251 182.65141296]
[111.85035706 197.63644409]
[120.19615173 211.07736206]
[113.03486633 224.13743591]
[114.70640564 239.04400635]
[117.37220764 253.80522156]
[120.03800201 268.56643677]
[122.70379639 283.32766724]
[126.13485718 297.92999268]
[130.32186890 312.33377075]
[134.50888062 326.73754883]
[138.69589233 341.14132690]
[142.88290405 355.54510498]
[147.06991577 369.94888306]
[151.25692749 384.35266113]
[155.44393921 398.75643921]
[159.63095093 413.16024780]
[163.81796265 427.56402588]
[168.00497437 441.96780396]
[178.91206360 448.85241699]
[182.10290527 460.93557739]
[176.39425659 471.60037231]
[180.36636353 486.06491089]
[184.33845520 500.52941895]
[188.31054688 514.99395752]
[203.33085632 514.00640869]
[218.24244690 516.06298828]
[232.43469238 521.07946777]
[245.32643127 528.85040283]
[256.38973999 539.05767822]
[265.17163086 551.28320312]
[271.31243896 565.02636719]
[274.56072998 579.72448730]
[274.78347778 594.77557373]
[271.97155762 609.56329346]
[266.24014282 623.48223877]
[257.82388306 635.96228027]
[247.06745911 646.49243164]
[234.41133118 654.64147949]
[220.37374878 660.07574463]
[205.52955627 662.57269287]
[190.48660278 662.03009033]
[175.86088562 658.47009277]
[162.25134277 652.03851318]
[150.21524048 642.99877930]
[140.24546814 631.72094727]
[132.75028992 618.66693115]
[128.03662109 604.37127686]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 187]
[7 186]
[8 185]
[9 184]
[11 181]
[12 180]
[13 179]
[14 178]
[15 177]
[16 176]
[17 175]
[18 174]
[19 173]
[20 172]
[21 171]
[29 170]
[30 169]
[31 168]
[32 167]
[42 166]
[44 164]
[45 163]
[46 162]
[47 161]
[48 160]
[49 159]
[50 158]
[56 157]
[57 156]
[58 155]
[60 153]
[61 141]
[62 140]
[63 139]
[64 138]
[65 137]
[75 136]
[76 135]
[78 133]
[79 132]
[80 131]
[81 130]
[90 120]
[91 119]
[92 118]
[93 117]
[94 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
