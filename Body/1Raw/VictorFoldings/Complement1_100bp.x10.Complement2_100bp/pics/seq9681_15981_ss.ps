%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[29.65600586 405.90350342]
[24.60967445 420.06265259]
[17.41038704 433.25799561]
[8.23543262 445.16455078]
[-2.68924856 455.48919678]
[-15.09462547 463.97760010]
[-28.67520523 470.42074585]
[-43.09655380 474.66000366]
[-58.00352859 476.59094238]
[-73.02903748 476.16601562]
[-87.80306244 473.39569092]
[-101.96177673 468.34820557]
[-115.15651703 461.14782715]
[-127.06233978 451.97189331]
[-137.38606262 441.04635620]
[-145.87344360 428.64025879]
[-152.31549072 415.05917358]
[-156.55354309 400.63745117]
[-158.48326111 385.73031616]
[-158.05709839 370.70486450]
[-155.28555298 355.93106079]
[-150.23687744 341.77276611]
[-143.03541565 328.57861328]
[-133.85848999 316.67355347]
[-122.93211365 306.35073853]
[-110.52533722 297.86437988]
[-96.94369507 291.42343140]
[-82.52164459 287.18658447]
[-67.61434937 285.25808716]
[-52.58890915 285.68551636]
[-37.81534195 288.45825195]
[-32.77842712 274.32922363]
[-27.74151039 260.20019531]
[-22.70459557 246.07118225]
[-17.66767883 231.94213867]
[-28.42895317 242.39178467]
[-41.16155243 250.32153320]
[-55.28623199 255.37063599]
[-70.16041565 257.30938721]
[-85.10741425 256.04959106]
[-99.44725800 251.64857483]
[-112.52756500 244.30653381]
[-123.75327301 234.35749817]
[-132.61369324 222.25405884]
[-138.70571899 208.54687500]
[-141.75222778 193.85949707]
[-141.61460876 178.86013794]
[-138.29911804 164.23114014]
[-131.95658875 150.63803101]
[-122.87558746 138.69921875]
[-111.46921539 128.95782471]
[-98.25638580 121.85703278]
[-83.83821106 117.71987152]
[-68.87060547 116.73455811]
[-54.03450394 118.94590759]
[-40.00484848 124.25333405]
[-27.41989326 132.41537476]
[-16.85217094 143.06071472]
[-8.78244209 155.70506287]
[-3.57782507 169.77317810]
[-1.47509587 184.62506104]
[-2.56991434 199.58505249]
[-6.81413507 213.97657776]
[3.34941173 202.94470215]
[13.51295853 191.91282654]
[23.67650604 180.88093567]
[33.50708771 169.55134583]
[42.99598312 157.93408203]
[52.48488235 146.31681824]
[61.97378159 134.69955444]
[64.03254700 119.94792175]
[78.75485992 114.15447235]
[88.24375916 102.53720856]
[97.55864716 90.77996063]
[106.69744873 78.88532257]
[105.79872131 66.01850128]
[113.65532684 56.29957581]
[125.63129425 54.59584045]
[134.94618225 42.83858871]
[144.26106262 31.08133507]
[152.85961914 18.79049873]
[160.71138000 6.00965548]
[168.56314087 -6.77118683]
[169.19422913 -22.57980156]
[182.44892883 -29.37405968]
[190.30068970 -42.15490341]
[198.15245056 -54.93574524]
[206.00419617 -67.71659088]
[193.93786621 -76.64324188]
[182.68359375 -86.57414246]
[172.32469177 -97.43575287]
[162.93786621 -109.14766693]
[154.59262085 -121.62316895]
[147.35070801 -134.76989746]
[141.26579285 -148.49049377]
[136.38288879 -162.68341064]
[132.73815918 -177.24354553]
[130.35859680 -192.06309509]
[129.26181030 -207.03234863]
[129.45593262 -222.04046631]
[130.93951416 -236.97634888]
[133.70156860 -251.72940063]
[137.72164917 -266.19039917]
[142.97000122 -280.25225830]
[149.40776062 -293.81091309]
[156.98727417 -306.76593018]
[165.65240479 -319.02142334]
[175.33900452 -330.48663330]
[185.97535706 -341.07669067]
[197.48272705 -350.71316528]
[209.77589417 -359.32476807]
[222.76385498 -366.84768677]
[236.35044861 -373.22622681]
[250.43507385 -378.41320801]
[264.91348267 -382.37014771]
[279.67843628 -385.06784058]
[294.62063599 -386.48623657]
[309.62945557 -386.61489868]
[324.59378052 -385.45281982]
[339.40283203 -383.00863647]
[353.94692993 -379.30041504]
[368.11837769 -374.35565186]
[381.81231689 -368.21093750]
[394.92733765 -360.91174316]
[407.36630249 -352.51214600]
[419.03717041 -343.07434082]
[429.85348511 -332.66815186]
[439.73519897 -321.37066650]
[448.60913086 -309.26550293]
[456.40957642 -296.44232178]
[463.07879639 -282.99600220]
[468.56744385 -269.02618408]
[472.83480835 -254.63621521]
[475.84933472 -239.93267822]
[477.58874512 -225.02442932]
[478.04006958 -210.02183533]
[477.20004272 -195.03598022]
[475.07485962 -180.17781067]
[471.68026733 -165.55734253]
[467.04135132 -151.28282166]
[461.19250488 -137.45993042]
[454.17703247 -124.19100189]
[446.04684448 -111.57427979]
[436.86215210 -99.70318604]
[426.69097900 -88.66560364]
[415.60858154 -78.54325104]
[403.69702148 -69.41107178]
[391.04452515 -61.33668518]
[377.74475098 -54.37986755]
[363.89614868 -48.59212494]
[349.60128784 -44.01630783]
[334.96597290 -40.68629837]
[320.09857178 -38.62674713]
[305.10916138 -37.85290527]
[290.10870361 -38.37050247]
[275.20828247 -40.17570496]
[260.51818848 -43.25514603]
[246.14721680 -47.58602905]
[232.20175171 -53.13628769]
[218.78504944 -59.86483002]
[210.93328857 -47.08398819]
[203.08152771 -34.30314636]
[195.22978210 -21.52230453]
[195.16029358 -6.62786102]
[181.34397888 1.08056843]
[173.49221802 13.86141109]
[165.64047241 26.64225388]
[179.96476746 22.19089699]
[194.20642090 26.89992332]
[203.05368042 39.01298141]
[203.20669556 54.01219940]
[194.60842896 66.30324554]
[180.46580505 71.30185699]
[166.05368042 67.14367676]
[156.74740601 55.37960434]
[156.01831055 40.39621735]
[146.70343018 52.15346909]
[137.38854980 63.91072083]
[135.76762390 81.38468933]
[118.59207916 88.02412415]
[109.45327759 99.91876221]
[108.93958282 105.13892365]
[105.53770447 109.69967651]
[99.86102295 112.02610779]
[90.37212372 123.64337158]
[87.63465118 139.22595215]
[73.59104156 144.18846130]
[64.10214996 155.80572510]
[54.61324692 167.42298889]
[45.12435150 179.04025269]
[44.58004379 183.34811401]
[42.86565399 186.90133667]
[40.36208725 189.42474365]
[37.50050735 190.79512024]
[34.70838165 191.04449463]
[24.54483604 202.07637024]
[14.38128853 213.10824585]
[4.21774197 224.14012146]
[-3.53864932 236.97906494]
[-8.57556534 251.10809326]
[-13.61248207 265.23712158]
[-18.64939690 279.36614990]
[-23.68631363 293.49517822]
[-10.49038982 300.69338989]
[1.41694927 309.86734009]
[11.74247360 320.79116821]
[20.23190689 333.19586182]
[26.67619133 346.77590942]
[30.91662979 361.19689941]
[32.84879684 376.10372925]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 203]
[32 202]
[33 201]
[34 200]
[35 199]
[63 198]
[64 197]
[65 196]
[66 195]
[67 190]
[68 189]
[69 188]
[70 187]
[72 185]
[73 184]
[74 181]
[75 180]
[78 178]
[79 177]
[80 176]
[81 167]
[82 166]
[83 165]
[85 163]
[86 162]
[87 161]
[88 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
