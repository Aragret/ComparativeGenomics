%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[-22.52697372 810.28021240]
[-37.32930374 812.72320557]
[-52.22690582 814.49481201]
[-67.18934631 815.59143066]
[-82.18605042 816.01086426]
[-97.18639374 815.75213623]
[-112.15972137 814.81585693]
[-127.07544708 813.20391846]
[-141.90310669 810.91967773]
[-156.61238098 807.96771240]
[-171.17324829 804.35406494]
[-185.55595398 800.08618164]
[-199.73110962 795.17272949]
[-213.66976929 789.62371826]
[-227.34342957 783.45056152]
[-240.72418213 776.66583252]
[-253.78468323 769.28338623]
[-266.49822998 761.31829834]
[-278.83889771 752.78686523]
[-290.78143311 743.70648193]
[-302.30145264 734.09576416]
[-313.37542725 723.97424316]
[-323.98071289 713.36273193]
[-334.09564209 702.28277588]
[-343.69958496 690.75708008]
[-352.77291870 678.80920410]
[-361.29705811 666.46350098]
[-369.25463867 653.74523926]
[-376.62939453 640.68041992]
[-383.40621948 627.29565430]
[-389.57131958 613.61834717]
[-395.11209106 599.67645264]
[-400.01718140 585.49835205]
[-404.27661133 571.11315918]
[-407.88162231 556.55017090]
[-410.82492065 541.83911133]
[-413.10046387 527.01013184]
[-414.70358276 512.09344482]
[-415.63101196 497.11959839]
[-415.88085938 482.11907959]
[-415.45263672 467.12265015]
[-414.34719849 452.16085815]
[-412.56680298 437.26428223]
[-410.11508179 422.46340942]
[-406.99703979 407.78842163]
[-403.21908569 393.26931763]
[-398.78887939 378.93579102]
[-393.71551514 364.81707764]
[-388.00936890 350.94201660]
[-381.68203735 337.33898926]
[-374.74649048 324.03579712]
[-367.21691895 311.05957031]
[-359.10864258 298.43682861]
[-350.43826294 286.19338989]
[-341.22351074 274.35424805]
[-331.48318481 262.94360352]
[-321.23718262 251.98474121]
[-310.50643921 241.50006104]
[-299.31289673 231.51098633]
[-287.67938232 222.03791809]
[-275.62973022 213.10021973]
[-263.18847656 204.71615601]
[-250.38108826 196.90283203]
[-237.23371887 189.67622375]
[-223.77322388 183.05110168]
[-210.02711487 177.04096985]
[-196.02345276 171.65815735]
[-181.79087830 166.91360474]
[-167.35842896 162.81704712]
[-152.75561523 159.37684631]
[-138.01226807 156.60002136]
[-123.15850067 154.49223328]
[-108.22466278 153.05781555]
[-93.24125671 152.29966736]
[-78.23889923 152.21937561]
[-63.24823761 152.81707764]
[-48.29989624 154.09155273]
[-33.42441940 156.04020691]
[-18.65218735 158.65905762]
[-4.01338530 161.94274902]
[10.46208191 165.88458252]
[24.74464226 170.47648621]
[38.80511475 175.70910645]
[52.61478043 181.57173157]
[59.09427643 168.04338074]
[65.57376862 154.51502991]
[72.05326843 140.98669434]
[70.57283020 126.16584015]
[83.51222992 117.06185913]
[89.99172974 103.53351593]
[95.65451050 89.64348602]
[100.48051453 75.44103241]
[105.30651093 61.23857498]
[108.95459747 46.68895340]
[111.40032196 31.88968277]
[113.84605408 17.09041214]
[116.29177856 2.29114175]
[118.73750305 -12.50812912]
[121.18323517 -27.30739975]
[123.62895966 -42.10667038]
[109.94583893 -48.48434448]
[98.49154663 -58.31805038]
[90.11607361 -70.87806702]
[85.44093323 -85.23236084]
[84.81305695 -100.31573486]
[88.27902985 -115.00891876]
[95.58165741 -128.22157288]
[106.17903900 -138.97323608]
[119.28477478 -146.46604919]
[133.92633057 -150.14401245]
[149.01721191 -149.73417664]
[163.43756104 -145.26698303]
[176.11730957 -137.07389832]
[186.11553955 -125.76292419]
[192.69029236 -112.17340088]
[195.35369873 -97.31375885]
[193.90809631 -82.28668976]
[188.46078491 -68.20729828]
[179.41596985 -56.12036896]
[167.44483948 -46.92282867]
[153.43572998 -41.29720306]
[138.42823792 -39.66094208]
[135.98249817 -24.86167336]
[133.53677368 -10.06240177]
[131.09104919 4.73686886]
[128.64532471 19.53614044]
[126.19959259 34.33541107]
[123.75386810 49.13468170]
[134.11845398 38.29146194]
[148.30522156 33.41954422]
[163.14482117 35.60733032]
[175.32203674 44.36606216]
[182.11645508 57.73901367]
[182.01017761 72.73863983]
[175.02696228 86.01397705]
[162.72686768 94.59928894]
[147.85775757 96.57659149]
[133.74143982 91.50415039]
[123.53153992 80.51515961]
[119.50896454 66.06457520]
[114.68296814 80.26702881]
[109.85697174 94.46948242]
[122.83959961 86.95607758]
[137.77053833 88.39385223]
[149.08090210 98.24654388]
[152.55221558 112.83935547]
[146.88975525 126.72951508]
[134.20549011 134.73634338]
[119.23033142 133.87348938]
[107.54963684 124.46278381]
[103.52007294 110.01300812]
[97.04057312 123.54135132]
[98.05755615 139.32983398]
[85.58161163 147.46618652]
[79.10211945 160.99452209]
[72.62261963 174.52287292]
[66.14312744 188.05122375]
[79.36715698 195.13656616]
[92.25750732 202.81224060]
[104.78784943 211.06256104]
[116.93257904 219.87066650]
[128.66688538 229.21855164]
[139.96681213 239.08714294]
[150.80924988 249.45626831]
[161.17205811 260.30474854]
[171.03405762 271.61041260]
[180.37512207 283.35015869]
[189.17614746 295.50000000]
[197.41917419 308.03515625]
[205.08734131 320.92996216]
[212.16499329 334.15811157]
[218.63766479 347.69259644]
[224.49214172 361.50570679]
[229.71646118 375.56927490]
[234.29994202 389.85452271]
[238.23323059 404.33233643]
[241.50828552 418.97305298]
[244.11840820 433.74682617]
[246.05828857 448.62344360]
[247.32395935 463.57254028]
[247.91281128 478.56356812]
[247.82365417 493.56585693]
[247.05668640 508.54882812]
[245.61344910 523.48181152]
[243.49690247 538.33435059]
[240.71138000 553.07604980]
[237.26255798 567.67681885]
[233.15748596 582.10687256]
[228.40454102 596.33660889]
[223.01345825 610.33709717]
[216.99523926 624.07965088]
[210.36216736 637.53625488]
[203.12780762 650.67938232]
[195.30693054 663.48211670]
[186.91551208 675.91839600]
[177.97070312 687.96282959]
[168.49078369 699.59075928]
[158.49511719 710.77838135]
[148.00410461 721.50292969]
[137.03919983 731.74249268]
[125.62279510 741.47607422]
[113.77822113 750.68383789]
[101.52966309 759.34698486]
[88.90216064 767.44781494]
[75.92149353 774.96972656]
[62.61419296 781.89739990]
[49.00743866 788.21673584]
[35.12903214 793.91467285]
[21.00732422 798.97973633]
[6.67116547 803.40148926]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[84 157]
[85 156]
[86 155]
[87 154]
[89 152]
[90 151]
[91 142]
[92 141]
[93 140]
[94 128]
[95 127]
[96 126]
[97 125]
[98 124]
[99 123]
[100 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
