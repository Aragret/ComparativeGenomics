%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[92.78060913 556.66119385]
[80.68398285 547.73547363]
[70.17588043 536.98486328]
[61.52849579 524.68774414]
[54.96580505 511.16268921]
[50.65780640 496.76000977]
[48.71608353 481.85275269]
[49.19093323 466.82708740]
[52.07005310 452.07220459]
[57.27886963 437.97027588]
[64.68246460 424.88659668]
[74.08905792 413.16003418]
[85.25500488 403.09436035]
[97.89108276 394.95028687]
[111.66997528 388.93878174]
[126.23478699 385.21554565]
[124.89655304 370.27536011]
[123.55831909 355.33517456]
[122.22008514 340.39498901]
[120.88185120 325.45480347]
[119.54361725 310.51461792]
[102.97549438 301.86648560]
[94.90287018 284.84408569]
[98.75131989 266.24841309]
[113.14298248 253.63035583]
[111.13896942 238.76483154]
[109.13495636 223.89930725]
[99.76663971 212.31983948]
[105.59085846 197.60968018]
[103.58684540 182.74414062]
[101.58283234 167.87861633]
[92.21452332 156.29914856]
[98.03874207 141.58898926]
[88.67043304 130.00952148]
[94.49465179 115.29935455]
[83.90264893 102.29221344]
[90.44290924 86.84548950]
[88.21778870 72.01145172]
[85.99267578 57.17740631]
[83.54694366 42.37813568]
[80.88114929 27.61691666]
[78.21535492 12.85570049]
[75.54956055 -1.90551698]
[65.48286438 -14.11093616]
[70.83511353 -28.01067543]
[68.16931152 -42.77189255]
[65.50351715 -57.53310776]
[49.88605499 -62.96327209]
[39.19931030 -75.45683289]
[36.28812408 -91.54228973]
[41.85388565 -106.81246185]
[54.28852081 -117.13197327]
[51.40324783 -131.85186768]
[48.51797485 -146.57174683]
[45.63270187 -161.29164124]
[42.74743271 -176.01153564]
[37.60547256 -190.10267639]
[30.33224106 -203.22137451]
[23.05901146 -216.34005737]
[15.78578281 -229.45875549]
[8.51255322 -242.57745361]
[1.23932385 -255.69615173]
[-12.65058613 -249.98765564]
[-27.10930252 -245.93031311]
[-41.94129181 -243.57899475]
[-56.94596100 -242.96549988]
[-71.92039490 -244.09812927]
[-86.66207886 -246.96156311]
[-100.97164917 -251.51707458]
[-114.65558624 -257.70306396]
[-127.52883148 -265.43585205]
[-139.41728210 -274.61090088]
[-150.16017151 -285.10406494]
[-159.61219788 -296.77349854]
[-167.64555359 -309.46136475]
[-174.15158081 -322.99606323]
[-179.04229736 -337.19454956]
[-182.25157166 -351.86483765]
[-183.73599243 -366.80850220]
[-183.47547913 -381.82345581]
[-181.47357178 -396.70663452]
[-177.75732422 -411.25674438]
[-172.37699890 -425.27703857]
[-165.40538025 -438.57791138]
[-156.93672180 -450.97946167]
[-147.08557129 -462.31396484]
[-135.98513794 -472.42816162]
[-123.78556061 -481.18527222]
[-110.65181732 -488.46685791]
[-96.76152802 -494.17440796]
[-82.30254364 -498.23080444]
[-67.47039795 -500.58111572]
[-52.46568680 -501.19360352]
[-37.49132919 -500.05996704]
[-22.74983406 -497.19555664]
[-8.44056702 -492.63909912]
[5.24295759 -486.45220947]
[18.11568451 -478.71853638]
[30.00352478 -469.54272461]
[40.74571228 -459.04882812]
[50.19696426 -447.37875366]
[58.22946930 -434.69036865]
[64.73459625 -421.15521240]
[69.62436676 -406.95639038]
[72.83265686 -392.28591919]
[74.31607819 -377.34213257]
[74.05456543 -362.32720947]
[72.05165863 -347.44418335]
[68.33444214 -332.89431763]
[62.95318604 -318.87435913]
[55.98067093 -305.57397461]
[47.51118851 -293.17297363]
[37.65927887 -281.83911133]
[26.55817986 -271.72567749]
[14.35801792 -262.96939087]
[21.63124657 -249.85067749]
[28.90447617 -236.73199463]
[36.17770767 -223.61329651]
[43.45093536 -210.49459839]
[50.72416687 -197.37590027]
[50.15364456 -212.36505127]
[53.59454727 -226.96505737]
[60.79846954 -240.12193298]
[71.24535370 -250.88587952]
[84.18103790 -258.47982788]
[98.67167664 -262.35559082]
[113.67117310 -262.23333740]
[128.09671021 -258.12191772]
[140.90690613 -250.31813049]
[151.17695618 -239.38533020]
[158.16546631 -226.11277771]
[161.36793518 -211.45861816]
[160.55317688 -196.48077393]
[155.77999878 -182.26046753]
[147.39299011 -169.82431030]
[135.99761963 -160.07006836]
[122.41650391 -153.70190430]
[107.63010406 -151.17953491]
[92.70584869 -152.68507385]
[78.72113800 -158.10981750]
[66.68553925 -167.06214905]
[57.46732330 -178.89680481]
[60.35259628 -164.17691040]
[63.23786926 -149.45703125]
[66.12313843 -134.73713684]
[69.00841522 -120.01724243]
[82.19210815 -116.45252991]
[92.60372925 -107.51234436]
[98.17427826 -94.89813995]
[97.76448822 -81.04858398]
[91.39735413 -68.66812134]
[80.26473999 -60.19890594]
[82.93053436 -45.43768692]
[85.59632874 -30.67646980]
[95.47234344 -19.52687263]
[90.31077576 -4.57131243]
[92.97657013 10.18990517]
[95.64236450 24.95112228]
[98.30816650 39.71233749]
[101.65121460 43.12306213]
[102.88716888 48.67008591]
[100.82672119 54.95228958]
[103.05183411 69.78633118]
[105.27695465 84.62037659]
[114.20864868 92.09473419]
[115.85051727 103.62493134]
[109.36018372 113.29534149]
[118.87183380 125.93808746]
[112.90427399 139.58497620]
[122.41592407 152.22772217]
[116.44836426 165.87460327]
[118.45237732 180.74012756]
[120.45639038 195.60565186]
[129.96804810 208.24841309]
[124.00048065 221.89529419]
[126.00449371 236.76081848]
[128.00851440 251.62634277]
[138.89210510 255.22656250]
[147.60688782 262.59494019]
[152.91854858 272.63778687]
[154.09358215 283.88623047]
[151.00030518 294.71133423]
[144.12242126 303.55966187]
[134.48379517 309.17639160]
[135.82203674 324.11657715]
[137.16026306 339.05676270]
[138.49850464 353.99694824]
[139.83673096 368.93713379]
[141.17497253 383.87731934]
[156.16961670 384.95281982]
[170.79753113 388.41986084]
[184.67980957 394.18859863]
[197.45687866 402.10961914]
[208.79777527 411.97778320]
[218.40873718 423.53741455]
[226.04083252 436.48916626]
[231.49635315 450.49749756]
[234.63400269 465.19958496]
[235.37249756 480.21459961]
[233.69271851 495.15362549]
[229.63816833 509.62969971]
[223.31387329 523.26788330]
[214.88365173 535.71484375]
[204.56585693 546.64825439]
[192.62776184 555.78485107]
[179.37857056 562.88806152]
[165.16146851 567.77380371]
[150.34474182 570.31555176]
[135.31214905 570.44750977]
[120.45307922 568.16619873]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 189]
[17 188]
[18 187]
[19 186]
[20 185]
[21 184]
[25 177]
[26 176]
[27 175]
[29 173]
[30 172]
[31 171]
[33 169]
[35 167]
[37 164]
[38 163]
[39 162]
[40 159]
[41 158]
[42 157]
[43 156]
[45 154]
[46 153]
[47 152]
[52 146]
[53 145]
[54 144]
[55 143]
[56 142]
[57 120]
[58 119]
[59 118]
[60 117]
[61 116]
[62 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
