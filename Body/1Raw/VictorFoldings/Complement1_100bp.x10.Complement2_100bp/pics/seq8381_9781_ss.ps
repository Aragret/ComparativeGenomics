%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGGxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[176.84574890 224.33059692]
[183.04780579 210.66058350]
[190.50271606 197.63143921]
[199.14494324 185.35762024]
[187.74247742 175.61166382]
[176.34002686 165.86569214]
[164.93756104 156.11973572]
[153.53509521 146.37376404]
[141.57275391 137.32376099]
[129.09297180 129.00181580]
[116.61317444 120.67987823]
[104.13337708 112.35793304]
[111.64175415 125.34347534]
[115.99859619 139.69679260]
[116.97534180 154.66496277]
[114.52075195 169.46276855]
[108.76360321 183.31394958]
[100.00588989 195.49189758]
[88.70703125 205.35778809]
[75.45973969 212.39407349]
[60.95894623 216.23164368]
[45.96532822 216.66918945]
[31.26542473 213.68376160]
[17.63036156 207.43196106]
[5.77540541 198.24174500]
[-3.67755365 186.59521484]
[-10.23263359 173.10333252]
[-13.54596806 158.47384644]
[-13.44374561 143.47419739]
[-9.93132973 128.89123535]
[-3.19297314 115.48993683]
[6.41784191 103.97333527]
[18.39695168 94.94554901]
[32.11595917 88.88015747]
[46.85518646 86.09535217]
[61.84144592 86.73721313]
[76.28858948 90.77205658]
[89.44010162 97.98920441]
[80.84153748 85.69836426]
[72.24297333 73.40752411]
[63.64441299 61.11668777]
[65.70172882 75.97493744]
[63.54665756 90.81931305]
[57.34914780 104.47914124]
[47.59796906 115.87714386]
[35.06213379 124.11443329]
[20.73027611 128.54136658]
[5.73265982 128.80883789]
[-8.74793625 124.89574432]
[-21.56951332 117.11067963]
[-31.72090721 106.06761932]
[-38.40153885 92.63745880]
[-41.08454132 77.87936401]
[-39.55833054 62.95720673]
[-33.94326019 49.04782486]
[-24.68216133 37.24815750]
[-12.50540638 28.48878670]
[1.62669885 23.46050453]
[16.59963608 22.55986786]
[31.23257828 25.85790253]
[44.37150955 33.09450912]
[54.98232269 43.70175934]
[50.36831284 29.42902374]
[45.75430298 15.15629101]
[41.14029312 0.88355792]
[36.52628326 -13.38917542]
[31.91227531 -27.66190910]
[27.29826736 -41.93464279]
[22.68425751 -56.20737457]
[18.07024765 -70.48011017]
[3.31993985 -67.65026093]
[-11.66632652 -66.65455627]
[-26.66136360 -67.50807190]
[-41.43784714 -70.19788361]
[-55.77177811 -74.68321228]
[-69.44584656 -80.89604950]
[-82.25276184 -88.74222565]
[-93.99838257 -98.10279083]
[-104.50463104 -108.83583832]
[-113.61225128 -120.77865601]
[-121.18316650 -133.75019836]
[-127.10260010 -147.55381775]
[-131.28082275 -161.98025513]
[-133.65449524 -176.81080627]
[-134.18762207 -191.82064819]
[-132.87213135 -206.78224182]
[-129.72795105 -221.46875000]
[-124.80277252 -235.65756226]
[-118.17123413 -249.13354492]
[-109.93388367 -261.69244385]
[-100.21559143 -273.14382935]
[-89.16368103 -283.31411743]
[-76.94570160 -292.04916382]
[-63.74687958 -299.21649170]
[-49.76729584 -304.70745850]
[-35.21888351 -308.43884277]
[-20.32218933 -310.35409546]
[-5.30304337 -310.42413330]
[9.61086559 -308.64791870]
[24.19344711 -305.05236816]
[38.22363281 -299.69201660]
[51.48873138 -292.64807129]
[63.78764343 -284.02740479]
[74.93392181 -273.96060181]
[84.75859833 -262.60034180]
[93.11271667 -250.11883545]
[99.86965179 -236.70527649]
[104.92694855 -222.56303406]
[108.20796204 -207.90647888]
[109.66293335 -192.95780945]
[109.26982117 -177.94364929]
[107.03456879 -163.09159851]
[102.99108124 -148.62681580]
[97.20063782 -134.76860046]
[89.75102997 -121.72700500]
[80.75519562 -109.69976807]
[70.34950256 -98.86920166]
[58.69169617 -89.39949799]
[45.95851135 -81.43421936]
[32.34297943 -75.09411621]
[36.95698929 -60.82138443]
[41.57099915 -46.54865265]
[46.18500900 -32.27591705]
[50.79901886 -18.00318527]
[55.41302872 -3.73045135]
[60.02703857 10.54228210]
[64.64104462 24.81501579]
[69.25505829 39.08774948]
[75.93524933 52.51812363]
[84.53381348 64.80895996]
[93.13237762 77.09980011]
[101.73094177 89.39064026]
[112.45532227 99.87814331]
[124.93511200 108.20008087]
[137.41490173 116.52202606]
[149.89469910 124.84397125]
[145.97949219 110.36394501]
[151.21525574 96.30738831]
[163.64915466 87.91703796]
[178.64367676 88.32230377]
[190.60623169 97.37201691]
[195.07507324 111.69086456]
[190.38345337 125.93827057]
[178.28120422 134.80030823]
[163.28106689 134.97129822]
[174.68351746 144.71726990]
[186.08598328 154.46322632]
[197.48844910 164.20919800]
[208.89091492 173.95516968]
[219.66944885 163.50730896]
[231.37898254 154.11470032]
[243.91661072 145.85986328]
[257.17214966 138.81535339]
[271.02911377 133.04309082]
[285.36572266 128.59378052]
[300.05596924 125.50654602]
[314.97076416 123.80850983]
[329.97903442 123.51459503]
[344.94888306 124.62738037]
[359.74874878 127.13708496]
[374.24853516 131.02166748]
[388.32089233 136.24696350]
[401.84207153 142.76708984]
[414.69329834 150.52470398]
[426.76159668 159.45166016]
[437.94091797 169.46949768]
[448.13302612 180.49017334]
[457.24835205 192.41683960]
[465.20678711 205.14468384]
[471.93835449 218.56184387]
[477.38397217 232.55041504]
[481.49569702 246.98745728]
[484.23745728 261.74609375]
[485.58511353 276.69662476]
[485.52685547 291.70764160]
[484.06317139 306.64727783]
[481.20693970 321.38418579]
[476.98327637 335.78884888]
[471.42926025 349.73474121]
[464.59375000 363.09924316]
[456.53674316 375.76492310]
[447.32913208 387.62048340]
[437.05178833 398.56170654]
[425.79501343 408.49246216]
[413.65780640 417.32546997]
[400.74673462 424.98312378]
[387.17535400 431.39807129]
[373.06289673 436.51400757]
[358.53335571 440.28591919]
[343.71447754 442.68066406]
[328.73641968 443.67721558]
[313.73089600 443.26681519]
[298.82974243 441.45303345]
[284.16387939 438.25186157]
[269.86224365 433.69140625]
[256.05050659 427.81176758]
[242.85005188 420.66458130]
[230.37687683 412.31268311]
[218.74060059 402.82946777]
[208.04348755 392.29824829]
[198.37954712 380.81161499]
[189.83370972 368.47048950]
[182.48107910 355.38336182]
[176.38626099 341.66519165]
[171.60284424 327.43658447]
[168.17283630 312.82257080]
[166.12638855 297.95156860]
[165.48150635 282.95428467]
[166.24383545 267.96252441]
[168.40667725 253.10800171]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 136]
[10 135]
[11 134]
[12 133]
[38 132]
[39 131]
[40 130]
[41 129]
[62 128]
[63 127]
[64 126]
[65 125]
[66 124]
[67 123]
[68 122]
[69 121]
[70 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
