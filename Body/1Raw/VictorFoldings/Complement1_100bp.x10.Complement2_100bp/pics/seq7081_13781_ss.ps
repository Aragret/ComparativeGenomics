%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[138.74671936 680.80407715]
[128.22305298 670.09564209]
[118.87639618 658.34588623]
[110.80914307 645.68341064]
[104.10969543 632.24707031]
[98.85144806 618.18408203]
[95.09201813 603.64843750]
[92.87258911 588.79949951]
[92.21748352 573.79986572]
[93.13388062 558.81396484]
[95.61173248 544.00592041]
[99.62390137 529.53802490]
[105.12641144 515.56872559]
[112.05899048 502.25119019]
[120.34568024 489.73129272]
[129.89567566 478.14614868]
[140.60435486 467.62274170]
[152.35437012 458.27636719]
[165.01699829 450.20944214]
[178.45349121 443.51031494]
[192.51664734 438.25241089]
[188.76034546 423.73034668]
[185.00404358 409.20828247]
[174.32611084 398.82409668]
[178.36103821 383.52606201]
[174.60473633 369.00399780]
[170.84843445 354.48196411]
[167.09213257 339.95989990]
[163.33583069 325.43783569]
[159.57952881 310.91577148]
[155.82322693 296.39370728]
[151.52911377 282.02151489]
[146.70310974 267.81906128]
[141.87712097 253.61659241]
[137.05111694 239.41413879]
[132.22511292 225.21168518]
[127.39912415 211.00923157]
[122.57312775 196.80676270]
[117.74712372 182.60430908]
[113.93511200 179.72723389]
[111.88998413 174.42492676]
[112.99572754 167.90658569]
[108.59472656 153.56672668]
[104.19373322 139.22688293]
[93.06276703 129.32986450]
[96.41058350 113.86692047]
[86.30645752 104.20264435]
[89.24957275 90.53408051]
[84.84857178 76.19422913]
[80.34094238 61.88754272]
[75.72693634 47.61481094]
[64.11983490 36.86373138]
[67.56707764 22.37353516]
[62.95306778 8.10080147]
[60.77434158 22.94173050]
[55.27600098 36.89767075]
[46.74647522 49.23651886]
[35.63320923 59.31100845]
[22.51918221 66.59264374]
[8.09232903 70.69945526]
[-6.89054632 71.41600800]
[-21.64347267 68.70470428]
[-35.39253998 62.70777130]
[-47.41650009 53.73980713]
[-57.08459854 42.27125168]
[-63.88967133 28.90371513]
[-67.47473145 14.33843613]
[-67.65171814 -0.66052008]
[-64.41134644 -15.30633831]
[-57.92359543 -28.83072853]
[-48.52880859 -40.52422714]
[-36.71980667 -49.77341843]
[-23.11607552 -56.09310532]
[-8.43123436 -59.15177536]
[6.56437778 -58.78897095]
[21.08411980 -55.02372742]
[34.36631775 -48.05355835]
[45.71421432 -38.24411011]
[54.53251648 -26.10996246]
[60.35910416 -12.28605843]
[61.25191879 -27.25946426]
[62.14473343 -42.23287201]
[62.92605591 -57.21250916]
[63.59584045 -72.19754791]
[48.81111908 -74.86126709]
[34.51337433 -79.47189331]
[20.95776176 -85.94714355]
[8.38620377 -94.17146301]
[-2.97694826 -103.99806976]
[-12.92890549 -115.25160217]
[-21.29206276 -127.73122406]
[-27.91717148 -141.21423340]
[-32.68599701 -155.45999146]
[-35.51343536 -170.21427917]
[-36.34902573 -185.21379089]
[-35.17785645 -200.19082642]
[-32.02083206 -214.87812805]
[-26.93428802 -229.01356506]
[-20.00900269 -242.34486389]
[-11.36856461 -254.63414001]
[-1.16717410 -265.66207886]
[10.41311359 -275.23184204]
[23.16563606 -283.17263794]
[36.86280823 -289.34280396]
[51.26018524 -293.63220215]
[66.10083771 -295.96429443]
[81.11990356 -296.29742432]
[96.04936218 -294.62567139]
[110.62277222 -290.97888184]
[124.58006287 -285.42211914]
[137.67213440 -278.05456543]
[149.66535950 -269.00769043]
[160.34570312 -258.44293213]
[169.52255249 -246.54887390]
[177.03213501 -233.53773499]
[182.74044800 -219.64173889]
[186.54560852 -205.10887146]
[188.37969971 -190.19850159]
[188.21002197 -175.17669678]
[186.03956604 -160.31153870]
[181.90708923 -145.86834717]
[175.88633728 -132.10484314]
[168.08474731 -119.26666260]
[158.64157104 -107.58293152]
[147.72531128 -97.26213837]
[135.53077698 -88.48848724]
[122.27561188 -81.41854858]
[108.19636536 -76.17848969]
[93.54429626 -72.86183167]
[78.58087921 -71.52776337]
[77.91109467 -56.54272079]
[80.75279236 -49.72021866]
[77.11814117 -41.34005356]
[76.22532654 -26.36664963]
[75.33251190 -11.39324284]
[77.22579956 3.48679209]
[81.83981323 17.75952530]
[93.11688995 27.48972511]
[89.99967194 43.00080109]
[94.61367798 57.27353668]
[99.66224670 62.67110062]
[99.18842316 71.79323578]
[103.58941650 86.13307953]
[113.69354248 95.79735565]
[110.75042725 109.46591949]
[122.19617462 120.38862610]
[118.53357697 134.82588196]
[122.93457794 149.16574097]
[127.33557129 163.50558472]
[131.94958496 177.77832031]
[136.77557373 191.98077393]
[141.60157776 206.18322754]
[146.42758179 220.38568115]
[151.25357056 234.58813477]
[156.07957458 248.79058838]
[160.90556335 262.99304199]
[165.73156738 277.19549561]
[174.60221863 265.09957886]
[189.58300781 264.34066772]
[199.63066101 275.47821045]
[197.33839417 290.30203247]
[184.39601135 297.88455200]
[170.34529114 292.63742065]
[174.10159302 307.15948486]
[177.85789490 321.68154907]
[181.61419678 336.20358276]
[185.37049866 350.72564697]
[189.12680054 365.24771118]
[192.88310242 379.76977539]
[203.82971191 391.19265747]
[199.52610779 405.45196533]
[203.28240967 419.97402954]
[207.03869629 434.49609375]
[221.88751221 432.27557373]
[236.88708496 431.61938477]
[251.87307739 432.53469849]
[266.68127441 435.01147461]
[281.14947510 439.02258301]
[295.11914062 444.52407837]
[308.43719482 451.45568848]
[320.95773315 459.74145508]
[332.54354858 469.29061890]
[343.06771851 479.99850464]
[352.41494751 491.74786377]
[360.48281860 504.40991211]
[367.18292236 517.84588623]
[372.44186401 531.90869141]
[376.20199585 546.44409180]
[378.42214966 561.29296875]
[379.07797241 576.29254150]
[378.16232300 591.27850342]
[375.68518066 606.08666992]
[371.67370605 620.55480957]
[366.17187500 634.52429199]
[359.23995972 647.84216309]
[350.95385742 660.36248779]
[341.40444946 671.94812012]
[330.69628906 682.47204590]
[318.94671631 691.81896973]
[306.28448486 699.88653564]
[292.84829712 706.58630371]
[278.78540039 711.84490967]
[264.24987793 715.60467529]
[249.40095520 717.82446289]
[234.40135193 718.47991943]
[219.41540527 717.56390381]
[204.60731506 715.08642578]
[190.13931274 711.07458496]
[176.16992188 705.57244873]
[162.85220337 698.64019775]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 173]
[22 172]
[23 171]
[25 169]
[26 168]
[27 167]
[28 166]
[29 165]
[30 164]
[31 163]
[32 157]
[33 156]
[34 155]
[35 154]
[36 153]
[37 152]
[38 151]
[39 150]
[42 149]
[43 148]
[44 147]
[46 145]
[48 143]
[49 142]
[50 140]
[51 139]
[53 137]
[54 136]
[80 135]
[81 134]
[82 133]
[83 131]
[84 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
