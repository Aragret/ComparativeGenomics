%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[147.84329224 669.09411621]
[138.11080933 657.66412354]
[129.54554749 645.33514404]
[122.23000336 632.22601318]
[116.23461914 618.46295166]
[111.61713409 604.17846680]
[108.42202759 589.51019287]
[106.68006134 574.59942627]
[106.40802002 559.58966064]
[107.60852051 544.62548828]
[110.27000427 529.85107422]
[114.36682892 515.40869141]
[119.85955048 501.43740845]
[126.69526672 488.07180786]
[134.80813599 475.44055176]
[144.12004089 463.66537476]
[154.54129028 452.85961914]
[165.97151184 443.12734985]
[178.30064392 434.56234741]
[191.40992737 427.24703979]
[205.17311096 421.25195312]
[200.55911255 406.97921753]
[195.94509888 392.70648193]
[191.33108521 378.43374634]
[180.05401611 368.70355225]
[183.17123413 353.19247437]
[178.55722046 338.91973877]
[165.53625488 335.97073364]
[155.59303284 326.90008545]
[151.39682007 313.99810791]
[154.14538574 300.60168457]
[163.22557068 290.23147583]
[158.82456970 275.89163208]
[154.42356873 261.55178833]
[149.49197388 247.38565063]
[144.03662109 233.41285706]
[138.58126831 219.44006348]
[133.12590027 205.46725464]
[127.67054749 191.49446106]
[122.21518707 177.52166748]
[116.75983429 163.54887390]
[103.92118835 165.60469055]
[90.92907715 165.09277344]
[78.29199219 162.03315735]
[66.50454712 156.54560852]
[56.02809906 148.84487915]
[47.27268982 139.23239136]
[40.58099365 128.08438110]
[36.21493149 115.83715057]
[34.34537888 102.97006989]
[35.04551697 89.98673248]
[38.28793716 77.39531708]
[43.94573593 65.68863678]
[51.79746628 55.32487869]
[61.53582001 46.70968628]
[72.77964020 40.18024826]
[68.16563416 25.90751457]
[63.55162430 11.63478088]
[51.94452286 0.88370091]
[55.39176559 -13.60649490]
[50.77775574 -27.87922859]
[46.16374969 -42.15196228]
[41.54973984 -56.42469406]
[36.85495377 -42.17832565]
[25.73203659 -32.11449432]
[11.08849335 -28.86385727]
[-3.24788976 -33.27612686]
[-13.52961731 -44.19794464]
[-17.06906891 -58.77437210]
[-12.94104195 -73.19516754]
[-2.22459149 -83.69077301]
[12.27902699 -87.51765442]
[26.77860260 -83.67548370]
[37.48352814 -73.16934967]
[35.03779984 -87.96862030]
[25.15394402 -100.32257080]
[30.71254158 -114.14107513]
[28.26681519 -128.94035339]
[25.82108688 -143.73962402]
[23.04547691 -158.48057556]
[19.94136620 -173.15588379]
[16.83725548 -187.83119202]
[13.73314571 -202.50648499]
[10.62903595 -217.18179321]
[7.52492523 -231.85710144]
[4.42081547 -246.53239441]
[-10.64640713 -247.02458191]
[-25.15782547 -251.10896301]
[-38.26976395 -258.54809570]
[-49.21990967 -268.90945435]
[-57.37164307 -281.59063721]
[-62.25102615 -295.85440063]
[-63.57437897 -310.87145996]
[-61.26476288 -325.76876831]
[-55.45645905 -339.68014526]
[-46.48715210 -351.79687500]
[-34.87830734 -361.41448975]
[-21.30484962 -367.97378540]
[-6.55591631 -371.09347534]
[8.51100445 -370.59216309]
[23.01994324 -366.49896240]
[36.12736893 -359.05191040]
[47.07123566 -348.68389893]
[55.21527481 -335.99777222]
[60.08600998 -321.73104858]
[61.40025711 -306.71319580]
[59.08161163 -291.81732178]
[53.26487350 -277.90942383]
[44.28822327 -265.79815674]
[32.67355347 -256.18759155]
[19.09611702 -249.63650513]
[22.20022774 -234.96121216]
[25.30433846 -220.28590393]
[28.40844727 -205.61059570]
[31.51255798 -190.93530273]
[34.61666870 -176.25999451]
[37.72077942 -161.58468628]
[40.46062851 -159.36534119]
[42.26163483 -155.70863342]
[42.45995331 -151.07032776]
[40.62035751 -146.18534851]
[43.06608582 -131.38607788]
[45.51181412 -116.58680725]
[55.22073364 -105.29140472]
[49.83707428 -90.41435242]
[52.28279877 -75.61508179]
[55.82247162 -61.03870392]
[60.43648148 -46.76597214]
[65.05049133 -32.49323654]
[69.66449738 -18.22050476]
[80.94158173 -8.49030495]
[77.82435608 7.02077198]
[82.43836975 21.29350471]
[87.05237579 35.56623840]
[104.01227570 34.40082169]
[120.70372772 37.62447357]
[136.00994873 45.02151108]
[148.90682983 56.09701157]
[158.53149414 70.10994720]
[164.23995972 86.12274933]
[165.65029907 103.06404114]
[162.66815186 119.80032349]
[155.49304199 135.21182251]
[144.60504150 148.26739502]
[130.73263550 158.09350586]
[136.18798828 172.06631470]
[141.64334106 186.03910828]
[147.09870911 200.01190186]
[152.55406189 213.98469543]
[158.00941467 227.95750427]
[163.46476746 241.93029785]
[171.78646851 229.45033264]
[186.71842957 228.02325439]
[197.25337219 238.70103455]
[195.62532043 253.61242676]
[183.03442383 261.76528931]
[168.76341248 257.15078735]
[173.16441345 271.49063110]
[177.56541443 285.83047485]
[193.63739014 291.10189819]
[203.30445862 304.77847290]
[202.91862488 321.35595703]
[192.82995605 334.30572510]
[197.44396973 348.57846069]
[209.05107117 359.32952881]
[205.60382080 373.81973267]
[210.21783447 388.09246826]
[214.83184814 402.36520386]
[219.44584656 416.63793945]
[234.11392212 413.44195557]
[249.02464294 411.69909668]
[264.03436279 411.42614746]
[278.99859619 412.62573242]
[293.77316284 415.28634644]
[308.21582031 419.38229370]
[322.18740845 424.87417603]
[335.55343628 431.70910645]
[348.18518066 439.82122803]
[359.96093750 449.13241577]
[370.76730347 459.55300903]
[380.50024414 470.98266602]
[389.06600952 483.31127930]
[396.38208008 496.42010498]
[402.37802124 510.18295288]
[406.99606323 524.46722412]
[410.19177246 539.13537598]
[411.93432617 554.04608154]
[412.20697021 569.05584717]
[411.00704956 584.02001953]
[408.34616089 598.79455566]
[404.24990845 613.23712158]
[398.75775146 627.20861816]
[391.92257690 640.57452393]
[383.81021118 653.20605469]
[374.49877930 664.98162842]
[364.07797241 675.78784180]
[352.64813232 685.52050781]
[340.31933594 694.08599854]
[327.21035767 701.40185547]
[313.44738770 707.39752197]
[299.16302490 712.01525879]
[284.49484253 715.21069336]
[269.58404541 716.95294189]
[254.57431030 717.22528076]
[239.61013794 716.02508545]
[224.83566284 713.36389160]
[210.39318848 709.26733398]
[196.42179871 703.77490234]
[183.05604553 696.93945312]
[170.42463684 688.82684326]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 169]
[22 168]
[23 167]
[24 166]
[26 164]
[27 163]
[32 159]
[33 158]
[34 157]
[35 151]
[36 150]
[37 149]
[38 148]
[39 147]
[40 146]
[41 145]
[56 134]
[57 133]
[58 132]
[60 130]
[61 129]
[62 128]
[63 127]
[74 126]
[75 125]
[77 123]
[78 122]
[79 121]
[80 117]
[81 116]
[82 115]
[83 114]
[84 113]
[85 112]
[86 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
