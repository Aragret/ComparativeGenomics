%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[11.70247269 829.90679932]
[-3.11438727 832.26806641]
[-18.03882408 833.80950928]
[-33.02551651 834.52648926]
[-48.02894211 834.41674805]
[-63.00354385 833.48065186]
[-77.90383911 831.72113037]
[-92.68457794 829.14337158]
[-107.30087280 825.75537109]
[-121.70832825 821.56726074]
[-135.86320496 816.59185791]
[-149.72248840 810.84423828]
[-163.24411011 804.34191895]
[-176.38700867 797.10455322]
[-189.11123657 789.15417480]
[-201.37818909 780.51489258]
[-213.15058899 771.21301270]
[-224.39270020 761.27673340]
[-235.07035828 750.73620605]
[-245.15115356 739.62347412]
[-254.60447693 727.97229004]
[-263.40158081 715.81805420]
[-271.51580811 703.19769287]
[-278.92245483 690.14941406]
[-285.59906006 676.71301270]
[-291.52536011 662.92919922]
[-296.68331909 648.83978271]
[-301.05731201 634.48767090]
[-304.63400269 619.91644287]
[-307.40258789 605.17022705]
[-309.35464478 590.29394531]
[-310.48422241 575.33270264]
[-310.78787231 560.33190918]
[-310.26473999 545.33721924]
[-308.91635132 530.39410400]
[-306.74682617 515.54797363]
[-303.76275635 500.84387207]
[-299.97320557 486.32650757]
[-295.38967896 472.03991699]
[-290.02609253 458.02755737]
[-283.89874268 444.33190918]
[-277.02624512 430.99462891]
[-269.42944336 418.05615234]
[-261.13140869 405.55584717]
[-252.15737915 393.53164673]
[-242.53459167 382.02005005]
[-232.29226685 371.05603027]
[-221.46150208 360.67291260]
[-210.07519531 350.90219116]
[-198.16793823 341.77352905]
[-185.77587891 333.31469727]
[-172.93666077 325.55136108]
[-159.68928528 318.50711060]
[-146.07395935 312.20330811]
[-132.13204956 306.65911865]
[-117.90588379 301.89138794]
[-103.43868256 297.91458130]
[-88.77437592 294.74078369]
[-73.95749664 292.37963867]
[-59.03305054 290.83828735]
[-44.04635620 290.12145996]
[-29.04293060 290.23129272]
[-14.06833649 291.16744995]
[0.83194751 292.92712402]
[15.61266899 295.50494385]
[30.22893906 298.89309692]
[34.41595078 284.48931885]
[38.60296249 270.08554077]
[42.78997040 255.68176270]
[33.11609268 247.55561829]
[27.21239090 236.33299255]
[25.98718071 223.66465759]
[29.65764809 211.42918396]
[37.71236420 201.45439148]
[48.98222733 195.24429321]
[61.81008148 193.75241089]
[58.36283875 179.26222229]
[69.96994019 168.51113892]
[74.58395386 154.23840332]
[79.19795990 139.96566772]
[83.81196594 125.69293976]
[88.42597961 111.42020416]
[84.49179840 95.11380768]
[97.06285858 84.00774384]
[101.46385956 69.66789246]
[98.11605072 54.20494843]
[109.24700928 44.30792999]
[113.64801025 29.96808243]
[116.97026825 15.34062195]
[119.19538116 0.50657851]
[121.42050171 -14.32746506]
[123.64561462 -29.16150856]
[125.87073517 -43.99555206]
[128.09585571 -58.82959747]
[130.21047974 -73.67979431]
[132.21449280 -88.54531860]
[118.06854248 -93.71311951]
[105.36447906 -101.80144501]
[94.69651031 -112.43198395]
[86.56357574 -125.10753632]
[81.34608459 -139.23522949]
[79.28805542 -154.15429688]
[80.48575592 -169.16694641]
[84.88316345 -183.57099915]
[92.27460480 -196.69276428]
[102.31436157 -207.91851807]
[114.53286743 -216.72319031]
[128.35862732 -222.69497681]
[143.14500427 -225.55458069]
[158.20039368 -225.16822815]
[172.82063293 -221.55401611]
[186.32191467 -214.88098145]
[198.07275391 -205.46121216]
[207.52354431 -193.73532104]
[214.23225403 -180.25172424]
[217.88510132 -165.64108276]
[218.31123352 -150.58677673]
[215.49073792 -135.79289246]
[209.55551147 -121.95139313]
[200.78317261 -109.70965576]
[189.58401489 -99.64025879]
[176.48182678 -92.21415710]
[162.08944702 -87.77868652]
[147.08001709 -86.54130554]
[145.07600403 -71.67578125]
[147.29769897 -64.62696075]
[142.92990112 -56.60448074]
[140.70477295 -41.77043533]
[138.47966003 -26.93639183]
[136.25454712 -12.10234833]
[134.02943420 2.73169565]
[131.80430603 17.56573868]
[142.35238647 6.90093994]
[156.79327393 2.84375262]
[171.35215759 6.45471573]
[182.22337341 16.78993225]
[186.56521606 31.14780235]
[183.24273682 45.77521133]
[173.12442017 56.84859467]
[158.85517883 61.47338867]
[144.16494751 58.44068909]
[132.89373779 48.54323578]
[127.98785400 34.36907959]
[123.58685303 48.70892715]
[127.24945831 63.14619446]
[115.80371094 74.06889343]
[111.40270996 88.40874481]
[116.22944641 99.00798035]
[112.72956848 110.11618042]
[102.69870758 116.03421021]
[98.08470154 130.30694580]
[93.47069550 144.57968140]
[88.85668182 158.85241699]
[84.24267578 173.12515259]
[87.35989380 188.63623047]
[76.08281708 198.36642456]
[88.16365051 211.12913513]
[92.09641266 228.16567993]
[86.88558197 244.76240540]
[74.05274963 256.37411499]
[57.19375610 259.86877441]
[53.00674438 274.27255249]
[48.81973267 288.67633057]
[44.63272095 303.08010864]
[58.78762436 308.05541992]
[72.64695740 313.80291748]
[86.16862488 320.30517578]
[99.31156158 327.54244995]
[112.03585815 335.49273682]
[124.30287170 344.13192749]
[136.07533264 353.43374634]
[147.31752014 363.36996460]
[157.99525452 373.91040039]
[168.07612610 385.02304077]
[177.52952576 396.67413330]
[186.32672119 408.82830811]
[194.44102478 421.44866943]
[201.84777832 434.49682617]
[208.52447510 447.93322754]
[214.45086670 461.71701050]
[219.60893250 475.80633545]
[223.98301697 490.15841675]
[227.55982971 504.72967529]
[230.32850647 519.47583008]
[232.28065491 534.35211182]
[233.41032410 549.31335449]
[233.71411133 564.31414795]
[233.19107056 579.30883789]
[231.84278870 594.25195312]
[229.67337036 609.09814453]
[226.68940735 623.80224609]
[222.89996338 638.31964111]
[218.31652832 652.60626221]
[212.95304871 666.61865234]
[206.82579041 680.31433105]
[199.95336914 693.65167236]
[192.35665894 706.59014893]
[184.05873108 719.09057617]
[175.08477783 731.11480713]
[165.46206665 742.62646484]
[155.21981812 753.59057617]
[144.38912964 763.97375488]
[133.00289917 773.74456787]
[121.09570312 782.87329102]
[108.70370483 791.33221436]
[95.86454773 799.09564209]
[82.61721039 806.14001465]
[69.00193024 812.44390869]
[55.06005478 817.98815918]
[40.83393097 822.75598145]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 164]
[67 163]
[68 162]
[69 161]
[76 156]
[78 154]
[79 153]
[80 152]
[81 151]
[82 150]
[84 147]
[85 146]
[87 144]
[88 143]
[89 132]
[90 131]
[91 130]
[92 129]
[93 128]
[94 127]
[95 125]
[96 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
