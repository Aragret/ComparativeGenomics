%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[49.34288025 940.23510742]
[34.33998489 940.24700928]
[19.35377502 939.53967285]
[4.41871500 938.11456299]
[-10.43084431 935.97503662]
[-25.16074753 933.12603760]
[-39.73711777 929.57409668]
[-54.12642288 925.32733154]
[-68.29557037 920.39562988]
[-82.21197510 914.79016113]
[-95.84362030 908.52398682]
[-109.15916443 901.61145020]
[-122.12796783 894.06842041]
[-134.72019958 885.91229248]
[-146.90692139 877.16186523]
[-158.66007996 867.83709717]
[-169.95265198 857.95965576]
[-180.75865173 847.55206299]
[-191.05323792 836.63842773]
[-200.81274414 825.24371338]
[-210.01469421 813.39422607]
[-218.63793945 801.11712646]
[-226.66265869 788.44073486]
[-234.07035828 775.39416504]
[-240.84403992 762.00744629]
[-246.96809387 748.31134033]
[-252.42845154 734.33740234]
[-257.21255493 720.11773682]
[-261.30938721 705.68505859]
[-264.70953369 691.07250977]
[-267.40518188 676.31378174]
[-269.39010620 661.44274902]
[-270.65979004 646.49365234]
[-271.21124268 631.50091553]
[-271.04327393 616.49896240]
[-270.15618896 601.52233887]
[-268.55209351 586.60540771]
[-266.23464966 571.78259277]
[-263.20919800 557.08789062]
[-259.48269653 542.55517578]
[-255.06369019 528.21783447]
[-249.96237183 514.10888672]
[-244.19046021 500.26068115]
[-237.76124573 486.70516968]
[-230.68949890 473.47348022]
[-222.99150085 460.59606934]
[-214.68493652 448.10256958]
[-205.78894043 436.02166748]
[-196.32394409 424.38119507]
[-186.31173706 413.20788574]
[-175.77534485 402.52746582]
[-164.73898315 392.36450195]
[-153.22807312 382.74237061]
[-141.26904297 373.68319702]
[-128.88943481 365.20779419]
[-116.11772156 357.33569336]
[-102.98326111 350.08499146]
[-89.51626587 343.47235107]
[-75.74771881 337.51296997]
[-61.70928574 332.22058105]
[-47.43325043 327.60736084]
[-32.95245743 323.68392944]
[-18.30020523 320.45925903]
[-3.51019764 317.94082642]
[11.38354778 316.13436890]
[26.34677505 315.04406738]
[41.34506989 314.67245483]
[56.34393311 315.02035522]
[71.30886841 316.08694458]
[73.09133148 301.19323730]
[74.87379456 286.29953003]
[76.65626526 271.40579224]
[68.89062500 255.66853333]
[80.04973602 241.02081299]
[73.67850494 227.55764771]
[82.80951691 214.63731384]
[84.37004089 199.71870422]
[85.93056488 184.80010986]
[87.26879883 169.85992432]
[88.38444519 154.90145874]
[89.50009155 139.94300842]
[90.61574554 124.98455811]
[91.73139191 110.02610779]
[92.40117645 95.04106903]
[92.62450409 80.04272461]
[92.84783173 65.04438782]
[93.07115936 50.04605484]
[93.29448700 35.04771805]
[85.76351166 21.13387680]
[93.68943787 8.52321243]
[93.91276550 -6.47512531]
[94.13609314 -21.47346306]
[91.13480377 -30.10074806]
[94.47605896 -36.69300079]
[87.15306854 -50.71742249]
[95.26588440 -63.20868301]
[95.71248627 -78.20203400]
[96.15909576 -93.19538116]
[82.06640625 -98.77857208]
[70.73523712 -108.84735870]
[63.53388214 -122.18588257]
[61.33193588 -137.18345642]
[64.39529419 -152.02905273]
[72.35404968 -164.92999268]
[84.24713135 -174.32841492]
[98.63839722 -179.08941650]
[113.79003906 -178.63809204]
[127.87240601 -173.02894592]
[139.18499756 -162.93930054]
[146.36177063 -149.58752441]
[148.53607178 -134.58592224]
[145.44535828 -119.74599457]
[137.46284485 -106.85974884]
[125.55245972 -97.48326111]
[111.15244293 -92.74877930]
[110.70583344 -77.75542450]
[110.25923157 -62.76207733]
[117.61415863 -49.81008148]
[109.46940613 -36.24639511]
[109.13442993 -21.25013542]
[108.91110229 -6.25179768]
[108.68777466 8.74654007]
[116.23473358 21.58759880]
[108.29282379 35.27104568]
[108.06949615 50.26938248]
[107.84616852 65.26771545]
[107.62284088 80.26605988]
[107.39951324 95.26439667]
[109.32935333 97.62346649]
[110.44347382 100.73686981]
[110.46083069 104.30381775]
[109.21543884 107.92393494]
[106.68984222 111.14175415]
[105.57419586 126.10020447]
[104.45854950 141.05865479]
[103.34289551 156.01712036]
[102.22724915 170.97557068]
[104.74923706 177.08712769]
[103.92928314 182.71070862]
[100.84916687 186.36062622]
[99.28864288 201.27923584]
[97.72811890 216.19783020]
[103.98773956 230.72807312]
[94.96833801 242.58132935]
[102.46924591 253.07414246]
[100.86235809 265.46777344]
[91.54998016 273.18826294]
[89.76751709 288.08200073]
[87.98504639 302.97570801]
[86.20258331 317.86941528]
[100.99658203 320.36431885]
[115.65394592 323.56567383]
[130.14096069 327.46606445]
[144.42431641 332.05654907]
[158.47116089 337.32659912]
[172.24917603 343.26403809]
[185.72666931 349.85522461]
[198.87266541 357.08502197]
[211.65689087 364.93679810]
[224.04997253 373.39248657]
[236.02339172 382.43261719]
[247.54962158 392.03640747]
[258.60214233 402.18179321]
[269.15551758 412.84542847]
[279.18548584 424.00277710]
[288.66900635 435.62820435]
[297.58422852 447.69491577]
[305.91064453 460.17520142]
[313.62915039 473.04034424]
[320.72192383 486.26074219]
[327.17272949 499.80599976]
[332.96664429 513.64495850]
[338.09042358 527.74584961]
[342.53222656 542.07611084]
[346.28186035 556.60290527]
[349.33071899 571.29272461]
[351.67175293 586.11187744]
[353.29959106 601.02618408]
[354.21047974 616.00140381]
[354.40234375 631.00305176]
[353.87472534 645.99670410]
[352.62887573 660.94775391]
[350.66760254 675.82189941]
[347.99545288 690.58496094]
[344.61856079 705.20288086]
[340.54470825 719.64202881]
[335.78323364 733.86932373]
[330.34512329 747.85192871]
[324.24288940 761.55780029]
[317.49050903 774.95526123]
[310.10357666 788.01361084]
[302.09906006 800.70275879]
[293.49536133 812.99353027]
[284.31228638 824.85766602]
[274.57092285 836.26788330]
[264.29373169 847.19793701]
[253.50428772 857.62268066]
[242.22744751 867.51812744]
[230.48915100 876.86151123]
[218.31637573 885.63134766]
[205.73713684 893.80755615]
[192.78034973 901.37115479]
[179.47583008 908.30493164]
[165.85417175 914.59277344]
[151.94671631 920.22033691]
[137.78543091 925.17462158]
[123.40290070 929.44427490]
[108.83220673 933.01940918]
[94.10684967 935.89184570]
[79.26071930 938.05499268]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 150]
[70 149]
[71 148]
[72 147]
[74 144]
[76 142]
[77 141]
[78 140]
[79 137]
[80 136]
[81 135]
[82 134]
[83 133]
[84 128]
[85 127]
[86 126]
[87 125]
[88 124]
[90 122]
[91 121]
[92 120]
[94 119]
[96 117]
[97 116]
[98 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
