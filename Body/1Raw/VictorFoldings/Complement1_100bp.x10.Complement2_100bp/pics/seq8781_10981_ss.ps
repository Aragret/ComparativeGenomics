%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[26.46753120 862.28826904]
[11.49790859 863.28759766]
[-3.50251365 863.56250000]
[-18.49870110 863.11236572]
[-33.45563126 861.93829346]
[-48.33836746 860.04290771]
[-63.11215210 857.43072510]
[-77.74247742 854.10778809]
[-92.19518280 850.08197021]
[-106.43650055 845.36248779]
[-120.43318176 839.96057129]
[-134.15252686 833.88867188]
[-147.56250000 827.16101074]
[-160.63177490 819.79339600]
[-173.32983398 811.80291748]
[-185.62701416 803.20831299]
[-197.49459839 794.02960205]
[-208.90487671 784.28820801]
[-219.83117676 774.00695801]
[-230.24800110 763.20983887]
[-240.13102722 751.92205811]
[-249.45715332 740.16998291]
[-258.20458984 727.98101807]
[-266.35293579 715.38366699]
[-273.88314819 702.40740967]
[-280.77761841 689.08245850]
[-287.02029419 675.43994141]
[-292.59652710 661.51177979]
[-297.49334717 647.33050537]
[-301.69931030 632.92913818]
[-305.20458984 618.34143066]
[-308.00097656 603.60144043]
[-310.08193970 588.74346924]
[-311.44265747 573.80236816]
[-312.07992554 558.81298828]
[-311.99227905 543.81030273]
[-311.17987061 528.82934570]
[-309.64465332 513.90521240]
[-307.39019775 499.07260132]
[-304.42172241 484.36624146]
[-300.74624634 469.82049561]
[-296.37228394 455.46929932]
[-291.31005859 441.34619141]
[-285.57141113 427.48416138]
[-279.16976929 413.91555786]
[-272.12005615 400.67208862]
[-264.43872070 387.78466797]
[-256.14370728 375.28341675]
[-247.25442505 363.19750977]
[-237.79159546 351.55520630]
[-227.77734375 340.38369751]
[-217.23506165 329.70901489]
[-206.18934631 319.55615234]
[-194.66601562 309.94882202]
[-182.69198608 300.90942383]
[-170.29519653 292.45907593]
[-157.50463867 284.61755371]
[-144.35015869 277.40313721]
[-130.86247253 270.83267212]
[-117.07311249 264.92153931]
[-103.01425934 259.68350220]
[-88.71876526 255.13081360]
[-74.22000122 251.27410889]
[-59.55183792 248.12240601]
[-44.74853516 245.68302917]
[-29.84466743 243.96171570]
[-14.87504005 242.96246338]
[0.12538420 242.68762207]
[15.12156963 243.13781738]
[30.07849312 244.31199646]
[44.96121979 246.20744324]
[59.73499298 248.81970215]
[63.05725098 234.19224548]
[66.37950897 219.56477356]
[69.70177460 204.93731689]
[73.02403259 190.30986023]
[66.93775177 173.85008240]
[79.56018829 160.44277954]
[82.66429901 145.76748657]
[85.76840973 131.09217834]
[80.83238220 117.03924561]
[91.25801849 105.13896179]
[89.71247101 97.22796631]
[94.51913452 90.26902771]
[97.84139252 75.64156342]
[101.16365051 61.01410294]
[90.01033020 50.54745483]
[85.62245178 35.99948883]
[89.08255768 21.30615616]
[99.36392975 10.39059544]
[113.63244629 6.11567831]
[116.95470428 -8.51178169]
[120.27696991 -23.13924217]
[115.78834534 -38.31035995]
[126.15236664 -49.00785065]
[129.47462463 -63.63531113]
[124.98600769 -78.80643463]
[135.35003662 -89.50392151]
[138.67228699 -104.13137817]
[141.99455261 -118.75884247]
[128.46162415 -125.38880157]
[116.82282257 -134.96142578]
[107.70583344 -146.96047974]
[101.60232544 -160.73886108]
[98.84143829 -175.55352783]
[99.57206726 -190.60552979]
[103.75482178 -205.08314514]
[111.16411591 -218.20561218]
[121.40039062 -229.26524353]
[133.91160583 -237.66561890]
[148.02304077 -242.95370483]
[162.97370911 -244.84432983]
[177.95732117 -243.23553467]
[192.16581726 -238.21408081]
[204.83297729 -230.05076599]
[215.27566528 -219.18582153]
[222.93072510 -206.20518494]
[227.38533020 -191.80888367]
[228.39923096 -176.77331543]
[225.91777039 -161.90928650]
[220.07475281 -148.01843262]
[211.18530273 -135.84985352]
[199.72882080 -126.05978394]
[186.32310486 -119.17619324]
[171.69114685 -115.57030487]
[156.62200928 -115.43658447]
[153.29975891 -100.80912018]
[149.97749329 -86.18166351]
[154.70375061 -72.05679321]
[144.10209656 -60.31305313]
[140.77983093 -45.68559265]
[145.50607300 -31.56072617]
[134.90443420 -19.81698227]
[131.58216858 -5.18952274]
[128.25990295 9.43793774]
[139.28192139 19.45696259]
[143.83941650 33.74279785]
[140.61303711 48.48921585]
[130.37141418 59.71445847]
[115.79111481 64.33636475]
[112.46884918 78.96382141]
[109.14659119 93.59128571]
[105.93331909 108.24307251]
[110.64731598 123.34568024]
[100.44371033 134.19628906]
[97.33959961 148.87159729]
[94.23548889 163.54689026]
[100.60408020 174.76312256]
[97.71653748 186.92231750]
[87.65148926 193.63211060]
[84.32923126 208.25958252]
[81.00697327 222.88703918]
[77.68471527 237.51449585]
[74.36244965 252.14195251]
[88.81517792 256.16775513]
[103.05651855 260.88711548]
[117.05322266 266.28903198]
[130.77259827 272.36083984]
[144.18260193 279.08840942]
[157.25190735 286.45599365]
[169.95001221 294.44641113]
[182.24722290 303.04098511]
[194.11485291 312.21963501]
[205.52517700 321.96090698]
[216.45153809 332.24212646]
[226.86840820 343.03918457]
[236.75148010 354.32693481]
[246.07765198 366.07897949]
[254.82516479 378.26788330]
[262.97357178 390.86520386]
[270.50384521 403.84146118]
[277.39837646 417.16638184]
[283.64111328 430.80883789]
[289.21740723 444.73696899]
[294.11431885 458.91824341]
[298.32034302 473.31954956]
[301.82568359 487.90725708]
[304.62213135 502.64724731]
[306.70318604 517.50518799]
[308.06396484 532.44628906]
[308.70132446 547.43566895]
[308.61370850 562.43835449]
[307.80139160 577.41931152]
[306.26623535 592.34350586]
[304.01184082 607.17608643]
[301.04345703 621.88244629]
[297.36804199 636.42822266]
[292.99414062 650.77941895]
[287.93197632 664.90258789]
[282.19342041 678.76464844]
[275.79183960 692.33325195]
[268.74215698 705.57678223]
[261.06088257 718.46423340]
[252.76594543 730.96551514]
[243.87672424 743.05145264]
[234.41395569 754.69378662]
[224.39974976 765.86535645]
[213.85751343 776.54010010]
[202.81185913 786.69299316]
[191.28857422 796.30041504]
[179.31457520 805.33984375]
[166.91783142 813.79022217]
[154.12730408 821.63183594]
[140.97285461 828.84631348]
[127.48521423 835.41680908]
[113.69587708 841.32806396]
[99.63705444 846.56616211]
[85.34157562 851.11889648]
[70.84282684 854.97564697]
[56.17468262 858.12744141]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[72 154]
[73 153]
[74 152]
[75 151]
[76 150]
[78 147]
[79 146]
[80 145]
[82 143]
[84 142]
[85 141]
[86 140]
[91 135]
[92 134]
[93 133]
[95 131]
[96 130]
[98 128]
[99 127]
[100 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
