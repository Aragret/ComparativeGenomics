%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[21.21209717 939.44927979]
[6.23560715 940.34051514]
[-8.76651573 940.50158691]
[-23.75868797 939.93200684]
[-38.70534897 938.63317871]
[-53.57104874 936.60815430]
[-68.32052612 933.86181641]
[-82.91879272 930.40057373]
[-97.33123016 926.23266602]
[-111.52365112 921.36804199]
[-125.46238708 915.81811523]
[-139.11439514 909.59619141]
[-152.44726562 902.71691895]
[-165.42939758 895.19671631]
[-178.02998352 887.05328369]
[-190.21914673 878.30609131]
[-201.96797180 868.97576904]
[-213.24859619 859.08453369]
[-224.03425598 848.65576172]
[-234.29936218 837.71423340]
[-244.01959229 826.28588867]
[-253.17185974 814.39782715]
[-261.73449707 802.07830811]
[-269.68713379 789.35644531]
[-277.01098633 776.26251221]
[-283.68859863 762.82751465]
[-289.70419312 749.08337402]
[-295.04348755 735.06262207]
[-299.69378662 720.79852295]
[-303.64410400 706.32495117]
[-306.88507080 691.67620850]
[-309.40893555 676.88702393]
[-311.20977783 661.99249268]
[-312.28332520 647.02795410]
[-312.62698364 632.02893066]
[-312.23999023 617.03094482]
[-311.12319946 602.06958008]
[-309.27932739 587.18029785]
[-306.71270752 572.39849854]
[-303.42944336 557.75915527]
[-299.43734741 543.29705811]
[-294.74581909 529.04644775]
[-289.36602783 515.04119873]
[-283.31076050 501.31445312]
[-276.59432983 487.89883423]
[-269.23269653 474.82611084]
[-261.24331665 462.12731934]
[-252.64512634 449.83258057]
[-243.45852661 437.97103882]
[-233.70532227 426.57083130]
[-223.40863037 415.65899658]
[-212.59288025 405.26144409]
[-201.28372192 395.40280151]
[-189.50799561 386.10647583]
[-177.29360962 377.39453125]
[-164.66954041 369.28756714]
[-151.66572571 361.80490112]
[-138.31303406 354.96420288]
[-124.64311218 348.78173828]
[-110.68839264 343.27215576]
[-96.48197174 338.44851685]
[-82.05755615 334.32229614]
[-67.44934082 330.90325928]
[-52.69199371 328.19952393]
[-37.82050323 326.21746826]
[-22.87015152 324.96185303]
[-7.87639570 324.43560791]
[7.12519932 324.64001465]
[22.09905243 325.57455444]
[37.00964737 327.23703003]
[51.82161331 329.62350464]
[54.92572403 314.94821167]
[58.02983475 300.27288818]
[61.13394547 285.59759521]
[64.23805237 270.92230225]
[67.34216309 256.24697876]
[70.44627380 241.57168579]
[65.51024628 227.51875305]
[75.93588257 215.61846924]
[79.03999329 200.94316101]
[82.14410400 186.26786804]
[85.24821472 171.59255981]
[88.35232544 156.91725159]
[91.45642853 142.24195862]
[92.90585327 127.31214905]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[92.09580994 72.91117859]
[84.15390778 59.22773361]
[91.70085907 46.38667679]
[91.47753143 31.38833809]
[91.25420380 16.39000130]
[91.03087616 1.39166355]
[79.97177124 -9.57802391]
[79.95894623 -24.79165268]
[90.48501587 -35.26721191]
[90.26168823 -50.26554871]
[76.24216461 -56.21306229]
[65.85852051 -67.35306549]
[60.90976715 -81.75548553]
[62.25331879 -96.92501831]
[69.65639496 -110.23345184]
[81.83636475 -119.37501526]
[96.68297577 -122.76588440]
[111.62397003 -119.81855774]
[124.07071686 -111.04369354]
[131.86676025 -97.96157837]
[133.66136169 -82.83876801]
[129.14361572 -68.29539490]
[119.09625244 -56.85116577]
[105.26002502 -50.48887634]
[105.48335266 -35.49053955]
[116.31665802 -25.33302498]
[116.75679779 -10.12575817]
[106.02921295 1.16833591]
[106.25254059 16.16667366]
[106.47586823 31.16501045]
[106.69919586 46.16334915]
[114.62512970 58.77401352]
[107.09414673 72.68785095]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[107.90419006 127.08882141]
[115.13227081 113.94519806]
[126.57328033 104.24451447]
[140.72195435 99.26306152]
[155.71681213 99.65624237]
[169.58499146 105.37231445]
[180.50190735 115.65924072]
[187.03126526 129.16358948]
[188.31399536 144.10864258]
[184.18133545 158.52812195]
[175.17703247 170.52488708]
[162.48571777 178.52055359]
[147.77719116 181.46316528]
[132.98658752 178.96557617]
[120.05986023 171.35636902]
[110.69776917 159.63667297]
[106.13173676 145.34606934]
[103.02762604 160.02136230]
[99.92351532 174.69667053]
[96.81940460 189.37197876]
[93.71529388 204.04727173]
[90.61118317 218.72257996]
[95.32518005 233.82518005]
[85.12157440 244.67579651]
[82.01746368 259.35110474]
[78.91335297 274.02639771]
[75.80924988 288.70169067]
[72.70513916 303.37701416]
[69.60102844 318.05230713]
[66.49691772 332.72760010]
[81.00659180 336.54324341]
[95.31328583 341.06079102]
[109.38305664 346.26953125]
[123.18254852 352.15710449]
[136.67901611 358.70959473]
[149.84045410 365.91140747]
[162.63565063 373.74548340]
[175.03424072 382.19323730]
[187.00683594 391.23461914]
[198.52500916 400.84820557]
[209.56147766 411.01119995]
[220.09004211 421.69946289]
[230.08572388 432.88766479]
[239.52482605 444.54925537]
[248.38496399 456.65658569]
[256.64511108 469.18093872]
[264.28567505 482.09262085]
[271.28857422 495.36099243]
[277.63711548 508.95455933]
[283.31631470 522.84112549]
[288.31265259 536.98773193]
[292.61431885 551.36077881]
[296.21109009 565.92626953]
[299.09442139 580.64959717]
[301.25750732 595.49578857]
[302.69519043 610.42974854]
[303.40408325 625.41601562]
[303.38247681 640.41894531]
[302.63043213 655.40307617]
[301.14974976 670.33282471]
[298.94390869 685.17279053]
[296.01818848 699.88769531]
[292.37948608 714.44274902]
[288.03643799 728.80340576]
[282.99938965 742.93554688]
[277.28021240 756.80566406]
[270.89251709 770.38092041]
[263.85147095 783.62908936]
[256.17376709 796.51867676]
[247.87756348 809.01922607]
[238.98260498 821.10095215]
[229.50994873 832.73535156]
[219.48208618 843.89471436]
[208.92277527 854.55261230]
[197.85710144 864.68377686]
[186.31126404 874.26416016]
[174.31269836 883.27099609]
[161.88981628 891.68304443]
[149.07212830 899.48022461]
[135.88999939 906.64410400]
[122.37471008 913.15765381]
[108.55831909 919.00549316]
[94.47360229 924.17370605]
[80.15396118 928.65002441]
[65.63335419 932.42382812]
[50.94623566 935.48620605]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[71 154]
[72 153]
[73 152]
[74 151]
[75 150]
[76 149]
[77 148]
[79 146]
[80 145]
[81 144]
[82 143]
[83 142]
[84 141]
[85 125]
[86 124]
[88 122]
[89 121]
[91 119]
[92 118]
[93 117]
[94 116]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
