%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[137.57865906 890.92071533]
[122.70182800 888.98583984]
[107.91696930 886.44189453]
[93.24903107 883.29309082]
[78.72272491 879.54473877]
[64.36255646 875.20312500]
[50.19274139 870.27569580]
[36.23717117 864.77062988]
[22.51937866 858.69726562]
[9.06249237 852.06579590]
[-4.11079454 844.88751221]
[-16.97826767 837.17443848]
[-29.51823235 828.93957520]
[-41.70954132 820.19677734]
[-53.53163528 810.96093750]
[-64.96458435 801.24743652]
[-75.98910522 791.07281494]
[-86.58660889 780.45410156]
[-96.73923492 769.40930176]
[-106.42984772 757.95697021]
[-115.64211273 746.11645508]
[-124.36050415 733.90771484]
[-132.57031250 721.35131836]
[-140.25769043 708.46850586]
[-147.40968323 695.28088379]
[-154.01423645 681.81079102]
[-160.06019592 668.08093262]
[-165.53738403 654.11437988]
[-170.43655396 639.93475342]
[-174.74943542 625.56591797]
[-178.46878052 611.03216553]
[-181.58830261 596.35797119]
[-184.10275269 581.56805420]
[-186.00787354 566.68743896]
[-187.30046082 551.74108887]
[-187.97834778 536.75427246]
[-188.04035950 521.75225830]
[-187.48643494 506.76040649]
[-186.31745911 491.80389404]
[-184.53544617 476.90798950]
[-182.14337158 462.09777832]
[-179.14529419 447.39828491]
[-175.54624939 432.83428955]
[-171.35231018 418.43029785]
[-166.57054138 404.21066284]
[-161.20903015 390.19931030]
[-155.27679443 376.41989136]
[-148.78385925 362.89566040]
[-141.74114990 349.64938354]
[-134.16053772 336.70339966]
[-126.05484009 324.07955933]
[-117.43769836 311.79916382]
[-108.32364655 299.88287354]
[-98.72805023 288.35083008]
[-88.66709900 277.22244263]
[-78.15776062 266.51647949]
[-67.21774292 256.25103760]
[-55.86549759 246.44335938]
[-44.12017441 237.11004639]
[-32.00157166 228.26678467]
[-19.53012466 219.92852783]
[-6.72686529 212.10929871]
[6.38661814 204.82231140]
[19.78821373 198.07984924]
[33.45532227 191.89326477]
[47.36489868 186.27299500]
[61.49348450 181.22853088]
[75.81726074 176.76837158]
[90.31208038 172.90003967]
[104.95348358 169.63005066]
[102.28768921 154.86882019]
[99.62189484 140.10760498]
[96.95610046 125.34638977]
[94.29030609 110.58517456]
[91.40502930 95.86528015]
[88.30091858 81.18997955]
[85.19680786 66.51467896]
[74.77117920 54.61439514]
[79.70719910 40.56146240]
[76.60308838 25.88615799]
[73.49898529 11.21085644]
[58.46875381 11.72401047]
[43.57778549 9.61920834]
[29.27859688 4.96041393]
[16.00572777 -2.11079812]
[4.16252184 -11.37954140]
[-5.89111757 -22.56414986]
[-13.84967136 -35.32473373]
[-19.47128868 -49.27351761]
[-22.58513641 -63.98661041]
[-23.09658623 -79.01689911]
[-20.99009514 -93.90762329]
[-16.32967949 -108.20628357]
[-9.25696182 -121.47835541]
[0.01312515 -133.32051086]
[11.19887352 -143.37287903]
[23.96036148 -151.32998657]
[37.90978241 -156.95002747]
[52.62322617 -160.06219482]
[67.65357208 -160.57194519]
[82.54405975 -158.46376038]
[96.84219360 -153.80172729]
[110.11345673 -146.72750854]
[121.95455933 -137.45606995]
[132.00566101 -126.26918793]
[139.96131897 -113.50679779]
[145.57977295 -99.55673981]
[148.69029236 -84.84294128]
[149.19831848 -69.81253815]
[147.08845520 -54.92228699]
[142.42480469 -40.62468719]
[135.34907532 -27.35422134]
[126.07630157 -15.51417065]
[114.88826752 -5.46433783]
[102.12497711 2.48987460]
[88.17428589 8.10674667]
[91.27839661 22.78204918]
[94.38250732 37.45735168]
[104.58611298 48.30796051]
[99.87210846 63.41056824]
[102.97621918 78.08586884]
[106.08032990 92.76117706]
[109.71475220 96.54336548]
[110.97136688 102.09262085]
[109.05152130 107.91938019]
[111.71731567 122.68059540]
[114.38311005 137.44181824]
[117.04890442 152.20303345]
[119.71469879 166.96424866]
[134.57501221 164.90638733]
[149.50727844 163.46035767]
[164.48632812 162.62858582]
[179.48689270 162.41249084]
[194.48368835 162.81240845]
[209.45140076 163.82769775]
[224.36483765 165.45663452]
[239.19880676 167.69645691]
[253.92831421 170.54341125]
[268.52853394 173.99269104]
[282.97482300 178.03846741]
[297.24282837 182.67391968]
[311.30850220 187.89125061]
[325.14813232 193.68164062]
[338.73834229 200.03533936]
[352.05627441 206.94161987]
[365.07940674 214.38885498]
[377.78582764 222.36448669]
[390.15408325 230.85504150]
[402.16336060 239.84622192]
[413.79336548 249.32286072]
[425.02447510 259.26898193]
[435.83779907 269.66781616]
[446.21508789 280.50183105]
[456.13882446 291.75271606]
[465.59231567 303.40158081]
[474.55957031 315.42871094]
[483.02548218 327.81387329]
[490.97576904 340.53613281]
[498.39706421 353.57409668]
[505.27682495 366.90573120]
[511.60345459 380.50857544]
[517.36627197 394.35968018]
[522.55560303 408.43572998]
[527.16265869 422.71292114]
[531.17962646 437.16723633]
[534.59985352 451.77429199]
[537.41748047 466.50946045]
[539.62774658 481.34783936]
[541.22698975 496.26449585]
[542.21246338 511.23419189]
[542.58258057 526.23175049]
[542.33660889 541.23187256]
[541.47497559 556.20922852]
[539.99926758 571.13861084]
[537.91180420 585.99475098]
[535.21618652 600.75274658]
[531.91699219 615.38757324]
[528.01971436 629.87463379]
[523.53094482 644.18951416]
[518.45831299 658.30798340]
[512.81024170 672.20629883]
[506.59640503 685.86102295]
[499.82717896 699.24914551]
[492.51403809 712.34802246]
[484.66925049 725.13568115]
[476.30612183 737.59045410]
[467.43869019 749.69134521]
[458.08190918 761.41802979]
[448.25161743 772.75067139]
[437.96432495 783.67016602]
[427.23742676 794.15808105]
[416.08895874 804.19683838]
[404.53778076 813.76934814]
[392.60333252 822.85961914]
[380.30572510 831.45220947]
[367.66574097 839.53271484]
[354.70465088 847.08740234]
[341.44433594 854.10363770]
[327.90713501 860.56958008]
[314.11590576 866.47430420]
[300.09390259 871.80780029]
[285.86471558 876.56115723]
[271.45239258 880.72637939]
[256.88122559 884.29632568]
[242.17578125 887.26501465]
[227.36085510 889.62756348]
[212.46141052 891.37982178]
[197.50259399 892.51892090]
[182.50962830 893.04290771]
[167.50779724 892.95092773]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 129]
[71 128]
[72 127]
[73 126]
[74 125]
[75 122]
[76 121]
[77 120]
[79 118]
[80 117]
[81 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
