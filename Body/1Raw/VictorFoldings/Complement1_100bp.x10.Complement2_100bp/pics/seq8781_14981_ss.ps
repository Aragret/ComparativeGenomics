%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[40.21681976 672.68243408]
[26.37036133 678.46691895]
[12.15412521 683.27142334]
[-2.36262870 687.07250977]
[-17.10917473 689.85174561]
[-32.01366806 691.59552002]
[-47.00349808 692.29541016]
[-62.00563049 691.94787598]
[-76.94697571 690.55474854]
[-91.75474548 688.12274170]
[-106.35678864 684.66369629]
[-120.68197632 680.19445801]
[-134.66050720 674.73687744]
[-148.22428894 668.31750488]
[-161.30722046 660.96752930]
[-173.84558105 652.72290039]
[-185.77828979 643.62371826]
[-197.04718018 633.71429443]
[-207.59738159 623.04290771]
[-217.37748718 611.66162109]
[-226.33984375 599.62579346]
[-234.44078064 586.99407959]
[-241.64083862 573.82806396]
[-247.90493774 560.19189453]
[-253.20256042 546.15197754]
[-257.50790405 531.77667236]
[-260.79998779 517.13610840]
[-263.06277466 502.30151367]
[-264.28521729 487.34524536]
[-264.46139526 472.34011841]
[-263.59042358 457.35925293]
[-261.67657471 442.47564697]
[-258.72912598 427.76177979]
[-254.76249695 413.28939819]
[-249.79597473 399.12893677]
[-243.85375977 385.34942627]
[-236.96479797 372.01800537]
[-229.16267395 359.19958496]
[-220.48536682 346.95666504]
[-210.97518921 335.34887695]
[-200.67845154 324.43273926]
[-189.64530945 314.26147461]
[-177.92953491 304.88461304]
[-165.58821106 296.34786987]
[-152.68144226 288.69277954]
[-139.27212524 281.95669556]
[-125.42557526 276.17242432]
[-111.20927429 271.36810303]
[-96.69246674 267.56716919]
[-81.94587708 264.78817749]
[-67.04135895 263.04458618]
[-52.05152130 262.34497070]
[-37.04939270 262.69268799]
[-22.10806656 264.08602905]
[-7.30033302 266.51828003]
[7.30166435 269.97750854]
[21.62678528 274.44692993]
[27.08214378 260.47412109]
[32.53749847 246.50134277]
[37.99285889 232.52853394]
[37.49728012 225.15451050]
[43.63485336 218.38931274]
[49.29764175 204.49928284]
[46.93767548 189.79283142]
[59.31225586 179.93481445]
[64.97504425 166.04479980]
[58.97966003 152.45837402]
[64.52465820 138.29124451]
[78.81600189 132.09484863]
[84.47879028 118.20481873]
[90.14157867 104.31479645]
[92.69741058 89.53414154]
[92.02762604 74.54910278]
[91.35784149 59.56406021]
[90.68805695 44.57902145]
[89.46108246 29.62928963]
[87.67861176 14.73557281]
[85.89614868 -0.15814492]
[82.76611328 -4.33545923]
[81.66183472 -8.84476757]
[82.37054443 -12.85883999]
[84.38199615 -15.75477028]
[83.26634216 -30.71322441]
[82.15069580 -45.67167664]
[81.03504944 -60.63013077]
[78.46409607 -64.12930298]
[77.26132965 -67.88668060]
[77.33991241 -71.44043732]
[78.47195435 -74.40440369]
[80.32537842 -76.50749207]
[80.10205078 -91.50582886]
[79.87872314 -106.50416565]
[79.65539551 -121.50250244]
[68.97496033 -129.70877075]
[65.02854919 -142.38301086]
[69.04296875 -154.83155823]
[79.33937836 -162.57841492]
[79.33937836 -177.57841492]
[65.28218842 -183.36320496]
[54.51231384 -194.09066772]
[48.67208481 -208.12490845]
[48.65208817 -223.32583618]
[54.45537567 -237.37539673]
[65.19699097 -248.13114929]
[79.23890686 -253.95291138]
[94.43984222 -253.95291138]
[108.48176575 -248.13114929]
[119.22337341 -237.37539673]
[125.02666473 -223.32583618]
[125.00666809 -208.12490845]
[119.16643524 -194.09066772]
[108.39656067 -183.36320496]
[94.33937836 -177.57841492]
[94.33937836 -162.57841492]
[106.72863007 -151.20541382]
[107.06571960 -134.05311584]
[94.65373230 -121.72583008]
[94.87705994 -106.72749329]
[95.10038757 -91.72915649]
[95.32371521 -76.73081970]
[95.99349976 -61.74578094]
[97.10914612 -46.78732681]
[98.22480011 -31.82887268]
[99.34044647 -16.87041855]
[100.78986359 -1.94061077]
[102.57232666 12.95310688]
[104.35479736 27.84682465]
[115.53657532 17.84843063]
[130.35012817 20.20608139]
[137.87545776 33.18180466]
[132.56518555 47.21037674]
[118.33381653 51.95045853]
[105.67309570 43.90923691]
[106.34288025 58.89427567]
[107.01266479 73.87931824]
[107.68244934 88.86435699]
[113.71936035 75.13279724]
[122.36283112 62.87349701]
[133.26858521 52.57473755]
[146.00225830 44.64671326]
[160.05667114 39.40519333]
[174.87203979 37.05894852]
[189.85827637 37.70142746]
[204.41848755 41.30703735]
[217.97273254 47.73217392]
[229.98115540 56.72092056]
[239.96548462 67.91526794]
[247.52803040 80.86933899]
[252.36756897 95.06718445]
[254.29136658 109.94330597]
[253.22279358 124.90518951]
[249.20440674 139.35691833]
[242.39624023 152.72288513]
[233.06948853 164.47073364]
[221.59562683 174.13252258]
[208.43164062 181.32347107]
[194.10186768 185.75712585]
[179.17703247 187.25691223]
[164.25160217 185.76310730]
[149.92004395 181.33518982]
[136.75317383 174.14952087]
[125.27544403 164.49232483]
[115.94398499 152.74821472]
[109.13047791 139.38497925]
[105.10629272 124.93486786]
[104.03160095 109.97757721]
[98.36882019 123.86760712]
[92.70603180 137.75762939]
[98.59143829 152.17982483]
[92.65070343 166.18562317]
[78.86507416 171.70758057]
[73.20228577 185.59761047]
[75.15721130 201.29757690]
[63.18766785 210.16206360]
[57.52487946 224.05209351]
[51.96565628 237.98390198]
[46.51029968 251.95669556]
[41.05493927 265.92950439]
[35.59958267 279.90228271]
[49.16345215 286.32150269]
[62.24649811 293.67123413]
[74.78498077 301.91571045]
[86.71780396 311.01473999]
[97.98684692 320.92398071]
[108.53720093 331.59518433]
[118.31746674 342.97637939]
[127.27999115 355.01205444]
[135.38110352 367.64364624]
[142.58135986 380.80953979]
[148.84565735 394.44564819]
[154.14347839 408.48550415]
[158.44903564 422.86074829]
[161.74131775 437.50128174]
[164.00430298 452.33581543]
[165.22697449 467.29208374]
[165.40336609 482.29721069]
[164.53262329 497.27807617]
[162.61897278 512.16174316]
[159.67175293 526.87561035]
[155.70532227 541.34808350]
[150.73899841 555.50860596]
[144.79698181 569.28820801]
[137.90821838 582.61968994]
[130.10626221 595.43823242]
[121.42914581 607.68127441]
[111.91912079 619.28918457]
[101.62253571 630.20550537]
[90.58954620 640.37689209]
[78.87390900 649.75390625]
[66.53269958 658.29089355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 179]
[58 178]
[59 177]
[60 176]
[62 175]
[63 174]
[65 172]
[66 171]
[69 168]
[70 167]
[71 166]
[72 136]
[73 135]
[74 134]
[75 133]
[76 127]
[77 126]
[78 125]
[82 124]
[83 123]
[84 122]
[85 121]
[90 120]
[91 119]
[92 118]
[93 117]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
