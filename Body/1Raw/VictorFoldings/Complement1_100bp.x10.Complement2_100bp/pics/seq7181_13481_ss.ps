%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[95.88645935 595.83740234]
[80.99304962 597.76171875]
[65.97694397 597.94390869]
[51.04122543 596.38159180]
[36.38787842 593.09588623]
[22.21507263 588.13122559]
[8.71447945 581.55468750]
[-3.93132138 573.45532227]
[-15.55130959 563.94256592]
[-25.98833847 553.14508057]
[-35.10125732 541.20898438]
[-42.76683044 528.29559326]
[-48.88138199 514.57958984]
[-53.36222076 500.24645996]
[-56.14875412 485.49005127]
[-57.20328903 470.50988770]
[-56.51157379 455.50863647]
[-54.08295441 440.68911743]
[-49.95028305 426.25173950]
[-44.16944122 412.39178467]
[-36.81861496 399.29666138]
[-27.99721146 387.14352417]
[-17.82453156 376.09664917]
[-6.43814945 366.30548096]
[6.00794649 357.90243530]
[19.34543800 351.00115967]
[33.39395142 345.69494629]
[47.96349335 342.05560303]
[62.85703278 340.13229370]
[77.87314606 339.95108032]
[79.43367004 325.03247070]
[80.99419403 310.11386108]
[82.55471802 295.19525146]
[76.18347931 281.73211670]
[85.31449127 268.81176758]
[86.87501526 253.89315796]
[88.43553925 238.97456360]
[89.99606323 224.05595398]
[91.55658722 209.13734436]
[93.11711121 194.21875000]
[83.56759644 182.84587097]
[84.93766785 167.69404602]
[96.93133545 157.75474548]
[96.93133545 142.75474548]
[95.37081146 127.83614349]
[93.81028748 112.91754150]
[85.75378418 101.49018860]
[91.27111053 88.64298248]
[88.59711456 85.22190857]
[87.28301239 81.50201416]
[87.25575256 77.94748688]
[88.29904175 74.95112610]
[90.08902740 72.79379272]
[89.41924286 57.80875397]
[88.74945831 42.82371521]
[88.07967377 27.83867455]
[87.40988159 12.85363579]
[86.74009705 -2.13140273]
[69.82315063 -4.93235064]
[53.93756485 -11.37172699]
[39.85528946 -21.13370323]
[28.26001549 -33.74105835]
[19.71396255 -48.57851028]
[14.63062954 -64.92275238]
[13.25478935 -81.97769165]
[15.65069771 -98.91323853]
[21.69910431 -114.90573120]
[31.10317802 -129.17793274]
[43.40307999 -141.03688049]
[57.99844360 -149.90748596]
[74.17768097 -155.36039734]
[72.39521027 -170.25411987]
[70.61274719 -185.14784241]
[68.83027649 -200.04154968]
[67.04781342 -214.93527222]
[59.70038986 -201.85798645]
[46.84938812 -194.12159729]
[31.85403061 -193.74836731]
[18.63406944 -200.83586121]
[10.64517117 -213.53143311]
[9.97561264 -228.51647949]
[16.80041504 -241.87396240]
[29.33559227 -250.11224365]
[44.30447769 -251.07786560]
[57.79424286 -244.51843262]
[66.27839661 -232.14938354]
[66.72499847 -247.14273071]
[67.17160797 -262.13607788]
[67.61821747 -277.12942505]
[67.95319366 -292.12570190]
[68.17652130 -307.12402344]
[68.39984894 -322.12237549]
[53.74003220 -325.57257080]
[40.16484451 -332.09393311]
[28.30921936 -341.38146973]
[18.72766685 -353.00076294]
[11.86833286 -366.40835571]
[8.05204010 -380.97717285]
[7.45728445 -396.02575684]
[10.11188316 -410.85031128]
[15.89167690 -424.75744629]
[24.52633286 -437.09667969]
[35.61199188 -447.29089355]
[48.63016129 -454.86331177]
[62.97195435 -459.45971680]
[77.96658325 -460.86517334]
[92.91271210 -459.01388550]
[107.11129761 -453.99252319]
[119.89823151 -446.03585815]
[130.67546082 -435.51608276]
[138.93890381 -422.92523193]
[144.30206299 -408.85220337]
[146.51409912 -393.95520020]
[145.47155762 -378.93096924]
[141.22319031 -364.48223877]
[133.96771240 -351.28482056]
[124.04444885 -339.95596313]
[111.91755676 -331.02554321]
[98.15422058 -324.91122437]
[83.39818573 -321.89904785]
[83.17485809 -306.90069580]
[82.95153046 -291.90237427]
[85.99509430 -285.16748047]
[82.61156464 -276.68283081]
[82.16495514 -261.68948364]
[81.71835327 -246.69612122]
[81.27174377 -231.70277405]
[81.94152832 -216.71774292]
[83.72399902 -201.82402039]
[85.50646210 -186.93029785]
[87.28893280 -172.03659058]
[89.07139587 -157.14286804]
[102.02802277 -156.35980225]
[114.67485046 -153.42166138]
[126.65591431 -148.40997314]
[137.63377380 -141.46469116]
[147.29905701 -132.78018188]
[155.37915039 -122.59989166]
[161.64588928 -111.20945740]
[165.92202759 -98.92872620]
[168.08621216 -86.10273743]
[168.07647705 -73.09207153]
[165.89195251 -60.26267624]
[161.59295654 -47.97560120]
[155.29937744 -36.57682037]
[147.18721008 -26.38749886]
[137.48377991 -17.69493294]
[126.46123505 -10.74446487]
[114.42902374 -5.73254490]
[101.72513580 -2.80118775]
[102.39492035 12.18385124]
[103.06471252 27.16889000]
[103.73449707 42.15392685]
[104.40428162 57.13896561]
[105.07406616 72.12400818]
[106.18971252 87.08245850]
[114.24621582 98.50981140]
[108.72888947 111.35701752]
[110.28941345 126.27561951]
[111.84993744 141.19422913]
[118.08371735 127.55091095]
[129.01155090 117.27558136]
[143.01235962 111.89250946]
[158.00920105 112.20024872]
[171.77738953 118.15314484]
[182.27449036 128.86813354]
[187.94332886 142.75569153]
[187.94296265 157.75569153]
[182.27343750 171.64297485]
[171.77580261 182.35743713]
[158.00732422 188.30966187]
[143.01046753 188.61665344]
[129.00993347 183.23291016]
[118.08260345 172.95703125]
[111.84993744 159.31527710]
[121.52713776 171.52139282]
[119.73202515 186.62875366]
[108.03571320 195.77926636]
[106.47518921 210.69787598]
[104.91466522 225.61647034]
[103.35414124 240.53507996]
[101.79362488 255.45368958]
[100.23310089 270.37228394]
[106.49271393 284.90252686]
[97.47332001 296.75579834]
[95.91279602 311.67437744]
[94.35227203 326.59298706]
[92.79174805 341.51159668]
[107.44532013 344.79632568]
[121.61845398 349.76007080]
[135.11949158 356.33569336]
[147.76582336 364.43423462]
[159.38644409 373.94622803]
[169.82420349 384.74298096]
[178.93791199 396.67849731]
[186.60435486 409.59136963]
[192.71981812 423.30697632]
[197.20161438 437.63980103]
[199.98913574 452.39602661]
[201.04466248 467.37609863]
[200.35395813 482.37741089]
[197.92631531 497.19708252]
[193.79461670 511.63473511]
[188.01469421 525.49505615]
[180.66474915 538.59069824]
[171.84414673 550.74444580]
[161.67221069 561.79199219]
[150.28648376 571.58386230]
[137.84094238 579.98779297]
[124.50391388 586.88995361]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 188]
[31 187]
[32 186]
[33 185]
[35 183]
[36 182]
[37 181]
[38 180]
[39 179]
[40 178]
[43 175]
[44 160]
[45 159]
[46 158]
[48 156]
[53 155]
[54 154]
[55 153]
[56 152]
[57 151]
[58 150]
[71 132]
[72 131]
[73 130]
[74 129]
[75 128]
[86 127]
[87 126]
[88 125]
[89 124]
[90 122]
[91 121]
[92 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
