%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUU\
) } def
/len { sequence length } bind def

/coor [
[123.05364227 715.70037842]
[108.68989563 711.36602783]
[94.57268524 706.28582764]
[80.74069977 700.47381592]
[67.23184204 693.94586182]
[54.08314896 686.71978760]
[41.33065796 678.81555176]
[29.00932503 670.25469971]
[17.15291786 661.06066895]
[5.79393625 651.25878906]
[-5.03648567 640.87585449]
[-15.30866241 629.94030762]
[-24.99443817 618.48217773]
[-34.06726456 606.53277588]
[-42.50227356 594.12493896]
[-50.27634811 581.29266357]
[-57.36817551 568.07110596]
[-63.75831985 554.49652100]
[-69.42926788 540.60607910]
[-74.36547089 526.43786621]
[-78.55340576 512.03076172]
[-81.98158264 497.42422485]
[-84.64061737 482.65829468]
[-86.52321625 467.77340698]
[-87.62422180 452.81042480]
[-87.94060516 437.81030273]
[-87.47151947 422.81417847]
[-86.21823120 407.86315918]
[-84.18418121 392.99822998]
[-81.37495422 378.26010132]
[-77.79824066 363.68923950]
[-73.46384430 349.32550049]
[-68.38364410 335.20831299]
[-62.57157516 321.37634277]
[-56.04355621 307.86749268]
[-48.81748199 294.71881104]
[-40.91316605 281.96636963]
[-32.35226822 269.64505005]
[-23.15825272 257.78866577]
[-13.35632133 246.42971802]
[-2.97334123 235.59933472]
[7.96222973 225.32717896]
[19.42041779 215.64144897]
[31.36981392 206.56864929]
[43.77767181 198.13368225]
[56.60997391 190.35964966]
[69.83155823 183.26785278]
[83.40617371 176.87774658]
[97.29661560 171.20684814]
[111.46482086 166.27069092]
[107.27780914 151.86691284]
[103.09079742 137.46311951]
[98.90378571 123.05934143]
[94.71677399 108.65556335]
[89.62160492 102.40962219]
[90.57636261 94.00609589]
[86.60427094 79.54156494]
[82.63217163 65.07704163]
[71.51670837 53.81840515]
[75.60753632 39.49658966]
[71.63543701 25.03206444]
[56.87035370 27.73051453]
[41.92626953 29.13182449]
[26.91691780 29.22532463]
[11.95653439 28.01030922]
[-2.84102368 25.49601936]
[-17.36313438 21.70159531]
[-31.49927521 16.65591431]
[-45.14185715 10.39737701]
[-58.18705368 2.97361541]
[-70.53557587 -5.55886984]
[-82.09345245 -15.13514042]
[-92.77270508 -25.68231392]
[-102.49206543 -37.12011719]
[-111.17756653 -49.36150360]
[-118.76309204 -62.31330109]
[-125.19092560 -75.87694550]
[-130.41213989 -89.94919586]
[-134.38699341 -104.42296600]
[-137.08523560 -119.18808746]
[-138.48632812 -134.13218689]
[-138.57962036 -149.14154053]
[-137.36439514 -164.10191345]
[-134.84989929 -178.89942932]
[-131.05526733 -193.42149353]
[-126.00939178 -207.55755615]
[-119.75066376 -221.20005798]
[-112.32672119 -234.24514771]
[-103.79405975 -246.59355164]
[-94.21762848 -258.15127563]
[-83.67030334 -268.83038330]
[-72.23236084 -278.54959106]
[-59.99085617 -287.23492432]
[-47.03895187 -294.82028198]
[-33.47521973 -301.24792480]
[-19.40289307 -306.46893311]
[-4.92907095 -310.44357300]
[9.83608913 -313.14160156]
[24.78021431 -314.54251099]
[39.78956985 -314.63558960]
[54.74991989 -313.42013550]
[69.54740906 -310.90545654]
[84.06941223 -307.11059570]
[98.20540619 -302.06454468]
[111.84781647 -295.80560303]
[124.89280701 -288.38146973]
[137.24108887 -279.84866333]
[148.79869080 -270.27206421]
[159.47764587 -259.72457886]
[169.19670105 -248.28651428]
[177.88185120 -236.04487610]
[185.46701050 -223.09286499]
[191.89447021 -209.52905273]
[197.11528015 -195.45664978]
[201.08972168 -180.98277283]
[203.78755188 -166.21757507]
[205.18823242 -151.27342224]
[205.28111267 -136.26406860]
[204.06546021 -121.30374146]
[201.55055237 -106.50628662]
[197.75550842 -91.98433685]
[192.70924377 -77.84840393]
[186.45011902 -64.20608521]
[179.02581787 -51.16120529]
[170.49281311 -38.81303787]
[160.91604614 -27.25556946]
[150.36842346 -16.57675743]
[138.93022156 -6.85787582]
[126.68846893 1.82710636]
[113.73635101 9.41209126]
[100.17243958 15.83934975]
[86.09996033 21.05996704]
[90.07205963 35.52449036]
[100.90341187 45.74853516]
[97.09669495 61.10494995]
[101.06879425 75.56947327]
[105.04089355 90.03399658]
[109.12055969 104.46855164]
[113.30757141 118.87232971]
[117.49457550 133.27610779]
[121.68158722 147.67990112]
[125.86859894 162.08367920]
[140.47511292 158.65536499]
[155.24104309 155.99620056]
[170.12590027 154.11346436]
[185.08888245 153.01232910]
[200.08900452 152.69580078]
[215.08512878 153.16474915]
[230.03616333 154.41790771]
[244.90110779 156.45181274]
[259.63925171 159.26091003]
[274.21017456 162.83749390]
[288.57394409 167.17176819]
[302.69116211 172.25183105]
[316.52319336 178.06378174]
[330.03210449 184.59167480]
[343.18081665 191.81762695]
[355.93338013 199.72183228]
[368.25476074 208.28262329]
[380.11120605 217.47653198]
[391.47024536 227.27835083]
[402.30075073 237.66123962]
[412.57296753 248.59671021]
[422.25881958 260.05480957]
[431.33172607 272.00411987]
[439.76681519 284.41192627]
[447.54095459 297.24414062]
[454.63287354 310.46566772]
[461.02310181 324.04022217]
[466.69412231 337.93060303]
[471.63040161 352.09878540]
[475.81842041 366.50585938]
[479.24670410 381.11239624]
[481.90582275 395.87832642]
[483.78851318 410.76318359]
[484.88961792 425.72616577]
[485.20608521 440.72628784]
[484.73709106 455.72241211]
[483.48388672 470.67343140]
[481.44992065 485.53839111]
[478.64077759 500.27651978]
[475.06417847 514.84741211]
[470.72985840 529.21118164]
[465.64974976 543.32836914]
[459.83776855 557.16040039]
[453.30981445 570.66925049]
[446.08383179 583.81799316]
[438.17959595 596.57049561]
[429.61877441 608.89184570]
[420.42480469 620.74829102]
[410.62295532 632.10729980]
[400.24005127 642.93774414]
[389.30453491 653.20996094]
[377.84640503 662.89581299]
[365.89706421 671.96862793]
[353.48925781 680.40368652]
[340.65698242 688.17779541]
[327.43545532 695.26965332]
[313.86087036 701.65985107]
[299.97045898 707.33087158]
[285.80230713 712.26708984]
[271.39520264 716.45507812]
[256.78866577 719.88330078]
[242.02272034 722.54235840]
[227.13784790 724.42504883]
[212.17485046 725.52606201]
[197.17474365 725.84252930]
[182.17861938 725.37347412]
[167.22760010 724.12023926]
[152.36265564 722.08624268]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 142]
[51 141]
[52 140]
[53 139]
[54 138]
[56 137]
[57 136]
[58 135]
[60 133]
[61 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
