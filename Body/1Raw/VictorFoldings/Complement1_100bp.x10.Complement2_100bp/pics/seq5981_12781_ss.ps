%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[122.07794189 402.23010254]
[122.67248535 417.24984741]
[120.90997314 432.17767334]
[116.83381653 446.64596558]
[110.54439545 460.29843140]
[102.19658661 472.79885864]
[91.99596405 483.83938599]
[80.19373322 493.14819336]
[67.08052063 500.49600220]
[52.97926712 505.70187378]
[38.23722076 508.63760376]
[23.21741867 509.23089600]
[8.28973579 507.46716309]
[-6.17821884 503.38983154]
[-19.83015823 497.09927368]
[-32.32989502 488.75042725]
[-43.36960602 478.54888916]
[-52.67742920 466.74588013]
[-60.02415848 453.63208008]
[-65.22886658 439.53039551]
[-68.16338348 424.78811646]
[-68.75544739 409.76824951]
[-66.99047089 394.84072876]
[-62.91192627 380.37310791]
[-56.62025070 366.72167969]
[-48.27037811 354.22262573]
[-38.06793594 343.18377686]
[-26.26416588 333.87692261]
[-13.14974594 326.53128052]
[0.95236790 321.32772827]
[15.69489956 318.39440918]
[30.71479988 317.80358887]
[45.64219284 319.56979370]
[60.10947418 323.64953613]
[66.38683319 310.02621460]
[72.66419220 296.40292358]
[78.53315735 282.59872437]
[83.98851013 268.62594604]
[89.44387054 254.65313721]
[94.89922333 240.68034363]
[100.35458374 226.70753479]
[102.69007111 211.89047241]
[101.79725647 196.91706848]
[100.90444183 181.94366455]
[100.01161957 166.97026062]
[98.67338562 152.03007507]
[96.89092255 137.13635254]
[95.10845947 122.24263763]
[80.47550201 111.72416687]
[78.06786346 93.86457825]
[89.39308167 79.84670258]
[87.16796875 65.01265717]
[84.83248138 50.19559097]
[82.38674927 35.39632034]
[79.94102478 20.59704971]
[77.49530029 5.79777813]
[75.04956818 -9.00149250]
[72.60384369 -23.80076408]
[67.95764160 -9.53847790]
[59.36310959 2.75518107]
[47.56376648 12.01669025]
[33.58037567 17.44483566]
[18.62263680 18.57003021]
[3.98454595 15.29493046]
[-9.06755733 7.90286732]
[-19.40453529 -2.96667218]
[-26.13213539 -16.37336540]
[-28.66835213 -31.15739632]
[-26.79377937 -46.03980255]
[-20.67058563 -59.73310089]
[-10.82848835 -71.05268860]
[1.88107359 -79.01931000]
[16.35859489 -82.94377136]
[31.35162544 -82.48656464]
[45.56311798 -77.68724060]
[57.76363754 -68.96099854]
[66.89771271 -57.06273651]
[72.17442322 -43.02521515]
[73.95688629 -57.91893387]
[75.73934937 -72.81265259]
[77.52182007 -87.70636749]
[68.02742004 -100.05522156]
[70.04726410 -115.13417816]
[81.87851715 -124.10953522]
[83.66098022 -139.00325012]
[85.44344330 -153.89697266]
[87.22591400 -168.79067993]
[72.69023132 -172.58908081]
[58.80718613 -178.33143616]
[45.83539963 -185.91078186]
[34.01652908 -195.18591309]
[23.57075310 -205.98405457]
[14.69267368 -218.10400391]
[7.54768133 -231.32002258]
[2.26888347 -245.38586426]
[-1.04537916 -260.03952026]
[-2.33336377 -275.00796509]
[-1.57107627 -290.01239014]
[1.22728252 -304.77325439]
[6.00958109 -319.01556396]
[12.68672752 -332.47399902]
[21.13433266 -344.89782715]
[31.19501877 -356.05563354]
[42.68136597 -365.73950195]
[55.37938690 -373.76907349]
[69.05252838 -379.99475098]
[83.44606781 -384.30053711]
[98.29185486 -386.60623169]
[113.31333160 -386.86889648]
[128.23065186 -385.08358765]
[142.76591492 -381.28363037]
[156.64834595 -375.53976440]
[169.61930847 -367.95901489]
[181.43717957 -358.68261719]
[191.88179016 -347.88336182]
[200.75856018 -335.76242065]
[207.90211487 -322.54565430]
[213.17939758 -308.47921753]
[216.49206543 -293.82522583]
[217.77842712 -278.85662842]
[217.01452637 -263.85226440]
[214.21456909 -249.09172058]
[209.43072510 -234.84992981]
[202.75212097 -221.39222717]
[194.30317688 -208.96929932]
[184.24127197 -197.81259155]
[172.75389099 -188.12995911]
[160.05499268 -180.10176086]
[146.38117981 -173.87756348]
[131.98718262 -169.57333374]
[117.14113617 -167.26924133]
[102.11962891 -167.00822449]
[100.33716583 -152.11450195]
[98.55469513 -137.22077942]
[96.77223206 -122.32706451]
[106.15136719 -110.81327057]
[104.55585480 -95.68353271]
[92.41553497 -85.92390442]
[90.63307190 -71.03018188]
[88.85060120 -56.13646698]
[87.06813812 -41.24274826]
[87.40311432 -26.24649048]
[89.84883881 -11.44721985]
[92.29457092 3.35205102]
[94.74029541 18.15132141]
[97.18602753 32.95059204]
[99.63175201 47.74986267]
[103.82378387 53.83662415]
[102.00201416 62.78754044]
[104.22712708 77.62158203]
[114.43914795 82.38827515]
[121.11540222 91.46760559]
[122.62104797 102.63630676]
[118.58739471 113.15943909]
[110.00217438 120.46016693]
[111.78463745 135.35388184]
[113.56710815 150.24760437]
[116.29173279 153.62847900]
[117.66107941 157.32841492]
[117.74125671 160.88214111]
[116.74269867 163.89369202]
[114.98503113 166.07743835]
[115.87784576 181.05084229]
[116.77066040 196.02424622]
[117.66347504 210.99765015]
[123.49527740 197.17773438]
[131.95526123 184.79110718]
[142.70648193 174.33111572]
[155.32070923 166.21438599]
[169.29551697 160.76420593]
[184.07431030 158.19764709]
[199.06845093 158.61692810]
[213.68072510 162.00535583]
[227.32913208 168.22798157]
[239.47006226 177.03694153]
[249.61994934 188.08139038]
[257.37451172 200.92143250]
[262.42492676 215.04565430]
[264.56997681 229.89147949]
[263.72427368 244.86761475]
[259.92150879 259.37756348]
[253.31309509 272.84341431]
[244.16229248 284.72882080]
[232.83354187 294.56039429]
[219.77809143 301.94650269]
[205.51589966 306.59301758]
[190.61505127 308.31484985]
[175.66903687 307.04342651]
[161.27314758 302.82937622]
[148.00074768 295.84054565]
[136.38050842 286.35531616]
[126.87522888 274.75143433]
[119.86351776 261.49111938]
[115.62464142 247.10252380]
[114.32738495 232.16290283]
[108.87202454 246.13569641]
[103.41666412 260.10848999]
[97.96131134 274.08129883]
[92.50595093 288.05407715]
[93.31314087 292.32052612]
[92.77484131 296.22882080]
[91.16886139 299.39996338]
[88.86755371 301.58413696]
[86.28751373 302.68026733]
[80.01014709 316.30358887]
[73.73278809 329.92691040]
[86.23390198 338.27368164]
[97.27529907 348.47338867]
[106.58506775 360.27484131]
[113.93395996 373.38745117]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 206]
[35 205]
[36 204]
[37 199]
[38 198]
[39 197]
[40 196]
[41 195]
[42 165]
[43 164]
[44 163]
[45 162]
[46 157]
[47 156]
[48 155]
[51 150]
[52 149]
[53 147]
[54 146]
[55 145]
[56 144]
[57 143]
[58 142]
[78 141]
[79 140]
[80 139]
[81 138]
[84 135]
[85 134]
[86 133]
[87 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
