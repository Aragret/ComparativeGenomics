%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[164.99510193 620.46746826]
[152.17800903 612.66894531]
[139.76893616 604.23620605]
[127.79923248 595.19067383]
[116.29913330 585.55517578]
[105.29769135 575.35400391]
[94.82269287 564.61297607]
[84.90060425 553.35919189]
[75.55648804 541.62109375]
[66.81394958 529.42834473]
[58.69506454 516.81170654]
[51.22035599 503.80307007]
[44.40869522 490.43533325]
[38.27729416 476.74221802]
[32.84163666 462.75833130]
[28.11546135 448.51898193]
[24.11069870 434.06018066]
[20.83747101 419.41839600]
[18.30404472 404.63064575]
[16.51681900 389.73431396]
[15.48030758 374.76696777]
[15.19713116 359.76644897]
[15.66800404 344.77066040]
[16.89173698 329.81747437]
[18.86523819 314.94464111]
[21.58352280 300.18978882]
[25.03972435 285.59011841]
[29.22511292 271.18255615]
[34.12911224 257.00347900]
[39.73933792 243.08869934]
[46.04161835 229.47338867]
[53.02003098 216.19192505]
[60.65695190 203.27786255]
[68.93308258 190.76382446]
[77.82752228 178.68142700]
[87.31779480 167.06117249]
[97.37994385 155.93243408]
[107.98853302 145.32331848]
[119.11677551 135.26063538]
[109.62787628 123.64337158]
[100.13897705 112.02610779]
[90.47816467 100.55140686]
[80.64758301 89.22181702]
[70.81700134 77.89221954]
[60.98642349 66.56262970]
[51.15584183 55.23303604]
[41.32526016 43.90344238]
[29.15205574 52.68520355]
[16.24065781 60.34040070]
[2.69502544 66.80740356]
[-11.37577820 72.03413391]
[-25.85846138 75.97851562]
[-40.63641357 78.60878754]
[-55.59065247 79.90377045]
[-70.60076904 79.85304260]
[-85.54591370 78.45700836]
[-100.30575562 75.72690582]
[-114.76144409 71.68472290]
[-128.79660034 66.36299896]
[-142.29820251 59.80459213]
[-155.15756226 52.06229401]
[-167.27113342 43.19845581]
[-178.54138184 33.28443527]
[-188.87756348 22.40005875]
[-198.19645691 10.63296509]
[-206.42301941 -1.92210436]
[-213.49104309 -15.16406059]
[-219.34358215 -28.98628616]
[-223.93354797 -43.27748871]
[-227.22396851 -57.92260361]
[-229.18833923 -72.80371857]
[-229.81086731 -87.80100250]
[-229.08653259 -102.79372406]
[-227.02116394 -117.66115570]
[-223.63137817 -132.28358459]
[-218.94448853 -146.54330444]
[-212.99822998 -160.32546997]
[-205.84046936 -173.51913452]
[-197.52883911 -186.01805115]
[-188.13026428 -197.72160339]
[-177.72041321 -208.53555298]
[-166.38311768 -218.37281799]
[-154.20964050 -227.15420532]
[-141.29801941 -234.80900574]
[-127.75218201 -241.27558899]
[-113.68122101 -246.50189209]
[-99.19841766 -250.44583130]
[-84.42037964 -253.07565308]
[-69.46610260 -254.37017822]
[-54.45598602 -254.31900024]
[-39.51088715 -252.92250061]
[-24.75113106 -250.19195557]
[-10.29556465 -246.14932251]
[3.73942637 -240.82717896]
[17.24083710 -234.26835632]
[30.09996033 -226.52566528]
[42.21325684 -217.66145325]
[53.48320007 -207.74710083]
[63.81904984 -196.86239624]
[73.13758087 -185.09503174]
[81.36376953 -172.53970337]
[88.43138123 -159.29753113]
[94.28350830 -145.47512817]
[98.87303162 -131.18377686]
[102.16300201 -116.53856659]
[104.12692261 -101.65739441]
[104.74899292 -86.66008759]
[104.02419281 -71.66738892]
[101.95836639 -56.80002594]
[98.56814575 -42.17769241]
[93.88082123 -27.91812706]
[87.93413544 -14.13613892]
[80.77597046 -0.94269639]
[72.46395874 11.55597305]
[63.06502914 23.25923538]
[52.65485382 34.07286072]
[62.48543549 45.40245438]
[72.31601715 56.73204803]
[82.14659882 68.06163788]
[91.97718048 79.39123535]
[101.80775452 90.72082520]
[106.82025909 92.26638794]
[110.61000824 96.51034546]
[111.75624084 102.53720856]
[121.24514008 114.15447235]
[130.73403931 125.77173615]
[142.81590271 116.87657166]
[155.32945251 108.59969330]
[168.24305725 100.96199799]
[181.52409363 93.98279572]
[195.13903809 87.67969513]
[209.05346680 82.06864166]
[223.23225403 77.16378784]
[237.63957214 72.97753906]
[252.23902893 69.52046204]
[266.99374390 66.80129242]
[281.86645508 64.82690430]
[296.81954956 63.60227203]
[311.81530762 63.13050079]
[326.81585693 63.41277695]
[341.78323364 64.44839478]
[356.67971802 66.23472595]
[371.46759033 68.76726532]
[386.10955811 72.03961945]
[400.56863403 76.04351044]
[414.80822754 80.76883698]
[428.79244995 86.20365906]
[442.48593140 92.33423615]
[455.85409546 99.14509583]
[468.86315918 106.61902618]
[481.48028564 114.73715210]
[493.67355347 123.47896576]
[505.41223145 132.82237244]
[516.66662598 142.74378967]
[527.40826416 153.21813965]
[537.61010742 164.21897888]
[547.24627686 175.71850586]
[556.29254150 187.68766785]
[564.72601318 200.09622192]
[572.52532959 212.91285706]
[579.67083740 226.10517883]
[586.14447021 239.63984680]
[591.92993164 253.48268127]
[597.01251221 267.59872437]
[601.37945557 281.95233154]
[605.01965332 296.50720215]
[607.92395020 311.22659302]
[610.08508301 326.07330322]
[611.49743652 341.00985718]
[612.15759277 355.99850464]
[612.06378174 371.00140381]
[611.21630859 385.98062134]
[609.61724854 400.89834595]
[607.27069092 415.71688843]
[604.18255615 430.39880371]
[600.36065674 444.90704346]
[595.81457520 459.20489502]
[590.55590820 473.25628662]
[584.59783936 487.02569580]
[577.95544434 500.47839355]
[570.64556885 513.58032227]
[562.68658447 526.29840088]
[554.09863281 538.60058594]
[544.90344238 550.45568848]
[535.12420654 561.83380127]
[524.78564453 572.70623779]
[513.91381836 583.04547119]
[502.53628540 592.82537842]
[490.68173218 602.02130127]
[478.38009644 610.60998535]
[465.66244507 618.56970215]
[452.56094360 625.88037109]
[439.10867310 632.52355957]
[425.33959961 638.48242188]
[411.28854370 643.74200439]
[396.99093628 648.28887939]
[382.48297119 652.11169434]
[367.80120850 655.20074463]
[352.98281860 657.54815674]
[338.06518555 659.14807129]
[323.08599854 659.99645996]
[308.08312988 660.09118652]
[293.09442139 659.43194580]
[278.15780640 658.02044678]
[263.31094360 655.86022949]
[248.59138489 652.95678711]
[234.03628540 649.31744385]
[219.68244934 644.95141602]
[205.56610107 639.86962891]
[191.72290039 634.08502197]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 126]
[40 125]
[41 124]
[42 121]
[43 120]
[44 119]
[45 118]
[46 117]
[47 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
