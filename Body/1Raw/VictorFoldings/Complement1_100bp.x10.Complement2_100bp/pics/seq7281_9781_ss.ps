%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[-36.34774780 504.15133667]
[-34.96355057 519.21582031]
[-38.30426788 533.97033691]
[-46.04260254 546.96929932]
[-57.42044067 556.93920898]
[-71.32308960 562.90344238]
[-86.38851929 564.27752686]
[-101.14075470 560.92694092]
[-114.13454437 553.17987061]
[-124.09687805 541.79534912]
[-130.05174255 527.88873291]
[-131.41574097 512.82238770]
[-128.05526733 498.07238770]
[-120.29951477 485.08380127]
[-108.90832520 475.12908936]
[-94.99769592 469.18353271]
[-79.93044281 467.82962036]
[-76.60818481 453.20217896]
[-73.28591919 438.57470703]
[-69.96366119 423.94726562]
[-66.64140320 409.31979370]
[-63.31914520 394.69232178]
[-59.99688339 380.06488037]
[-56.67462540 365.43740845]
[-66.16549683 377.05307007]
[-78.21653748 385.98461914]
[-92.09081268 391.68588257]
[-106.93990326 393.80825806]
[-121.85578918 392.22192383]
[-135.92634583 387.02392578]
[-148.29116821 378.53210449]
[-158.19413757 367.26571655]
[-165.02967834 353.91375732]
[-168.37980652 339.29263306]
[-168.03964233 324.29650879]
[-164.02999878 309.84234619]
[-156.59606934 296.81402588]
[-146.19244385 286.00827026]
[-133.45529175 278.08584595]
[-119.16350555 273.53118896]
[-104.19103241 272.62283325]
[-89.45345306 275.41632080]
[-75.85195923 281.74084473]
[-64.21829987 291.20962524]
[-55.26387405 303.24365234]
[-49.53625107 317.10708618]
[-47.38567352 331.95211792]
[-48.94365692 346.87100220]
[-40.90248489 334.20849609]
[-40.61125565 319.31674194]
[-26.68169975 311.81484985]
[-18.64052582 299.15234375]
[-23.00232697 282.91000366]
[-14.09191322 268.24987793]
[2.99428034 264.49737549]
[10.84603596 251.71652222]
[18.69779205 238.93568420]
[26.54954720 226.15483093]
[34.40130234 213.37399292]
[42.25305939 200.59315491]
[50.00944901 187.75421143]
[57.67004776 174.85787964]
[64.54946136 161.52845764]
[70.62329102 147.81318665]
[76.69712830 134.09791565]
[82.77095795 120.38265228]
[88.84479523 106.66738892]
[94.50758362 92.77735901]
[99.75430298 78.72489166]
[99.82427216 69.59072876]
[105.18515778 64.50322723]
[110.64051819 50.53042984]
[116.09587097 36.55763245]
[121.55123138 22.58483505]
[126.48282623 8.41870022]
[130.88381958 -5.92114687]
[130.40998840 -15.04327965]
[135.45855713 -20.44084549]
[140.07257080 -34.71357727]
[144.68658447 -48.98631287]
[149.30059814 -63.25904465]
[134.96083069 -58.85776520]
[122.49349976 -67.19836426]
[121.08905029 -82.13247681]
[131.78279114 -92.65121460]
[146.69169617 -91.00056458]
[154.82525635 -78.39896393]
[160.48803711 -92.28898621]
[166.15083313 -106.17901611]
[171.81361389 -120.06904602]
[177.47640991 -133.95907593]
[182.93176270 -147.93186951]
[188.17848206 -161.98434448]
[193.42520142 -176.03680420]
[198.67192078 -190.08927917]
[203.91864014 -204.14175415]
[209.16535950 -218.19422913]
[214.41206360 -232.24668884]
[201.32478333 -239.64056396]
[189.55534363 -248.99079895]
[179.39360046 -260.06713867]
[171.08979797 -272.59686279]
[164.84841919 -286.27133179]
[160.82315063 -300.75387573]
[159.11314392 -315.68780518]
[159.76049805 -330.70538330]
[162.74925232 -345.43676758]
[168.00582886 -359.51919556]
[175.40078735 -372.60586548]
[184.75199890 -384.37454224]
[195.82917786 -394.53536987]
[208.35955811 -402.83813477]
[222.03456116 -409.07839966]
[236.51742554 -413.10244751]
[251.45150757 -414.81121826]
[266.46902466 -414.16265869]
[281.20016479 -411.17266846]
[295.28216553 -405.91491699]
[308.36822510 -398.51889038]
[320.13610840 -389.16671753]
[330.29602051 -378.08868408]
[338.59777832 -365.55761719]
[344.83688354 -351.88211060]
[348.85977173 -337.39889526]
[350.56732178 -322.46469116]
[349.91748047 -307.44723511]
[346.92630005 -292.71633911]
[341.66738892 -278.63476562]
[334.27029419 -265.54931641]
[324.91714478 -253.78219604]
[313.83825684 -243.62319946]
[301.30651855 -235.32249451]
[287.63049316 -229.08448792]
[273.14694214 -225.06282043]
[258.21258545 -223.35650635]
[243.19519043 -224.00756836]
[228.46453857 -226.99998474]
[223.21781921 -212.94750977]
[217.97109985 -198.89503479]
[212.72438049 -184.84255981]
[207.47767639 -170.79010010]
[202.23095703 -156.73762512]
[196.98423767 -142.68515015]
[198.11656189 -138.04544067]
[196.34628296 -132.64515686]
[191.36642456 -128.29627991]
[185.70364380 -114.40625763]
[180.04086304 -100.51622772]
[174.37806702 -86.62620544]
[168.71528625 -72.73617554]
[163.57331848 -58.64503479]
[158.95932007 -44.37230301]
[154.34530640 -30.09956932]
[149.73129272 -15.82683563]
[145.22366333 -1.52014875]
[140.82267761 12.81969833]
[155.09530640 8.20540810]
[167.68544006 16.35946655]
[169.31207275 31.27100754]
[158.77613831 41.94779587]
[143.84431458 40.51930237]
[135.52403259 28.04019165]
[130.06866455 42.01298904]
[124.61331177 55.98578644]
[119.15795898 69.95858765]
[113.80677032 83.97161102]
[108.56005096 98.02407837]
[109.58567047 100.89420319]
[109.58963776 104.20094299]
[108.40822601 107.56660461]
[106.01953125 110.55832672]
[102.56005859 112.74122620]
[96.48622894 126.45648956]
[90.41239166 140.17175293]
[84.33856201 153.88702393]
[78.26472473 167.60229492]
[91.86589813 161.27709961]
[106.60902405 164.04121399]
[116.99527740 174.86367798]
[119.15084076 189.70799255]
[112.27174377 203.03758240]
[98.92372131 209.88084412]
[84.08525848 207.68542480]
[73.29072571 197.27014160]
[70.56637573 182.51847839]
[62.90577698 195.41481018]
[61.21360016 204.39112854]
[55.03390121 208.44490051]
[47.18214417 221.22575378]
[39.33039093 234.00659180]
[31.47863388 246.78742981]
[23.62687874 259.56826782]
[15.77512264 272.34912109]
[20.39200592 285.00213623]
[16.92905807 297.81692505]
[6.86681032 306.17355347]
[-5.97800112 307.19351196]
[-14.01917458 319.85604858]
[-14.88556194 335.65350342]
[-28.23995781 342.24966431]
[-36.28113174 354.91220093]
[-42.04716492 368.75967407]
[-45.36942291 383.38714600]
[-48.69168472 398.01458740]
[-52.01394272 412.64205933]
[-55.33620453 427.26950073]
[-58.65846252 441.89697266]
[-61.98072052 456.52444458]
[-65.30297852 471.15188599]
[-52.29882431 478.88153076]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 209]
[18 208]
[19 207]
[20 206]
[21 205]
[22 204]
[23 203]
[24 202]
[48 201]
[49 200]
[51 198]
[52 197]
[55 193]
[56 192]
[57 191]
[58 190]
[59 189]
[60 188]
[61 186]
[62 185]
[63 176]
[64 175]
[65 174]
[66 173]
[67 172]
[68 167]
[69 166]
[71 165]
[72 164]
[73 163]
[74 162]
[75 156]
[76 155]
[78 154]
[79 153]
[80 152]
[81 151]
[87 150]
[88 149]
[89 148]
[90 147]
[91 146]
[92 143]
[93 142]
[94 141]
[95 140]
[96 139]
[97 138]
[98 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
