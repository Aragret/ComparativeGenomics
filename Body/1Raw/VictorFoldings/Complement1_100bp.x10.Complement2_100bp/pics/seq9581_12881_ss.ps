%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[131.83084106 714.19421387]
[117.73007965 709.06750488]
[103.93314362 703.17175293]
[90.48194122 696.52496338]
[77.41732788 689.14721680]
[64.77896881 681.06103516]
[52.60525894 672.29089355]
[40.93316269 662.86340332]
[29.79812813 652.80725098]
[19.23397446 642.15301514]
[9.27278233 630.93292236]
[-0.05519372 619.18121338]
[-8.72162628 606.93341064]
[-16.70019531 594.22680664]
[-23.96667099 581.10003662]
[-30.49898338 567.59283447]
[-36.27729416 553.74633789]
[-41.28405762 539.60253906]
[-45.50406265 525.20440674]
[-48.92449951 510.59564209]
[-51.53497696 495.82064819]
[-53.32756805 480.92428589]
[-54.29682541 465.95181274]
[-54.43981171 450.94866943]
[-53.75608826 435.96041870]
[-52.24773026 421.03259277]
[-49.91932297 406.21054077]
[-46.77793503 391.53924561]
[-42.83310699 377.06329346]
[-38.09682083 362.82662964]
[-32.58345795 348.87249756]
[-26.30976295 335.24328613]
[-19.29479027 321.98037720]
[-11.55984497 309.12402344]
[-3.12841511 296.71331787]
[5.97389174 284.78591919]
[15.71943188 273.37805176]
[26.07860756 262.52438354]
[37.01996231 252.25784302]
[48.51026154 242.60963440]
[60.51461029 233.60905457]
[72.99655914 225.28343201]
[85.91819000 217.65806580]
[99.24026489 210.75608826]
[112.92232513 204.59849548]
[126.92282104 199.20396423]
[122.30881500 184.93122864]
[117.69480896 170.65849304]
[113.08079529 156.38575745]
[108.46678925 142.11302185]
[103.32482910 128.02188110]
[97.66204071 114.13185883]
[86.73600006 105.40756226]
[88.44792938 91.53092957]
[82.78514862 77.64090729]
[77.12236023 63.75087738]
[71.45957184 49.86085129]
[65.79678345 35.97082138]
[60.13399887 22.08079720]
[56.61135483 19.54210663]
[54.31113434 16.33687592]
[53.29276657 12.93124390]
[53.45820236 9.76276779]
[54.57485199 7.19153595]
[49.74885559 -7.01091957]
[44.92285538 -21.21337509]
[30.26749992 -17.94722176]
[15.34491825 -16.28476524]
[0.33006859 -16.24549484]
[-14.60100555 -17.82987595]
[-29.27324677 -21.01932907]
[-43.51462555 -25.77645874]
[-57.15817642 -32.04549026]
[-70.04393005 -39.75292587]
[-82.02081299 -48.80839920]
[-92.94839478 -59.10573578]
[-102.69856262 -70.52420807]
[-111.15699768 -82.92993927]
[-118.22453308 -96.17747498]
[-123.81829071 -110.11149597]
[-127.87270355 -124.56864166]
[-130.34024048 -139.37939453]
[-131.19194031 -154.37011719]
[-130.41784668 -169.36505127]
[-128.02702332 -184.18838501]
[-124.04750824 -198.66632080]
[-118.52595520 -212.62911987]
[-111.52709961 -225.91307068]
[-103.13300323 -238.36242676]
[-93.44207764 -249.83122253]
[-82.56794739 -260.18499756]
[-70.63809967 -269.30233765]
[-57.79241943 -277.07638550]
[-44.18150711 -283.41595459]
[-29.96494293 -288.24673462]
[-15.30941105 -291.51211548]
[-0.38673887 -293.17376709]
[14.62811279 -293.21221924]
[29.55910110 -291.62704468]
[44.23117065 -288.43679810]
[58.47229385 -283.67889404]
[72.11550903 -277.40914917]
[85.00084686 -269.70101929]
[96.97724152 -260.64489746]
[107.90427399 -250.34696960]
[117.65382385 -238.92797852]
[126.11159515 -226.52178955]
[133.17840576 -213.27386475]
[138.77142334 -199.33953857]
[142.82505798 -184.88218689]
[145.29179382 -170.07128906]
[146.14268494 -155.08052063]
[145.36779785 -140.08563232]
[142.97616577 -125.26242828]
[138.99588013 -110.78469849]
[133.47357178 -96.82220459]
[126.47399902 -83.53863525]
[118.07923126 -71.08972931]
[108.38768768 -59.62145996]
[97.51300049 -49.26827621]
[85.58266449 -40.15156937]
[72.73656464 -32.37821960]
[59.12531281 -26.03937340]
[63.95130920 -11.83691692]
[68.77730560 2.36553860]
[74.02402496 16.41800880]
[79.68681335 30.30803680]
[85.34960175 44.19806290]
[91.01238251 58.08808899]
[96.67517090 71.97811890]
[102.33795929 85.86814117]
[113.26399994 94.59243774]
[111.55207062 108.46907043]
[117.21485138 122.35909271]
[125.34982300 109.75662231]
[140.25888062 108.10738373]
[150.95162964 118.62713623]
[149.54576111 133.56111145]
[137.07765198 141.90052795]
[122.73951721 137.49900818]
[127.35353088 151.77174377]
[131.96754456 166.04447937]
[136.58154297 180.31721497]
[141.19555664 194.58995056]
[155.70446777 190.76812744]
[170.40188599 187.75135803]
[185.24317932 185.54884338]
[200.18325806 184.16723633]
[215.17675781 183.61073303]
[230.17814636 183.88105774]
[245.14187622 184.97735596]
[260.02249146 186.89630127]
[274.77478027 189.63208008]
[289.35397339 193.17639160]
[303.71578979 197.51844788]
[317.81658936 202.64506531]
[331.61355591 208.54067993]
[345.06481934 215.18740845]
[358.12948608 222.56501770]
[370.76788330 230.65115356]
[382.94165039 239.42121887]
[394.61383057 248.84860229]
[405.74893188 258.90466309]
[416.31317139 269.55886841]
[426.27444458 280.77883911]
[435.60247803 292.53051758]
[444.26901245 304.77822876]
[452.24768066 317.48477173]
[459.51422119 330.61151123]
[466.04663086 344.11865234]
[471.82504272 357.96511841]
[476.83190918 372.10888672]
[481.05203247 386.50701904]
[484.47256470 401.11572266]
[487.08312988 415.89071655]
[488.87582397 430.78704834]
[489.84521484 445.75952148]
[489.98828125 460.76266479]
[489.30465698 475.75091553]
[487.79641724 490.67874146]
[485.46810913 505.50082397]
[482.32684326 520.17211914]
[478.38211060 534.64813232]
[473.64590454 548.88482666]
[468.13265991 562.83898926]
[461.85906982 576.46826172]
[454.84417725 589.73120117]
[447.10931396 602.58758545]
[438.67797852 614.99835205]
[429.57574463 626.92584229]
[419.83029175 638.33380127]
[409.47119141 649.18750000]
[398.52990723 659.45416260]
[387.03967285 669.10241699]
[375.03540039 678.10308838]
[362.55349731 686.42877197]
[349.63192749 694.05426025]
[336.30990601 700.95629883]
[322.62786865 707.11401367]
[308.62744141 712.50866699]
[294.35104370 717.12384033]
[279.84210205 720.94555664]
[265.14468384 723.96221924]
[250.30337524 726.16461182]
[235.36328125 727.54614258]
[220.36976624 728.10253906]
[205.36837769 727.83209229]
[190.40466309 726.73571777]
[175.52406311 724.81665039]
[160.77178955 722.08074951]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 144]
[47 143]
[48 142]
[49 141]
[50 140]
[51 134]
[52 133]
[54 131]
[55 130]
[56 129]
[57 128]
[58 127]
[59 126]
[64 125]
[65 124]
[66 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
