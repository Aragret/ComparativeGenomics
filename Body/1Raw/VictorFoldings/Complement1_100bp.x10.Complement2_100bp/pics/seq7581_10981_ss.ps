%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[22.52816772 763.27752686]
[8.73840904 769.19824219]
[-5.45524693 774.07189941]
[-19.97342300 777.87121582]
[-34.73492813 780.57495117]
[-49.65720749 782.16796875]
[-64.65681458 782.64141846]
[-79.64984894 781.99261475]
[-94.55248260 780.22515869]
[-109.28135681 777.34899902]
[-123.75411224 773.38012695]
[-137.88980103 768.34088135]
[-151.60937500 762.25927734]
[-164.83610535 755.16943359]
[-177.49603271 747.11102295]
[-189.51834106 738.12902832]
[-200.83580017 728.27368164]
[-211.38513184 717.60015869]
[-221.10731506 706.16815186]
[-229.94799805 694.04156494]
[-237.85772705 681.28820801]
[-244.79228210 667.97937012]
[-250.71287537 654.18957520]
[-255.58638000 639.99584961]
[-259.38555908 625.47766113]
[-262.08917236 610.71612549]
[-263.68206787 595.79382324]
[-264.15536499 580.79425049]
[-263.50643921 565.80120850]
[-261.73886108 550.89855957]
[-258.86254883 536.16973877]
[-254.89358521 521.69702148]
[-249.85417175 507.56137085]
[-243.77249146 493.84182739]
[-236.68254089 480.61517334]
[-228.62397766 467.95532227]
[-219.64187622 455.93307495]
[-209.78645325 444.61572266]
[-199.11285400 434.06646729]
[-187.68074036 424.34439087]
[-175.55404663 415.50381470]
[-162.80061340 407.59420776]
[-149.49176025 400.65975952]
[-135.70188904 394.73928833]
[-121.50814819 389.86590576]
[-106.98990631 386.06686401]
[-92.22834778 383.36337280]
[-77.30604553 381.77059937]
[-62.30643082 381.29742432]
[-47.31340408 381.94653320]
[-32.41080475 383.71423340]
[-17.68198013 386.59066772]
[-3.20929623 390.55975342]
[1.82761991 376.43072510]
[6.86453629 362.30169678]
[11.90145206 348.17266846]
[16.93836784 334.04364014]
[21.44599724 319.73693848]
[25.41809273 305.27243042]
[29.39019012 290.80789185]
[33.36228561 276.34338379]
[37.33438110 261.87884521]
[41.30647659 247.41432190]
[45.27857590 232.94979858]
[31.14964485 237.98699951]
[18.32232094 230.21141052]
[16.25243187 215.35490417]
[26.46582031 204.36915588]
[41.43355560 205.35244751]
[50.12169647 217.57829285]
[55.15861511 203.44926453]
[60.19552994 189.32023621]
[65.23244476 175.19120789]
[70.26936340 161.06217957]
[75.30628204 146.93315125]
[80.34319305 132.80412292]
[85.38011169 118.67508698]
[90.41703033 104.54605865]
[94.71115112 90.17384338]
[98.25082397 75.59746552]
[101.79049683 61.02109528]
[105.33016968 46.44471741]
[106.66840363 31.50453377]
[105.77558899 16.53112793]
[104.88276672 1.55772150]
[96.33778381 -11.75745106]
[103.30382538 -24.92269135]
[94.75884247 -38.23786545]
[101.72488403 -51.40310287]
[100.83206940 -66.37651062]
[85.97039032 -68.84191895]
[72.03012848 -74.55303192]
[59.71052170 -83.22338104]
[49.62951279 -94.41806793]
[42.29276276 -107.57556915]
[38.06828308 -122.03591156]
[37.16796494 -137.07377625]
[39.63697433 -151.93484497]
[45.35146713 -165.87373352]
[54.02479935 -178.19123840]
[65.22193146 -188.26953125]
[78.38121033 -195.60308838]
[92.84257507 -199.82406616]
[107.88065338 -200.72074890]
[122.74113464 -198.24813843]
[136.67861938 -192.53025818]
[148.99403381 -183.85394287]
[159.06961060 -172.65437317]
[166.39997864 -159.49331665]
[170.61746216 -145.03092957]
[171.51048279 -129.99264526]
[169.03427124 -115.13275909]
[163.31303406 -101.19664764]
[154.63372803 -88.88334656]
[143.43171692 -78.81047821]
[130.26889038 -71.48329163]
[115.80548096 -67.26932526]
[116.69829559 -52.29591751]
[125.17941284 -40.05174255]
[118.27723694 -25.81550598]
[126.75835419 -13.57133198]
[119.85617828 0.66490561]
[120.74899292 15.63831139]
[121.64180756 30.61171722]
[127.66641235 16.87475395]
[137.27294922 5.35458136]
[149.70381165 -3.04027176]
[163.97865295 -7.64775229]
[178.97171021 -8.10449505]
[193.50053406 -4.37447882]
[206.41935730 3.24813080]
[216.70932007 14.16218376]
[223.55892944 27.50695038]
[226.42799377 42.23001099]
[225.09025574 57.17023849]
[219.65118408 71.14939117]
[210.53976440 83.06500244]
[198.47453308 91.97737122]
[184.40701294 97.18362427]
[169.44664001 98.27317047]
[154.77323914 95.16009521]
[141.54402161 88.08989716]
[130.80229187 77.62017059]
[123.39518738 64.57659912]
[119.90653992 49.98439026]
[116.36686707 64.56076813]
[112.82720184 79.13713837]
[109.28752899 93.71351624]
[122.05162048 85.83456421]
[136.91163635 87.87902069]
[147.07379150 98.91218567]
[147.89205933 113.88985443]
[138.99235535 125.96442413]
[124.44350433 129.61557007]
[110.89704132 123.17404938]
[104.54605865 109.58296967]
[99.50914001 123.71200562]
[94.47222137 137.84103394]
[89.43531036 151.97006226]
[84.39839172 166.09909058]
[79.36147308 180.22811890]
[74.32456207 194.35714722]
[69.28764343 208.48617554]
[64.25072479 222.61520386]
[59.74309921 236.92189026]
[55.77100372 251.38641357]
[51.79890442 265.85095215]
[47.82680893 280.31546021]
[43.85471344 294.77999878]
[39.88261795 309.24450684]
[35.91052246 323.70904541]
[50.03945160 318.67184448]
[62.86677551 326.44744873]
[64.93666077 341.30392456]
[54.72327423 352.28967285]
[39.75553894 351.30639648]
[31.06739807 339.08053589]
[26.03048134 353.20956421]
[20.99356651 367.33859253]
[15.95664978 381.46762085]
[10.91973305 395.59664917]
[24.63941574 401.67797852]
[37.86627579 408.76757812]
[50.52633667 416.82580566]
[62.54880524 425.80758667]
[73.86643982 435.66271973]
[84.41595459 446.33605957]
[94.13834381 457.76791382]
[102.97924042 469.89434814]
[110.88919830 482.64758301]
[117.82398224 495.95626831]
[123.74481201 509.74597168]
[128.61857605 523.93957520]
[132.41801453 538.45770264]
[135.12187195 553.21917725]
[136.71504211 568.14147949]
[137.18861389 583.14105225]
[136.53993225 598.13409424]
[134.77262878 613.03674316]
[131.89657593 627.76568604]
[127.92787170 642.23846436]
[122.88870239 656.37420654]
[116.80725861 670.09381104]
[109.71754456 683.32061768]
[101.65920258 695.98059082]
[92.67731476 708.00299072]
[82.82209778 719.32055664]
[72.14867401 729.86993408]
[60.71673203 739.59222412]
[48.59020615 748.43304443]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 181]
[54 180]
[55 179]
[56 178]
[57 177]
[58 171]
[59 170]
[60 169]
[61 168]
[62 167]
[63 166]
[64 165]
[70 164]
[71 163]
[72 162]
[73 161]
[74 160]
[75 159]
[76 158]
[77 157]
[78 156]
[79 148]
[80 147]
[81 146]
[82 145]
[83 124]
[84 123]
[85 122]
[87 120]
[89 118]
[90 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
