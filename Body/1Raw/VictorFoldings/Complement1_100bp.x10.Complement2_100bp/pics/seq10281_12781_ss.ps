%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[103.80800629 717.78125000]
[91.58812714 709.06549072]
[80.17439270 699.31787109]
[69.65364838 688.61260986]
[60.10597992 677.03106689]
[51.60404968 664.66149902]
[44.21255875 651.59802246]
[37.98776627 637.94000244]
[32.97704697 623.79144287]
[29.21853638 609.25994873]
[26.74083900 594.45623779]
[25.56280899 579.49291992]
[25.69341660 564.48382568]
[27.13166618 549.54327393]
[29.86660957 534.78491211]
[33.87743378 520.32104492]
[39.13361359 506.26181030]
[45.59514618 492.71420288]
[53.21285248 479.78128052]
[61.92875671 467.56155396]
[71.67652893 456.14794922]
[82.38197327 445.62734985]
[93.96361542 436.07983398]
[106.33331299 427.57809448]
[119.39692688 420.18676758]
[133.05502319 413.96218872]
[147.20367432 408.95166016]
[143.44737244 394.42959595]
[139.69107056 379.90753174]
[135.93476868 365.38546753]
[132.17846680 350.86343384]
[124.64168549 363.83248901]
[110.57498932 369.04095459]
[96.40948486 364.10757446]
[88.62144470 351.28781128]
[90.77145386 336.44268799]
[101.87656403 326.35919189]
[116.85966492 325.64739990]
[128.87170410 334.63424683]
[126.64659119 319.80020142]
[114.55335236 311.18106079]
[112.08544922 296.16894531]
[121.20796967 283.54287720]
[118.98284912 268.70883179]
[109.44317627 257.27014160]
[115.04773712 242.47488403]
[112.82262421 227.64083862]
[110.59750366 212.80679321]
[108.37239075 197.97274780]
[96.71663666 184.85366821]
[103.59857941 167.77383423]
[101.15285492 152.97456360]
[98.70712280 138.17529297]
[84.20924377 134.78041077]
[72.11093140 126.10028076]
[64.25064850 113.45394897]
[61.82284546 98.76314545]
[65.19645691 84.26029968]
[73.85881805 72.14926147]
[86.49360657 64.27042389]
[84.04787445 49.47115707]
[81.60214996 34.67188644]
[79.15642548 19.87261581]
[76.71069336 5.07334423]
[74.26496887 -9.72592640]
[71.81924438 -24.52519798]
[61.80753708 -32.65714645]
[60.07516098 -45.03384399]
[67.01065826 -54.94471741]
[64.78553772 -69.77876282]
[62.11974716 -84.53997803]
[59.01563644 -99.21527863]
[55.91152573 -113.89058685]
[52.42128754 -117.77199554]
[50.91911316 -122.16480255]
[51.26688004 -126.22609711]
[53.01194763 -129.28993225]
[50.56621933 -144.08920288]
[48.12049103 -158.88847351]
[36.34089279 -165.41960144]
[30.55803490 -177.36819458]
[32.68141174 -190.27453613]
[41.71472168 -199.46304321]
[39.48960495 -214.29708862]
[29.60008430 -222.57719421]
[28.05216980 -234.97831726]
[35.13445663 -244.78483582]
[33.13044357 -259.65036011]
[31.12643051 -274.51589966]
[16.14753342 -276.27188110]
[2.07621861 -281.69854736]
[-10.20298100 -290.45480347]
[-19.91818237 -301.99023438]
[-26.45868301 -315.57965088]
[-29.41333961 -330.36886597]
[-28.59641838 -345.42819214]
[-24.05927467 -359.81100464]
[-16.08711624 -372.61318970]
[-5.18107939 -383.02993774]
[7.97327375 -390.40652466]
[22.54904938 -394.27920532]
[37.63000107 -394.40454102]
[52.26812744 -390.77465820]
[65.54326630 -383.61773682]
[76.62092590 -373.38363647]
[84.80476379 -360.71575928]
[89.58032990 -346.41033936]
[90.64742279 -331.36666870]
[87.93898010 -316.53039551]
[81.62524414 -302.83413696]
[72.10310364 -291.13885498]
[59.97113800 -282.17971802]
[45.99195862 -276.51989746]
[47.99597168 -261.65435791]
[49.99998474 -246.78884888]
[61.45912170 -233.49768066]
[54.32365036 -216.52220154]
[56.54876709 -201.68815613]
[70.48803711 -192.27882385]
[73.36578369 -175.36630249]
[62.91976166 -161.33419800]
[65.36548615 -146.53492737]
[67.81121826 -131.73565674]
[70.58683014 -116.99469757]
[73.69094086 -102.31938934]
[76.79505157 -87.64408875]
[79.06823730 -86.00373840]
[80.82863617 -83.36411285]
[81.69236755 -79.91602325]
[81.35166931 -75.98556519]
[79.61958313 -72.00388336]
[81.84470367 -57.16983414]
[93.50045013 -44.05075073]
[86.61851501 -26.97092438]
[89.06423950 -12.17165375]
[91.50996399 2.62761688]
[93.95569611 17.42688751]
[96.40142059 32.22615814]
[98.84714508 47.02542877]
[101.29287720 61.82469940]
[115.79075623 65.21958923]
[127.88906860 73.89971924]
[135.74935913 86.54605103]
[138.17715454 101.23685455]
[134.80354309 115.73970032]
[126.14118195 127.85073853]
[113.50639343 135.72956848]
[115.95212555 150.52883911]
[118.39785004 165.32810974]
[128.40954590 173.46006775]
[130.14193726 185.83676147]
[123.20642853 195.74763489]
[125.43154907 210.58168030]
[127.65666962 225.41572571]
[129.88179016 240.24977112]
[139.58061218 252.74949646]
[133.81689453 266.48370361]
[136.04200745 281.31774902]
[148.46752930 290.71160889]
[150.51280212 305.78713989]
[141.48063660 317.57507324]
[143.70574951 332.40911865]
[146.70053101 347.10711670]
[150.45683289 361.62918091]
[154.21313477 376.15124512]
[157.96942139 390.67330933]
[161.72572327 405.19534302]
[176.52935791 402.71704102]
[191.49264526 401.53839111]
[206.50172424 401.66836548]
[221.44236755 403.10595703]
[236.20085144 405.84030151]
[250.66485596 409.85052490]
[264.72430420 415.10610962]
[278.27218628 421.56704712]
[291.20541382 429.18423462]
[303.42553711 437.89962769]
[314.83953857 447.64691162]
[325.36059570 458.35189819]
[334.90856934 469.93313599]
[343.41085815 482.30249023]
[350.80270386 495.36578369]
[357.02789307 509.02362061]
[362.03900146 523.17205811]
[365.79791260 537.70343018]
[368.27603149 552.50708008]
[369.45449829 567.47039795]
[369.32431030 582.47943115]
[367.88647461 597.42004395]
[365.15194702 612.17852783]
[361.14151001 626.64245605]
[355.88574219 640.70184326]
[349.42459106 654.24963379]
[341.80725098 667.18273926]
[333.09167480 679.40277100]
[323.34423828 690.81665039]
[312.63906860 701.33752441]
[301.05770874 710.88537598]
[288.68823242 719.38745117]
[275.62484741 726.77911377]
[261.96691895 733.00408936]
[247.81842041 738.01501465]
[233.28701782 741.77374268]
[218.48332214 744.25164795]
[203.52000427 745.42987061]
[188.51092529 745.29949951]
[173.57032776 743.86145020]
[158.81192017 741.12670898]
[144.34802246 737.11608887]
[130.28872681 731.86010742]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 167]
[28 166]
[29 165]
[30 164]
[31 163]
[39 162]
[40 161]
[43 158]
[44 157]
[46 155]
[47 154]
[48 153]
[49 152]
[51 149]
[52 148]
[53 147]
[60 140]
[61 139]
[62 138]
[63 137]
[64 136]
[65 135]
[66 134]
[69 132]
[70 131]
[71 126]
[72 125]
[73 124]
[77 123]
[78 122]
[79 121]
[83 118]
[84 117]
[87 115]
[88 114]
[89 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
