%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[138.68135071 674.41149902]
[150.92662048 665.02758789]
[149.58837891 650.08740234]
[140.74647522 638.10119629]
[147.22172546 623.66577148]
[145.88348389 608.72558594]
[144.54525757 593.78540039]
[143.20701599 578.84521484]
[134.36509705 566.85894775]
[140.84036255 552.42352295]
[126.25276184 549.14288330]
[113.37598419 541.50354004]
[103.47750854 530.24298096]
[97.53617859 516.45562744]
[96.14540100 501.48672485]
[99.45391083 486.80105591]
[107.14997101 473.83959961]
[118.49069977 463.87817383]
[132.37377930 457.90173340]
[131.03553772 442.96154785]
[122.19362640 430.97531128]
[128.66888428 416.53988647]
[127.33064270 401.59970093]
[125.99240875 386.65951538]
[124.65417480 371.71932983]
[108.08605957 363.07119751]
[100.01343536 346.04882812]
[103.86188507 327.45315552]
[118.25354004 314.83508301]
[116.24952698 299.96954346]
[114.24551392 285.10403442]
[112.24150085 270.23849487]
[101.00241852 263.93670654]
[95.36084747 252.13607788]
[97.57859039 239.04821777]
[107.06690979 229.48860168]
[97.87203979 217.77095032]
[103.91462708 203.14912415]
[102.13215637 188.25540161]
[100.34969330 173.36167908]
[91.03731537 165.64117432]
[89.43042755 153.24755859]
[96.93133545 142.75474548]
[95.37081146 127.83614349]
[93.81028748 112.91754150]
[85.75378418 101.49018860]
[91.27111053 88.64298248]
[88.60531616 73.88176727]
[77.65870667 62.45887756]
[81.96231079 48.19955826]
[78.20600891 33.67749786]
[74.44970703 19.15543938]
[70.69340515 4.63337994]
[66.33921814 -0.34181705]
[65.30628967 -5.93020439]
[67.04833221 -10.37703705]
[63.72607422 -25.00449753]
[60.40381622 -39.63195801]
[57.08155441 -54.25941849]
[46.47990036 -66.00315857]
[51.20615005 -80.12802887]
[40.72817612 -87.64965057]
[38.26219559 -99.90129089]
[44.59549332 -110.20740509]
[41.49138260 -124.88270569]
[31.06575012 -136.78298950]
[36.00177383 -150.83592224]
[32.89766312 -165.51123047]
[29.79355431 -180.18652344]
[19.42872810 -187.86332703]
[17.14542770 -200.15031433]
[23.63146591 -210.36099243]
[20.74619293 -225.08088684]
[10.49681091 -232.91114807]
[8.39669991 -245.23077393]
[15.03404045 -255.34375000]
[12.36824512 -270.10498047]
[9.70244980 -284.86618042]
[7.03665400 -299.62741089]
[4.37085819 -314.38861084]
[-10.65710449 -314.06176758]
[-25.55116081 -316.08996582]
[-39.94453430 -320.42324829]
[-53.48276901 -326.95489502]
[-65.83248138 -335.52410889]
[-76.68954468 -345.91979980]
[-85.78659058 -357.88601685]
[-92.89960480 -371.12805176]
[-97.85341644 -385.31982422]
[-100.52603149 -400.11184692]
[-100.85163879 -415.13983154]
[-98.82221985 -430.03372192]
[-94.48774719 -444.42672729]
[-87.95497131 -457.96441650]
[-79.38475800 -470.31344604]
[-68.98815155 -481.16964722]
[-57.02119064 -490.26568604]
[-43.77856827 -497.37762451]
[-29.58639145 -502.33026123]
[-14.79415894 -505.00164795]
[0.23385727 -505.32601929]
[15.12757969 -503.29537964]
[29.52023697 -498.95971680]
[43.05739594 -492.42581177]
[55.40569305 -483.85458374]
[66.26103973 -473.45709229]
[75.35610962 -461.48937988]
[82.46693420 -448.24615479]
[87.41840363 -434.05358887]
[90.08858490 -419.26113892]
[90.41171265 -404.23309326]
[88.37983704 -389.33953857]
[84.04299164 -374.94723511]
[77.50797272 -361.41061401]
[68.93572235 -349.06301880]
[58.53733063 -338.20852661]
[46.56886673 -329.11444092]
[33.32506943 -322.00469971]
[19.13207626 -317.05441284]
[21.79787064 -302.29321289]
[24.46366692 -287.53198242]
[27.12946129 -272.77075195]
[29.79525757 -258.00955200]
[41.83644485 -245.24331665]
[35.46608353 -227.96615601]
[38.35135651 -213.24626160]
[50.58127975 -200.66072083]
[44.46885681 -183.29063416]
[47.57296753 -168.61534119]
[50.67707825 -153.94003296]
[60.88068390 -143.08943176]
[56.16668320 -127.98681641]
[59.27079391 -113.31151581]
[71.68674469 -100.90944672]
[65.83361053 -83.45028687]
[76.19763184 -72.75279999]
[71.70901489 -57.58167648]
[75.03127289 -42.95421600]
[78.35353088 -28.32675743]
[81.67579651 -13.69929600]
[85.21546936 0.87707907]
[88.97176361 15.39913845]
[92.72806549 29.92119789]
[96.48436737 44.44325638]
[107.16230011 54.82742691]
[103.12737274 70.12546539]
[108.66179657 56.18379211]
[120.36399841 46.79985046]
[135.17506409 44.42657852]
[149.22340393 49.68434143]
[158.83682251 61.19877243]
[161.50239563 75.96002960]
[156.52334595 90.10955811]
[145.20118713 99.94869995]
[130.49549866 102.90552521]
[116.25032043 98.20713043]
[106.18971252 87.08245850]
[114.24621582 98.50981140]
[108.72888947 111.35701752]
[110.28941345 126.27561951]
[111.84993744 141.19422913]
[123.00904846 155.84194946]
[115.24340820 171.57922363]
[117.02587891 186.47293091]
[118.80834198 201.36665344]
[128.13070679 214.14961243]
[121.96062469 227.70613098]
[135.90827942 238.26466370]
[137.86578369 255.30822754]
[127.10703278 268.23446655]
[129.11103821 283.10000610]
[131.11505127 297.96554565]
[133.11907959 312.83105469]
[144.00267029 316.43127441]
[152.71745300 323.79968262]
[158.02911377 333.84249878]
[159.20414734 345.09097290]
[156.11087036 355.91604614]
[149.23298645 364.76437378]
[139.59436035 370.38110352]
[140.93260193 385.32128906]
[142.27082825 400.26147461]
[143.60906982 415.20166016]
[152.54670715 428.25650024]
[145.97572327 441.62332153]
[147.31396484 456.56350708]
[162.03816223 459.97750854]
[174.96870422 467.76489258]
[184.84576416 479.15225220]
[190.71153259 493.01617432]
[192.00315857 507.99395752]
[188.60670471 522.61773682]
[180.86701965 535.45819092]
[169.55288696 545.26434326]
[155.78054810 551.08532715]
[164.71818542 564.14013672]
[158.14720154 577.50695801]
[159.48544312 592.44714355]
[160.82366943 607.38732910]
[162.16191101 622.32751465]
[171.09954834 635.38238525]
[164.52856445 648.74920654]
[165.86680603 663.68939209]
[179.58483887 670.74761963]
[187.28942871 684.11334229]
[186.52203369 699.52166748]
[177.52755737 712.05572510]
[163.17610168 717.71600342]
[148.04713440 714.69635010]
[136.96829224 703.96032715]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 203]
[3 202]
[5 200]
[6 199]
[7 198]
[8 197]
[10 195]
[19 186]
[20 185]
[22 183]
[23 182]
[24 181]
[25 180]
[29 173]
[30 172]
[31 171]
[32 170]
[36 167]
[38 165]
[39 164]
[40 163]
[43 161]
[44 160]
[45 159]
[47 157]
[48 146]
[50 144]
[51 143]
[52 142]
[53 141]
[56 140]
[57 139]
[58 138]
[59 137]
[61 135]
[64 133]
[65 132]
[67 130]
[68 129]
[69 128]
[72 126]
[73 125]
[76 123]
[77 122]
[78 121]
[79 120]
[80 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
