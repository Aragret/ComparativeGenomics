%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[148.37356567 711.86138916]
[135.06854248 704.92504883]
[122.20217133 697.20550537]
[109.82048035 688.73028564]
[97.96781158 679.52978516]
[86.68658447 669.63684082]
[76.01718903 659.08697510]
[65.99781799 647.91796875]
[56.66434097 636.16967773]
[48.05016708 623.88427734]
[40.18613052 611.10565186]
[33.10038376 597.87963867]
[26.81829453 584.25354004]
[21.36234856 570.27612305]
[16.75207901 555.99743652]
[13.00398922 541.46856689]
[10.13149452 526.74157715]
[8.14488029 511.86917114]
[7.05125570 496.90457153]
[6.85453749 481.90133667]
[7.55542946 466.91320801]
[9.15142155 451.99380493]
[11.63680267 437.19656372]
[15.00267315 422.57443237]
[19.23698616 408.17977905]
[24.32458115 394.06411743]
[30.24724960 380.27798462]
[36.98378754 366.87072754]
[44.51007843 353.89035034]
[52.79918289 341.38330078]
[61.82142639 329.39434814]
[71.54450989 317.96643066]
[81.93363190 307.14047241]
[92.95159149 296.95520020]
[104.55895996 287.44705200]
[116.71417999 278.65011597]
[129.37373352 270.59585571]
[142.49232483 263.31311035]
[156.02294922 256.82794189]
[150.36016846 242.93791199]
[144.69738770 229.04788208]
[139.03459167 215.15786743]
[133.37181091 201.26783752]
[127.70902252 187.37780762]
[115.73947906 178.51330566]
[117.69440460 162.81335449]
[112.03161621 148.92332458]
[106.36883545 135.03329468]
[100.70604706 121.14326477]
[95.04325867 107.25324249]
[92.34425354 105.83731079]
[90.10078430 103.40802765]
[88.68919373 100.13223267]
[88.41887665 96.31343842]
[89.48411560 92.36398315]
[84.65811920 78.16152191]
[72.89223480 67.58444977]
[76.12335968 53.04453278]
[71.29735565 38.84207916]
[66.47135925 24.63962364]
[51.33314896 23.58594513]
[37.78815460 16.83493233]
[27.88653183 5.44320393]
[23.11362457 -8.83289337]
[24.16721725 -23.80803299]
[30.85569763 -37.20242310]
[42.13198090 -46.98887634]
[37.30598450 -61.19132996]
[32.47998428 -75.39379120]
[17.78142166 -72.31002808]
[2.81831765 -71.02050781]
[-12.19112206 -71.54403687]
[-27.02801514 -73.87297821]
[-41.47599411 -77.97337341]
[-55.32436752 -83.78542328]
[-68.37118530 -91.22436523]
[-80.42618561 -100.18173218]
[-91.31356812 -110.52688599]
[-100.87456512 -122.10897064]
[-108.96975708 -134.75907898]
[-115.48107147 -148.29273987]
[-120.31357574 -162.51260376]
[-123.39678955 -177.21127319]
[-124.68575287 -192.17443848]
[-124.16165924 -207.18385315]
[-121.83216095 -222.02066040]
[-117.73122406 -236.46849060]
[-111.91866302 -250.31663513]
[-104.47922516 -263.36318970]
[-95.52140808 -275.41784668]
[-85.17584991 -286.30484009]
[-73.59340668 -295.86541748]
[-60.94299316 -303.96011353]
[-47.40908813 -310.47094727]
[-33.18905258 -315.30291748]
[-18.49025726 -318.38555908]
[-3.52705646 -319.67398071]
[11.48234367 -319.14932251]
[26.31906319 -316.81927490]
[40.76673508 -312.71780396]
[54.61467361 -306.90469360]
[67.66093445 -299.46478271]
[79.71526337 -290.50653076]
[90.60187531 -280.16055298]
[100.16201019 -268.57775879]
[108.25624847 -255.92703247]
[114.76655579 -242.39288330]
[119.59799957 -228.17266846]
[122.68010712 -213.47375488]
[123.96794891 -198.51051331]
[123.44273376 -183.50112915]
[121.11212921 -168.66448975]
[117.01011658 -154.21697998]
[111.19651031 -140.36926270]
[103.75610352 -127.32327271]
[94.79738617 -115.26927948]
[84.45101166 -104.38305664]
[72.86785126 -94.82335663]
[60.21683502 -86.72959137]
[46.68244171 -80.21978760]
[51.50843811 -66.01732635]
[56.33443832 -51.81487274]
[71.23868561 -50.92457199]
[84.70306396 -44.37812805]
[94.66219330 -33.14511490]
[99.57515717 -18.91660690]
[98.66386414 -3.85064626]
[92.03609467 9.75507641]
[80.67382050 19.81362534]
[85.49981689 34.01608276]
[90.32581329 48.21853638]
[101.74650574 57.77975845]
[98.86057281 73.33552551]
[103.68656921 87.53797913]
[108.93328857 101.59045410]
[114.59607697 115.48048401]
[120.25885773 129.37051392]
[125.92164612 143.26052856]
[131.58442688 157.15055847]
[143.95901489 167.00856018]
[141.59904480 181.71502686]
[147.26184082 195.60505676]
[152.92462158 209.49507141]
[158.58741760 223.38510132]
[164.25019836 237.27513123]
[169.91297913 251.16516113]
[184.12104797 246.34161377]
[198.59213257 242.37640381]
[213.27447510 239.28372192]
[228.11547852 237.07464600]
[243.06202698 235.75708008]
[258.06063843 235.33573914]
[273.05758667 235.81213379]
[287.99920654 237.18455505]
[302.83200073 239.44810486]
[317.50286865 242.59466553]
[331.95932007 246.61297607]
[346.14956665 251.48864746]
[360.02285767 257.20422363]
[373.52947998 263.73925781]
[386.62109375 271.07034302]
[399.25085449 279.17126465]
[411.37353516 288.01296997]
[422.94573975 297.56387329]
[433.92605591 307.78973389]
[444.27517700 318.65396118]
[453.95602417 330.11764526]
[462.93399048 342.13980103]
[471.17691040 354.67733765]
[478.65524292 367.68539429]
[485.34228516 381.11743164]
[491.21405029 394.92532349]
[496.24954224 409.05963135]
[500.43072510 423.46981812]
[503.74264526 438.10424805]
[506.17340088 452.91058350]
[507.71435547 467.83575439]
[508.35995483 482.82638550]
[508.10787964 497.82876587]
[506.95904541 512.78924561]
[504.91760254 527.65423584]
[501.99078369 542.37054443]
[498.18911743 556.88543701]
[493.52621460 571.14703369]
[488.01873779 585.10424805]
[481.68643188 598.70709229]
[474.55194092 611.90686035]
[466.64080811 624.65637207]
[457.98138428 636.90991211]
[448.60461426 648.62365723]
[438.54412842 659.75567627]
[427.83587646 670.26611328]
[416.51824951 680.11730957]
[404.63171387 689.27404785]
[392.21884155 697.70355225]
[379.32406616 705.37561035]
[365.99356079 712.26275635]
[352.27502441 718.34039307]
[338.21755981 723.58666992]
[323.87152100 727.98291016]
[309.28826904 731.51330566]
[294.51995850 734.16522217]
[279.61947632 735.92919922]
[264.64019775 736.79888916]
[249.63571167 736.77124023]
[234.65972900 735.84625244]
[219.76586914 734.02734375]
[205.00744629 731.32092285]
[190.43730164 727.73675537]
[176.10757446 723.28765869]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 146]
[40 145]
[41 144]
[42 143]
[43 142]
[44 141]
[46 139]
[47 138]
[48 137]
[49 136]
[50 135]
[55 134]
[56 133]
[58 131]
[59 130]
[60 129]
[67 122]
[68 121]
[69 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
