%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[135.60772705 834.15313721]
[120.61680603 833.48303223]
[105.70655823 831.79156494]
[90.94650269 829.08648682]
[76.40545654 825.38043213]
[62.15121460 820.69073486]
[48.25024796 815.03918457]
[34.76736450 808.45220947]
[21.76542664 800.96044922]
[9.30505657 792.59887695]
[-2.55564904 783.40643311]
[-13.76138878 773.42602539]
[-24.25991631 762.70422363]
[-34.00228500 751.29095459]
[-42.94306564 739.23944092]
[-51.04057312 726.60583496]
[-58.25705719 713.44915771]
[-64.55886841 699.83062744]
[-69.91662598 685.81378174]
[-74.30534363 671.46405029]
[-77.70456696 656.84820557]
[-80.09843445 642.03448486]
[-81.47579956 627.09197998]
[-81.83023834 612.09027100]
[-81.16008759 597.09936523]
[-79.46848297 582.18908691]
[-76.76329803 567.42907715]
[-73.05716705 552.88806152]
[-68.36734772 538.63385010]
[-62.71572113 524.73291016]
[-56.12863159 511.25006104]
[-48.63679123 498.24816895]
[-40.27513504 485.78787231]
[-31.08264351 473.92721558]
[-21.10218048 462.72155762]
[-10.38027954 452.22308350]
[1.03306901 442.48080444]
[13.08465099 433.54010010]
[25.71827507 425.44268799]
[38.87503815 418.22628784]
[52.49359131 411.92456055]
[66.51044464 406.56689453]
[80.86024475 402.17828369]
[95.47608185 398.77914429]
[110.28981018 396.38537598]
[125.23236847 395.00811768]
[140.23406982 394.65377808]
[140.90385437 379.66873169]
[141.57363892 364.68371582]
[142.24342346 349.69866943]
[142.91320801 334.71362305]
[143.58299255 319.72857666]
[144.25277710 304.74356079]
[144.92256165 289.75851440]
[143.36204529 274.83990479]
[139.60574341 260.31784058]
[135.84944153 245.79579163]
[132.09313965 231.27372742]
[128.01347351 216.83917236]
[123.61248016 202.49932861]
[119.21147919 188.15948486]
[114.81048584 173.81962585]
[110.40948486 159.47978210]
[106.00848389 145.13993835]
[101.60749054 130.80009460]
[85.89635468 127.42839813]
[74.01361084 116.61135101]
[69.18477631 101.28521729]
[72.72063446 85.61020660]
[83.66139221 73.84126282]
[72.05428314 63.09018326]
[75.50153351 48.59999084]
[70.88751984 34.32725525]
[66.27351379 20.05452156]
[61.65950394 5.78178883]
[50.05239868 -4.96929169]
[53.49964523 -19.45948792]
[48.88563538 -33.73221970]
[44.27162552 -48.00495529]
[29.33798981 -46.16564941]
[14.32615280 -47.18606567]
[-0.22121735 -51.02930832]
[-13.77824306 -57.55644608]
[-25.85484505 -66.53153229]
[-36.01446152 -77.63011932]
[-43.88983154 -90.45100403]
[-49.19626617 -104.53071594]
[-51.74193192 -119.36028290]
[-51.43481827 -134.40362549]
[-48.28601456 -149.11694336]
[-42.40935516 -162.96833801]
[-34.01727676 -175.45712280]
[-23.41314697 -186.13180542]
[-10.98029804 -194.60652161]
[2.83182955 -200.57490540]
[17.52393723 -203.82121277]
[32.56491089 -204.22807312]
[47.41103363 -201.78080750]
[61.52562714 -196.56785583]
[74.39845276 -188.77767944]
[85.56417084 -178.69189453]
[94.61914825 -166.67507935]
[101.23604584 -153.16163635]
[105.17567444 -138.64006042]
[106.29561615 -123.63533020]
[104.55538940 -108.68981934]
[100.01789856 -94.34382629]
[92.84716797 -81.11592865]
[83.30241394 -69.48432159]
[71.72869110 -59.86948013]
[58.54435730 -52.61896133]
[63.15836716 -38.34622955]
[67.77237701 -24.07349586]
[79.04945374 -14.34329700]
[75.93223572 1.16777956]
[80.54624176 15.44051266]
[85.16025543 29.71324730]
[89.77426147 43.98598099]
[101.05133820 53.71617889]
[97.93412018 69.22725677]
[111.35877991 71.32583618]
[122.57880402 78.98982239]
[129.41647339 90.73171234]
[130.54464722 104.27249146]
[125.74436951 116.98401642]
[115.94733429 126.39909363]
[120.34833527 140.73893738]
[124.74932861 155.07878113]
[129.15032959 169.41864014]
[133.55133057 183.75848389]
[137.95233154 198.09832764]
[142.35331726 212.43817139]
[146.17591858 215.99272156]
[148.06402588 220.23399353]
[148.07997131 224.31011963]
[146.61520386 227.51742554]
[150.37150574 242.03948975]
[154.12780762 256.56155396]
[157.88410950 271.08361816]
[161.15388489 256.44433594]
[168.36511230 243.29144287]
[178.94908142 232.66226196]
[192.07109070 225.39503479]
[206.69630432 222.06288147]
[221.67131042 222.92860413]
[235.81509399 227.92391968]
[248.01225281 236.65486145]
[257.30084229 248.43290710]
[262.94833374 262.32916260]
[264.50933838 277.24771118]
[261.86074829 292.01202393]
[255.21145630 305.45773315]
[245.08584595 316.52444458]
[232.28245544 324.33935547]
[217.81101990 328.28622437]
[202.81282043 328.05374146]
[188.47067261 323.66021729]
[175.91566467 315.45220947]
[166.13793945 304.07696533]
[159.90760803 290.42828369]
[159.23782349 305.41333008]
[158.56803894 320.39837646]
[157.89825439 335.38342285]
[157.22846985 350.36843872]
[156.55868530 365.35348511]
[155.88890076 380.33853149]
[155.21911621 395.32357788]
[170.12937927 397.01486206]
[184.88948059 399.71975708]
[199.43057251 403.42559814]
[213.68487549 408.11514282]
[227.58592224 413.76647949]
[241.06889343 420.35330200]
[254.07092285 427.84487915]
[266.53140259 436.20626831]
[278.39224243 445.39852905]
[289.59811401 455.37878418]
[300.09677124 466.10046387]
[309.83929443 477.51361084]
[318.78024292 489.56500244]
[326.87792969 502.19848633]
[334.09457397 515.35510254]
[340.39657593 528.97351074]
[345.75451660 542.99029541]
[350.14343262 557.33996582]
[353.54284668 571.95574951]
[355.93692017 586.76940918]
[357.31448364 601.71197510]
[357.66912842 616.71368408]
[356.99917603 631.70458984]
[355.30776978 646.61486816]
[352.60278320 661.37493896]
[348.89685059 675.91601562]
[344.20721436 690.17028809]
[338.55578613 704.07128906]
[331.96887207 717.55419922]
[324.47720337 730.55615234]
[316.11572266 743.01660156]
[306.92337036 754.87738037]
[296.94308472 766.08319092]
[286.22131348 776.58178711]
[274.80810547 786.32421875]
[262.75662231 795.26507568]
[250.12310791 803.36267090]
[236.96644592 810.57922363]
[223.34797668 816.88116455]
[209.33119202 822.23901367]
[194.98146057 826.62780762]
[180.36566162 830.02716064]
[165.55197144 832.42108154]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 167]
[48 166]
[49 165]
[50 164]
[51 163]
[52 162]
[53 161]
[54 160]
[55 139]
[56 138]
[57 137]
[58 136]
[59 132]
[60 131]
[61 130]
[62 129]
[63 128]
[64 127]
[65 126]
[70 120]
[72 118]
[73 117]
[74 116]
[75 115]
[77 113]
[78 112]
[79 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
