%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[208.59243774 194.62670898]
[215.60319519 181.35498047]
[203.00088501 173.21977234]
[190.39857483 165.08454895]
[177.79626465 156.94934082]
[165.19395447 148.81411743]
[152.47190857 140.86744690]
[139.63296509 133.11105347]
[126.79402924 125.35466003]
[113.95509338 117.59826660]
[109.18598175 117.85250854]
[104.20652771 115.11351776]
[100.85423279 109.41495514]
[95.60954285 109.32998657]
[90.78580475 106.31256104]
[88.00282288 100.84520721]
[75.64831543 92.33837891]
[59.89403534 90.88470459]
[53.79941177 77.29409027]
[41.44490433 68.78726196]
[29.09039497 60.28043365]
[16.73588562 51.77360535]
[4.38137627 43.26678085]
[-7.97313261 34.75995255]
[-20.32764244 26.25312614]
[-32.68215179 17.74629784]
[-45.03665924 9.23947144]
[-60.38481903 11.89875698]
[-72.79286194 3.09563017]
[-75.23349762 -11.55288124]
[-87.58801270 -20.05970764]
[-99.94252014 -28.56653595]
[-112.29702759 -37.07336044]
[-121.74021912 -25.40912437]
[-132.05891418 -14.51174068]
[-143.19104004 -4.44675350]
[-155.06965637 4.72530699]
[-167.62333679 12.94927692]
[-180.77655029 20.17569733]
[-194.45021057 26.36110497]
[-208.56208801 31.46829987]
[-223.02728271 35.46656799]
[-237.75883484 38.33186340]
[-252.66812134 40.04695129]
[-267.66546631 40.60151672]
[-282.66070557 39.99222946]
[-297.56362915 38.22274399]
[-312.28463745 35.30371475]
[-326.73513794 31.25268745]
[-340.82827759 26.09402847]
[-354.47927856 19.85876656]
[-367.60604858 12.58439732]
[-380.12963867 4.31467199]
[-391.97470093 -4.90067339]
[-403.07003784 -15.00621605]
[-413.34887695 -25.94118118]
[-422.74945068 -37.63980103]
[-431.21517944 -50.03171921]
[-438.69515991 -63.04240799]
[-445.14443970 -76.59362030]
[-450.52420044 -90.60385132]
[-454.80206299 -104.98884583]
[-457.95233154 -119.66208649]
[-459.95608521 -134.53533936]
[-460.80120850 -149.51911926]
[-460.48266602 -164.52336121]
[-459.00234985 -179.45777893]
[-456.36920166 -194.23257446]
[-452.59899902 -208.75889587]
[-447.71444702 -222.94937134]
[-441.74493408 -236.71865845]
[-434.72634888 -249.98394775]
[-426.70092773 -262.66543579]
[-417.71688843 -274.68688965]
[-407.82827759 -285.97601318]
[-397.09457397 -296.46487427]
[-385.58035278 -306.09039307]
[-373.35485840 -314.79473877]
[-360.49157715 -322.52548218]
[-347.06790161 -329.23617554]
[-333.16458130 -334.88647461]
[-318.86520386 -339.44232178]
[-304.25576782 -342.87640381]
[-289.42416382 -345.16802979]
[-274.45956421 -346.30343628]
[-259.45196533 -346.27575684]
[-244.49166870 -345.08517456]
[-229.66860962 -342.73886108]
[-215.07194519 -339.25091553]
[-200.78945923 -334.64233398]
[-186.90705872 -328.94079590]
[-173.50823975 -322.18063354]
[-160.67356873 -314.40249634]
[-148.48025513 -305.65313721]
[-137.00160217 -295.98519897]
[-126.30667877 -285.45681763]
[-116.45978546 -274.13131714]
[-107.52014923 -262.07681274]
[-99.54153442 -249.36578369]
[-92.57192230 -236.07470703]
[-86.65324402 -222.28349304]
[-81.82107544 -208.07510376]
[-78.10448456 -193.53497314]
[-75.52583313 -178.75056458]
[-74.10062408 -163.81077576]
[-73.83742523 -148.80548096]
[-74.73782349 -133.82490540]
[-76.79639435 -118.95915222]
[-80.00077820 -104.29762268]
[-84.33168030 -89.92850494]
[-89.76306915 -75.93820953]
[-96.26226807 -62.41088104]
[-103.79019928 -49.42787170]
[-91.43569183 -40.92104340]
[-79.08118439 -32.41421890]
[-66.72667694 -23.90739059]
[-52.17132568 -26.85313606]
[-39.52091217 -18.40199852]
[-36.52983475 -3.11503792]
[-24.17532349 5.39178896]
[-11.82081509 13.89861584]
[0.53369433 22.40544319]
[12.88820362 30.91226959]
[25.24271202 39.41909790]
[37.59722137 47.92592239]
[49.95172882 56.43275070]
[62.30624008 64.93957520]
[77.17684174 65.78479004]
[84.15514374 79.98387146]
[96.50965118 88.49069977]
[108.98944855 96.81263733]
[121.71147919 104.75932312]
[134.55041504 112.51571655]
[147.38935852 120.27210999]
[160.22830200 128.02850342]
[166.81985474 128.54125977]
[171.46557617 131.81452942]
[173.32916260 136.21180725]
[185.93147278 144.34703064]
[198.53378296 152.48223877]
[211.13609314 160.61746216]
[223.73841858 168.75267029]
[232.94662476 156.89949036]
[243.15287781 145.89395142]
[254.27951050 135.81985474]
[266.24182129 126.75383759]
[278.94876099 118.76491547]
[292.30364990 111.91388702]
[306.20480347 106.25289154]
[320.54647827 101.82501984]
[335.21948242 98.66397095]
[350.11215210 96.79379272]
[365.11114502 96.22872925]
[380.10232544 96.97307587]
[394.97158813 99.02116394]
[409.60574341 102.35741425]
[423.89346313 106.95643616]
[437.72595215 112.78321838]
[450.99795532 119.79341888]
[463.60848999 127.93368530]
[475.46154785 137.14207458]
[486.46694946 147.34848022]
[496.54089355 158.47525024]
[505.60675049 170.43768311]
[513.59545898 183.14472961]
[520.44628906 196.49971008]
[526.10711670 210.40095520]
[530.53479004 224.74269104]
[533.69561768 239.41574097]
[535.56561279 254.30844116]
[536.13043213 269.30743408]
[535.38592529 284.29861450]
[533.33758545 299.16784668]
[530.00115967 313.80194092]
[525.40191650 328.08959961]
[519.57495117 341.92199707]
[512.56457520 355.19393921]
[504.42410278 367.80435181]
[495.21557617 379.65725708]
[485.00900269 390.66250610]
[473.88211060 400.73629761]
[461.91952515 409.80197144]
[449.21237183 417.79055786]
[435.85729980 424.64120483]
[421.95596313 430.30181885]
[407.61416626 434.72927856]
[392.94107056 437.88992310]
[378.04837036 439.75967407]
[363.04934692 440.32431030]
[348.05819702 439.57955933]
[333.18899536 437.53103638]
[318.55493164 434.19439697]
[304.26733398 429.59497070]
[290.43499756 423.76779175]
[277.16317749 416.75723267]
[264.55288696 408.61660767]
[252.70008850 399.40789795]
[241.69499207 389.20117188]
[231.62135315 378.07412720]
[222.55583191 366.11141968]
[214.56745911 353.40414429]
[207.71697998 340.04898071]
[202.05657959 326.14758301]
[197.62931824 311.80572510]
[194.46887207 297.13259888]
[192.59931946 282.23983765]
[192.03489685 267.24081421]
[192.77986145 252.24966431]
[194.82858276 237.38049316]
[198.16545105 222.74647522]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 142]
[3 141]
[4 140]
[5 139]
[6 138]
[7 135]
[8 134]
[9 133]
[10 132]
[13 131]
[16 130]
[17 129]
[19 127]
[20 126]
[21 125]
[22 124]
[23 123]
[24 122]
[25 121]
[26 120]
[27 119]
[30 116]
[31 115]
[32 114]
[33 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
