%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[-11.78634834 514.85595703]
[-19.98693085 527.42407227]
[-29.09331131 539.35223389]
[-39.05575562 550.57525635]
[-49.81984711 561.03192139]
[-61.32679749 570.66503906]
[-73.51375580 579.42205811]
[-86.31417084 587.25512695]
[-99.65811920 594.12145996]
[-113.47272491 599.98352051]
[-127.68254089 604.80932617]
[-142.20994568 608.57250977]
[-156.97560120 611.25256348]
[-171.89886475 612.83477783]
[-186.89822388 613.31054688]
[-201.89176941 612.67730713]
[-216.79759216 610.93841553]
[-231.53428650 608.10345459]
[-246.02137756 604.18792725]
[-260.17971802 599.21313477]
[-273.93200684 593.20629883]
[-287.20312500 586.20025635]
[-299.92056274 578.23321533]
[-312.01489258 569.34869385]
[-323.42004395 559.59527588]
[-334.07373047 549.02612305]
[-343.91775513 537.69909668]
[-352.89837646 525.67596436]
[-360.96652222 513.02239990]
[-368.07812500 499.80755615]
[-374.19436646 486.10357666]
[-379.28179932 471.98532104]
[-383.31268311 457.52990723]
[-386.26498413 442.81625366]
[-388.12258911 427.92477417]
[-388.87533569 412.93673706]
[-388.51910400 397.93408203]
[-387.05587769 382.99868774]
[-384.49359131 368.21212769]
[-380.84628296 353.65518188]
[-376.13388062 339.40737915]
[-370.38208008 325.54647827]
[-363.62234497 312.14822388]
[-355.89154053 299.28579712]
[-347.23196411 287.02944946]
[-337.69082642 275.44607544]
[-327.32028198 264.59899902]
[-316.17700195 254.54742432]
[-304.32177734 245.34628296]
[-291.81939697 237.04579163]
[-278.73815918 229.69131470]
[-265.14950562 223.32299805]
[-251.12762451 217.97564697]
[-236.74913025 213.67845154]
[-222.09252930 210.45487976]
[-207.23788452 208.32255554]
[-192.26632690 207.29310608]
[-177.25962830 207.37216187]
[-162.29975891 208.55929565]
[-147.46839905 210.84800720]
[-132.84658813 214.22581482]
[-118.51415253 218.67425537]
[-104.54939270 224.16905212]
[-91.02857971 230.68017578]
[-78.02555084 238.17205811]
[-65.61132812 246.60380554]
[-53.85371780 255.92935181]
[-43.69017029 244.89747620]
[-33.52662277 233.86560059]
[-23.36307526 222.83372498]
[-13.19952965 211.80184937]
[-19.54725838 198.28756714]
[-20.23919106 183.33209229]
[-15.13877773 169.21292114]
[-4.99395561 158.09222412]
[8.67236996 151.68556213]
[23.79088593 150.99743652]
[38.05918503 156.16380310]
[48.22273254 145.13192749]
[58.38627625 134.10005188]
[68.54982758 123.06817627]
[78.71337128 112.03630066]
[88.87691498 101.00441742]
[98.95805359 89.89718628]
[108.95623016 78.71520996]
[118.95439911 67.53323364]
[128.95257568 56.35126114]
[113.98110199 57.27596283]
[101.84358215 48.46229935]
[98.08912659 33.93976212]
[104.43421936 20.34786034]
[117.97797394 13.90062809]
[132.52836609 17.54565239]
[141.43315125 29.61647606]
[140.62045288 44.59619141]
[151.72769165 34.51505280]
[162.83493042 24.43391418]
[173.94215393 14.35277557]
[185.04939270 4.27163696]
[175.99797058 -7.70242071]
[168.05635071 -20.43964386]
[161.28846741 -33.83747864]
[155.74880981 -47.78805161]
[151.48199463 -62.17903900]
[148.52235413 -76.89456940]
[146.89373779 -91.81615448]
[146.60925293 -106.82366943]
[147.67118835 -121.79625702]
[150.07099915 -136.61338806]
[153.78935242 -151.15573120]
[158.79631042 -165.30622864]
[165.05157471 -178.95094299]
[172.50477600 -191.97999573]
[181.09588623 -204.28848267]
[190.75575256 -215.77731323]
[201.40658569 -226.35398865]
[212.96263123 -235.93333435]
[225.33085632 -244.43823242]
[238.41166687 -251.80020142]
[252.09974670 -257.95996094]
[266.28488159 -262.86791992]
[280.85287476 -266.48455811]
[295.68640137 -268.78079224]
[310.66604614 -269.73806763]
[325.67120361 -269.34872437]
[340.58105469 -267.61587524]
[355.27554321 -264.55349731]
[369.63635254 -260.18621826]
[383.54788208 -254.54920959]
[396.89810181 -247.68786621]
[409.57952881 -239.65744019]
[421.49005127 -230.52256775]
[432.53375244 -220.35681152]
[442.62176514 -209.24201965]
[451.67279053 -197.26770020]
[459.61404419 -184.53022766]
[466.38150024 -171.13218689]
[471.92074585 -157.18144226]
[476.18713379 -142.79032898]
[479.14630127 -128.07470703]
[480.77447510 -113.15306854]
[481.05850220 -98.14555359]
[479.99609375 -83.17298889]
[477.59585571 -68.35594177]
[473.87704468 -53.81369781]
[468.86965942 -39.66335297]
[462.61398315 -26.01884079]
[455.16036987 -12.99001789]
[446.56887817 -0.68178666]
[436.90869141 10.80675125]
[426.25750732 21.38309669]
[414.70117188 30.96208954]
[402.33270264 39.46660995]
[389.25164795 46.82817841]
[375.56338501 52.98752213]
[361.37808228 57.89505386]
[346.80999756 61.51125717]
[331.97640991 63.80701447]
[316.99673462 64.76383972]
[301.99157715 64.37403870]
[287.08178711 62.64073944]
[272.38739014 59.57790375]
[258.02670288 55.21018600]
[244.11535645 49.57276154]
[230.76535034 42.71101379]
[218.08418274 34.68019485]
[206.17393494 25.54496193]
[195.13052368 15.37887096]
[184.02330017 25.46000862]
[172.91606140 35.54114914]
[161.80882263 45.62228775]
[150.70159912 55.70342636]
[140.13455200 66.34943390]
[130.13638306 77.53141022]
[120.13820648 88.71338654]
[110.14002991 99.89535522]
[107.54194641 107.52572632]
[99.90879822 111.16796875]
[89.74524689 122.19984436]
[79.58170319 133.23171997]
[69.41815186 144.26359558]
[59.25460815 155.29547119]
[49.09106064 166.32734680]
[55.40723801 180.12524414]
[55.95808792 195.24937439]
[50.69078827 209.39395142]
[40.43717575 220.41444397]
[26.78253746 226.65267944]
[11.82056808 227.18640137]
[-2.16765189 221.96539307]
[-12.33119869 232.99726868]
[-22.49474525 244.02914429]
[-32.65829086 255.06101990]
[-42.82183838 266.09289551]
[-32.56579208 277.04830933]
[-23.14683723 288.73120117]
[-14.61642361 301.07785034]
[-7.02113962 314.02075195]
[-0.40246895 327.48925781]
[5.20343876 341.40979004]
[9.76596642 355.70629883]
[13.26019382 370.30075073]
[15.66703796 385.11337280]
[16.97335243 400.06332397]
[17.17200089 415.06890869]
[16.26190186 430.04818726]
[14.24802399 444.91934204]
[11.14136600 459.60116577]
[6.95889664 474.01345825]
[1.72345924 488.07751465]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 194]
[68 193]
[69 192]
[70 191]
[71 190]
[78 183]
[79 182]
[80 181]
[81 180]
[82 179]
[83 178]
[84 176]
[85 175]
[86 174]
[87 173]
[95 172]
[96 171]
[97 170]
[98 169]
[99 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
