%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[192.18223572 809.48138428]
[177.88290405 804.94165039]
[163.80848694 799.74627686]
[149.98901367 793.90655518]
[136.45401001 787.43475342]
[123.23232269 780.34478760]
[110.35218811 772.65173340]
[97.84108734 764.37207031]
[85.72571564 755.52343750]
[74.03193665 746.12469482]
[62.78470612 736.19592285]
[52.00801849 725.75830078]
[41.72487640 714.83416748]
[31.95722198 703.44671631]
[22.72590065 691.62036133]
[14.05061531 679.38024902]
[5.94987726 666.75256348]
[-1.55902565 653.76422119]
[-8.46006966 640.44293213]
[-14.73852634 626.81713867]
[-20.38099861 612.91595459]
[-25.37544250 598.76904297]
[-29.71120262 584.40649414]
[-33.37902451 569.85906982]
[-36.37108231 555.15777588]
[-38.68098831 540.33398438]
[-40.30381393 525.41931152]
[-41.23609924 510.44561768]
[-41.47584915 495.44485474]
[-41.02255630 480.44903564]
[-39.87718964 465.49011230]
[-38.04218674 450.60006714]
[-35.52146530 435.81066895]
[-32.32041168 421.15347290]
[-28.44584846 406.65972900]
[-23.90604782 392.36038208]
[-18.71069908 378.28598022]
[-12.87088776 364.46652222]
[-6.39907694 350.93151855]
[0.69092226 337.70986938]
[8.38397980 324.82974243]
[16.66367722 312.31866455]
[25.51234627 300.20330811]
[34.91110229 288.50955200]
[44.83988953 277.26232910]
[55.27751923 266.48568726]
[66.20171356 256.20254517]
[77.58916473 246.43492126]
[89.41556549 237.20362854]
[101.65568542 228.52836609]
[114.28339386 220.42765808]
[127.27175140 212.91877747]
[140.59303284 206.01776123]
[134.31567383 192.39443970]
[128.03831482 178.77113342]
[121.76094818 165.14781189]
[115.48358917 151.52449036]
[109.20623016 137.90118408]
[102.92887115 124.27786255]
[96.65151215 110.65454865]
[90.27290344 97.07833862]
[83.79341125 83.54999542]
[77.31391144 70.02165222]
[63.13033676 74.95177460]
[48.48393631 78.26281738]
[33.55890656 79.91313171]
[18.54294777 79.88195801]
[3.62489843 78.16970062]
[-11.00762939 74.79788971]
[-25.17061615 69.80892181]
[-38.68594742 63.26554108]
[-51.38365555 55.25004196]
[-63.10405350 45.86322403]
[-73.69973755 35.22313690]
[-83.03746796 23.46359444]
[-90.99980164 10.73248196]
[-97.48661041 -2.81009221]
[-102.41631317 -16.99381638]
[-105.72692108 -31.64031601]
[-107.37678528 -46.56539154]
[-107.34516907 -61.58135223]
[-105.63246155 -76.49935150]
[-102.26020813 -91.13177490]
[-97.27081299 -105.29461670]
[-90.72703552 -118.80975342]
[-82.71115112 -131.50721741]
[-73.32398224 -143.22734070]
[-62.68358231 -153.82270813]
[-50.92375946 -163.16007996]
[-38.19240952 -171.12203979]
[-24.64964104 -177.60844421]
[-10.46576977 -182.53771973]
[4.18082762 -185.84788513]
[19.10595512 -187.49729919]
[34.12191391 -187.46524048]
[49.03985977 -185.75207520]
[63.67218399 -182.37939453]
[77.83487701 -177.38957214]
[91.34981537 -170.84538269]
[104.04704285 -162.82913208]
[115.76687622 -153.44161987]
[126.36193085 -142.80088806]
[135.69895935 -131.04078674]
[143.66052246 -118.30920410]
[150.14653015 -104.76624298]
[155.07537842 -90.58222198]
[158.38510132 -75.93552399]
[160.03408813 -61.01034927]
[160.00157166 -45.99439240]
[158.28796387 -31.07649612]
[154.91484070 -16.44427109]
[149.92460632 -2.28173137]
[143.38000488 11.23301411]
[135.36337280 23.93000221]
[125.97550201 35.64955521]
[115.33446503 46.24428940]
[103.57408142 55.58096313]
[90.84225464 63.54215622]
[97.32175446 77.07050323]
[103.80124664 90.59884644]
[109.84662628 95.93044281]
[110.27482605 104.37718964]
[116.55218506 118.00050354]
[122.82954407 131.62382507]
[129.10690308 145.24713135]
[135.38426208 158.87045288]
[141.66162109 172.49377441]
[147.93899536 186.11708069]
[154.21635437 199.74040222]
[168.11750793 194.09783936]
[182.26441956 189.10331726]
[196.62690735 184.76745605]
[211.17431641 181.09954834]
[225.87559509 178.10740662]
[240.69938660 175.79740906]
[255.61402893 174.17448425]
[270.58770752 173.24211121]
[285.58847046 173.00225830]
[300.58432007 173.45545959]
[315.54324341 174.60073853]
[330.43328857 176.43565369]
[345.22271729 178.95626831]
[359.87994385 182.15724182]
[374.37371826 186.03170776]
[388.67306519 190.57142639]
[402.74749756 195.76669312]
[416.56698608 201.60641479]
[430.10202026 208.07814026]
[443.32373047 215.16806030]
[456.20391846 222.86103821]
[468.71505737 231.14065552]
[480.83044434 239.98924255]
[492.52426147 249.38792419]
[503.77154541 259.31665039]
[514.54827881 269.75421143]
[524.83148193 280.67834473]
[534.59918213 292.06573486]
[543.83050537 303.89208984]
[552.50585938 316.13214111]
[560.60662842 328.75979614]
[568.11560059 341.74810791]
[575.01672363 355.06933594]
[581.29522705 368.69509888]
[586.93774414 382.59625244]
[591.93225098 396.74319458]
[596.26806641 411.10568237]
[599.93597412 425.65310669]
[602.92810059 440.35437012]
[605.23803711 455.17816162]
[606.86096191 470.09283447]
[607.79327393 485.06649780]
[608.03308105 500.06729126]
[607.57983398 515.06311035]
[606.43457031 530.02203369]
[604.59960938 544.91210938]
[602.07897949 559.70147705]
[598.87799072 574.35870361]
[595.00347900 588.85247803]
[590.46374512 603.15179443]
[585.26843262 617.22625732]
[579.42864990 631.04571533]
[572.95690918 644.58074951]
[565.86700439 657.80242920]
[558.17395020 670.68261719]
[549.89434814 683.19372559]
[541.04571533 695.30908203]
[531.64697266 707.00292969]
[521.71826172 718.25018311]
[511.28067017 729.02685547]
[500.35650635 739.31005859]
[488.96911621 749.07769775]
[477.14276123 758.30908203]
[464.90267944 766.98437500]
[452.27499390 775.08514404]
[439.28665161 782.59405518]
[425.96542358 789.49511719]
[412.33966064 795.77362061]
[398.43847656 801.41613770]
[384.29153442 806.41058350]
[369.92901611 810.74639893]
[355.38162231 814.41424561]
[340.68032837 817.40631104]
[325.85653687 819.71624756]
[310.94186401 821.33911133]
[295.96817017 822.27142334]
[280.96740723 822.51123047]
[265.97155762 822.05798340]
[251.01266479 820.91259766]
[236.12261963 819.07763672]
[221.33320618 816.55694580]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 129]
[54 128]
[55 127]
[56 126]
[57 125]
[58 124]
[59 123]
[60 122]
[61 120]
[62 119]
[63 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
