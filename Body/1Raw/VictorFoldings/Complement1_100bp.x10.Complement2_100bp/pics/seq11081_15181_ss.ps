%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[93.04598236 644.69842529]
[89.49240875 630.10705566]
[87.68958282 615.19775391]
[87.66282654 600.17993164]
[89.41249847 585.26434326]
[92.91403961 570.66040039]
[98.11830902 556.57305908]
[104.95222473 543.20019531]
[113.31986237 530.72949219]
[123.10375214 519.33599854]
[134.16654968 509.17965698]
[146.35293579 500.40307617]
[159.49183655 493.12945557]
[153.82905579 479.23941040]
[141.85951233 470.37490845]
[143.81443787 454.67495728]
[138.15164185 440.78494263]
[132.48886108 426.89489746]
[126.82607269 413.00488281]
[125.45412445 427.94201660]
[119.79589844 441.83389282]
[110.34088135 453.47875977]
[97.90702820 461.86917114]
[83.56999207 466.27932739]
[68.57006836 466.32766724]
[54.20490646 462.01000977]
[41.71722794 453.69992065]
[32.18734741 442.11624146]
[26.43969536 428.26110840]
[24.97149658 413.33316040]
[27.90976906 398.62374878]
[35.00032043 385.40542603]
[45.62974930 374.82168579]
[58.87850189 367.78817749]
[73.60042572 364.91329956]
[88.52193451 366.44580078]
[102.35216522 372.25311279]
[113.89466858 381.83282471]
[122.14940643 394.35299683]
[120.58888245 379.43438721]
[119.02835846 364.51577759]
[110.00896454 352.66253662]
[116.26857758 338.13229370]
[114.70806122 323.21368408]
[113.14753723 308.29507446]
[111.58701324 293.37646484]
[110.02648926 278.45785522]
[95.68959045 274.28863525]
[84.00954437 264.92263794]
[76.78569031 251.76280212]
[75.14613342 236.79953003]
[79.37166595 222.30958557]
[88.84827423 210.50971985]
[102.15616608 203.21754456]
[100.59564209 188.29895020]
[91.39924622 180.44064331]
[89.97705078 168.02449036]
[97.63335419 157.64450073]
[96.29512024 142.70433044]
[94.95688629 127.76413727]
[93.61865234 112.82395172]
[85.73317719 101.27791595]
[91.44116211 88.51428223]
[90.10292816 73.57409668]
[81.16529083 60.51924133]
[87.73626709 47.15243530]
[86.28684998 32.22262573]
[84.72632599 17.30402184]
[83.16580200 2.38541627]
[76.39234161 15.76899529]
[64.53556824 24.95686722]
[49.88484573 28.17499542]
[35.26900101 24.80201340]
[23.51011848 15.48918819]
[16.87865829 2.03468251]
[16.65505028 -12.96365070]
[22.88246918 -26.60986710]
[34.35850143 -36.26910019]
[48.86729813 -40.07629776]
[63.60744476 -37.29635239]
[75.73284912 -28.46602631]
[82.90262604 -15.28909302]
[84.01827240 -30.24754715]
[85.13392639 -45.20600128]
[82.61193085 -51.31755447]
[83.43189240 -56.94113922]
[86.51200867 -60.59106064]
[88.07253265 -75.50966644]
[89.63305664 -90.42826843]
[91.19357300 -105.34687042]
[81.51637268 -117.55300140]
[83.31148529 -132.66035461]
[95.00779724 -141.81086731]
[96.56832123 -156.72947693]
[98.12884521 -171.64807129]
[99.68936920 -186.56668091]
[93.42975616 -201.09692383]
[102.44915009 -212.95018005]
[104.00967407 -227.86878967]
[90.10100555 -233.78826904]
[78.55613708 -243.54570007]
[70.40162659 -256.27343750]
[66.36257172 -270.83975220]
[66.79812622 -285.94940186]
[71.66954803 -300.25888062]
[80.54368591 -312.49575806]
[92.63144684 -321.57196045]
[106.85800934 -326.68041992]
[121.95834351 -327.36691284]
[136.58973694 -323.57040405]
[149.45120239 -315.62844849]
[159.39906311 -304.24728394]
[165.54879761 -290.43887329]
[167.35357666 -275.43106079]
[164.65289307 -260.55834961]
[157.68690491 -247.14318848]
[147.07502747 -236.37846375]
[133.76084900 -229.22134399]
[118.92827606 -226.30825806]
[117.36775208 -211.38964844]
[123.73899078 -197.92649841]
[114.60797119 -185.00616455]
[113.04745483 -170.08755493]
[111.48693085 -155.16894531]
[109.92640686 -140.25035095]
[119.47592163 -128.87747192]
[118.10585022 -113.72564697]
[106.11218262 -103.78635406]
[104.55165863 -88.86774445]
[102.99113464 -73.94914246]
[101.43061066 -59.03053665]
[100.09237671 -44.09035110]
[98.97673035 -29.13189697]
[97.86108398 -14.17344379]
[98.08441162 0.82489324]
[99.64492798 15.74349785]
[101.20545197 30.66210365]
[105.02776337 36.98758316]
[102.67645264 45.81420135]
[111.51837158 57.80043030]
[105.04311371 72.23586273]
[106.38134766 87.17604828]
[114.26682281 98.72208405]
[108.55883789 111.48571777]
[109.89707184 126.42590332]
[111.23530579 141.36608887]
[112.57353973 156.30627441]
[123.51332855 171.11851501]
[115.51424408 186.73841858]
[117.07476807 201.65702820]
[131.60363770 206.03741455]
[143.31698608 215.62075806]
[150.44961548 228.92260742]
[151.94204712 243.90126038]
[147.59786987 258.27111816]
[138.10885620 269.85147095]
[124.94509125 276.89733887]
[126.50561523 291.81594849]
[128.06614685 306.73455811]
[129.62666321 321.65316772]
[131.18717957 336.57177734]
[140.31820679 349.49209595]
[133.94696045 362.95526123]
[135.50749207 377.87387085]
[137.06800842 392.79248047]
[140.71609497 407.34210205]
[146.37889099 421.23211670]
[152.04167175 435.12213135]
[157.70445251 449.01217651]
[170.07904053 458.87017822]
[167.71907043 473.57662964]
[173.38186646 487.46667480]
[187.86111450 483.48071289]
[202.71015930 481.23529053]
[217.72056580 480.76190186]
[232.68159485 482.06723022]
[247.38323975 485.13290405]
[261.61907959 489.91589355]
[275.18927002 496.34909058]
[287.90335083 504.34216309]
[299.58276367 513.78289795]
[310.06362915 524.53869629]
[319.19873047 536.45867920]
[326.85989380 549.37548828]
[332.93951416 563.10772705]
[337.35229492 577.46264648]
[340.03625488 592.23870850]
[340.95370483 607.22857666]
[340.09179688 622.22167969]
[337.46261597 637.00756836]
[333.10305786 651.37878418]
[327.07434082 665.13342285]
[319.46112061 678.07849121]
[310.37020874 690.03228760]
[299.92929077 700.82690430]
[288.28494263 710.31079102]
[275.60058594 718.35095215]
[262.05429077 724.83435059]
[247.83627319 729.67004395]
[233.14610291 732.79022217]
[218.19001770 734.15093994]
[203.17796326 733.73315430]
[188.32067871 731.54278564]
[173.82676697 727.61053467]
[159.89967346 721.99157715]
[146.73493958 714.76483154]
[134.51734924 706.03173828]
[123.41842651 695.91491699]
[113.59399414 684.55633545]
[105.18196106 672.11553955]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 172]
[14 171]
[16 169]
[17 168]
[18 167]
[19 166]
[39 165]
[40 164]
[41 163]
[43 161]
[44 160]
[45 159]
[46 158]
[47 157]
[54 150]
[55 149]
[58 147]
[59 146]
[60 145]
[61 144]
[63 142]
[64 141]
[66 139]
[67 137]
[68 136]
[69 135]
[82 134]
[83 133]
[84 132]
[87 131]
[88 130]
[89 129]
[90 128]
[93 125]
[94 124]
[95 123]
[96 122]
[98 120]
[99 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
