%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[-3.95342159 303.42770386]
[1.80071604 317.30105591]
[5.80632448 331.77636719]
[8.00267982 346.63421631]
[8.35648537 361.64935303]
[6.86237717 376.59414673]
[3.54300714 391.24206543]
[-1.55130517 405.37103271]
[-8.34333134 418.76684570]
[-16.73010445 431.22644043]
[-26.58448601 442.56094360]
[-37.75708389 452.59851074]
[-50.07852554 461.18698120]
[-63.36201859 468.19613647]
[-77.40618896 473.51974487]
[-91.99813843 477.07708740]
[-106.91664124 478.81427002]
[-121.93555450 478.70489502]
[-136.82717896 476.75067139]
[-151.36578369 472.98120117]
[-165.33093262 467.45364380]
[-178.51095581 460.25177002]
[-190.70602417 451.48480225]
[-201.73126221 441.28558350]
[-211.41954041 429.80880737]
[-219.62397766 417.22839355]
[-226.22021484 403.73507690]
[-231.10823059 389.53341675]
[-234.21394348 374.83874512]
[-235.49026489 359.87374878]
[-234.91783142 344.86535645]
[-232.50534058 330.04107666]
[-228.28936768 315.62561035]
[-222.33381653 301.83755493]
[-214.72895813 288.88586426]
[-205.59010315 276.96694946]
[-195.05578613 266.26144409]
[-183.28570557 256.93167114]
[-170.45828247 249.11903381]
[-156.76800537 242.94201660]
[-142.42237854 238.49423218]
[-127.63890076 235.84312439]
[-112.64167786 235.02886963]
[-97.65807343 236.06381226]
[-82.91522217 238.93226624]
[-68.63663483 243.59074402]
[-55.03875732 249.96862793]
[-42.32773972 257.96923828]
[-32.83884048 246.35197449]
[-23.34994316 234.73471069]
[-13.86104584 223.11744690]
[-4.37214708 211.50018311]
[5.11675119 199.88291931]
[7.17552042 185.13128662]
[21.89783287 179.33782959]
[31.38673019 167.72056580]
[31.80735588 162.96324158]
[35.22096634 158.41964722]
[41.33521271 155.90419006]
[51.16579437 144.57458496]
[60.99637222 133.24499512]
[63.49344254 118.56120300]
[78.38172150 113.20865631]
[88.21230316 101.87905884]
[74.06320190 106.85932922]
[59.06838989 106.46490479]
[45.20068741 100.74767303]
[34.28462219 90.45983887]
[27.75639915 76.95494080]
[26.47491264 62.00978088]
[30.60876846 47.59065247]
[39.61408234 35.59463882]
[52.30605316 27.60002518]
[67.01483917 24.65863800]
[81.80523682 27.15746880]
[94.73131561 34.76774979]
[104.09243774 46.48822021]
[108.65697479 60.77685165]
[107.82438660 75.75373077]
[101.70287323 89.45034027]
[113.79862976 80.57944489]
[125.89437866 71.70854950]
[137.99012756 62.83765793]
[149.95246887 53.78765869]
[161.77873230 44.56055832]
[167.89952087 29.97129631]
[182.69345093 28.24246979]
[194.51971436 19.01537132]
[206.13697815 9.52647305]
[217.53944397 -0.21949221]
[228.94190979 -9.96545792]
[240.34437561 -19.71142387]
[251.74684143 -29.45738983]
[263.14929199 -39.20335388]
[274.55175781 -48.94932175]
[285.95422363 -58.69528580]
[297.35668945 -68.44125366]
[308.75915527 -78.18721771]
[320.16162109 -87.93318176]
[311.44058228 -100.14928436]
[303.81747437 -113.07898712]
[297.35025024 -126.62390137]
[292.08819580 -140.68092346]
[288.07128906 -155.14308167]
[285.33016968 -169.90029907]
[283.88565063 -184.84027100]
[283.74874878 -199.84928894]
[284.92053223 -214.81312561]
[287.39202881 -229.61788940]
[291.14443970 -244.15090942]
[296.14923096 -258.30157471]
[302.36828613 -271.96221924]
[309.75430298 -285.02880859]
[318.25106812 -297.40194702]
[327.79388428 -308.98745728]
[338.31011963 -319.69717407]
[349.71978760 -329.44955444]
[361.93600464 -338.17041016]
[374.86581421 -345.79336548]
[388.41082764 -352.26037598]
[402.46792603 -357.52224731]
[416.93014526 -361.53894043]
[431.68737793 -364.27984619]
[446.62738037 -365.72415161]
[461.63641357 -365.86083984]
[476.60021973 -364.68887329]
[491.40493774 -362.21716309]
[505.93792725 -358.46453857]
[520.08850098 -353.45956421]
[533.74902344 -347.24029541]
[546.81555176 -339.85409546]
[559.18859863 -331.35717773]
[570.77392578 -321.81420898]
[581.48352051 -311.29779053]
[591.23571777 -299.88800049]
[599.95642090 -287.67166138]
[607.57916260 -274.74172974]
[614.04602051 -261.19665527]
[619.30767822 -247.13946533]
[623.32415771 -232.67720032]
[626.06488037 -217.91990662]
[627.50897217 -202.97988892]
[627.64544678 -187.97087097]
[626.47326660 -173.00706482]
[624.00134277 -158.20237732]
[620.24853516 -143.66944885]
[615.24334717 -129.51892090]
[609.02386475 -115.85848236]
[601.63751221 -102.79208374]
[593.14044189 -90.41918182]
[583.59729004 -78.83393860]
[573.08074951 -68.12452698]
[561.67077637 -58.37245560]
[549.45434570 -49.65194321]
[536.52429199 -42.02936172]
[522.97912598 -35.56272507]
[508.92187500 -30.30124474]
[494.45953369 -26.28496933]
[479.70220947 -23.54446030]
[464.76217651 -22.10058022]
[449.75314331 -21.96431541]
[434.78936768 -23.13670349]
[419.98471069 -25.60882187]
[405.45184326 -29.36185455]
[391.30139160 -34.36724091]
[377.64102173 -40.58688354]
[364.57473755 -47.97344589]
[352.20193481 -56.47071457]
[340.61685181 -66.01401520]
[329.90756226 -76.53072357]
[318.50512695 -66.78475189]
[307.10266113 -57.03878784]
[295.70019531 -47.29282379]
[284.29772949 -37.54685974]
[272.89526367 -27.80089188]
[261.49279785 -18.05492592]
[250.09033203 -8.30896091]
[238.68788147 1.43700469]
[227.28541565 11.18297005]
[215.88294983 20.92893600]
[215.24461365 24.39662552]
[212.89495850 27.72741508]
[208.91661072 30.12034225]
[203.74682617 30.84164238]
[191.92054749 40.06874084]
[186.64566040 53.99802017]
[171.00582886 56.38682938]
[159.17956543 65.61392975]
[157.71571350 70.15993500]
[153.38055420 73.83462524]
[146.86102295 74.93341064]
[134.76527405 83.80430603]
[122.66952515 92.67520142]
[110.57376862 101.54609680]
[99.54189301 111.70964050]
[89.71131134 123.03923798]
[86.51109314 138.53340149]
[72.32596588 143.07557678]
[62.49538422 154.40516663]
[52.66480637 165.73477173]
[43.00399399 177.20947266]
[33.51509476 188.82672119]
[30.77761841 204.40930176]
[16.73401451 209.37181091]
[7.24511623 220.98907471]
[-2.24378228 232.60633850]
[-11.73268032 244.22360229]
[-21.22157860 255.84086609]
[-30.71047783 267.45812988]
[-20.33317375 278.31591797]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 209]
[49 208]
[50 207]
[51 206]
[52 205]
[53 204]
[55 202]
[56 201]
[59 200]
[60 199]
[61 198]
[63 196]
[64 195]
[80 194]
[81 193]
[82 192]
[83 191]
[84 188]
[85 187]
[87 185]
[88 184]
[89 180]
[90 179]
[91 178]
[92 177]
[93 176]
[94 175]
[95 174]
[96 173]
[97 172]
[98 171]
[99 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
