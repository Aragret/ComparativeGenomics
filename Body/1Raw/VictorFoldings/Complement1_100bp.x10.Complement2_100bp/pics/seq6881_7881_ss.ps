%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxUUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUG\
) } def
/len { sequence length } bind def

/coor [
[184.27455139 581.26043701]
[186.95718384 566.45776367]
[192.31434631 552.40020752]
[200.16357422 539.56646729]
[210.23751831 528.39373779]
[222.19305420 519.26251221]
[235.62300110 512.48376465]
[231.43598938 498.07998657]
[227.24897766 483.67617798]
[223.06196594 469.27239990]
[218.87495422 454.86862183]
[214.68794250 440.46484375]
[210.50093079 426.06106567]
[197.19696045 414.61679077]
[201.73532104 396.77066040]
[197.33432007 382.43081665]
[186.20336914 372.53378296]
[189.55117798 357.07086182]
[185.15017700 342.73098755]
[180.74917603 328.39114380]
[169.61822510 318.49414062]
[172.96603394 303.03118896]
[168.56503296 288.69134521]
[164.16403198 274.35150146]
[159.02207947 260.26034546]
[153.15310669 246.45617676]
[141.05291748 237.77087402]
[142.77388000 222.04354858]
[136.90492249 208.23936462]
[124.80472565 199.55406189]
[126.52568054 183.82673645]
[120.65672302 170.02255249]
[114.78775787 156.21836853]
[108.91880035 142.41419983]
[103.04984283 128.61001587]
[99.93425751 126.95912170]
[97.46350861 123.71713257]
[96.37670898 119.20358276]
[97.24231720 114.05598450]
[86.58087921 105.01024628]
[88.70520782 91.19073486]
[76.62962341 80.96866608]
[79.42640686 66.33899689]
[74.17968750 52.28652191]
[68.62046051 38.35472488]
[56.10048294 28.68205070]
[58.24123001 13.94208908]
[52.37226868 0.13791224]
[46.50330734 -13.66626453]
[40.63434601 -27.47044182]
[34.39672852 -34.14352036]
[34.78246307 -41.52410126]
[29.11967659 -55.41412735]
[23.45689011 -69.30415344]
[17.79410362 -83.19418335]
[5.41952038 -93.05218506]
[7.77948570 -107.75864410]
[3.59066081 -93.35538483]
[-7.64997959 -83.42321777]
[-22.45940018 -81.03972626]
[-36.24874115 -86.94345856]
[-44.74522781 -99.30508423]
[-45.31612396 -114.29421234]
[-37.78454208 -127.26630402]
[-24.48421478 -134.20181274]
[-9.53639793 -132.95170593]
[2.42731929 -123.90311432]
[-1.32898140 -138.42517090]
[-5.08528185 -152.94723511]
[-19.36966515 -158.71461487]
[-27.42489433 -171.63616943]
[-26.33969688 -186.64570618]
[-16.73927689 -198.00219727]
[-20.49557686 -212.52426147]
[-24.25187874 -227.04632568]
[-28.00817871 -241.56837463]
[-31.76448059 -256.09045410]
[-35.52077866 -270.61248779]
[-39.27708054 -285.13455200]
[-54.26158524 -283.88049316]
[-69.24246979 -285.17703247]
[-83.78871155 -288.98687744]
[-97.48178101 -295.20040894]
[-109.92770386 -303.63882446]
[-120.76838684 -314.05935669]
[-129.69192505 -326.16220093]
[-136.44155884 -339.59909058]
[-140.82308960 -353.98348999]
[-142.71046448 -368.90145874]
[-142.04937744 -383.92379761]
[-138.85884094 -398.61828613]
[-133.23065186 -412.56216431]
[-125.32675171 -425.35421753]
[-115.37454224 -436.62637329]
[-103.66038513 -446.05435181]
[-90.52130890 -453.36682129]
[-76.33534241 -458.35348511]
[-61.51066208 -460.87078857]
[-46.47379684 -460.84631348]
[-31.65738106 -458.28079224]
[-17.48771858 -453.24804688]
[-4.37249756 -445.89285278]
[7.31093073 -436.42681885]
[17.22641182 -425.12234497]
[25.08865547 -412.30465698]
[30.67145157 -398.34255981]
[33.81417084 -383.63775635]
[34.42639160 -368.61331177]
[32.49049759 -353.70156860]
[28.06219101 -339.33154297]
[21.26887894 -325.91665649]
[12.30602169 -313.84289551]
[1.43149853 -303.45770264]
[-11.04181004 -295.05981445]
[-24.75502205 -288.89086914]
[-20.99872017 -274.36880493]
[-17.24242020 -259.84674072]
[-13.48611927 -245.32467651]
[-9.72981930 -230.80262756]
[-5.97351837 -216.28056335]
[-2.21721768 -201.75849915]
[11.68567181 -196.48141479]
[19.91262054 -183.88056946]
[19.13311005 -168.67379761]
[9.43677711 -156.70353699]
[13.19307804 -142.18147278]
[16.94937897 -127.65941620]
[21.66951370 -113.42143250]
[33.63905334 -104.55693054]
[31.68412971 -88.85697174]
[37.34691620 -74.96694183]
[43.00970459 -61.07691574]
[48.67248917 -47.18688965]
[54.43852234 -33.33940125]
[60.30748367 -19.53522491]
[66.17644501 -5.73104858]
[72.04540253 8.07312870]
[84.14559937 16.75843430]
[82.42464447 32.48576355]
[85.54022217 34.13666534]
[88.01097107 37.37865067]
[89.09777069 41.89220428]
[88.23216248 47.03980637]
[93.47888184 61.09227753]
[105.17918396 70.30921936]
[102.75768280 85.94401550]
[113.41912079 94.98975372]
[111.29479218 108.80926514]
[116.85401917 122.74105835]
[122.72297668 136.54524231]
[128.59193420 150.34941101]
[134.46089172 164.15359497]
[140.32986450 177.95776367]
[152.84983826 187.63044739]
[150.70909119 202.37040710]
[156.57804871 216.17457581]
[169.09803772 225.84725952]
[166.95729065 240.58721924]
[172.82624817 254.39138794]
[178.35580444 240.44778442]
[191.49423218 233.21028137]
[206.23484802 235.98776245]
[215.83842468 247.51040649]
[215.91433716 262.51022339]
[206.42788696 274.12948608]
[191.71614075 277.05603027]
[178.50387573 269.95050049]
[182.90487671 284.29034424]
[187.30587769 298.63018799]
[198.75163269 309.55288696]
[195.08901978 323.99014282]
[199.49002075 338.33001709]
[203.89102173 352.66986084]
[215.33677673 363.59255981]
[211.67416382 378.02981567]
[216.07516479 392.36965942]
[227.08355713 399.09115601]
[230.45394897 411.12542725]
[224.90472412 421.87405396]
[229.09173584 436.27783203]
[233.27874756 450.68161011]
[237.46575928 465.08538818]
[241.65277100 479.48916626]
[245.83978271 493.89297485]
[250.02677917 508.29675293]
[264.99786377 506.81964111]
[279.98541260 508.11883545]
[294.47897339 512.15008545]
[307.98492432 518.77612305]
[320.04321289 527.77124023]
[330.24319458 538.82904053]
[338.23742676 551.57293701]
[343.75360107 565.56884766]
[346.60391235 580.34014893]
[346.69122314 595.38366699]
[344.01257324 610.18701172]
[338.65921021 624.24603271]
[330.81344604 637.08184814]
[320.74252319 648.25732422]
[308.78942871 657.39178467]
[295.36129761 664.17413330]
[280.91549683 668.37335205]
[265.94406128 669.84643555]
[250.95684814 668.54321289]
[236.46437073 664.50805664]
[222.96020508 657.87835693]
[210.90432739 648.88000488]
[200.70733643 637.81945801]
[192.71655273 625.07342529]
[187.20413208 611.07598877]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 185]
[8 184]
[9 183]
[10 182]
[11 181]
[12 180]
[13 179]
[15 176]
[16 175]
[18 173]
[19 172]
[20 171]
[22 169]
[23 168]
[24 167]
[25 159]
[26 158]
[28 156]
[29 155]
[31 153]
[32 152]
[33 151]
[34 150]
[35 149]
[39 148]
[41 146]
[43 144]
[44 143]
[45 139]
[47 137]
[48 136]
[49 135]
[50 134]
[52 133]
[53 132]
[54 131]
[55 130]
[57 128]
[67 127]
[68 126]
[69 125]
[73 121]
[74 120]
[75 119]
[76 118]
[77 117]
[78 116]
[79 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
