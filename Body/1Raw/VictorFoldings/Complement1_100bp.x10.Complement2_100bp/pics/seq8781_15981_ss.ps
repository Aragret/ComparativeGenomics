%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[31.79078674 737.12023926]
[17.02505493 734.41094971]
[2.59598112 730.26745605]
[-11.35747147 724.72961426]
[-24.70092010 717.85070801]
[-37.30585480 709.69702148]
[-49.05088425 700.34710693]
[-59.82289505 689.89099121]
[-69.51813507 678.42938232]
[-78.04324341 666.07263184]
[-85.31610870 652.93975830]
[-91.26668549 639.15722656]
[-95.83767700 624.85784912]
[-98.98504639 610.17926025]
[-100.67849731 595.26281738]
[-100.90170288 580.25225830]
[-99.65252686 565.29211426]
[-96.94299316 550.52642822]
[-92.79920197 536.09747314]
[-87.26106262 522.14410400]
[-80.38189697 508.80081177]
[-72.22797394 496.19601440]
[-62.87781525 484.45117188]
[-52.42147064 473.67938232]
[-40.95964432 463.98437500]
[-28.60272026 455.45950317]
[-15.46970654 448.18692017]
[-1.68708491 442.23660278]
[12.61240768 437.66589355]
[27.29105377 434.51882935]
[42.20748901 432.82568359]
[41.98416138 417.82733154]
[41.76083374 402.82901001]
[41.53750610 387.83065796]
[41.31417847 372.83233643]
[41.09085083 357.83398438]
[38.34864807 353.92382812]
[38.03367233 348.24951172]
[41.09085083 342.38732910]
[41.31417847 327.38900757]
[41.53750610 312.39065552]
[41.76083374 297.39233398]
[34.14462280 310.31491089]
[22.41985893 319.67065430]
[8.12913418 324.22863770]
[-6.84735775 323.38919067]
[-20.53920364 317.26272583]
[-31.14500427 306.65533447]
[-37.26938629 292.96255493]
[-38.10657883 277.98593140]
[-33.54643631 263.69592285]
[-24.18892670 251.97254944]
[-11.26518726 244.35829163]
[3.52444053 241.85491943]
[18.23412704 244.79177856]
[30.92855835 252.78248596]
[39.93756485 264.77572632]
[44.07608795 279.19595337]
[47.61576080 264.61956787]
[41.59212494 254.12945557]
[44.42178726 241.95668030]
[55.11906433 234.75035095]
[58.87536621 220.22828674]
[62.63166428 205.70623779]
[66.38796997 191.18417358]
[70.14426422 176.66210938]
[68.53539276 172.16539001]
[69.73425293 166.61022949]
[74.23464203 161.76687622]
[78.42165375 147.36309814]
[82.60866547 132.95932007]
[86.79567719 118.55553436]
[79.51571655 109.95269012]
[77.25181580 98.91269684]
[80.55834961 88.13895416]
[88.62564087 80.26966858]
[99.47820282 77.23182678]
[96.36098480 61.72074890]
[107.63806152 51.99055099]
[112.25207520 37.71781540]
[116.86608124 23.44508171]
[121.48009491 9.17234898]
[118.36286926 -6.33872795]
[129.63995361 -16.06892776]
[134.25395203 -30.34165955]
[133.24539185 -36.87574768]
[135.36923218 -42.14702225]
[139.22366333 -44.96702194]
[144.26057434 -59.09605408]
[149.29750061 -73.22508240]
[154.33441162 -87.35411072]
[157.54768372 -102.00589752]
[158.88591003 -116.94608307]
[160.22415161 -131.88627625]
[161.56239319 -146.82644653]
[162.90061951 -161.76663208]
[163.90487671 -176.73298645]
[164.57466125 -191.71801758]
[165.24444580 -206.70306396]
[165.91423035 -221.68809509]
[152.27357483 -228.45951843]
[142.57139587 -240.19783020]
[138.48866272 -254.86926270]
[140.73274231 -269.93194580]
[148.91482544 -282.77612305]
[161.61732483 -291.17651367]
[176.63943481 -293.67770386]
[191.37850952 -289.84628296]
[203.28089905 -280.34613037]
[210.28445435 -266.82318115]
[211.17575073 -251.62037659]
[205.80038452 -237.37168884]
[195.08966064 -226.54577637]
[180.89927673 -221.01831055]
[180.22949219 -206.03327942]
[179.55970764 -191.04823303]
[178.88992310 -176.06320190]
[180.98669434 -173.22843933]
[181.81460571 -169.23724365]
[180.84507751 -164.69706726]
[177.84080505 -160.42840576]
[176.50256348 -145.48822021]
[175.16433716 -130.54803467]
[173.82609558 -115.60784912]
[172.48786926 -100.66766357]
[180.75715637 -113.18241119]
[192.60163879 -122.38613129]
[206.77131653 -127.30753326]
[221.77082825 -127.42726135]
[236.01727295 -122.73266602]
[248.00714111 -113.71919250]
[256.47515869 -101.33804321]
[260.52764893 -86.89583588]
[259.73693848 -71.91669464]
[254.18650818 -57.98139191]
[244.46206665 -46.56056595]
[231.58987427 -38.85947800]
[216.92837524 -35.69084167]
[202.02481079 -37.38905334]
[188.45201111 -43.77489471]
[177.64231873 -54.17444992]
[170.73654175 -67.49023438]
[168.46343994 -82.31719208]
[163.42652893 -68.18816376]
[158.38960266 -54.05913544]
[153.35269165 -39.93010712]
[148.52668762 -25.72765160]
[143.91268921 -11.45491791]
[147.35992432 3.03527784]
[135.75282288 13.78635788]
[131.13880920 28.05909157]
[126.52480316 42.33182526]
[121.91079712 56.60455704]
[125.35803986 71.09475708]
[113.75093842 81.84583282]
[122.63901520 97.52268219]
[117.35161591 114.75071716]
[101.19945526 122.74254608]
[97.01244354 137.14633179]
[92.82543182 151.55010986]
[88.63842010 165.95388794]
[84.66632843 180.41841125]
[80.91002655 194.94047546]
[77.15372467 209.46253967]
[73.39742279 223.98458862]
[69.64112091 238.50665283]
[74.97183228 256.13235474]
[62.19213486 268.15924072]
[58.65246582 282.73562622]
[56.75917053 297.61566162]
[56.53584290 312.61398315]
[56.31251526 327.61233521]
[56.08918762 342.61065674]
[56.08918762 357.61065674]
[56.31251526 372.60900879]
[56.53584290 387.60733032]
[56.75917053 402.60568237]
[56.98249817 417.60400391]
[57.20582581 432.60235596]
[72.16606140 433.85061646]
[86.93190002 436.55926514]
[101.36113739 440.70220947]
[115.31481171 446.23950195]
[128.65853882 453.11785889]
[141.26379395 461.27102661]
[153.00920105 470.62048340]
[163.78163147 481.07620239]
[173.47732544 492.53744507]
[182.00292969 504.89385986]
[189.27632141 518.02642822]
[195.22744751 531.80871582]
[199.79901123 546.10791016]
[202.94697571 560.78637695]
[204.64102173 575.70269775]
[204.86482239 590.71325684]
[203.61624146 605.67346191]
[200.90730286 620.43927002]
[196.76409912 634.86840820]
[191.22650146 648.82196045]
[184.34788513 662.16552734]
[176.19445801 674.77062988]
[166.84477234 686.51586914]
[156.38885498 697.28808594]
[144.92741394 706.98358154]
[132.57083130 715.50891113]
[119.43811035 722.78204346]
[105.65572357 728.73291016]
[91.35641479 733.30419922]
[76.67789459 736.45184326]
[61.76152802 738.14556885]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 179]
[32 178]
[33 177]
[34 176]
[35 175]
[36 174]
[39 173]
[40 172]
[41 171]
[42 170]
[58 169]
[59 168]
[62 166]
[63 165]
[64 164]
[65 163]
[66 162]
[69 161]
[70 160]
[71 159]
[72 158]
[77 155]
[79 153]
[80 152]
[81 151]
[82 150]
[84 148]
[85 147]
[88 146]
[89 145]
[90 144]
[91 143]
[92 125]
[93 124]
[94 123]
[95 122]
[96 121]
[97 117]
[98 116]
[99 115]
[100 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
