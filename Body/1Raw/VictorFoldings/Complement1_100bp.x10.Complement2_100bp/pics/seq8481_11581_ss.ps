%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[188.89430237 883.75158691]
[174.81634521 878.56188965]
[161.05455017 872.58410645]
[147.65299988 865.83728027]
[134.65460205 858.34307861]
[122.10102081 850.12548828]
[110.03244781 841.21087646]
[98.48756409 831.62768555]
[87.50332642 821.40673828]
[77.11494446 810.58074951]
[67.35568237 799.18432617]
[58.25680161 787.25402832]
[49.84745407 774.82812500]
[42.15457535 761.94628906]
[35.20280838 748.64990234]
[29.01442337 734.98150635]
[23.60923958 720.98492432]
[19.00457573 706.70489502]
[15.21518040 692.18725586]
[12.25319195 677.47851562]
[10.12809849 662.62573242]
[8.84670830 647.67651367]
[8.41312504 632.67871094]
[8.82873821 617.68041992]
[10.09221649 602.72967529]
[12.19951153 587.87438965]
[15.14387512 573.16204834]
[18.91587257 558.63989258]
[23.50342369 544.35437012]
[28.89183235 530.35131836]
[35.06383896 516.67553711]
[41.99966812 503.37078857]
[49.67710876 490.47979736]
[58.07155991 478.04379272]
[67.15613556 466.10260010]
[76.90174103 454.69451904]
[87.27714539 443.85604858]
[98.24912262 433.62194824]
[109.78252411 424.02499390]
[121.84040070 415.09588623]
[134.38412476 406.86325073]
[147.37353516 399.35348511]
[160.76699829 392.59063721]
[174.52162170 386.59634399]
[188.59333801 381.38980103]
[184.19233704 367.04995728]
[179.79135132 352.71011353]
[175.39035034 338.37026978]
[170.98934937 324.03042603]
[166.58834839 309.69058228]
[162.18734741 295.35073853]
[157.78636169 281.01089478]
[153.38536072 266.67105103]
[148.55935669 252.46858215]
[143.31263733 238.41610718]
[138.06591797 224.36363220]
[132.81919861 210.31117249]
[127.57248688 196.25869751]
[122.32576752 182.20622253]
[117.07904816 168.15374756]
[111.83232880 154.10128784]
[106.58561707 140.04881287]
[101.33889771 125.99633789]
[96.09217834 111.94387054]
[94.43287659 126.85180664]
[88.86426544 140.77986145]
[79.78833771 152.72253418]
[67.86029816 161.81768799]
[53.94123459 167.40873718]
[39.03598785 169.09204102]
[24.22057152 166.74610901]
[10.56452560 160.54026794]
[-0.94630760 150.92253113]
[-9.48095131 138.58721924]
[-14.42328167 124.42483521]
[-15.41650772 109.45775604]
[-12.38892937 94.76647186]
[-5.55910778 81.41156769]
[4.57990503 70.35713196]
[17.29616547 62.40121078]
[31.67167473 58.11813736]
[46.66865540 57.81711578]
[61.20445633 61.51987076]
[74.22973633 68.95910645]
[84.80417633 79.59777069]
[92.16483307 92.66893005]
[91.49504852 77.68389130]
[83.14925385 64.24297333]
[90.31053925 51.18290710]
[89.64075470 36.19786835]
[88.97097015 21.21282959]
[88.30118561 6.22779083]
[87.63140106 -8.75724792]
[72.92466736 -12.16527081]
[59.68332672 -19.41575432]
[48.88997650 -29.97066498]
[41.34555054 -43.04676056]
[37.60989761 -57.67370224]
[37.96022797 -72.76608276]
[42.37054443 -87.20393372]
[50.51357269 -99.91588593]
[61.78504562 -109.95861816]
[75.34854126 -116.58689880]
[90.19757080 -119.30886078]
[105.23021698 -117.92251587]
[119.33097839 -112.53074646]
[131.45347595 -103.53365326]
[140.69813538 -91.59887695]
[146.37895203 -77.61206055]
[148.07435608 -62.61112595]
[145.65855408 -47.70922852]
[139.31080627 -34.01219940]
[129.50215149 -22.53644180]
[116.96047211 -14.13353539]
[102.61643982 -9.42703342]
[103.28622437 5.55800533]
[103.95600891 20.54304504]
[104.62579346 35.52808380]
[105.29557800 50.51312256]
[113.59346008 62.88220978]
[106.48008728 77.01410675]
[107.14987183 91.99914551]
[110.14464569 106.69715118]
[115.39136505 120.74961853]
[120.63808441 134.80209351]
[125.88480377 148.85456848]
[131.13151550 162.90702820]
[136.37823486 176.95950317]
[141.62495422 191.01197815]
[146.87167358 205.06445312]
[152.11839294 219.11691284]
[157.36511230 233.16938782]
[162.61183167 247.22186279]
[166.05732727 249.86430359]
[168.26109314 253.13661194]
[169.17761230 256.57104492]
[168.91792297 259.73318481]
[167.72520447 262.27005005]
[172.12620544 276.60989380]
[176.52720642 290.94973755]
[180.92819214 305.28958130]
[185.32919312 319.62942505]
[189.73019409 333.96926880]
[194.13119507 348.30911255]
[198.53219604 362.64895630]
[202.93318176 376.98883057]
[217.50294495 373.40505981]
[232.25212097 370.65133667]
[247.13346863 368.73648071]
[262.09933472 367.66659546]
[277.10171509 367.44509888]
[292.09262085 368.07275391]
[307.02401733 369.54748535]
[321.84805298 371.86462402]
[336.51727295 375.01672363]
[350.98464966 378.99368286]
[365.20385742 383.78277588]
[379.12933350 389.36862183]
[392.71649170 395.73336792]
[405.92181396 402.85662842]
[418.70300293 410.71557617]
[431.01907349 419.28503418]
[442.83059692 428.53753662]
[454.09973145 438.44348145]
[464.79040527 448.97109985]
[474.86834717 460.08666992]
[484.30130005 471.75463867]
[493.05902100 483.93756104]
[501.11343384 496.59643555]
[508.43881226 509.69073486]
[515.01159668 523.17846680]
[520.81085205 537.01647949]
[525.81787109 551.16040039]
[530.01666260 565.56494141]
[533.39385986 580.18395996]
[535.93853760 594.97064209]
[537.64257812 609.87762451]
[538.50048828 624.85711670]
[538.50958252 639.86114502]
[537.66979980 654.84167480]
[535.98388672 669.75067139]
[533.45715332 684.54046631]
[530.09771729 699.16357422]
[525.91638184 713.57318115]
[520.92651367 727.72320557]
[515.14410400 741.56823730]
[508.58767700 755.06396484]
[501.27819824 768.16711426]
[493.23913574 780.83575439]
[484.49621582 793.02929688]
[475.07745361 804.70867920]
[465.01300049 815.83648682]
[454.33511353 826.37707520]
[443.07797241 836.29663086]
[431.27767944 845.56347656]
[418.97201538 854.14788818]
[406.20040894 862.02233887]
[393.00372314 869.16162109]
[379.42431641 875.54284668]
[365.50558472 881.14562988]
[351.29220581 885.95196533]
[336.82968140 889.94647217]
[322.16430664 893.11633301]
[307.34307861 895.45147705]
[292.41351318 896.94433594]
[277.42337036 897.59014893]
[262.42071533 897.38684082]
[247.45356750 896.33514404]
[232.56991577 894.43835449]
[217.81739807 891.70251465]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 146]
[46 145]
[47 144]
[48 143]
[49 142]
[50 141]
[51 140]
[52 139]
[53 138]
[54 133]
[55 132]
[56 131]
[57 130]
[58 129]
[59 128]
[60 127]
[61 126]
[62 125]
[63 124]
[64 123]
[86 122]
[87 121]
[89 119]
[90 118]
[91 117]
[92 116]
[93 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
