%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[101.66379547 486.10980225]
[89.66127777 495.12445068]
[76.87818146 502.99319458]
[63.42357254 509.64889526]
[49.41224289 515.03472900]
[34.96373749 519.10479736]
[20.20132828 521.82434082]
[5.25096369 523.17016602]
[-9.75980186 523.13079834]
[-24.70289993 521.70654297]
[-39.45083618 518.90954590]
[-53.87778854 514.76373291]
[-67.86066437 509.30444336]
[-81.28015900 502.57827759]
[-94.02178955 494.64254761]
[-105.97684479 485.56503296]
[-117.04332733 475.42315674]
[-127.12681580 464.30343628]
[-136.14128113 452.30078125]
[-144.00981140 439.51754761]
[-150.66526794 426.06283569]
[-156.05088806 412.05142212]
[-160.12069702 397.60284424]
[-162.83998108 382.84039307]
[-164.18556213 367.89001465]
[-164.14591980 352.87924194]
[-162.72143555 337.93615723]
[-159.92422485 323.18826294]
[-155.77816772 308.76138306]
[-150.31864929 294.77859497]
[-143.59222412 281.35922241]
[-135.65631104 268.61770630]
[-126.57859802 256.66281128]
[-116.43653107 245.59651184]
[-105.31665039 235.51319885]
[-93.31383514 226.49894714]
[-80.53047180 218.63063049]
[-67.07564545 211.97538757]
[-53.06413651 206.59001160]
[-38.61549759 202.52043152]
[-23.85299683 199.80139160]
[-8.90258694 198.45606995]
[6.10817766 198.49594116]
[21.05122757 199.92070007]
[35.79907227 202.71813965]
[50.22588348 206.86444092]
[55.68124008 192.89164734]
[61.13659668 178.91883850]
[66.59195709 164.94604492]
[72.04730988 150.97325134]
[77.50267029 137.00044250]
[82.95802307 123.02764893]
[73.74151611 111.45397186]
[71.52855682 96.82534027]
[76.90937805 83.04344177]
[88.44883728 73.78411865]
[103.06917572 71.51699066]
[108.52453613 57.54419327]
[98.05999756 44.74242401]
[95.49404907 28.50322723]
[101.43349457 13.27365398]
[114.16901398 3.17600989]
[130.16577148 0.89212221]
[135.41249084 -13.16034889]
[140.65921021 -27.21282005]
[145.90592957 -41.26529312]
[151.15264893 -55.31776428]
[156.39936829 -69.37023163]
[161.64607239 -83.42270660]
[147.95384216 -89.56095886]
[134.68301392 -96.56387329]
[121.88813019 -104.40266418]
[109.62177277 -113.04512787]
[97.93434143 -122.45574188]
[86.87387085 -132.59584045]
[76.48580170 -143.42375183]
[66.81282043 -154.89498901]
[57.89469147 -166.96240234]
[49.76804352 -179.57641602]
[42.46628189 -192.68519592]
[36.01940536 -206.23486328]
[30.45390892 -220.16973877]
[25.79266167 -234.43257141]
[22.05481720 -248.96475220]
[19.25573540 -263.70654297]
[17.40691948 -278.59741211]
[16.51596642 -293.57611084]
[16.58653450 -308.58114624]
[17.61833763 -323.55081177]
[19.60713387 -338.42361450]
[22.54475212 -353.13845825]
[26.41911888 -367.63482666]
[31.21431541 -381.85317993]
[36.91063690 -395.73510742]
[43.48467255 -409.22354126]
[50.90941238 -422.26303101]
[59.15434647 -434.80004883]
[68.18559265 -446.78305054]
[77.96603394 -458.16281128]
[88.45549011 -468.89251709]
[99.61084747 -478.92813110]
[111.38627625 -488.22842407]
[123.73338318 -496.75512695]
[136.60142517 -504.47320557]
[149.93754578 -511.35098267]
[163.68690491 -517.36016846]
[177.79304504 -522.47613525]
[192.19796753 -526.67773438]
[206.84251404 -529.94781494]
[221.66647339 -532.27288818]
[236.60893250 -533.64337158]
[251.60850525 -534.05371094]
[266.60354614 -533.50213623]
[281.53247070 -531.99096680]
[296.33386230 -529.52642822]
[310.94696045 -526.11859131]
[325.31167603 -521.78149414]
[339.36901855 -516.53295898]
[353.06118774 -510.39456177]
[366.33193970 -503.39151001]
[379.12673950 -495.55258179]
[391.39300537 -486.90997314]
[403.08032227 -477.49923706]
[414.14068604 -467.35900879]
[424.52862549 -456.53097534]
[434.20147705 -445.05963135]
[443.11947632 -432.99212646]
[451.24597168 -420.37802124]
[458.54760742 -407.26916504]
[464.99432373 -393.71942139]
[470.55966187 -379.78448486]
[475.22076416 -365.52160645]
[478.95843506 -350.98937988]
[481.75735474 -336.24755859]
[483.60601807 -321.35665894]
[484.49679565 -306.37796021]
[484.42605591 -291.37292480]
[483.39410400 -276.40325928]
[481.40512085 -261.53048706]
[478.46734619 -246.81568909]
[474.59283447 -232.31935120]
[469.79745483 -218.10104370]
[464.10098267 -204.21919250]
[457.52679443 -190.73083496]
[450.10192871 -177.69140625]
[441.85684204 -165.15447998]
[432.82546997 -153.17158508]
[423.04489136 -141.79194641]
[412.55532837 -131.06233215]
[401.39987183 -121.02684784]
[389.62432861 -111.72670746]
[377.27713013 -103.20014191]
[364.40899658 -95.48218536]
[351.07281494 -88.60455322]
[337.32336426 -82.59551239]
[323.21719360 -77.47974396]
[308.81219482 -73.27828217]
[294.16763306 -70.00838470]
[279.34365845 -67.68348694]
[264.40115356 -66.31314087]
[249.40158081 -65.90299225]
[234.40653992 -66.45471191]
[219.47766113 -67.96603394]
[204.67628479 -70.43075562]
[190.06323242 -73.83873749]
[175.69854736 -78.17598724]
[170.45182800 -64.12351227]
[165.20510864 -50.07104492]
[159.95838928 -36.01857376]
[154.71168518 -21.96610260]
[149.46496582 -7.91363096]
[144.21824646 6.13884020]
[153.58554077 16.07718658]
[157.77708435 29.14469337]
[155.92059326 42.80860519]
[148.32186890 54.39470673]
[136.41616821 61.61067581]
[122.49732971 62.99954987]
[117.04197693 76.97235107]
[126.25848389 88.54602814]
[128.47145081 103.17465973]
[123.09062195 116.95655823]
[111.55116272 126.21588135]
[96.93082428 128.48300171]
[91.47546387 142.45581055]
[86.02011108 156.42860413]
[80.56475067 170.40139771]
[75.10939789 184.37420654]
[69.65403748 198.34700012]
[64.19868469 212.31979370]
[77.61840820 219.04554749]
[90.36029816 226.98081970]
[102.31565857 236.05793762]
[113.38247681 246.19944763]
[123.46633148 257.31881714]
[132.48120117 269.32119751]
[140.35014343 282.10415649]
[147.00605774 295.55865479]
[152.39213562 309.56988525]
[156.46243286 324.01834106]
[159.18222046 338.78070068]
[160.52828979 353.73104858]
[160.48915100 368.74182129]
[159.06515503 383.68493652]
[156.26844788 398.43292236]
[152.12287903 412.85992432]
[146.66381836 426.84289551]
[139.93785095 440.26251221]
[132.00234985 453.00427246]
[122.92503357 464.95947266]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 190]
[47 189]
[48 188]
[49 187]
[50 186]
[51 185]
[52 184]
[57 179]
[58 178]
[63 172]
[64 171]
[65 170]
[66 169]
[67 168]
[68 167]
[69 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
