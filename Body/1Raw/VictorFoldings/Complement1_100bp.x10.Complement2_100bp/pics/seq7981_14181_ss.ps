%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[293.16662598 464.62997437]
[305.44241333 455.93402100]
[299.16503906 442.31072998]
[292.88769531 428.68740845]
[286.61032104 415.06408691]
[280.33297729 401.44076538]
[265.71356201 398.71850586]
[255.37814331 387.78033447]
[253.44270325 372.67712402]
[260.85733032 359.17416382]
[254.57997131 345.55084229]
[248.30261230 331.92752075]
[240.83486938 318.91857910]
[232.23631287 306.62774658]
[223.63774109 294.33691406]
[215.03918457 282.04608154]
[206.44061279 269.75521851]
[197.84205627 257.46438599]
[189.24348450 245.17355347]
[180.64492798 232.88272095]
[172.04635620 220.59187317]
[167.58277893 218.89321899]
[164.13888550 214.37254333]
[163.38117981 207.80462646]
[149.93005371 201.40802002]
[148.82856750 185.62521362]
[140.50662231 173.14541626]
[132.09199524 160.72792053]
[123.67738342 148.31042480]
[115.26276398 135.89292908]
[106.84814453 123.47543335]
[98.43352509 111.05793762]
[89.92669678 98.70343018]
[81.32813263 86.41259003]
[72.72956848 74.12174988]
[67.99892426 71.91538239]
[64.89775848 68.46051788]
[63.62876129 64.58692932]
[64.03594208 61.08456802]
[55.99476624 48.42204285]
[47.95359421 35.75951767]
[39.91242218 23.09699249]
[31.87124825 10.43446732]
[23.83007622 -2.22805786]
[15.78890324 -14.89058304]
[10.02314281 -1.04298329]
[-4.35547829 3.22963500]
[-16.74757576 -5.22234297]
[-18.01815605 -20.16843414]
[-7.23059511 -30.59093475]
[7.66152143 -28.80764961]
[0.58441585 -42.03317642]
[-6.49268961 -55.25870514]
[-13.56979465 -68.48423004]
[-20.37788010 -74.57420349]
[-20.65214920 -81.95977020]
[-27.53156090 -95.28919983]
[-27.28082466 -80.29129791]
[-30.57856369 -65.65828705]
[-37.23827744 -52.21774292]
[-46.88332748 -40.72979355]
[-58.96823502 -31.84413147]
[-72.80954742 -26.06328964]
[-87.62446594 -23.71420097]
[-102.57513428 -24.92971802]
[-116.81602478 -29.64109802]
[-129.54173279 -37.58188629]
[-140.03257751 -48.30299759]
[-147.69523621 -61.19809723]
[-152.09635925 -75.53791046]
[-152.98703003 -90.51144409]
[-150.31689453 -105.27187347]
[-144.23693848 -118.98442841]
[-135.09101868 -130.87359619]
[-123.39640045 -140.26698303]
[-109.81445312 -146.63334656]
[-95.11330414 -149.61265564]
[-80.12437439 -149.03639221]
[-65.69536591 -144.93716431]
[-52.64230728 -137.54678345]
[-41.70341110 -127.28323364]
[-33.49684906 -114.72599030]
[-35.27931213 -129.61970520]
[-37.06177902 -144.51342773]
[-38.84424591 -159.40715027]
[-50.02602386 -149.40875244]
[-64.83957672 -151.76640320]
[-72.36491394 -164.74212646]
[-67.05462646 -178.77069092]
[-52.82326889 -183.51078796]
[-40.16254425 -175.46955872]
[-40.83232880 -190.45460510]
[-41.50211334 -205.43963623]
[-44.73247528 -211.20819092]
[-44.58658600 -216.88937378]
[-41.96201706 -220.87944031]
[-42.18534470 -235.87777710]
[-42.40867233 -250.87611389]
[-56.42819595 -256.82363892]
[-66.81184387 -267.96362305]
[-71.76059723 -282.36605835]
[-70.41704559 -297.53558350]
[-63.01396942 -310.84402466]
[-50.83399582 -319.98559570]
[-35.98738480 -323.37646484]
[-21.04639244 -320.42913818]
[-8.59964371 -311.65426636]
[-0.80360854 -298.57214355]
[0.99100137 -283.44934082]
[-3.52674055 -268.90597534]
[-13.57410908 -257.46173096]
[-27.41033554 -251.09944153]
[-27.18700790 -236.10110474]
[-26.96368027 -221.10276794]
[-26.51707458 -206.10942078]
[-25.84728813 -191.12438965]
[-25.17750359 -176.13934326]
[-23.95052910 -161.18960571]
[-22.16806221 -146.29589844]
[-20.38559723 -131.40217590]
[-18.60313034 -116.50846100]
[-14.20213223 -102.16860962]
[-7.32272005 -88.83917999]
[-0.34426746 -75.56134033]
[6.73283815 -62.33580780]
[13.80994320 -49.11028290]
[20.88704872 -35.88475418]
[28.45142746 -22.93175507]
[36.49259949 -10.26923084]
[44.53377533 2.39329433]
[52.57494736 15.05581951]
[60.61611938 27.71834373]
[68.65729523 40.38087082]
[76.69846344 53.04339218]
[85.02040863 65.52318573]
[93.61897278 77.81402588]
[102.21753693 90.10486603]
[109.05133057 94.37942505]
[110.85102081 102.64331818]
[119.26564026 115.06081390]
[127.68025970 127.47830963]
[136.09487915 139.89579773]
[144.50949097 152.31329346]
[152.92411804 164.73078918]
[160.32882690 170.07945251]
[161.36996460 177.39639282]
[175.40966797 184.69004822]
[175.92257690 199.57582092]
[184.33720398 211.99331665]
[192.93576050 224.28414917]
[201.53433228 236.57499695]
[210.13288879 248.86582947]
[218.73146057 261.15667725]
[227.33001709 273.44750977]
[235.92858887 285.73834229]
[244.52714539 298.02917480]
[253.12571716 310.32000732]
[252.56018066 295.33068848]
[258.47485352 281.54602051]
[269.72766113 271.62765503]
[284.14587402 267.49063110]
[298.94558716 269.93374634]
[311.26916504 278.48532104]
[318.73715210 291.49414062]
[319.90756226 306.44839478]
[314.55447388 320.46069336]
[303.71139526 330.82543945]
[289.47201538 335.54138184]
[274.58572388 333.69796753]
[261.92593384 325.65017700]
[268.20327759 339.27349854]
[274.48065186 352.89682007]
[289.56262207 356.03375244]
[299.78604126 367.31805420]
[301.38558960 382.28152466]
[293.95626831 395.16342163]
[300.23364258 408.78671265]
[306.51101685 422.41003418]
[312.78836060 436.03335571]
[319.06573486 449.65667725]
[333.65203857 445.97506714]
[348.66650391 445.03662109]
[363.59771729 446.87329102]
[377.93713379 451.42251587]
[391.19638062 458.52935791]
[402.92382812 467.95178223]
[412.72006226 479.36880493]
[420.25140381 492.39160156]
[425.26135254 506.57662964]
[427.57925415 521.44073486]
[427.12619019 536.47766113]
[423.91757202 551.17529297]
[418.06271362 565.03295898]
[409.76098633 577.57873535]
[399.29516602 588.38525391]
[387.02169800 597.08453369]
[373.35864258 603.38018799]
[358.77136230 607.05786133]
[343.75665283 607.99224854]
[328.82592773 606.15155029]
[314.48770142 601.59844971]
[301.23040771 594.48803711]
[289.50549316 585.06250000]
[279.71234131 573.64282227]
[272.18450928 560.61798096]
[267.17837524 546.43157959]
[264.86447144 531.56683350]
[265.32159424 516.53002930]
[268.53414917 501.83331299]
[274.39276123 487.97720337]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 180]
[3 179]
[4 178]
[5 177]
[6 176]
[10 172]
[11 171]
[12 170]
[13 157]
[14 156]
[15 155]
[16 154]
[17 153]
[18 152]
[19 151]
[20 150]
[21 149]
[24 148]
[26 146]
[27 144]
[28 143]
[29 142]
[30 141]
[31 140]
[32 139]
[33 137]
[34 136]
[35 135]
[39 134]
[40 133]
[41 132]
[42 131]
[43 130]
[44 129]
[45 128]
[51 127]
[52 126]
[53 125]
[54 124]
[56 123]
[57 122]
[82 121]
[83 120]
[84 119]
[85 118]
[91 117]
[92 116]
[93 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
