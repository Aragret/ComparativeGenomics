%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUUxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[33.61898041 433.56286621]
[39.94352722 419.80499268]
[50.39437103 408.84786987]
[63.83787918 401.88003540]
[61.61276245 387.04598999]
[59.38764191 372.21194458]
[57.16252518 357.37789917]
[54.93740845 342.54385376]
[52.71229172 327.70980835]
[45.24291229 340.71783447]
[31.97595024 347.71694946]
[17.02231979 346.53842163]
[5.01556396 337.54745483]
[-0.32389265 323.52993774]
[2.65843916 308.82940674]
[13.03845119 298.00094604]
[27.59978294 294.39990234]
[41.83044815 299.14205933]
[51.32102203 310.75830078]
[51.09769440 295.75994873]
[50.87436676 280.76159668]
[47.63162994 274.12033081]
[50.76103592 265.53869629]
[50.76103592 250.53869629]
[50.76103592 235.53869629]
[50.76103592 220.53869629]
[44.10540009 233.98126221]
[34.46383286 245.47213745]
[22.38161850 254.36146545]
[8.54206181 260.14648438]
[-6.27214289 262.50009155]
[-21.22318077 261.28909302]
[-35.46549606 256.58203125]
[-48.19361877 248.64509583]
[-58.68771362 237.92716980]
[-66.35428619 225.03439331]
[-70.75975037 210.69592285]
[-71.65496826 195.72265625]
[-68.98929596 180.96142578]
[-62.91349792 167.24702454]
[-53.77119064 155.35508728]
[-42.07941437 145.95814514]
[-28.49939728 139.58766174]
[-13.79915333 136.60389709]
[1.18994737 137.17561340]
[15.62019825 141.27047729]
[28.67549706 148.65689087]
[39.61750793 158.91712952]
[47.82740021 171.47091675]
[52.84086990 185.60829163]
[54.37436295 200.53076172]
[59.62107849 186.47828674]
[64.86779785 172.42582703]
[70.11451721 158.37335205]
[67.31773376 143.74368286]
[79.39331818 133.52160645]
[84.64003754 119.46913910]
[89.88675690 105.41666412]
[77.36002350 113.66777802]
[62.39213181 114.64873505]
[48.89565659 108.10311127]
[40.39854431 95.74192047]
[39.12191391 80.79634857]
[45.39948273 67.17312622]
[57.59030151 58.43333817]
[72.50772095 56.86153793]
[86.25236511 62.86859512]
[95.23142242 74.88427734]
[97.09789276 89.76683807]
[104.37112427 76.64813995]
[111.64434814 63.52944946]
[118.91757965 50.41075516]
[118.84214783 34.58972931]
[131.78025818 27.21039391]
[139.05348206 14.09169960]
[146.32672119 0.97300571]
[135.23602295 -10.17757797]
[127.73954773 -23.98646927]
[124.43639374 -39.33298492]
[125.58570099 -54.97426987]
[131.08636475 -69.64594269]
[140.48588562 -82.16431427]
[153.01751709 -91.52188110]
[167.66288757 -96.96840668]
[183.23474121 -98.07107544]
[198.47311401 -94.74886322]
[205.55021667 -107.97439575]
[212.62731934 -121.19992065]
[219.70442200 -134.42544556]
[226.78152466 -147.65097046]
[225.76065063 -166.03681946]
[241.01750183 -174.70832825]
[247.89692688 -188.03775024]
[254.67691040 -201.41802979]
[261.35711670 -214.84840393]
[268.03729248 -228.27877808]
[274.71749878 -241.70915222]
[281.39770508 -255.13954163]
[288.07788086 -268.56991577]
[294.75808716 -282.00027466]
[282.42001343 -290.57876587]
[271.46255493 -300.86233521]
[262.11923218 -312.63177490]
[254.58917236 -325.63626099]
[249.03294373 -339.59857178]
[245.56892395 -354.22109985]
[244.27098083 -369.19216919]
[245.16676331 -384.19268799]
[248.23718262 -398.90289307]
[253.41679382 -413.00924683]
[260.59521484 -426.21109009]
[269.61938477 -438.22698975]
[280.29699707 -448.80087280]
[292.40042114 -457.70730591]
[305.67172241 -464.75646973]
[319.82797241 -469.79809570]
[334.56747437 -472.72476196]
[349.57601929 -473.47406006]
[364.53369141 -472.02999878]
[379.12173462 -468.42340088]
[393.02911377 -462.73107910]
[405.95944214 -455.07443237]
[417.63711548 -445.61663818]
[427.81320190 -434.55929565]
[436.27081299 -422.13806152]
[442.82968140 -408.61773682]
[447.34994507 -394.28649902]
[449.73535156 -379.44979858]
[449.93496704 -364.42388916]
[447.94458008 -349.52902222]
[443.80661011 -335.08276367]
[437.60925293 -321.39294434]
[429.48461914 -308.75143433]
[419.60586548 -297.42764282]
[408.18359375 -287.66296387]
[395.46121216 -279.66549683]
[381.70996094 -273.60574341]
[367.22290039 -269.61285400]
[352.30883789 -267.77194214]
[337.28570557 -268.12225342]
[322.47366333 -270.65631104]
[308.18844604 -275.32009888]
[301.50827026 -261.88970947]
[294.82806396 -248.45933533]
[288.14785767 -235.02896118]
[281.46768188 -221.59858704]
[274.78747559 -208.16821289]
[268.10729980 -194.73783875]
[267.94302368 -187.34899902]
[261.22634888 -181.15834045]
[254.34693909 -167.82891846]
[257.72503662 -156.21362305]
[252.10275269 -145.05235291]
[240.00704956 -140.57386780]
[232.92994690 -127.34834290]
[225.85284424 -114.12281799]
[218.77574158 -100.89728546]
[211.69863892 -87.67176056]
[222.12316895 -77.83426666]
[229.64884949 -65.62119293]
[233.75622559 -51.86354446]
[234.15867615 -37.49935532]
[230.82244873 -23.50970268]
[223.96929932 -10.85172176]
[214.06188965 -0.39311075]
[201.77243042 7.14734793]
[187.93717957 11.24918365]
[173.49946594 11.62615871]
[159.44541931 8.24623489]
[152.17218018 21.36492920]
[144.89895630 34.48362350]
[145.49461365 49.36631393]
[132.03627014 57.68398666]
[124.76304626 70.80268097]
[117.48981476 83.92137146]
[110.21658325 97.04006958]
[103.93922424 110.66338348]
[98.69250488 124.71585083]
[93.44579315 138.76832581]
[95.86729431 154.40312195]
[84.16698456 163.62007141]
[78.92027283 177.67254639]
[73.67355347 191.72500610]
[68.42683411 205.77748108]
[65.76103973 220.53869629]
[65.76103973 235.53869629]
[65.76103973 250.53869629]
[65.76103973 265.53869629]
[65.87270355 280.53826904]
[66.09603119 295.53662109]
[66.31935883 310.53497314]
[67.54633331 325.48468018]
[69.77145386 340.31872559]
[71.99656677 355.15277100]
[74.22168732 369.98681641]
[76.44680786 384.82086182]
[78.67192078 399.65490723]
[93.56813812 402.37176514]
[106.77385712 409.78039551]
[116.85662079 421.07714844]
[122.72271729 435.03665161]
[123.73583984 450.14468384]
[119.78609467 464.76242065]
[111.30191803 477.30422974]
[99.20362091 486.40972900]
[84.80352020 491.09115601]
[69.66363525 490.84072876]
[55.42623520 485.68563843]
[43.63567734 476.18502808]
[35.57092285 463.36947632]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 197]
[5 196]
[6 195]
[7 194]
[8 193]
[9 192]
[19 191]
[20 190]
[21 189]
[23 188]
[24 187]
[25 186]
[26 185]
[51 184]
[52 183]
[53 182]
[54 181]
[56 179]
[57 178]
[58 177]
[69 176]
[70 175]
[71 174]
[72 173]
[74 171]
[75 170]
[76 169]
[86 158]
[87 157]
[88 156]
[89 155]
[90 154]
[92 151]
[93 150]
[94 148]
[95 147]
[96 146]
[97 145]
[98 144]
[99 143]
[100 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
