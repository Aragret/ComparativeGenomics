%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[81.89039612 654.82153320]
[66.88272095 654.88299561]
[51.91648865 653.76672363]
[37.08397293 651.47973633]
[22.47661781 648.03594971]
[8.18448925 643.45678711]
[-5.70429897 637.77032471]
[-19.10411644 631.01171875]
[-31.93234634 623.22259521]
[-44.10989761 614.45092773]
[-55.56169128 604.75091553]
[-66.21712494 594.18231201]
[-76.01049805 582.81024170]
[-84.88143158 570.70483398]
[-92.77523804 557.94073486]
[-99.64324188 544.59667969]
[-105.44309998 530.75482178]
[-110.13906097 516.50067139]
[-113.70216370 501.92196655]
[-116.11045074 487.10864258]
[-117.34906006 472.15203857]
[-117.41036224 457.14437866]
[-116.29398346 442.17813110]
[-114.00679779 427.34564209]
[-110.56291199 412.73834229]
[-105.98355865 398.44625854]
[-100.29697418 384.55752563]
[-93.53820801 371.15777588]
[-85.74894714 358.32962036]
[-76.97720337 346.15216064]
[-67.27706146 334.70046997]
[-56.70832443 324.04513550]
[-45.33615494 314.25189209]
[-33.23067093 305.38107300]
[-20.46650124 297.48739624]
[-7.12234592 290.61953735]
[6.71952343 284.81979370]
[20.97376633 280.12399292]
[35.55249786 276.56103516]
[50.36583710 274.15292358]
[65.32244873 272.91445923]
[80.33012390 272.85330200]
[81.44577789 257.89483643]
[74.67651367 244.62734985]
[83.41880035 231.44087219]
[84.53444672 216.48242188]
[85.65009308 201.52397156]
[86.76573944 186.56552124]
[87.88139343 171.60707092]
[88.99703979 156.64860535]
[90.00129700 141.68226624]
[90.89411926 126.70886230]
[91.78693390 111.73545837]
[85.70145416 99.14742279]
[93.23966217 87.37172699]
[94.13247681 72.39832306]
[87.23029327 58.16208649]
[95.71141815 45.91791153]
[85.49884033 34.15607071]
[86.61758423 18.98362541]
[97.89363861 9.31997299]
[98.78645325 -5.65343285]
[99.67926788 -20.62683868]
[84.79848480 -22.56255722]
[70.08898163 -25.53159714]
[55.62241745 -29.51949120]
[41.46927643 -34.50681305]
[27.69851494 -40.46926117]
[14.37721825 -47.37779236]
[1.57028878 -55.19874191]
[-10.65987873 -63.89401245]
[-22.25370026 -73.42124176]
[-33.15468979 -83.73400116]
[-43.30974197 -94.78206635]
[-52.66937637 -106.51159668]
[-61.18799591 -118.86545563]
[-68.82410431 -131.78346252]
[-75.54048920 -145.20265198]
[-81.30442810 -159.05767822]
[-86.08785248 -173.28102112]
[-89.86744690 -187.80340576]
[-92.62480164 -202.55404663]
[-94.34647369 -217.46112061]
[-95.02409363 -232.45196533]
[-94.65434265 -247.45356750]
[-93.23902893 -262.39282227]
[-90.78504944 -277.19696045]
[-87.30435944 -291.79388428]
[-82.81391144 -306.11242676]
[-77.33558655 -320.08285522]
[-70.89608002 -333.63708496]
[-63.52675629 -346.70910645]
[-55.26352310 -359.23522949]
[-46.14663315 -371.15441895]
[-36.22051239 -382.40859985]
[-25.53351212 -392.94296265]
[-14.13770199 -402.70617676]
[-2.08860230 -411.65066528]
[10.55508518 -419.73284912]
[23.73176193 -426.91339111]
[37.37723160 -433.15725708]
[51.42501068 -438.43405151]
[65.80666351 -442.71807861]
[80.45212555 -445.98843384]
[95.29003906 -448.22921753]
[110.24811554 -449.42947388]
[125.25347900 -449.58340454]
[140.23303223 -448.69021606]
[155.11378479 -446.75427246]
[169.82324219 -443.78503418]
[184.28974915 -439.79693604]
[198.44282532 -434.80938721]
[212.21350098 -428.84674072]
[225.53469849 -421.93804932]
[238.34152222 -414.11691284]
[250.57156372 -405.42144775]
[262.16525269 -395.89407349]
[273.06610107 -385.58114624]
[283.22097778 -374.53292847]
[292.58044434 -362.80325317]
[301.09887695 -350.44927979]
[308.73480225 -337.53118896]
[315.45098877 -324.11187744]
[321.21475220 -310.25677490]
[325.99795532 -296.03335571]
[329.77734375 -281.51092529]
[332.53448486 -266.76025391]
[334.25595093 -251.85314941]
[334.93334961 -236.86228943]
[334.56338501 -221.86070251]
[333.14785767 -206.92144775]
[330.69366455 -192.11734009]
[327.21276855 -177.52049255]
[322.72210693 -163.20201111]
[317.24359131 -149.23167419]
[310.80389404 -135.67752075]
[303.43438721 -122.60560608]
[295.17095947 -110.07960510]
[286.05392456 -98.16054535]
[276.12762451 -86.90649414]
[265.44049072 -76.37229156]
[254.04452515 -66.60924530]
[241.99530029 -57.66492462]
[229.35150146 -49.58290863]
[216.17471313 -42.40257263]
[202.52915955 -36.15889740]
[188.48130798 -30.88230324]
[174.09959412 -26.59849548]
[159.45408630 -23.32834435]
[144.61613464 -21.08778191]
[129.65805054 -19.88772583]
[114.65267181 -19.73402214]
[113.75985718 -4.76061726]
[112.86704254 10.21278858]
[122.91485596 21.14791489]
[122.22271729 36.34579468]
[110.68482208 46.81072617]
[117.65086365 59.97596741]
[109.10588074 73.29113770]
[108.21306610 88.26454163]
[114.29854584 100.85257721]
[106.76033783 112.62827301]
[105.86752319 127.60167694]
[104.97470856 142.57508850]
[107.58777618 151.32777405]
[103.95549011 157.76426697]
[102.83984375 172.72271729]
[101.72419739 187.68116760]
[100.60855103 202.63961792]
[99.49289703 217.59806824]
[98.37725067 232.55653381]
[105.06671143 246.89395142]
[96.40422821 259.01049805]
[95.28858185 273.96896362]
[110.12114716 276.25567627]
[124.72856903 279.69912720]
[139.02079773 284.27804565]
[152.90969849 289.96420288]
[166.30964661 296.72253418]
[179.13804626 304.51141357]
[191.31576538 313.28277588]
[202.76776123 322.98257446]
[213.42341614 333.55099487]
[223.21701050 344.92285156]
[232.08819580 357.02807617]
[239.98226929 369.79199219]
[246.85054016 383.13595581]
[252.65068054 396.97763062]
[257.34692383 411.23171997]
[260.91033936 425.81036377]
[263.31890869 440.62362671]
[264.55783081 455.58020020]
[264.61944580 470.58786011]
[263.50335693 485.55410767]
[261.21649170 500.38665771]
[257.77291870 514.99401855]
[253.19384766 529.28619385]
[247.50753784 543.17504883]
[240.74905396 556.57495117]
[232.96005249 569.40325928]
[224.18855286 581.58093262]
[214.48864746 593.03277588]
[203.92012024 603.68835449]
[192.54815674 613.48181152]
[180.44285583 622.35290527]
[167.67884827 630.24682617]
[154.33483887 637.11499023]
[140.49308777 642.91497803]
[126.23893738 647.61108398]
[111.66027832 651.17431641]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 174]
[43 173]
[45 171]
[46 170]
[47 169]
[48 168]
[49 167]
[50 166]
[51 164]
[52 163]
[53 162]
[55 160]
[56 159]
[58 157]
[61 154]
[62 153]
[63 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
