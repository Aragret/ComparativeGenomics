%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[72.68156433 541.53833008]
[58.47865295 547.12756348]
[43.25780869 545.99237061]
[30.04115105 538.35803223]
[21.45285034 525.74047852]
[19.19812584 510.64480591]
[23.72464943 496.06832886]
[34.13368225 484.90524292]
[48.35849762 479.37191772]
[49.47414398 464.41348267]
[50.58979416 449.45501709]
[43.82053375 436.18753052]
[52.56281281 423.00106812]
[53.67846298 408.04260254]
[54.79411316 393.08413696]
[55.90975952 378.12570190]
[57.02540970 363.16723633]
[58.14105606 348.20880127]
[57.91772842 333.21044922]
[56.35720825 318.29183960]
[54.79668427 303.37322998]
[49.20999908 317.29406738]
[39.64331436 328.84735107]
[27.00846100 336.93191528]
[12.50971603 340.77722168]
[-2.47099352 340.01675415]
[-16.50580215 334.72296143]
[-28.25700188 325.40045166]
[-36.60454178 312.93777466]
[-40.75278854 298.52276611]
[-40.30635834 283.52941895]
[-35.30780029 269.38677979]
[-26.23354721 257.44284058]
[-13.94849682 248.83599854]
[0.37641650 244.38662720]
[15.37583447 244.51881409]
[29.62010765 249.21995544]
[41.75156021 258.04196167]
[50.61390305 270.14398193]
[55.36262512 284.37365723]
[57.80834961 269.57437134]
[60.25407791 254.77510071]
[62.69980621 239.97583008]
[65.14553070 225.17655945]
[67.59126282 210.37728882]
[66.07032013 208.02253723]
[65.39048004 204.92343140]
[65.83993530 201.39732361]
[67.58676910 197.85993958]
[70.64834595 194.78086853]
[73.97060394 180.15341187]
[77.29286194 165.52593994]
[80.61511993 150.89848328]
[83.93738556 136.27102661]
[87.25964355 121.64356232]
[90.58190155 107.01610565]
[80.09391022 117.74000549]
[66.18109894 123.34658051]
[51.18801880 122.89102173]
[37.64126587 116.45009613]
[27.82370949 105.10921478]
[23.38977623 90.77951813]
[25.08666420 75.87580872]
[32.62841797 62.90962601]
[44.74411774 54.06599426]
[59.39205551 50.83522415]
[74.10379791 53.76175690]
[86.40016174 62.35242462]
[94.20898438 75.15953827]
[96.21422577 90.02654266]
[102.28806305 76.31127167]
[108.36190033 62.59600830]
[114.43572998 48.88074112]
[120.50956726 35.16547394]
[126.48112488 21.40537071]
[132.24716187 7.55788469]
[137.90994263 -6.33214235]
[143.57273865 -20.22216988]
[149.23551941 -34.11219788]
[152.88360596 -48.66181564]
[154.44413757 -63.58042145]
[156.00465393 -78.49902344]
[157.56517029 -93.41763306]
[147.93557739 -102.83492279]
[145.52322388 -115.88831329]
[150.98847961 -127.77162170]
[162.13249207 -134.24005127]
[163.91496277 -149.13375854]
[161.82748413 -158.02647400]
[165.83644104 -164.23535156]
[167.84045410 -179.10087585]
[169.84446716 -193.96640015]
[171.84848022 -208.83192444]
[173.85249329 -223.69746399]
[159.58947754 -228.48944092]
[146.49124146 -235.89434814]
[135.03128052 -245.64450073]
[125.62384033 -257.38745117]
[118.60900879 -270.69866943]
[114.24037170 -285.09698486]
[112.67584991 -300.06188965]
[113.97199249 -315.05245972]
[118.08195496 -329.52673340]
[124.85716248 -342.96148682]
[134.05268860 -354.87109375]
[145.33613586 -364.82501221]
[158.29959106 -372.46343994]
[172.47445679 -377.51019287]
[187.34829712 -379.78286743]
[202.38345337 -379.19931030]
[217.03640747 -375.78063965]
[230.77746582 -369.65039062]
[243.10989380 -361.03018188]
[253.58787537 -350.23165894]
[261.83267212 -337.64517212]
[267.54617310 -323.72567749]
[270.52191162 -308.97637939]
[270.65228271 -293.93048096]
[267.93255615 -279.13183594]
[262.46105957 -265.11541748]
[254.43562317 -252.38795471]
[244.14631653 -241.40950012]
[231.96510315 -232.57690430]
[218.33233643 -226.20948792]
[203.74081421 -222.53742981]
[188.71801758 -221.69345093]
[186.71400452 -206.82791138]
[184.70999146 -191.96238708]
[182.70597839 -177.09686279]
[180.70196533 -162.23133850]
[178.80867004 -147.35130310]
[177.02621460 -132.45758057]
[187.97621155 -119.69293213]
[186.27268982 -102.62211609]
[172.48377991 -91.85710907]
[170.92326355 -76.93849945]
[169.36273193 -62.01989746]
[167.80221558 -47.10129547]
[176.05929565 -59.62409210]
[187.60246277 -69.20300293]
[201.43309021 -75.00934601]
[216.35470581 -76.54082489]
[231.07643127 -73.66494751]
[244.32470703 -66.63050079]
[254.95339966 -56.04604340]
[262.04302979 -42.82723236]
[264.98028564 -28.11762619]
[263.51107788 -13.18975353]
[257.76245117 0.66497439]
[248.23178101 12.24798489]
[235.74353027 20.55723381]
[221.37806702 24.87388420]
[206.37814331 24.82450676]
[192.04141235 20.41337013]
[179.60813904 12.02208233]
[170.15393066 0.37657514]
[164.49665833 -13.51569939]
[163.12554932 -28.44940948]
[157.46276855 -14.55938244]
[151.79997253 -0.66935563]
[146.13719177 13.22067165]
[146.52291870 20.60125351]
[140.28530884 27.27433205]
[140.56111145 34.65983963]
[134.22483826 41.23930740]
[128.15100098 54.95457458]
[122.07716370 68.66983795]
[116.00332642 82.38510895]
[109.92949677 96.10037231]
[105.20935822 110.33836365]
[101.88710022 124.96582031]
[98.56484222 139.59327698]
[95.24258423 154.22074890]
[91.92032623 168.84820557]
[88.59806061 183.47566223]
[85.27580261 198.10311890]
[82.39053345 212.82301331]
[79.94480133 227.62228394]
[77.49907684 242.42155457]
[75.05335236 257.22082520]
[72.60762024 272.02011108]
[70.16189575 286.81936646]
[69.71528625 301.81271362]
[71.27581024 316.73132324]
[72.83633423 331.64993286]
[79.60980225 318.26635742]
[91.46656799 309.07849121]
[106.11729431 305.86035156]
[120.73313904 309.23333740]
[132.49201965 318.54614258]
[139.12347412 332.00067139]
[139.34709167 346.99899292]
[133.11967468 360.64520264]
[121.64363861 370.30444336]
[107.13484192 374.11163330]
[92.39469147 371.33169556]
[80.26929474 362.50137329]
[73.09951019 349.32443237]
[71.98386383 364.28289795]
[70.86820984 379.24133301]
[69.75256348 394.19979858]
[68.63691711 409.15826416]
[67.52127075 424.11669922]
[74.21072388 438.45413208]
[65.54824829 450.57067871]
[64.43260193 465.52911377]
[63.31694794 480.48757935]
[76.56356812 488.06979370]
[85.20149231 500.65347290]
[87.51564789 515.74011230]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 207]
[10 206]
[11 205]
[13 203]
[14 202]
[15 201]
[16 200]
[17 199]
[18 198]
[19 185]
[20 184]
[21 183]
[40 182]
[41 181]
[42 180]
[43 179]
[44 178]
[45 177]
[50 176]
[51 175]
[52 174]
[53 173]
[54 172]
[55 171]
[56 170]
[70 169]
[71 168]
[72 167]
[73 166]
[74 165]
[75 163]
[76 161]
[77 160]
[78 159]
[79 158]
[80 138]
[81 137]
[82 136]
[83 135]
[87 132]
[88 131]
[90 130]
[91 129]
[92 128]
[93 127]
[94 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
