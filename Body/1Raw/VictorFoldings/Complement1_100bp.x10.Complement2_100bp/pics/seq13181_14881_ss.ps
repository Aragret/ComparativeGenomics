%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[153.80577087 411.89859009]
[153.48489380 396.88980103]
[154.63670349 381.92181396]
[157.25010681 367.13882446]
[161.29994202 352.68316650]
[166.74717712 338.69409180]
[173.53936768 325.30630493]
[181.61111450 312.64874268]
[190.88465881 300.84332275]
[201.27069092 290.00372314]
[212.66920471 280.23434448]
[199.03358459 274.24105835]
[197.46267700 258.49804688]
[188.86410522 246.20719910]
[180.26554871 233.91635132]
[173.85551453 230.23759460]
[171.63206482 221.37789917]
[158.08718872 215.18228149]
[156.75083923 199.41760254]
[148.33622742 187.00010681]
[139.92160034 174.58261108]
[133.56706238 170.80882263]
[131.47575378 161.91700745]
[123.24694824 149.37561035]
[115.01813507 136.83421326]
[106.78932953 124.29281616]
[98.56052399 111.75141144]
[99.27820587 126.73423004]
[94.27997589 140.87699890]
[84.30728149 152.08169556]
[70.83951569 158.68620300]
[55.87454987 159.71075439]
[41.63233948 155.00337219]
[30.22562981 145.26237488]
[23.34654427 131.93276978]
[22.01555252 116.99194336]
[26.43009758 102.65626526]
[35.93531036 91.05234528]
[49.12114716 83.90155792]
[64.03157043 82.26468658]
[78.45469666 86.38454437]
[90.24971008 95.64852905]
[84.79435730 81.67573547]
[79.33899689 67.70293427]
[73.88364410 53.73014069]
[71.21717072 68.49123383]
[62.84483337 80.93727875]
[50.17750931 88.97088623]
[35.34986496 91.23825836]
[20.86062241 87.35730743]
[9.15146923 77.98203278]
[2.19560623 64.69233704]
[1.16521788 49.72777176]
[6.23394251 35.61011887]
[16.54761124 24.71846199]
[30.36819077 18.88822937]
[45.36666870 19.10191917]
[59.01553726 25.32352257]
[69.01555634 36.50602341]
[66.34976196 21.74480629]
[63.68396378 6.98359013]
[61.01816940 -7.77762747]
[58.35237122 -22.53884506]
[53.15060043 -8.46967316]
[43.01728058 2.58997536]
[29.45562935 8.99946785]
[14.47743607 9.80799389]
[0.30462691 4.89561415]
[-10.96034622 -5.00894976]
[-17.64639091 -18.43641472]
[-18.76167297 -33.39489365]
[-14.14074516 -47.66539001]
[-4.46909714 -59.13095856]
[8.81854153 -66.09074402]
[23.75102806 -67.51231384]
[38.11321640 -63.18478394]
[49.77456284 -53.75011063]
[57.00458908 -40.60969925]
[54.13207626 -49.28071213]
[57.57111359 -55.82248688]
[58.24089813 -70.80752563]
[58.68750381 -85.80088043]
[58.91083145 -100.79921722]
[59.13415909 -115.79755402]
[59.35748672 -130.79588318]
[59.58081436 -145.79421997]
[59.80414200 -160.79255676]
[60.02746964 -175.79090881]
[48.53783417 -166.14785767]
[33.58340454 -167.31616211]
[23.73075104 -178.62657166]
[24.62392616 -193.59996033]
[35.75127792 -203.65888977]
[50.73855209 -203.04115295]
[61.00001907 -192.10150146]
[62.56054306 -207.02011108]
[64.12106323 -221.93870544]
[65.68158722 -236.85731506]
[67.24211121 -251.77592468]
[53.33344269 -257.69540405]
[41.78857422 -267.45285034]
[33.63406754 -280.18057251]
[29.59501457 -294.74688721]
[30.03056335 -309.85656738]
[34.90198898 -324.16601562]
[43.77612305 -336.40289307]
[55.86388779 -345.47909546]
[70.09044647 -350.58755493]
[85.19078064 -351.27404785]
[99.82218170 -347.47753906]
[112.68363190 -339.53561401]
[122.63150787 -328.15441895]
[128.78125000 -314.34600830]
[130.58601379 -299.33819580]
[127.88533020 -284.46548462]
[120.91934204 -271.05032349]
[110.30746460 -260.28558350]
[96.99329376 -253.12847900]
[82.16071320 -250.21539307]
[80.60018921 -235.29679871]
[79.03967285 -220.37818909]
[77.47914886 -205.45957947]
[75.91862488 -190.54098511]
[75.02581024 -175.56758118]
[74.80248260 -160.56922913]
[74.57915497 -145.57089233]
[74.35582733 -130.57255554]
[74.13249969 -115.57422638]
[73.90917206 -100.57588959]
[73.68584442 -85.57755280]
[76.31040955 -81.58747864]
[76.45629883 -75.90630341]
[73.22593689 -70.13774109]
[72.55615234 -55.15270233]
[71.99794006 -40.16309357]
[73.11358643 -25.20463943]
[75.77938843 -10.44342327]
[78.44518280 4.31779432]
[81.11097717 19.07901192]
[83.77677155 33.84022903]
[87.85643768 48.27478027]
[93.31179810 62.24758148]
[98.76715088 76.22037506]
[104.22251129 90.19317627]
[111.10192108 103.52260590]
[119.33072662 116.06400299]
[127.55953979 128.60540771]
[135.78834534 141.14680481]
[144.01715088 153.68820190]
[152.33909607 166.16799927]
[160.75372314 178.58549500]
[169.16833496 191.00299072]
[183.31507874 198.08680725]
[184.04956055 212.96328735]
[192.55638123 225.31779480]
[201.15495300 237.60862732]
[209.75350952 249.89947510]
[224.00415039 256.77188110]
[224.96003723 271.63577271]
[238.04486084 264.27682495]
[251.78799438 258.23587036]
[266.05706787 253.57109070]
[280.71469116 250.32739258]
[295.61962891 248.53604126]
[310.62841797 248.21426392]
[325.59643555 249.36518860]
[340.37960815 251.97770691]
[354.83547974 256.02667236]
[368.82489014 261.47305298]
[382.21310425 268.26446533]
[394.87112427 276.33541870]
[406.67712402 285.60827637]
[417.51733398 295.99365234]
[427.28741455 307.39157104]
[435.89321899 319.69226074]
[443.25192261 332.77722168]
[449.29260254 346.52047729]
[453.95709229 360.78964233]
[457.20050049 375.44732666]
[458.99154663 390.35232544]
[459.31301880 405.36108398]
[458.16180420 420.32910156]
[455.54898071 435.11221313]
[451.49975586 449.56802368]
[446.05307007 463.55731201]
[439.26141357 476.94537354]
[431.19018555 489.60327148]
[421.91711426 501.40905762]
[411.53149414 512.24908447]
[400.13339233 522.01892090]
[387.83251953 530.62451172]
[374.74740601 537.98291016]
[361.00402832 544.02331543]
[346.73477173 548.68750000]
[332.07702637 551.93060303]
[317.17199707 553.72137451]
[302.16320801 554.04254150]
[287.19522095 552.89105225]
[272.41217041 550.27795410]
[257.95645142 546.22839355]
[243.96726990 540.78143311]
[230.57934570 533.98950195]
[217.92161560 525.91802979]
[206.11601257 516.64471436]
[195.27619934 506.25891113]
[185.50657654 494.86059570]
[176.90126038 482.55957031]
[169.54310608 469.47430420]
[163.50297546 455.73080444]
[158.83903503 441.46145630]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 159]
[13 157]
[14 156]
[15 155]
[17 154]
[19 152]
[20 151]
[21 150]
[23 149]
[24 148]
[25 147]
[26 146]
[27 145]
[42 144]
[43 143]
[44 142]
[45 141]
[59 140]
[60 139]
[61 138]
[62 137]
[63 136]
[78 135]
[80 134]
[81 133]
[82 130]
[83 129]
[84 128]
[85 127]
[86 126]
[87 125]
[88 124]
[95 123]
[96 122]
[97 121]
[98 120]
[99 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
