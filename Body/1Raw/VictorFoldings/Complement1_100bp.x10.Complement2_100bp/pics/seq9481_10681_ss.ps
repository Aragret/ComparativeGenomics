%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[140.17060852 564.36505127]
[144.13066101 549.78784180]
[152.03834534 536.91754150]
[163.25262451 526.79742432]
[176.86441040 520.24792480]
[174.41867065 505.44863892]
[164.70974731 494.15322876]
[170.09341431 479.27618408]
[167.64768982 464.47692871]
[165.20196533 449.67764282]
[162.53616333 434.91641235]
[159.65089417 420.19653320]
[156.76562500 405.47665405]
[153.33456421 390.87432861]
[149.36245728 376.40979004]
[145.39036560 361.94528198]
[141.09623718 347.57305908]
[136.48223877 333.30032349]
[125.20515442 323.57012939]
[128.32237244 308.05905151]
[123.70836639 293.78631592]
[119.01358032 308.03268433]
[107.89066315 318.09652710]
[93.24712372 321.34716797]
[78.91073608 316.93487549]
[68.62901306 306.01306152]
[65.08956146 291.43664551]
[69.21758270 277.01583862]
[79.93403625 266.52023315]
[94.43765259 262.69335938]
[108.93723297 266.53552246]
[119.64215851 277.04165649]
[117.19642639 262.24240112]
[114.75070190 247.44311523]
[105.10287476 240.14613342]
[102.94418335 227.83662415]
[109.96907806 217.01934814]
[107.74396515 202.18530273]
[105.51884460 187.35125732]
[103.29373169 172.51721191]
[101.06861115 157.68316650]
[98.84349060 142.84913635]
[96.61837769 128.01509094]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[88.54757690 74.21002960]
[78.84874725 61.71030045]
[84.61246490 47.97608185]
[80.53279877 33.54152679]
[74.66384125 19.73735046]
[69.99376678 33.99183655]
[57.90493393 42.87216568]
[42.90618896 43.06619263]
[30.59169006 34.50155258]
[25.55443764 20.37264252]
[29.67320442 5.94919825]
[41.41179276 -3.38919353]
[56.39199829 -4.15954304]
[69.02732086 3.92637181]
[64.84030914 -10.47741032]
[60.65329742 -24.88119316]
[49.37144089 -35.97309113]
[53.24858475 -50.35422897]
[49.06157303 -64.75801086]
[44.87456131 -79.16178894]
[40.68754959 -93.56557465]
[36.50053787 -107.96935272]
[24.02830315 -113.05442810]
[16.86655426 -124.23117828]
[17.44121361 -137.29838562]
[25.31863785 -147.49523926]
[21.34654236 -161.95976257]
[17.37444496 -176.42428589]
[13.40234947 -190.88880920]
[9.43025303 -205.35333252]
[-1.68521202 -216.61196899]
[2.40561581 -230.93379211]
[-1.52022183 -216.45663452]
[-10.62644005 -204.53703308]
[-23.56218719 -196.94319153]
[-38.40851974 -194.80160522]
[-52.96307373 -198.42996216]
[-65.06676483 -207.29002380]
[-72.92408752 -220.06744385]
[-75.36945343 -234.86677551]
[-72.04010773 -249.49261475]
[-63.42993164 -261.77532959]
[-50.81620026 -269.89282227]
[-36.07008743 -272.64093018]
[-21.37908554 -269.61199951]
[-8.92252159 -261.25531006]
[-0.54899347 -248.81233215]
[-1.44180942 -263.78573608]
[-2.33462524 -278.75915527]
[-3.22744107 -293.73254395]
[-17.60402298 -298.67041016]
[-28.99331093 -308.73779297]
[-35.65851974 -322.39953613]
[-36.58325577 -337.57232666]
[-31.62650299 -351.94241333]
[-21.54412842 -363.31845093]
[-7.87362242 -369.96566772]
[7.30036259 -370.87045288]
[21.66390419 -365.89480591]
[33.02666473 -355.79745483]
[39.65591049 -342.11822510]
[40.54072571 -326.94305420]
[35.54618073 -312.58609009]
[25.43391228 -301.23660278]
[11.74596500 -294.62536621]
[12.63878059 -279.65197754]
[13.53159618 -264.67855835]
[14.42441273 -249.70515442]
[16.87014008 -234.90588379]
[27.70149422 -224.68183899]
[23.89477730 -209.32542419]
[27.86687279 -194.86090088]
[31.83897018 -180.39637756]
[35.81106567 -165.93185425]
[39.78316116 -151.46733093]
[54.74178314 -143.78108215]
[59.60887527 -127.33036041]
[50.90431976 -112.15636444]
[55.09133148 -97.75258636]
[59.27834320 -83.34880066]
[63.46535492 -68.94502258]
[67.65236664 -54.54123688]
[78.63474274 -44.47959137]
[75.05707550 -29.06820297]
[79.24408722 -14.66442108]
[83.43109894 -0.26063940]
[88.46801758 13.86839008]
[94.33697510 27.67256737]
[95.72348785 12.73678493]
[101.82440186 -0.96645790]
[111.99587250 -11.99102402]
[125.16449738 -19.17346573]
[139.94053650 -21.75580215]
[154.76466370 -19.46551514]
[168.07243347 -12.54430103]
[178.45945740 -1.72257400]
[184.82955933 11.85762405]
[186.51049805 26.76314163]
[183.32487488 41.42096329]
[175.60885620 54.28421783]
[164.17677307 63.99541092]
[150.23504639 69.52970123]
[135.25498962 70.30303955]
[120.81749725 66.23381042]
[108.44617462 57.75145340]
[99.44651031 45.75096512]
[108.98619080 57.18966293]
[103.38162231 71.98491669]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[111.45242310 125.78997040]
[113.67753601 140.62400818]
[115.90265656 155.45805359]
[118.12776947 170.29209900]
[120.35289001 185.12614441]
[122.57800293 199.96018982]
[124.80312347 214.79423523]
[136.60516357 228.92906189]
[129.54997253 244.99739075]
[131.99569702 259.79666138]
[134.44142151 274.59594727]
[137.98109436 289.17230225]
[142.59510803 303.44503784]
[154.20220947 314.19613647]
[150.75497437 328.68630981]
[155.36897278 342.95904541]
[159.24407959 346.45629883]
[161.19511414 350.66897583]
[161.27174377 354.74441528]
[159.85488892 357.97317505]
[163.82698059 372.43771362]
[167.79908752 386.90222168]
[177.37397766 375.35574341]
[192.37338257 375.48983765]
[201.74028015 387.20568848]
[198.56976318 401.86679077]
[185.19900513 408.66552734]
[171.48551941 402.59136963]
[174.37078857 417.31124878]
[177.25605774 432.03115845]
[181.30639648 437.25668335]
[182.00486755 442.89666748]
[180.00123596 447.23190308]
[182.44696045 462.03118896]
[184.89268494 476.83044434]
[194.77655029 489.18438721]
[189.21794128 503.00289917]
[191.66368103 517.80218506]
[206.65892029 519.62408447]
[220.53291321 525.59808350]
[232.16094971 535.23999023]
[240.60041809 547.76800537]
[245.16714478 562.16668701]
[245.49093628 577.26873779]
[241.54553223 591.84991455]
[233.65078735 604.72814941]
[222.44667053 614.85955811]
[208.84147644 621.42272949]
[193.93809509 623.88562012]
[178.94468689 622.04870605]
[165.07670593 616.06072998]
[153.45835876 606.40716553]
[145.03149414 593.87066650]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 195]
[6 194]
[8 192]
[9 191]
[10 190]
[11 187]
[12 186]
[13 185]
[14 179]
[15 178]
[16 177]
[17 173]
[18 172]
[20 170]
[21 169]
[32 168]
[33 167]
[34 166]
[37 164]
[38 163]
[39 162]
[40 161]
[41 160]
[42 159]
[43 158]
[44 157]
[46 155]
[47 154]
[49 152]
[50 134]
[51 133]
[60 132]
[61 131]
[62 130]
[64 128]
[65 127]
[66 126]
[67 125]
[68 124]
[72 121]
[73 120]
[74 119]
[75 118]
[76 117]
[78 115]
[93 114]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
