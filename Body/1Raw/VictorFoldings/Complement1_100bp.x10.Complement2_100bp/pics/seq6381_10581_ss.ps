%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[73.35079956 994.66064453]
[58.36626816 993.94488525]
[43.41707993 992.69171143]
[28.52251434 990.90270996]
[13.70176601 988.58020020]
[-1.02606189 985.72717285]
[-15.64198589 982.34735107]
[-30.12716675 978.44500732]
[-44.46293259 974.02520752]
[-58.63080597 969.09368896]
[-72.61252594 963.65679932]
[-86.39007568 957.72149658]
[-99.94567871 951.29541016]
[-113.26188660 944.38696289]
[-126.32151794 937.00488281]
[-139.10774231 929.15881348]
[-151.60408020 920.85882568]
[-163.79443359 912.11560059]
[-175.66308594 902.94042969]
[-187.19471741 893.34509277]
[-198.37449646 883.34204102]
[-209.18798828 872.94409180]
[-219.62127686 862.16473389]
[-229.66088867 851.01776123]
[-239.29391479 839.51757812]
[-248.50790405 827.67907715]
[-257.29101562 815.51739502]
[-265.63186646 803.04833984]
[-273.51977539 790.28784180]
[-280.94454956 777.25244141]
[-287.89663696 763.95892334]
[-294.36703491 750.42443848]
[-300.34741211 736.66644287]
[-305.83010864 722.70257568]
[-310.80798340 708.55096436]
[-315.27468872 694.22973633]
[-319.22442627 679.75738525]
[-322.65213013 665.15258789]
[-325.55334473 650.43420410]
[-327.92437744 635.62115479]
[-329.76214600 620.73254395]
[-331.06427002 605.78753662]
[-331.82910156 590.80541992]
[-332.05560303 575.80548096]
[-331.74356079 560.80712891]
[-330.89331055 545.82958984]
[-329.50598145 530.89227295]
[-327.58334351 516.01434326]
[-325.12789917 501.21505737]
[-322.14279175 486.51345825]
[-318.63186646 471.92843628]
[-314.59967041 457.47888184]
[-310.05139160 443.18338013]
[-304.99288940 429.06033325]
[-299.43066406 415.12799072]
[-293.37191772 401.40426636]
[-286.82446289 387.90689087]
[-279.79669189 374.65325928]
[-272.29769897 361.66040039]
[-264.33715820 348.94512939]
[-255.92532349 336.52380371]
[-247.07301331 324.41241455]
[-237.79165649 312.62661743]
[-228.09323120 301.18157959]
[-217.99020386 290.09207153]
[-207.49563599 279.37234497]
[-196.62301636 269.03622437]
[-185.38638306 259.09707642]
[-173.80021667 249.56770325]
[-161.87944031 240.46034241]
[-149.63943481 231.78677368]
[-137.09596252 223.55816650]
[-124.26520538 215.78512573]
[-111.16369629 208.47766113]
[-97.80831146 201.64521790]
[-84.21628571 195.29656982]
[-70.40511322 189.43992615]
[-56.39262009 184.08280945]
[-42.19685745 179.23216248]
[-27.83612061 174.89419556]
[-13.32892323 171.07453918]
[1.30603611 167.77809143]
[16.04989433 165.00910950]
[30.88364601 162.77114868]
[45.78816986 161.06712341]
[60.74425888 159.89920044]
[75.73263550 159.26889038]
[90.73397064 159.17703247]
[91.18058014 144.18368530]
[91.62718201 129.19032288]
[92.07379150 114.19698334]
[83.74431610 99.63689423]
[92.71562195 85.46325684]
[92.93894958 70.46492004]
[93.16227722 55.46658325]
[93.38560486 40.46824265]
[93.60893250 25.46990776]
[93.83226013 10.47156906]
[79.75164032 4.80582666]
[68.67123413 -5.56668329]
[62.08956528 -19.24316216]
[60.89675903 -34.37398148]
[65.25412750 -48.91281891]
[74.57237244 -60.89341736]
[87.59127808 -68.69549561]
[102.55014801 -71.26389313]
[117.42591095 -68.25125122]
[130.20675659 -60.06501007]
[139.16415405 -47.81228638]
[143.08671570 -33.15015793]
[141.44393921 -18.06156349]
[134.45799255 -4.58710766]
[123.07366180 5.45089865]
[108.83059692 10.69489670]
[108.60726929 25.69323540]
[108.38394165 40.69157028]
[108.16061401 55.68991089]
[107.93728638 70.68824768]
[107.71395874 85.68658447]
[115.30745697 94.51721954]
[115.04737091 106.16082764]
[107.06713867 114.64358521]
[106.62053680 129.63693237]
[106.17392731 144.63027954]
[105.72731781 159.62364197]
[120.69659424 160.60823059]
[135.62088013 162.12954712]
[150.48094177 164.18559265]
[165.25761414 166.77374268]
[179.93185425 169.89064026]
[194.48475647 173.53228760]
[208.89756775 177.69398499]
[223.15168762 182.37036133]
[237.22875977 187.55538940]
[251.11064148 193.24240112]
[264.77944946 199.42404175]
[278.21752930 206.09236145]
[291.40759277 213.23875427]
[304.33261108 220.85403442]
[316.97595215 228.92834473]
[329.32128906 237.45130920]
[341.35275269 246.41192627]
[353.05480957 255.79866028]
[364.41235352 265.59939575]
[375.41079712 275.80151367]
[386.03591919 286.39187622]
[396.27401733 297.35678101]
[406.11193848 308.68215942]
[415.53698730 320.35336304]
[424.53701782 332.35537720]
[433.10040283 344.67269897]
[441.21612549 357.28952026]
[448.87371826 370.18948364]
[456.06332397 383.35604858]
[462.77566528 396.77221680]
[469.00210571 410.42065430]
[474.73458862 424.28381348]
[479.96575928 438.34381104]
[484.68884277 452.58255005]
[488.89776611 466.98162842]
[492.58709717 481.52249146]
[495.75210571 496.18646240]
[498.38867188 510.95455933]
[500.49343872 525.80780029]
[502.06365967 540.72698975]
[503.09732056 555.69299316]
[503.59310913 570.68640137]
[503.55038452 585.68798828]
[502.96914673 600.67834473]
[501.85021973 615.63818359]
[500.19500732 630.54815674]
[498.00564575 645.38916016]
[495.28494263 660.14202881]
[492.03643799 674.78771973]
[488.26431274 689.30731201]
[483.97338867 703.68218994]
[479.16925049 717.89373779]
[473.85806274 731.92370605]
[468.04666138 745.75402832]
[461.74258423 759.36676025]
[454.95388794 772.74444580]
[447.68936157 785.86981201]
[439.95837402 798.72595215]
[431.77090454 811.29632568]
[423.13745117 823.56463623]
[414.06918335 835.51519775]
[404.57778931 847.13250732]
[394.67547607 858.40161133]
[384.37506104 869.30798340]
[373.68975830 879.83764648]
[362.63336182 889.97692871]
[351.22015381 899.71276855]
[339.46481323 909.03265381]
[327.38247681 917.92456055]
[314.98876953 926.37707520]
[302.29962158 934.37921143]
[289.33142090 941.92071533]
[276.10083008 948.99182129]
[262.62496948 955.58343506]
[248.92118835 961.68713379]
[235.00712585 967.29492188]
[220.90072632 972.39965820]
[206.62019348 976.99468994]
[192.18389893 981.07421875]
[177.61048889 984.63287354]
[162.91871643 987.66613770]
[148.12753296 990.16998291]
[133.25599670 992.14135742]
[118.32328796 993.57757568]
[103.34864807 994.47686768]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[88 125]
[89 124]
[90 123]
[91 122]
[93 119]
[94 118]
[95 117]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
