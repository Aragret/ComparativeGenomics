%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[35.21349335 777.90875244]
[20.31401443 779.68957520]
[5.32941771 780.48175049]
[-9.67477322 780.28186035]
[-24.63294983 779.09075928]
[-39.47970200 776.91369629]
[-54.15010452 773.76013184]
[-68.58001709 769.64392090]
[-82.70632935 764.58300781]
[-96.46727753 758.59948730]
[-109.80268097 751.71960449]
[-122.65423584 743.97344971]
[-134.96574402 735.39483643]
[-146.68336487 726.02130127]
[-157.75585938 715.89385986]
[-168.13481140 705.05676270]
[-177.77484131 693.55737305]
[-186.63378906 681.44598389]
[-194.67291260 668.77563477]
[-201.85707092 655.60168457]
[-208.15484619 641.98168945]
[-213.53868103 627.97528076]
[-217.98506165 613.64367676]
[-221.47453308 599.04949951]
[-223.99183655 584.25665283]
[-225.52595520 569.32971191]
[-226.07019043 554.33410645]
[-225.62216187 539.33526611]
[-224.18382263 524.39880371]
[-221.76147461 509.59011841]
[-218.36570740 494.97387695]
[-214.01135254 480.61401367]
[-208.71746826 466.57336426]
[-202.50720215 452.91326904]
[-195.40769958 439.69345093]
[-187.45001221 426.97180176]
[-178.66894531 414.80386353]
[-169.10289001 403.24288940]
[-158.79367065 392.33941650]
[-147.78636169 382.14111328]
[-136.12911987 372.69262695]
[-123.87290192 364.03521729]
[-111.07130432 356.20675659]
[-97.78030396 349.24148560]
[-84.05802155 343.16983032]
[-69.96446991 338.01840210]
[-55.56126022 333.80966187]
[-40.91138840 330.56207275]
[-26.07890701 328.28979492]
[-11.12868118 327.00277710]
[3.87391925 326.70663452]
[18.86328888 327.40267944]
[33.77388382 329.08786011]
[36.43968201 314.32666016]
[39.10547638 299.56542969]
[41.77127075 284.80422974]
[39.83240128 280.43960571]
[40.61476898 274.81066895]
[44.74245834 269.64602661]
[47.84656906 254.97071838]
[50.95067978 240.29541016]
[54.05479050 225.62011719]
[57.15889740 210.94480896]
[44.63505173 219.20030212]
[29.72074699 217.59919739]
[19.23460770 206.87347412]
[17.97075462 191.92681885]
[26.50700378 179.59262085]
[40.94069672 175.50991821]
[54.67294693 181.54525757]
[61.42577362 194.94120789]
[66.03977966 180.66848755]
[70.65379333 166.39575195]
[75.26779938 152.12301636]
[79.88181305 137.85028076]
[84.49581909 123.57754517]
[89.10983276 109.30481720]
[86.37054443 95.59394836]
[96.61743927 86.08117676]
[91.45028687 74.26325226]
[95.58714294 62.47044754]
[106.29562378 56.84416962]
[111.12162018 42.64171600]
[115.94761658 28.43925858]
[120.77361298 14.23680401]
[124.09587860 -0.39065632]
[125.87834167 -15.28437328]
[118.53448486 -25.88770485]
[120.32572174 -38.25601959]
[129.75201416 -45.83702469]
[131.75602722 -60.70255280]
[133.76004028 -75.56807709]
[135.76405334 -90.43360901]
[121.45491791 -95.06915283]
[108.20353699 -102.18538666]
[96.43590546 -111.55355072]
[86.53028870 -122.87249756]
[78.80511475 -135.77836609]
[73.50872040 -149.85629272]
[70.81136322 -164.65373230]
[70.79975128 -179.69499207]
[73.47425079 -194.49658203]
[78.74890137 -208.58267212]
[86.45413208 -221.50045776]
[96.34225464 -232.83468628]
[108.09540558 -242.22100830]
[121.33577728 -249.35769653]
[135.63774109 -254.01533508]
[150.54154968 -256.04418945]
[165.56809998 -255.37907410]
[180.23437500 -252.04133606]
[194.06887817 -246.13827515]
[206.62690735 -237.85964966]
[217.50477600 -227.47158813]
[226.35281372 -215.30802917]
[232.88656616 -201.75997925]
[236.89601135 -187.26293945]
[238.25227356 -172.28294373]
[236.91175842 -157.30152893]
[232.91752625 -142.80029297]
[226.39801025 -129.24537659]
[217.56275940 -117.07253265]
[206.69581604 -106.67304993]
[194.14648438 -98.38124084]
[180.31817627 -92.46365356]
[165.65542603 -89.11050415]
[150.62957764 -88.42959595]
[148.62556458 -73.56406403]
[146.62155151 -58.69853592]
[144.61753845 -43.83300781]
[152.14801025 -27.98186111]
[140.77206421 -13.50190735]
[138.98959351 1.39180958]
[148.09033203 -10.53197670]
[161.02256775 -18.13177299]
[175.86791992 -20.28019524]
[190.42414856 -16.65853882]
[202.53190613 -7.80405235]
[210.39511108 4.96975136]
[212.84729004 19.76795578]
[209.52467346 34.39533234]
[200.92015076 46.68200302]
[188.31015015 54.80530548]
[173.56530762 57.56020355]
[158.87290955 54.53802109]
[146.41250610 46.18707657]
[138.03251648 33.74618912]
[134.97607422 19.06280136]
[130.15007019 33.26525879]
[125.32407379 47.46771240]
[120.49807739 61.67016983]
[124.83893585 78.67381287]
[110.89016724 90.69518280]
[113.62945557 104.40605164]
[103.38256073 113.91882324]
[98.76855469 128.19155884]
[94.15454102 142.46429443]
[89.54053497 156.73703003]
[84.92652893 171.00975037]
[80.31251526 185.28248596]
[75.69850922 199.55522156]
[71.83419800 214.04891968]
[68.73009491 228.72421265]
[65.62598419 243.39952087]
[62.52186966 258.07482910]
[59.41776276 272.75012207]
[56.53248978 287.47003174]
[53.86669159 302.23123169]
[51.20089722 316.99246216]
[48.53510284 331.75366211]
[63.09326172 335.39038086]
[77.37924194 339.98129272]
[91.33056641 345.50634766]
[104.88623047 351.94137573]
[117.98696899 359.25823975]
[130.57546997 367.42495728]
[142.59672546 376.40579224]
[153.99812317 386.16146851]
[164.72984314 396.64938354]
[174.74494934 407.82360840]
[183.99964905 419.63531494]
[192.45346069 432.03283691]
[200.06941223 444.96197510]
[206.81423950 458.36621094]
[212.65840149 472.18688965]
[217.57638550 486.36361694]
[221.54664612 500.83435059]
[224.55184937 515.53588867]
[226.57885742 530.40386963]
[227.61878967 545.37329102]
[227.66709900 560.37872314]
[226.72358704 575.35455322]
[224.79235840 590.23529053]
[221.88189697 604.95587158]
[218.00488281 619.45190430]
[213.17829895 633.65997314]
[207.42324829 647.51800537]
[200.76489258 660.96539307]
[193.23233032 673.94329834]
[184.85853577 686.39501953]
[175.68008423 698.26605225]
[165.73715210 709.50457764]
[155.07319641 720.06134033]
[143.73483276 729.89025879]
[131.77166748 738.94830322]
[119.23600769 747.19592285]
[106.18266296 754.59698486]
[92.66871643 761.11914062]
[78.75325775 766.73394775]
[64.49713898 771.41674805]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 170]
[54 169]
[55 168]
[56 167]
[59 166]
[60 165]
[61 164]
[62 163]
[63 162]
[71 161]
[72 160]
[73 159]
[74 158]
[75 157]
[76 156]
[77 155]
[79 153]
[82 151]
[83 150]
[84 149]
[85 148]
[86 133]
[87 132]
[90 130]
[91 129]
[92 128]
[93 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
