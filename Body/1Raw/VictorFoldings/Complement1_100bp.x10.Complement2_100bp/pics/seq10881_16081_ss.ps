%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[168.31205750 215.71505737]
[169.10841370 200.73031616]
[170.92552185 185.83485413]
[173.75489807 171.09811401]
[177.58334351 156.58882141]
[182.39302063 142.37460327]
[168.54553223 136.60856628]
[153.82191467 138.85899353]
[144.05630493 126.41136169]
[130.20883179 120.64533234]
[116.36134338 114.87929535]
[102.51385498 109.11326599]
[97.33755493 109.96173096]
[92.05434418 107.84961700]
[88.34401703 102.96388245]
[74.67434692 96.78811646]
[61.00467682 90.61235046]
[68.39860535 103.66339874]
[68.37525177 118.66337585]
[60.94071579 131.69132996]
[48.03837204 139.34179688]
[33.04085922 139.61494446]
[19.86849213 132.43937683]
[11.96449566 119.69077301]
[11.39495468 104.70159149]
[18.30874825 91.38996124]
[30.89862442 83.23551178]
[45.87275314 82.36962128]
[33.27043915 74.23440552]
[20.66812897 66.09918976]
[8.06581688 57.96397781]
[-7.72476196 56.98001099]
[-14.22132492 43.57687759]
[-23.33669281 55.49955368]
[-33.37051010 66.66031647]
[-44.25933838 76.98860168]
[-55.93433380 86.41911316]
[-68.32168579 94.89222717]
[-81.34307098 102.35437012]
[-94.91616821 108.75836182]
[-108.95515442 114.06372833]
[-123.37128448 118.23690796]
[-138.07339478 121.25152588]
[-152.96855164 123.08851624]
[-167.96257019 123.73627472]
[-182.96064758 123.19070435]
[-197.86796570 121.45523834]
[-212.59028625 118.54087067]
[-227.03450012 114.46601868]
[-241.10931396 109.25643921]
[-254.72573853 102.94507599]
[-267.79766846 95.57183075]
[-280.24246216 87.18331909]
[-291.98144531 77.83258057]
[-302.94039917 67.57872772]
[-313.05001831 56.48659134]
[-322.24642944 44.62630463]
[-330.47143555 32.07285309]
[-337.67306519 18.90559959]
[-343.80578613 5.20779514]
[-348.83084106 -8.93395615]
[-352.71640015 -23.43024445]
[-355.43795776 -38.18941879]
[-356.97827148 -53.11816788]
[-357.32763672 -68.12210083]
[-356.48382568 -83.10636139]
[-354.45214844 -97.97621155]
[-351.24548340 -112.63763428]
[-346.88409424 -126.99794006]
[-341.39556885 -140.96633911]
[-334.81457520 -154.45451355]
[-327.18273926 -167.37718201]
[-318.54833984 -179.65263367]
[-308.96591187 -191.20327759]
[-298.49609375 -201.95608521]
[-287.20504761 -211.84306335]
[-275.16415405 -220.80169678]
[-262.44958496 -228.77536011]
[-249.14166260 -235.71363831]
[-235.32456970 -241.57266235]
[-221.08566284 -246.31538391]
[-206.51493835 -249.91180420]
[-191.70454407 -252.33921814]
[-176.74810791 -253.58226013]
[-161.74020386 -253.63307190]
[-146.77569580 -252.49133301]
[-131.94920349 -250.16427612]
[-117.35446167 -246.66658020]
[-103.08376312 -242.02038574]
[-89.22731018 -236.25506592]
[-75.87272644 -229.40707397]
[-63.10443497 -221.51968384]
[-51.00316620 -212.64277649]
[-39.64542770 -202.83248901]
[-29.10302734 -192.15083313]
[-19.44261932 -180.66532898]
[-10.72528076 -168.44862366]
[-3.00612617 -155.57792664]
[3.66604137 -142.13462830]
[9.24903774 -128.20372009]
[13.70756340 -113.87327576]
[17.01343155 -99.23390198]
[19.14574051 -84.37814331]
[20.09100914 -69.39994049]
[19.84326172 -54.39398956]
[18.40406227 -39.45515442]
[15.78251171 -24.67788887]
[11.99518490 -10.15562057]
[7.06602573 4.01983261]
[1.02619922 17.75885010]
[-6.08610868 30.97456551]
[8.80306816 31.37664795]
[16.20103264 45.36166382]
[28.80334473 53.49687958]
[41.40565491 61.63209534]
[54.00796890 69.76731110]
[67.18044281 76.94268036]
[80.85011292 83.11844635]
[94.51978302 89.29421234]
[108.27988434 95.26577759]
[122.12737274 101.03181458]
[135.97485352 106.79784393]
[149.82234192 112.56388092]
[165.53642273 110.72588348]
[174.31156921 122.76108551]
[188.15905762 128.52711487]
[194.85908508 115.10004425]
[202.45979309 102.16149902]
[210.92575073 89.77181244]
[220.21748352 77.98874664]
[230.29164124 66.86724854]
[241.10128784 56.45915985]
[252.59600830 46.81301498]
[264.72222900 37.97378922]
[277.42337036 29.98269272]
[290.64022827 22.87698936]
[304.31121826 16.68980408]
[318.37255859 11.44998837]
[332.75866699 7.18197060]
[347.40252686 3.90565133]
[362.23583984 1.63630605]
[377.18942261 0.38451591]
[392.19357300 0.15611716]
[407.17834473 0.95217478]
[422.07382202 2.76897717]
[436.81063843 5.59805346]
[451.32000732 9.42621326]
[465.53430176 14.23560715]
[479.38726807 20.00381279]
[492.81430054 26.70393372]
[505.75277710 34.30473328]
[518.14239502 42.77076721]
[529.92541504 52.06257248]
[541.04687500 62.13681412]
[551.45489502 72.94653320]
[561.10095215 84.44132233]
[569.94006348 96.56758118]
[577.93109131 109.26878357]
[585.03668213 122.48570251]
[591.22381592 136.15672302]
[596.46350098 150.21807861]
[600.73144531 164.60424805]
[604.00769043 179.24812317]
[606.27691650 194.08143616]
[607.52862549 209.03503418]
[607.75689697 224.03918457]
[606.96075439 239.02394104]
[605.14385986 253.91943359]
[602.31469727 268.65621948]
[598.48638916 283.16555786]
[593.67694092 297.37982178]
[587.90863037 311.23275757]
[581.20843506 324.65972900]
[573.60754395 337.59817505]
[565.14141846 349.98776245]
[555.84954834 361.77069092]
[545.77520752 372.89205933]
[534.96539307 383.29998779]
[523.47058105 392.94598389]
[511.34423828 401.78506470]
[498.64300537 409.77597046]
[485.42602539 416.88150024]
[471.75497437 423.06851196]
[457.69357300 428.30813599]
[443.30737305 432.57595825]
[428.66348267 435.85208130]
[413.83013916 438.12121582]
[398.87655640 439.37283325]
[383.87237549 439.60101318]
[368.88763428 438.80474854]
[353.99215698 436.98776245]
[339.25540161 434.15847778]
[324.74609375 430.33013916]
[310.53182983 425.52053833]
[296.67895508 419.75216675]
[283.25201416 413.05184937]
[270.31362915 405.45086670]
[257.92410278 396.98468018]
[246.14123535 387.69271851]
[235.01992798 377.61831665]
[224.61206055 366.80847168]
[214.96614075 355.31353760]
[206.12716675 343.18716431]
[198.13632202 330.48587036]
[191.03088379 317.26885986]
[184.84397888 303.59774780]
[179.60444641 289.53631592]
[175.33671570 275.15008545]
[172.06068420 260.50616455]
[169.79164124 245.67282104]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 126]
[7 125]
[9 123]
[10 122]
[11 121]
[12 120]
[15 119]
[16 118]
[17 117]
[28 116]
[29 115]
[30 114]
[31 113]
[33 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
