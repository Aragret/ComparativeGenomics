%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[80.03263092 617.57238770]
[67.46941376 609.27423096]
[56.90631104 598.54510498]
[48.80507660 585.85400391]
[43.51987076 571.75573730]
[41.28173828 556.86669922]
[42.18852234 541.83764648]
[46.20057678 527.32568359]
[53.14251709 513.96520996]
[62.71087265 502.34020996]
[74.48735046 492.95895386]
[87.95713806 486.23150635]
[102.53138733 482.45196533]
[101.86160278 467.46691895]
[101.19181824 452.48190308]
[100.52203369 437.49685669]
[89.88998413 430.21749878]
[85.32370758 417.96060181]
[88.70024872 405.12280273]
[99.00360107 396.44781494]
[98.55699921 381.45446777]
[98.11038971 366.46112061]
[97.66378784 351.46774292]
[97.21717834 336.47439575]
[96.77057648 321.48104858]
[84.74137115 330.44198608]
[70.19722748 326.77215576]
[63.85953522 313.17678833]
[70.40021515 299.67791748]
[84.99771118 296.22637939]
[96.89054871 305.36508179]
[97.56033325 290.38003540]
[84.37548828 283.40686035]
[75.48921204 271.35101318]
[72.70716858 256.57192993]
[76.63379669 241.99105835]
[86.54199219 230.51435852]
[100.50706482 224.45315552]
[101.17684937 209.46810913]
[101.84663391 194.48307800]
[102.51641846 179.49803162]
[103.18620300 164.51300049]
[102.07055664 149.55455017]
[99.18528748 134.83465576]
[89.14436340 123.83333588]
[94.08268738 108.80258179]
[90.65162659 94.20025635]
[79.53616333 82.94161987]
[83.62699127 68.61980438]
[79.65489960 54.15528107]
[75.68280029 39.69075394]
[71.71070099 25.22623062]
[67.73860931 10.76170731]
[63.76651001 -3.70281625]
[59.79441452 -18.16733932]
[44.74575806 -20.12019157]
[31.62660599 -27.66544724]
[22.42058563 -39.62633514]
[18.50586891 -54.16120911]
[20.44893074 -69.04708862]
[27.92280006 -82.01962280]
[39.76159286 -91.11755371]
[28.64612579 -102.37619019]
[32.73695374 -116.69800568]
[28.76485825 -131.16253662]
[17.64939308 -142.42117310]
[21.74022102 -156.74299622]
[17.76812363 -171.20751953]
[6.65265894 -182.46615601]
[10.74348640 -196.78796387]
[4.21086311 -183.28520203]
[-8.95601082 -176.09956360]
[-23.84621811 -177.91111755]
[-34.90607834 -188.04420471]
[-38.01053619 -202.71943665]
[-32.00170898 -216.46330261]
[-19.12073708 -224.14968872]
[-4.17190695 -222.91177368]
[7.26985645 -213.21025085]
[5.04473925 -228.04429626]
[2.81962228 -242.87834167]
[0.59450513 -257.71237183]
[-1.63061202 -272.54641724]
[-3.85572910 -287.38046265]
[-18.88992500 -287.91674805]
[-33.56954193 -291.20663452]
[-47.39459991 -297.13812256]
[-59.89422226 -305.50915527]
[-70.64266968 -316.03460693]
[-79.27386475 -328.35601807]
[-85.49382782 -342.05371094]
[-89.09070587 -356.66116333]
[-89.94199371 -371.68081665]
[-88.01869965 -386.60110474]
[-83.38632202 -400.91390991]
[-76.20264435 -414.13165283]
[-66.71234131 -425.80422974]
[-55.23864365 -435.53402710]
[-42.17234421 -442.98965454]
[-27.95847702 -447.91720581]
[-13.08115959 -450.14880371]
[1.95289183 -449.60848999]
[16.63162231 -446.31460571]
[30.45508003 -440.37942505]
[42.95244598 -432.00500488]
[53.69805908 -421.47665405]
[62.32593155 -409.15292358]
[68.54219818 -395.45355225]
[72.13513947 -380.84515381]
[72.98238373 -365.82525635]
[71.05506134 -350.90548706]
[66.41883087 -336.59393311]
[59.23158646 -323.37811279]
[49.73813629 -311.70809937]
[38.26181793 -301.98141479]
[25.19351006 -294.52929688]
[10.97831440 -289.60559082]
[13.20343208 -274.77154541]
[15.42854881 -259.93750000]
[17.65366554 -245.10345459]
[19.87878227 -230.26940918]
[22.10390091 -215.43536377]
[25.20800972 -200.76007080]
[36.03936386 -190.53602600]
[32.23264694 -175.17961121]
[36.20474243 -160.71508789]
[47.03609848 -150.49104309]
[43.22938156 -135.13462830]
[47.20147705 -120.67010498]
[58.03283310 -110.44606018]
[54.22611618 -95.08964539]
[69.05094910 -93.31380463]
[82.10180664 -85.97755432]
[91.37467194 -74.17167664]
[95.43202972 -59.67597580]
[93.62561035 -44.69096756]
[86.19976044 -31.50385857]
[74.25894165 -22.13943672]
[78.23103333 -7.67491245]
[82.20313263 6.78961134]
[86.17522430 21.25413513]
[90.14732361 35.71865845]
[94.11942291 50.18318176]
[98.09151459 64.64770508]
[108.92286682 74.87174988]
[105.11614990 90.22816467]
[114.69104767 78.68167114]
[129.69044495 78.81578064]
[139.05735779 90.53162384]
[135.88684082 105.19271851]
[122.51607513 111.99145508]
[108.80258179 105.91731262]
[119.04988098 117.97149658]
[113.90517426 131.94938660]
[116.79045105 146.66928101]
[121.38789368 132.39118958]
[130.53672791 120.50428009]
[143.16215515 112.40498352]
[157.78094482 109.04479980]
[172.67572021 110.81849670]
[186.09661865 117.51768494]
[196.46701050 128.35536194]
[202.56855774 142.05831909]
[203.68447876 157.01675415]
[199.68365479 171.47335815]
[191.03613281 183.72978210]
[178.75776672 192.34617615]
[164.29106140 196.31025696]
[149.33551025 195.15637207]
[135.64808655 189.02003479]
[124.83677673 178.62216187]
[118.17124176 165.18278503]
[117.50145721 180.16783142]
[116.83167267 195.15286255]
[116.16188812 210.13790894]
[115.49210358 225.12294006]
[128.86073303 232.40586853]
[137.70552063 244.72076416]
[140.31564331 259.59381104]
[136.22616577 274.06576538]
[126.29975891 285.28073120]
[112.54537201 291.04983521]
[111.87558746 306.03488159]
[111.76392365 321.03445435]
[112.21052551 336.02780151]
[112.65713501 351.02114868]
[113.10374451 366.01449585]
[113.55034637 381.00784302]
[113.99695587 396.00119019]
[126.94699860 407.76196289]
[127.37614441 424.91220093]
[115.50707245 436.82705688]
[116.17685699 451.81210327]
[116.84664154 466.79714966]
[117.51642609 481.78219604]
[132.36975098 484.24639893]
[146.38601685 489.74530029]
[158.95249939 498.03851318]
[169.51982117 508.76348877]
[177.62605286 521.45141602]
[182.91680908 535.54754639]
[185.16079712 550.43572998]
[184.25991821 565.46508789]
[180.25357056 579.97863770]
[173.31689453 593.34191895]
[163.75311279 604.97064209]
[151.98033142 614.35656738]
[138.51318359 621.08929443]
[123.94042206 624.87457275]
[108.89908600 625.54687500]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 195]
[14 194]
[15 193]
[16 192]
[20 189]
[21 188]
[22 187]
[23 186]
[24 185]
[25 184]
[31 183]
[32 182]
[38 176]
[39 175]
[40 174]
[41 173]
[42 172]
[43 155]
[44 154]
[46 152]
[47 146]
[49 144]
[50 143]
[51 142]
[52 141]
[53 140]
[54 139]
[55 138]
[62 131]
[64 129]
[65 128]
[67 126]
[68 125]
[70 123]
[79 122]
[80 121]
[81 120]
[82 119]
[83 118]
[84 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
