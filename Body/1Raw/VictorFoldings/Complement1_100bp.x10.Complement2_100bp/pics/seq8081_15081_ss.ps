%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[238.88876343 427.91650391]
[241.69158936 413.16784668]
[245.94900513 398.77154541]
[251.61868286 384.87072754]
[258.64428711 371.60348511]
[266.95599365 359.10171509]
[276.47116089 347.48965454]
[287.09527588 336.88272095]
[277.60638428 325.26544189]
[268.11746216 313.64819336]
[258.62857056 302.03091431]
[249.13967896 290.41366577]
[234.03639221 295.21127319]
[218.20999146 293.84237671]
[204.08642578 286.48712158]
[193.84202576 274.24554443]
[189.06816101 258.97317505]
[190.52403259 242.99972534]
[198.01620483 228.77383423]
[188.35539246 217.29913330]
[178.69458008 205.82443237]
[164.57864380 201.07156372]
[161.60946655 185.53147888]
[151.94865417 174.05677795]
[142.28785706 162.58207703]
[132.62704468 151.10737610]
[122.96623230 139.63267517]
[110.94483948 138.28625488]
[102.80235291 128.80555725]
[103.31758881 115.91768646]
[91.82131195 114.05304718]
[84.52115631 104.97840881]
[85.16252136 93.34957123]
[75.84763336 81.59231567]
[66.53275299 69.83506775]
[51.89833069 63.82306290]
[50.05941772 49.04241180]
[37.36035156 46.78486633]
[29.84401131 36.80046082]
[31.10405350 24.76971245]
[21.96525002 12.87508011]
[12.82644844 0.98044741]
[-4.34909773 -5.65899086]
[-5.97001743 -23.13295937]
[-15.28490067 -34.89020920]
[-24.59978294 -46.64746094]
[-35.79566574 -44.18444443]
[-47.05132675 -46.06875992]
[-56.74699020 -51.99042130]
[-63.50189590 -61.06125641]
[-66.37087250 -71.94793701]
[-64.97647095 -83.06790161]
[-59.55812454 -92.81942749]
[-68.33872986 -104.98088074]
[-77.11933136 -117.14234161]
[-85.89993286 -129.30380249]
[-94.68054199 -141.46525574]
[-107.76214600 -134.09291077]
[-121.58695984 -128.23161316]
[-135.98110962 -123.95510864]
[-150.76356506 -121.31714630]
[-165.74844360 -120.35092163]
[-180.74726868 -121.06857300]
[-195.57144165 -123.46107483]
[-210.03451538 -127.49835205]
[-223.95458984 -133.12962341]
[-237.15663147 -140.28407288]
[-249.47460938 -148.87170410]
[-260.75360107 -158.78456116]
[-270.85174561 -169.89793396]
[-279.64205933 -182.07209778]
[-287.01403809 -195.15393066]
[-292.87490845 -208.97891235]
[-297.15097046 -223.37318420]
[-299.78851318 -238.15573120]
[-300.75427246 -253.14062500]
[-300.03619385 -268.13943481]
[-297.64321899 -282.96353149]
[-293.60552979 -297.42648315]
[-287.97384644 -311.34640503]
[-280.81900024 -324.54824829]
[-272.23098755 -336.86593628]
[-262.31781006 -348.14462280]
[-251.20411682 -358.24246216]
[-239.02969360 -367.03240967]
[-225.94764709 -374.40399170]
[-212.12248230 -380.26443481]
[-197.72808838 -384.54010010]
[-182.94546509 -387.17718506]
[-167.96052551 -388.14251709]
[-152.96174622 -387.42395020]
[-138.13772583 -385.03054810]
[-123.67488861 -380.99243164]
[-109.75514221 -375.36032104]
[-96.55352783 -368.20507812]
[-84.23606873 -359.61669922]
[-72.95767975 -349.70318604]
[-62.86018753 -338.58920288]
[-54.07058716 -326.41452026]
[-46.69941330 -313.33224487]
[-40.83937073 -299.50689697]
[-36.56414795 -285.11236572]
[-33.92751312 -270.32968140]
[-32.96263123 -255.34471130]
[-33.68162918 -240.34594727]
[-36.07546616 -225.52200317]
[-40.11403656 -211.05928040]
[-45.74655533 -197.13970947]
[-52.90218353 -183.93830872]
[-61.49093246 -171.62110901]
[-71.40479279 -160.34301758]
[-82.51908112 -150.24584961]
[-73.73847961 -138.08439636]
[-64.95787811 -125.92294312]
[-56.17727280 -113.76148987]
[-47.39667130 -101.60002899]
[-28.73548126 -102.62619781]
[-13.10156155 -92.11385345]
[-6.91335392 -74.16070557]
[-12.84253216 -55.96234512]
[-3.52764893 -44.20509338]
[5.78723383 -32.44784164]
[17.76320267 -30.74410248]
[25.61980820 -21.02517700]
[24.72108078 -8.15835476]
[33.85988235 3.73627782]
[42.99868774 15.63091087]
[59.55377579 21.45293236]
[61.81666946 39.72752762]
[75.78482819 44.89857483]
[78.29000854 60.52018356]
[87.60488892 72.27743530]
[96.91976929 84.03468323]
[112.66913605 89.80823517]
[114.93485260 106.42878723]
[132.30046082 112.55390167]
[134.44093323 129.97186279]
[144.10174561 141.44656372]
[153.76255798 152.92126465]
[163.42335510 164.39596558]
[173.08416748 175.87066650]
[187.89111328 181.44427490]
[190.16928101 196.16362000]
[199.83009338 207.63832092]
[209.49090576 219.11302185]
[222.93553162 214.41271973]
[237.14721680 214.58355713]
[250.41908264 219.58462524]
[261.16409302 228.79611206]
[268.10479736 241.09606934]
[270.42526245 254.99696350]
[267.86685181 268.82565308]
[260.75692749 280.92477417]
[270.24584961 292.54202271]
[279.73474121 304.15930176]
[289.22363281 315.77655029]
[298.71252441 327.39382935]
[311.22702026 319.10131836]
[324.50503540 312.09606934]
[338.41455078 306.44769287]
[352.81735229 302.21237183]
[367.57028198 299.43215942]
[382.52673340 298.13470459]
[397.53802490 298.33288574]
[412.45501709 300.02474976]
[427.12939453 303.19351196]
[441.41534424 307.80761719]
[455.17089844 313.82122803]
[468.25930786 321.17459106]
[480.55053711 329.79461670]
[491.92236328 339.59561157]
[502.26181030 350.48019409]
[511.46612549 362.34020996]
[519.44378662 375.05770874]
[526.11553955 388.50637817]
[531.41510010 402.55249023]
[535.28973389 417.05648804]
[537.70092773 431.87420654]
[538.62481689 446.85836792]
[538.05212402 461.86004639]
[535.98852539 476.73016357]
[532.45465088 491.32092285]
[527.48553467 505.48730469]
[521.13055420 519.08850098]
[513.45288086 531.98937988]
[504.52886963 544.06170654]
[494.44714355 555.18542480]
[483.30795288 565.25006104]
[471.22198486 574.15557861]
[458.30938721 581.81341553]
[444.69842529 588.14752197]
[430.52444458 593.09490967]
[415.92828369 596.60644531]
[401.05502319 598.64721680]
[386.05249023 599.19689941]
[371.06976318 598.25006104]
[356.25576782 595.81610107]
[341.75772095 591.91925049]
[327.71972656 586.59820557]
[314.28134155 579.90582275]
[301.57604980 571.90863037]
[289.73019409 562.68615723]
[278.86148071 552.33001709]
[269.07791138 540.94317627]
[260.47674561 528.63873291]
[253.14346313 515.53906250]
[247.15095520 501.77432251]
[242.55876160 487.48132324]
[239.41253662 472.80206299]
[237.74354553 457.88253784]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 157]
[9 156]
[10 155]
[11 154]
[12 153]
[19 145]
[20 144]
[21 143]
[23 141]
[24 140]
[25 139]
[26 138]
[27 137]
[30 135]
[33 133]
[34 132]
[35 131]
[37 129]
[40 127]
[41 126]
[42 125]
[44 122]
[45 121]
[46 120]
[53 116]
[54 115]
[55 114]
[56 113]
[57 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
