%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUGxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[161.06648254 742.26104736]
[147.25614929 736.39764404]
[133.77450562 729.81347656]
[120.65912628 722.52703857]
[107.94657135 714.55859375]
[95.67227936 705.93029785]
[83.87044525 696.66632080]
[72.57397461 686.79235840]
[61.81434631 676.33593750]
[51.62155533 665.32629395]
[42.02400589 653.79406738]
[33.04845428 641.77136230]
[24.71990967 629.29174805]
[17.06159019 616.39001465]
[10.09484005 603.10205078]
[3.83907676 589.46496582]
[-1.68826413 575.51666260]
[-6.47177649 561.29614258]
[-10.49812794 546.84301758]
[-13.75609589 532.19750977]
[-16.23660088 517.40045166]
[-17.93272781 502.49310303]
[-18.83974838 487.51702881]
[-18.95513725 472.51397705]
[-18.27857208 457.52572632]
[-16.81193733 442.59405518]
[-14.55932236 427.76062012]
[-11.52700424 413.06671143]
[-7.72343540 398.55334473]
[-3.15921688 384.26092529]
[2.15293002 370.22930908]
[8.19819927 356.49758911]
[14.95974159 343.10403442]
[22.41871071 330.08599854]
[30.55431938 317.47976685]
[39.34388733 305.32043457]
[48.76292038 293.64196777]
[58.78516769 282.47683716]
[69.38269043 271.85620117]
[80.52595520 261.80966187]
[92.18389893 252.36518860]
[104.32402802 243.54914856]
[116.91251373 235.38610840]
[129.91426086 227.89878845]
[143.29304504 221.10807800]
[137.21920776 207.39282227]
[131.14537048 193.67755127]
[125.07154083 179.96228027]
[118.69293976 166.38607788]
[112.01274109 152.95570374]
[105.33255005 139.52532959]
[103.66828156 154.43270874]
[95.77423096 167.18746948]
[83.17461395 175.32685852]
[68.30222321 177.27929688]
[54.02868271 172.66778564]
[43.10998917 162.38273621]
[37.65436935 148.41004944]
[38.71522141 133.44760132]
[46.08771133 120.38443756]
[58.34832382 111.74282837]
[73.12973022 109.19134521]
[87.57786560 113.22263336]
[98.90378571 123.05934143]
[94.71677399 108.65556335]
[89.62160492 102.40962219]
[90.57636261 94.00609589]
[86.60427094 79.54156494]
[81.31410217 72.09496307]
[82.68242645 64.83207703]
[78.92612457 50.31002045]
[75.16983032 35.78796005]
[69.09426880 49.50246429]
[56.62744904 57.84383392]
[41.63235474 58.22740936]
[28.75537491 50.53433228]
[21.98658371 37.14838791]
[23.42336464 22.21735954]
[32.62051392 10.36778450]
[46.72819519 5.27138376]
[61.37499237 8.50733280]
[72.02256012 19.07316399]
[70.24008942 4.17944670]
[68.45762634 -10.71427059]
[53.44155121 -11.54409409]
[38.79774475 -14.96900940]
[24.97121429 -20.88493729]
[12.38213539 -29.11209869]
[1.41307330 -39.40048218]
[-7.60263395 -51.43743134]
[-14.39100838 -64.85715485]
[-18.74575996 -79.25185394]
[-20.53455162 -94.18408203]
[-19.70302582 -109.20005798]
[-16.27644920 -123.84347534]
[-10.35895443 -137.66934204]
[-2.13036466 -150.25747681]
[8.15926075 -161.22537231]
[20.19723320 -170.23971558]
[33.61772919 -177.02656555]
[48.01292038 -181.37968445]
[62.94534683 -183.16679382]
[77.96123505 -182.33355713]
[92.60426331 -178.90531921]
[106.42945099 -172.98626709]
[119.01666260 -164.75624084]
[129.98339844 -154.46537781]
[138.99636841 -142.42637634]
[145.78169250 -129.00511169]
[150.13317871 -114.60942841]
[151.91859436 -99.67680359]
[151.08366394 -84.66101074]
[147.65376282 -70.01836395]
[141.73312378 -56.19385147]
[133.50167847 -43.60757065]
[123.20957184 -32.64200974]
[111.16955566 -23.63039970]
[97.74752045 -16.84659004]
[83.35134125 -12.49673653]
[85.13381195 2.39698052]
[86.91627502 17.29069710]
[89.69188690 32.03166199]
[93.44818878 46.55371857]
[97.20449066 61.07577896]
[101.06879425 75.56947327]
[105.04089355 90.03399658]
[109.12055969 104.46855164]
[113.30757141 118.87232971]
[118.76292419 132.84512329]
[125.44312286 146.27551270]
[132.12332153 159.70588684]
[136.47431946 162.58959961]
[139.02868652 166.46626282]
[139.70903015 170.48522949]
[138.78680420 173.88844299]
[144.86064148 187.60371399]
[150.93447876 201.31898499]
[157.00831604 215.03425598]
[171.02825928 209.69137573]
[185.31065369 205.09585571]
[199.81565857 201.26048279]
[214.50288391 198.19598389]
[229.33134460 195.91087341]
[244.25976562 194.41152954]
[259.24649048 193.70211792]
[274.24978638 193.78463745]
[289.22781372 194.65884399]
[304.13882446 196.32231140]
[318.94125366 198.77038574]
[333.59387207 201.99626160]
[348.05581665 205.99093628]
[362.28680420 210.74327087]
[376.24713135 216.24003601]
[389.89791870 222.46591187]
[403.20111084 229.40353394]
[416.11962891 237.03356934]
[428.61746216 245.33474731]
[440.65975952 254.28393555]
[452.21301270 263.85620117]
[463.24496460 274.02484131]
[473.72488403 284.76153564]
[483.62356567 296.03634644]
[492.91342163 307.81784058]
[501.56857300 320.07321167]
[509.56488037 332.76828003]
[516.88006592 345.86764526]
[523.49365234 359.33483887]
[529.38739014 373.13229370]
[534.54467773 387.22155762]
[538.95123291 401.56338501]
[542.59478760 416.11776733]
[545.46508789 430.84414673]
[547.55419922 445.70150757]
[548.85632324 460.64840698]
[549.36779785 475.64321899]
[549.08721924 490.64410400]
[548.01531982 505.60925293]
[546.15515137 520.49700928]
[543.51184082 535.26586914]
[540.09283447 549.87457275]
[535.90753174 564.28253174]
[530.96777344 578.44952393]
[525.28717041 592.33605957]
[518.88159180 605.90350342]
[511.76892090 619.11389160]
[503.96899414 631.93054199]
[495.50354004 644.31768799]
[486.39614868 656.24084473]
[476.67218018 667.66668701]
[466.35876465 678.56341553]
[455.48464966 688.90069580]
[444.08013916 698.64965820]
[432.17700195 707.78314209]
[419.80844116 716.27575684]
[407.00891113 724.10369873]
[393.81408691 731.24530029]
[380.26077271 737.68054199]
[366.38668823 743.39160156]
[352.23056030 748.36242676]
[337.83181763 752.57922363]
[323.23059082 756.03027344]
[308.46759033 758.70593262]
[293.58395386 760.59875488]
[278.62115479 761.70343018]
[263.62094116 762.01684570]
[248.62504578 761.53826904]
[233.67533875 760.26885986]
[218.81343079 758.21228027]
[204.08079529 755.37426758]
[189.51846313 751.76263428]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 138]
[46 137]
[47 136]
[48 135]
[49 131]
[50 130]
[51 129]
[64 128]
[65 127]
[67 126]
[68 125]
[70 124]
[71 123]
[72 122]
[82 121]
[83 120]
[84 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
