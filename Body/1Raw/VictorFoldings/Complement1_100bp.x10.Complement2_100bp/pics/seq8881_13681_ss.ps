%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[116.19196320 394.67178345]
[113.08438873 379.98645020]
[111.32510376 365.07940674]
[110.92869568 350.07415771]
[111.89844513 335.09500122]
[114.22631836 320.26608276]
[117.89302826 305.71032715]
[122.86817932 291.54830933]
[129.11054993 277.89736938]
[136.56842041 264.87063599]
[145.17999268 252.57608032]
[154.87390137 241.11557007]
[165.56980896 230.58404541]
[177.17909241 221.06881714]
[168.76446533 208.65132141]
[160.34985352 196.23382568]
[143.71365356 193.76893616]
[133.81259155 179.75878906]
[137.17236328 162.59104919]
[128.57379150 150.30021667]
[119.97522736 138.00938416]
[111.01453400 125.98000336]
[101.69965363 114.22274780]
[88.77265167 108.89505768]
[86.54309845 95.09213257]
[77.22821045 83.33488464]
[67.91333008 71.57762909]
[63.82207108 70.12313843]
[60.71858597 67.68737793]
[58.79006958 64.70137787]
[58.06449890 61.61265945]
[58.41904831 58.83193588]
[49.82048416 46.54109573]
[41.22192001 34.25025940]
[32.62335587 21.95942116]
[27.89271164 19.75304794]
[24.79154205 16.29818916]
[23.52254677 12.42459965]
[23.92972565 8.92223644]
[15.88855267 -3.74028850]
[7.84737968 -16.40281296]
[-0.19379330 -29.06533813]
[-13.39171124 -21.92393112]
[-27.05564117 -15.72056580]
[-41.11901474 -10.48546314]
[-55.51330948 -6.24412870]
[-70.16840363 -3.01722598]
[-85.01290131 -0.82047647]
[-99.97447205 0.33541760]
[-114.98023224 0.44482467]
[-129.95706177 -0.49278826]
[-144.83201599 -2.47285318]
[-159.53260803 -5.48572350]
[-173.98721313 -9.51671982]
[-188.12542725 -14.54620457]
[-201.87835693 -20.54967499]
[-215.17900085 -27.49787903]
[-227.96255493 -35.35696793]
[-240.16676331 -44.08865356]
[-251.73213196 -53.65039825]
[-262.60232544 -63.99560928]
[-272.72439575 -75.07389069]
[-282.04904175 -86.83126831]
[-290.53079224 -99.21046448]
[-298.12835693 -112.15116119]
[-304.80471802 -125.59032440]
[-310.52734375 -139.46246338]
[-315.26834106 -153.70001221]
[-319.00463867 -168.23358154]
[-321.71801758 -182.99238586]
[-323.39526367 -197.90452576]
[-324.02816772 -212.89732361]
[-323.61370850 -227.89775085]
[-322.15386963 -242.83273315]
[-319.65579224 -257.62948608]
[-316.13159180 -272.21597290]
[-311.59851074 -286.52105713]
[-306.07855225 -300.47509766]
[-299.59866333 -314.01007080]
[-292.19042969 -327.06005859]
[-283.88989258 -339.56149292]
[-274.73751831 -351.45346069]
[-264.77789307 -362.67800903]
[-254.05953979 -373.18048096]
[-242.63467407 -382.90966797]
[-230.55897522 -391.81820679]
[-217.89125061 -399.86270142]
[-204.69322205 -407.00390625]
[-191.02920532 -413.20706177]
[-176.96575928 -418.44198608]
[-162.57141113 -422.68310547]
[-147.91625977 -425.90979004]
[-133.07173157 -428.10632324]
[-118.11014557 -429.26202393]
[-103.10438538 -429.37121582]
[-88.12756348 -428.43338013]
[-73.25264740 -426.45309448]
[-58.55210114 -423.44003296]
[-44.09754562 -419.40881348]
[-29.95940781 -414.37911987]
[-16.20656395 -408.37545776]
[-2.90601778 -401.42706299]
[9.87743092 -393.56777954]
[22.08150101 -384.83593750]
[33.64673615 -375.27401733]
[44.51679230 -364.92864990]
[54.63870621 -353.85021973]
[63.96316910 -342.09271240]
[72.44475555 -329.71340942]
[80.04213715 -316.77258301]
[86.71829987 -303.33334351]
[92.44071960 -289.46112061]
[97.18151855 -275.22351074]
[100.91760254 -260.68988037]
[103.63076782 -245.93103027]
[105.30779266 -231.01887512]
[105.94050598 -216.02606201]
[105.52582550 -201.02563477]
[104.06578064 -186.09068298]
[101.56746674 -171.29396057]
[98.04307556 -156.70755005]
[93.50976562 -142.40251160]
[87.98962402 -128.44856262]
[81.50955200 -114.91366577]
[74.10111237 -101.86377716]
[65.80039978 -89.36245728]
[56.64785385 -77.47062683]
[46.68806839 -66.24621582]
[35.96956635 -55.74390793]
[24.54456711 -46.01487350]
[12.46873188 -37.10651016]
[20.50990486 -24.44398689]
[28.55107689 -11.78146172]
[36.59225082 0.88106352]
[44.91419601 13.36085701]
[53.51276016 25.65169525]
[62.11132050 37.94253159]
[70.70988464 50.23337173]
[79.67058563 62.26274872]
[88.98546600 74.01999664]
[98.30034637 85.77725220]
[111.22734833 91.10494232]
[113.45690155 104.90786743]
[122.77178955 116.66511536]
[126.86304474 118.11960602]
[129.96653748 120.55536652]
[131.89505005 123.54137421]
[132.62062073 126.63008881]
[132.26606750 129.41081238]
[140.86463928 141.70164490]
[149.46319580 153.99249268]
[162.90832520 154.79446411]
[173.28521729 163.07276917]
[176.94526672 175.63009644]
[172.76734924 187.81919861]
[181.18196106 200.23669434]
[189.59658813 212.65419006]
[202.73678589 205.39813232]
[216.48237610 199.36706543]
[230.71946716 194.61093140]
[245.33006287 191.16917419]
[260.19308472 189.07029724]
[275.18542480 188.33171082]
[290.18280029 188.95951843]
[305.06094360 190.94851685]
[319.69656372 194.28222656]
[333.96838379 198.93304443]
[347.75817871 204.86239624]
[360.95162964 212.02116394]
[373.43942261 220.35003662]
[385.11810303 229.77999878]
[395.89083862 240.23287964]
[405.66842651 251.62208557]
[414.36981201 263.85324097]
[421.92291260 276.82498169]
[428.26510620 290.42984009]
[433.34384155 304.55505371]
[437.11706543 319.08355713]
[439.55349731 333.89501953]
[440.63293457 348.86666870]
[440.34646606 363.87442017]
[438.69641113 378.79397583]
[435.69647217 393.50164795]
[431.37152100 407.87557983]
[425.75738525 421.79666138]
[418.90057373 435.14953613]
[410.85794067 447.82357788]
[401.69607544 459.71371460]
[391.49093628 470.72146606]
[380.32711792 480.75561523]
[368.29705811 489.73297119]
[355.50048828 497.57916260]
[342.04342651 504.22921753]
[328.03738403 509.62796021]
[313.59844971 513.73071289]
[298.84625244 516.50341797]
[283.90304565 517.92315674]
[268.89263916 517.97808838]
[253.93943787 516.66784668]
[239.16732788 514.00329590]
[224.69873047 510.00640869]
[210.65353394 504.71038818]
[197.14813232 498.15911865]
[184.29443359 490.40686035]
[172.19894409 481.51785278]
[160.96191406 471.56573486]
[150.67642212 460.63305664]
[141.42773438 448.81030273]
[133.29246521 436.19552612]
[126.33803558 422.89321899]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 157]
[15 156]
[16 155]
[19 151]
[20 150]
[21 149]
[22 144]
[23 143]
[25 141]
[26 140]
[27 139]
[32 138]
[33 137]
[34 136]
[35 135]
[39 134]
[40 133]
[41 132]
[42 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
