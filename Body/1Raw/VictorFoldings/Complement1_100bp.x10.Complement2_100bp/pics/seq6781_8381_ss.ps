%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxGAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGG\
) } def
/len { sequence length } bind def

/coor [
[238.11540222 451.78457642]
[242.15637207 437.32470703]
[247.68670654 423.36642456]
[254.64579773 410.06271362]
[262.95739746 397.55932617]
[272.53045654 385.99325562]
[283.26007080 375.49118042]
[273.94519043 363.73394775]
[264.63031006 351.97668457]
[255.31541443 340.21942139]
[246.00053406 328.46218872]
[236.68565369 316.70492554]
[227.37077332 304.94769287]
[218.05587769 293.19042969]
[211.43826294 289.89971924]
[208.69140625 281.18807983]
[199.55259705 269.29345703]
[190.41380310 257.39880371]
[181.27499390 245.50418091]
[176.76765442 259.81094360]
[162.82754517 265.34933472]
[149.73081970 258.03662109]
[147.13188171 243.26348877]
[156.94657898 231.92013550]
[171.93840027 232.36769104]
[158.48727417 225.97109985]
[157.38578796 210.18827820]
[149.15698242 197.64688110]
[140.92817688 185.10548401]
[132.69937134 172.56407166]
[124.47055817 160.02267456]
[116.24175262 147.48127747]
[108.01293945 134.93988037]
[108.45886230 149.93324280]
[102.84335327 163.84245300]
[92.11270905 174.32354736]
[78.07524109 179.61029053]
[63.09651566 178.81175232]
[49.70069885 172.06251526]
[40.14522934 160.49995422]
[36.04036713 146.07254028]
[38.07785416 131.21156311]
[45.91434097 118.42135620]
[58.22924042 109.85729218]
[72.94727325 106.96256256]
[87.58819580 110.22497559]
[99.68585968 119.09600830]
[86.37151337 113.37985992]
[80.90144348 99.96253967]
[86.42411041 86.56678009]
[80.76132202 72.67675018]
[75.09853363 58.78672409]
[69.43575287 44.89669800]
[63.77296448 31.00667000]
[58.11017609 17.11664200]
[52.44739151 3.22661543]
[46.78460312 -10.66341114]
[34.41002274 -20.52141762]
[36.76998520 -35.22787094]
[31.10720062 -49.11790085]
[16.18034744 -52.92516327]
[6.47099972 -64.65469360]
[5.54118061 -79.67466736]
[13.53829670 -92.21197510]
[7.87550974 -106.10200500]
[-4.49907303 -115.96000671]
[-2.13910723 -130.66645813]
[-7.80189371 -144.55648804]
[-13.46468067 -158.44651794]
[-25.83926392 -168.30451965]
[-23.47929764 -183.01097107]
[-38.05864334 -179.37457275]
[-53.00711441 -177.85012817]
[-68.02038574 -178.46867371]
[-82.79279327 -181.21760559]
[-97.02359772 -186.04098511]
[-110.42308044 -192.84059143]
[-122.71843719 -201.47799683]
[-133.65936279 -211.77737427]
[-143.02310181 -223.52902222]
[-150.61901855 -236.49368286]
[-156.29248047 -250.40744019]
[-159.92799377 -264.98699951]
[-161.45150757 -279.93557739]
[-160.83203125 -294.94882202]
[-158.08218384 -309.72103882]
[-153.25793457 -323.95156860]
[-146.45748901 -337.35061646]
[-137.81932068 -349.64544678]
[-127.51927185 -360.58572388]
[-115.76705170 -369.94873047]
[-102.80191040 -377.54385376]
[-88.88780212 -383.21646118]
[-74.30800629 -386.85104370]
[-59.35934448 -388.37365723]
[-44.34615707 -387.75326538]
[-29.57408714 -385.00247192]
[-15.34387779 -380.17733765]
[-1.94523835 -373.37609863]
[10.34905243 -364.73715210]
[21.28869820 -354.43643188]
[30.65098190 -342.68362427]
[38.24530029 -329.71801758]
[43.91704178 -315.80355835]
[47.55073929 -301.22354126]
[49.07241440 -286.27478027]
[48.45108414 -271.26162720]
[45.69940186 -256.48971558]
[40.87338638 -242.25982666]
[34.07128906 -228.86160278]
[25.43159485 -216.56784058]
[15.13019466 -205.62882996]
[3.37681127 -196.26727295]
[-9.58927059 -188.67376709]
[2.38027191 -179.80926514]
[0.42534658 -164.10929871]
[6.08813334 -150.21926880]
[11.75091934 -136.32925415]
[23.72046280 -127.46475220]
[21.76553726 -111.76478577]
[27.42832375 -97.87476349]
[41.91160202 -94.50241852]
[51.74827957 -83.11366272]
[53.00739670 -67.93907928]
[44.99722672 -54.78068542]
[50.66001511 -40.89065933]
[62.62955475 -32.02616119]
[60.67462921 -16.32619858]
[66.33741760 -2.43617105]
[72.00020599 11.45385551]
[77.66299438 25.34388351]
[83.32577515 39.23390961]
[88.98856354 53.12393570]
[94.65135193 67.01396179]
[100.31414032 80.90399170]
[113.62848663 86.62014008]
[119.09855652 100.03746033]
[113.57588959 113.43321991]
[120.55434418 126.71106720]
[128.78315735 139.25247192]
[137.01196289 151.79386902]
[145.24076843 164.33526611]
[153.46957397 176.87666321]
[161.69837952 189.41807556]
[169.92718506 201.95947266]
[183.96688843 209.25311279]
[184.47981262 224.13888550]
[193.16963196 236.36537170]
[202.30842590 248.26000977]
[211.44723511 260.15463257]
[220.58604431 272.04928589]
[229.81314087 283.87554932]
[239.12802124 295.63278198]
[248.44290161 307.39004517]
[257.75778198 319.14730835]
[267.07266235 330.90454102]
[276.38754272 342.66180420]
[285.70242310 354.41906738]
[295.01730347 366.17630005]
[307.69519043 358.13336182]
[321.14437866 351.45971680]
[335.21743774 346.22845459]
[349.76025391 342.49691772]
[364.61346436 340.30599976]
[379.61431885 339.67965698]
[394.59844971 340.62481689]
[409.40170288 343.13107300]
[423.86187744 347.17098999]
[437.82055664 352.70031738]
[451.12478638 359.65841675]
[463.62878418 367.96911621]
[475.19555664 377.54132080]
[485.69839478 388.27017212]
[495.02221680 400.03811646]
[503.06484985 412.71618652]
[509.73815918 426.16552734]
[514.96905518 440.23873901]
[518.70025635 454.78164673]
[520.89080811 469.63488770]
[521.51678467 484.63574219]
[520.57128906 499.61987305]
[518.06463623 514.42303467]
[514.02435303 528.88311768]
[508.49472046 542.84167480]
[501.53628540 556.14575195]
[493.22528076 568.64953613]
[483.65280151 580.21606445]
[472.92370605 590.71862793]
[461.15554810 600.04217529]
[448.47726440 608.08453369]
[435.02777100 614.75750732]
[420.95443726 619.98809814]
[406.41143799 623.71893311]
[391.55813599 625.90911865]
[376.55725098 626.53472900]
[361.57315063 625.58880615]
[346.77001953 623.08184814]
[332.31005859 619.04119873]
[318.35165405 613.51123047]
[305.04776001 606.55249023]
[292.54415894 598.24114990]
[280.97784424 588.66839600]
[270.47552490 577.93902588]
[261.15228271 566.17065430]
[253.11027527 553.49218750]
[246.43760681 540.04254150]
[241.20738220 525.96905518]
[237.47689819 511.42599487]
[235.28704834 496.57263184]
[234.66181946 481.57171631]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 159]
[8 158]
[9 157]
[10 156]
[11 155]
[12 154]
[13 153]
[14 152]
[16 151]
[17 150]
[18 149]
[19 148]
[25 147]
[27 145]
[28 144]
[29 143]
[30 142]
[31 141]
[32 140]
[33 139]
[47 138]
[50 135]
[51 134]
[52 133]
[53 132]
[54 131]
[55 130]
[56 129]
[57 128]
[59 126]
[60 125]
[64 121]
[65 120]
[67 118]
[68 117]
[69 116]
[71 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
