%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[83.59587860 489.29000854]
[73.13909912 478.52688599]
[63.46759033 467.05297852]
[54.62953186 454.92541504]
[46.66896057 442.20462036]
[39.62553406 428.95401001]
[33.53433990 415.23956299]
[28.42572784 401.12957764]
[24.32514954 386.69442749]
[21.25303078 372.00595093]
[19.22467995 357.13735962]
[18.25020027 342.16275024]
[18.33444595 327.15667725]
[19.47700119 312.19393921]
[21.67216873 297.34909058]
[24.90901566 282.69604492]
[29.17141533 268.30783081]
[34.43813324 254.25610352]
[40.68292618 240.61090088]
[47.87469101 227.44020081]
[55.97758865 214.80960083]
[64.95125580 202.78204346]
[74.75099182 191.41744995]
[85.32795715 180.77241516]
[96.62947845 170.89999390]
[108.59923553 161.84936523]
[121.17759705 153.66563416]
[113.90436554 140.54693604]
[106.63114166 127.42823792]
[99.35791016 114.30954742]
[87.47257233 106.94541931]
[87.52339935 92.96368408]
[80.25016785 79.84498596]
[72.97693634 66.72629547]
[65.70370483 53.60760117]
[56.65370941 41.64526367]
[46.00769806 31.07821655]
[35.36169052 20.51116943]
[24.71568108 9.94412136]
[14.06967258 -0.62292671]
[3.42366409 -11.18997478]
[-7.98215580 -1.43497193]
[-20.14515114 7.35788393]
[-32.98438263 15.13007832]
[-46.41439819 21.82988548]
[-60.34582901 27.41272163]
[-74.68595886 31.84143066]
[-89.33935547 35.08654404]
[-104.20850372 37.12646103]
[-119.19445038 37.94760513]
[-134.19746399 37.54451752]
[-149.11769104 35.91987610]
[-163.85585022 33.08449554]
[-178.31385803 29.05724335]
[-192.39550781 23.86492157]
[-206.00706482 17.54208374]
[-219.05795288 10.13080883]
[-231.46133423 1.68041825]
[-243.13464355 -7.75285196]
[-254.00019836 -18.10622406]
[-263.98571777 -29.31079483]
[-273.02471924 -41.29199982]
[-281.05703735 -53.97010803]
[-288.02926636 -67.26074219]
[-293.89495850 -81.07546234]
[-298.61511230 -95.32231903]
[-302.15829468 -109.90651703]
[-304.50091553 -124.73097992]
[-305.62741089 -139.69706726]
[-305.53027344 -154.70518494]
[-304.21017456 -169.65542603]
[-301.67584229 -184.44833374]
[-297.94418335 -198.98544312]
[-293.04003906 -213.17001343]
[-286.99600220 -226.90765381]
[-279.85232544 -240.10693359]
[-271.65658569 -252.68000793]
[-262.46325684 -264.54321289]
[-252.33355713 -275.61758423]
[-241.33488464 -285.82946777]
[-229.54045105 -295.11083984]
[-217.02873230 -303.39996338]
[-203.88301086 -310.64169312]
[-190.19075012 -316.78781128]
[-176.04307556 -321.79745483]
[-161.53414917 -325.63720703]
[-146.76052856 -328.28158569]
[-131.82051086 -329.71298218]
[-116.81354523 -329.92184448]
[-101.83948517 -328.90676880]
[-86.99798584 -326.67456055]
[-72.38781738 -323.24005127]
[-58.10621643 -318.62609863]
[-44.24821472 -312.86340332]
[-30.90604210 -305.99032593]
[-18.16849136 -298.05261230]
[-6.12032557 -289.10305786]
[5.15827227 -279.20123291]
[15.59224510 -268.41305542]
[25.11215591 -256.81027222]
[33.65464783 -244.47015381]
[41.16287613 -231.47479248]
[47.58686829 -217.91069031]
[52.88387680 -203.86808777]
[57.01865005 -189.44046021]
[59.96366882 -174.72381592]
[61.69933701 -159.81610107]
[62.21410370 -144.81649780]
[61.50454330 -129.82485962]
[59.57537460 -114.94093323]
[56.43944168 -100.26378632]
[52.11760712 -85.89108276]
[46.63864136 -71.91847992]
[40.03899765 -58.43895721]
[32.36259842 -45.54222488]
[23.66053391 -33.31410599]
[13.99071217 -21.83598328]
[24.63672066 -11.26893520]
[35.28273010 -0.70188767]
[45.92873764 9.86515999]
[56.57474518 20.43220711]
[67.22075653 30.99925613]
[62.63896561 16.71614647]
[62.41071701 1.71788311]
[66.55574799 -12.69803429]
[74.71548462 -25.28448486]
[86.18402100 -34.95261765]
[99.96920776 -40.86603546]
[114.87849426 -42.51317596]
[129.62208557 -39.75154114]
[142.92449951 -32.82004166]
[153.63496399 -22.31831741]
[160.82688904 -9.15487862]
[163.87811279 5.53150892]
[162.52468872 20.47032547]
[156.88368225 34.36921310]
[147.44311523 46.02577972]
[135.01966858 54.43161774]
[120.68811798 58.85953140]
[105.68826294 58.92647171]
[91.31775665 54.62664032]
[78.82240295 46.33436966]
[86.09563446 59.45306396]
[93.36885834 72.57176208]
[100.64208984 85.69045258]
[112.52742767 93.05458069]
[112.47660065 107.03631592]
[119.74983215 120.15501404]
[127.02306366 133.27371216]
[134.29629517 146.39239502]
[147.90097046 140.05981445]
[161.91845703 134.70266724]
[176.27891541 130.34764099]
[190.91079712 127.01644897]
[205.74121094 124.72567749]
[220.69627380 123.48673248]
[235.70147705 123.30580139]
[250.68206787 124.18376923]
[265.56341553 126.11627960]
[280.27136230 129.09368896]
[294.73266602 133.10116577]
[308.87524414 138.11875916]
[322.62866211 144.12145996]
[335.92440796 151.07936096]
[348.69619751 158.95780945]
[360.88046265 167.71752930]
[372.41647339 177.31491089]
[383.24673462 187.70211792]
[393.31732178 198.82742310]
[402.57803345 210.63537598]
[410.98278809 223.06716919]
[418.48965454 236.06085205]
[425.06124878 249.55169678]
[430.66485596 263.47250366]
[435.27252197 277.75390625]
[438.86132812 292.32473755]
[441.41336060 307.11242676]
[442.91595459 322.04330444]
[443.36157227 337.04299927]
[442.74798584 352.03674316]
[441.07830811 366.94985962]
[438.36083984 381.70803833]
[434.60910034 396.23779297]
[429.84176636 410.46667480]
[424.08264160 424.32385254]
[417.36035156 437.74026489]
[409.70846558 450.64907837]
[401.16503906 462.98596191]
[391.77267456 474.68948364]
[381.57812500 485.70129395]
[370.63220215 495.96658325]
[358.98947144 505.43417358]
[346.70788574 514.05688477]
[333.84863281 521.79180908]
[320.47583008 528.60040283]
[306.65603638 534.44873047]
[292.45816040 539.30761719]
[277.95291138 543.15289307]
[263.21252441 545.96545410]
[248.31047058 547.73114014]
[233.32098389 548.44134521]
[218.31875610 548.09234619]
[203.37849426 546.68603516]
[188.57466125 544.22930908]
[173.98100281 540.73449707]
[159.67021179 536.21893311]
[145.71360779 530.70513916]
[132.18069458 524.22058105]
[119.13890839 516.79760742]
[106.65322113 508.47314453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 150]
[28 149]
[29 148]
[30 147]
[32 145]
[33 144]
[34 143]
[35 142]
[36 122]
[37 121]
[38 120]
[39 119]
[40 118]
[41 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
