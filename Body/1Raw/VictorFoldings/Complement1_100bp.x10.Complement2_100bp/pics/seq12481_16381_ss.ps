%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[103.00904846 592.37475586]
[115.25431824 582.99090576]
[113.91608429 568.05072021]
[112.57785034 553.11053467]
[111.23961639 538.17034912]
[107.51190948 531.78863525]
[109.99437714 522.99798584]
[108.87872314 508.03955078]
[107.76307678 493.08108521]
[104.79299927 489.34109497]
[104.14083862 483.69558716]
[106.84367371 477.66183472]
[106.17388916 462.67678833]
[105.50410461 447.69174194]
[104.83432007 432.70672607]
[104.16453552 417.72167969]
[100.72550201 411.17990112]
[103.59801483 402.50888062]
[103.15140533 387.51553345]
[102.70480347 372.52218628]
[94.59199524 360.03091431]
[101.91497803 346.00650024]
[101.46837616 331.01315308]
[101.02176666 316.01980591]
[90.03843689 306.02471924]
[89.37192535 290.82568359]
[99.93017578 279.37310791]
[99.48356628 264.37976074]
[91.37075806 251.88850403]
[98.69374847 237.86408997]
[98.24714661 222.87072754]
[97.80053711 207.87738037]
[97.35392761 192.88403320]
[96.90732574 177.89068604]
[96.23754120 162.90563965]
[95.34472656 147.93223572]
[94.45191193 132.95883179]
[80.71857452 127.30004883]
[70.79341888 116.24936676]
[66.63671875 101.98934174]
[69.06943512 87.33641815]
[77.61109924 75.18461609]
[90.57468414 67.93398285]
[89.68186951 52.96057510]
[88.78905487 37.98717117]
[87.45082092 23.04698563]
[85.66835785 8.15326786]
[83.88588715 -6.74044895]
[81.77126312 -21.59064674]
[79.32553864 -36.38991928]
[76.87980652 -51.18918991]
[74.43408203 -65.98845673]
[71.98835754 -80.78772736]
[69.21274567 -95.52869415]
[66.10863495 -110.20399475]
[63.00452423 -124.87929535]
[52.57889175 -136.77958679]
[57.51491547 -150.83251953]
[54.41080475 -165.50781250]
[51.30669785 -180.18312073]
[35.52005768 -182.33296204]
[21.44766808 -189.74600220]
[10.78241062 -201.50970459]
[4.80017090 -216.18940735]
[4.20722389 -232.00329590]
[9.05689526 -247.03869629]
[18.74533653 -259.48333740]
[32.08664703 -267.84387207]
[28.76438522 -282.47134399]
[25.44212723 -297.09878540]
[22.11986732 -311.72625732]
[8.01353359 -317.91635132]
[0.34659830 -331.07202148]
[1.87820470 -346.04260254]
[11.81249332 -357.10821533]
[8.49023342 -371.73568726]
[5.16797400 -386.36315918]
[1.84571469 -400.99060059]
[-2.35841274 -406.09323120]
[-3.22449994 -411.70989990]
[-1.35082662 -416.10290527]
[-4.23609924 -430.82278442]
[-14.48339748 -442.87698364]
[-9.33869362 -456.85485840]
[-12.22396564 -471.57473755]
[-27.28043365 -471.91656494]
[-41.91130447 -475.48751831]
[-55.43226242 -482.12060547]
[-67.21091461 -491.50555420]
[-76.69634247 -503.20343018]
[-83.44490814 -516.66711426]
[-87.14095306 -531.26690674]
[-87.61161804 -546.31988525]
[-84.83488464 -561.12207031]
[-78.94062805 -574.98107910]
[-70.20453644 -587.24865723]
[-59.03520584 -597.35113525]
[-45.95504761 -604.81597900]
[-31.57584572 -609.29400635]
[-16.57014275 -610.57574463]
[-1.63978100 -608.60131836]
[12.51691914 -603.46307373]
[25.23782349 -595.40124512]
[35.92795181 -584.79296875]
[44.08730698 -572.13446045]
[49.33426285 -558.01763916]
[51.42340469 -543.10290527]
[50.25702667 -528.08782959]
[45.88967896 -513.67462158]
[38.52563095 -500.53744507]
[28.50931168 -489.29077148]
[16.30920219 -480.46063232]
[2.49592566 -474.46002197]
[5.38119841 -459.74014282]
[15.42212296 -448.73880005]
[10.48379230 -433.70806885]
[13.36906433 -418.98815918]
[16.47317505 -404.31286621]
[19.79543495 -389.68539429]
[23.11769295 -375.05795288]
[26.43995285 -360.43048096]
[40.17956161 -354.74179077]
[48.02768707 -341.90158081]
[46.79576111 -326.72476196]
[36.74732590 -315.04852295]
[40.06958771 -300.42105103]
[43.39184570 -285.79357910]
[46.71410751 -271.16613770]
[60.80647278 -269.81756592]
[73.81313324 -264.17416382]
[84.45716858 -254.77552795]
[91.68914032 -242.53059387]
[94.79058075 -228.62983704]
[93.44533539 -214.42941284]
[87.77173615 -201.31895447]
[78.31232452 -190.58549500]
[65.98199463 -183.28723145]
[69.08610535 -168.61192322]
[72.19021606 -153.93663025]
[82.39382172 -143.08601379]
[77.67982483 -127.98340607]
[80.78393555 -113.30810547]
[83.88804626 -98.63280487]
[86.62789917 -96.41344452]
[88.42890167 -92.75674438]
[88.62722015 -88.11843109]
[86.78762817 -83.23345947]
[89.23335266 -68.43418884]
[91.67907715 -53.63491440]
[94.12480927 -38.83564377]
[96.57053375 -24.03637314]
[99.20855713 -21.69688797]
[100.84448242 -17.96341896]
[100.83548737 -13.32087517]
[98.77960205 -8.52291489]
[100.56207275 6.37080240]
[102.34453583 21.26451874]
[104.46231842 23.10113144]
[105.98020172 25.88728523]
[106.53285980 29.39868927]
[105.84286499 33.28307343]
[103.76245880 37.09435654]
[104.65527344 52.06776047]
[105.54808807 67.04116821]
[119.28142548 72.69995117]
[129.20657349 83.75063324]
[133.36328125 98.01065826]
[130.93055725 112.66358185]
[122.38890076 124.81538391]
[109.42531586 132.06602478]
[110.31813049 147.03942871]
[111.21094513 162.01283264]
[114.52684021 167.73265076]
[114.46554565 173.41537476]
[111.90067291 177.44407654]
[112.34728241 192.43742371]
[112.79388428 207.43077087]
[113.24049377 222.42413330]
[113.68709564 237.41748047]
[121.83184814 250.98117065]
[114.47692108 263.93316650]
[114.92352295 278.92651367]
[126.14472198 289.73031616]
[126.38405609 304.94207764]
[116.01512146 315.57321167]
[116.46172333 330.56655884]
[116.90833282 345.55990601]
[125.05308533 359.12359619]
[117.69815063 372.07559204]
[118.14476013 387.06893921]
[118.59136200 402.06228638]
[119.14957428 417.05187988]
[119.81935883 432.03692627]
[120.48914337 447.02197266]
[121.15892792 462.00701904]
[121.82871246 476.99203491]
[122.72152710 491.96545410]
[123.83718109 506.92391968]
[124.95282745 521.88238525]
[126.17980194 536.83209229]
[127.51803589 551.77227783]
[128.85627747 566.71246338]
[130.19450378 581.65264893]
[143.91253662 588.71087646]
[151.61712646 602.07666016]
[150.84973145 617.48492432]
[141.85525513 630.01898193]
[127.50379181 635.67926025]
[112.37483978 632.65960693]
[101.29599762 621.92358398]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 203]
[3 202]
[4 201]
[5 200]
[7 199]
[8 198]
[9 197]
[12 196]
[13 195]
[14 194]
[15 193]
[16 192]
[18 191]
[19 190]
[20 189]
[22 187]
[23 186]
[24 185]
[27 182]
[28 181]
[30 179]
[31 178]
[32 177]
[33 176]
[34 175]
[35 172]
[36 171]
[37 170]
[43 164]
[44 163]
[45 162]
[46 157]
[47 156]
[48 155]
[49 151]
[50 150]
[51 149]
[52 148]
[53 147]
[54 143]
[55 142]
[56 141]
[58 139]
[59 138]
[60 137]
[68 128]
[69 127]
[70 126]
[71 125]
[75 121]
[76 120]
[77 119]
[78 118]
[81 117]
[82 116]
[84 114]
[85 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
