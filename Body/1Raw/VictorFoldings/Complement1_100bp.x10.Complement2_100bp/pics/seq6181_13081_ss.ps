%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[6.34154654 791.27404785]
[-7.99039555 795.71936035]
[-22.58479881 799.20782471]
[-37.37784576 801.72406006]
[-52.30485153 803.25708008]
[-67.30053711 803.80023193]
[-82.29933929 803.35113525]
[-97.23566437 801.91174316]
[-112.04420471 799.48834229]
[-126.66019440 796.09149170]
[-141.01972961 791.73614502]
[-155.06002808 786.44122314]
[-168.71968079 780.22998047]
[-181.93896484 773.12951660]
[-194.66006470 765.17095947]
[-206.82736206 756.38897705]
[-218.38764954 746.82208252]
[-229.29039001 736.51208496]
[-239.48788452 725.50408936]
[-248.93556213 713.84613037]
[-257.59210205 701.58929443]
[-265.41964722 688.78717041]
[-272.38397217 675.49566650]
[-278.45462036 661.77294922]
[-283.60504150 647.67901611]
[-287.81274414 633.27551270]
[-291.05929565 618.62542725]
[-293.33050537 603.79278564]
[-294.61645508 588.84246826]
[-294.91149902 573.83984375]
[-294.21438599 558.85052490]
[-292.52810669 543.94000244]
[-289.86010742 529.17358398]
[-286.22198486 514.61578369]
[-281.62969971 500.33026123]
[-276.10330200 486.37945557]
[-269.66699219 472.82440186]
[-262.34884644 459.72436523]
[-254.18093872 447.13665771]
[-245.19895935 435.11627197]
[-235.44216919 423.71578979]
[-224.95324707 412.98507690]
[-213.77804565 402.97103882]
[-201.96545410 393.71749878]
[-189.56710815 385.26486206]
[-176.63723755 377.65014648]
[-163.23236084 370.90661621]
[-149.41111755 365.06378174]
[-135.23393250 360.14715576]
[-120.76279449 356.17828369]
[-106.06099701 353.17449951]
[-91.19281769 351.14892578]
[-76.22327423 350.11044312]
[-61.21782303 350.06356812]
[-46.24208450 351.00851440]
[-31.36153984 352.94116211]
[-16.64126015 355.85305786]
[-2.14561510 359.73144531]
[2.68038249 345.52899170]
[7.50638008 331.32653809]
[-2.41349363 320.21520996]
[-5.46004009 305.53274536]
[-0.71701622 291.20199585]
[10.63684177 281.10314941]
[25.61886597 278.02319336]
[30.44486427 263.82073975]
[35.27086258 249.61828613]
[40.09685898 235.41583252]
[44.92285538 221.21337891]
[49.74885559 207.01092529]
[54.57485199 192.80845642]
[53.45820236 190.23722839]
[53.29276657 187.06875610]
[54.31113434 183.66311646]
[56.61135483 180.45788574]
[60.13399887 177.91920471]
[65.79678345 164.02917480]
[71.45957184 150.13914490]
[77.12236023 136.24913025]
[82.78514862 122.35909271]
[88.44792938 108.46907043]
[86.73600006 94.59243774]
[97.66204071 85.86814117]
[95.70711517 70.16818237]
[107.67665863 61.30368423]
[113.33944702 47.41365814]
[119.00222778 33.52362823]
[119.34412384 24.39559937]
[124.85411072 19.46996880]
[130.72306824 5.66579294]
[136.59204102 -8.13838387]
[123.50341797 -15.49714470]
[111.30378723 -24.25112152]
[100.14122772 -34.29405212]
[90.15123749 -45.50402069]
[81.45510101 -57.74494934]
[74.15837097 -70.86824799]
[68.34962463 -84.71460724]
[64.09937286 -99.11594391]
[61.45921707 -113.89744568]
[60.46120071 -128.87966919]
[61.11743546 -143.88075256]
[63.41996384 -158.71859741]
[67.34082794 -173.21307373]
[72.83243561 -187.18824768]
[79.82812500 -200.47447205]
[88.24297333 -212.91044617]
[97.97483063 -224.34523010]
[108.90556335 -234.63999939]
[120.90248108 -243.66978455]
[133.81994629 -251.32499695]
[147.50115967 -257.51269531]
[161.78005981 -262.15774536]
[176.48327637 -265.20376587]
[191.43235779 -266.61383057]
[206.44581604 -266.37075806]
[221.34141541 -264.47753906]
[235.93833923 -260.95715332]
[250.05938721 -255.85231018]
[263.53314209 -249.22499084]
[276.19601440 -241.15565491]
[287.89434814 -231.74224854]
[298.48611450 -221.09902954]
[307.84271240 -209.35522461]
[315.85058594 -196.65336609]
[322.41253662 -183.14765930]
[327.44888306 -169.00204468]
[330.89849854 -154.38822937]
[332.71951294 -139.48362732]
[332.88980103 -124.46916962]
[331.40731812 -109.52709961]
[328.29006958 -94.83880615]
[323.57586670 -80.58260345]
[317.32192993 -66.93153381]
[309.60421753 -54.05131149]
[300.51638794 -42.09829712]
[290.16876221 -31.21758652]
[278.68695068 -21.54125977]
[266.21035767 -13.18677998]
[252.89038086 -6.25556326]
[238.88876343 -0.83174759]
[224.37544250 3.01882696]
[209.52662659 5.24941778]
[194.52253723 5.83294773]
[179.54531860 4.76233292]
[164.77677917 2.05056977]
[150.39620972 -2.26942325]
[144.52725220 11.53475380]
[138.65829468 25.33893013]
[132.89225769 39.18641663]
[127.22946930 53.07644272]
[121.56668091 66.96646881]
[123.92665100 81.67292786]
[111.55207062 91.53092957]
[113.26399994 105.40756226]
[102.33795929 114.13185883]
[96.67517090 128.02188110]
[91.01238251 141.91191101]
[85.34960175 155.80194092]
[79.68681335 169.69197083]
[74.02402496 183.58198547]
[68.77730560 197.63446045]
[63.95130920 211.83691406]
[59.12531281 226.03936768]
[54.29931641 240.24182129]
[49.47331619 254.44429016]
[44.64731979 268.64672852]
[39.82132339 282.84918213]
[49.82522202 294.41937256]
[52.67579651 309.34490967]
[47.70584488 323.59854126]
[36.34466934 333.38522339]
[21.70883560 336.15252686]
[16.88283730 350.35498047]
[12.05684090 364.55743408]
[25.91445923 370.31350708]
[39.36135864 376.97280884]
[52.33873749 384.50628662]
[64.78984833 392.88098145]
[76.66024780 402.06027222]
[87.89802551 412.00402832]
[98.45404053 422.66876221]
[108.28213501 434.00781250]
[117.33933258 445.97161865]
[125.58603668 458.50787354]
[132.98617554 471.56173706]
[139.50738525 485.07617188]
[145.12117004 498.99203491]
[149.80296326 513.24847412]
[153.53230286 527.78320312]
[156.29287720 542.53259277]
[158.07260132 557.43218994]
[158.86372375 572.41687012]
[158.66276550 587.42102051]
[157.47059631 602.37915039]
[155.29246521 617.22570801]
[152.13784790 631.89587402]
[148.02056885 646.32550049]
[142.95863342 660.45147705]
[136.97416687 674.21197510]
[130.09333801 687.54687500]
[122.34624481 700.39788818]
[113.76675415 712.70880127]
[104.39237976 724.42572021]
[94.26412201 735.49749756]
[83.42626190 745.87567139]
[71.92620087 755.51489258]
[59.81421280 764.37292480]
[47.14327240 772.41119385]
[33.96878433 779.59436035]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 175]
[59 174]
[60 173]
[65 168]
[66 167]
[67 166]
[68 165]
[69 164]
[70 163]
[71 162]
[76 161]
[77 160]
[78 159]
[79 158]
[80 157]
[81 156]
[83 154]
[85 152]
[86 151]
[87 150]
[89 149]
[90 148]
[91 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
