%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[94.01156616 218.14491272]
[94.48404694 233.14634705]
[93.69958496 248.13471985]
[91.66365814 263.00488281]
[88.39057159 277.65252686]
[83.90325928 291.97491455]
[78.23321533 305.87155151]
[71.42021179 319.24502563]
[63.51202393 332.00146484]
[54.56413269 344.05145264]
[44.63929749 355.31039429]
[33.80714035 365.69940186]
[22.14363861 375.14550781]
[9.73060608 383.58251953]
[-3.34488821 390.95123291]
[-16.99112701 397.19998169]
[-31.11239243 402.28491211]
[-45.60962677 406.17034912]
[-60.38114929 408.82904053]
[-75.32334137 410.24237061]
[-90.33139038 410.40042114]
[-105.30002594 409.30203247]
[-120.12425995 406.95495605]
[-134.70008850 403.37564087]
[-148.92529297 398.58920288]
[-162.70008850 392.62918091]
[-175.92785645 385.53744507]
[-188.51579285 377.36367798]
[-200.37561035 368.16525269]
[-211.42411804 358.00665283]
[-221.58383179 346.95916748]
[-230.78347778 335.10028076]
[-238.95852661 322.51318359]
[-246.05162048 309.28616333]
[-252.01303101 295.51196289]
[-256.80093384 281.28726196]
[-260.38171387 266.71176147]
[-262.73031616 251.88778687]
[-263.83023071 236.91926575]
[-263.67370605 221.91119385]
[-262.26190186 206.96885681]
[-259.60470581 192.19706726]
[-255.72074890 177.69943237]
[-250.63726807 163.57765198]
[-244.38992310 149.93077087]
[-237.02253723 136.85453796]
[-228.58679199 124.44063568]
[-219.14184570 112.77617645]
[-208.75396729 101.94295502]
[-197.49601746 92.01697540]
[-185.44696045 83.06785583]
[-172.69131470 75.15837097]
[-159.31854248 68.34400177]
[-145.42247009 62.67253876]
[-131.10054016 58.18377304]
[-116.45323181 54.90918732]
[-101.58328247 52.87175369]
[-86.59499359 52.08575821]
[-71.59350586 52.55671692]
[-56.68403625 54.28132629]
[-41.97117233 57.24748993]
[-27.55811119 61.43439865]
[-13.54595280 66.81269073]
[-0.03298674 73.34463501]
[12.88600349 80.98441315]
[25.12039948 89.67843628]
[36.58438492 99.36573029]
[47.19754410 109.97833252]
[56.88543320 121.44181061]
[69.11192322 112.75198364]
[81.33840942 104.06216431]
[83.85752106 89.79330444]
[95.66791534 81.39921570]
[109.97177124 83.71134949]
[122.19825745 75.02153015]
[134.42474365 66.33170319]
[146.65122986 57.64188004]
[157.83320618 47.64370728]
[167.83137512 36.46173096]
[177.82954407 25.27975655]
[187.82771301 14.09778214]
[197.82588196 2.91580796]
[207.82406616 -8.26616669]
[217.82223511 -19.44814110]
[227.82040405 -30.63011551]
[217.35050964 -41.38009262]
[207.64723206 -52.82678986]
[198.75677490 -64.91565704]
[190.72154236 -77.58908081]
[183.57981873 -90.78667450]
[177.36563110 -104.44553375]
[172.10859680 -118.50057983]
[167.83375549 -132.88482666]
[164.56149292 -147.52970886]
[162.30740356 -162.36547852]
[161.08222961 -177.32139587]
[160.89179993 -192.32620239]
[161.73703003 -207.30841064]
[163.61389160 -222.19659424]
[166.51344299 -236.91981506]
[170.42184448 -251.40791321]
[175.32049561 -265.59185791]
[181.18605042 -279.40402222]
[187.99055481 -292.77859497]
[195.70156860 -305.65185547]
[204.28234863 -317.96246338]
[213.69201660 -329.65170288]
[223.88572693 -340.66394043]
[234.81489563 -350.94665527]
[246.42742920 -360.45083618]
[258.66799927 -369.13119507]
[271.47830200 -376.94638062]
[284.79724121 -383.85916138]
[298.56137085 -389.83657837]
[312.70510864 -394.85012817]
[327.16101074 -398.87594604]
[341.86022949 -401.89483643]
[356.73269653 -403.89239502]
[371.70755005 -404.85916138]
[386.71340942 -404.79046631]
[401.67877197 -403.68664551]
[416.53234863 -401.55297852]
[431.20330811 -398.39962769]
[445.62173462 -394.24163818]
[459.71896362 -389.09878540]
[473.42779541 -382.99560547]
[486.68289185 -375.96118164]
[499.42108154 -368.02902222]
[511.58166504 -359.23693848]
[523.10668945 -349.62683105]
[533.94128418 -339.24447632]
[544.03369141 -328.13937378]
[553.33593750 -316.36447144]
[561.80364990 -303.97579956]
[569.39648438 -291.03250122]
[576.07824707 -277.59616089]
[581.81707764 -263.73086548]
[586.58569336 -249.50268555]
[590.36126709 -234.97940063]
[593.12591553 -220.23025513]
[594.86633301 -205.32550049]
[595.57434082 -190.33619690]
[595.24658203 -175.33375549]
[593.88452148 -160.38967896]
[591.49468994 -145.57518005]
[588.08843994 -130.96086121]
[583.68212891 -116.61635590]
[578.29656982 -102.61003876]
[571.95758057 -89.00864410]
[564.69537354 -75.87699890]
[556.54443359 -63.27767563]
[547.54364014 -51.27071381]
[537.73596191 -39.91334152]
[527.16809082 -29.25967598]
[515.89038086 -19.36049080]
[503.95657349 -10.26295567]
[491.42355347 -2.01042938]
[478.35104370 5.35776281]
[464.80136108 11.80650711]
[450.83901978 17.30507278]
[436.53063965 21.82725525]
[421.94430542 25.35150528]
[407.14962769 27.86102676]
[392.21704102 29.34386253]
[377.21774292 29.79294395]
[362.22320557 29.20613289]
[347.30487061 27.58622360]
[332.53384399 24.94093704]
[317.98052979 21.28288078]
[303.71426392 16.62948418]
[289.80300903 11.00292492]
[276.31311035 4.43001604]
[263.30883789 -3.05791926]
[250.85212708 -11.42519760]
[239.00238037 -20.63194466]
[229.00421143 -9.44996929]
[219.00604248 1.73200536]
[209.00785828 12.91397953]
[199.00968933 24.09595490]
[189.01152039 35.27792740]
[179.01335144 46.45990372]
[169.01518250 57.64188004]
[183.23684692 52.87281799]
[198.22413635 53.49045181]
[212.00517273 59.41352081]
[222.76686096 69.86273956]
[229.09329224 83.46334076]
[230.15213013 98.42591858]
[225.80404663 112.78189850]
[216.62112427 124.64250946]
[203.81153870 132.44726562]
[189.06059265 135.16934204]
[174.30903625 132.45057678]
[161.49769592 124.64868927]
[152.31211853 112.79014587]
[147.96081543 98.43514252]
[149.01629639 83.47232056]
[155.34104919 69.86836243]
[143.11456299 78.55818939]
[130.88807678 87.24801636]
[118.66159058 95.93783569]
[116.14247894 110.20669556]
[104.33208466 118.60078430]
[90.02822876 116.28865051]
[77.80174255 124.97846985]
[65.57525635 133.66830444]
[73.21635437 146.58650208]
[79.74967194 160.09881592]
[85.12939453 174.11041260]
[89.31777191 188.52305603]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 206]
[70 205]
[71 204]
[74 201]
[75 200]
[76 199]
[77 198]
[78 182]
[79 181]
[80 180]
[81 179]
[82 178]
[83 177]
[84 176]
[85 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
