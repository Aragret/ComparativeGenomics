%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[20.25593758 768.78900146]
[5.57118320 771.86584473]
[-9.25755692 774.15002441]
[-24.18752670 775.63494873]
[-39.17567825 776.31640625]
[-54.17880249 776.19226074]
[-69.15363312 775.26306152]
[-84.05699921 773.53137207]
[-98.84592438 771.00219727]
[-113.47777557 767.68286133]
[-127.91036224 763.58294678]
[-142.10206604 758.71417236]
[-156.01197815 753.09069824]
[-169.59999084 746.72869873]
[-182.82691956 739.64654541]
[-195.65463257 731.86456299]
[-208.04612732 723.40527344]
[-219.96571350 714.29302979]
[-231.37898254 704.55413818]
[-242.25306702 694.21667480]
[-252.55657959 683.31042480]
[-262.25982666 671.86682129]
[-271.33480835 659.91882324]
[-279.75540161 647.50103760]
[-287.49731445 634.64910889]
[-294.53820801 621.40014648]
[-300.85778809 607.79235840]
[-306.43783569 593.86492920]
[-311.26226807 579.65814209]
[-315.31716919 565.21282959]
[-318.59085083 550.57067871]
[-321.07385254 535.77392578]
[-322.75906372 520.86523438]
[-323.64157104 505.88760376]
[-323.71887207 490.88415527]
[-322.99069214 475.89819336]
[-321.45919800 460.97293091]
[-319.12875366 446.15139771]
[-316.00610352 431.47631836]
[-312.10025024 416.98999023]
[-307.42245483 402.73422241]
[-301.98617554 388.75009155]
[-295.80712891 375.07791138]
[-288.90310669 361.75711060]
[-281.29403687 348.82611084]
[-273.00180054 336.32217407]
[-264.05038452 324.28137207]
[-254.46556091 312.73840332]
[-244.27494812 301.72656250]
[-233.50796509 291.27758789]
[-222.19563293 281.42163086]
[-210.37055969 272.18707275]
[-198.06686401 263.60058594]
[-185.32000732 255.68685913]
[-172.16674805 248.46878052]
[-158.64500427 241.96711731]
[-144.79377747 236.20063782]
[-130.65298462 231.18595886]
[-116.26339722 226.93754578]
[-101.66651917 223.46763611]
[-86.90443420 220.78625488]
[-72.01970673 218.90110779]
[-57.05524063 217.81764221]
[-42.05419540 217.53898621]
[-27.05981636 218.06593323]
[-12.11533928 219.39697266]
[2.73614669 221.52825928]
[17.45182228 224.45365906]
[31.98925591 228.16473389]
[46.30653381 232.65077209]
[51.55325317 218.59831238]
[56.79997253 204.54583740]
[62.04668808 190.49336243]
[67.29340363 176.44088745]
[72.54012299 162.38842773]
[77.36611938 148.18595886]
[81.76712036 133.84611511]
[86.16812134 119.50627136]
[90.56911469 105.16641998]
[92.12963867 90.24781799]
[90.79140472 75.30763245]
[89.45317078 60.36745071]
[80.51553345 47.31259537]
[87.08650970 33.94578552]
[85.74827576 19.00560188]
[73.90391541 8.88883686]
[72.75959015 -6.28169918]
[82.47737122 -17.51113701]
[81.13913727 -32.45132446]
[79.80090332 -47.39150620]
[78.46266937 -62.33169174]
[63.59619141 -64.91052246]
[49.90414047 -71.25009155]
[38.32005692 -80.91815186]
[29.63376236 -93.25552368]
[24.43750572 -107.42102051]
[23.08557510 -122.44882202]
[25.67014694 -137.31430054]
[32.01499939 -151.00390625]
[41.68753433 -162.58424377]
[54.02825928 -171.26577759]
[68.19576263 -176.45657349]
[83.22408295 -177.80268860]
[98.08855438 -175.21238708]
[111.77571106 -168.86224365]
[123.35232544 -159.18524170]
[132.02908325 -146.84117126]
[137.21440125 -132.67166138]
[138.55473328 -117.64282227]
[135.95867920 -102.77934265]
[129.60325623 -89.09464264]
[119.92178345 -77.52176666]
[107.57435608 -68.84976959]
[93.40285492 -63.66992569]
[94.74108887 -48.72974396]
[96.07932281 -33.78955841]
[97.41755676 -18.84937286]
[108.97633362 -9.52573490]
[110.54631805 5.60667419]
[100.68846130 17.66736794]
[102.02669525 32.60755157]
[110.86861420 44.59378433]
[104.39335632 59.02921295]
[105.73159027 73.96939850]
[107.06982422 88.90958405]
[112.47209167 74.91617584]
[120.81465149 62.45015335]
[131.69046021 52.11976624]
[144.56884766 44.42905426]
[158.82145691 39.75326538]
[173.75288391 38.32054138]
[188.63456726 40.20078659]
[202.74041748 45.30226517]
[215.38217163 53.37605667]
[225.94299316 64.02822876]
[233.90763855 76.73903656]
[238.88745117 90.88829041]
[240.63948059 105.78562164]
[239.07823181 120.70414734]
[234.27987671 134.91596985]
[226.47854614 147.72766113]
[216.05488586 158.51409912]
[203.51748657 166.74900818]
[189.47807312 172.03056335]
[174.62167358 174.10108948]
[159.67314148 172.85955811]
[145.36186218 168.36653137]
[132.38610840 160.84124756]
[121.37900543 150.65087891]
[112.87760162 138.29263306]
[107.29671478 124.36949921]
[104.90896606 109.56742096]
[100.50796509 123.90727234]
[96.10697174 138.24711609]
[91.70597076 152.58695984]
[92.82824707 156.78153992]
[92.58212280 160.71903992]
[91.21645355 164.00086975]
[89.08396912 166.35014343]
[86.59259796 167.63513184]
[81.34587860 181.68760681]
[76.09915924 195.74008179]
[70.85243988 209.79255676]
[65.60572052 223.84501648]
[60.35900497 237.89749146]
[74.11296082 243.89230347]
[87.52530670 250.61672974]
[100.55737305 258.05139160]
[113.17158508 266.17486572]
[125.33156586 274.96371460]
[137.00225830 284.39260864]
[148.15002441 294.43435669]
[158.74270630 305.05999756]
[168.74975586 316.23889160]
[178.14234924 327.93881226]
[186.89337158 340.12603760]
[194.97761536 352.76544189]
[202.37176514 365.82052612]
[209.05450439 379.25369263]
[215.00656128 393.02621460]
[220.21076965 407.09835815]
[224.65211487 421.42956543]
[228.31782532 435.97851562]
[231.19729614 450.70324707]
[233.28225708 465.56130981]
[234.56666565 480.50985718]
[235.04684448 495.50579834]
[234.72138977 510.50592041]
[233.59124756 525.46691895]
[231.65966797 540.34570312]
[228.93225098 555.09936523]
[225.41682434 569.68530273]
[221.12353516 584.06158447]
[216.06475830 598.18664551]
[210.25509644 612.01983643]
[203.71128845 625.52124023]
[196.45220947 638.65191650]
[188.49877930 651.37402344]
[179.87393188 663.65087891]
[170.60253906 675.44708252]
[160.71133423 686.72857666]
[150.22882080 697.46295166]
[139.18524170 707.61914062]
[127.61243439 717.16790771]
[115.54376221 726.08172607]
[103.01402283 734.33489990]
[90.05934906 741.90362549]
[76.71707916 748.76605225]
[63.02569580 754.90240479]
[49.02466583 760.29504395]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 165]
[71 164]
[72 163]
[73 162]
[74 161]
[75 160]
[76 155]
[77 154]
[78 153]
[79 152]
[80 125]
[81 124]
[82 123]
[84 121]
[85 120]
[88 117]
[89 116]
[90 115]
[91 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
