%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[105.10131073 818.30865479]
[90.12460327 817.38629150]
[75.23655701 815.51586914]
[60.49711227 812.70489502]
[45.96562576 808.96484375]
[31.70060539 804.31060791]
[17.75949669 798.76098633]
[4.19843531 792.33837891]
[-8.92797375 785.06860352]
[-21.56687546 776.98089600]
[-33.66737366 768.10784912]
[-45.18074799 758.48522949]
[-56.06063843 748.15179443]
[-66.26322937 737.14904785]
[-75.74744415 725.52142334]
[-84.47508240 713.31567383]
[-92.41101837 700.58093262]
[-99.52328491 687.36846924]
[-105.78324127 673.73156738]
[-111.16568756 659.72509766]
[-115.64894867 645.40539551]
[-119.21496582 630.83026123]
[-121.84938812 616.05822754]
[-123.54160309 601.14886475]
[-124.28480530 586.16217041]
[-124.07598877 571.15856934]
[-122.91600037 556.19836426]
[-120.80950928 541.34191895]
[-117.76499939 526.64892578]
[-113.79473114 512.17864990]
[-108.91469574 497.98928833]
[-103.14453125 484.13800049]
[-96.50748444 470.68060303]
[-89.03026581 457.67120361]
[-80.74300385 445.16226196]
[-71.67904663 433.20413208]
[-61.87491226 421.84490967]
[-51.37006760 411.13040161]
[-40.20681381 401.10372925]
[-28.43009949 391.80526733]
[-16.08735085 383.27243042]
[-3.22826409 375.53961182]
[10.09537983 368.63793945]
[23.82993126 362.59521484]
[37.92008591 357.43576050]
[52.30910492 353.18032837]
[66.93904877 349.84609985]
[81.75101471 347.44644165]
[96.68535614 345.99108887]
[111.68193054 345.48583984]
[112.12853241 330.49249268]
[112.57514191 315.49914551]
[105.22020721 302.54714966]
[113.36495972 288.98345947]
[113.81156921 273.99011230]
[114.25817108 258.99676514]
[113.36535645 244.02334595]
[111.14023590 229.18930054]
[108.91512299 214.35525513]
[99.37545013 202.91656494]
[104.98001099 188.12130737]
[102.75489044 173.28726196]
[100.52977753 158.45321655]
[90.99166107 151.01339722]
[89.01647949 138.67312622]
[96.20164490 127.96163177]
[94.19763184 113.09610748]
[85.80446625 101.91368866]
[90.93683624 88.90790558]
[88.93282318 74.04238129]
[86.92881012 59.17685318]
[84.59332275 44.35978317]
[81.92752838 29.59856796]
[71.86083221 17.39314842]
[77.21308136 3.49340987]
[74.54727936 -11.26780701]
[64.41561890 -19.24979782]
[62.49916077 -31.59933090]
[69.28633118 -41.61236572]
[66.84060669 -56.41163635]
[64.39487457 -71.21090698]
[54.51102066 -83.56484985]
[60.06961823 -97.38336182]
[57.62388992 -112.18263245]
[46.89971542 -101.69492340]
[31.99566078 -103.38875580]
[23.89843559 -116.01551056]
[28.57701492 -130.26721191]
[42.58252335 -135.63803101]
[55.58968353 -128.17016602]
[54.25144958 -143.11035156]
[52.91321564 -158.05053711]
[38.09501266 -160.98268127]
[24.70377159 -167.97206116]
[13.82506275 -178.45205688]
[6.34077311 -191.57312012]
[2.85762048 -206.27156067]
[3.65796852 -221.35586548]
[8.67693615 -235.60319519]
[17.50765991 -247.85861206]
[29.43427086 -257.12860107]
[43.48993301 -262.66168213]
[58.53521347 -264.00933838]
[73.35046387 -261.06228638]
[86.73467255 -254.05946350]
[97.60285187 -243.56854248]
[105.07395172 -230.43997192]
[108.54234314 -215.73803711]
[107.72683716 -200.65455627]
[102.69355774 -186.41226196]
[93.85053253 -174.16572571]
[81.91461182 -164.90773010]
[67.85340118 -159.38876343]
[69.19163513 -144.44857788]
[70.52986908 -129.50839233]
[72.42316437 -114.62835693]
[74.86888885 -99.82908630]
[84.57781219 -88.53369141]
[79.19414520 -73.65663147]
[81.63987732 -58.85736084]
[84.08560181 -44.05809021]
[95.93538666 -31.11399651]
[89.30850220 -13.93360329]
[91.97429657 0.82761437]
[101.85031128 11.97721195]
[96.68874359 26.93277168]
[99.35453796 41.69398880]
[102.02709961 43.99394226]
[103.71842957 47.70263672]
[103.77855682 52.34480286]
[101.79433441 57.17284012]
[103.79835510 72.03836823]
[105.80236816 86.90389252]
[114.19553375 98.08631134]
[109.06316376 111.09209442]
[111.06717682 125.95761871]
[122.65746307 140.26660156]
[115.36382294 156.22810364]
[117.58893585 171.06214905]
[119.81405640 185.89619446]
[129.51287842 198.39591980]
[123.74916840 212.13014221]
[125.97428131 226.96418762]
[128.19940186 241.79823303]
[134.36849976 228.12554932]
[145.80319214 218.41740417]
[160.29559326 214.54830933]
[175.04747009 217.26528931]
[187.21046448 226.04376221]
[194.43609619 239.18873596]
[195.32919312 254.16212463]
[189.71731567 268.07281494]
[178.68403625 278.23483276]
[164.35971069 282.68609619]
[149.51013184 280.56707764]
[137.00253296 272.28701782]
[129.25152588 259.44335938]
[128.80491638 274.43670654]
[128.35830688 289.43005371]
[135.68130493 303.45446777]
[127.56848907 315.94573975]
[127.12188721 330.93908691]
[126.67527771 345.93243408]
[141.61518860 347.32940674]
[156.43643188 349.67111206]
[171.07929993 352.94812012]
[185.48484802 357.14721680]
[199.59507751 362.25155640]
[213.35314941 368.24053955]
[226.70367432 375.09005737]
[239.59291077 382.77252197]
[251.96893311 391.25701904]
[263.78192139 400.50936890]
[274.98428345 410.49230957]
[285.53094482 421.16564941]
[295.37942505 432.48641968]
[304.49008179 444.40905762]
[312.82620239 456.88549805]
[320.35421753 469.86553955]
[327.04385376 483.29687500]
[332.86813354 497.12548828]
[337.80361938 511.29565430]
[341.83044434 525.75030518]
[344.93240356 540.43127441]
[347.09695435 555.27941895]
[348.31542969 570.23492432]
[348.58291626 585.23760986]
[347.89834595 600.22711182]
[346.26443481 615.14294434]
[343.68780518 629.92517090]
[340.17880249 644.51416016]
[335.75158691 658.85125732]
[330.42395020 672.87866211]
[324.21734619 686.53997803]
[317.15679932 699.78009033]
[309.27075195 712.54577637]
[300.59088135 724.78558350]
[291.15222168 736.45025635]
[280.99273682 747.49273682]
[270.15335083 757.86871338]
[258.67767334 767.53625488]
[246.61196899 776.45654297]
[234.00479126 784.59356689]
[220.90692139 791.91467285]
[207.37107849 798.39025879]
[193.45176697 803.99432373]
[179.20506287 808.70428467]
[164.68830872 812.50122070]
[149.95997620 815.36975098]
[135.07934570 817.29840088]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 163]
[51 162]
[52 161]
[54 159]
[55 158]
[56 157]
[57 144]
[58 143]
[59 142]
[61 140]
[62 139]
[63 138]
[66 136]
[67 135]
[69 133]
[70 132]
[71 131]
[72 127]
[73 126]
[75 124]
[76 123]
[79 121]
[80 120]
[81 119]
[83 117]
[84 116]
[90 115]
[91 114]
[92 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
