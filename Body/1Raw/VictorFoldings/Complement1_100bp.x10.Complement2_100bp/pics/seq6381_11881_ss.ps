%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[6.83686829 834.17687988]
[-8.06746483 835.89227295]
[-23.03546906 836.91241455]
[-38.03472519 837.23504639]
[-53.03275299 836.85949707]
[-67.99706268 835.78656006]
[-82.89524841 834.01855469]
[-97.69504547 831.55932617]
[-112.36440277 828.41418457]
[-126.87154388 824.58996582]
[-141.18505859 820.09497070]
[-155.27392578 814.93884277]
[-169.10765076 809.13281250]
[-182.65628052 802.68951416]
[-195.89044189 795.62274170]
[-208.78150940 787.94799805]
[-221.30152893 779.68176270]
[-233.42341614 770.84191895]
[-245.12088013 761.44775391]
[-256.36862183 751.51947021]
[-267.14227295 741.07867432]
[-277.41848755 730.14794922]
[-287.17501831 718.75091553]
[-296.39074707 706.91235352]
[-305.04568481 694.65777588]
[-313.12109375 682.01385498]
[-320.59951782 669.00787354]
[-327.46472168 655.66809082]
[-333.70184326 642.02325439]
[-339.29739380 628.10308838]
[-344.23922729 613.93762207]
[-348.51669312 599.55761719]
[-352.12045288 584.99414062]
[-355.04275513 570.27880859]
[-357.27725220 555.44335938]
[-358.81912231 540.52008057]
[-359.66500854 525.54125977]
[-359.81304932 510.53924561]
[-359.26300049 495.54660034]
[-358.01596069 480.59579468]
[-356.07470703 465.71917725]
[-353.44342041 450.94900513]
[-350.12780762 436.31726074]
[-346.13500977 421.85559082]
[-341.47369385 407.59536743]
[-336.15399170 393.56744385]
[-330.18737793 379.80221558]
[-323.58682251 366.32949829]
[-316.36654663 353.17846680]
[-308.54226685 340.37759399]
[-300.13088989 327.95462036]
[-291.15060425 315.93643188]
[-281.62094116 304.34906006]
[-271.56246948 293.21762085]
[-260.99697876 282.56622314]
[-249.94738770 272.41790771]
[-238.43760681 262.79467773]
[-226.49256897 253.71734619]
[-214.13813782 245.20561218]
[-201.40106201 237.27787781]
[-188.30894470 229.95132446]
[-174.89013672 223.24182129]
[-161.17370605 217.16390991]
[-147.18934631 211.73072815]
[-132.96733093 206.95407104]
[-118.53850555 202.84425354]
[-103.93408203 199.41020203]
[-89.18570709 196.65934753]
[-74.32531738 194.59764099]
[-59.38509369 193.22956848]
[-44.39740372 192.55805969]
[-29.39469910 192.58459473]
[-14.40947628 193.30909729]
[0.52581078 194.73001099]
[15.37881660 196.84426880]
[30.11737061 199.64726257]
[44.70955658 203.13294983]
[59.12376404 207.29376221]
[63.94976425 193.09130859]
[68.77575684 178.88885498]
[73.60176086 164.68640137]
[78.42775726 150.48393250]
[75.19663239 135.94403076]
[86.96251678 125.36695099]
[90.61060333 110.81732941]
[85.86773682 97.66450500]
[94.59012604 86.73694611]
[97.03585052 71.93767548]
[99.48158264 57.13840103]
[92.61851501 46.21772766]
[94.96024323 33.94173050]
[104.71563721 26.78919411]
[107.38143158 12.02797699]
[110.04723358 -2.73323989]
[112.71302795 -17.49445724]
[115.37882233 -32.25567245]
[116.93934631 -47.17427826]
[117.38594818 -62.16762924]
[117.83255768 -77.16098022]
[118.27915955 -92.15432739]
[104.70719147 -99.13747406]
[95.51599121 -111.32290649]
[92.53049469 -126.29119110]
[96.34346008 -141.07037354]
[106.19782257 -152.72601318]
[120.13700104 -158.94390869]
[135.39335632 -158.48947144]
[148.93771362 -151.45292664]
[158.08085632 -139.23139954]
[161.00738525 -124.25147247]
[157.13626099 -109.48742676]
[147.23606873 -97.87067413]
[133.27250671 -91.70772552]
[132.82591248 -76.71437073]
[132.37930298 -61.72102356]
[131.93269348 -46.72767258]
[141.13873291 -58.57034683]
[154.99517822 -64.31481171]
[169.87998962 -62.45948029]
[181.90232849 -53.48933411]
[187.91955566 -39.74914169]
[186.35881042 -24.83056068]
[177.62805176 -12.63327122]
[164.00949097 -6.34561539]
[149.06297302 -7.61117220]
[136.69548035 -16.09912682]
[130.14004517 -29.58987808]
[127.47424316 -14.82866192]
[124.80844879 -0.06744436]
[122.14265442 14.69377327]
[119.47686005 29.45499039]
[126.29203033 45.62657928]
[114.28085327 59.58412933]
[111.83512878 74.38339996]
[109.38939667 89.18267059]
[114.13226318 102.33549500]
[105.40987396 113.26305389]
[115.77445984 102.41983795]
[129.96122742 97.54792023]
[144.80082703 99.73570251]
[156.97804260 108.49443817]
[163.77246094 121.86738586]
[163.66618347 136.86701965]
[156.68296814 150.14234924]
[144.38287354 158.72766113]
[129.51376343 160.70497131]
[115.39745331 155.63252258]
[105.18754578 144.64353943]
[101.16497040 130.19294739]
[104.05091095 145.74871826]
[92.63021088 155.30993652]
[87.80421448 169.51239014]
[82.97821808 183.71484375]
[78.15222168 197.91729736]
[73.32621765 212.11976624]
[87.29132843 217.60224915]
[100.98623657 223.72851562]
[114.38128662 230.48532104]
[127.44747162 237.85803223]
[140.15649414 245.83064270]
[152.48080444 254.38592529]
[164.39375305 263.50534058]
[175.86950684 273.16912842]
[186.88322449 283.35638428]
[197.41105652 294.04498291]
[207.43019104 305.21185303]
[216.91893005 316.83276367]
[225.85671997 328.88256836]
[234.22422791 341.33514404]
[242.00329590 354.16354370]
[249.17710876 367.33996582]
[255.73011780 380.83590698]
[261.64810181 394.62210083]
[266.91830444 408.66870117]
[271.52923584 422.94528198]
[275.47097778 437.42092896]
[278.73498535 452.06430054]
[281.31414795 466.84365845]
[283.20288086 481.72702026]
[284.39712524 496.68215942]
[284.89431763 511.67663574]
[284.69329834 526.67803955]
[283.79458618 541.65380859]
[282.20007324 556.57153320]
[279.91326904 571.39898682]
[276.93905640 586.10394287]
[273.28390503 600.65460205]
[268.95574951 615.01940918]
[263.96395874 629.16735840]
[258.31933594 643.06774902]
[252.03408813 656.69042969]
[245.12185669 670.00592041]
[237.59761047 682.98541260]
[229.47763062 695.60076904]
[220.77949524 707.82470703]
[211.52206421 719.63073730]
[201.72538757 730.99322510]
[191.41067505 741.88769531]
[180.60025024 752.29040527]
[169.31755066 762.17889404]
[157.58700562 771.53173828]
[145.43400574 780.32873535]
[132.88488770 788.55072021]
[119.96683502 796.17999268]
[106.70781708 803.20001221]
[93.13654327 809.59545898]
[79.28241730 815.35266113]
[65.17543793 820.45898438]
[50.84615707 824.90350342]
[36.32561111 828.67651367]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[78 155]
[79 154]
[80 153]
[81 152]
[82 151]
[84 149]
[85 137]
[87 135]
[88 134]
[89 133]
[92 131]
[93 130]
[94 129]
[95 128]
[96 127]
[97 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
