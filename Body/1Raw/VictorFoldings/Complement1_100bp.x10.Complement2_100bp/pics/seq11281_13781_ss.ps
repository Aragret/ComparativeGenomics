%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUGxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[91.56572723 869.12634277]
[76.62372589 867.77593994]
[61.76365280 865.71075439]
[47.01968765 862.93542480]
[32.42573929 859.45642090]
[18.01537514 855.28167725]
[3.82174087 850.42083740]
[-10.12251854 844.88513184]
[-23.78532982 838.68719482]
[-37.13526917 831.84130859]
[-50.14163208 824.36322021]
[-62.77450180 816.27014160]
[-75.00482178 807.58074951]
[-86.80445862 798.31494141]
[-98.14628601 788.49401855]
[-109.00420380 778.14062500]
[-119.35324097 767.27856445]
[-129.16958618 755.93286133]
[-138.43069458 744.12945557]
[-147.11521912 731.89569092]
[-155.20321655 719.25958252]
[-162.67608643 706.25024414]
[-169.51661682 692.89752197]
[-175.70909119 679.23223877]
[-181.23925781 665.28576660]
[-186.09440613 651.09020996]
[-190.26336670 636.67816162]
[-193.73654175 622.08282471]
[-196.50595093 607.33776855]
[-198.56523132 592.47686768]
[-199.90963745 577.53430176]
[-200.53607178 562.54449463]
[-200.44309998 547.54187012]
[-199.63095093 532.56097412]
[-198.10145569 517.63629150]
[-195.85816956 502.80203247]
[-192.90623474 488.09240723]
[-189.25244141 473.54122925]
[-184.90519714 459.18197632]
[-179.87449646 445.04766846]
[-174.17190552 431.17077637]
[-167.81056213 417.58328247]
[-160.80506897 404.31640625]
[-153.17155457 391.40066528]
[-144.92758179 378.86575317]
[-136.09210205 366.74053955]
[-126.68544006 355.05285645]
[-116.72923279 343.82965088]
[-106.24637604 333.09667969]
[-95.26097870 322.87866211]
[-83.79831696 313.19906616]
[-71.88475037 304.08020020]
[-59.54768372 295.54299927]
[-46.81548691 287.60711670]
[-33.71744919 280.29083252]
[-20.28369141 273.61093140]
[-6.54511833 267.58279419]
[7.46667480 262.22027588]
[21.71945953 257.53570557]
[36.18045425 253.53990173]
[50.81639862 250.24200439]
[65.59362793 247.64962769]
[80.47814941 245.76872253]
[95.43573761 244.60362244]
[94.98913574 229.61027527]
[94.54252625 214.61692810]
[94.09592438 199.62356567]
[90.75466156 193.03132629]
[93.75595856 184.40403748]
[93.53263092 169.40570068]
[93.30930328 154.40736389]
[78.27105713 150.32672119]
[64.98852539 142.17965698]
[54.53495407 130.62443542]
[47.75498962 116.59473419]
[45.19646454 101.22416687]
[47.06610489 85.75468445]
[53.21284866 71.43623352]
[63.14002991 59.42576218]
[76.04552460 50.69371796]
[90.88655853 45.94566345]
[90.43995667 30.95231247]
[87.05642700 22.46764755]
[90.09999084 15.73277473]
[89.87666321 0.73443764]
[89.65333557 -14.26389980]
[89.43000793 -29.26223755]
[89.20668030 -44.26057434]
[80.51204681 -53.78770447]
[80.63481140 -66.28444672]
[88.96376801 -75.05685425]
[88.96376801 -90.05685425]
[88.96376801 -105.05685425]
[88.96376801 -120.05685425]
[88.96376801 -135.05685425]
[88.96376801 -150.05685425]
[88.96376801 -165.05685425]
[74.71109772 -170.21797180]
[63.08516693 -179.94493103]
[55.48986435 -193.06312561]
[52.84236145 -207.98849487]
[55.46235275 -222.91871643]
[63.03346634 -236.05088806]
[74.64144897 -245.79924011]
[88.88459015 -250.98663330]
[104.04294586 -250.98663330]
[118.28607941 -245.79924011]
[129.89405823 -236.05088806]
[137.46517944 -222.91871643]
[140.08517456 -207.98849487]
[137.43766785 -193.06312561]
[129.84236145 -179.94493103]
[118.21643829 -170.21797180]
[103.96376801 -165.05685425]
[103.96376801 -150.05685425]
[103.96376801 -135.05685425]
[103.96376801 -120.05685425]
[103.96376801 -105.05685425]
[103.96376801 -90.05685425]
[103.96376801 -75.05685425]
[113.54445648 -60.35388565]
[104.20501709 -44.48390198]
[104.42834473 -29.48556519]
[104.65167236 -14.48722744]
[104.87500000 0.51110995]
[105.09832764 15.50944710]
[105.43330383 30.50570679]
[105.87991333 45.49905777]
[119.79562378 48.88190460]
[132.36024475 55.75363922]
[142.71624756 65.64525604]
[150.15679932 77.88162994]
[154.17407227 91.62761688]
[154.49388123 105.94503021]
[151.09440613 119.85668945]
[144.20765686 132.41310120]
[134.30368042 142.75726318]
[122.05841827 150.18318176]
[108.30764008 154.18403625]
[108.53096771 169.18237305]
[108.75429535 184.18070984]
[109.08927155 199.17697144]
[109.53588104 214.17031860]
[109.98248291 229.16366577]
[110.42909241 244.15701294]
[125.42950439 244.42976379]
[140.39959717 245.42138672]
[155.30493164 247.12960815]
[170.11122131 249.55050659]
[184.78440857 252.67851257]
[199.29075623 256.50640869]
[213.59687805 261.02542114]
[227.66990662 266.22515869]
[241.47743225 272.09362793]
[254.98773193 278.61734009]
[268.16970825 285.78131104]
[280.99304199 293.56906128]
[293.42825317 301.96264648]
[305.44671631 310.94277954]
[317.02084351 320.48883057]
[328.12393188 330.57882690]
[338.73052979 341.18954468]
[348.81616211 352.29660034]
[358.35769653 363.87445068]
[367.33312988 375.89642334]
[375.72186279 388.33493042]
[383.50460815 401.16131592]
[390.66342163 414.34606934]
[397.18185425 427.85891724]
[403.04492188 441.66873169]
[408.23913574 455.74380493]
[412.75256348 470.05169678]
[416.57479858 484.55953979]
[419.69705200 499.23394775]
[422.11215210 514.04119873]
[423.81457520 528.94720459]
[424.80032349 543.91766357]
[425.06723022 558.91815186]
[424.61459351 573.91424561]
[423.44351196 588.87133789]
[421.55664062 603.75512695]
[418.95834351 618.53131104]
[415.65460205 633.16595459]
[411.65301514 647.62536621]
[406.96273804 661.87622070]
[401.59463501 675.88592529]
[395.56097412 689.62207031]
[388.87570190 703.05316162]
[381.55416870 716.14825439]
[373.61318970 728.87725830]
[365.07107544 741.21093750]
[355.94741821 753.12084961]
[346.26324463 764.57965088]
[336.04083252 775.56091309]
[325.30368042 786.03948975]
[314.07647705 795.99121094]
[302.38504028 805.39318848]
[290.25625610 814.22381592]
[277.71807861 822.46276855]
[264.79925537 830.09112549]
[251.52958679 837.09130859]
[237.93954468 843.44720459]
[224.06039429 849.14422607]
[209.92407227 854.16925049]
[195.56306458 858.51080322]
[181.01043701 862.15875244]
[166.29962158 865.10479736]
[151.46449280 867.34216309]
[136.53915405 868.86566162]
[121.55792999 869.67181396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 145]
[65 144]
[66 143]
[67 142]
[69 141]
[70 140]
[71 139]
[81 128]
[82 127]
[84 126]
[85 125]
[86 124]
[87 123]
[88 122]
[91 120]
[92 119]
[93 118]
[94 117]
[95 116]
[96 115]
[97 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
