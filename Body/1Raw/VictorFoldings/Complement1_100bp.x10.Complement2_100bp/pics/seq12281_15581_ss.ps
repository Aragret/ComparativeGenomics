%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAUxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[124.69915009 221.88270569]
[136.97494507 213.18676758]
[130.69758606 199.56344604]
[124.42022705 185.94012451]
[118.14286804 172.31681824]
[111.94595337 185.97691345]
[97.95403290 191.38304138]
[84.18231201 185.43830872]
[78.51985931 171.54815674]
[84.21038818 157.66946411]
[97.99409485 151.75259399]
[111.97436523 157.18634033]
[106.93745422 143.05731201]
[96.14639282 137.59109497]
[91.83441925 125.86119080]
[96.82504272 113.96764374]
[86.43765259 104.60848999]
[88.97250366 90.85835266]
[84.14650726 76.65589905]
[79.32050323 62.45344543]
[64.37026215 64.20526886]
[49.38832855 62.81081772]
[35.02935791 58.33345413]
[21.92026329 50.97121429]
[10.63286495 41.04802322]
[1.65893400 28.99945641]
[-4.61122227 15.35362339]
[-7.90574169 0.70800436]
[-8.08299160 -14.29669666]
[-5.13765478 -29.00458527]
[0.79914021 -42.77324677]
[9.46565914 -55.00180435]
[20.48109818 -65.15715027]
[33.36231613 -72.79717255]
[28.53631783 -86.99962616]
[22.81229973 -94.11815643]
[23.74590683 -101.44960785]
[19.13189697 -115.72234344]
[14.51788807 -129.99507141]
[9.90387821 -144.26780701]
[4.65716028 -158.32028198]
[-1.21180058 -172.12445068]
[-7.08076143 -185.92863464]
[-12.94972229 -199.73280334]
[-27.10978889 -194.76779175]
[-41.56154251 -190.72976685]
[-56.24437332 -187.63566589]
[-71.09669495 -185.49847412]
[-86.05619812 -184.32716370]
[-101.06015778 -184.12663269]
[-116.04562378 -184.89773560]
[-130.94975281 -186.63723755]
[-145.71003723 -189.33782959]
[-160.26454163 -192.98818970]
[-174.55224609 -197.57299805]
[-188.51319885 -203.07304382]
[-202.08886719 -209.46525574]
[-215.22229004 -216.72280884]
[-227.85838318 -224.81527710]
[-239.94415283 -233.70869446]
[-251.42890930 -243.36578369]
[-262.26446533 -253.74603271]
[-272.40539551 -264.80587769]
[-281.80917358 -276.49896240]
[-290.43630981 -288.77624512]
[-298.25064087 -301.58621216]
[-305.21939087 -314.87512207]
[-311.31335449 -328.58724976]
[-316.50692749 -342.66510010]
[-320.77838135 -357.04959106]
[-324.10974121 -371.68041992]
[-326.48706055 -386.49618530]
[-327.90039062 -401.43478394]
[-328.34375000 -416.43353271]
[-327.81533813 -431.42950439]
[-326.31732178 -446.35983276]
[-323.85601807 -461.16189575]
[-320.44174194 -475.77359009]
[-316.08880615 -490.13363647]
[-310.81546021 -504.18179321]
[-304.64385986 -517.85913086]
[-297.59985352 -531.10833740]
[-289.71298218 -543.87377930]
[-281.01635742 -556.10192871]
[-271.54644775 -567.74151611]
[-261.34295654 -578.74365234]
[-250.44871521 -589.06231689]
[-238.90937805 -598.65411377]
[-226.77336121 -607.47888184]
[-214.09158325 -615.49951172]
[-200.91722107 -622.68249512]
[-187.30552673 -628.99761963]
[-173.31359863 -634.41839600]
[-159.00012207 -638.92211914]
[-144.42515564 -642.48986816]
[-129.64979553 -645.10675049]
[-114.73604584 -646.76165771]
[-99.74644470 -647.44781494]
[-84.74386597 -647.16217041]
[-69.79123688 -645.90606689]
[-54.95127869 -643.68469238]
[-40.28623199 -640.50738525]
[-25.85760689 -636.38745117]
[-11.72592354 -631.34222412]
[2.04954362 -625.39282227]
[15.41101551 -618.56420898]
[28.30245018 -610.88500977]
[40.66977310 -602.38745117]
[52.46111679 -593.10723877]
[63.62701797 -583.08319092]
[74.12064362 -572.35736084]
[83.89797974 -560.97479248]
[92.91802216 -548.98321533]
[101.14292908 -536.43292236]
[108.53820801 -523.37658691]
[115.07283783 -509.86889648]
[120.71941376 -495.96655273]
[125.45423889 -481.72787476]
[129.25747681 -467.21255493]
[132.11314392 -452.48150635]
[134.00929260 -437.59646606]
[134.93795776 -422.61993408]
[134.89523315 -407.61471558]
[133.88131714 -392.64370728]
[131.90045166 -377.76974487]
[128.96095276 -363.05517578]
[125.07513428 -348.56176758]
[120.25930786 -334.35025024]
[114.53367615 -320.48028564]
[107.92224121 -307.01004028]
[100.45274353 -293.99597168]
[92.15650940 -281.49270630]
[83.06834412 -269.55270386]
[73.22635651 -258.22601318]
[62.67182922 -247.56011963]
[51.44903183 -237.59980774]
[39.60504532 -228.38684082]
[27.18953896 -219.95985413]
[14.25459003 -212.35420227]
[0.85445476 -205.60177612]
[6.72341537 -191.79759216]
[12.59237671 -177.99340820]
[18.46133804 -164.18923950]
[25.06221390 -177.65878296]
[39.20889282 -182.64590454]
[52.79750824 -176.29379272]
[58.04389191 -162.24119568]
[51.94266891 -148.53808594]
[37.98890305 -143.03424072]
[24.17661095 -148.88182068]
[28.79062080 -134.60908508]
[33.40462875 -120.33634949]
[38.01863861 -106.06361389]
[42.73877335 -91.82563019]
[47.56476974 -77.62316895]
[62.43397141 -79.41275024]
[77.35612488 -78.07099915]
[91.67875671 -73.65415955]
[104.77509308 -66.35295868]
[116.07150269 -56.48442078]
[125.07261658 -44.47807312]
[131.38304138 -30.85725784]
[134.72473145 -16.21632957]
[134.94924927 -1.19471526]
[132.04435730 13.55101967]
[126.13464355 27.37585831]
[117.47618103 39.67454910]
[106.44544983 49.90811157]
[93.52296448 57.62744522]
[98.34896088 71.82990265]
[103.17495728 86.03235626]
[113.56234741 95.39151001]
[111.02749634 109.14164734]
[125.15370178 120.95401001]
[121.06648254 138.02040100]
[126.10339355 152.14942932]
[131.76618958 166.03945923]
[138.04354858 179.66276550]
[144.32090759 193.28608704]
[150.59826660 206.90940857]
[165.18457031 203.22779846]
[180.19903564 202.28935242]
[195.13024902 204.12602234]
[209.46968079 208.67526245]
[222.72892761 215.78210449]
[234.45637512 225.20449829]
[244.25259399 236.62153625]
[251.78393555 249.64433289]
[256.79388428 263.82937622]
[259.11178589 278.69348145]
[258.65872192 293.73040771]
[255.45011902 308.42800903]
[249.59524536 322.28570557]
[241.29351807 334.83145142]
[230.82769775 345.63800049]
[218.55424500 354.33724976]
[204.89118958 360.63290405]
[190.30389404 364.31057739]
[175.28918457 365.24496460]
[160.35845947 363.40426636]
[146.02026367 358.85119629]
[132.76293945 351.74078369]
[121.03802490 342.31521606]
[111.24488068 330.89553833]
[103.71704865 317.87069702]
[98.71092224 303.68432617]
[96.39701080 288.81958008]
[96.85412598 273.78277588]
[100.06670380 259.08602905]
[105.92531586 245.22993469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 180]
[3 179]
[4 178]
[5 177]
[12 176]
[13 175]
[16 173]
[18 171]
[19 170]
[20 169]
[34 155]
[35 154]
[37 153]
[38 152]
[39 151]
[40 150]
[41 143]
[42 142]
[43 141]
[44 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
