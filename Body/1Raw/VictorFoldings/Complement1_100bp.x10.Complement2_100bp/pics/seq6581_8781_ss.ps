%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[85.29847717 499.94052124]
[70.40794373 498.05938721]
[55.72704697 494.93884277]
[41.35876083 490.60076904]
[27.40387154 485.07559204]
[13.96026325 478.40206909]
[1.12223506 470.62698364]
[-11.02016163 461.80493164]
[-22.38175583 451.99777222]
[-32.88285446 441.27426147]
[-42.44979477 429.70965576]
[-51.01547241 417.38504028]
[-58.51980591 404.38693237]
[-64.91015625 390.80642700]
[-70.14170074 376.73880005]
[-74.17773438 362.28277588]
[-76.98995972 347.53970337]
[-78.55863953 332.61303711]
[-78.87277985 317.60745239]
[-77.93017578 302.62817383]
[-75.73742676 287.78033447]
[-72.30992889 273.16806030]
[-67.67171478 258.89382935]
[-61.85532761 245.05778503]
[-54.90155411 231.75697327]
[-46.85918045 219.08470154]
[-37.78461456 207.12983704]
[-27.74150848 195.97624207]
[-16.80031013 185.70216370]
[-5.03776598 176.37965393]
[7.46361828 168.07412720]
[20.61615181 160.84381104]
[34.32757950 154.73944092]
[48.50172424 149.80383301]
[63.03915787 146.07160950]
[77.83791351 143.56893921]
[92.79418945 142.31340027]
[92.79418945 127.31339264]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[92.09580994 72.91117859]
[91.87248230 57.91284180]
[83.93058014 44.22939682]
[91.47753143 31.38833809]
[91.25420380 16.39000130]
[91.03087616 1.39166355]
[90.47266388 -13.59794617]
[89.57984924 -28.57135201]
[88.68703461 -43.54475784]
[87.79421234 -58.51816177]
[86.90139771 -73.49156952]
[86.00858307 -88.46497345]
[85.11576843 -103.43837738]
[84.22295380 -118.41178894]
[69.21791840 -118.48001862]
[54.24808884 -119.50948334]
[39.37496948 -121.49595642]
[24.65968895 -124.43128204]
[10.16270733 -128.30339050]
[-4.05640078 -133.09635925]
[-17.93920517 -138.79051208]
[-31.42865944 -145.36245728]
[-44.46932983 -152.78515625]
[-57.00763321 -161.02813721]
[-68.99204254 -170.05751038]
[-80.37331390 -179.83618164]
[-91.10467529 -190.32395935]
[-101.14202881 -201.47775269]
[-110.44412994 -213.25172424]
[-118.97276306 -225.59750366]
[-126.69287109 -238.46435547]
[-133.57272339 -251.79937744]
[-139.58407593 -265.54782104]
[-144.70219421 -279.65316772]
[-148.90606689 -294.05743408]
[-152.17840576 -308.70144653]
[-154.50578308 -323.52505493]
[-155.87861633 -338.46731567]
[-156.29127502 -353.46682739]
[-155.74206543 -368.46194458]
[-154.23324585 -383.39108276]
[-151.77099609 -398.19287109]
[-148.36544800 -412.80648804]
[-144.03059387 -427.17190552]
[-138.78425598 -441.23004150]
[-132.64799500 -454.92318726]
[-125.64699554 -468.19500732]
[-117.81005859 -480.99102783]
[-109.16938019 -493.25863647]
[-99.76045227 -504.94744873]
[-89.62196350 -516.00939941]
[-78.79555511 -526.39904785]
[-67.32572174 -536.07366943]
[-55.25959396 -544.99353027]
[-42.64676285 -553.12200928]
[-29.53904724 -560.42565918]
[-15.99031448 -566.87451172]
[-2.05623984 -572.44201660]
[12.20591831 -577.10534668]
[26.73755455 -580.84527588]
[41.47895432 -583.64654541]
[56.36954117 -585.49749756]
[71.34812164 -586.39062500]
[86.35315704 -586.32220459]
[101.32297516 -585.29260254]
[116.19606781 -583.30596924]
[130.91131592 -580.37048340]
[145.40826416 -576.49816895]
[159.62731934 -571.70507812]
[173.51005554 -566.01074219]
[186.99943542 -559.43865967]
[200.04002380 -552.01580811]
[212.57823181 -543.77270508]
[224.56254578 -534.74322510]
[235.94371033 -524.96441650]
[246.67495728 -514.47650146]
[256.71218872 -503.32260132]
[266.01416016 -491.54852295]
[274.54266357 -479.20263672]
[282.26260376 -466.33572388]
[289.14233398 -453.00061035]
[295.15350342 -439.25210571]
[300.27148438 -425.14669800]
[304.47518921 -410.74240112]
[307.74737549 -396.09832764]
[310.07458496 -381.27471924]
[311.44726562 -366.33242798]
[311.85974121 -351.33291626]
[311.31036377 -336.33779907]
[309.80139160 -321.40866089]
[307.33895874 -306.60690308]
[303.93325806 -291.99331665]
[299.59826660 -277.62796021]
[294.35174561 -263.56988525]
[288.21533203 -249.87681580]
[281.21420288 -236.60505676]
[273.37710571 -223.80912781]
[264.73629761 -211.54161072]
[255.32723999 -199.85292053]
[245.18862915 -188.79109192]
[234.36210632 -178.40156555]
[222.89216614 -168.72706604]
[210.82594299 -159.80731201]
[198.21301270 -151.67898560]
[185.10522461 -144.37545776]
[171.55641174 -137.92677307]
[157.62228394 -132.35940552]
[143.36007690 -127.69625854]
[128.82839966 -123.95646667]
[114.08696747 -121.15541077]
[99.19635773 -119.30460358]
[100.08917236 -104.33119965]
[100.98198700 -89.35778809]
[101.87480927 -74.38438416]
[102.76762390 -59.41098022]
[103.66043854 -44.43757248]
[104.55325317 -29.46416855]
[105.44606781 -14.49076176]
[107.82638550 -11.88952446]
[109.06502533 -8.00612164]
[108.57309723 -3.38970542]
[106.02921295 1.16833591]
[106.25254059 16.16667366]
[106.47586823 31.16501045]
[114.40180206 43.77567673]
[106.87081909 57.68951416]
[107.09414673 72.68785095]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[110.93769073 120.62458038]
[107.79418945 127.31339264]
[107.79418945 142.31340027]
[122.75046539 143.56893921]
[137.54922485 146.07160950]
[152.08665466 149.80383301]
[166.26080322 154.73944092]
[179.97222900 160.84381104]
[193.12475586 168.07412720]
[205.62614441 176.37965393]
[217.38868713 185.70216370]
[228.32989502 195.97624207]
[238.37300110 207.12983704]
[247.44755554 219.08470154]
[255.48992920 231.75697327]
[262.44369507 245.05778503]
[268.26010132 258.89382935]
[272.89831543 273.16806030]
[276.32580566 287.78033447]
[278.51855469 302.62817383]
[279.46115112 317.60745239]
[279.14703369 332.61303711]
[277.57833862 347.53970337]
[274.76611328 362.28277588]
[270.73007202 376.73880005]
[265.49853516 390.80642700]
[259.10818481 404.38693237]
[251.60385132 417.38504028]
[243.03817749 429.70965576]
[233.47123718 441.27426147]
[222.97013855 451.99777222]
[211.60853577 461.80493164]
[199.46614075 470.62698364]
[186.62811279 478.40206909]
[173.18450928 485.07559204]
[159.22961426 490.60076904]
[144.86132812 494.93884277]
[130.18043518 498.05938721]
[115.28990936 499.94052124]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 174]
[38 173]
[39 171]
[41 169]
[42 168]
[43 167]
[45 165]
[46 164]
[47 163]
[48 159]
[49 158]
[50 157]
[51 156]
[52 155]
[53 154]
[54 153]
[55 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
