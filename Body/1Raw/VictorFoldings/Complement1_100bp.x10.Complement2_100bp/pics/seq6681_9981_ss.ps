%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[69.96309662 855.72943115]
[54.96712875 855.24584961]
[40.01994705 853.94403076]
[25.16616249 851.82788086]
[10.45010281 848.90380859]
[-4.08431387 845.18041992]
[-18.39371109 840.66882324]
[-32.43538284 835.38262939]
[-46.16742325 829.33746338]
[-59.54885101 822.55139160]
[-72.53973389 815.04473877]
[-85.10128784 806.83984375]
[-97.19604492 797.96124268]
[-108.78789520 788.43542480]
[-119.84224701 778.29071045]
[-130.32611084 767.55755615]
[-140.20819092 756.26782227]
[-149.45901489 744.45532227]
[-158.05094910 732.15527344]
[-165.95837402 719.40435791]
[-173.15766907 706.24066162]
[-179.62738037 692.70349121]
[-185.34815979 678.83319092]
[-190.30296326 664.67114258]
[-194.47698975 650.25970459]
[-197.85780334 635.64178467]
[-200.43528748 620.86108398]
[-202.20175171 605.96166992]
[-203.15194702 590.98803711]
[-203.28302002 575.98480225]
[-202.59457397 560.99688721]
[-201.08868408 546.06884766]
[-198.76982117 531.24536133]
[-195.64492798 516.57061768]
[-191.72331238 502.08843994]
[-187.01669312 487.84201050]
[-181.53910828 473.87387085]
[-175.30690002 460.22570801]
[-168.33868408 446.93823242]
[-160.65524292 434.05114746]
[-152.27951050 421.60284424]
[-143.23648071 409.63052368]
[-133.55314636 398.16989136]
[-123.25839996 387.25515747]
[-112.38297272 376.91891479]
[-100.95932007 367.19201660]
[-89.02153015 358.10342407]
[-76.60523987 349.68032837]
[-63.74748993 341.94787598]
[-50.48666382 334.92907715]
[-36.86233521 328.64492798]
[-22.91516113 323.11416626]
[-8.68676949 318.35330200]
[5.78037786 314.37655640]
[20.44310379 311.19580078]
[35.25765228 308.82049561]
[50.17980576 307.25772095]
[65.16503143 306.51220703]
[80.16861725 306.58612061]
[81.06143188 291.61270142]
[81.95424652 276.63931274]
[82.84706116 261.66589355]
[83.73987579 246.69250488]
[84.63269806 231.71908569]
[70.69315338 226.31076050]
[59.09206009 216.84582520]
[50.97350311 204.24150085]
[47.14314270 189.72532654]
[47.98825836 174.71571350]
[53.43865204 160.68331909]
[62.97227859 149.00691223]
[75.66522980 140.83798218]
[90.28125763 136.98710632]
[91.17407227 122.01370239]
[92.06688690 107.04029846]
[92.40186310 92.04403687]
[92.17853546 77.04570007]
[91.95520782 62.04735947]
[91.73188019 47.04902267]
[76.01818848 40.12301254]
[64.94846344 27.06725883]
[60.71288681 10.53972721]
[64.11672211 -6.12242603]
[74.42775726 -19.57665634]
[89.53310394 -27.14556503]
[88.86331940 -42.13060379]
[88.19353485 -57.11564255]
[87.52375031 -72.10067749]
[86.85396576 -87.08571625]
[76.58648682 -102.37167358]
[85.27505493 -117.61882782]
[84.38224030 -132.59222412]
[83.48942566 -147.56564331]
[68.76509094 -150.93768311]
[55.58788681 -158.32266235]
[45.02603149 -169.12191772]
[37.93572235 -182.45999146]
[34.89173889 -197.25563049]
[36.14085007 -212.30941772]
[41.58178711 -226.40100098]
[50.77348709 -238.38804626]
[62.97080994 -247.29882812]
[77.18498230 -252.41098022]
[92.26371765 -253.31007385]
[106.98465729 -249.92323303]
[120.15443420 -242.52500916]
[130.70542908 -231.71516418]
[137.78234863 -218.36996460]
[140.81146240 -203.57128906]
[139.54722595 -188.51875305]
[134.09213257 -174.43264771]
[124.88839722 -162.45483398]
[112.68212891 -153.55632019]
[98.46282959 -148.45845032]
[99.35564423 -133.48504639]
[100.24845886 -118.51164246]
[109.08479309 -110.25054169]
[109.95115662 -97.78325653]
[101.83900452 -87.75550842]
[102.50878906 -72.77046967]
[103.17857361 -57.78542709]
[103.84835815 -42.80038834]
[104.51814270 -27.81534958]
[116.83880615 -23.69889832]
[127.05238342 -15.62069702]
[133.92973328 -4.52523518]
[136.63383484 8.27827549]
[134.82157898 21.27037239]
[128.68719482 32.90166855]
[118.94161987 41.77761078]
[106.73021698 46.82569504]
[106.95354462 61.82403183]
[107.17687225 76.82237244]
[107.40019989 91.82070923]
[119.56148529 83.03986359]
[134.04937744 86.92584991]
[140.18395996 100.61405945]
[133.44302368 114.01405334]
[118.79575348 117.24785614]
[107.04029846 107.93311310]
[106.14747620 122.90651703]
[105.25466156 137.87992859]
[119.30952454 143.44035339]
[130.94181824 153.05972290]
[139.02037048 165.78628540]
[142.76466370 180.36692810]
[141.82019043 195.37060547]
[136.29199219 209.32876587]
[126.73316956 220.87905884]
[114.08955383 228.89834595]
[99.60610199 232.61190796]
[98.71328735 247.58531189]
[97.82046509 262.55871582]
[96.92765045 277.53213501]
[96.03483582 292.50552368]
[95.14202118 307.47894287]
[110.04808044 309.18844604]
[124.83853912 311.70938110]
[139.46925354 315.03427124]
[153.89657593 319.15319824]
[168.07743835 324.05380249]
[181.96951294 329.72152710]
[195.53135681 336.13943481]
[208.72247314 343.28836060]
[221.50352478 351.14697266]
[233.83633423 359.69183350]
[245.68411255 368.89739990]
[257.01150513 378.73626709]
[267.78469849 389.17901611]
[277.97155762 400.19451904]
[287.54165649 411.74984741]
[296.46646118 423.81057739]
[304.71929932 436.34066772]
[312.27557373 449.30276489]
[319.11270142 462.65814209]
[325.21032715 476.36697388]
[330.55020142 490.38833618]
[335.11642456 504.68038940]
[338.89535522 519.20043945]
[341.87570190 533.90521240]
[344.04861450 548.75079346]
[345.40753174 563.69293213]
[345.94848633 578.68688965]
[345.66979980 593.68811035]
[344.57232666 608.65167236]
[342.65933228 623.53295898]
[339.93655396 638.28759766]
[336.41207886 652.87152100]
[332.09643555 667.24121094]
[327.00253296 681.35382080]
[321.14553833 695.16717529]
[314.54296875 708.64007568]
[307.21447754 721.73229980]
[299.18197632 734.40478516]
[290.46945190 746.61968994]
[281.10284424 758.34057617]
[271.11016846 769.53253174]
[260.52117920 780.16204834]
[249.36755371 790.19744873]
[237.68254089 799.60876465]
[225.50102234 808.36798096]
[212.85932922 816.44885254]
[199.79522705 823.82733154]
[186.34767151 830.48138428]
[172.55680847 836.39111328]
[158.46380615 841.53894043]
[144.11071777 845.90948486]
[129.54035950 849.48968506]
[114.79624939 852.26885986]
[99.92235565 854.23870850]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 156]
[60 155]
[61 154]
[62 153]
[63 152]
[64 151]
[73 142]
[74 141]
[75 140]
[76 134]
[77 133]
[78 132]
[79 131]
[85 123]
[86 122]
[87 121]
[88 120]
[89 119]
[91 116]
[92 115]
[93 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
