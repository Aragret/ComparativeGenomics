%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUUxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[146.98684692 137.14857483]
[134.14790344 129.39218140]
[121.30895996 121.63579559]
[108.47002411 113.87940216]
[97.01513672 115.98342133]
[87.09165192 109.88704681]
[83.79087830 98.71807098]
[71.06884003 90.77138519]
[58.34680176 82.82469940]
[45.62476730 74.87801361]
[37.04213715 87.18392944]
[27.84723854 99.03934479]
[18.06367302 110.41382599]
[7.71655560 121.27818298]
[-3.16755295 131.60452271]
[-14.56071281 141.36633301]
[-26.43367767 150.53855896]
[-38.75597000 159.09765625]
[-51.49596024 167.02165222]
[-64.62094116 174.29020691]
[-78.09722137 180.88465881]
[-91.89021301 186.78808594]
[-105.96450806 191.98533630]
[-120.28397369 196.46305847]
[-134.81184387 200.20976257]
[-149.51084900 203.21583557]
[-164.34323120 205.47354126]
[-179.27093506 206.97711182]
[-194.25563049 207.72268677]
[-209.25886536 207.70832825]
[-224.24211121 206.93408203]
[-239.16690063 205.40194702]
[-253.99494934 203.11584473]
[-268.68817139 200.08164978]
[-283.20883179 196.30715942]
[-297.51971436 191.80203247]
[-311.58404541 186.57786560]
[-325.36569214 180.64805603]
[-338.82934570 174.02781677]
[-351.94039917 166.73416138]
[-364.66519165 158.78579712]
[-376.97106934 150.20312500]
[-388.82647705 141.00819397]
[-400.20092773 131.22460938]
[-411.06524658 120.87745667]
[-421.39157104 109.99331665]
[-431.15335083 98.60013580]
[-440.32553101 86.72714233]
[-448.88458252 74.40482330]
[-456.80856323 61.66481400]
[-464.07708740 48.53981400]
[-470.67147827 35.06351089]
[-476.57489014 21.27050591]
[-481.77209473 7.19620037]
[-486.24978638 -7.12327576]
[-489.99642944 -21.65116310]
[-493.00247192 -36.35017014]
[-495.26016235 -51.18256760]
[-496.76367188 -66.11027527]
[-497.50921631 -81.09497070]
[-497.49481201 -96.09819794]
[-496.72052002 -111.08144379]
[-495.18835449 -126.00623322]
[-492.90219116 -140.83427429]
[-489.86798096 -155.52748108]
[-486.09341431 -170.04815674]
[-481.58825684 -184.35900879]
[-476.36407471 -198.42330933]
[-470.43420410 -212.20495605]
[-463.81393433 -225.66857910]
[-456.52023315 -238.77961731]
[-448.57183838 -251.50439453]
[-439.98913574 -263.81027222]
[-430.79418945 -275.66561890]
[-421.01055908 -287.04003906]
[-410.66339111 -297.90435791]
[-399.77920532 -308.23062134]
[-388.38601685 -317.99237061]
[-376.51300049 -327.16455078]
[-364.19064331 -335.72357178]
[-351.45062256 -343.64749146]
[-338.32559204 -350.91598511]
[-324.84927368 -357.51034546]
[-311.05624390 -363.41369629]
[-296.98193359 -368.61087036]
[-282.66244507 -373.08853149]
[-268.13455200 -376.83514404]
[-253.43553162 -379.84112549]
[-238.60313416 -382.09878540]
[-223.67541504 -383.60226440]
[-208.69071960 -384.34774780]
[-193.68748474 -384.33331299]
[-178.70425415 -383.55899048]
[-163.77946472 -382.02676392]
[-148.95143127 -379.74060059]
[-134.25822449 -376.70629883]
[-119.73757172 -372.93173218]
[-105.42672729 -368.42654419]
[-91.36243439 -363.20230103]
[-77.58080292 -357.27239990]
[-64.11720276 -350.65209961]
[-51.00619125 -343.35836792]
[-38.28143311 -335.40994263]
[-25.97558975 -326.82720947]
[-14.12025070 -317.63220215]
[-2.74584675 -307.84854126]
[8.11842251 -297.50134277]
[18.44466972 -286.61715698]
[28.20638657 -275.22390747]
[37.37851715 -263.35086060]
[45.93751144 -251.02850342]
[53.86140442 -238.28845215]
[61.12985229 -225.16340637]
[67.72419739 -211.68707275]
[73.62751007 -197.89402771]
[78.82463837 -183.81970215]
[83.30224609 -169.50019836]
[87.04883575 -154.97229004]
[90.05477905 -140.27326965]
[92.31237793 -125.44085693]
[93.81582642 -110.51313782]
[94.56127167 -95.52843475]
[94.54679108 -80.52520752]
[93.77243042 -65.54196930]
[92.24016571 -50.61718750]
[89.95394897 -35.78916550]
[86.91963196 -21.09597015]
[83.14501190 -6.57532024]
[78.63977814 7.73551130]
[73.41548920 21.79978752]
[67.48556519 35.58140564]
[60.86521912 49.04499054]
[53.57145309 62.15597916]
[66.29348755 70.10266113]
[79.01552582 78.04934692]
[91.73755646 85.99603271]
[108.51116180 86.14579010]
[116.22640991 101.04045868]
[129.06535339 108.79685211]
[141.90429688 116.55324554]
[154.74324036 124.30963135]
[163.59445190 112.18753815]
[173.46850586 100.88301086]
[184.29025269 90.48208618]
[195.97732544 81.06392670]
[208.44078064 72.70021820]
[221.58575439 65.45459747]
[235.31222534 59.38222885]
[249.51568604 54.52931595]
[264.08807373 50.93279266]
[278.91845703 48.62003708]
[293.89398193 47.60864639]
[308.90069580 47.90631866]
[323.82434082 49.51078796]
[338.55133057 52.40984726]
[352.96963501 56.58142471]
[366.96948242 61.99378204]
[380.44433594 68.60572052]
[393.29162598 76.36691284]
[405.41360474 85.21830750]
[416.71798706 95.09252167]
[427.11877441 105.91441345]
[436.53677368 117.60161591]
[444.90029907 130.06518555]
[452.14572144 143.21026611]
[458.21792603 156.93681335]
[463.07061768 171.14035034]
[466.66693115 185.71278381]
[468.97949219 200.54321289]
[469.99066162 215.51875305]
[469.69277954 230.52543640]
[468.08810425 245.44905090]
[465.18884277 260.17602539]
[461.01705933 274.59426880]
[455.60452271 288.59402466]
[448.99240112 302.06878662]
[441.23101807 314.91598511]
[432.37945557 327.03784180]
[422.50506592 338.34210205]
[411.68304443 348.74270630]
[399.99569702 358.16055298]
[387.53201294 366.52389526]
[374.38684082 373.76913452]
[360.66021729 379.84112549]
[346.45660400 384.69366455]
[331.88412476 388.28976440]
[317.05364990 390.60211182]
[302.07809448 391.61306763]
[287.07141113 391.31497192]
[272.14782715 389.71008301]
[257.42089844 386.81063843]
[243.00271606 382.63864136]
[229.00302124 377.22589111]
[215.52835083 370.61358643]
[202.68125916 362.85202026]
[190.55953979 354.00027466]
[179.25543213 344.12576294]
[168.85496521 333.30355835]
[159.43728638 321.61608887]
[151.07411194 309.15231323]
[143.82904053 296.00701904]
[137.75724792 282.28030396]
[132.90493774 268.07662964]
[129.30902100 253.50408936]
[126.99688721 238.67359924]
[125.98612976 223.69802856]
[126.28443146 208.69136047]
[127.88953400 193.76777649]
[130.78921509 179.04089355]
[134.96139526 164.62277222]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 141]
[2 140]
[3 139]
[4 138]
[7 136]
[8 135]
[9 134]
[10 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
