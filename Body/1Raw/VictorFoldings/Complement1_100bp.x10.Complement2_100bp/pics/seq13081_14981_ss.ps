%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCGxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[99.02120209 525.12170410]
[86.08171844 532.74444580]
[72.33147430 538.78326416]
[57.96350861 543.15338135]
[43.17951202 545.79339600]
[28.18703461 546.66632080]
[13.19654751 545.75988770]
[-1.58150697 543.08673096]
[-15.93966675 538.68450928]
[-29.67636681 532.61499023]
[-42.59876633 524.96331787]
[-54.52545166 515.83697510]
[-65.28899384 505.36401367]
[-74.73828888 493.69152832]
[-82.74068451 480.98333740]
[-89.18383789 467.41784668]
[-93.97729492 453.18551636]
[-97.05376434 438.48614502]
[-98.37006378 423.52606201]
[-97.90770721 408.51531982]
[-95.67318726 393.66464233]
[-91.69786835 379.18246460]
[-86.03756714 365.27212524]
[-78.77174377 352.12890625]
[-70.00238800 339.93731689]
[-59.85262299 328.86849976]
[-48.46492767 319.07785034]
[-35.99916840 310.70281982]
[-22.63034439 303.86099243]
[-8.54613400 298.64837646]
[6.05574322 295.13815308]
[20.97029877 293.37963867]
[35.98815536 293.39749146]
[50.89848709 295.19146729]
[46.38306046 280.99780273]
[57.15838623 269.41320801]
[60.69805908 254.83683777]
[64.23773193 240.26045227]
[67.77740479 225.68408203]
[71.31707764 211.10771179]
[74.85675049 196.53132629]
[69.01620483 179.98277283]
[81.83686066 166.76487732]
[84.61246490 152.02392578]
[86.83758545 137.18988037]
[81.07386780 123.45565796]
[90.77269745 110.95592499]
[85.83453369 97.87516785]
[94.39325714 86.81896210]
[96.61837769 71.98491669]
[98.84349060 57.15087128]
[93.23892975 42.35562134]
[102.77860260 30.91691971]
[103.55992889 15.93728256]
[102.89014435 0.95224369]
[102.22035980 -14.03279495]
[101.55057526 -29.01783371]
[100.88078308 -44.00287247]
[99.76513672 -58.96132660]
[98.20461273 -73.87992859]
[96.64408875 -88.79853821]
[95.08357239 -103.71714020]
[93.52304840 -118.63574219]
[88.32599640 -104.56482697]
[80.35340118 -91.85901642]
[69.94426727 -81.05854797]
[57.54119873 -72.62268829]
[43.67157364 -66.91011810]
[28.92513466 -64.16374207]
[13.92891121 -64.50034332]
[-0.67944992 -67.90560150]
[-14.27879429 -74.23472595]
[-26.29087067 -83.21860504]
[-36.20491791 -94.47522736]
[-43.59939194 -107.52597046]
[-48.15986633 -121.81589508]
[-49.69243622 -136.73739624]
[-48.13193130 -151.65600586]
[-43.54470444 -165.93736267]
[-36.12581253 -178.97424316]
[-26.19070244 -190.21228027]
[-14.16182518 -199.17364502]
[-0.55065453 -205.47731018]
[14.06405735 -208.85520935]
[29.06088448 -209.16372681]
[43.80215454 -206.38973999]
[57.66106033 -200.65121460]
[70.04831696 -192.19213867]
[80.43720245 -181.37220764]
[88.38599396 -168.65148926]
[93.55668640 -154.57086182]
[95.72943878 -139.72888184]
[100.34345245 -154.00161743]
[97.22622681 -169.51269531]
[108.50331116 -179.24288940]
[113.11731720 -193.51562500]
[117.73132324 -207.78836060]
[122.34533691 -222.06109619]
[126.95934296 -236.33383179]
[131.57334900 -250.60655212]
[118.38902283 -257.85708618]
[106.81529236 -267.47192383]
[97.27054596 -279.10351562]
[90.09981537 -292.33142090]
[85.56232452 -306.67742920]
[83.82209778 -321.62292480]
[84.94203949 -336.62765503]
[88.88166809 -351.14923096]
[95.49856567 -364.66265869]
[104.55354309 -376.67947388]
[115.71926117 -386.76528931]
[128.59208679 -394.55545044]
[142.70668030 -399.76840210]
[157.55279541 -402.21566772]
[172.59378052 -401.80880737]
[187.28588867 -398.56250000]
[201.09800720 -392.59411621]
[213.53085327 -384.11938477]
[224.13499451 -373.44470215]
[232.52706909 -360.95593262]
[238.40373230 -347.10452271]
[241.55253601 -332.39123535]
[241.85964966 -317.34786987]
[239.31398010 -302.51831055]
[234.00755310 -288.43859863]
[226.13217163 -275.61770630]
[215.97256470 -264.51913452]
[203.89595032 -255.54403687]
[190.33892822 -249.01690674]
[175.79156494 -245.17366028]
[160.77972412 -244.15324402]
[145.84608459 -245.99255371]
[141.23207092 -231.71981812]
[136.61807251 -217.44708252]
[132.00405884 -203.17434692]
[127.39005280 -188.90161133]
[122.77603912 -174.62887573]
[126.22328949 -160.13868713]
[114.61618042 -149.38760376]
[110.00217438 -135.11486816]
[108.44165039 -120.19626617]
[110.00217438 -105.27766418]
[111.56269836 -90.35906219]
[113.12322235 -75.44045258]
[114.68374634 -60.52185059]
[116.77394867 -58.65391159]
[118.25017548 -55.84546661]
[118.75049591 -52.32622147]
[118.00274658 -48.45254135]
[115.86582184 -44.67265701]
[116.53561401 -29.68761826]
[117.20539856 -14.70258045]
[117.87518311 0.28245851]
[118.54496765 15.26749706]
[125.81879425 2.14913440]
[137.75027466 -6.94149637]
[152.32876587 -10.47246361]
[167.09751892 -7.84873724]
[179.56774902 0.48753875]
[187.63798523 13.13155460]
[189.94827271 27.95257378]
[186.10928345 42.45299149]
[176.76794434 54.18923187]
[163.49844360 61.18353653]
[148.53691101 62.25724030]
[134.40464783 57.22940445]
[123.48318481 46.94730759]
[117.61264801 33.14203644]
[123.37636566 46.87625885]
[113.67753601 59.37598801]
[111.45242310 74.21002960]
[109.22730255 89.04407501]
[114.16546631 102.12483215]
[105.60674286 113.18103790]
[111.21130371 127.97629547]
[101.67163086 139.41499329]
[99.44651031 154.24903870]
[112.87675476 147.56857300]
[126.53717041 153.76478577]
[130.35780334 168.27005005]
[121.52223969 180.39163208]
[106.54370880 181.19393921]
[96.46431732 170.08714294]
[102.66520691 181.39695740]
[99.59695435 193.51179504]
[89.43312073 200.07099915]
[85.89344788 214.64738464]
[82.35377502 229.22375488]
[78.81410217 243.80012512]
[75.27443695 258.37649536]
[71.73476410 272.95288086]
[75.99700928 288.18914795]
[65.47486115 298.73114014]
[79.54737854 303.97525024]
[92.90086365 310.84698486]
[105.34786224 319.24987793]
[116.71363068 329.06597900]
[126.83861542 340.15747070]
[135.58067322 352.36862183]
[142.81707764 365.52807617]
[148.44625854 379.45101929]
[152.38917542 393.94204712]
[154.59046936 408.79772949]
[155.01924133 423.80944824]
[153.66949463 438.76654053]
[150.56015015 453.45901489]
[145.73486328 467.68057251]
[139.26138306 481.23159790]
[131.23059082 493.92187500]
[121.75521088 505.57321167]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 193]
[36 191]
[37 190]
[38 189]
[39 188]
[40 187]
[41 186]
[43 183]
[44 177]
[45 176]
[47 174]
[49 172]
[50 171]
[51 170]
[53 168]
[54 154]
[55 153]
[56 152]
[57 151]
[58 150]
[59 145]
[60 144]
[61 143]
[62 142]
[63 141]
[92 140]
[93 139]
[95 137]
[96 136]
[97 135]
[98 134]
[99 133]
[100 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
