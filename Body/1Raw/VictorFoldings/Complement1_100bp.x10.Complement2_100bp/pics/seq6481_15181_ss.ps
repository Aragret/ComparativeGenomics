%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[-28.56180191 833.53131104]
[-40.95752335 842.00109863]
[-54.14652634 849.17333984]
[-67.99347687 854.97442627]
[-82.35627747 859.34490967]
[-97.08754730 862.23986816]
[-112.03610992 863.62957764]
[-127.04857635 863.49987793]
[-141.97090149 861.85198975]
[-156.64993286 858.70294189]
[-170.93505859 854.08489990]
[-184.67970276 848.04534912]
[-197.74278259 840.64624023]
[-209.99029541 831.96350098]
[-221.29652405 822.08630371]
[-231.54547119 811.11584473]
[-240.63195801 799.16485596]
[-248.46273804 786.35583496]
[-254.95745850 772.82037354]
[-260.04946899 758.69726562]
[-263.68652344 744.13146973]
[-265.83129883 729.27239990]
[-266.46179199 714.27264404]
[-265.57153320 699.28601074]
[-263.16964722 684.46636963]
[-259.28076172 669.96575928]
[-253.94483948 655.93298340]
[-247.21658325 642.51202393]
[-239.16505432 629.84063721]
[-229.87287903 618.04888916]
[-219.43540955 607.25762939]
[-207.95974731 597.57775879]
[-195.56365967 589.10852051]
[-182.37434387 581.93688965]
[-168.52713013 576.13635254]
[-154.16413879 571.76654053]
[-139.43273926 568.87219238]
[-124.48411560 567.48315430]
[-109.47165680 567.61352539]
[-94.54941559 569.26202393]
[-79.87051392 572.41180420]
[-75.25650024 558.13903809]
[-70.64249420 543.86633301]
[-66.02848053 529.59356689]
[-61.41447449 515.32086182]
[-62.34808350 507.98941040]
[-56.62406158 500.87088013]
[-51.79806519 486.66842651]
[-46.97206879 472.46597290]
[-42.14606857 458.26351929]
[-37.32007217 444.06103516]
[-32.49407578 429.85858154]
[-33.76404190 425.25466919]
[-32.15532684 419.80404663]
[-27.30717468 415.30883789]
[-22.06045532 401.25637817]
[-28.99674988 390.39739990]
[-28.40331841 377.33102417]
[-20.27298737 366.83779907]
[-7.39681959 362.88571167]
[-1.94146252 348.91290283]
[-8.13846493 335.41726685]
[-2.80500484 321.16912842]
[11.39249897 314.76065063]
[16.84785652 300.78787231]
[22.30321312 286.81506348]
[27.75856972 272.84225464]
[33.21392822 258.86947632]
[20.62327576 249.75927734]
[10.80766201 237.69610596]
[4.43842840 223.49591064]
[1.95355856 208.12109375]
[3.52755928 192.61531067]
[9.05921841 178.03262329]
[18.17809486 165.36582947]
[30.26931572 155.47888184]
[44.51504135 149.04797363]
[59.94977570 146.51524353]
[75.52580261 148.05848694]
[80.77252197 134.00601196]
[85.70411682 119.83987427]
[90.31812286 105.56713867]
[94.82575226 91.26045227]
[91.47794342 75.79750824]
[102.60890198 65.90048981]
[107.00989532 51.56064224]
[111.41089630 37.22079468]
[115.59790802 22.81701279]
[119.57000732 8.35248852]
[123.32630157 -6.16957092]
[119.06405640 -21.40583801]
[129.58619690 -31.94783592]
[133.12586975 -46.52421188]
[136.66554260 -61.10058594]
[140.09660339 -75.70291138]
[143.41886902 -90.33036804]
[138.93025208 -105.50148773]
[149.29426575 -116.19898224]
[152.61653137 -130.82644653]
[155.93879700 -145.45390320]
[142.40585327 -152.08386230]
[130.76705933 -161.65649414]
[121.65007782 -173.65554810]
[115.54656219 -187.43392944]
[112.78567505 -202.24858093]
[113.51631165 -217.30059814]
[117.69905853 -231.77821350]
[125.10836029 -244.90066528]
[135.34463501 -255.96031189]
[147.85583496 -264.36068726]
[161.96728516 -269.64877319]
[176.91795349 -271.53939819]
[191.90155029 -269.93060303]
[206.11006165 -264.90914917]
[218.77722168 -256.74581909]
[229.21990967 -245.88087463]
[236.87496948 -232.90023804]
[241.32955933 -218.50395203]
[242.34347534 -203.46836853]
[239.86201477 -188.60435486]
[234.01899719 -174.71348572]
[225.12954712 -162.54490662]
[213.67304993 -152.75483704]
[200.26734924 -145.87124634]
[185.63539124 -142.26536560]
[170.56625366 -142.13163757]
[167.24398804 -127.50418091]
[163.92173767 -112.87671661]
[168.64797974 -98.75185394]
[158.04632568 -87.00811005]
[154.72407532 -72.38065338]
[156.30802917 -65.16172791]
[151.24192810 -57.56091309]
[147.70225525 -42.98453903]
[144.16258240 -28.40816498]
[148.67800903 -14.21449757]
[137.90267944 -2.62989831]
[139.57832336 1.84237742]
[138.46231079 7.41476679]
[134.03453064 12.32458496]
[130.06243896 26.78910828]
[131.60418701 31.30929184]
[130.32273865 36.84598160]
[125.75074768 41.62179184]
[121.34974670 55.96163940]
[116.94874573 70.30148315]
[120.61135101 84.73875427]
[109.16559601 95.66145325]
[109.99919891 103.67878723]
[104.59085846 110.18115234]
[99.97684479 124.45388794]
[101.07144928 129.55769348]
[100.18727112 134.11528015]
[97.86375427 137.46435547]
[94.82498932 139.25273132]
[89.57826996 153.30520630]
[101.49661255 161.56869507]
[111.08006287 172.44137573]
[117.77305603 185.28611755]
[121.18926239 199.35165405]
[121.13382721 213.81654358]
[117.61453247 227.83714294]
[110.84102631 240.59678650]
[101.21237946 251.35342407]
[89.29357910 259.48266602]
[75.78231812 264.51416016]
[61.46824265 266.15869141]
[47.18672562 264.32482910]
[41.73136902 278.29760742]
[36.27601242 292.27041626]
[30.82065392 306.24322510]
[25.36529732 320.21600342]
[31.46477890 334.54898071]
[25.73322296 348.64166260]
[12.03133488 354.36825562]
[6.57597828 368.34106445]
[13.89206505 384.23114014]
[7.57672167 400.18203735]
[-8.00798416 406.50308228]
[-13.25470257 420.55557251]
[-18.29161835 434.68460083]
[-23.11761665 448.88705444]
[-27.94361496 463.08950806]
[-32.76961136 477.29196167]
[-37.59560776 491.49441528]
[-42.42160797 505.69686890]
[-47.14174271 519.93487549]
[-51.75574875 534.20758057]
[-56.36975861 548.48034668]
[-60.98376846 562.75305176]
[-65.59777832 577.02581787]
[-51.85288239 583.06475830]
[-38.78946304 590.46325684]
[-26.54158020 599.14544678]
[-15.23491096 609.02221680]
[-4.98548365 619.99218750]
[4.10152626 631.94281006]
[11.93287182 644.75140381]
[18.42819023 658.28662109]
[23.52083015 672.40948486]
[27.15852928 686.97515869]
[29.30396271 701.83410645]
[29.93511391 716.83386230]
[29.04550362 731.82049561]
[26.64426422 746.64025879]
[22.75603294 761.14105225]
[17.42071342 775.17407227]
[10.69305134 788.59527588]
[2.64208460 801.26702881]
[-6.64956999 813.05920410]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 191]
[42 190]
[43 189]
[44 188]
[45 187]
[47 186]
[48 185]
[49 184]
[50 183]
[51 182]
[52 181]
[55 180]
[56 179]
[60 176]
[61 175]
[64 172]
[65 171]
[66 170]
[67 169]
[68 168]
[79 156]
[80 155]
[81 151]
[82 150]
[83 148]
[85 146]
[86 145]
[87 144]
[88 141]
[89 140]
[90 137]
[92 135]
[93 134]
[94 133]
[95 131]
[96 130]
[98 128]
[99 127]
[100 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
