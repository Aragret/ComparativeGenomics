%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[68.59022522 805.30419922]
[55.11881256 811.92816162]
[41.07098007 817.22100830]
[26.57789612 821.13323975]
[11.77487659 823.62847900]
[-3.19986200 824.68334961]
[-18.20650101 824.28796387]
[-33.10492325 822.44610596]
[-47.75602341 819.17492676]
[-62.02300644 814.50494385]
[-75.77265930 808.47979736]
[-88.87660980 801.15570068]
[-101.21249390 792.60107422]
[-112.66513824 782.89581299]
[-123.12760925 772.13049316]
[-132.50222778 760.40563965]
[-140.70144653 747.83074951]
[-147.64872742 734.52319336]
[-153.27919006 720.60723877]
[-157.54026794 706.21282959]
[-160.39218140 691.47436523]
[-161.80830383 676.52947998]
[-161.77539062 661.51763916]
[-160.29377747 646.57910156]
[-157.37728882 631.85327148]
[-153.05314636 617.47772217]
[-147.36172485 603.58660889]
[-140.35617065 590.30963135]
[-132.10189819 577.77081299]
[-122.67597198 566.08715820]
[-112.16640472 555.36779785]
[-100.67132568 545.71282959]
[-88.29805756 537.21234131]
[-75.16212463 529.94580078]
[-61.38619232 523.98095703]
[-47.09887314 519.37359619]
[-32.43357468 516.16662598]
[-17.52721977 514.39007568]
[-2.51899147 514.06054688]
[12.45097828 515.18103027]
[27.24291801 517.74114990]
[31.21501350 503.27661133]
[35.18711090 488.81207275]
[39.15920639 474.34756470]
[43.13130188 459.88302612]
[47.10339737 445.41851807]
[51.07549286 430.95397949]
[55.04759216 416.48947144]
[50.95676422 402.16763306]
[62.07222748 390.90899658]
[66.04432678 376.44448853]
[68.71012115 361.68325806]
[70.04835510 346.74307251]
[71.38658905 331.80288696]
[72.72482300 316.86270142]
[74.06305695 301.92251587]
[75.40129089 286.98233032]
[66.36210632 280.02105713]
[61.75814056 269.45132446]
[62.83922577 257.85284424]
[69.45196533 248.11770630]
[80.04927063 242.72941589]
[81.83174133 227.83569336]
[83.61420441 212.94198608]
[85.39666748 198.04826355]
[87.17913818 183.15454102]
[88.96160126 168.26083374]
[90.74407196 153.36711121]
[92.52653503 138.47338867]
[93.19631958 123.48835754]
[92.74971008 108.49501038]
[92.19150543 93.50539398]
[91.52172089 78.52035522]
[90.85192871 63.53532028]
[90.18214417 48.55028152]
[87.37147522 44.15173721]
[86.60564423 39.57278442]
[87.61094666 35.62254333]
[89.83220673 32.88423538]
[82.09490967 19.08406448]
[89.83220673 6.35679245]
[89.83220673 -8.64320755]
[81.28038788 -18.29872894]
[81.58919525 -30.79226494]
[90.04783630 -39.43968964]
[90.27116394 -54.43802643]
[90.49449158 -69.43636322]
[90.71781921 -84.43470001]
[79.99022675 -95.72879791]
[80.43036652 -110.93605804]
[91.26367188 -121.09357452]
[91.48699951 -136.09191895]
[76.82718658 -139.54211426]
[63.25199890 -146.06349182]
[51.39637375 -155.35102844]
[41.81482315 -166.97032166]
[34.95548630 -180.37791443]
[31.13919449 -194.94671631]
[30.54443932 -209.99531555]
[33.19903946 -224.81985474]
[38.97883224 -238.72698975]
[47.61348724 -251.06622314]
[58.69915009 -261.26043701]
[71.71731567 -268.83285522]
[86.05911255 -273.42926025]
[101.05373383 -274.83471680]
[115.99987030 -272.98345947]
[130.19845581 -267.96206665]
[142.98538208 -260.00540161]
[153.76261902 -249.48564148]
[162.02606201 -236.89479065]
[167.38922119 -222.82174683]
[169.60125732 -207.92472839]
[168.55871582 -192.90051270]
[164.31034851 -178.45179749]
[157.05485535 -165.25437927]
[147.13160706 -153.92552185]
[135.00471497 -144.99508667]
[121.24137878 -138.88078308]
[106.48533630 -135.86859131]
[106.26200867 -120.87024689]
[116.78808594 -110.39469147]
[116.77525330 -95.18106079]
[105.71615601 -84.21137238]
[105.49282837 -69.21303558]
[105.26950073 -54.21469879]
[105.04617310 -39.21636200]
[114.40689850 -24.37238121]
[104.83220673 -8.64320755]
[104.83220673 6.35679245]
[112.56951141 19.08406448]
[104.83220673 32.88423538]
[105.16718292 47.88049698]
[105.83696747 62.86553574]
[106.50675964 77.85057068]
[107.17654419 92.83560944]
[110.65391541 100.10750580]
[107.74306488 108.04840088]
[108.18966675 123.04174805]
[116.67449188 110.67211914]
[130.16445923 104.11309052]
[145.13331604 105.07917023]
[157.66824341 113.31783295]
[164.49264526 126.67551422]
[163.82263184 141.66053772]
[155.83334351 154.35586548]
[142.61317444 161.44296265]
[127.61782837 161.06929016]
[114.76705933 153.33250427]
[107.42024994 140.25585938]
[105.63778687 155.14958191]
[103.85532379 170.04328918]
[102.07285309 184.93701172]
[100.29039001 199.83073425]
[98.50791931 214.72444153]
[96.72545624 229.61816406]
[94.94299316 244.51188660]
[107.21203613 258.94741821]
[105.07017517 277.44946289]
[90.34147644 288.32058716]
[89.00324249 303.26077271]
[87.66500854 318.20092773]
[86.32677460 333.14111328]
[84.98854065 348.08129883]
[83.65030670 363.02148438]
[92.87163544 351.19073486]
[106.27429199 344.45510864]
[121.27043915 344.11514282]
[134.96455383 350.23654175]
[144.71250916 361.63729858]
[148.63214111 376.11611938]
[145.96662903 390.87738037]
[137.23062134 403.07092285]
[124.11093140 410.34234619]
[109.14074707 411.28765869]
[95.21058655 405.72433472]
[85.01013947 394.72656250]
[80.50885010 380.41656494]
[76.53675079 394.88110352]
[80.34346771 410.23751831]
[69.51211548 420.46154785]
[65.54001617 434.92608643]
[61.56792068 449.39059448]
[57.59582520 463.85513306]
[53.62372971 478.31964111]
[49.65163422 492.78417969]
[45.67953873 507.24868774]
[41.70743942 521.71319580]
[55.73234177 527.06652832]
[69.17509460 533.74841309]
[81.91018677 541.69659424]
[93.81870270 550.83673096]
[104.78946686 561.08355713]
[114.72003937 572.34143066]
[123.51769257 584.50518799]
[131.10029602 597.46124268]
[137.39703369 611.08868408]
[142.34913635 625.26019287]
[145.91035461 639.84350586]
[148.04742432 654.70245361]
[148.74040222 669.69830322]
[147.98283386 684.69104004]
[145.78176880 699.54064941]
[142.15777588 714.10845947]
[137.14468384 728.25854492]
[130.78929138 741.85870361]
[123.15095520 754.78198242]
[114.30098724 766.90771484]
[104.32201385 778.12274170]
[93.30721283 788.32220459]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 188]
[42 187]
[43 186]
[44 185]
[45 184]
[46 183]
[47 182]
[48 181]
[50 179]
[51 178]
[52 165]
[53 164]
[54 163]
[55 162]
[56 161]
[57 160]
[62 157]
[63 156]
[64 155]
[65 154]
[66 153]
[67 152]
[68 151]
[69 150]
[70 139]
[71 138]
[72 136]
[73 135]
[74 134]
[75 133]
[79 132]
[81 130]
[82 129]
[85 127]
[86 126]
[87 125]
[88 124]
[91 121]
[92 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
