%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[68.29190826 428.34011841]
[61.03524017 441.47787476]
[52.71844482 453.97149658]
[43.39833069 465.73562622]
[33.13856888 476.68994141]
[22.00924301 486.75958252]
[10.08637905 495.87576294]
[-2.54857588 503.97622681]
[-15.80931091 511.00561523]
[-29.60523987 516.91595459]
[-43.84212494 521.66680908]
[-58.42270660 525.22576904]
[-73.24738312 527.56848145]
[-88.21488953 528.67901611]
[-103.22298431 528.54968262]
[-118.16913605 527.18145752]
[-132.95124817 524.58367920]
[-147.46835327 520.77404785]
[-161.62127686 515.77862549]
[-175.31332397 509.63146973]
[-188.45097351 502.37463379]
[-200.94450378 494.05767822]
[-212.70852661 484.73742676]
[-223.66270447 474.47753906]
[-233.73222351 463.34811401]
[-242.84826660 451.42514038]
[-250.94857788 438.79006958]
[-257.97781372 425.52926636]
[-263.88796997 411.73324585]
[-268.63867188 397.49630737]
[-272.19744873 382.91567993]
[-274.54000854 368.09097290]
[-275.65032959 353.12347412]
[-275.52084351 338.11538696]
[-274.15246582 323.16925049]
[-271.55447388 308.38714600]
[-267.74465942 293.87008667]
[-262.74905396 279.71725464]
[-256.60174561 266.02526855]
[-249.34477234 252.88769531]
[-241.02767944 240.39427185]
[-231.70729065 228.63035583]
[-221.44726562 217.67630005]
[-210.31768799 207.60691833]
[-198.39460754 198.49101257]
[-185.75946045 190.39085388]
[-172.49856567 183.36177063]
[-158.70249939 177.45178223]
[-144.46549988 172.70126343]
[-129.88482666 169.14265442]
[-115.06009674 166.80027771]
[-100.09255981 165.69012451]
[-85.08447266 165.81977844]
[-70.13835144 167.18835449]
[-55.35629654 169.78651428]
[-40.83928680 173.59649658]
[-26.68648911 178.59226990]
[-12.99458313 184.73973083]
[0.14290053 191.99687195]
[12.63621807 200.31411743]
[21.95110130 188.55686951]
[31.26598358 176.79960632]
[32.88690186 159.32563782]
[50.06245041 152.68620300]
[59.20125198 140.79158020]
[68.34005737 128.89694214]
[77.47885895 117.00231171]
[86.61766052 105.10767365]
[88.64146423 91.27308655]
[101.48770905 85.75352478]
[103.76002502 70.09634399]
[117.64964294 64.71791077]
[126.78845215 52.82327652]
[135.92724609 40.92864227]
[124.58081055 31.11099052]
[113.82440948 20.65020752]
[103.69445038 9.58169365]
[94.22521210 -2.05710030]
[85.44872284 -14.22679234]
[77.39469910 -26.88620377]
[70.09037781 -39.99249649]
[63.56047821 -53.50132751]
[57.82709885 -67.36698151]
[52.90963745 -81.54254913]
[48.82473373 -95.98005676]
[45.58621216 -110.63065338]
[43.20502472 -125.44477081]
[41.68923187 -140.37228394]
[41.04396820 -155.36265564]
[41.27140808 -170.36520386]
[42.37078476 -185.32914734]
[44.33838272 -200.20384216]
[47.16753769 -214.93896484]
[50.84868240 -229.48466492]
[55.36935425 -243.79170227]
[60.71426392 -257.81170654]
[66.86532593 -271.49719238]
[73.80171967 -284.80184937]
[81.49997711 -297.68072510]
[89.93405151 -310.09017944]
[99.07540894 -321.98822021]
[108.89310455 -333.33462524]
[119.35393524 -344.09097290]
[130.42248535 -354.22088623]
[142.06132507 -363.69009399]
[154.23104858 -372.46652222]
[166.89048767 -380.52047729]
[179.99682617 -387.82476807]
[193.50567627 -394.35461426]
[207.37135315 -400.08792114]
[221.54693604 -405.00534058]
[235.98446655 -409.09017944]
[250.63507080 -412.32864380]
[265.44918823 -414.70974731]
[280.37670898 -416.22549438]
[295.36709595 -416.87069702]
[310.36965942 -416.64318848]
[325.33358765 -415.54376221]
[340.20828247 -413.57608032]
[354.94338989 -410.74688721]
[369.48907471 -407.06567383]
[383.79608154 -402.54492188]
[397.81607056 -397.19998169]
[411.50152588 -391.04885864]
[424.80615234 -384.11239624]
[437.68499756 -376.41409302]
[450.09439087 -367.97998047]
[461.99243164 -358.83856201]
[473.33877563 -349.02081299]
[484.09509277 -338.55993652]
[494.22497559 -327.49133301]
[503.69409180 -315.85247803]
[512.47045898 -303.68270874]
[520.52441406 -291.02322388]
[527.82861328 -277.91687012]
[534.35839844 -264.40798950]
[540.09167480 -250.54229736]
[545.00903320 -236.36668396]
[549.09381104 -221.92913818]
[552.33221436 -207.27851868]
[554.71325684 -192.46438599]
[556.22894287 -177.53686523]
[556.87408447 -162.54647827]
[556.64654541 -147.54393005]
[555.54699707 -132.58000183]
[553.57928467 -117.70532227]
[550.75000000 -102.97021484]
[547.06872559 -88.42455292]
[542.54797363 -74.11754608]
[537.20294189 -60.09760284]
[531.05175781 -46.41216660]
[524.11523438 -33.10754395]
[516.41687012 -20.22875404]
[507.98272705 -7.81937504]
[498.84124756 4.07860470]
[489.02346802 15.42492485]
[478.56256104 26.18119431]
[467.49392700 36.31101608]
[455.85501099 45.78011322]
[443.68521118 54.55644226]
[431.02569580 62.61031342]
[417.91931152 69.91447449]
[404.41040039 76.44420624]
[390.54467773 82.17741394]
[376.36904907 87.09469604]
[361.93148804 91.17942047]
[347.28085327 94.41776276]
[332.46670532 96.79876709]
[317.53918457 98.31436920]
[302.54876709 98.95944977]
[287.54623413 98.73182678]
[272.58230591 97.63226318]
[257.70764160 95.66448212]
[242.97254944 92.83514404]
[228.42689514 89.15381622]
[214.11990356 84.63296509]
[200.09999084 79.28787994]
[186.41458130 73.13665009]
[173.10998535 66.20009613]
[160.23123169 58.50167465]
[147.82188416 50.06744385]
[138.68307495 61.96207809]
[129.54428101 73.85671234]
[127.92563629 88.66310120]
[113.38233948 94.89232635]
[111.35853577 108.72691345]
[98.51229095 114.24647522]
[89.37348938 126.14111328]
[80.23468781 138.03573608]
[71.09588623 149.93037415]
[61.95708084 161.82501221]
[62.85580826 174.69183350]
[54.99920273 184.41075134]
[43.02323532 186.11450195]
[33.70835114 197.87174988]
[24.39346886 209.62899780]
[35.34789658 219.88862610]
[45.41767120 231.01783752]
[54.53399658 242.94059753]
[62.63460922 255.57545471]
[69.66416168 268.83609009]
[75.57464600 282.63195801]
[80.32568359 296.86877441]
[83.88481140 311.44931030]
[86.22772217 326.27398682]
[87.33840942 341.24148560]
[87.20929718 356.24957275]
[85.84124756 371.19573975]
[83.24362183 385.97787476]
[79.43415833 400.49502563]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 196]
[61 195]
[62 194]
[64 191]
[65 190]
[66 189]
[67 188]
[68 187]
[70 185]
[72 183]
[73 182]
[74 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
