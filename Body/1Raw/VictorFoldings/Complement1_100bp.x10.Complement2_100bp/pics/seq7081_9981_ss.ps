%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[308.27441406 176.91003418]
[302.60711670 190.79510498]
[296.01535034 204.26589966]
[288.52920532 217.26094055]
[280.18286133 229.72096252]
[271.01437378 241.58909607]
[261.06561279 252.81118774]
[250.38194275 263.33602905]
[239.01210022 273.11563110]
[227.00799561 282.10534668]
[214.42439270 290.26416016]
[201.31867981 297.55484009]
[187.75068665 303.94412231]
[173.78230286 309.40286255]
[159.47727966 313.90615845]
[144.90086365 317.43344116]
[130.11958313 319.96862793]
[115.20087433 321.50015259]
[100.21280670 322.02105713]
[85.22376251 321.52890015]
[70.30214691 320.02597046]
[55.51603317 317.51910400]
[40.93288803 314.01977539]
[26.61924934 309.54391479]
[12.64043140 304.11196899]
[-0.93978751 297.74868774]
[-14.05944347 290.48315430]
[-26.65867424 282.34848022]
[-38.67999268 273.38180542]
[-50.06855011 263.62402344]
[-60.77237701 253.11965942]
[-70.74264526 241.91665649]
[-79.93385315 230.06613159]
[-88.30406952 217.62213135]
[-95.81510162 204.64146423]
[-102.43267822 191.18333435]
[-108.12660217 177.30915833]
[-112.87090302 163.08224487]
[-116.64392090 148.56748962]
[-119.42844391 133.83114624]
[-121.21177673 118.94043732]
[-121.98577118 103.96331024]
[-121.74689484 88.96809387]
[-120.49624634 74.02321625]
[-118.23953247 59.19686508]
[-114.98704529 44.55668640]
[-110.75361633 30.16948128]
[-105.55857849 16.10089684]
[-99.42562866 2.41512394]
[-92.38274384 -10.82539368]
[-84.46206665 -23.56024361]
[-75.69973755 -35.73131943]
[-66.13573456 -47.28308487]
[-55.81369400 -58.16283417]
[-44.78071213 -68.32093048]
[-33.08713531 -77.71101379]
[-20.78631020 -86.29024506]
[-7.93437052 -94.01948547]
[5.41004753 -100.86346436]
[19.18605614 -106.79094696]
[33.33079910 -111.77489471]
[47.77973557 -115.79257202]
[62.46694183 -118.82563782]
[77.32540131 -120.86025238]
[92.28732300 -121.88713837]
[107.28443146 -121.90161133]
[122.24829865 -120.90360260]
[137.11065674 -118.89766693]
[151.80369568 -115.89295197]
[166.26036072 -111.90317535]
[180.41468811 -106.94653320]
[194.20211792 -101.04564667]
[207.55972290 -94.22743225]
[220.42654419 -86.52301788]
[232.74391174 -77.96753693]
[244.45558167 -68.60003662]
[255.50814819 -58.46325684]
[265.85116577 -47.60344696]
[275.43746948 -36.07015991]
[284.22326660 -23.91601944]
[296.94528198 -31.86270523]
[309.66732788 -39.80938721]
[322.38937378 -47.75607300]
[315.15365601 -60.89986038]
[308.65295410 -74.42228699]
[302.90707397 -88.28229523]
[297.93344116 -102.43778229]
[293.74716187 -116.84575653]
[290.36093140 -131.46247864]
[287.78503418 -146.24353027]
[286.02731323 -161.14404297]
[285.09310913 -176.11875916]
[284.98526001 -191.12220764]
[285.70407104 -206.10881042]
[287.24737549 -221.03305054]
[289.61047363 -235.84962463]
[292.78619385 -250.51350403]
[296.76489258 -264.98019409]
[301.53448486 -279.20571899]
[307.08050537 -293.14691162]
[313.38607788 -306.76141357]
[320.43206787 -320.00787354]
[328.19711304 -332.84606934]
[336.65756226 -345.23699951]
[345.78775024 -357.14306641]
[355.55999756 -368.52807617]
[365.94454956 -379.35748291]
[376.90988159 -389.59838867]
[388.42276001 -399.21966553]
[400.44815063 -408.19210815]
[412.94952393 -416.48849487]
[425.88897705 -424.08358765]
[439.22717285 -430.95434570]
[452.92361450 -437.07992554]
[466.93670654 -442.44165039]
[481.22387695 -447.02331543]
[495.74176025 -450.81097412]
[510.44622803 -453.79309082]
[525.29266357 -455.96066284]
[540.23596191 -457.30709839]
[555.23071289 -457.82827759]
[570.23144531 -457.52261353]
[585.19256592 -456.39108276]
[600.06860352 -454.43710327]
[614.81439209 -451.66659546]
[629.38519287 -448.08795166]
[643.73675537 -443.71209717]
[657.82543945 -438.55227661]
[671.60852051 -432.62417603]
[685.04406738 -425.94580078]
[698.09130859 -418.53744507]
[710.71063232 -410.42156982]
[722.86370850 -401.62286377]
[734.51367188 -392.16802979]
[745.62506104 -382.08575439]
[756.16418457 -371.40670776]
[766.09899902 -360.16329956]
[775.39935303 -348.38967896]
[784.03698730 -336.12161255]
[791.98571777 -323.39633179]
[799.22137451 -310.25247192]
[805.72192383 -296.73001099]
[811.46771240 -282.86996460]
[816.44122314 -268.71444702]
[820.62744141 -254.30642700]
[824.01354980 -239.68969727]
[826.58935547 -224.90861511]
[828.34698486 -210.00808716]
[829.28106689 -195.03337097]
[829.38879395 -180.02992249]
[828.66992188 -165.04333496]
[827.12652588 -150.11909485]
[824.76330566 -135.30255127]
[821.58746338 -120.63867950]
[817.60864258 -106.17202759]
[812.83898926 -91.94652557]
[807.29284668 -78.00537872]
[800.98718262 -64.39093018]
[793.94110107 -51.14451599]
[786.17596436 -38.30636978]
[777.71545410 -25.91548538]
[768.58514404 -14.00948906]
[758.81286621 -2.62453985]
[748.42822266 8.20478630]
[737.46276855 18.44560051]
[725.94982910 28.06680298]
[713.92443848 37.03917313]
[701.42297363 45.33546066]
[688.48345947 52.93047333]
[675.14520264 59.80113983]
[661.44873047 65.92660522]
[647.43560791 71.28825378]
[633.14837646 75.86980438]
[618.63049316 79.65734863]
[603.92596436 82.63938141]
[589.07952881 84.80684662]
[574.13623047 86.15316010]
[559.14147949 86.67424011]
[544.14074707 86.36849213]
[529.17968750 85.23684692]
[514.30364990 83.28275299]
[499.55783081 80.51213837]
[484.98706055 76.93341064]
[470.63552856 72.55744171]
[456.54687500 67.39752960]
[442.76388550 61.46933746]
[429.32836914 54.79086685]
[416.28115845 47.38240433]
[403.66186523 39.26645279]
[391.50885010 30.46765137]
[379.85897827 21.01272774]
[368.74768066 10.93039608]
[358.20864868 0.25127456]
[348.27389526 -10.99220371]
[338.97363281 -22.76589394]
[330.33605957 -35.03403854]
[317.61401367 -27.08735275]
[304.89196777 -19.14066887]
[292.16995239 -11.19398403]
[299.23818970 2.03300905]
[305.39736938 15.70700073]
[310.61935425 29.76560020]
[314.88037109 44.14466095]
[318.16091919 58.77857971]
[320.44604492 73.60057831]
[321.72534180 88.54302979]
[321.99295044 103.53775787]
[321.24768066 118.51634216]
[319.49288940 133.41044617]
[316.73663330 148.15209961]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[80 199]
[81 198]
[82 197]
[83 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
