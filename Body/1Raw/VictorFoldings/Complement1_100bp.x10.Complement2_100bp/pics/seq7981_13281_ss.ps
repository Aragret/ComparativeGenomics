%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[76.93057251 369.00372314]
[77.54335022 384.13327026]
[73.20796967 398.64132690]
[64.39471436 410.95413208]
[52.05958176 419.73611450]
[37.54058456 424.03463745]
[22.41263962 423.38348389]
[8.31671429 417.85324097]
[-3.21817231 408.04379272]
[-10.94080067 395.01922607]
[-14.01347923 380.19229126]
[-12.10290623 365.17135620]
[-5.41632557 351.58578491]
[5.32095194 340.90917969]
[18.94422531 334.29971313]
[33.97574615 332.47430420]
[37.07985687 317.79901123]
[32.14383316 303.74606323]
[42.56946564 291.84579468]
[45.67357254 277.17047119]
[48.77768326 262.49517822]
[51.88179398 247.81988525]
[54.98590469 233.14457703]
[58.09001541 218.46926880]
[53.15399170 204.41633606]
[63.57962036 192.51605225]
[66.68373108 177.84075928]
[54.68591309 186.84365845]
[39.68991852 187.19033813]
[27.28888702 178.75148010]
[22.10809135 164.67456055]
[26.07984352 150.20994568]
[37.72277832 140.75256348]
[52.69436646 139.82978821]
[65.41057587 147.78579712]
[71.12867737 161.65434265]
[75.95467377 147.45188904]
[80.78067017 133.24943542]
[85.60666656 119.04697418]
[90.43266296 104.84452057]
[93.09845734 90.08330536]
[93.54506683 75.08995056]
[93.99167633 60.09660339]
[94.43827820 45.10325241]
[94.88488770 30.10990334]
[95.33148956 15.11655331]
[88.30628967 28.36972237]
[78.63021088 39.83155441]
[66.74346924 48.98061371]
[53.18681717 55.40067673]
[38.57699966 58.79967499]
[23.57865906 59.02297592]
[8.87412739 56.06042099]
[-4.86764097 50.04678726]
[-17.02148628 41.25565338]
[-27.03449249 30.08695984]
[-34.45112991 17.04880524]
[-38.93399429 2.73433971]
[-40.27914810 -12.20522404]
[-38.42538834 -27.09023666]
[-33.45705414 -41.24352646]
[-25.60016823 -54.02121735]
[-15.21216869 -64.84201050]
[-2.76564097 -73.21362305]
[11.17318249 -78.75521088]
[25.97017860 -81.21466827]
[40.95218277 -80.48010254]
[55.43761063 -76.58493042]
[68.76747894 -69.70636749]
[80.33535767 -60.15732574]
[89.61499023 -48.37223434]
[96.18421936 -34.88723373]
[99.74418640 -20.31580353]
[100.13258362 -5.31652403]
[106.40994263 -18.93984032]
[112.68730927 -32.56315613]
[118.96466827 -46.18647385]
[125.24202728 -59.80978775]
[131.51939392 -73.43310547]
[137.79675293 -87.05641937]
[131.70901489 -99.07115936]
[133.62461853 -112.20664215]
[142.62254333 -121.69976807]
[155.25514221 -124.23886871]
[161.73463440 -137.76721191]
[168.21414185 -151.29556274]
[174.69363403 -164.82389832]
[169.67707825 -179.57083130]
[176.44093323 -193.19819641]
[190.53079224 -197.88983154]
[197.01028442 -211.41818237]
[203.48977661 -224.94651794]
[202.47280884 -240.73501587]
[214.94874573 -248.87135315]
[221.42823792 -262.39968872]
[208.76332092 -270.47167969]
[197.16372681 -280.01144409]
[186.79862976 -290.87982178]
[177.81918335 -302.91839600]
[170.35633850 -315.95156860]
[164.51890564 -329.78924561]
[160.39204407 -344.22970581]
[158.03590393 -359.06228638]
[157.48486328 -374.07073975]
[158.74694824 -389.03619385]
[161.80377197 -403.74038696]
[166.61073303 -417.96890259]
[173.09773254 -431.51422119]
[181.17019653 -444.17886353]
[190.71038818 -455.77807617]
[201.57917786 -466.14276123]
[213.61807251 -475.12176514]
[226.65150452 -482.58413696]
[240.48942566 -488.42102051]
[254.93002319 -492.54736328]
[269.76269531 -494.90295410]
[284.77117920 -495.45343018]
[299.73657227 -494.19076538]
[314.44064331 -491.13342285]
[328.66897583 -486.32592773]
[342.21408081 -479.83840942]
[354.87838745 -471.76547241]
[366.47726440 -462.22485352]
[376.84155273 -451.35568237]
[385.82009888 -439.31643677]
[393.28198242 -426.28271484]
[399.11837769 -412.44458008]
[403.24414062 -398.00384521]
[405.59918213 -383.17108154]
[406.14910889 -368.16256714]
[404.88589478 -353.19723511]
[401.82797241 -338.49325562]
[397.01995850 -324.26510620]
[390.53192139 -310.72027588]
[382.45852661 -298.05624390]
[372.91748047 -286.45773315]
[362.04791260 -276.09384155]
[350.00833130 -267.11575317]
[336.97433472 -259.65435791]
[323.13598633 -253.81849670]
[308.69509888 -249.69323730]
[293.86221313 -247.33877563]
[278.85369873 -246.78941345]
[263.88839722 -248.05317688]
[249.18455505 -251.11164856]
[234.95658875 -255.92019653]
[228.47709656 -242.39186096]
[229.95753479 -227.57099915]
[217.01812744 -218.46702576]
[210.53863525 -204.93867493]
[204.05914307 -191.41033936]
[209.23521423 -177.49114990]
[202.85679626 -163.67918396]
[188.22198486 -158.34440613]
[181.74247742 -144.81605530]
[175.26298523 -131.28771973]
[168.78349304 -117.75936890]
[175.04447937 -102.15043640]
[167.93928528 -86.53534698]
[151.42005920 -80.77906036]
[145.14270020 -67.15574646]
[138.86534119 -53.53242874]
[132.58798218 -39.90911102]
[126.31062317 -26.28579521]
[120.03326416 -12.66247940]
[113.75590515 0.96083665]
[110.32484436 15.56315899]
[109.87823486 30.55650902]
[109.43162537 45.54985809]
[108.98502350 60.54320908]
[108.53841400 75.53656006]
[108.09181213 90.52990723]
[115.31793976 77.38521576]
[125.91395569 66.76802826]
[139.04420471 59.51568222]
[153.67318726 56.20011520]
[168.64718628 57.08280563]
[182.78530884 62.09414673]
[194.97254944 70.83892059]
[204.24778748 82.62747955]
[209.87951660 96.53012085]
[211.42361450 111.45043945]
[208.75830078 126.21173859]
[202.09376526 139.64990234]
[191.95561218 150.70510864]
[179.14337158 158.50553894]
[164.66748047 162.43598938]
[149.66955566 162.18649292]
[135.33239746 157.77673340]
[122.78670502 149.55447388]
[113.02187347 138.16816711]
[106.80799866 124.51577759]
[104.63512421 109.67051697]
[99.80912018 123.87297058]
[94.98312378 138.07542419]
[90.15712738 152.27787781]
[85.33113098 166.48034668]
[81.35903168 180.94487000]
[78.25492096 195.62016296]
[82.96892548 210.72277832]
[72.76531982 221.57337952]
[69.66120911 236.24868774]
[66.55709839 250.92399597]
[63.45298767 265.59930420]
[60.34887695 280.27459717]
[57.24476624 294.94989014]
[61.95876312 310.05249023]
[51.75515747 320.90310669]
[48.65105057 335.57843018]
[61.65599060 343.33407593]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 209]
[17 208]
[19 206]
[20 205]
[21 204]
[22 203]
[23 202]
[24 201]
[26 199]
[27 198]
[36 197]
[37 196]
[38 195]
[39 194]
[40 193]
[41 172]
[42 171]
[43 170]
[44 169]
[45 168]
[46 167]
[74 166]
[75 165]
[76 164]
[77 163]
[78 162]
[79 161]
[80 160]
[84 157]
[85 156]
[86 155]
[87 154]
[90 151]
[91 150]
[92 149]
[94 147]
[95 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
