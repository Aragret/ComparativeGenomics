%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[73.20985413 801.28106689]
[58.21492004 800.77716064]
[43.26635361 799.49560547]
[28.40445518 797.43994141]
[13.66928482 794.61560059]
[-0.89942980 791.03027344]
[-15.26241589 786.69366455]
[-29.38095284 781.61737061]
[-43.21697617 775.81506348]
[-56.73319244 769.30249023]
[-69.89315796 762.09710693]
[-82.66140747 754.21844482]
[-95.00350189 745.68762207]
[-106.88618469 736.52770996]
[-118.27740479 726.76342773]
[-129.14646912 716.42102051]
[-139.46408081 705.52838135]
[-149.20240784 694.11492920]
[-158.33520508 682.21142578]
[-166.83786011 669.84991455]
[-174.68743896 657.06372070]
[-181.86277771 643.88739014]
[-188.34454346 630.35638428]
[-194.11526489 616.50714111]
[-199.15937805 602.37707520]
[-203.46328735 588.00427246]
[-207.01538086 573.42736816]
[-209.80610657 558.68585205]
[-211.82791138 543.81927490]
[-213.07536316 528.86785889]
[-213.54508972 513.87176514]
[-213.23583984 498.87158203]
[-212.14843750 483.90765381]
[-210.28581238 469.02032471]
[-207.65296936 454.24972534]
[-204.25704956 439.63571167]
[-200.10716248 425.21765137]
[-195.21452332 411.03442383]
[-189.59231567 397.12426758]
[-183.25569153 383.52465820]
[-176.22174072 370.27227783]
[-168.50941467 357.40286255]
[-160.13952637 344.95108032]
[-151.13461304 332.95053101]
[-141.51895142 321.43353271]
[-131.31848145 310.43115234]
[-120.56069946 299.97305298]
[-109.27459717 290.08740234]
[-97.49060822 280.80087280]
[-85.24049377 272.13851929]
[-72.55727386 264.12365723]
[-59.47515488 256.77789307]
[-46.02939606 250.12106323]
[-32.25624084 244.17109680]
[-18.19282913 238.94401550]
[-3.87706470 234.45393372]
[10.65245533 230.71295166]
[25.35656166 227.73114014]
[40.19561768 225.51655579]
[55.12961578 224.07516479]
[70.11830139 223.41084290]
[85.12126160 223.52539062]
[86.01407623 208.55198669]
[86.90689087 193.57858276]
[79.94084930 180.41334534]
[88.48583221 167.09817505]
[89.37864685 152.12477112]
[90.27146149 137.15136719]
[91.16427612 122.17795563]
[79.85044861 112.80340576]
[76.16908264 98.57904053]
[81.51465607 84.89292145]
[93.86231232 76.92922974]
[94.75512695 61.95582199]
[92.14242554 55.88249588]
[92.87857056 50.24732590]
[95.90399933 46.55195236]
[97.24223328 31.61176682]
[98.58046722 16.67158127]
[99.91870117 1.73139632]
[93.44344330 -12.70403385]
[102.28536224 -24.69026566]
[103.62359619 -39.63045120]
[88.93526459 -42.76258469]
[74.73158264 -47.64240646]
[61.21967316 -54.19875336]
[48.59658432 -62.33601379]
[37.04639816 -71.93552399]
[26.73754883 -82.85729218]
[17.82037354 -94.94204712]
[10.42490673 -108.01355743]
[4.65899897 -121.88120270]
[0.60673261 -136.34275818]
[-1.67279804 -151.18731689]
[-2.14635062 -166.19842529]
[-0.80701917 -181.15715027]
[2.32566452 -195.84536743]
[7.20601702 -210.04887390]
[13.76286793 -223.56053162]
[21.90060043 -236.18331909]
[31.50053978 -247.73313904]
[42.42269516 -258.04159546]
[54.50778198 -266.95831299]
[67.57957458 -274.35327148]
[81.44743347 -280.11868286]
[95.90914154 -284.17041016]
[110.75379181 -286.44937134]
[125.76490784 -286.92236328]
[140.72358704 -285.58248901]
[155.41168213 -282.44924927]
[169.61500549 -277.56835938]
[183.12641907 -271.01101685]
[195.74890137 -262.87280273]
[207.29837036 -253.27243042]
[217.60639954 -242.34988403]
[226.52267456 -230.26446533]
[233.91716003 -217.19239807]
[239.68203735 -203.32432556]
[243.73321533 -188.86247253]
[246.01164246 -174.01773071]
[246.48406982 -159.00659180]
[245.14361572 -144.04797363]
[242.00984192 -129.35998535]
[237.12841797 -115.15684509]
[230.57055664 -101.64567566]
[222.43188477 -89.02349854]
[212.83108521 -77.47438812]
[201.90815735 -67.16677094]
[189.82240295 -58.25094604]
[176.75006104 -50.85694885]
[162.88175964 -45.09259415]
[148.41975403 -41.04195023]
[133.57493591 -38.76408386]
[118.56378174 -38.29221725]
[117.22554779 -23.35203171]
[123.79652405 -9.98522377]
[114.85888672 3.06963038]
[113.52065277 18.00981522]
[112.18241882 32.95000076]
[110.84418488 47.89018631]
[109.72853851 62.84864044]
[108.83572388 77.82204437]
[120.14955139 87.19659424]
[123.83091736 101.42095947]
[118.48534393 115.10707855]
[106.13768768 123.07077026]
[105.24487305 138.04417419]
[104.35205078 153.01757812]
[103.45923615 167.99098206]
[110.36141968 182.22721863]
[101.88029480 194.47140503]
[100.98748016 209.44480896]
[100.09466553 224.41821289]
[115.00492859 226.08729553]
[129.80847168 228.52803040]
[144.46537781 231.73382568]
[158.93612671 235.69606018]
[173.18171692 240.40405273]
[187.16374207 245.84507751]
[200.84451294 252.00450134]
[214.18713379 258.86572266]
[227.15565491 266.41021729]
[239.71510315 274.61764526]
[251.83163452 283.46591187]
[263.47256470 292.93115234]
[274.60653687 302.98782349]
[285.20349121 313.60885620]
[295.23489380 324.76559448]
[304.67370605 336.42794800]
[313.49447632 348.56451416]
[321.67343140 361.14254761]
[329.18850708 374.12814331]
[336.01943970 387.48629761]
[342.14782715 401.18096924]
[347.55715942 415.17532349]
[352.23281860 429.43154907]
[356.16223145 443.91122437]
[359.33480835 458.57537842]
[361.74194336 473.38439941]
[363.37722778 488.29840088]
[364.23620605 503.27719116]
[364.31655884 518.28039551]
[363.61807251 533.26751709]
[362.14263916 548.19818115]
[359.89425659 563.03216553]
[356.87893677 577.72943115]
[353.10485840 592.25036621]
[348.58215332 606.55590820]
[343.32302856 620.60736084]
[337.34167480 634.36688232]
[330.65420532 647.79748535]
[323.27868652 660.86279297]
[315.23492432 673.52770996]
[306.54464722 685.75805664]
[297.23129272 697.52087402]
[287.31997681 708.78436279]
[276.83737183 719.51831055]
[265.81176758 729.69366455]
[254.27288818 739.28308105]
[242.25184631 748.26062012]
[229.78102112 756.60211182]
[216.89405823 764.28509521]
[203.62568665 771.28881836]
[190.01167297 777.59442139]
[176.08872986 783.18487549]
[161.89439392 788.04522705]
[147.46690369 792.16223145]
[132.84518433 795.52484131]
[118.06864166 798.12396240]
[103.17710876 799.95269775]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 153]
[63 152]
[64 151]
[66 149]
[67 148]
[68 147]
[69 146]
[73 142]
[74 141]
[77 140]
[78 139]
[79 138]
[80 137]
[82 135]
[83 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
