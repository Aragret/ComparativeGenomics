%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[73.36241150 697.44555664]
[61.25200653 706.34039307]
[47.99895477 713.42120361]
[33.87307358 718.54370117]
[19.16194534 721.60369873]
[4.16507006 722.53881836]
[-10.81223583 721.33007812]
[-25.46505356 718.00207520]
[-39.49506760 712.62255859]
[-52.61664963 705.30102539]
[-64.56266022 696.18652344]
[-75.08988953 685.46466064]
[-83.98401642 673.35369873]
[-91.06398010 660.10021973]
[-96.18562317 645.97399902]
[-99.24468994 631.26269531]
[-100.17889404 616.26574707]
[-98.96922302 601.28851318]
[-95.64029694 586.63592529]
[-90.25989532 572.60626221]
[-82.93754578 559.48510742]
[-73.82233429 547.53967285]
[-63.09982681 537.01312256]
[-50.98832321 528.11975098]
[-37.73439789 521.04058838]
[-23.60788155 515.91979980]
[-8.89637375 512.86163330]
[6.10061789 511.92837524]
[21.07777405 513.13897705]
[24.40003395 498.51153564]
[27.72229385 483.88406372]
[31.04455185 469.25659180]
[34.36681366 454.62915039]
[37.68907166 440.00167847]
[41.01132965 425.37423706]
[43.01534653 410.50869751]
[43.68513107 395.52365112]
[44.35491562 380.53860474]
[45.02470016 365.55358887]
[45.69448471 350.56854248]
[46.36426926 335.58349609]
[34.59262085 344.88018799]
[19.67960167 343.26715088]
[10.16807175 331.66839600]
[11.50666332 316.72824097]
[22.92857361 307.00506592]
[37.89081192 308.06875610]
[47.82201385 319.30908203]
[49.82603073 304.44357300]
[51.83004379 289.57803345]
[49.69821548 285.30435181]
[50.22845840 279.64608765]
[54.12141800 274.30227661]
[56.56714630 259.50299072]
[55.04619980 257.14825439]
[54.36636353 254.04914856]
[54.81581879 250.52304077]
[56.56265259 246.98565674]
[59.62422943 243.90658569]
[62.94648743 229.27911377]
[66.26874542 214.65165710]
[69.59100342 200.02420044]
[61.46060562 187.59712219]
[64.62147522 172.71546936]
[77.71125793 164.27182007]
[81.03351593 149.64436340]
[84.35578156 135.01689148]
[87.67803955 120.38943481]
[91.00029755 105.76197815]
[92.67183685 90.85540771]
[92.67183685 75.85540771]
[92.67183685 60.85540390]
[92.67183685 45.85540390]
[89.70227814 39.94835281]
[90.10169983 34.27936172]
[92.90181732 30.41046143]
[93.34841919 15.41711044]
[93.68339539 0.42085144]
[93.90672302 -14.57748604]
[94.13005066 -29.57582283]
[94.35337830 -44.57416153]
[94.57670593 -59.57249832]
[94.80003357 -74.57083893]
[87.26905823 -88.48467255]
[95.19499207 -101.09533691]
[87.66400909 -115.00917816]
[95.58994293 -127.61984253]
[88.05896759 -141.53367615]
[95.98490143 -154.14434814]
[81.22630310 -157.04667664]
[67.22319031 -162.53781128]
[54.42570114 -170.44123840]
[43.24522781 -180.50289917]
[34.04117584 -192.39932251]
[27.10941696 -205.74812317]
[22.67277718 -220.12019348]
[20.87387466 -235.05349731]
[21.77054024 -250.06800842]
[25.33394623 -264.68109131]
[31.44954681 -278.42297363]
[39.92074966 -290.85189819]
[50.47524261 -301.56835938]
[62.77373886 -310.22784424]
[76.42089081 -316.55200195]
[90.97800446 -320.33752441]
[105.97712708 -321.46273804]
[120.93610382 -319.89144897]
[135.37405396 -315.67419434]
[148.82685852 -308.94650269]
[160.86207581 -299.92468262]
[171.09281921 -288.89874268]
[179.19021606 -276.22308350]
[184.89395142 -262.30520630]
[188.02070618 -247.59252930]
[188.46992493 -232.55796814]
[186.22720337 -217.68482971]
[181.36462402 -203.45124817]
[174.03849792 -190.31474304]
[164.48431396 -178.69761658]
[153.00923157 -168.97331238]
[139.98210144 -161.45442200]
[125.82170868 -156.38264465]
[110.98323822 -153.92102051]
[118.53018951 -141.07995605]
[110.58827972 -127.39651489]
[118.13523865 -114.55545807]
[110.19332886 -100.87200928]
[117.74028015 -88.03095245]
[109.79837799 -74.34751129]
[109.57505035 -59.34917068]
[109.35171509 -44.35083389]
[109.12838745 -29.35249519]
[108.90505981 -14.35415840]
[108.68173218 0.64417917]
[111.72530365 7.37905121]
[108.34177399 15.86371613]
[107.89516449 30.85706711]
[107.67183685 45.85540390]
[107.67183685 60.85540390]
[107.67183685 75.85540771]
[107.67183685 90.85540771]
[115.09481049 77.82085419]
[126.67897797 68.29158783]
[140.90025330 63.52133942]
[155.88758850 64.13772583]
[169.66912842 70.05963898]
[180.43168640 80.50796509]
[186.75924683 94.10803223]
[187.81933594 109.07052612]
[183.47245789 123.42687225]
[174.29052734 135.28823853]
[161.48158264 143.09407043]
[146.73086548 145.81736755]
[131.97908020 143.09983826]
[119.16709137 135.29902649]
[109.98051453 123.44124603]
[105.62775421 109.08423615]
[102.30549622 123.71170044]
[98.98323822 138.33915710]
[95.66098022 152.96661377]
[92.33872223 167.59408569]
[100.49688721 180.86366272]
[96.91927338 195.65066528]
[84.21846771 203.34645081]
[80.89620972 217.97392273]
[77.57394409 232.60137939]
[74.25168610 247.22883606]
[71.36641693 261.94873047]
[68.92068481 276.74798584]
[66.69557190 291.58203125]
[64.69155884 306.44757080]
[62.68754196 321.31311035]
[61.34930801 336.25329590]
[60.67952347 351.23831177]
[60.00973892 366.22335815]
[59.33995438 381.20840454]
[58.67016983 396.19345093]
[58.00038528 411.17846680]
[66.68424225 398.94775391]
[79.77277374 391.62039185]
[94.73878479 390.61117554]
[108.69257355 396.11495972]
[118.93988037 407.06909180]
[123.50211334 421.35842896]
[121.49838257 436.22399902]
[113.31556702 448.79547119]
[100.53363800 456.64544678]
[85.62059784 458.25830078]
[71.45591736 453.32254028]
[60.77456665 442.79119873]
[55.63879013 428.69647217]
[52.31653214 443.32394409]
[48.99427414 457.95141602]
[45.67201233 472.57885742]
[42.34975433 487.20632935]
[39.02749252 501.83377075]
[35.70523453 516.46124268]
[49.73591614 521.83905029]
[62.85840225 529.15893555]
[74.80554199 538.27197266]
[85.33409882 548.99249268]
[94.22972870 561.10235596]
[101.31132507 574.35498047]
[106.43472290 588.48052979]
[109.49560547 603.19146729]
[110.43167114 618.18829346]
[109.22385406 633.16564941]
[105.89673615 647.81866455]
[100.51807404 661.84906006]
[93.19734955 674.97106934]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 197]
[30 196]
[31 195]
[32 194]
[33 193]
[34 192]
[35 191]
[36 178]
[37 177]
[38 176]
[39 175]
[40 174]
[41 173]
[48 172]
[49 171]
[50 170]
[53 169]
[54 168]
[59 167]
[60 166]
[61 165]
[62 164]
[65 161]
[66 160]
[67 159]
[68 158]
[69 157]
[70 141]
[71 140]
[72 139]
[73 138]
[76 137]
[77 136]
[78 134]
[79 133]
[80 132]
[81 131]
[82 130]
[83 129]
[85 127]
[87 125]
[89 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
