%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAAxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[58.82908249 616.40075684]
[44.50163269 621.15753174]
[29.42206955 621.87127686]
[14.70939922 618.48895264]
[1.45539665 611.26165771]
[-9.35640240 600.72564697]
[-16.92368889 587.66278076]
[-20.68492317 573.04235840]
[-20.36099434 557.94940186]
[-15.97594070 543.50384521]
[-7.85516310 530.77770996]
[3.39872432 520.71527100]
[16.95060730 514.06329346]
[31.79484749 511.31533813]
[33.13307953 496.37515259]
[34.47131348 481.43496704]
[35.80955124 466.49478149]
[37.14778519 451.55459595]
[28.91702843 436.05551147]
[39.63507843 421.08203125]
[40.75072479 406.12356567]
[41.86637497 391.16513062]
[39.48395538 387.02590942]
[39.67647171 381.34613037]
[43.24445724 375.78005981]
[44.80498123 360.86145020]
[46.36550522 345.94287109]
[33.24695206 353.21633911]
[19.32348633 347.63629150]
[14.85896587 333.31610107]
[23.14447021 320.81207275]
[38.07223129 319.34173584]
[48.63751602 329.98739624]
[51.30331039 315.22616577]
[53.96910477 300.46496582]
[56.63490295 285.70373535]
[44.19364166 278.94885254]
[34.43194962 268.66632080]
[28.31382942 255.85231018]
[26.44939995 241.75396729]
[29.03407860 227.74790955]
[35.82819366 215.20591736]
[46.17914200 205.36050415]
[59.08404541 199.18386841]
[73.28692627 197.29183960]
[76.17220306 182.57196045]
[79.05747223 167.85206604]
[81.94274902 153.13217163]
[84.82801819 138.41227722]
[87.71329498 123.69239044]
[90.59856415 108.97249603]
[93.04429626 94.17322540]
[95.04830933 79.30770111]
[97.05232239 64.44216919]
[87.01517487 75.58917236]
[72.97975159 80.88132477]
[58.08159637 79.13633728]
[45.64899445 70.74404907]
[38.45942688 57.57932281]
[38.11905670 42.58318710]
[44.70392227 29.10581398]
[56.74295044 20.15809059]
[71.54659271 17.73895454]
[85.80767059 22.38885307]
[96.34023285 33.06898117]
[100.79127502 47.39339828]
[105.19227600 33.05355072]
[98.04364777 19.21393585]
[102.71116638 4.73398590]
[115.94917297 -1.99584579]
[120.35017395 -16.33569336]
[117.00235748 -31.79863930]
[128.13331604 -41.69565964]
[132.53431702 -56.03550720]
[136.93531799 -70.37535095]
[141.33631897 -84.71520233]
[127.71676636 -92.01769257]
[115.78130341 -101.82686615]
[105.98469543 -113.76663208]
[98.69973755 -127.37976837]
[94.20312500 -142.14544678]
[92.66487122 -157.49911499]
[94.14195251 -172.85412598]
[98.57613373 -187.62413025]
[105.79632568 -201.24545288]
[115.52512360 -213.19865417]
[127.38951111 -223.02827454]
[140.93515015 -230.36024475]
[155.64376831 -234.91610718]
[170.95298767 -236.52352905]
[186.27786255 -235.12294006]
[190.46487427 -249.52671814]
[194.65188599 -263.93051147]
[198.83889771 -278.33428955]
[203.02589417 -292.73806763]
[189.40196228 -299.08541870]
[176.90667725 -307.43814087]
[165.83294678 -317.60049438]
[156.44035339 -329.33416748]
[148.94908142 -342.36419678]
[143.53472900 -356.38507080]
[140.32420349 -371.06814575]
[139.39279175 -386.06924438]
[140.76231384 -401.03671265]
[144.40066528 -415.61968994]
[150.22256470 -429.47628784]
[158.09152222 -442.28176880]
[167.82308960 -453.73590088]
[179.18914795 -463.57015991]
[191.92326355 -471.55407715]
[205.72691345 -477.50048828]
[220.27653503 -481.26995850]
[235.23106384 -482.77413940]
[250.23994446 -481.97781372]
[264.95132446 -478.89959717]
[279.02038574 -473.61166382]
[292.11730957 -466.23797607]
[303.93505859 -456.95138550]
[314.19665527 -445.96957397]
[322.66156006 -433.54998779]
[329.13128662 -419.98373413]
[333.45419312 -405.58886719]
[335.52899170 -390.70275879]
[335.30697632 -375.67443848]
[332.79339600 -360.85610962]
[328.04718018 -346.59518433]
[321.17956543 -333.22598267]
[312.35153198 -321.06182861]
[301.77001953 -310.38790894]
[289.68310547 -301.45443726]
[276.37411499 -294.47082520]
[262.15499878 -289.60079956]
[247.35910034 -286.95846558]
[232.33325195 -286.60580444]
[217.42968750 -288.55105591]
[213.24267578 -274.14727783]
[209.05566406 -259.74349976]
[204.86865234 -245.33970642]
[200.68164062 -230.93592834]
[213.68019104 -224.34173584]
[225.24383545 -215.46211243]
[234.97541809 -204.60012817]
[242.54029846 -192.12699890]
[247.67794800 -178.46936035]
[250.21090698 -164.09468079]
[250.05085754 -149.49530029]
[247.20176697 -135.17152405]
[241.75979614 -121.61448669]
[233.91000366 -109.28932953]
[223.92008972 -98.61921692]
[212.13130188 -89.97084045]
[198.94670105 -83.64178467]
[184.81744385 -79.85029602]
[170.22731018 -78.72777557]
[155.67616272 -80.31420135]
[151.27516174 -65.97435760]
[146.87416077 -51.63451004]
[142.47317505 -37.29466248]
[146.13577271 -22.85739517]
[134.69001770 -11.93469524]
[130.28901672 2.40515232]
[137.47262573 15.40251732]
[133.21365356 30.00785446]
[119.53211975 37.45454788]
[115.13111877 51.79439545]
[111.91784668 66.44618225]
[109.91383362 81.31171417]
[107.90982056 96.17723846]
[109.54565430 98.74892426]
[110.28191376 101.97265625]
[109.87528229 105.51639557]
[108.20853424 108.96287537]
[105.31845856 111.85777283]
[102.43318176 126.57765961]
[99.54791260 141.29754639]
[96.66263580 156.01744080]
[93.77736664 170.73733521]
[90.89208984 185.45722961]
[88.00682068 200.17712402]
[101.69377136 208.33232117]
[111.74382782 220.66040039]
[116.95612335 235.65921021]
[116.71780396 251.50926208]
[111.07607269 266.29443359]
[100.73022461 278.23367310]
[86.94501495 285.89547729]
[71.39611816 288.36953735]
[68.73032379 303.13073730]
[66.06452942 317.89196777]
[63.39873123 332.65316772]
[61.28410721 347.50338745]
[59.72358704 362.42199707]
[58.16306305 377.34057617]
[56.82482910 392.28076172]
[55.70917892 407.23922729]
[54.59353256 422.19769287]
[62.40352249 432.46252441]
[61.16634750 444.89846802]
[52.08796692 452.89282227]
[50.74973297 467.83300781]
[49.41149902 482.77319336]
[48.07326508 497.71337891]
[46.73503113 512.65356445]
[60.85460663 517.99584961]
[73.00856781 526.95043945]
[82.29501343 538.85272217]
[88.02482605 552.81951904]
[89.77281952 567.81439209]
[87.40927124 582.72467041]
[81.10958099 596.44390869]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 203]
[15 202]
[16 201]
[17 200]
[18 199]
[20 196]
[21 195]
[22 194]
[25 193]
[26 192]
[27 191]
[33 190]
[34 189]
[35 188]
[36 187]
[45 179]
[46 178]
[47 177]
[48 176]
[49 175]
[50 174]
[51 173]
[52 168]
[53 167]
[54 166]
[66 165]
[67 164]
[70 161]
[71 160]
[73 158]
[74 157]
[75 156]
[76 155]
[91 139]
[92 138]
[93 137]
[94 136]
[95 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
