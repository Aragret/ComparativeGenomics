%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[60.63323975 969.57641602]
[45.63579178 969.17370605]
[30.67449570 968.05786133]
[15.78323841 966.23138428]
[0.99575526 963.69842529]
[-13.65445423 960.46466064]
[-28.13420296 956.53753662]
[-42.41069031 951.92590332]
[-56.45157623 946.64013672]
[-70.22505188 940.69226074]
[-83.69991302 934.09576416]
[-96.84563446 926.86560059]
[-109.63244629 919.01812744]
[-122.03137207 910.57110596]
[-134.01432800 901.54364014]
[-145.55416870 891.95629883]
[-156.62475586 881.83068848]
[-167.20100403 871.18981934]
[-177.25897217 860.05773926]
[-186.77584839 848.45971680]
[-195.73008728 836.42193604]
[-204.10140991 823.97180176]
[-211.87083435 811.13739014]
[-219.02078247 797.94787598]
[-225.53504944 784.43304443]
[-231.39888000 770.62359619]
[-236.59898376 756.55078125]
[-241.12358093 742.24645996]
[-244.96241760 727.74304199]
[-248.10682678 713.07342529]
[-250.54965210 698.27075195]
[-252.28536987 683.36865234]
[-253.31004333 668.40081787]
[-253.62136841 653.40118408]
[-253.21862793 638.40374756]
[-252.10272217 623.44244385]
[-250.27621460 608.55120850]
[-247.74320984 593.76373291]
[-244.50944519 579.11352539]
[-240.58227539 564.63378906]
[-235.97056580 550.35729980]
[-230.68478394 536.31646729]
[-224.73689270 522.54296875]
[-218.14038086 509.06814575]
[-210.91017151 495.92242432]
[-203.06265259 483.13562012]
[-194.61560059 470.73672485]
[-185.58815002 458.75378418]
[-176.00076294 447.21395874]
[-165.87513733 436.14340210]
[-155.23422241 425.56716919]
[-144.10212708 415.50924683]
[-132.50405884 405.99240112]
[-120.46630096 397.03817749]
[-108.01611328 388.66690063]
[-95.18170929 380.89749146]
[-81.99215698 373.74755859]
[-68.47734070 367.23333740]
[-54.66786957 361.36953735]
[-40.59502792 356.16946411]
[-26.29069710 351.64489746]
[-11.78727913 347.80609131]
[2.88236880 344.66171265]
[17.68501663 342.21893311]
[32.58712769 340.48324585]
[47.55495071 339.45858765]
[62.55457306 339.14730835]
[77.55201721 339.55007935]
[78.66767120 324.59164429]
[79.78331757 309.63317871]
[71.32271576 294.25836182]
[81.81664276 279.12698364]
[82.70945740 264.15356445]
[75.74341583 250.98832703]
[84.28839874 237.67315674]
[77.32235718 224.50791931]
[85.86734009 211.19273376]
[86.76016235 196.21932983]
[87.65297699 181.24592590]
[88.54579163 166.27252197]
[89.43860626 151.29911804]
[90.33142090 136.32571411]
[91.22423553 121.35230255]
[92.11705780 106.37889862]
[89.41508484 98.78469849]
[93.13626862 91.18972015]
[94.25191498 76.23126984]
[95.36756134 61.27281570]
[96.48321533 46.31436157]
[86.57749176 37.18795395]
[83.77756500 24.21217537]
[88.88658142 12.17141151]
[99.83306885 5.37406158]
[101.17130280 -9.56612396]
[94.69604492 -24.00155449]
[103.53796387 -35.98778534]
[104.87619781 -50.92797089]
[106.10317230 -65.87770081]
[107.21881866 -80.83615875]
[93.29430389 -86.78482056]
[82.05745697 -96.93429565]
[74.72716522 -110.18365479]
[72.09856415 -125.09570312]
[74.45678711 -140.05288696]
[81.54602814 -153.43278503]
[92.59730530 -163.78401184]
[106.41184998 -169.98376465]
[121.49117279 -171.35954285]
[136.19956970 -167.76210022]
[148.94160461 -159.58168030]
[158.33509827 -147.70561218]
[163.36111450 -133.42213440]
[163.47448730 -118.28060150]
[158.66290283 -103.92346191]
[149.44827271 -91.90807343]
[136.83016968 -83.53777313]
[122.17727661 -79.72051239]
[121.06162262 -64.76205444]
[123.69892883 -57.85796738]
[119.81638336 -49.58973694]
[118.47814941 -34.64955139]
[125.04912567 -21.28274345]
[116.11148834 -8.22788906]
[114.77325439 6.71229553]
[126.09845734 19.14525795]
[124.90394592 36.25922775]
[111.44166565 47.43001175]
[110.32601929 62.38846588]
[109.21037292 77.34691620]
[108.09471893 92.30537415]
[107.09046173 107.27171326]
[106.19764709 122.24512482]
[105.30483246 137.21852112]
[104.41201019 152.19194031]
[103.51919556 167.16534424]
[102.62638092 182.13874817]
[101.73356628 197.11215210]
[100.84075165 212.08555603]
[107.74292755 226.32179260]
[99.26181030 238.56596375]
[106.16398621 252.80220032]
[97.68286896 265.04638672]
[96.79004669 280.01977539]
[104.75200653 290.16720581]
[103.70011902 302.62020874]
[94.74176788 310.74884033]
[93.62612152 325.70727539]
[92.51047516 340.66574097]
[107.40174103 342.49215698]
[122.18923187 345.02505493]
[136.83946228 348.25872803]
[151.31922913 352.18579102]
[165.59573364 356.79739380]
[179.63664246 362.08309937]
[193.41014099 368.03088379]
[206.88504028 374.62731934]
[220.03079224 381.85742188]
[232.81764221 389.70486450]
[245.21659851 398.15182495]
[257.19961548 407.17919922]
[268.73950195 416.76651001]
[279.81011963 426.89205933]
[290.38641357 437.53289795]
[300.44442749 448.66491699]
[309.96136475 460.26293945]
[318.91564941 472.30062866]
[327.28701782 484.75076294]
[335.05651855 497.58511353]
[342.20651245 510.77462769]
[348.72085571 524.28936768]
[354.58474731 538.09881592]
[359.78491211 552.17163086]
[364.30957031 566.47595215]
[368.14846802 580.97930908]
[371.29293823 595.64892578]
[373.73583984 610.45159912]
[375.47161865 625.35369873]
[376.49636841 640.32147217]
[376.80776978 655.32110596]
[376.40509033 670.31854248]
[375.28924561 685.27984619]
[373.46279907 700.17114258]
[370.92987061 714.95861816]
[367.69616699 729.60882568]
[363.76907349 744.08856201]
[359.15744019 758.36511230]
[353.87170410 772.40600586]
[347.92388916 786.17944336]
[341.32742310 799.65435791]
[334.09729004 812.80010986]
[326.24981689 825.58691406]
[317.80282593 837.98583984]
[308.77542114 849.96881104]
[299.18807983 861.50872803]
[289.06250000 872.57928467]
[278.42166138 883.15557861]
[267.28958130 893.21356201]
[255.69157410 902.73046875]
[243.65385437 911.68475342]
[231.20370483 920.05609131]
[218.36933899 927.82556152]
[205.17982483 934.97552490]
[191.66502380 941.48980713]
[177.85559082 947.35369873]
[163.78276062 952.55383301]
[149.47845459 957.07843018]
[134.97505188 960.91729736]
[120.30541992 964.06176758]
[105.50278473 966.50463867]
[90.60067749 968.24035645]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 148]
[69 147]
[70 146]
[72 143]
[73 142]
[75 140]
[77 138]
[78 137]
[79 136]
[80 135]
[81 134]
[82 133]
[83 132]
[84 131]
[86 130]
[87 129]
[88 128]
[89 127]
[93 124]
[94 123]
[96 121]
[97 120]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
