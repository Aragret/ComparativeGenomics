%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[179.63748169 619.50061035]
[169.15209961 608.76672363]
[159.38349915 597.37664795]
[150.37268066 585.37817383]
[142.15740967 572.82159424]
[134.77217102 559.75952148]
[128.24790955 546.24682617]
[122.61202240 532.34014893]
[117.88813019 518.09783936]
[114.09605408 503.57958984]
[111.25169373 488.84634399]
[109.36698151 473.95986938]
[108.44982910 458.98263550]
[108.50407410 443.97744751]
[109.52948761 429.00723267]
[111.52178192 414.13476562]
[114.47258759 399.42248535]
[118.36953735 384.93203735]
[123.19627380 370.72424316]
[128.93255615 356.85867310]
[135.55433655 343.39352417]
[143.03382874 330.38519287]
[151.33966064 317.88830566]
[160.43701172 305.95529175]
[170.28768921 294.63613892]
[180.85041809 283.97839355]
[192.08085632 274.02670288]
[203.93191528 264.82281494]
[195.51730347 252.40533447]
[187.10267639 239.98783875]
[178.68806458 227.57034302]
[170.27343750 215.15284729]
[161.85882568 202.73535156]
[153.44419861 190.31785583]
[137.02844238 190.30603027]
[123.72110748 180.41276550]
[118.88484955 164.37805176]
[124.61528778 148.46395874]
[116.01672363 136.17312622]
[107.41815948 123.88228607]
[98.81959534 111.59144592]
[99.38511658 126.58078003]
[93.47045898 140.36544800]
[82.21765137 150.28382874]
[67.79943085 154.42083740]
[52.99972916 151.97770691]
[40.67614365 143.42614746]
[33.20816040 130.41732788]
[32.03772736 115.46306610]
[37.39084244 101.45077515]
[48.23390198 91.08602905]
[62.47327805 86.37007904]
[77.35957336 88.21350861]
[90.01937103 96.26129150]
[83.74201202 82.63797760]
[77.46465302 69.01465607]
[63.21640396 70.52763367]
[49.21840286 67.57071686]
[36.83648300 60.44596100]
[27.27460861 49.86143494]
[21.45780182 36.86085892]
[19.94267464 22.72070503]
[22.86418724 8.82485104]
[29.92373848 -3.47083735]
[40.41963196 -12.97081947]
[34.34579849 -26.68608665]
[28.27196312 -40.40135193]
[22.19812965 -54.11661911]
[16.12429428 -67.83188629]
[1.68730438 -63.67411423]
[-13.18137932 -61.52097702]
[-28.20476151 -61.41257858]
[-43.10296631 -63.35094833]
[-57.59844589 -67.29997253]
[-71.42116547 -73.18607330]
[-84.31360626 -80.89961243]
[-96.03559875 -90.29687500]
[-106.36876678 -101.20281219]
[-115.12061310 -113.41423798]
[-122.12808990 -126.70367432]
[-127.26065063 -140.82353210]
[-130.42268372 -155.51078796]
[-131.55528259 -170.49180603]
[-130.63734436 -185.48751831]
[-127.68597412 -200.21853638]
[-122.75615692 -214.41046143]
[-115.93972015 -227.79888916]
[-107.36365509 -240.13439941]
[-97.18773651 -251.18719482]
[-85.60152435 -260.75137329]
[-72.82086945 -268.64877319]
[-59.08386612 -274.73220825]
[-44.64642334 -278.88842773]
[-29.77750778 -281.03994751]
[-14.75411510 -281.14672852]
[0.14387928 -279.20675659]
[14.63893318 -275.25616455]
[28.46101379 -269.36856079]
[41.35262299 -261.65362549]
[53.07359695 -252.25508118]
[63.40558624 -241.34803772]
[72.15610504 -229.13566589]
[79.16213989 -215.84545898]
[84.29317474 -201.72505188]
[87.45362091 -187.03746033]
[88.58460236 -172.05630493]
[87.66503906 -157.06071472]
[84.71207428 -142.33000183]
[79.78071594 -128.13861084]
[72.96282959 -114.75092316]
[64.38543701 -102.41633606]
[54.20831680 -91.36463928]
[42.62107086 -81.80171967]
[29.83956146 -73.90572357]
[35.91339493 -60.19045258]
[41.98722839 -46.47518539]
[48.06106186 -32.75991821]
[54.13489914 -19.04465294]
[69.82849121 -20.30967522]
[85.03239441 -16.11726761]
[97.90346527 -6.95660830]
[106.87484741 6.07969236]
[110.84669495 21.42587471]
[109.32099915 37.23108292]
[102.46392822 51.58259964]
[91.08796692 62.73729706]
[97.36532593 76.36061859]
[103.64269257 89.98393250]
[111.11042786 102.99288177]
[119.70899200 115.28372192]
[128.30755615 127.57456207]
[136.90612793 139.86540222]
[150.66775513 139.08554077]
[162.92048645 145.15919495]
[170.51138306 156.40409851]
[171.54637146 169.82322693]
[165.86169434 181.90322876]
[174.27632141 194.32072449]
[182.69093323 206.73822021]
[191.10556030 219.15571594]
[199.52017212 231.57321167]
[207.93479919 243.99070740]
[216.34941101 256.40820312]
[229.29002380 248.81219482]
[242.69519043 242.06974792]
[256.50866699 236.20916748]
[270.67254639 231.25503540]
[285.12741089 227.22810364]
[299.81262207 224.14529419]
[314.66656494 222.01951599]
[329.62698364 220.85969543]
[344.63107300 220.67068481]
[359.61593628 221.45330811]
[374.51873779 223.20423889]
[389.27694702 225.91616821]
[403.82864380 229.57771301]
[418.11282349 234.17350769]
[432.06954956 239.68428040]
[445.64028931 246.08691406]
[458.76812744 253.35455322]
[471.39801025 261.45672607]
[483.47695923 270.35943604]
[494.95428467 280.02532959]
[505.78186035 290.41390991]
[515.91430664 301.48153687]
[525.30908203 313.18185425]
[533.92675781 325.46575928]
[541.73126221 338.28170776]
[548.68981934 351.57595825]
[554.77325439 365.29278564]
[559.95599365 379.37460327]
[564.21636963 393.76239014]
[567.53649902 408.39575195]
[569.90246582 423.21334839]
[571.30432129 438.15301514]
[571.73614502 453.15209961]
[571.19622803 468.14767456]
[569.68670654 483.07687378]
[567.21405029 497.87701416]
[563.78857422 512.48608398]
[559.42456055 526.84277344]
[554.14044189 540.88690186]
[547.95831299 554.55950928]
[540.90417480 567.80328369]
[533.00750732 580.56262207]
[524.30151367 592.78411865]
[514.82263184 604.41638184]
[504.61068726 615.41076660]
[493.70852661 625.72100830]
[482.16183472 635.30395508]
[470.01904297 644.11938477]
[457.33108521 652.13031006]
[444.15121460 659.30310059]
[430.53466797 665.60778809]
[416.53857422 671.01782227]
[402.22164917 675.51055908]
[387.64395142 679.06713867]
[372.86657715 681.67260742]
[357.95156860 683.31610107]
[342.96145630 683.99072266]
[327.95910645 683.69354248]
[313.00744629 682.42596436]
[298.16918945 680.19317627]
[283.50659180 677.00457764]
[269.08111572 672.87359619]
[254.95332336 667.81750488]
[241.18243408 661.85754395]
[227.82620239 655.01861572]
[214.94067383 647.32958984]
[202.57987976 638.82250977]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 143]
[29 142]
[30 141]
[31 140]
[32 139]
[33 138]
[34 137]
[38 132]
[39 131]
[40 130]
[41 129]
[54 128]
[55 127]
[56 126]
[65 118]
[66 117]
[67 116]
[68 115]
[69 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
