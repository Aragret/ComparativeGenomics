%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAAxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[117.14539337 384.75949097]
[113.33457184 370.24316406]
[110.70419312 355.46725464]
[109.27131653 340.52758789]
[109.04524231 325.52108765]
[110.02742767 310.54504395]
[112.21150208 295.69662476]
[115.58331299 281.07208252]
[120.12098694 266.76626587]
[125.79508972 252.87199402]
[132.56881714 239.47935486]
[140.39825439 226.67521667]
[149.23262024 214.54258728]
[159.01461792 203.16020203]
[169.68078613 192.60183716]
[160.01997375 181.12713623]
[150.35917664 169.65243530]
[140.61320496 158.24996948]
[130.78262329 146.92037964]
[120.95204163 135.59078979]
[111.12145996 124.26119232]
[101.29087830 112.93160248]
[91.12733459 101.89972687]
[80.63983154 91.17534637]
[70.15232849 80.45096588]
[59.66482925 69.72658539]
[56.88951111 84.46760559]
[43.70631409 91.62325287]
[29.83340454 85.91866302]
[25.49737358 71.55903625]
[33.89458084 59.12976074]
[48.83337021 57.79265976]
[39.17256165 46.31795883]
[34.26393509 44.54243469]
[30.86690712 41.37802505]
[29.25738716 37.63309479]
[29.35047722 34.10837173]
[20.21167374 22.21373749]
[11.07287216 10.31910515]
[1.93406963 -1.57552779]
[-7.20473289 -13.47016048]
[-16.34353447 -25.36479378]
[-25.48233795 -37.25942612]
[-34.62113953 -49.15406036]
[-43.75994110 -61.04869080]
[-52.89874268 -72.94332886]
[-65.51451111 -64.81301117]
[-78.75858307 -57.75227356]
[-92.54049683 -51.80934906]
[-106.76610565 -47.02483368]
[-121.33823395 -43.43140793]
[-136.15733337 -41.05362320]
[-151.12217712 -39.90772247]
[-166.13052368 -40.00152969]
[-181.07987976 -41.33440399]
[-195.86808777 -43.89724731]
[-210.39416504 -47.67254257]
[-224.55885315 -52.63451004]
[-238.26539612 -58.74924469]
[-251.42018127 -65.97498322]
[-263.93331909 -74.26236725]
[-275.71936035 -83.55477142]
[-286.69778442 -93.78873444]
[-296.79357910 -104.89434052]
[-305.93780518 -116.79572296]
[-314.06796265 -129.41157532]
[-321.12854004 -142.65574646]
[-327.07128906 -156.43772888]
[-331.85565186 -170.66339111]
[-335.44888306 -185.23556519]
[-337.82650757 -200.05468750]
[-338.97222900 -215.01954651]
[-338.87823486 -230.02789307]
[-337.54519653 -244.97721863]
[-334.98217773 -259.76541138]
[-331.20669556 -274.29144287]
[-326.24456787 -288.45605469]
[-320.12966919 -302.16253662]
[-312.90377808 -315.31723022]
[-304.61624146 -327.83029175]
[-295.32369995 -339.61621094]
[-285.08959961 -350.59451294]
[-273.98385620 -360.69018555]
[-262.08236694 -369.83422852]
[-249.46641541 -377.96426392]
[-236.22218323 -385.02468872]
[-222.44012451 -390.96728516]
[-208.21440125 -395.75146484]
[-193.64218140 -399.34451294]
[-178.82302856 -401.72195435]
[-163.85816956 -402.86749268]
[-148.84980774 -402.77334595]
[-133.90049744 -401.44009399]
[-119.11234283 -398.87692261]
[-104.58636475 -395.10125732]
[-90.42179108 -390.13897705]
[-76.71538544 -384.02389526]
[-63.56077957 -376.79785156]
[-51.04782867 -368.51016235]
[-39.26201248 -359.21749878]
[-28.28384209 -348.98327637]
[-18.18830872 -337.87741089]
[-9.04438019 -325.97583008]
[-0.91451544 -313.35977173]
[6.14574766 -300.11544800]
[12.08817959 -286.33331299]
[16.87218666 -272.10751343]
[20.46508980 -257.53527832]
[22.84234428 -242.71609497]
[23.98771286 -227.75120544]
[23.89336777 -212.74285889]
[22.55995750 -197.79356384]
[19.99658775 -183.00543213]
[16.22077179 -168.47949219]
[11.25829983 -154.31498718]
[5.14307213 -140.60865784]
[-2.08313632 -127.45413208]
[-10.37096310 -114.94127655]
[-19.66379356 -103.15557861]
[-29.89814758 -92.17752838]
[-41.00411224 -82.08213043]
[-31.86530876 -70.18749237]
[-22.72650719 -58.29286194]
[-13.58770466 -46.39822769]
[-4.44890213 -34.50359726]
[4.68990040 -22.60896301]
[13.82870293 -10.71433067]
[22.96750450 1.18030274]
[32.10630798 13.07493591]
[41.24510956 24.96956825]
[50.64726257 36.65715027]
[60.30807114 48.13185120]
[70.38921356 59.23908234]
[80.87670898 69.96346283]
[91.36421204 80.68784332]
[101.85171509 91.41222382]
[104.88554382 91.70444489]
[107.88008881 93.10701752]
[110.42390442 95.60750580]
[112.11588287 99.04166412]
[112.62047577 103.10102081]
[122.45105743 114.43061066]
[132.28163147 125.76020813]
[142.11221313 137.08979797]
[151.94279480 148.41938782]
[159.93063354 152.85023499]
[161.83386230 159.99162292]
[171.49467468 171.46632385]
[181.15548706 182.94102478]
[193.37684631 174.22984314]
[206.25955200 166.53033447]
[219.72001648 159.89241028]
[233.67098999 154.35916138]
[248.02195740 149.96643066]
[262.67984009 146.74272156]
[277.54962158 144.70896912]
[292.53482056 143.87831116]
[307.53826904 144.25617981]
[322.46267700 145.84010315]
[337.21121216 148.61981201]
[351.68826294 152.57728577]
[365.79989624 157.68685913]
[379.45465088 163.91537476]
[392.56390381 171.22245789]
[405.04269409 179.56069946]
[416.81005859 188.87603760]
[427.78967285 199.10806274]
[437.91033936 210.19039917]
[447.10644531 222.05119324]
[455.31829834 234.61349487]
[462.49270630 247.79585266]
[468.58306885 261.51275635]
[473.54992676 275.67526245]
[477.36108398 290.19152832]
[479.99179077 304.96737671]
[481.42498779 319.90698242]
[481.65139771 334.91348267]
[480.66955566 349.88952637]
[478.48577881 364.73803711]
[475.11428833 379.36264038]
[470.57693481 393.66854858]
[464.90316772 407.56295776]
[458.12969971 420.95571899]
[450.30056763 433.76004028]
[441.46646118 445.89285278]
[431.68472290 457.27548218]
[421.01876831 467.83407593]
[409.53781128 477.50018311]
[397.31625366 486.21109009]
[384.43338013 493.91030884]
[370.97274780 500.54794312]
[357.02166748 506.08087158]
[342.67062378 510.47329712]
[328.01263428 513.69665527]
[313.14282227 515.73010254]
[298.15759277 516.56042480]
[283.15414429 516.18225098]
[268.22979736 514.59796143]
[253.48132324 511.81793213]
[239.00436401 507.86013794]
[224.89282227 502.75027466]
[211.23822021 496.52145386]
[198.12911987 489.21408081]
[185.65052795 480.87554932]
[173.88336182 471.55996704]
[162.90397644 461.32769775]
[152.78353882 450.24514771]
[143.58770752 438.38415527]
[135.37611389 425.82165527]
[128.20202637 412.63916016]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 149]
[16 148]
[17 147]
[18 145]
[19 144]
[20 143]
[21 142]
[22 141]
[23 136]
[24 135]
[25 134]
[26 133]
[32 132]
[33 131]
[37 130]
[38 129]
[39 128]
[40 127]
[41 126]
[42 125]
[43 124]
[44 123]
[45 122]
[46 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
