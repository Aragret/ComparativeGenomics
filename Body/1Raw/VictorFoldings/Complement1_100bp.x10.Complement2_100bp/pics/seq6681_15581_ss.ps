%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[19.57192421 592.35589600]
[21.62099266 607.28070068]
[20.29709244 622.28723145]
[15.66662979 636.62268066]
[7.96186447 649.56811523]
[-2.43073440 660.47418213]
[-14.98987865 668.79376221]
[-29.08560562 674.10961914]
[-44.01088333 676.15509033]
[-59.01705933 674.82751465]
[-73.35144043 670.19360352]
[-86.29500580 662.48571777]
[-97.19852448 652.09045410]
[-105.51507568 639.52929688]
[-110.82750702 625.43225098]
[-112.86933899 610.50653076]
[-111.53816986 595.50067139]
[-106.90075684 581.16741943]
[-99.18972015 568.22570801]
[-88.79183960 557.32470703]
[-76.22866058 549.01116943]
[-62.13035965 543.70214844]
[-47.20409775 541.66394043]
[-32.19856262 542.99877930]
[-27.58455276 528.72601318]
[-22.97054482 514.45330811]
[-18.35653496 500.18057251]
[-13.74252605 485.90783691]
[-9.12851620 471.63510132]
[-4.51450729 457.36236572]
[0.09950219 443.08963013]
[4.71351147 428.81689453]
[9.32752037 414.54415894]
[13.94153023 400.27142334]
[18.34252739 385.93157959]
[22.52953911 371.52780151]
[26.71655083 357.12402344]
[25.56507301 349.82360840]
[31.07460976 342.53781128]
[35.47560883 328.19796753]
[39.87660599 313.85812378]
[44.27760315 299.51828003]
[30.85180092 287.99160767]
[23.80113602 271.70413208]
[24.58939552 253.92051697]
[33.10401154 238.22755432]
[47.66941833 227.81063843]
[65.37658691 224.80728149]
[69.13288116 210.28523254]
[72.88918304 195.76316833]
[76.64548492 181.24110413]
[72.34188080 166.98178101]
[83.28849030 155.55889893]
[87.04479218 141.03683472]
[89.71058655 126.27561951]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[95.37081146 72.16385651]
[96.93133545 57.24525070]
[98.49185944 42.32664490]
[90.60550690 25.68672180]
[101.45973206 11.89713287]
[102.79796600 -3.04305172]
[104.13619995 -17.98323631]
[103.68959045 -32.97658539]
[101.46447754 -47.81063080]
[91.76564789 -60.31035995]
[97.52936554 -74.04457855]
[95.30424500 -88.87862396]
[93.07913208 -103.71266937]
[90.85401154 -118.54671478]
[88.62889862 -133.38075256]
[86.40377808 -148.21479797]
[71.29158783 -155.81202698]
[63.76026535 -170.77131653]
[66.60095978 -187.10815430]
[78.49899292 -198.41807556]
[76.05326080 -213.21734619]
[73.60753632 -228.01661682]
[71.16180420 -242.81588745]
[67.84836578 -246.84927368]
[66.54383850 -251.30477905]
[67.07260132 -255.34649658]
[68.95273590 -258.32934570]
[67.17027283 -273.22305298]
[65.38780212 -288.11679077]
[50.39233780 -289.46942139]
[36.00590515 -293.91061401]
[22.85741425 -301.24621582]
[11.52166843 -311.15551758]
[2.49421382 -323.20538330]
[-3.83030725 -336.86898804]
[-7.17541409 -351.54904175]
[-7.39487314 -366.60379028]
[-4.47909021 -381.37509155]
[1.44446898 -395.21725464]
[10.11685181 -407.52511597]
[21.15893936 -417.76065063]
[34.08802032 -425.47637939]
[48.33888626 -430.33502197]
[63.28855515 -432.12417603]
[78.28348541 -430.76565552]
[92.66817474 -426.31878662]
[105.81377411 -418.97802734]
[117.14562225 -409.06427002]
[126.16833496 -397.01086426]
[132.48748779 -383.34475708]
[135.82681274 -368.66339111]
[136.04034424 -353.60855103]
[133.11875916 -338.83837891]
[127.18975067 -324.99856567]
[118.51252747 -312.69412231]
[107.46641541 -302.46295166]
[94.53430176 -294.75228882]
[80.28152466 -289.89926147]
[82.06398773 -275.00552368]
[83.84645844 -260.11181641]
[85.96108246 -245.26161194]
[88.40680695 -230.46234131]
[90.85253143 -215.66307068]
[93.29826355 -200.86380005]
[105.73770142 -196.01588440]
[114.22537231 -185.57061768]
[116.46126556 -172.18890381]
[111.75586700 -159.34841919]
[101.23782349 -150.43991089]
[103.46293640 -135.60588074]
[105.68805695 -120.77182770]
[107.91317749 -105.93778992]
[110.13829041 -91.10374451]
[112.36341095 -76.26969910]
[121.90308380 -64.83100128]
[116.29852295 -50.03574753]
[118.52363586 -35.20170212]
[123.75404358 -49.26025391]
[133.42453003 -60.72679901]
[146.39901733 -68.25426483]
[161.15327454 -70.95832825]
[175.95397949 -68.52131653]
[189.06237793 -61.22953796]
[198.93849182 -49.93960953]
[204.42208862 -35.97787094]
[204.86895752 -20.98452950]
[200.22660828 -6.72098780]
[191.04042053 5.13708687]
[178.38957214 13.19661999]
[163.76028442 16.51078606]
[148.87117004 14.69023895]
[135.47140503 7.94885588]
[125.13516998 -2.92139292]
[119.07638550 -16.64500237]
[117.73815155 -1.70481753]
[116.39991760 13.23536777]
[123.91302490 22.71586037]
[122.92038727 35.17372894]
[113.41046143 43.88716888]
[111.84993744 58.80577469]
[110.28941345 73.72438049]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[104.62918854 127.83614349]
[114.69054413 116.71098328]
[128.93586731 112.01302338]
[143.64146423 114.97029877]
[154.96331787 124.80978394]
[159.94194031 138.95945740]
[157.27592468 153.72064209]
[147.66215515 165.23477173]
[133.61366272 170.49211121]
[118.80266571 168.11839294]
[107.10074615 158.73410034]
[101.56684875 144.79313660]
[97.81054688 159.31520081]
[101.84547424 174.61323547]
[91.16754150 184.99740601]
[87.41124725 199.51947021]
[83.65494537 214.04151917]
[79.89864349 228.56358337]
[90.13150024 235.61827087]
[97.69177246 245.45268250]
[101.86222076 257.10922241]
[102.25475311 269.45864868]
[98.84650421 281.30953979]
[91.98058319 291.52310181]
[82.33158875 299.12268066]
[70.83936310 303.38714600]
[58.61745071 303.91928101]
[54.21645355 318.25912476]
[49.81545258 332.59896851]
[45.41445541 346.93881226]
[41.12033081 361.31103516]
[36.93332291 375.71481323]
[32.74631119 390.11859131]
[33.94897842 396.61975098]
[31.98302269 401.95193481]
[28.21426392 404.88543701]
[23.60025406 419.15817261]
[18.98624420 433.43090820]
[14.37223530 447.70364380]
[9.75822639 461.97637939]
[5.14421701 476.24911499]
[0.53020775 490.52185059]
[-4.08380127 504.79458618]
[-8.69781113 519.06732178]
[-13.31182003 533.34002686]
[-17.92582893 547.61279297]
[-4.97852612 555.31439209]
[5.93002796 565.70434570]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 208]
[25 207]
[26 206]
[27 205]
[28 204]
[29 203]
[30 202]
[31 201]
[32 200]
[33 199]
[34 198]
[35 195]
[36 194]
[37 193]
[39 192]
[40 191]
[41 190]
[42 189]
[48 180]
[49 179]
[50 178]
[51 177]
[53 175]
[54 174]
[55 163]
[56 162]
[58 160]
[59 159]
[60 158]
[61 157]
[63 154]
[64 153]
[65 152]
[66 135]
[67 134]
[69 132]
[70 131]
[71 130]
[72 129]
[73 128]
[74 127]
[78 122]
[79 121]
[80 120]
[81 119]
[85 118]
[86 117]
[87 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
