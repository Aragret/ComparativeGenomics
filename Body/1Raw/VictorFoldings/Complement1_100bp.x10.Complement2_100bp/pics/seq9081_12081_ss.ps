%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[68.86189270 476.08889771]
[67.57167816 491.21173096]
[60.90208817 504.84555054]
[49.75511932 515.14648438]
[35.63831329 520.72143555]
[20.46084976 520.81646729]
[6.27535629 515.41864014]
[-4.99969530 505.25805664]
[-11.83944702 491.70880127]
[-13.31887817 476.60333252]
[-9.23790741 461.98449707]
[-0.14845425 449.82940674]
[12.72020912 441.78192139]
[27.62770081 438.93041992]
[30.29349518 424.16918945]
[32.95929337 409.40798950]
[35.62508774 394.64675903]
[38.29088211 379.88555908]
[40.95667648 365.12432861]
[32.27948761 353.07269287]
[34.77270508 338.06475830]
[47.47240448 329.04501343]
[50.13819885 314.28381348]
[52.80399704 299.52258301]
[55.46979141 284.76138306]
[58.13558578 270.00015259]
[60.80138016 255.23893738]
[63.46717834 240.47772217]
[66.13297272 225.71650696]
[55.27203369 236.06251526]
[40.71675110 239.68794250]
[26.27184105 235.64511108]
[15.71316433 224.99079895]
[11.80073643 210.51002502]
[15.55725670 195.98802185]
[26.00078011 185.22080994]
[40.40139389 181.02291870]
[54.99481201 184.49165344]
[65.96634674 194.72030640]
[70.44803619 209.03424072]
[75.27403259 194.83178711]
[80.10002899 180.62933350]
[83.53108978 166.02700806]
[85.53510284 151.16148376]
[87.53911591 136.29594421]
[89.54312897 121.43041992]
[91.54714966 106.56489563]
[91.65881348 91.56530762]
[89.87635040 76.67159271]
[80.23773956 68.10070801]
[79.05973816 55.65900040]
[86.43086243 46.06769562]
[77.29985046 33.14735794]
[83.67108154 19.68420029]
[82.11056519 4.76559496]
[80.55004120 -10.15300941]
[76.54482269 -18.36251831]
[79.07904053 -25.30510712]
[70.14140320 -38.35996246]
[76.71237946 -51.72676849]
[75.37414551 -66.66695404]
[74.03591156 -81.60713959]
[72.69767761 -96.54732513]
[71.35944366 -111.48751068]
[56.35181427 -111.35540771]
[41.38222122 -112.43135071]
[26.54775238 -114.70836639]
[11.94461060 -118.17168427]
[-2.33249283 -122.79885101]
[-16.19096565 -128.55984497]
[-29.54092789 -135.41731262]
[-42.29579926 -143.32676697]
[-54.37285614 -152.23693848]
[-65.69377899 -162.09001160]
[-76.18514252 -172.82209778]
[-85.77890015 -184.36358643]
[-94.41284180 -196.63963318]
[-102.03096771 -209.57063293]
[-108.58386230 -223.07269287]
[-114.02904510 -237.05827332]
[-118.33118439 -251.43666077]
[-121.46238708 -266.11459351]
[-123.40234375 -280.99688721]
[-124.13848114 -295.98703003]
[-123.66600800 -310.98779297]
[-121.98800659 -325.90191650]
[-119.11534119 -340.63262939]
[-115.06665802 -355.08444214]
[-109.86820984 -369.16357422]
[-103.55371094 -382.77877808]
[-96.16410828 -395.84170532]
[-87.74732971 -408.26763916]
[-78.35797119 -419.97604370]
[-68.05691528 -430.89093018]
[-56.91097641 -440.94149780]
[-44.99243927 -450.06262207]
[-32.37860107 -458.19509888]
[-19.15126610 -465.28622437]
[-5.39622211 -471.28997803]
[8.79732227 -476.16744995]
[23.33731651 -479.88696289]
[38.12945938 -482.42443848]
[53.07781982 -483.76342773]
[68.08544922 -483.89520264]
[83.05501556 -482.81890869]
[97.88944244 -480.54156494]
[112.49250793 -477.07794189]
[126.76950836 -472.45043945]
[140.62785339 -466.68914795]
[153.97766113 -459.83139038]
[166.73236084 -451.92166138]
[178.80921936 -443.01123047]
[190.12992859 -433.15789795]
[200.62104797 -422.42556763]
[210.21455383 -410.88388062]
[218.84822083 -398.60763550]
[226.46606445 -385.67648315]
[233.01866150 -372.17425537]
[238.46353149 -358.18856812]
[242.76536560 -343.81008911]
[245.89624023 -329.13208008]
[247.83587646 -314.24972534]
[248.57167053 -299.25958252]
[248.09887695 -284.25881958]
[246.42054749 -269.34475708]
[243.54756165 -254.61408997]
[239.49855042 -240.16238403]
[234.29978943 -226.08334351]
[227.98498535 -212.46829224]
[220.59510803 -199.40553284]
[212.17805481 -186.97976685]
[202.78843689 -175.27159119]
[192.48713684 -164.35693359]
[181.34097290 -154.30659485]
[169.42224121 -145.18574524]
[156.80822754 -137.05352783]
[143.58073425 -129.96270752]
[129.82556152 -123.95925140]
[115.63190460 -119.08209991]
[101.09182739 -115.36289215]
[86.29962921 -112.82574463]
[87.63786316 -97.88555908]
[88.97609711 -82.94537354]
[90.31433105 -68.00518799]
[91.65256500 -53.06500244]
[100.49448395 -41.07876968]
[94.01922607 -26.64334106]
[95.46864319 -11.71353245]
[97.02916718 3.20507216]
[98.58969116 18.12367630]
[107.60908508 29.97693634]
[101.34947205 44.50717545]
[112.40779877 58.13363266]
[104.77006531 74.88912964]
[106.55252838 89.78284454]
[112.05300903 75.82775116]
[121.73647308 64.37215424]
[134.58097839 56.62499619]
[149.23104858 53.40385056]
[164.14059448 55.04865265]
[177.73619080 61.38582611]
[188.58305359 71.74658966]
[195.53649902 85.03754425]
[197.86271667 99.85607147]
[195.31619263 114.63833618]
[188.16569519 127.82432556]
[177.16581726 138.02249146]
[163.47740173 144.15660095]
[148.54501343 145.57929993]
[133.94453430 142.14045715]
[121.21675110 134.20297241]
[111.70487213 122.60451508]
[106.41267395 108.56890869]
[104.40866089 123.43443298]
[102.40464783 138.29995728]
[100.40063477 153.16549683]
[98.39662170 168.03102112]
[107.88604736 156.41418457]
[121.24318695 149.58872986]
[136.21711731 148.70486450]
[150.28448486 153.91151428]
[161.07467651 164.33129883]
[166.76936340 178.20826721]
[166.40888977 193.20393372]
[160.05398560 206.79125977]
[148.77558899 216.68054199]
[134.47430420 221.20524597]
[119.56013489 219.60290527]
[106.54638672 212.14352417]
[97.62610626 200.08413696]
[94.30248260 185.45532227]
[89.47648621 199.65777588]
[84.65048981 213.86024475]
[80.89418793 228.38229370]
[78.22839355 243.14350891]
[75.56259918 257.90472412]
[72.89680481 272.66595459]
[70.23101044 287.42715454]
[67.56521606 302.18838501]
[64.89941406 316.94961548]
[62.23362350 331.71081543]
[70.97617340 344.60290527]
[68.06239319 359.53488159]
[55.71789551 367.79013062]
[53.05210114 382.55133057]
[50.38630295 397.31256104]
[47.72050858 412.07379150]
[45.05471420 426.83499146]
[42.38891602 441.59622192]
[55.35731888 449.48196411]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 209]
[15 208]
[16 207]
[17 206]
[18 205]
[19 204]
[22 201]
[23 200]
[24 199]
[25 198]
[26 197]
[27 196]
[28 195]
[29 194]
[40 193]
[41 192]
[42 191]
[43 177]
[44 176]
[45 175]
[46 174]
[47 173]
[48 155]
[49 154]
[52 152]
[54 150]
[55 149]
[56 148]
[58 147]
[60 145]
[61 144]
[62 143]
[63 142]
[64 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
