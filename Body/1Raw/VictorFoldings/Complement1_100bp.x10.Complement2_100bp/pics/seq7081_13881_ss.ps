%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[107.15485382 468.12710571]
[97.40878296 479.57794189]
[85.86758423 489.21688843]
[72.86332703 496.76654053]
[58.77016068 502.00970459]
[43.99358749 504.79553223]
[28.95874977 505.04385376]
[14.09823227 502.74755859]
[-0.16039872 497.97265625]
[-13.40689373 490.85659790]
[-25.26012421 481.60409546]
[-35.37905121 470.48135376]
[-43.47253036 457.80841064]
[-49.30769348 443.94989014]
[-52.71665955 429.30450439]
[-53.60134125 414.29367065]
[-51.93628311 399.34924316]
[-47.76939392 384.90124512]
[-41.22056198 371.36532593]
[-32.47821045 359.13098145]
[-21.79387665 348.55020142]
[-9.47496891 339.92739868]
[4.12407398 333.51071167]
[18.61198044 329.48471069]
[33.57190323 327.96527100]
[48.57341766 328.99609375]
[52.11309052 314.41970825]
[55.65276337 299.84335327]
[59.19243622 285.26696777]
[57.71612549 278.02526855]
[62.89483643 270.50070190]
[66.65113831 255.97865295]
[70.40744019 241.45660400]
[73.40221405 226.75859070]
[75.62733459 211.92454529]
[77.85244751 197.09049988]
[80.07756805 182.25646973]
[82.30268097 167.42242432]
[84.52780151 152.58837891]
[70.35614014 146.11038208]
[58.57972336 135.90663147]
[50.15009689 122.80160522]
[45.74838257 107.85418701]
[45.73024368 92.27214813]
[50.09714127 77.31452179]
[58.49623108 64.18990326]
[70.24885559 53.95876312]
[84.40539551 47.44779205]
[99.82199097 45.18308258]
[101.82601166 30.31755447]
[103.83002472 15.45202541]
[98.00579834 0.74185842]
[107.37411499 -10.83760548]
[107.48577881 -25.83719063]
[105.70331573 -40.73090744]
[103.92084503 -55.62462616]
[102.13838196 -70.51834106]
[100.35591888 -85.41205597]
[98.57344818 -100.30577850]
[96.79098511 -115.19949341]
[81.79865265 -114.53444672]
[66.79854584 -114.99165344]
[51.87455368 -116.56853485]
[37.11013031 -119.25629425]
[22.58785057 -123.03988647]
[8.38892651 -127.89815521]
[-5.40723228 -133.80393982]
[-18.72347260 -140.72419739]
[-31.48532104 -148.62022400]
[-43.62141037 -157.44789124]
[-55.06386948 -167.15779114]
[-65.74871063 -177.69564819]
[-75.61616516 -189.00253296]
[-84.61106873 -201.01519775]
[-92.68309784 -213.66645813]
[-99.78713226 -226.88557434]
[-105.88342285 -240.59860229]
[-110.93788910 -254.72888184]
[-114.92225647 -269.19735718]
[-117.81424713 -283.92315674]
[-119.59767914 -298.82388306]
[-120.26259613 -313.81619263]
[-119.80525970 -328.81631470]
[-118.22824097 -343.74029541]
[-115.54035950 -358.50469971]
[-111.75663757 -373.02694702]
[-106.89823914 -387.22579956]
[-100.99234009 -401.02191162]
[-94.07196808 -414.33810425]
[-86.17581940 -427.09988403]
[-77.34805298 -439.23590088]
[-67.63803864 -450.67825317]
[-57.10008621 -461.36300659]
[-45.79312515 -471.23037720]
[-33.78038406 -480.22515869]
[-21.12905121 -488.29708862]
[-7.90987349 -495.40100098]
[5.80321884 -501.49716187]
[19.93353653 -506.55151367]
[34.40205383 -510.53573608]
[49.12786102 -513.42761230]
[64.02860260 -515.21093750]
[79.02094269 -515.87567139]
[94.02104187 -515.41821289]
[108.94500732 -513.84106445]
[123.70938110 -511.15307617]
[138.23159790 -507.36920166]
[152.43043518 -502.51068115]
[166.22648621 -496.60467529]
[179.54260254 -489.68417358]
[192.30432129 -481.78793335]
[204.44024658 -472.96005249]
[215.88253784 -463.24993896]
[226.56718445 -452.71188354]
[236.43444824 -441.40484619]
[245.42913818 -429.39202881]
[253.50094604 -416.74060059]
[260.60473633 -403.52136230]
[266.70080566 -389.80822754]
[271.75500488 -375.67785645]
[275.73913574 -361.20932007]
[278.63085938 -346.48348999]
[280.41403198 -331.58273315]
[281.07867432 -316.59039307]
[280.62109375 -301.59027100]
[279.04379272 -286.66632080]
[276.35565186 -271.90197754]
[272.57168579 -257.37979126]
[267.71304321 -243.18099976]
[261.80688477 -229.38499451]
[254.88627625 -216.06893921]
[246.98989868 -203.30729675]
[238.16192627 -191.17144775]
[228.45170593 -179.72924805]
[217.91357422 -169.04469299]
[206.60643005 -159.17752075]
[194.59353638 -150.18293762]
[181.94206238 -142.11125183]
[168.72274780 -135.00756836]
[155.00955200 -128.91163635]
[140.87915039 -123.85754395]
[126.41056061 -119.87355804]
[111.68470001 -116.98195648]
[113.46717072 -102.08824158]
[115.24963379 -87.19452667]
[117.03209686 -72.30081177]
[118.81456757 -57.40708923]
[120.59703064 -42.51337433]
[122.37949371 -27.61965561]
[127.87998199 -41.57475281]
[137.56343079 -53.03034592]
[150.40794373 -60.77750397]
[165.05801392 -63.99864960]
[179.96755981 -62.35384369]
[193.56315613 -56.01667404]
[204.41001892 -45.65591049]
[211.36346436 -32.36495209]
[213.68968201 -17.54642487]
[211.14315796 -2.76416397]
[203.99266052 10.42182446]
[192.99278259 20.61999130]
[179.30436707 26.75409889]
[164.37197876 28.17680168]
[149.77149963 24.73795700]
[137.04371643 16.80047417]
[127.53183746 5.20201683]
[122.23963928 -8.83359241]
[128.20719910 4.81329298]
[118.69554901 17.45603943]
[116.69153595 32.32156754]
[114.68752289 47.18709564]
[127.86544800 52.79360962]
[139.14151001 61.62203217]
[147.74610901 73.06980896]
[153.09196472 86.35560608]
[154.81420898 100.57265472]
[152.79531860 114.75061798]
[147.17304993 127.92183685]
[138.33116150 139.18734741]
[126.87312317 147.77825928]
[113.58094025 153.10823059]
[99.36184692 154.81349182]
[97.13672638 169.64753723]
[94.91160583 184.48158264]
[92.68649292 199.31562805]
[90.46137238 214.14967346]
[88.23625946 228.98370361]
[100.24652863 219.99742126]
[115.22969055 220.70797729]
[126.33563995 230.79052734]
[128.48689270 245.63546753]
[120.69992065 258.45587158]
[106.53482819 263.39044189]
[92.46769714 258.18316650]
[84.92949677 245.21290588]
[81.17319489 259.73495483]
[77.41690063 274.25701904]
[73.76880646 288.80664062]
[70.22913361 303.38302612]
[66.68946838 317.95938110]
[63.14979172 332.53576660]
[76.95333099 338.49984741]
[89.55028534 346.71109009]
[100.57822418 356.93325806]
[109.71984863 368.87222290]
[116.71213531 382.18447876]
[121.35390472 396.48699951]
[123.51159668 411.36825562]
[123.12313080 426.40014648]
[120.19969940 441.15011597]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 201]
[27 200]
[28 199]
[29 198]
[31 197]
[32 196]
[33 195]
[34 187]
[35 186]
[36 185]
[37 184]
[38 183]
[39 182]
[49 171]
[50 170]
[51 169]
[53 167]
[54 149]
[55 148]
[56 147]
[57 146]
[58 145]
[59 144]
[60 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
