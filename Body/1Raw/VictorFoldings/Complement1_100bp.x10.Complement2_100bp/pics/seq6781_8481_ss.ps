%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxUUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGC\
) } def
/len { sequence length } bind def

/coor [
[22.59744072 490.78927612]
[13.46088600 502.69338989]
[3.51619363 513.93115234]
[-7.18818569 524.44787598]
[-18.60009956 534.19226074]
[-30.66395187 543.11682129]
[-43.32096863 551.17816162]
[-56.50948334 558.33691406]
[-70.16524506 564.55822754]
[-84.22171783 569.81182861]
[-98.61042023 574.07208252]
[-113.26126099 577.31829834]
[-128.10285950 579.53454590]
[-143.06289673 580.71008301]
[-158.06849670 580.83923340]
[-173.04655457 579.92132568]
[-187.92408752 577.96081543]
[-202.62863159 574.96728516]
[-217.08853149 570.95532227]
[-231.23333740 565.94445801]
[-244.99415588 559.95904541]
[-258.30392456 553.02838135]
[-271.09780884 545.18609619]
[-283.31347656 536.47045898]
[-294.89141846 526.92395020]
[-305.77520752 516.59301758]
[-315.91186523 505.52807617]
[-325.25195312 493.78295898]
[-333.74996948 481.41494751]
[-341.36456299 468.48422241]
[-348.05859375 455.05386353]
[-353.79943848 441.18927002]
[-358.55917358 426.95797729]
[-362.31457520 412.42932129]
[-365.04736328 397.67410278]
[-366.74420166 382.76419067]
[-367.39685059 367.77221680]
[-367.00210571 352.77127075]
[-365.56192017 337.83438110]
[-363.08328247 323.03433228]
[-359.57827759 308.44326782]
[-355.06399536 294.13220215]
[-349.56240845 280.17092896]
[-343.10034180 266.62744141]
[-335.70925903 253.56770325]
[-327.42517090 241.05537415]
[-318.28845215 229.15138245]
[-308.34359741 217.91374207]
[-297.63906860 207.39718628]
[-286.22702026 197.65296936]
[-274.16302490 188.72856140]
[-261.50592041 180.66743469]
[-248.31729126 173.50886536]
[-234.66143799 167.28773499]
[-220.60488892 162.03433228]
[-206.21612549 157.77427673]
[-191.56523132 154.52832031]
[-176.72361755 152.31225586]
[-161.76354980 151.13690186]
[-146.75794983 151.00798035]
[-131.77990723 151.92610168]
[-116.90239716 153.88681030]
[-102.19790649 156.88055420]
[-87.73806000 160.89274597]
[-73.59332275 165.90383911]
[-59.83259201 171.88941956]
[-46.52291870 178.82031250]
[-33.72914505 186.66276550]
[-21.51359940 195.37857056]
[-9.93579960 204.92524719]
[0.39086923 194.04591370]
[10.71753788 183.16658020]
[13.86778069 168.60893250]
[28.98021317 163.92652893]
[32.13045502 149.36886597]
[47.24288940 144.68646240]
[57.56955719 133.80712891]
[67.89622498 122.92778778]
[71.04647064 108.37014008]
[86.15889740 103.68772888]
[89.61100006 90.13875580]
[102.96176910 85.98560333]
[113.28843689 75.10626984]
[113.05127716 59.53123856]
[123.67896271 48.64515305]
[138.52883911 48.51504135]
[148.85549927 37.63570786]
[159.18217468 26.75637436]
[162.82043457 18.37777710]
[169.74450684 15.79338551]
[180.23199463 5.06900549]
[190.14665222 -6.18709040]
[199.46153259 -17.94434166]
[208.77641296 -29.70159340]
[218.09130859 -41.45884323]
[227.40618896 -53.21609497]
[216.59391785 -63.63005066]
[206.83723450 -75.03893280]
[198.22723389 -87.33621979]
[190.84428406 -100.40709686]
[184.75735474 -114.12951660]
[180.02326965 -128.37535095]
[176.68620300 -143.01159668]
[174.77734375 -157.90158081]
[174.31449890 -172.90629578]
[175.30200195 -187.88562012]
[177.73063660 -202.69970703]
[181.57769775 -217.21025085]
[186.80729675 -231.28173828]
[193.37059021 -244.78280640]
[201.20629883 -257.58737183]
[210.24125671 -269.57592773]
[220.39111328 -280.63647461]
[231.56109619 -290.66577148]
[243.64691162 -299.57019043]
[256.53570557 -307.26657104]
[270.10714722 -313.68304443]
[284.23452759 -318.75973511]
[298.78594971 -322.44921875]
[313.62548828 -324.71704102]
[328.61465454 -325.54202271]
[343.61346436 -324.91650391]
[358.48187256 -322.84625244]
[373.08105469 -319.35067749]
[387.27471924 -314.46237183]
[400.93032837 -308.22695923]
[413.92034912 -300.70269775]
[426.12356567 -291.95983887]
[437.42596436 -282.07998657]
[447.72204590 -271.15542603]
[456.91564941 -259.28814697]
[464.92098999 -246.58891296]
[471.66329956 -233.17634583]
[477.07958984 -219.17567444]
[481.11935425 -204.71759033]
[483.74481201 -189.93711853]
[484.93145752 -174.97224426]
[484.66827393 -159.96270752]
[482.95764160 -145.04864502]
[479.81555176 -130.36930847]
[475.27136230 -116.06175995]
[469.36752319 -102.25959015]
[462.15908813 -89.09166718]
[453.71340942 -76.68093872]
[444.10934448 -65.14328766]
[433.43658447 -54.58642960]
[421.79470825 -45.10894775]
[409.29248047 -36.79932022]
[396.04663086 -29.73514366]
[382.18078613 -23.98237038]
[367.82446289 -19.59471703]
[353.11169434 -16.61314774]
[338.17984009 -15.06550217]
[323.16833496 -14.96623135]
[308.21731567 -16.31626129]
[293.46640015 -19.10298920]
[279.05328369 -23.30039215]
[265.11260986 -28.86928177]
[251.77445984 -35.75765991]
[239.16343689 -43.90121078]
[229.84855652 -32.14396286]
[220.53367615 -20.38670921]
[211.21878052 -8.62945843]
[201.90390015 3.12779260]
[216.79379272 1.31361532]
[229.43438721 9.38921356]
[234.04658508 23.66253281]
[228.52174377 37.60800552]
[215.38575745 44.84994507]
[200.64421082 42.07743835]
[191.03674316 30.55803490]
[190.95637512 15.55650616]
[180.46888733 26.28088570]
[170.06150818 37.08304214]
[159.73483276 47.96237564]
[149.40817261 58.84171295]
[150.05174255 73.67819977]
[139.73400879 84.85849762]
[124.16777039 85.43293762]
[113.84110260 96.31227112]
[110.38899994 109.86124420]
[97.03823090 114.01439667]
[93.14936066 129.35021973]
[78.77555847 133.25445557]
[68.44889069 144.13378906]
[58.12222290 155.01312256]
[54.23334503 170.34893799]
[39.85954666 174.25318909]
[35.97067261 189.58900452]
[21.59687233 193.49325562]
[11.27020359 204.37258911]
[0.94353503 215.25192261]
[11.08032990 226.31674194]
[20.42058563 238.06170654]
[28.91879654 250.42961121]
[36.53356171 263.36019897]
[43.22777939 276.79046631]
[48.96883774 290.65499878]
[53.72876740 304.88623047]
[57.48437881 319.41482544]
[60.21737289 334.17001343]
[61.91443253 349.07989502]
[62.56729507 364.07183838]
[62.17277527 379.07281494]
[60.73279953 394.00970459]
[58.25437927 408.80978394]
[54.74958801 423.40090942]
[50.23550797 437.71203613]
[44.73412323 451.67337036]
[38.27224350 465.21697998]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 192]
[71 191]
[72 190]
[74 188]
[76 186]
[77 185]
[78 184]
[80 182]
[82 180]
[83 179]
[86 176]
[87 175]
[88 174]
[90 173]
[91 172]
[92 164]
[93 163]
[94 162]
[95 161]
[96 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
