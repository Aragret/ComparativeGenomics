%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[139.47419739 683.75842285]
[131.10693359 671.28375244]
[124.40364075 657.84149170]
[119.47438049 643.65240479]
[116.40010834 628.94940186]
[115.23130798 613.97406006]
[115.98715973 598.97216797]
[118.65526581 584.19006348]
[123.19181061 569.87054443]
[129.52229309 556.24877930]
[137.54277039 543.54840088]
[147.12152100 531.97790527]
[158.10128784 521.72735596]
[170.30172729 512.96508789]
[183.52253723 505.83499146]
[197.54660034 500.45410156]
[194.00692749 485.87771606]
[190.46725464 471.30133057]
[186.92758179 456.72497559]
[183.38790894 442.14859009]
[179.84823608 427.57220459]
[175.98393250 413.07852173]
[171.79692078 398.67474365]
[167.60990906 384.27096558]
[163.42289734 369.86718750]
[159.23588562 355.46340942]
[155.04887390 341.05960083]
[152.15155029 339.05017090]
[150.08355713 335.53756714]
[149.54080200 330.92684937]
[151.01197815 325.91857910]
[140.48983765 315.37658691]
[144.75207520 300.14031982]
[141.21240234 285.56393433]
[137.67272949 270.98757935]
[134.13305664 256.41119385]
[121.35336304 244.38429260]
[126.68407440 226.75860596]
[122.92777252 212.23654175]
[119.06346893 197.74284363]
[115.09136963 183.27832031]
[111.11927795 168.81379700]
[107.14717865 154.34927368]
[91.56622314 154.16453552]
[76.66671753 149.60327148]
[63.65256500 141.03401184]
[53.57530975 129.14916992]
[47.24920654 114.90906525]
[45.18540955 99.46428680]
[47.55067444 84.06279755]
[54.15388489 69.94904327]
[64.46150208 58.26343155]
[77.64064789 49.95016861]
[73.45363617 35.54638672]
[69.26662445 21.14260483]
[65.07961273 6.73882246]
[60.78549194 -7.63339043]
[56.38449478 -21.97323799]
[51.98349762 -36.31308365]
[48.70138931 -39.15592575]
[46.69629669 -42.55358887]
[45.98582840 -46.03649521]
[46.43328094 -49.17757797]
[47.77487183 -51.63893509]
[44.23519897 -66.21530914]
[40.69552612 -80.79168701]
[27.67950439 -93.81722260]
[33.27301407 -110.45091248]
[29.51671219 -124.97296906]
[25.76041222 -139.49502563]
[22.00411034 -154.01708984]
[11.30683422 -161.22341919]
[8.47716904 -173.39619446]
[14.50080681 -183.88630676]
[10.96113491 -198.46267700]
[7.42146254 -213.03906250]
[3.14183044 -218.07853699]
[2.19221544 -223.68167114]
[4.00027561 -228.10208130]
[0.89616567 -242.77738953]
[-2.20794439 -257.45269775]
[-12.63357639 -269.35296631]
[-7.69755173 -283.40591431]
[-10.80166149 -298.08120728]
[-25.85800934 -298.09063721]
[-40.58329773 -301.23062134]
[-54.33380508 -307.36389160]
[-66.50841522 -316.22238159]
[-76.57490540 -327.41879272]
[-84.09321594 -340.46365356]
[-88.73467255 -354.78674316]
[-90.29637146 -369.76187134]
[-88.71005249 -384.73443604]
[-84.04504395 -399.04983521]
[-76.50530243 -412.08233643]
[-66.42041016 -423.26217651]
[-54.23125458 -432.10061646]
[-40.47068405 -438.21130371]
[-25.74024963 -441.32705688]
[-10.68390846 -441.31173706]
[4.04014540 -438.16595459]
[17.78823853 -432.02725220]
[29.95936012 -423.16397095]
[40.02144623 -411.96362305]
[47.53462219 -398.91580200]
[52.17044449 -384.59088135]
[53.72625351 -369.61514282]
[52.13404083 -354.64321899]
[47.46340942 -340.32962036]
[39.91853333 -327.30007935]
[29.82925034 -316.12423706]
[17.63661575 -307.29058838]
[3.87364054 -301.18530273]
[6.97775078 -286.51000977]
[17.18135643 -275.65939331]
[12.46735764 -260.55679321]
[15.57146835 -245.88150024]
[18.67557907 -231.20619202]
[21.99783707 -216.57873535]
[25.53750992 -202.00234985]
[29.07718277 -187.42597961]
[41.85688019 -175.39907837]
[36.52616882 -157.77339172]
[40.28247070 -143.25132751]
[44.03877258 -128.72927856]
[47.79507065 -114.20721436]
[58.05543137 -107.80006409]
[61.30371475 -95.73223877]
[55.27190399 -84.33135986]
[58.81157303 -69.75498199]
[62.35124588 -55.17860794]
[66.32334137 -40.71408463]
[70.72434235 -26.37423515]
[75.12534332 -12.03438854]
[80.09298706 -6.56225586]
[79.48339844 2.55181098]
[83.67041016 16.95559311]
[87.85742188 31.35937500]
[92.04443359 45.76315689]
[106.36388397 45.55344772]
[120.24899292 49.05979538]
[132.75207520 56.04288483]
[143.01977539 66.02611542]
[150.35131836 78.32810974]
[154.24630737 92.10924530]
[154.43890381 106.42893982]
[150.91596985 120.30984497]
[143.91795349 132.80458069]
[133.92245483 143.06034851]
[121.61170197 150.37718201]
[125.58380127 164.84170532]
[129.55589294 179.30622864]
[133.52799988 193.77075195]
[138.81816101 201.21736145]
[137.44982910 208.48023987]
[141.20613098 223.00230408]
[151.90341187 230.20861816]
[154.73307800 242.38140869]
[148.70944214 252.87152100]
[152.24911499 267.44790649]
[155.78878784 282.02426147]
[159.32846069 296.60064697]
[170.10377502 308.18524170]
[165.58834839 322.37890625]
[169.45265198 336.87258911]
[173.63966370 351.27639771]
[177.82667542 365.68017578]
[182.01368713 380.08395386]
[186.20069885 394.48773193]
[190.38771057 408.89151001]
[194.15696716 412.50259399]
[195.98170471 416.77148438]
[195.93696594 420.84741211]
[194.42460632 424.03253174]
[197.96427917 438.60891724]
[201.50395203 453.18530273]
[205.04362488 467.76165771]
[208.58329773 482.33804321]
[212.12297058 496.91442871]
[227.05297852 495.26422119]
[242.07144165 495.53683472]
[256.93173218 497.72775269]
[271.38983154 501.80105591]
[285.20831299 507.68981934]
[298.16030884 515.29736328]
[310.03308105 524.49871826]
[320.63168335 535.14288330]
[329.78210449 547.05499268]
[337.33407593 560.03942871]
[343.16357422 573.88305664]
[347.17486572 588.35845947]
[349.30209351 603.22802734]
[349.51034546 618.24749756]
[347.79617310 633.17028809]
[344.18774414 647.75134277]
[338.74429321 661.75128174]
[331.55520630 674.94012451]
[322.73855591 687.10131836]
[312.43911743 698.03521729]
[300.82601929 707.56219482]
[288.08993530 715.52587891]
[274.44000244 721.79553223]
[260.10040283 726.26806641]
[245.30656433 728.87017822]
[230.30143738 729.55902100]
[215.33140564 728.32336426]
[200.64231873 725.18353271]
[186.47535706 720.19097900]
[173.06317139 713.42773438]
[160.62599182 705.00482178]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 179]
[17 178]
[18 177]
[19 176]
[20 175]
[21 174]
[22 170]
[23 169]
[24 168]
[25 167]
[26 166]
[27 165]
[31 164]
[33 162]
[34 161]
[35 160]
[36 159]
[38 156]
[39 155]
[40 153]
[41 152]
[42 151]
[43 150]
[53 139]
[54 138]
[55 137]
[56 136]
[57 134]
[58 133]
[59 132]
[64 131]
[65 130]
[66 129]
[68 126]
[69 125]
[70 124]
[71 123]
[74 121]
[75 120]
[76 119]
[79 118]
[80 117]
[81 116]
[83 114]
[84 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
