%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[90.81034851 400.89083862]
[83.50303650 414.00073242]
[75.12434387 426.45321655]
[65.73302460 438.16088867]
[55.39496994 449.04165649]
[44.18268204 459.01919556]
[32.17481232 468.02349854]
[19.45558929 475.99142456]
[6.11423206 482.86709595]
[-7.75568008 488.60226440]
[-22.05685806 493.15667725]
[-36.68898773 496.49844360]
[-51.54943085 498.60409546]
[-66.53395081 499.45886230]
[-81.53744507 499.05673218]
[-96.45467377 497.40054321]
[-111.18099213 494.50192261]
[-125.61311340 490.38119507]
[-139.64979553 485.06726074]
[-153.19259644 478.59738159]
[-166.14651489 471.01696777]
[-178.42066956 462.37918091]
[-189.92898560 452.74459839]
[-200.59072876 442.18078613]
[-210.33111572 430.76187134]
[-219.08181763 418.56796265]
[-226.78147888 405.68457031]
[-233.37605286 392.20205688]
[-238.81932068 378.21502686]
[-243.07307434 363.82153320]
[-246.10748291 349.12258911]
[-247.90126038 334.22128296]
[-248.44183350 319.22213745]
[-247.72540283 304.23037720]
[-245.75698853 289.35113525]
[-242.55041504 274.68878174]
[-238.12815857 260.34619141]
[-232.52125549 246.42393494]
[-225.76901245 233.01968384]
[-217.91880798 220.22746277]
[-209.02571106 208.13700867]
[-199.15206909 196.83311462]
[-188.36718750 186.39508057]
[-176.74667358 176.89610291]
[-164.37207031 168.40284729]
[-151.33015442 160.97485352]
[-137.71241760 154.66424561]
[-123.61437988 149.51527405]
[-109.13492584 145.56407166]
[-94.37562561 142.83834839]
[-79.44000244 141.35722351]
[-64.43282318 141.13107300]
[-49.45935440 142.16149902]
[-34.62462616 144.44126892]
[-20.03269196 147.95439148]
[-5.78590775 152.67622375]
[8.01579475 158.57363892]
[21.27560425 165.60528564]
[33.90051270 173.72181702]
[43.03931427 161.82719421]
[44.65795898 147.02079773]
[59.20125198 140.79158020]
[68.34005737 128.89694214]
[77.47885895 117.00231171]
[86.61766052 105.10767365]
[88.64146423 91.27308655]
[101.48770905 85.75352478]
[110.62651062 73.85888672]
[119.76531219 61.96425629]
[121.75587463 43.65799713]
[138.22244263 37.59013748]
[147.18315125 25.56076050]
[156.14384460 13.53138256]
[165.10453796 1.50200522]
[174.06523132 -10.52737236]
[162.58973694 -20.19424438]
[151.71289062 -30.53009987]
[141.47364807 -41.49793625]
[131.90866089 -53.05849457]
[123.05216217 -65.17038727]
[114.93585968 -77.79025269]
[107.58880615 -90.87293243]
[101.03730011 -104.37157440]
[95.30480194 -118.23786163]
[90.41182709 -132.42216492]
[86.37589264 -146.87368774]
[83.21144867 -161.54072571]
[80.92981720 -176.37074280]
[79.53916931 -191.31068420]
[79.04447937 -206.30703735]
[79.44753265 -221.30613708]
[80.74686432 -236.25428772]
[82.93784332 -251.09799194]
[86.01261139 -265.78408813]
[89.96017456 -280.26000977]
[94.76638794 -294.47393799]
[100.41405487 -308.37496948]
[106.88295746 -321.91339111]
[114.14994049 -335.04071045]
[122.18898010 -347.70996094]
[130.97131348 -359.87573242]
[140.46548462 -371.49450684]
[150.63752747 -382.52471924]
[161.45100403 -392.92681885]
[172.86723328 -402.66363525]
[184.84532166 -411.70028687]
[197.34239197 -420.00439453]
[210.31373596 -427.54629517]
[223.71289062 -434.29891968]
[237.49189758 -440.23815918]
[251.60144043 -445.34271240]
[265.99099731 -449.59432983]
[280.60906982 -452.97775269]
[295.40328979 -455.48089600]
[310.32077026 -457.09481812]
[325.30804443 -457.81372070]
[340.31149292 -457.63504028]
[355.27740479 -456.55938721]
[370.15222168 -454.59063721]
[384.88265991 -451.73583984]
[399.41598511 -448.00521851]
[413.70019531 -443.41210938]
[427.68417358 -437.97296143]
[441.31781006 -431.70724487]
[454.55233765 -424.63739014]
[467.34036255 -416.78872681]
[479.63613892 -408.18933105]
[491.39559937 -398.86996460]
[502.57669067 -388.86401367]
[513.13934326 -378.20730591]
[523.04583740 -366.93798828]
[532.26055908 -355.09637451]
[540.75067139 -342.72488403]
[548.48565674 -329.86776733]
[555.43792725 -316.57110596]
[561.58258057 -302.88244629]
[566.89758301 -288.85083008]
[571.36389160 -274.52645874]
[574.96557617 -259.96063232]
[577.68969727 -245.20549011]
[579.52655029 -230.31382751]
[580.46948242 -215.33895874]
[580.51519775 -200.33451843]
[579.66345215 -185.35418701]
[577.91741943 -170.45161438]
[575.28320312 -155.68014526]
[571.77032471 -141.09263611]
[567.39135742 -126.74132538]
[562.16198730 -112.67758179]
[556.10083008 -98.95175934]
[549.22967529 -85.61298370]
[541.57312012 -72.70899963]
[533.15856934 -60.28601456]
[524.01611328 -48.38848877]
[514.17852783 -37.05901718]
[503.68096924 -26.33815575]
[492.56103516 -16.26428223]
[480.85858154 -6.87345982]
[468.61541748 1.80069578]
[455.87545776 9.72713280]
[442.68423462 16.87747574]
[429.08901978 23.22612953]
[415.13842773 28.75036812]
[400.88247681 33.43041229]
[386.37213135 37.24951172]
[371.65936279 40.19399643]
[356.79684448 42.25332260]
[341.83773804 43.42011642]
[326.83566284 43.69020844]
[311.84426880 43.06262589]
[296.91726685 41.53961563]
[282.10803223 39.12663269]
[267.46963501 35.83230972]
[253.05444336 31.66844749]
[238.91406250 26.64994431]
[225.09913635 20.79476929]
[211.65908813 14.12388229]
[198.64204407 6.66116190]
[186.09460449 -1.56667638]
[177.13391113 10.46270084]
[168.17321777 22.49207878]
[159.21252441 34.52145767]
[150.25183105 46.55083466]
[151.69084167 58.56148529]
[144.32398987 68.65669250]
[131.65994263 71.10305786]
[122.52114105 82.99768829]
[113.38233948 94.89232635]
[111.35853577 108.72691345]
[98.51229095 114.24647522]
[89.37348938 126.14111328]
[80.23468781 138.03573608]
[71.09588623 149.93037415]
[68.82357025 165.58755493]
[54.93394852 170.96598816]
[45.79514313 182.86062622]
[56.89015579 192.96839905]
[67.10044861 203.96914673]
[76.35440826 215.78570557]
[84.58712006 228.33515930]
[91.74084473 241.52951050]
[97.76538849 255.27619934]
[102.61849976 269.47879028]
[106.26614380 284.03768921]
[108.68272400 298.85073853]
[109.85130310 313.81405640]
[109.76366425 328.82269287]
[108.42044067 343.77133179]
[105.83104706 358.55517578]
[102.01364136 373.07046509]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 196]
[60 195]
[62 193]
[63 192]
[64 191]
[65 190]
[67 188]
[68 187]
[69 186]
[71 183]
[72 182]
[73 181]
[74 180]
[75 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
