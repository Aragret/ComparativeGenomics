%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCGxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[-16.61315918 616.88165283]
[-29.93717575 623.77856445]
[-43.59341431 629.99176025]
[-57.54682159 635.50537109]
[-71.76157379 640.30511475]
[-86.20119476 644.37878418]
[-100.82860565 647.71582031]
[-115.60625458 650.30773926]
[-130.49621582 652.14782715]
[-145.46028137 653.23138428]
[-160.46000671 653.55566406]
[-175.45690918 653.11975098]
[-190.41249084 651.92486572]
[-205.28834534 649.97399902]
[-220.04629517 647.27221680]
[-234.64846802 643.82641602]
[-249.05737305 639.64544678]
[-263.23602295 634.73999023]
[-277.14801025 629.12274170]
[-290.75762939 622.80804443]
[-304.02993774 615.81219482]
[-316.93090820 608.15301514]
[-329.42736816 599.85028076]
[-341.48727417 590.92529297]
[-353.07962036 581.40087891]
[-364.17471313 571.30157471]
[-374.74404907 560.65325928]
[-384.76046753 549.48327637]
[-394.19830322 537.82037354]
[-403.03329468 525.69433594]
[-411.24276733 513.13641357]
[-418.80566406 500.17880249]
[-425.70257568 486.85476685]
[-431.91574097 473.19851685]
[-437.42929077 459.24508667]
[-442.22900391 445.03033447]
[-446.30261230 430.59069824]
[-449.63961792 415.96328735]
[-452.23147583 401.18560791]
[-454.07153320 386.29565430]
[-455.15509033 371.33160400]
[-455.47930908 356.33187866]
[-455.04336548 341.33496094]
[-453.84844971 326.37939453]
[-451.89755249 311.50354004]
[-449.19570923 296.74557495]
[-445.74984741 282.14343262]
[-441.56881714 267.73452759]
[-436.66336060 253.55590820]
[-431.04608154 239.64393616]
[-424.73135376 226.03431702]
[-417.73544312 212.76202393]
[-410.07626343 199.86108398]
[-401.77346802 187.36465454]
[-392.84841919 175.30477905]
[-383.32400513 163.71243286]
[-373.22467041 152.61737061]
[-362.57632446 142.04808044]
[-351.40634155 132.03167725]
[-339.74334717 122.59387970]
[-327.61734009 113.75892639]
[-315.05938721 105.54947662]
[-302.10174561 97.98661804]
[-288.77770996 91.08976746]
[-275.12142944 84.87661743]
[-261.16799927 79.36312103]
[-246.95320129 74.56343079]
[-232.51356506 70.48986816]
[-217.88613892 67.15290070]
[-203.10847473 64.56107330]
[-188.21849060 62.72105789]
[-173.25444031 61.63756561]
[-158.25469971 61.31338501]
[-143.25781250 61.74934387]
[-128.30223083 62.94432831]
[-113.42638397 64.89526367]
[-98.66844177 67.59714508]
[-84.06629181 71.04304504]
[-69.65741730 75.22410583]
[-55.47879791 80.12959290]
[-41.56683731 85.74692535]
[-27.95724869 92.06168365]
[-14.68496418 99.05764771]
[-1.78405523 106.71685791]
[10.71236134 115.01966858]
[22.77220917 123.94475555]
[34.36452866 133.46920776]
[45.45956039 143.56857300]
[56.10557175 133.00152588]
[66.75157928 122.43447876]
[77.39759064 111.86743164]
[88.04359436 101.30038452]
[98.53109741 90.57600403]
[108.85776520 79.69667053]
[119.18443298 68.81733704]
[129.51110840 57.93799973]
[139.83776855 47.05866623]
[143.72665405 31.72285080]
[158.10044861 27.81860352]
[148.26039124 16.48155403]
[139.56045532 4.24771643]
[132.08189392 -8.76868153]
[125.89452362 -22.44610786]
[121.05611420 -36.65685272]
[117.61184692 -51.26823807]
[115.59387970 -66.14383698]
[115.02105713 -81.14474487]
[115.89871216 -96.13091278]
[118.21866608 -110.96240997]
[121.95925903 -125.50075531]
[127.08554840 -139.61021423]
[133.54968262 -153.15902710]
[141.29130554 -166.02070618]
[150.23814392 -178.07514954]
[160.30664062 -189.20982361]
[171.40280151 -199.32075500]
[183.42300415 -208.31352234]
[196.25503540 -216.10418701]
[209.77908325 -222.61999512]
[223.86886597 -227.80010986]
[238.39282227 -231.59616089]
[253.21536255 -233.97271729]
[268.19805908 -234.90757751]
[283.20104980 -234.39201355]
[298.08425903 -232.43083191]
[312.70867920 -229.04237366]
[326.93777466 -224.25823975]
[340.63873291 -218.12312317]
[353.68359375 -210.69430542]
[365.95053101 -202.04113770]
[377.32507324 -192.24441528]
[387.70095825 -181.39562988]
[396.98135376 -169.59605408]
[405.07955933 -156.95585632]
[411.92001343 -143.59307861]
[417.43881226 -129.63249207]
[421.58444214 -115.20441437]
[424.31817627 -100.44358063]
[425.61453247 -85.48781586]
[425.46136475 -70.47674561]
[423.86010742 -55.55054474]
[420.82574463 -40.84856796]
[416.38656616 -26.50809288]
[410.58404541 -12.66301060]
[403.47235107 0.55740440]
[395.11788940 13.02971554]
[385.59866333 24.63746834]
[375.00357056 35.27228165]
[363.43151855 44.83485794]
[350.99053955 53.23591614]
[337.79681396 60.39701080]
[323.97354126 66.25128174]
[309.64978027 70.74406433]
[294.95925903 73.83341217]
[280.03912354 75.49048615]
[265.02874756 75.69980621]
[250.06823730 74.45941925]
[235.29728699 71.78090668]
[220.85380554 67.68927765]
[206.87265015 62.22274017]
[193.48439026 55.43233109]
[180.81399536 47.38145065]
[168.97978210 38.14527130]
[165.82954407 52.70292282]
[150.71710205 57.38533401]
[140.39044189 68.26467133]
[130.06376648 79.14400482]
[119.73709869 90.02333832]
[109.41043091 100.90267181]
[108.35645294 106.04106140]
[104.49854279 110.22315979]
[98.61064148 111.94638824]
[87.96463776 122.51344299]
[77.31862640 133.08049011]
[66.67261505 143.64753723]
[56.02660751 154.21458435]
[66.04309845 165.38449097]
[75.48098755 177.04739380]
[84.31604767 189.17335510]
[92.52559662 201.73123169]
[100.08856201 214.68879700]
[106.98552704 228.01280212]
[113.19879150 241.66902161]
[118.71239471 255.62240601]
[123.51219940 269.83715820]
[127.58588409 284.27676392]
[130.92297363 298.90417480]
[133.51492310 313.68182373]
[135.35505676 328.57177734]
[136.43867493 343.53582764]
[136.76296997 358.53555298]
[136.32713318 373.53244019]
[135.13227844 388.48803711]
[133.18145752 403.36389160]
[130.47970581 418.12185669]
[127.03392792 432.72402954]
[122.85298157 447.13296509]
[117.94760895 461.31161499]
[112.33039093 475.22360229]
[106.01574707 488.83325195]
[99.01988983 502.10559082]
[91.36077881 515.00659180]
[83.05807495 527.50305176]
[74.13308716 539.56298828]
[64.60873413 551.15539551]
[54.50945663 562.25048828]
[43.86117935 572.81982422]
[32.69124222 582.83630371]
[21.02831459 592.27416992]
[8.90233517 601.10919189]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[88 176]
[89 175]
[90 174]
[91 173]
[92 172]
[93 169]
[94 168]
[95 167]
[96 166]
[97 165]
[99 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
