%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[-7.01083183 178.76460266]
[-5.09296608 193.64845276]
[-4.27955341 208.63330078]
[-4.57503653 223.63729858]
[-5.97780228 238.57849121]
[-8.48018837 253.37528992]
[-12.06852818 267.94686890]
[-16.72322273 282.21365356]
[-22.41884804 296.09771729]
[-29.12430000 309.52322388]
[-36.80295181 322.41683960]
[-45.41286469 334.70816040]
[-54.90701675 346.33004761]
[-65.23355103 357.21902466]
[-76.33607483 367.31564331]
[-88.15393829 376.56469727]
[-100.62259674 384.91574097]
[-113.67395020 392.32312012]
[-127.23672485 398.74639893]
[-141.23684692 404.15045166]
[-155.59782410 408.50582886]
[-170.24125671 411.78872681]
[-185.08714294 413.98117065]
[-200.05441284 415.07122803]
[-215.06130981 415.05291748]
[-230.02586365 413.92636108]
[-244.86636353 411.69769287]
[-259.50173950 408.37911987]
[-273.85205078 403.98873901]
[-287.83895874 398.55053711]
[-301.38601685 392.09420776]
[-314.41928101 384.65499878]
[-326.86752319 376.27359009]
[-338.66278076 366.99572754]
[-349.74066162 356.87207031]
[-360.04058838 345.95791626]
[-369.50637817 334.31292725]
[-378.08627319 322.00064087]
[-385.73345947 309.08831787]
[-392.40615845 295.64651489]
[-398.06790161 281.74859619]
[-402.68777466 267.47048950]
[-406.24057007 252.89021301]
[-408.70684814 238.08734131]
[-410.07315063 223.14277649]
[-410.33206177 208.13809204]
[-409.48208618 193.15528870]
[-407.52792358 178.27615356]
[-404.48022461 163.58197021]
[-400.35565186 149.15301514]
[-395.17672729 135.06805420]
[-388.97171021 121.40405273]
[-381.77450562 108.23561859]
[-373.62445068 95.63468170]
[-364.56604004 83.67005920]
[-354.64871216 72.40709686]
[-343.92669678 61.90732193]
[-332.45849609 52.22806931]
[-320.30679321 43.42221069]
[-307.53793335 35.53783798]
[-294.22164917 28.61801338]
[-280.43069458 22.70053291]
[-266.24035645 17.81771660]
[-251.72817993 13.99622917]
[-236.97340393 11.25694561]
[-222.05661011 9.61482716]
[-207.05928040 9.07884121]
[-192.06332397 9.65191555]
[-177.15063477 11.33092117]
[-162.40267944 14.10668659]
[-147.89999390 17.96405220]
[-133.72178650 22.88194847]
[-119.94549561 28.83351898]
[-106.64637756 35.78625488]
[-93.89704895 43.70218277]
[-81.76715088 52.53806686]
[-70.32293701 62.24565125]
[-59.62691116 72.77191162]
[-49.73748779 84.05936432]
[-40.70868301 96.04634857]
[-32.58980560 108.66741180]
[-25.42520523 121.85360718]
[-19.25400925 135.53291321]
[-5.16286850 130.39096069]
[4.14092493 118.75959015]
[19.75726128 121.29741669]
[33.84840393 116.15545654]
[47.93954468 111.01349640]
[62.03068542 105.87153625]
[76.12182617 100.72957611]
[90.21296692 95.58762360]
[103.27715302 88.21693420]
[109.18004608 73.53815460]
[123.94659424 71.58926392]
[135.63417053 62.18711090]
[147.32176208 52.78495789]
[159.00933838 43.38280869]
[170.69691467 33.98065567]
[182.38450623 24.57850456]
[194.07208252 15.17635441]
[185.71864319 2.70601296]
[178.48385620 -10.44493103]
[172.42280579 -24.17638779]
[167.58160400 -38.38385391]
[163.99708557 -52.95919800]
[161.69654846 -67.79148865]
[160.69749451 -82.76784515]
[161.00753784 -97.77428436]
[162.62429810 -112.69660187]
[165.53549194 -127.42121887]
[169.71896362 -141.83607483]
[175.14285278 -155.83145142]
[181.76588440 -169.30085754]
[189.53767395 -182.14175415]
[198.39904785 -194.25643921]
[208.28257751 -205.55268860]
[219.11303711 -215.94453430]
[230.80799866 -225.35289001]
[243.27845764 -233.70616150]
[256.42950439 -240.94075012]
[270.16104126 -247.00161743]
[284.36856079 -251.84262085]
[298.94396973 -255.42692566]
[313.77627563 -257.72726440]
[328.75265503 -258.72610474]
[343.75909424 -258.41586304]
[358.68139648 -256.79885864]
[373.40597534 -253.88748169]
[387.82077026 -249.70381165]
[401.81607056 -244.27972412]
[415.28536987 -237.65649414]
[428.12615967 -229.88453674]
[440.24072266 -221.02299500]
[451.53683472 -211.13931274]
[461.92852783 -200.30870056]
[471.33673096 -188.61360168]
[479.68981934 -176.14303589]
[486.92422485 -162.99188232]
[492.98489380 -149.26025391]
[497.82571411 -135.05265808]
[501.40982056 -120.47721100]
[503.70993042 -105.64485168]
[504.70855713 -90.66847229]
[504.39810181 -75.66204071]
[502.78091431 -60.73977280]
[499.86929321 -46.01523590]
[495.68545532 -31.60050011]
[490.26116943 -17.60526848]
[483.63775635 -4.13605404]
[475.86560059 8.70462990]
[467.00387573 20.81905746]
[457.12005615 32.11503220]
[446.28930664 42.50657654]
[434.59405518 51.91460800]
[422.12338257 60.26752090]
[408.97213745 67.50174713]
[395.24041748 73.56222534]
[381.03274536 78.40283966]
[366.45724487 81.98674011]
[351.62484741 84.28665161]
[336.64846802 85.28507233]
[321.64202881 84.97439575]
[306.71978760 83.35700226]
[291.99530029 80.44519043]
[277.58062744 76.26112366]
[263.58544922 70.83664703]
[250.11633301 64.21304321]
[237.27575684 56.44071960]
[225.16145325 47.57883453]
[213.86563110 37.69483185]
[203.47422791 26.86393547]
[191.78665161 36.26608658]
[180.09907532 45.66823959]
[168.41148376 55.07038879]
[156.72390747 64.47254181]
[145.03633118 73.87469482]
[133.34873962 83.27684021]
[128.28182983 97.28311157]
[112.67930603 99.90451050]
[127.34049988 96.73445892]
[142.32510376 97.41392517]
[156.63923645 101.89785767]
[169.33349609 109.88883972]
[179.56590271 120.85687256]
[186.65780640 134.07447815]
[190.13880920 148.66497803]
[189.77801514 163.66062927]
[185.59938049 178.06684875]
[177.88005066 190.92810059]
[167.13201904 201.39135742]
[154.06814575 208.76261902]
[139.55494690 212.55297852]
[124.55500793 212.51104736]
[110.06321716 208.63960266]
[97.04077911 201.19540405]
[86.35140991 190.67221069]
[78.70410919 177.76800537]
[74.60608673 163.33865356]
[74.32915497 148.34120178]
[77.89167786 133.77040100]
[85.05737305 120.59265137]
[95.35492706 109.67876434]
[81.26378632 114.82071686]
[67.17264557 119.96267700]
[53.08150482 125.10463715]
[38.99036407 130.24659729]
[24.89922142 135.38856506]
[14.58753586 147.38771057]
[-0.02090859 144.48210144]
[-14.11204910 149.62405396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[83 210]
[84 209]
[86 207]
[87 206]
[88 205]
[89 204]
[90 203]
[91 202]
[92 179]
[94 177]
[95 176]
[96 175]
[97 174]
[98 173]
[99 172]
[100 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
