%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[130.52787781 727.08502197]
[117.75093842 734.99749756]
[103.93737030 740.91717529]
[89.39577484 744.71191406]
[74.45101929 746.29675293]
[59.43696976 745.63647461]
[44.68904877 742.74572754]
[30.53673172 737.68908691]
[17.29618645 730.57952881]
[5.26320982 721.57592773]
[-5.29337597 710.87933350]
[-14.13773346 698.72882080]
[-21.07227516 685.39581299]
[-25.94208336 671.17810059]
[-28.63836288 656.39343262]
[-29.10087776 641.37194824]
[-27.31929588 626.44940186]
[-23.33341789 611.95904541]
[-17.23229027 598.22460938]
[-9.15221500 585.55297852]
[0.72629762 574.22723389]
[12.18255711 564.50036621]
[24.96062660 556.58972168]
[38.77503586 550.67199707]
[53.31717300 546.87933350]
[68.26215363 545.29656982]
[83.27610779 545.95904541]
[86.16138458 531.23913574]
[89.04665375 516.51928711]
[91.93193054 501.79937744]
[94.59772491 487.03814697]
[97.04344940 472.23889160]
[99.48918152 457.43960571]
[101.49319458 442.57409668]
[103.05371857 427.65548706]
[104.61423492 412.73687744]
[98.24300385 399.27371216]
[107.37401581 386.35336304]
[108.93453979 371.43478394]
[110.49506378 356.51617432]
[112.05558777 341.59756470]
[113.61611176 326.67895508]
[115.17663574 311.76034546]
[114.73002625 296.76699829]
[112.28430176 281.96774292]
[109.83856964 267.16845703]
[107.39284515 252.36918640]
[105.19516754 250.62896729]
[103.55438995 247.91337585]
[102.84548950 244.43014526]
[103.36134338 240.51882935]
[105.26950073 236.61845398]
[103.70897675 221.69985962]
[102.14845276 206.78125000]
[98.32614136 200.45576477]
[100.67745209 191.62915039]
[99.33921814 176.68896484]
[98.00098419 161.74877930]
[89.15906525 149.76254272]
[95.63432312 135.32711792]
[94.29608917 120.38693237]
[83.67203522 113.47439575]
[78.90111542 101.73165894]
[81.69355774 89.36817169]
[91.04835510 80.81589508]
[89.93270874 65.85744476]
[88.81706238 50.89899063]
[87.70140839 35.94053650]
[78.45513153 26.94781494]
[77.83385468 14.46591663]
[85.62590027 5.21331882]
[84.73308563 -9.76008701]
[83.84027100 -24.73349190]
[82.94745636 -39.70689774]
[71.19038391 -30.39178276]
[56.54342270 -33.62697220]
[49.80375671 -47.02760315]
[55.93962479 -60.71523285]
[70.42788696 -64.59984589]
[82.58754730 -55.81930161]
[82.81087494 -70.81764221]
[75.27989197 -84.73147583]
[83.20582581 -97.34214020]
[75.67485046 -111.25598145]
[83.60078430 -123.86664581]
[76.06980133 -137.78048706]
[83.99573517 -150.39114380]
[76.46475983 -164.30499268]
[84.39069366 -176.91564941]
[83.83248138 -191.90525818]
[82.49424744 -206.84544373]
[81.15601349 -221.78562927]
[66.33780670 -224.71778870]
[52.94656754 -231.70716858]
[42.06785965 -242.18716431]
[34.58356857 -255.30821228]
[31.10041618 -270.00665283]
[31.90076447 -285.09097290]
[36.91973114 -299.33831787]
[45.75045395 -311.59371948]
[57.67706680 -320.86370850]
[71.73272705 -326.39678955]
[86.77800751 -327.74444580]
[101.59326172 -324.79739380]
[114.97747040 -317.79455566]
[125.84564972 -307.30364990]
[133.31675720 -294.17507935]
[136.78514099 -279.47314453]
[135.96963501 -264.38964844]
[130.93635559 -250.14736938]
[122.09332275 -237.90083313]
[110.15740967 -228.64283752]
[96.09619904 -223.12387085]
[97.43443298 -208.18368530]
[98.77266693 -193.24349976]
[108.32317352 -204.81016541]
[123.05086517 -207.65536499]
[136.22242737 -200.47833252]
[141.81600952 -186.56028748]
[137.27429199 -172.26438904]
[124.67369080 -164.12652588]
[109.77503204 -165.86720276]
[99.38903046 -176.69232178]
[106.93598175 -163.85127258]
[98.99407196 -150.16781616]
[106.54102325 -137.32676697]
[98.59912109 -123.64331818]
[106.14607239 -110.80226135]
[98.20416260 -97.11881256]
[105.75111389 -84.27775574]
[97.80921173 -70.59430695]
[97.58588409 -55.59597397]
[97.92086029 -40.59971237]
[98.81367493 -25.62630844]
[99.70648956 -10.65290260]
[100.59930420 4.32050323]
[111.03814697 18.42714882]
[102.65986633 34.82489014]
[103.77551270 49.78334427]
[104.89115906 64.74179840]
[106.00681305 79.70024872]
[118.75506592 90.18117523]
[120.10502625 106.62944031]
[109.23627472 119.04869843]
[110.57450867 133.98887634]
[119.51214600 147.04373169]
[112.94116974 160.41055298]
[114.27940369 175.35072327]
[115.61763763 190.29090881]
[117.06705475 205.22071838]
[118.62757874 220.13932800]
[120.18810272 235.05793762]
[122.19211578 249.92346191]
[124.63784027 264.72274780]
[127.08357239 279.52200317]
[129.52929688 294.32128906]
[134.27749634 280.09262085]
[143.13955688 267.99038696]
[155.27079773 259.16809082]
[169.51496887 254.46662903]
[184.51438904 254.33409119]
[198.83940125 258.78311157]
[211.12464905 267.38967896]
[220.19918823 279.33340454]
[225.19807434 293.47592163]
[225.64485168 308.46926880]
[221.49694824 322.88436890]
[213.14968872 335.34725952]
[201.39871216 344.67004395]
[187.36402893 349.96414185]
[172.38333130 350.72497559]
[157.88450623 346.88000488]
[145.24945068 338.79571533]
[135.68249512 327.24267578]
[130.09523010 313.32086182]
[128.53471375 328.23947144]
[126.97418976 343.15808105]
[125.41366577 358.07669067]
[123.85314941 372.99530029]
[122.29262543 387.91390991]
[128.55224609 402.44412231]
[119.53284454 414.29739380]
[117.97232056 429.21600342]
[116.41179657 444.13461304]
[118.31994629 448.03497314]
[118.83580780 451.94628906]
[118.12689972 455.42953491]
[116.48612976 458.14511108]
[114.28845215 459.88534546]
[111.84272003 474.68460083]
[109.39699554 489.48388672]
[111.36368561 495.79605103]
[110.04528046 501.32406616]
[106.65181732 504.68463135]
[103.76654816 519.40454102]
[100.88127136 534.12445068]
[97.99600220 548.84429932]
[112.14904022 553.89892578]
[125.39059448 561.00659180]
[137.42485046 570.00848389]
[147.98297119 580.70355225]
[156.82905579 592.85278320]
[163.76548767 606.18481445]
[168.63732910 620.40185547]
[171.33570862 635.18615723]
[171.80036926 650.20751953]
[170.02090454 665.13037109]
[166.03709412 679.62133789]
[159.93792725 693.35656738]
[151.85964966 706.02935791]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 197]
[28 196]
[29 195]
[30 194]
[31 191]
[32 190]
[33 189]
[34 184]
[35 183]
[36 182]
[38 180]
[39 179]
[40 178]
[41 177]
[42 176]
[43 175]
[44 156]
[45 155]
[46 154]
[47 153]
[52 152]
[53 151]
[54 150]
[56 149]
[57 148]
[58 147]
[60 145]
[61 144]
[65 141]
[66 140]
[67 139]
[68 138]
[71 136]
[72 135]
[73 134]
[74 133]
[80 132]
[81 131]
[83 129]
[85 127]
[87 125]
[89 123]
[90 115]
[91 114]
[92 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
