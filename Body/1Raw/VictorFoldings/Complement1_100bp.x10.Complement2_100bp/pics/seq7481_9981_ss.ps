%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[48.46999359 670.59332275]
[34.04908752 674.73706055]
[19.40803337 678.01916504]
[4.59825659 680.42822266]
[-10.32822418 681.95568848]
[-25.31897736 682.59619141]
[-40.32135010 682.34753418]
[-55.28263855 681.21057129]
[-70.15029907 679.18927002]
[-84.87210083 676.29071045]
[-99.39633942 672.52514648]
[-113.67199707 667.90576172]
[-127.64891815 662.44879150]
[-141.27803040 656.17340088]
[-154.51142883 649.10168457]
[-167.30265808 641.25836182]
[-179.60678101 632.67108154]
[-191.38056946 623.36993408]
[-202.58268738 613.38769531]
[-213.17376709 602.75933838]
[-223.11660767 591.52221680]
[-232.37629700 579.71582031]
[-240.92030334 567.38159180]
[-248.71861267 554.56286621]
[-255.74382019 541.30468750]
[-261.97128296 527.65362549]
[-267.37911987 513.65759277]
[-271.94830322 499.36581421]
[-275.66281128 484.82843018]
[-278.50958252 470.09652710]
[-280.47863770 455.22186279]
[-281.56301880 440.25665283]
[-281.75897217 425.25350952]
[-281.06579590 410.26510620]
[-279.48590088 395.34408569]
[-277.02481079 380.54284668]
[-273.69125366 365.91342163]
[-269.49688721 351.50717163]
[-264.45642090 337.37469482]
[-258.58761597 323.56564331]
[-251.91104126 310.12850952]
[-244.45016479 297.11050415]
[-236.23120117 284.55737305]
[-227.28302002 272.51315308]
[-217.63703918 261.02020264]
[-207.32714844 250.11886597]
[-196.38955688 239.84744263]
[-184.86270142 230.24200439]
[-172.78704834 221.33630371]
[-160.20501709 213.16162109]
[-147.16081238 205.74664307]
[-133.70025635 199.11746216]
[-119.87061310 193.29731750]
[-105.72046661 188.30668640]
[-91.29953003 184.16308594]
[-76.65844727 180.88105774]
[-61.84864807 178.47215271]
[-46.92215347 176.94482422]
[-31.93139458 176.30442810]
[-16.92902565 176.55323792]
[-1.96774423 177.69033813]
[12.89989758 179.71177673]
[27.62167549 182.61042786]
[42.14588165 186.37612915]
[56.42149353 190.99563599]
[61.87685013 177.02282715]
[67.33220673 163.05003357]
[72.78756714 149.07723999]
[78.24291992 135.10444641]
[83.69828033 121.13164520]
[89.15363312 107.15884399]
[94.19055176 93.02981567]
[98.80455780 78.75708008]
[103.41857147 64.48435211]
[108.03257751 50.21161652]
[112.64659119 35.93888092]
[117.26059723 21.66614914]
[103.39205170 15.92998219]
[90.02309418 9.11008358]
[77.23824310 1.24957132]
[65.11833191 -7.60185814]
[53.73998260 -17.38824081]
[43.17514038 -28.04770660]
[33.49059677 -39.51285934]
[24.74758339 -51.71121216]
[17.00137711 -64.56564331]
[10.30094910 -77.99487305]
[4.68866539 -91.91400909]
[0.20000869 -106.23504639]
[-3.13664222 -120.86743927]
[-5.30019188 -135.71867371]
[-6.27696085 -150.69485474]
[-6.06077385 -165.70129395]
[-4.65299797 -180.64312744]
[-2.06253338 -195.42587280]
[1.69424164 -209.95606995]
[6.59357548 -224.14186096]
[12.60449219 -237.89355469]
[19.68898964 -251.12419128]
[27.80227470 -263.75015259]
[36.89305115 -275.69158936]
[46.90384674 -286.87298584]
[57.77136993 -297.22369385]
[69.42690277 -306.67825317]
[81.79676819 -315.17687988]
[94.80274963 -322.66583252]
[108.36261749 -329.09780884]
[122.39064789 -334.43206787]
[136.79814148 -338.63494873]
[151.49400330 -341.67987061]
[166.38534546 -343.54754639]
[181.37799072 -344.22619629]
[196.37716675 -343.71154785]
[211.28804016 -342.00680542]
[226.01632690 -339.12277222]
[240.46891785 -335.07769775]
[254.55442810 -329.89715576]
[268.18383789 -323.61386108]
[281.27093506 -316.26757812]
[293.73297119 -307.90472412]
[305.49121094 -298.57818604]
[316.47128296 -288.34695435]
[326.60372925 -277.27566528]
[335.82455444 -265.43435669]
[344.07543945 -252.89787292]
[351.30416870 -239.74549866]
[357.46511841 -226.06036377]
[362.51928711 -211.92900085]
[366.43472290 -197.44075012]
[369.18667603 -182.68721008]
[370.75778198 -167.76167297]
[371.13806152 -152.75848389]
[370.32510376 -137.77252197]
[368.32409668 -122.89851379]
[365.14764404 -108.23051453]
[360.81585693 -93.86124420]
[355.35610962 -79.88156891]
[348.80294800 -66.37986755]
[341.19778442 -53.44149780]
[332.58868408 -41.14826965]
[323.03009033 -29.57789993]
[312.58242798 -18.80354309]
[301.31179810 -8.89331818]
[289.28939819 0.09011624]
[276.59124756 8.08996487]
[263.29766846 15.05564880]
[249.49269104 20.94312859]
[235.26358032 25.71518135]
[220.70030212 29.34163475]
[205.89494324 31.79956245]
[190.94110107 33.07342529]
[175.93333435 33.15516663]
[160.96649170 32.04426956]
[146.13523865 29.74776077]
[131.53332520 26.28015709]
[126.91931915 40.55289078]
[122.30531311 54.82562256]
[117.69130707 69.09835815]
[113.07729340 83.37109375]
[108.46328735 97.64382172]
[109.61604309 100.46528625]
[109.76765442 103.76855469]
[108.73770905 107.18361664]
[106.48498535 110.27901459]
[103.12643433 112.61420441]
[97.67107391 126.58699799]
[92.21572113 140.55979919]
[86.76036072 154.53259277]
[81.30500793 168.50538635]
[75.84964752 182.47819519]
[70.39429474 196.45098877]
[84.02345276 202.72625732]
[97.25691986 209.79791260]
[110.04821777 217.64109802]
[122.35240936 226.22828674]
[134.12628174 235.52929688]
[145.32849121 245.51147461]
[155.91966248 256.13973999]
[165.86259460 267.37677002]
[175.12239075 279.18307495]
[183.66650391 291.51724243]
[191.46492004 304.33587646]
[198.49026489 317.59399414]
[204.71783447 331.24499512]
[210.12577820 345.24096680]
[214.69509888 359.53271484]
[218.40972900 374.07006836]
[221.25663757 388.80194092]
[223.22581482 403.67660522]
[224.31034851 418.64178467]
[224.50642395 433.64492798]
[223.81336975 448.63336182]
[222.23359680 463.55438232]
[219.77265930 478.35562134]
[216.43922424 492.98507690]
[212.24496460 507.39138794]
[207.20463562 521.52392578]
[201.33593750 535.33300781]
[194.65950012 548.77020264]
[187.19874573 561.78826904]
[178.97988892 574.34149170]
[170.03179932 586.38574219]
[160.38592529 597.87878418]
[150.07612610 608.78021240]
[139.13864136 619.05175781]
[127.61185455 628.65728760]
[115.53627777 637.56311035]
[102.95432281 645.73791504]
[89.91018677 653.15295410]
[76.44968414 659.78228760]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 171]
[66 170]
[67 169]
[68 168]
[69 167]
[70 166]
[71 165]
[72 160]
[73 159]
[74 158]
[75 157]
[76 156]
[77 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
