%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[80.11215973 336.14794922]
[78.82120514 321.12182617]
[81.30845642 306.24685669]
[87.41757965 292.45812988]
[96.76453400 280.62237549]
[108.76177216 271.48358154]
[122.65513611 265.61627197]
[113.11545563 254.17758179]
[118.72002411 239.38233948]
[116.49490356 224.54829407]
[114.26979065 209.71424866]
[112.04467010 194.88020325]
[109.81954956 180.04615784]
[107.04394531 165.30519104]
[103.72167969 150.67773438]
[100.39942169 136.05027771]
[90.03540039 125.35278320]
[94.52401733 110.18166351]
[89.01992035 124.13533783]
[77.72219086 134.00251770]
[63.15476608 137.57885742]
[48.57205200 134.06538391]
[37.23186111 124.24703217]
[31.66762352 110.31723022]
[33.12240219 95.38794708]
[41.27119827 82.79441071]
[54.29354477 75.35005188]
[69.28022003 74.71796417]
[82.88316345 81.03935242]
[92.06345367 92.90202332]
[91.17063141 77.92861938]
[90.27781677 62.95521164]
[81.73283386 49.64004135]
[88.69887543 36.47480011]
[80.15389252 23.15962791]
[87.11993408 9.99438763]
[84.24408722 5.63817644]
[83.41016388 1.07113481]
[84.35654449 -2.89363742]
[86.53678894 -5.66471004]
[86.31346130 -20.66304779]
[78.37155914 -34.34649277]
[85.91851044 -47.18754959]
[85.69518280 -62.18589020]
[85.47185516 -77.18422699]
[85.24852753 -92.18256378]
[70.25579071 -92.75112915]
[55.31395721 -94.11015320]
[40.46466446 -96.25584412]
[25.74930954 -99.18222809]
[11.20890236 -102.88114166]
[-3.11602974 -107.34226990]
[-17.18556023 -112.55319214]
[-30.96047592 -118.49937439]
[-44.40238190 -125.16425323]
[-57.47381210 -132.52923584]
[-70.13833618 -140.57382202]
[-82.36065674 -149.27555847]
[-94.10670471 -158.61021423]
[-105.34374237 -168.55175781]
[-116.04045105 -179.07249451]
[-126.16701508 -190.14309692]
[-135.69520569 -201.73269653]
[-144.59848022 -213.80900574]
[-152.85202026 -226.33834839]
[-160.43280029 -239.28582764]
[-167.31971741 -252.61532593]
[-173.49356079 -266.28973389]
[-178.93713379 -280.27087402]
[-183.63525391 -294.51986694]
[-187.57484436 -308.99691772]
[-190.74488831 -323.66171265]
[-193.13659668 -338.47335815]
[-194.74325562 -353.39059448]
[-195.56042480 -368.37182617]
[-195.58581543 -383.37533569]
[-194.81935120 -398.35925293]
[-193.26318359 -413.28182983]
[-190.92161560 -428.10150146]
[-187.80120850 -442.77694702]
[-183.91065979 -457.26724243]
[-179.26078796 -471.53204346]
[-173.86456299 -485.53155518]
[-167.73703003 -499.22674561]
[-160.89526367 -512.57946777]
[-153.35833740 -525.55255127]
[-145.14724731 -538.10974121]
[-136.28489685 -550.21612549]
[-126.79598236 -561.83789062]
[-116.70693970 -572.94268799]
[-106.04589844 -583.49957275]
[-94.84257507 -593.47912598]
[-83.12818146 -602.85345459]
[-70.93538666 -611.59649658]
[-58.29815674 -619.68389893]
[-45.25172806 -627.09307861]
[-31.83245468 -633.80340576]
[-18.07774162 -639.79620361]
[-4.02592659 -645.05468750]
[10.28382587 -649.56427002]
[24.81163216 -653.31237793]
[39.51699829 -656.28857422]
[54.35894394 -658.48449707]
[69.29609680 -659.89404297]
[84.28681946 -660.51336670]
[99.28933716 -660.34069824]
[114.26183319 -659.37646484]
[129.16258240 -657.62335205]
[143.95004272 -655.08636475]
[158.58299255 -651.77246094]
[173.02067566 -647.69091797]
[187.22282410 -642.85314941]
[201.14987183 -637.27258301]
[214.76298523 -630.96472168]
[228.02423096 -623.94726562]
[240.89663696 -616.23974609]
[253.34434509 -607.86358643]
[265.33267212 -598.84216309]
[276.82815552 -589.20062256]
[287.79876709 -578.96588135]
[298.21398926 -568.16638184]
[308.04470825 -556.83227539]
[317.26358032 -544.99511719]
[325.84490967 -532.68798828]
[333.76473999 -519.94506836]
[341.00103760 -506.80194092]
[347.53359985 -493.29525757]
[353.34426880 -479.46261597]
[358.41677856 -465.34259033]
[362.73706055 -450.97454834]
[366.29302979 -436.39852905]
[369.07476807 -421.65515137]
[371.07455444 -406.78549194]
[372.28680420 -391.83105469]
[372.70816040 -376.83346558]
[372.33740234 -361.83453369]
[371.17556763 -346.87606812]
[369.22592163 -331.99975586]
[366.49389648 -317.24707031]
[362.98712158 -302.65914917]
[358.71530151 -288.27661133]
[353.69042969 -274.13958740]
[347.92645264 -260.28744507]
[341.43945312 -246.75878906]
[334.24752808 -233.59133911]
[326.37069702 -220.82180786]
[317.83093262 -208.48577881]
[308.65203857 -196.61761475]
[298.85955811 -185.25042725]
[288.48083496 -174.41587830]
[277.54476929 -164.14416504]
[266.08187866 -154.46392822]
[254.12405396 -145.40214539]
[241.70466614 -136.98405457]
[228.85830688 -129.23315430]
[215.62080383 -122.17101288]
[202.02903748 -115.81733704]
[188.12088013 -110.18981934]
[173.93513489 -105.30416107]
[159.51129150 -101.17396545]
[144.88958740 -97.81075287]
[130.11077881 -95.22389221]
[115.21602631 -93.42059326]
[100.24686432 -92.40589142]
[100.47019196 -77.40755463]
[100.69351959 -62.40921783]
[100.91684723 -47.41087723]
[108.84278107 -34.80021667]
[101.31180573 -20.88637543]
[101.53513336 -5.88803768]
[102.09333801 9.10157204]
[110.57446289 21.34574699]
[103.67227936 35.58198547]
[112.15340424 47.82616043]
[105.25122070 62.06239700]
[106.14404297 77.03580475]
[107.03685760 92.00920868]
[109.15148163 106.85940552]
[119.75313568 118.60314941]
[115.02688599 132.72801208]
[118.34914398 147.35546875]
[121.67140198 161.98294067]
[131.75231934 150.87550354]
[146.73077393 151.67922974]
[155.56520081 163.80165100]
[151.74319458 178.30654907]
[138.08218384 184.50146484]
[124.65359497 177.82104492]
[126.87871552 192.65509033]
[129.10383606 207.48912048]
[131.32894897 222.32316589]
[133.55406189 237.15721130]
[143.25289917 249.65695190]
[137.48918152 263.39117432]
[152.49255371 264.92395020]
[166.64311218 270.14053345]
[179.05131531 278.71298218]
[188.93717957 290.10247803]
[195.67929077 303.59301758]
[198.85380554 318.33660889]
[198.26118469 333.40643311]
[193.93869019 347.85519409]
[186.15802002 360.77462769]
[175.40827942 371.35263062]
[162.36520386 378.92422485]
[147.84870911 383.01348877]
[132.77128601 383.36334229]
[118.08074188 379.95181274]
[104.70052338 372.99331665]
[93.47171783 362.92532349]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 194]
[9 192]
[10 191]
[11 190]
[12 189]
[13 188]
[14 182]
[15 181]
[16 180]
[18 178]
[30 177]
[31 176]
[32 175]
[34 173]
[36 171]
[40 170]
[41 169]
[43 167]
[44 166]
[45 165]
[46 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
