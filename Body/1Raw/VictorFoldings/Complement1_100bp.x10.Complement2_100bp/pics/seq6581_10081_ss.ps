%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[84.38574982 676.43603516]
[69.42665100 677.76330566]
[54.41556549 677.31201172]
[39.56322861 675.08837891]
[25.07814407 671.12371826]
[11.16365910 665.47363281]
[-1.98488832 658.21746826]
[-14.18291378 649.45703125]
[-25.25917435 639.31542969]
[-35.05817795 627.93487549]
[-43.44236374 615.47528076]
[-50.29402924 602.11151123]
[-55.51698685 588.03112793]
[-59.03791428 573.43182373]
[-60.80738449 558.51855469]
[-60.80055618 543.50067139]
[-59.01752472 528.58905029]
[-55.48332214 513.99298096]
[-50.24756241 499.91735840]
[-43.38374710 486.55978394]
[-34.98823547 474.10781860]
[-25.17888641 462.73620605]
[-14.09340572 452.60464478]
[-1.88741910 443.85534668]
[11.26772213 436.61114502]
[25.18733978 430.97372437]
[39.67602158 427.02221680]
[54.53037643 424.81210327]
[69.54186249 424.37442017]
[70.88009644 409.43423462]
[72.21833038 394.49404907]
[73.55656433 379.55386353]
[74.89479828 364.61367798]
[76.23303223 349.67349243]
[77.57126617 334.73330688]
[78.90950012 319.79312134]
[69.51261139 302.89385986]
[81.36120605 286.58517456]
[82.25402069 271.61175537]
[75.28797913 258.44653320]
[83.83296204 245.13134766]
[84.72578430 230.15794373]
[85.61859894 215.18453979]
[78.65255737 202.01930237]
[87.19754028 188.70411682]
[77.14971924 177.76899719]
[77.84186554 162.57112122]
[89.37975311 152.10618591]
[90.27256775 137.13278198]
[91.16539001 122.15937805]
[92.05820465 107.18596649]
[90.94255066 92.22751617]
[87.83844757 77.55221558]
[83.00088501 69.80393219]
[84.79907990 62.63537216]
[81.91381073 47.91548157]
[79.02853394 33.19558716]
[68.78123474 21.14140129]
[73.92594147 7.16351557]
[71.04067230 -7.55637598]
[68.15539551 -22.27626801]
[54.11789703 -24.68453407]
[41.77148438 -31.72493553]
[32.58911133 -42.53405762]
[27.65823364 -55.80030060]
[27.55204391 -69.92301178]
[32.26290512 -83.20560455]
[41.20573044 -94.05937958]
[53.29056168 -101.19353485]
[50.62476730 -115.95475006]
[47.95897293 -130.71597290]
[45.29317856 -145.47718811]
[42.62738037 -160.23840332]
[32.49571609 -168.22039795]
[30.57925797 -180.56993103]
[37.36643219 -190.58296204]
[34.92070389 -205.38223267]
[32.47497559 -220.18150330]
[17.45454788 -219.81697083]
[2.52957487 -221.54650879]
[-12.00942516 -225.33645630]
[-25.87944603 -231.11300659]
[-38.81050110 -238.76374817]
[-50.55088806 -248.13975525]
[-60.87207794 -259.05850220]
[-69.57315826 -271.30749512]
[-76.48476410 -284.64825439]
[-81.47235870 -298.82110596]
[-84.43885803 -313.55020142]
[-85.32652283 -328.54879761]
[-84.11806488 -343.52496338]
[-80.83701324 -358.18719482]
[-75.54723358 -372.25006104]
[-68.35168457 -385.43984985]
[-59.39044571 -397.49978638]
[-48.83794022 -408.19515991]
[-36.89957809 -417.31774902]
[-23.80774307 -424.69000244]
[-9.81726933 -430.16839600]
[4.79951286 -433.64627075]
[19.75808334 -435.05599976]
[34.76726913 -434.37008667]
[49.53491211 -431.60189819]
[63.77355576 -426.80532837]
[77.20603943 -420.07373047]
[89.57089996 -411.53814697]
[100.62744904 -401.36468506]
[110.16046906 -389.75143433]
[117.98439026 -376.92443848]
[123.94692993 -363.13333130]
[127.93201447 -348.64660645]
[129.86207581 -333.74624634]
[129.69955444 -318.72225952]
[127.44759369 -303.86712646]
[123.15004730 -289.47000122]
[116.89055634 -275.81112671]
[108.79097748 -263.15637207]
[99.00895691 -251.75205994]
[87.73490906 -241.82019043]
[75.18829346 -233.55409241]
[61.61332321 -227.11465454]
[47.27424622 -222.62722778]
[49.71997452 -207.82795715]
[52.16570282 -193.02868652]
[64.01548004 -180.08459473]
[57.38859940 -162.90419006]
[60.05439377 -148.14297485]
[62.72018814 -133.38175964]
[65.38598633 -118.62054443]
[68.05178070 -103.85932922]
[83.58707428 -100.73191071]
[96.76477051 -91.86077118]
[105.55052948 -78.57975006]
[108.57434845 -62.90619659]
[105.34417725 -47.23451233]
[96.32565308 -33.97039413]
[82.87528992 -25.16153908]
[85.76055908 -10.44164848]
[88.64583588 4.27824306]
[98.68675995 15.27956581]
[93.74842834 30.31031609]
[96.63369751 45.03020859]
[99.51897430 59.75009918]
[102.51374817 74.44810486]
[105.61785889 89.12340546]
[109.72597504 74.69692230]
[118.03880310 62.21105576]
[129.76402283 52.85587692]
[143.78404236 47.52305984]
[158.76257324 46.72089767]
[173.27197266 50.52584457]
[185.92926025 58.57524109]
[195.52806091 70.10186768]
[201.15345764 84.00707245]
[202.26928711 98.96551514]
[198.76918030 113.55144501]
[190.98675537 126.37461853]
[179.66377258 136.21281433]
[165.87948608 142.12832642]
[150.94770813 143.55732727]
[136.29164124 140.36360168]
[123.30822754 132.85156250]
[113.23493958 121.73719788]
[107.03160858 108.07878113]
[106.13879395 123.05219269]
[105.24597931 138.02558899]
[104.35316467 152.99900818]
[114.56574249 164.76084900]
[113.44699860 179.93328857]
[102.17094421 189.59693909]
[109.07312775 203.83317566]
[100.59200287 216.07734680]
[99.69918823 231.05075073]
[98.80637360 246.02416992]
[105.70854950 260.26040649]
[97.22743225 272.50457764]
[96.33460999 287.47799683]
[104.01248932 295.18246460]
[106.13893127 305.62554932]
[102.24845123 315.31124878]
[93.84968567 321.13134766]
[92.51145172 336.07153320]
[91.17321777 351.01171875]
[89.83498383 365.95190430]
[88.49674988 380.89208984]
[87.15851593 395.83227539]
[85.82028198 410.77246094]
[84.48204803 425.71264648]
[99.17678833 428.81121826]
[113.40189362 433.62603760]
[126.95767975 440.08956909]
[139.65382385 448.11105347]
[151.31211853 457.57788086]
[161.76887512 468.35714722]
[170.87730408 480.29751587]
[178.50955200 493.23141479]
[184.55845642 506.97720337]
[188.93910217 521.34197998]
[191.58999634 536.12402344]
[192.47392273 551.11584473]
[191.57847595 566.10699463]
[188.91622925 580.88702393]
[184.52455139 595.24841309]
[178.46508789 608.98956299]
[170.82290649 621.91754150]
[161.70530701 633.85095215]
[151.24026489 644.62219238]
[139.57472229 654.08001709]
[126.87240601 662.09173584]
[113.31166840 668.54486084]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 188]
[30 187]
[31 186]
[32 185]
[33 184]
[34 183]
[35 182]
[36 181]
[38 177]
[39 176]
[41 174]
[42 173]
[43 172]
[45 170]
[48 167]
[49 166]
[50 165]
[51 164]
[52 145]
[53 144]
[55 143]
[56 142]
[57 141]
[59 139]
[60 138]
[61 137]
[69 130]
[70 129]
[71 128]
[72 127]
[73 126]
[76 124]
[77 123]
[78 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
