%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCCxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[129.28691101 583.38500977]
[123.49289703 569.52105713]
[119.73098755 554.97357178]
[118.07776642 540.03881836]
[118.56690216 525.02075195]
[121.18843842 510.22521973]
[125.88899231 495.95336914]
[132.57287598 482.49578857]
[141.10400391 470.12643433]
[151.30870056 459.09716797]
[162.97921753 449.63250732]
[175.87794495 441.92514038]
[189.74227905 436.13198853]
[185.98597717 421.60992432]
[182.22967529 407.08786011]
[178.47338867 392.56579590]
[174.71708679 378.04373169]
[170.96078491 363.52166748]
[167.20448303 348.99963379]
[156.52655029 338.61544800]
[160.56147766 323.31741333]
[156.80517578 308.79534912]
[153.04887390 294.27328491]
[148.96920776 279.83874512]
[144.56820679 265.49890137]
[131.33020020 258.76907349]
[126.66268158 244.28910828]
[133.81130981 230.44949341]
[129.41030884 216.10964966]
[125.00931549 201.76980591]
[120.60831451 187.42996216]
[116.20731354 173.09010315]
[111.80632019 158.75025940]
[107.19230652 144.47752380]
[102.36631012 130.27507019]
[97.54031372 116.07261658]
[84.64415741 105.34576416]
[88.09108734 88.92945862]
[83.05416870 74.80043030]
[75.66327667 87.85319519]
[61.24483871 91.98946381]
[48.05839920 84.83979797]
[43.65774536 70.49983978]
[50.56377029 57.18418121]
[64.82039642 52.52062988]
[78.26013947 59.17996979]
[74.50384521 44.65790939]
[70.74754333 30.13584900]
[59.80093384 18.71296310]
[64.10453796 4.45364141]
[60.34823608 -10.06841755]
[56.59193802 -24.59047699]
[52.72763062 -39.08417130]
[48.75553513 -53.54869461]
[37.64006805 -64.80733490]
[41.73089600 -79.12915039]
[30.92751503 -86.17540741]
[27.91692924 -98.30471802]
[33.78371811 -108.88334656]
[30.02741623 -123.40540314]
[26.27111626 -137.92745972]
[22.51481628 -152.44952393]
[18.75851440 -166.97158813]
[15.00221443 -181.49363708]
[0.18129617 -179.11145020]
[-14.79757214 -178.12757874]
[-29.80275154 -178.55070496]
[-44.70237732 -180.37709045]
[-59.36550140 -183.59068298]
[-73.66326904 -188.16325378]
[-87.47001648 -194.05461121]
[-100.66442108 -201.21298218]
[-113.13051605 -209.57543945]
[-124.75875854 -219.06852722]
[-135.44694519 -229.60879517]
[-145.10115051 -241.10360718]
[-153.63652039 -253.45196533]
[-160.97805786 -266.54531860]
[-167.06124878 -280.26864624]
[-171.83261108 -294.50128174]
[-175.25024414 -309.11822510]
[-177.28407288 -323.99093628]
[-177.91625977 -338.98876953]
[-177.14123535 -353.97988892]
[-174.96580505 -368.83258057]
[-171.40908813 -383.41625977]
[-166.50234985 -397.60281372]
[-160.28871155 -411.26754761]
[-152.82276917 -424.29040527]
[-144.17013550 -436.55688477]
[-134.40687561 -447.95919800]
[-123.61875916 -458.39715576]
[-111.90061188 -467.77905273]
[-99.35542297 -476.02236938]
[-86.09342194 -483.05471802]
[-72.23117065 -488.81427002]
[-57.89049530 -493.25042725]
[-43.19742203 -496.32418823]
[-28.28107452 -498.00857544]
[-13.27254486 -498.28872681]
[1.69627082 -497.16220093]
[16.49382210 -494.63891602]
[30.99006653 -490.74105835]
[45.05760574 -485.50283813]
[58.57280731 -478.97033691]
[71.41690826 -471.20092773]
[83.47702026 -462.26290894]
[94.64715576 -452.23483276]
[104.82915497 -441.20480347]
[113.93354034 -429.26980591]
[121.88029480 -416.53466797]
[128.59957886 -403.11132812]
[134.03233337 -389.11776733]
[138.13082886 -374.67697144]
[140.85905457 -359.91583252]
[142.19300842 -344.96408081]
[142.12098694 -329.95309448]
[140.64360046 -315.01483154]
[137.77386475 -300.28054810]
[133.53698730 -285.87973022]
[127.97018433 -271.93896484]
[121.12240601 -258.58074951]
[113.05381012 -245.92243958]
[103.83531952 -234.07534790]
[93.54794312 -223.14353943]
[82.28208923 -213.22309875]
[70.13676453 -204.40122986]
[57.21870041 -196.75543213]
[43.64142990 -190.35292053]
[29.52427292 -185.24993896]
[33.28057480 -170.72789001]
[37.03687286 -156.20582581]
[40.79317474 -141.68376160]
[44.54947662 -127.16170502]
[48.30577850 -112.63964844]
[61.26312256 -100.80435181]
[56.19542313 -83.10124969]
[67.02677917 -72.87720490]
[63.22005844 -57.52079010]
[67.19215393 -43.05626678]
[71.99467468 -37.43865585]
[71.11399841 -28.34677696]
[74.87030029 -13.82471848]
[78.62659454 0.69734085]
[89.30452728 11.08151245]
[85.26959991 26.37954903]
[89.02590179 40.90160751]
[92.78220367 55.42366791]
[97.18319702 69.76351166]
[102.22011566 83.89254761]
[112.42272949 89.50930023]
[116.25178528 100.50836945]
[111.74276733 111.24662018]
[116.56876373 125.44907379]
[121.39476776 139.65153503]
[126.10693359 144.28909302]
[127.55265045 149.78518677]
[126.14616394 154.34925842]
[130.54716492 168.68911743]
[134.94816589 183.02896118]
[139.34916687 197.36880493]
[143.75015259 211.70864868]
[148.15115356 226.04849243]
[161.83268738 233.49519348]
[166.09165955 248.10052490]
[158.90805054 261.09790039]
[163.30905151 275.43774414]
[167.13165283 278.99227905]
[169.01974487 283.23355103]
[169.03570557 287.30969238]
[167.57093811 290.51699829]
[171.32723999 305.03906250]
[175.08354187 319.56109619]
[186.03015137 330.98400879]
[181.72653198 345.24331665]
[185.48283386 359.76538086]
[189.23913574 374.28744507]
[192.99543762 388.80950928]
[196.75173950 403.33154297]
[200.50804138 417.85360718]
[204.26434326 432.37567139]
[219.19882202 430.71969604]
[234.21694946 431.20602417]
[249.01298523 433.82482910]
[263.28570557 438.52270508]
[276.74453735 445.20410156]
[289.11544800 453.73294067]
[300.14660645 463.93557739]
[309.61343384 475.60433960]
[317.32321167 488.50164795]
[323.11895752 502.36489868]
[326.88265991 516.91192627]
[328.53771973 531.84649658]
[328.05044556 546.86456299]
[325.43075562 561.66046143]
[320.73196411 575.93286133]
[314.04974365 589.39129639]
[305.52014160 601.76171875]
[295.31680298 612.79223633]
[283.64746094 622.25836182]
[270.74969482 629.96728516]
[256.88607788 635.76220703]
[242.33883667 639.52496338]
[227.40415955 641.17913818]
[212.38609314 640.69091797]
[197.59037781 638.07031250]
[183.31823730 633.37066650]
[169.86024475 626.68762207]
[157.49038696 618.15722656]
[146.46047974 607.95318604]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 181]
[14 180]
[15 179]
[16 178]
[17 177]
[18 176]
[19 175]
[21 173]
[22 172]
[23 171]
[24 167]
[25 166]
[28 163]
[29 162]
[30 161]
[31 160]
[32 159]
[33 158]
[34 155]
[35 154]
[36 153]
[38 150]
[39 149]
[46 148]
[47 147]
[48 146]
[50 144]
[51 143]
[52 142]
[53 140]
[54 139]
[56 137]
[59 135]
[60 134]
[61 133]
[62 132]
[63 131]
[64 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
