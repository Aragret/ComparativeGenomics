%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[109.74214935 481.49826050]
[121.66918182 471.57226562]
[113.00669861 459.45571899]
[119.69615936 445.11828613]
[118.58051300 430.15982056]
[117.46486664 415.20138550]
[116.23788452 400.25164795]
[114.89965057 385.31146240]
[113.56141663 370.37127686]
[109.83370972 363.98959351]
[112.31617737 355.19894409]
[111.20052338 340.24050903]
[110.08487701 325.28204346]
[99.43716431 311.33239746]
[107.57038116 294.81173706]
[106.23214722 279.87155151]
[104.89391327 264.93136597]
[101.16620636 258.54965210]
[103.64867401 249.75903320]
[102.53302002 234.80058289]
[101.41737366 219.84213257]
[100.30172729 204.88368225]
[99.18607330 189.92521667]
[98.07042694 174.96676636]
[96.95478058 160.00831604]
[95.83912659 145.04986572]
[80.67655182 140.90730286]
[67.84645081 131.82691956]
[58.89753723 118.90477753]
[54.91000366 103.70069122]
[56.36517334 88.04990387]
[63.08740234 73.84158325]
[74.26525879 62.79077911]
[88.54949951 56.23141479]
[87.21126556 41.29123306]
[85.87303162 26.35104561]
[84.53479767 11.41086102]
[83.19656372 -3.52932382]
[77.28302002 10.25581551]
[67.26277924 21.41801834]
[54.19330215 28.77931213]
[39.45383072 31.56284332]
[24.59986496 29.47485542]
[11.19897747 22.73570061]
[0.66539448 12.05657959]
[-5.88924837 -1.43551612]
[-7.77322483 -16.31673431]
[-4.78771353 -31.01662254]
[2.75221634 -43.98386765]
[14.05085945 -53.85000610]
[27.91584206 -59.57383728]
[42.88395691 -60.55131912]
[57.37559128 -56.67928696]
[69.86139679 -48.36637115]
[79.02372742 -36.48984909]
[83.89568329 -22.30289459]
[86.34141541 -37.10216522]
[88.78713989 -51.90143585]
[91.23287201 -66.70070648]
[93.67859650 -81.49997711]
[96.12432098 -96.29924774]
[98.57005310 -111.09851837]
[86.81352234 -120.88275146]
[81.56751251 -135.14375305]
[84.14691925 -150.01698303]
[93.76035309 -161.52516174]
[107.74913025 -166.64176941]
[110.19485474 -181.44104004]
[112.64058685 -196.24031067]
[115.08631134 -211.03958130]
[117.31142426 -225.87362671]
[119.31544495 -240.73915100]
[113.49121857 -255.44932556]
[122.85953522 -267.02877808]
[124.86354828 -281.89431763]
[122.87932587 -286.72235107]
[122.93945312 -291.36450195]
[124.63078308 -295.07321167]
[127.30334473 -297.37316895]
[129.96914673 -312.13436890]
[132.63493347 -326.89559937]
[135.30073547 -341.65682983]
[120.88546753 -345.85418701]
[106.98793030 -351.53540039]
[93.76038361 -358.63818359]
[81.34775543 -367.08474731]
[69.88604736 -376.78253174]
[59.50083923 -387.62527466]
[50.30591583 -399.49420166]
[42.40202713 -412.25924683]
[35.87576675 -425.78054810]
[30.79863930 -439.90994263]
[27.22627831 -454.49267578]
[25.19781876 -469.36895752]
[24.73548889 -484.37573242]
[25.84435463 -499.34866333]
[28.51226425 -514.12365723]
[32.70998764 -528.53881836]
[38.39153290 -542.43621826]
[45.49465179 -555.66357422]
[53.94151306 -568.07598877]
[63.63957214 -579.53747559]
[74.48257446 -589.92242432]
[86.35170746 -599.11706543]
[99.11694336 -607.02062988]
[112.63840485 -613.54656982]
[126.76794434 -618.62335205]
[141.35075378 -622.19531250]
[156.22706604 -624.22344971]
[171.23387146 -624.68542480]
[186.20675659 -623.57617188]
[200.98167419 -620.90789795]
[215.39672852 -616.70983887]
[229.29399109 -611.02795410]
[242.52119446 -603.92449951]
[254.93341064 -595.47735596]
[266.39465332 -585.77899170]
[276.77932739 -574.93572998]
[285.97366333 -563.06640625]
[293.87695312 -550.30096436]
[300.40255737 -536.77935791]
[305.47900391 -522.64971924]
[309.05065918 -508.06680298]
[311.07836914 -493.19042969]
[311.53997803 -478.18362427]
[310.43038940 -463.21075439]
[307.76174927 -448.43591309]
[303.56332397 -434.02093506]
[297.88110352 -420.12380981]
[290.77734375 -406.89678955]
[282.32989502 -394.48477173]
[272.63128662 -383.02377319]
[261.78778076 -372.63937378]
[249.91818237 -363.44531250]
[237.15257263 -355.54235840]
[223.63079834 -349.01705933]
[209.50100708 -343.94097900]
[194.91801453 -340.36965942]
[180.04161072 -338.34228516]
[165.03477478 -337.88107300]
[150.06195068 -338.99102783]
[147.39614868 -324.22979736]
[144.73036194 -309.46859741]
[142.06455994 -294.70736694]
[139.72908020 -279.89028931]
[137.72506714 -265.02478027]
[143.69262695 -251.37788391]
[134.18096924 -238.73513794]
[132.17695618 -223.86961365]
[134.30877686 -219.59593201]
[133.77853394 -213.93766785]
[129.88557434 -208.59385681]
[127.43985748 -193.79458618]
[124.99412537 -178.99531555]
[122.54840088 -164.19604492]
[134.14721680 -154.85081482]
[139.54693604 -140.86158752]
[137.20399475 -125.94927216]
[127.64867401 -114.13433838]
[113.36932373 -108.65279388]
[110.92359161 -93.85352325]
[108.47786713 -79.05425262]
[106.03214264 -64.25498199]
[103.58641052 -49.45571136]
[101.14068604 -34.65643692]
[98.69495392 -19.85716820]
[98.13674927 -4.86755800]
[99.47498322 10.07262707]
[100.81321716 25.01281166]
[102.15145111 39.95299530]
[103.48968506 54.89318085]
[117.23887634 58.17148972]
[129.30538940 65.53266144]
[138.51141357 76.25817108]
[143.95835876 89.30111694]
[145.11454773 103.38836670]
[141.86712646 117.14488983]
[134.53306580 129.22790527]
[123.82825470 138.45799255]
[110.79758453 143.93421936]
[111.91323090 158.89266968]
[113.02887726 173.85112000]
[114.14453125 188.80957031]
[115.26017761 203.76802063]
[116.37582397 218.72648621]
[117.49147797 233.68493652]
[118.60712433 248.64338684]
[119.83409882 263.59310913]
[121.17233276 278.53329468]
[122.51056671 293.47348022]
[131.88970947 302.32754517]
[132.69676208 314.79882812]
[125.04333496 324.16641235]
[126.15898132 339.12484741]
[127.27462769 354.08331299]
[128.50160217 369.03305054]
[129.83984375 383.97323608]
[131.17807007 398.91342163]
[135.06062317 407.18164062]
[132.42330933 414.08572388]
[133.53897095 429.04418945]
[134.65461731 444.00262451]
[143.39689636 457.18911743]
[136.62763977 470.45660400]
[149.89514160 478.50350952]
[155.86787415 492.82504272]
[152.24917603 507.91427612]
[140.43052673 517.96905518]
[124.95642090 519.12316895]
[111.77698517 510.93283081]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 204]
[4 202]
[5 201]
[6 200]
[7 198]
[8 197]
[9 196]
[11 195]
[12 194]
[13 193]
[15 190]
[16 189]
[17 188]
[19 187]
[20 186]
[21 185]
[22 184]
[23 183]
[24 182]
[25 181]
[26 180]
[34 171]
[35 170]
[36 169]
[37 168]
[38 167]
[56 166]
[57 165]
[58 164]
[59 163]
[60 162]
[61 161]
[62 160]
[67 155]
[68 154]
[69 153]
[70 152]
[71 149]
[72 148]
[74 146]
[75 145]
[79 144]
[80 143]
[81 142]
[82 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
