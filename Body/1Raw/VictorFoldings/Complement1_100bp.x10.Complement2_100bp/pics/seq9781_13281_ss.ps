%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[291.41857910 552.92474365]
[303.60806274 544.11242676]
[297.12857056 530.58410645]
[290.64907837 517.05572510]
[284.16958618 503.52740479]
[277.69009399 489.99905396]
[271.21057129 476.47070312]
[264.73107910 462.94235229]
[250.08169556 466.02188110]
[235.11193848 465.50540161]
[220.69216919 461.41857910]
[207.66175842 453.99481201]
[196.78028870 443.66189575]
[188.68328857 431.01724243]
[183.84506226 416.79360962]
[182.55096436 401.81631470]
[184.88056946 386.95565796]
[190.70271301 373.07611084]
[199.68298340 360.98617554]
[211.30285645 351.39117432]
[204.82336426 337.86282349]
[198.34387207 324.33447266]
[191.86437988 310.80612183]
[179.38842773 302.66979980]
[180.40541077 286.88128662]
[173.92591858 273.35296631]
[167.44642639 259.82461548]
[160.96691895 246.29626465]
[154.48742676 232.76791382]
[139.82910156 230.26361084]
[129.33200073 219.48054504]
[127.17189789 204.40780640]
[134.38467407 190.79595947]
[121.90872192 182.65962219]
[122.92570496 166.87113953]
[116.44620514 153.34278870]
[110.72177887 148.66810608]
[109.97263336 139.56445312]
[103.69527435 125.94113159]
[97.41790771 112.31781769]
[90.83788300 98.83808136]
[83.95847321 85.50865173]
[69.17130280 80.61198425]
[62.38448334 66.99604797]
[67.14383698 52.92891693]
[60.26442719 39.59948730]
[53.38501358 26.27005768]
[46.50559998 12.94062901]
[33.30087662 4.22593927]
[34.33938599 -10.63241768]
[29.94592285 -13.45102882]
[27.33412743 -17.28923416]
[26.59402466 -21.29763794]
[27.46547127 -24.71420288]
[21.18811035 -38.33752060]
[14.91074944 -51.96083450]
[8.63338852 -65.58415222]
[2.35602760 -79.20746613]
[-3.92133307 -92.83078766]
[-16.72375679 -102.12640381]
[-15.02282238 -116.92356873]
[-15.44202614 -101.92942810]
[-19.38987350 -87.45826721]
[-26.64309692 -74.32849884]
[-36.79148865 -63.28268051]
[-49.26111221 -54.94550323]
[-63.34674454 -49.78847504]
[-78.25177765 -48.10324860]
[-93.13326263 -49.98513412]
[-107.14956665 -55.32770538]
[-119.50801849 -63.82880783]
[-129.50967407 -75.00766754]
[-136.58889771 -88.23205566]
[-140.34532166 -102.75408936]
[-140.56649780 -117.75245667]
[-137.23992920 -132.37893677]
[-130.55374146 -145.80633545]
[-120.88607788 -157.27525330]
[-108.78368378 -166.13708496]
[-94.93100739 -171.89064026]
[-80.11148834 -174.21052551]
[-65.16324615 -172.96554565]
[-50.93166733 -168.22612000]
[-38.22162247 -160.26025391]
[-27.75192833 -149.51849365]
[-20.11425972 -136.60734558]
[-21.22990799 -151.56579590]
[-22.34555817 -166.52424622]
[-23.46120644 -181.48269653]
[-24.57685471 -196.44114685]
[-39.45943069 -198.80877686]
[-53.39460754 -204.54528809]
[-65.63087463 -213.34133911]
[-75.50834656 -224.72254944]
[-82.49434662 -238.07518005]
[-86.21212769 -252.67910767]
[-86.46118927 -267.74679565]
[-83.22810364 -282.46560669]
[-76.68723297 -296.04183960]
[-67.19130707 -307.74328613]
[-55.25243378 -316.93893433]
[-41.51446152 -323.13287354]
[-26.71826553 -325.99108887]
[-11.66178226 -325.35937500]
[2.84300995 -321.27188110]
[16.01388741 -313.94900513]
[27.14055824 -303.78564453]
[35.62297821 -291.32989502]
[41.00370026 -277.25350952]
[42.99254990 -262.31561279]
[41.48226929 -247.32174683]
[36.55430222 -233.08053589]
[28.47441673 -220.36000061]
[17.67834282 -209.84613037]
[4.74830389 -202.10592651]
[-9.61840153 -197.55680847]
[-8.50275230 -182.59834290]
[-7.38710403 -167.63989258]
[-6.27145529 -152.68144226]
[-5.15580654 -137.72299194]
[-1.39950597 -123.20092773]
[10.95391846 -114.87973785]
[9.70198345 -99.10814667]
[15.97934341 -85.48482513]
[22.25670433 -71.86151123]
[28.53406525 -58.23819733]
[34.81142426 -44.61487961]
[41.08878708 -30.99156380]
[47.66881561 -17.51182938]
[60.38147736 -9.75055027]
[59.83502960 6.06121635]
[66.71443939 19.39064598]
[73.59385681 32.72007370]
[80.47326660 46.04950333]
[94.69657135 50.31954956]
[101.86315155 63.73948669]
[97.28790283 78.62924194]
[104.16731262 91.95867157]
[107.63793182 93.64008331]
[110.35056305 96.84313202]
[111.64224243 101.19497681]
[111.04122925 106.04045868]
[117.31858826 119.66377258]
[123.59594727 133.28709412]
[129.97454834 146.86329651]
[136.45405579 160.39164734]
[149.39344788 169.49562073]
[147.91300964 184.31646729]
[163.04000854 187.22851562]
[173.43029785 198.35934448]
[175.25247192 213.29734802]
[168.01577759 226.28842163]
[174.49526978 239.81677246]
[180.97476196 253.34510803]
[187.45425415 266.87344360]
[193.93376160 280.40179443]
[206.87315369 289.50579834]
[205.39271545 304.32662964]
[211.87222290 317.85498047]
[218.35171509 331.38333130]
[224.83120728 344.91168213]
[239.59082031 341.87203979]
[254.63990784 342.45294189]
[269.10385132 346.61633301]
[282.14306641 354.11599731]
[293.00177002 364.51220703]
[301.05181885 377.19757080]
[305.82885742 391.43231201]
[307.05938721 406.38763428]
[304.67617798 421.19384766]
[298.82205200 434.99099731]
[289.84130859 446.97872925]
[278.25942993 456.46286011]
[284.73892212 469.99121094]
[291.21841431 483.51956177]
[297.69793701 497.04791260]
[304.17742920 510.57626343]
[310.65692139 524.10461426]
[317.13641357 537.63293457]
[331.64318848 533.65887451]
[346.62646484 532.33917236]
[361.60455322 533.71624756]
[376.09600830 537.74584961]
[389.63494873 544.29846191]
[401.78619385 553.16339111]
[412.15911865 564.05566406]
[420.42028809 576.62518311]
[426.30410767 590.46789551]
[429.62145996 605.13879395]
[430.26571655 620.16625977]
[428.21612549 635.06726074]
[423.53860474 649.36273193]
[416.38351440 662.59313965]
[406.98086548 674.33325195]
[395.63290405 684.20562744]
[382.70440674 691.89288330]
[368.61099243 697.14794922]
[353.80572510 699.80187988]
[338.76449585 699.76934814]
[323.97082520 697.05139160]
[309.90026855 691.73547363]
[297.00515747 683.99237061]
[285.69998169 674.07098389]
[276.34817505 662.29034424]
[269.25036621 649.02911377]
[264.63473511 634.71350098]
[262.64959717 619.80383301]
[263.35882568 604.77929688]
[266.73959351 590.12286377]
[272.68322754 576.30578613]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 179]
[3 178]
[4 177]
[5 176]
[6 175]
[7 174]
[8 173]
[20 161]
[21 160]
[22 159]
[23 158]
[25 156]
[26 155]
[27 154]
[28 153]
[29 152]
[33 148]
[35 146]
[36 145]
[38 144]
[39 143]
[40 142]
[41 138]
[42 137]
[45 134]
[46 133]
[47 132]
[48 131]
[50 129]
[54 128]
[55 127]
[56 126]
[57 125]
[58 124]
[59 123]
[61 121]
[86 120]
[87 119]
[88 118]
[89 117]
[90 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
