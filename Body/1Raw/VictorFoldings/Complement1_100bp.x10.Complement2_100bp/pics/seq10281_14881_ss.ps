%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[80.86692047 548.52679443]
[75.07784271 562.40252686]
[67.08371735 575.13610840]
[57.10263062 586.38012695]
[45.40687180 595.82781982]
[32.31551361 603.22149658]
[18.18569756 608.35943604]
[3.40289140 611.10137939]
[-11.62961578 611.37268066]
[-26.50172615 609.16583252]
[-40.80772018 604.54107666]
[-54.15731812 597.62457275]
[-66.18633270 588.60498047]
[-76.56660461 577.72839355]
[-85.01495361 565.29156494]
[-91.30089569 551.63372803]
[-95.25295258 537.12750244]
[-96.76331329 522.16857910]
[-95.79076385 507.16510010]
[-92.36183929 492.52636719]
[-86.57009125 478.65173340]
[-78.57350922 465.91970825]
[-68.59025574 454.67761230]
[-56.89268112 445.23217773]
[-43.79990005 437.84103394]
[-29.66909218 432.70584106]
[-14.88575935 429.96670532]
[0.14680003 429.69833374]
[15.01848602 431.90805054]
[19.63249588 417.63531494]
[24.24650383 403.36257935]
[28.86051369 389.08984375]
[27.92690659 381.75839233]
[33.65092468 374.63986206]
[38.47692490 360.43740845]
[43.30292130 346.23495483]
[48.12891769 332.03250122]
[51.88521957 317.51043701]
[54.55101395 302.74920654]
[57.21681213 287.98800659]
[51.86456680 274.08825684]
[61.93125916 261.88284302]
[64.59705353 247.12162781]
[67.26284790 232.36041260]
[69.92864990 217.59919739]
[64.57640076 203.69944763]
[74.64309692 191.49403381]
[68.00575256 181.38105774]
[70.10586548 169.06143188]
[80.35524750 161.23117065]
[71.85845184 149.05168152]
[74.57483673 134.08250427]
[87.40741730 125.25286865]
[90.29269409 110.53297424]
[85.94354248 97.24476624]
[94.98741913 86.58174896]
[97.87268829 71.86186218]
[92.93435669 56.83110809]
[102.97528076 45.82978821]
[105.86055756 31.10989571]
[92.33089447 24.44779396]
[80.99560547 14.51821136]
[72.62341309 2.00252795]
[67.78003693 -12.24276352]
[66.78993225 -27.24467659]
[69.71461487 -41.98018646]
[76.34881592 -55.44599152]
[86.23492432 -66.72682953]
[98.69451141 -75.05767822]
[112.87492371 -79.87564850]
[127.80758667 -80.85800171]
[130.69285583 -95.57789612]
[125.75452423 -110.60864258]
[135.79545593 -121.60997009]
[134.24288940 -125.66502380]
[134.07803345 -129.60676575]
[135.09486389 -133.01286316]
[136.97137451 -135.57124329]
[139.31553650 -137.10845947]
[143.07183838 -151.63050842]
[146.82814026 -166.15257263]
[150.58444214 -180.67463684]
[154.34074402 -195.19668579]
[158.09704590 -209.71875000]
[156.78858948 -213.85902405]
[156.85865784 -217.80360413]
[158.07641602 -221.14312744]
[160.10186768 -223.58528137]
[162.53338623 -224.98023987]
[167.14739990 -239.25297546]
[171.76139832 -253.52571106]
[176.37541199 -267.79843140]
[180.98942566 -282.07116699]
[184.85372925 -296.56488037]
[187.95783997 -311.24017334]
[191.06195068 -325.91546631]
[194.16606140 -340.59078979]
[197.27017212 -355.26608276]
[183.50718689 -361.37133789]
[171.31455994 -370.20498657]
[161.22528076 -381.38085938]
[153.68040466 -394.41036987]
[149.00976562 -408.72396851]
[147.41755676 -423.69589233]
[148.97335815 -438.67166138]
[153.60919189 -452.99655151]
[161.12236023 -466.04437256]
[171.18444824 -477.24475098]
[183.35557556 -486.10800171]
[197.10366821 -492.24670410]
[211.82771301 -495.39248657]
[226.88406372 -495.40783691]
[241.61448669 -492.29205322]
[255.37506104 -486.18139648]
[267.56420898 -477.34295654]
[277.64910889 -466.16311646]
[285.18884277 -453.13061523]
[289.85385132 -438.81518555]
[291.44018555 -423.84262085]
[289.87847900 -408.86749268]
[285.23703003 -394.54440308]
[277.71871948 -381.49954224]
[267.65222168 -370.30313110]
[255.47761536 -361.44467163]
[241.72711182 -355.31137085]
[227.00181580 -352.17138672]
[211.94546509 -352.16195679]
[208.84135437 -337.48666382]
[205.73724365 -322.81137085]
[202.63313293 -308.13604736]
[199.52902222 -293.46075439]
[212.05287170 -301.71624756]
[226.96717834 -300.11514282]
[237.45332336 -289.38943481]
[238.71717834 -274.44277954]
[230.18092346 -262.10858154]
[215.74722290 -258.02587891]
[202.01498413 -264.06121826]
[195.26216125 -277.45715332]
[190.64814758 -263.18444824]
[186.03413391 -248.91169739]
[181.42012024 -234.63896179]
[176.80612183 -220.36622620]
[172.61911011 -205.96244812]
[168.86280823 -191.44039917]
[165.10650635 -176.91833496]
[161.35020447 -162.39627075]
[157.59390259 -147.87420654]
[153.83760071 -133.35215759]
[150.51535034 -118.72469330]
[155.66004944 -104.74681091]
[145.41275024 -92.69261932]
[142.52748108 -77.97273254]
[155.98429871 -71.42570496]
[167.29650879 -61.61087799]
[175.68905640 -49.19276047]
[180.58486938 -35.01449203]
[181.64456177 -20.04059410]
[178.78987122 -5.29136467]
[172.20953369 8.22665215]
[162.34667969 19.58934784]
[149.86911011 28.01823044]
[135.62400818 32.93375397]
[120.58044434 33.99516678]
[117.69517517 48.71506119]
[122.83988190 62.69294357]
[112.59258270 74.74713135]
[109.70730591 89.46702576]
[114.05645752 102.75523376]
[105.01258087 113.41825104]
[102.12731171 128.13813782]
[110.67694855 141.15895081]
[107.54118347 156.04591370]
[95.07514191 164.11643982]
[101.44549561 181.39358521]
[89.40431213 194.15982056]
[94.56587982 209.11538696]
[84.68986511 220.26498413]
[82.02407074 235.02619934]
[79.35826874 249.78741455]
[76.69247437 264.54864502]
[81.85404205 279.50421143]
[71.97802734 290.65380859]
[69.31223297 305.41500854]
[66.64643860 320.17623901]
[77.50737762 309.83020020]
[92.06266022 306.20477295]
[106.50756836 310.24761963]
[117.06624603 320.90191650]
[120.97867584 335.38272095]
[117.22215271 349.90472412]
[106.77863312 360.67193604]
[92.37801361 364.86981201]
[77.78459930 361.40109253]
[66.81305695 351.17242432]
[62.33137512 336.85848999]
[57.50537491 351.06094360]
[52.67937851 365.26339722]
[47.85338211 379.46585083]
[43.13324738 393.70385742]
[38.51923752 407.97659302]
[33.90522766 422.24932861]
[29.29121971 436.52203369]
[42.64214706 443.43597412]
[54.67290115 452.45324707]
[65.05526733 463.32781982]
[73.50601196 475.76303101]
[79.79458618 489.41967773]
[83.74944305 503.92514038]
[85.26268005 518.88378906]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 203]
[30 202]
[31 201]
[32 200]
[34 199]
[35 198]
[36 197]
[37 196]
[38 185]
[39 184]
[40 183]
[42 181]
[43 180]
[44 179]
[45 178]
[47 176]
[50 174]
[53 171]
[54 170]
[56 168]
[57 167]
[59 165]
[60 164]
[71 153]
[72 152]
[74 150]
[79 149]
[80 148]
[81 147]
[82 146]
[83 145]
[84 144]
[89 143]
[90 142]
[91 141]
[92 140]
[93 139]
[94 131]
[95 130]
[96 129]
[97 128]
[98 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
