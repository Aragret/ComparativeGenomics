%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[13.05823708 538.92041016]
[-2.73028827 538.21466064]
[-13.33365250 526.49530029]
[-12.46106720 510.71511841]
[-0.63022262 500.23623657]
[0.03956253 485.25119019]
[0.70934767 470.26617432]
[1.37913275 455.28112793]
[2.04891801 440.29608154]
[-5.11236238 427.23602295]
[3.23343039 413.79510498]
[3.90321565 398.81005859]
[-5.09941769 410.80807495]
[-18.60673141 417.33132935]
[-33.60115814 416.92242432]
[-46.73290253 409.67279053]
[-55.06830215 397.20199585]
[-56.74520493 382.29602051]
[-51.38898849 368.28491211]
[-40.19624329 358.29879761]
[-25.66745949 354.56860352]
[-11.04840279 357.92764282]
[0.39499214 367.62551880]
[6.10624409 381.49569702]
[9.21035480 366.82040405]
[12.31446457 352.14511108]
[15.41857433 337.46978760]
[1.61451352 343.33901978]
[-11.65287781 336.34072876]
[-14.60337353 321.63375854]
[-5.06197643 310.05957031]
[9.93774986 310.15023804]
[19.33818245 321.83728027]
[23.52519417 307.43350220]
[22.37371635 300.13308716]
[27.88325310 292.84729004]
[32.28425217 278.50744629]
[36.68524933 264.16760254]
[41.08624649 249.82775879]
[45.48724365 235.48789978]
[49.88824081 221.14805603]
[48.48176193 216.58396912]
[49.92747879 211.08789062]
[54.63964462 206.45031738]
[59.46564102 192.24786377]
[52.20911026 181.60023499]
[52.41324615 168.52198792]
[60.22754669 157.79132080]
[72.98033905 153.45762634]
[78.01725769 139.32859802]
[83.05416870 125.19956970]
[88.09108734 111.07054138]
[83.74244690 100.26634979]
[87.73484039 89.32550812]
[98.01994324 83.86127472]
[103.26666260 69.80880737]
[100.84516144 54.17400742]
[112.54546356 44.95706177]
[98.48489380 50.18202972]
[84.79109955 44.05994034]
[79.30850983 30.09780693]
[85.17779541 16.29376984]
[99.03677368 10.55541039]
[112.94638824 16.16992188]
[118.93855286 29.92010689]
[125.41804504 16.39175987]
[131.89753723 2.86341500]
[138.37704468 -10.66493034]
[144.85653687 -24.19327545]
[132.73217773 -15.36151505]
[118.41661835 -10.88215446]
[103.42060089 -11.22791386]
[89.32669830 -16.36230278]
[77.62227631 -25.74347687]
[69.54252625 -38.38142014]
[65.94011688 -52.94241714]
[67.19522858 -67.88981628]
[73.17540741 -81.64617920]
[83.24954224 -92.75976562]
[96.35449219 -100.05772400]
[111.10726166 -102.76989746]
[125.95095062 -100.61006165]
[139.31907654 -93.80613708]
[149.80085754 -83.07616425]
[156.29013062 -69.55251312]
[158.10208130 -54.66234970]
[155.04539490 -39.97690201]
[164.70620728 -51.45160294]
[174.36701965 -62.92630386]
[184.02783203 -74.40100098]
[193.68864441 -85.87570190]
[196.65782166 -101.41580200]
[210.77374268 -106.16867065]
[220.43455505 -117.64336395]
[230.00967407 -129.18966675]
[232.74714661 -144.77224731]
[246.79075623 -149.73475647]
[256.27966309 -161.35202026]
[245.67231750 -171.97630310]
[236.19425964 -183.61921692]
[227.94273376 -196.16128540]
[221.00242615 -209.47380066]
[215.44456482 -223.42016602]
[211.32615662 -237.85725403]
[208.68948364 -252.63693237]
[207.56158447 -267.60754395]
[207.95405579 -282.61544800]
[209.86285400 -297.50662231]
[213.26838684 -312.12829590]
[218.13572693 -326.33041382]
[224.41491699 -339.96722412]
[232.04151917 -352.89880371]
[240.93728638 -364.99246216]
[251.01091003 -376.12408447]
[262.15902710 -386.17944336]
[274.26727295 -395.05535889]
[287.21133423 -402.66076660]
[300.85842896 -408.91757202]
[315.06851196 -413.76162720]
[329.69573975 -417.14318848]
[344.59005737 -419.02755737]
[359.59857178 -419.39541626]
[374.56729126 -418.24298096]
[389.34265137 -415.58206177]
[403.77294922 -411.43997192]
[417.71020508 -405.85925293]
[431.01132202 -398.89712524]
[443.53982544 -390.62506104]
[455.16717529 -381.12789917]
[465.77404785 -370.50317383]
[475.25161743 -358.85983276]
[483.50256348 -346.31741333]
[490.44229126 -333.00457764]
[495.99954224 -319.05798340]
[500.11730957 -304.62069702]
[502.75335693 -289.84088135]
[503.88058472 -274.87023926]
[503.48745728 -259.86236572]
[501.57800293 -244.97126770]
[498.17181396 -230.34974670]
[493.30386353 -216.14784241]
[487.02404785 -202.51130676]
[479.39688110 -189.58004761]
[470.50057983 -177.48678589]
[460.42648315 -166.35560608]
[449.27789307 -156.30073547]
[437.16928101 -147.42535400]
[424.22488403 -139.82054138]
[410.57751465 -133.56431580]
[396.36721802 -128.72090149]
[381.73983765 -125.33998108]
[366.84545898 -123.45626068]
[351.83691406 -123.08906555]
[336.86822510 -124.24216461]
[322.09301758 -126.90372467]
[307.66287231 -131.04643250]
[293.72589111 -136.62777710]
[280.42507935 -143.59049988]
[267.89691162 -151.86312866]
[258.40802002 -140.24586487]
[256.34924316 -125.49422455]
[241.62693787 -119.70076752]
[239.83023071 -112.53183746]
[231.90925598 -107.98255920]
[222.24844360 -96.50785828]
[219.97027588 -81.78850555]
[205.16334534 -76.21488953]
[195.50253296 -64.74019623]
[185.84172058 -53.26549149]
[176.18090820 -41.79079056]
[166.52009583 -30.31609154]
[158.38488770 -17.71377945]
[151.90538025 -4.18543482]
[145.42588806 9.34291077]
[138.94639587 22.87125587]
[132.46690369 36.39960098]
[126.59793854 50.20377731]
[129.39472961 64.83345032]
[117.31913757 75.05551910]
[112.07241821 89.10799408]
[115.27455139 105.57379150]
[102.22011566 116.10745239]
[97.18319702 130.23648071]
[92.14628601 144.36550903]
[87.10936737 158.49453735]
[94.89531708 174.15974426]
[89.05769348 190.29159546]
[73.66809845 197.07386780]
[68.84210205 211.27632141]
[64.22808838 225.54905701]
[59.82709122 239.88890076]
[55.42609406 254.22874451]
[51.02509689 268.56860352]
[46.62409592 282.90844727]
[42.22309875 297.24829102]
[37.92897415 311.62051392]
[33.74196625 326.02429199]
[30.09387779 340.57391357]
[26.98976707 355.24920654]
[23.88565636 369.92449951]
[20.78154755 384.59982300]
[18.88825417 399.47985840]
[18.21846962 414.46487427]
[25.33184242 428.59677124]
[17.03395653 440.96588135]
[16.36417198 455.95089722]
[15.69438648 470.93594360]
[15.02460098 485.92098999]
[14.35481644 500.90603638]
[25.20360565 512.39862061]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 209]
[6 208]
[7 207]
[8 206]
[9 205]
[11 203]
[12 202]
[24 201]
[25 200]
[26 199]
[27 198]
[33 197]
[34 196]
[36 195]
[37 194]
[38 193]
[39 192]
[40 191]
[41 190]
[44 189]
[45 188]
[49 185]
[50 184]
[51 183]
[52 182]
[55 180]
[56 179]
[58 177]
[65 176]
[66 175]
[67 174]
[68 173]
[69 172]
[87 171]
[88 170]
[89 169]
[90 168]
[91 167]
[93 165]
[94 164]
[95 162]
[97 160]
[98 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
