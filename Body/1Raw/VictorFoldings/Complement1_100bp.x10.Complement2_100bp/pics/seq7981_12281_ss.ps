%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[44.55382919 724.28753662]
[29.86620712 721.16442871]
[15.62062550 716.41644287]
[1.99623597 710.10327148]
[-10.83561897 702.30432129]
[-22.71356583 693.11767578]
[-33.48822784 682.65887451]
[-43.02410126 671.05938721]
[-51.20125961 658.46520996]
[-57.91687393 645.03460693]
[-63.08647919 630.93658447]
[-66.64506531 616.34832764]
[-68.54788208 601.45336914]
[-68.77100372 586.43908691]
[-67.31161499 571.49414062]
[-64.18807220 556.80664062]
[-59.43965530 542.56121826]
[-53.12608337 528.93701172]
[-45.32675552 516.10534668]
[-36.13975906 504.22769165]
[-25.68062973 493.45333862]
[-14.08089828 483.91781616]
[-1.48644602 475.74102783]
[11.94433880 469.02581787]
[26.04254913 463.85662842]
[40.63088608 460.29849243]
[55.52588272 458.39611816]
[55.30255508 443.39776611]
[55.07922745 428.39944458]
[54.85589981 413.40109253]
[54.63257217 398.40277100]
[54.40924454 383.40441895]
[54.18591690 368.40609741]
[53.96258926 353.40774536]
[46.03665543 340.79708862]
[53.56763458 326.88323975]
[45.64170456 314.27258301]
[53.17267990 300.35873413]
[52.94935226 285.36041260]
[52.72602463 270.36206055]
[52.50269699 255.36373901]
[52.27936935 240.36540222]
[45.71041489 253.85052490]
[35.78818130 265.09994507]
[23.22896004 273.30151367]
[8.93941498 277.86318970]
[-6.04888058 278.45565796]
[-20.65390778 275.03613281]
[-33.82131577 267.85147095]
[-44.60054398 257.42034912]
[-52.21342468 244.49580383]
[-56.11037827 230.01084900]
[-56.01007843 215.01118469]
[-51.91977310 200.57963562]
[-44.13473892 187.75805664]
[-33.21698761 177.47200012]
[-19.95467567 170.46406555]
[-5.30522680 167.24015808]
[9.67380524 168.03298950]
[23.90107155 172.78535461]
[36.34949112 181.15415955]
[46.12040710 192.53524780]
[52.50844193 206.10700989]
[55.05248642 220.89086914]
[59.45348358 206.55102539]
[63.85448074 192.21118164]
[68.25547791 177.87133789]
[72.65647888 163.53147888]
[60.01670837 156.43804932]
[49.13276291 146.86621094]
[40.48259735 135.23629761]
[34.44607162 122.05901337]
[31.28827286 107.91303253]
[31.14787292 93.41956329]
[34.03103638 79.21506500]
[39.81115723 65.92330933]
[48.23440170 54.12799835]
[58.93087387 44.34710693]
[71.43085480 37.01014709]
[85.18540955 32.43931961]
[99.59053802 30.83534050]
[114.01364899 32.26865387]
[118.62765503 17.99592018]
[123.24166870 3.72318649]
[127.85567474 -10.54954720]
[132.46968079 -24.82228088]
[137.08369446 -39.09501266]
[136.74572754 -48.22319031]
[141.87409973 -53.54499054]
[146.70010376 -67.74744415]
[149.03558350 -82.56451416]
[148.81225586 -97.56285095]
[148.25405884 -112.55245972]
[147.36123657 -127.52587128]
[146.46841431 -142.49926758]
[145.57560730 -157.47267151]
[131.19902039 -162.41052246]
[119.80973816 -172.47792053]
[113.14452362 -186.13967896]
[112.21978760 -201.31245422]
[117.17654419 -215.68252563]
[127.25891876 -227.05856323]
[140.92942810 -233.70579529]
[156.10340881 -234.61058044]
[170.46694946 -229.63491821]
[181.82971191 -219.53759766]
[188.45895386 -205.85835266]
[189.34376526 -190.68319702]
[184.34922791 -176.32620239]
[174.23695374 -164.97674561]
[160.54901123 -158.36549377]
[161.44183350 -143.39208984]
[162.33464050 -128.41868591]
[163.22746277 -113.44527435]
[165.60777283 -110.84403992]
[166.84642029 -106.96063995]
[166.35447693 -102.34422302]
[163.81060791 -97.78617859]
[164.03393555 -82.78784180]
[170.51573181 -96.31508636]
[180.11877441 -107.83817291]
[192.25582886 -116.65245819]
[206.18473816 -122.21894836]
[221.05371094 -124.19725800]
[235.95350647 -122.46640015]
[249.97300720 -117.13221741]
[262.25491333 -108.52091217]
[272.04818726 -97.15904999]
[278.75396729 -83.74142456]
[281.96218872 -69.08853149]
[281.47665405 -54.09638977]
[277.32705688 -39.68178177]
[269.76715088 -26.72616768]
[259.25924683 -16.02178192]
[246.44587708 -8.22320843]
[232.11061096 -3.80732870]
[217.13003540 -3.04417706]
[202.42022705 -5.98042059]
[188.88069153 -12.43650627]
[177.33938599 -22.01764297]
[168.50205994 -34.13793945]
[162.90910339 -48.05623627]
[160.90255737 -62.92144775]
[156.07656860 -48.71899414]
[151.35643005 -34.48100281]
[146.74241638 -20.20827103]
[142.12840271 -5.93553782]
[137.51440430 8.33719540]
[132.90039062 22.60993004]
[128.28637695 36.88266373]
[141.58901978 44.73453522]
[152.81727600 55.34293747]
[161.41111755 68.17874146]
[166.94189453 82.60173035]
[169.13375854 97.89250183]
[167.87736511 113.28839111]
[163.23538208 128.02148438]
[155.43936157 141.35693359]
[144.87812805 152.62956238]
[132.07846069 161.27716064]
[117.67879486 166.86836243]
[102.39734650 169.12431335]
[86.99632263 167.93247986]
[82.59532928 182.27232361]
[78.19432831 196.61218262]
[73.79332733 210.95202637]
[69.39233398 225.29187012]
[67.27770996 240.14207458]
[67.50103760 255.14041138]
[67.72436523 270.13873291]
[67.94769287 285.13708496]
[68.17102051 300.13540649]
[76.11292267 313.81887817]
[68.56597137 326.65991211]
[76.50788116 340.34335327]
[68.96092987 353.18441772]
[69.18425751 368.18276978]
[69.40758514 383.18109131]
[69.63091278 398.17944336]
[69.85424042 413.17776489]
[70.07756805 428.17611694]
[70.30089569 443.17443848]
[70.52422333 458.17279053]
[85.46926117 459.63082886]
[100.15706635 462.75305176]
[114.40293121 467.50021362]
[128.02769470 473.81256104]
[140.86001587 481.61071777]
[152.73851013 490.79666138]
[163.51380920 501.25482178]
[173.05036926 512.85369873]
[181.22828674 525.44738770]
[187.94470215 538.87762451]
[193.11514282 552.97534180]
[196.67460632 567.56335449]
[198.57832336 582.45819092]
[198.80233765 597.47253418]
[197.34384155 612.41748047]
[194.22117615 627.10522461]
[189.47360229 641.35095215]
[183.16085815 654.97552490]
[175.36228943 667.80761719]
[166.17601013 679.68585205]
[155.71752930 690.46081543]
[144.11836243 699.99700928]
[131.52439880 708.17456055]
[118.09401703 714.89056396]
[103.99611664 720.06060791]
[89.40798950 723.61962891]
[74.51310730 725.52288818]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 183]
[28 182]
[29 181]
[30 180]
[31 179]
[32 178]
[33 177]
[34 176]
[36 174]
[38 172]
[39 171]
[40 170]
[41 169]
[42 168]
[64 167]
[65 166]
[66 165]
[67 164]
[68 163]
[82 150]
[83 149]
[84 148]
[85 147]
[86 146]
[87 145]
[89 144]
[90 143]
[91 119]
[92 118]
[93 114]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
