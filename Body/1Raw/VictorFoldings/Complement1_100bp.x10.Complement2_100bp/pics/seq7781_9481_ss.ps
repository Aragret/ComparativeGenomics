%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[81.07719421 546.55444336]
[78.27075958 531.72119141]
[79.57151794 516.68084717]
[84.88294983 502.54965210]
[93.81090546 490.37615967]
[105.69286346 481.06372070]
[119.64711761 475.30337524]
[117.86465454 460.40966797]
[116.08219147 445.51596069]
[114.29972076 430.62222290]
[112.51725769 415.72851562]
[110.73479462 400.83480835]
[108.95232391 385.94107056]
[94.55493927 381.98574829]
[82.73674774 372.79467773]
[75.31776428 359.74389648]
[73.45560455 344.80667114]
[77.46493530 330.25543213]
[86.76481628 318.31579590]
[99.96265411 310.82629395]
[98.18019104 295.93255615]
[94.26412964 289.66470337]
[96.48376465 280.80404663]
[94.92324066 265.88543701]
[93.36271667 250.96684265]
[83.98547363 262.67440796]
[69.30178070 265.73858643]
[56.02482224 258.75845337]
[50.22464371 244.92523193]
[54.55300903 230.56329346]
[67.03105164 222.23870850]
[81.95397186 223.75738525]
[92.50000000 234.42668152]
[92.50000000 219.42668152]
[92.50000000 204.42668152]
[92.50000000 189.42668152]
[92.50000000 174.42668152]
[92.50000000 159.42668152]
[92.50000000 144.42668152]
[92.50000000 129.42668152]
[92.50000000 114.42668152]
[84.77587128 105.71007538]
[84.86257172 94.06388855]
[92.71562195 85.46325684]
[91.48864746 70.51351929]
[88.82285309 55.75230408]
[86.15705872 40.99108887]
[76.09036255 28.78566933]
[81.44260406 14.88593102]
[78.77680969 0.12471340]
[73.53009033 -13.92775822]
[65.86949921 -26.82408524]
[58.20890045 -39.72041321]
[50.54830170 -52.61673737]
[42.88770294 -65.51306915]
[41.94262314 -50.54286575]
[34.22780609 -37.67890167]
[21.46676064 -29.79501343]
[6.51033735 -28.65248108]
[-7.30016136 -34.50654984]
[-16.87943459 -46.04940796]
[-20.08744812 -60.70234680]
[-16.20752144 -75.19186401]
[-6.10644388 -86.28096771]
[7.95918083 -91.49232483]
[22.84705544 -89.66169739]
[35.23120499 -81.19804382]
[29.77584839 -95.17083740]
[24.32049179 -109.14363861]
[18.86513329 -123.11643219]
[4.26810646 -119.56534576]
[-10.67199993 -117.99160004]
[-25.68856049 -118.42328644]
[-40.51358795 -120.85269165]
[-54.88251114 -125.23647308]
[-68.53890228 -131.49638367]
[-81.23903656 -139.52070618]
[-92.75628662 -149.16625977]
[-102.88509369 -160.26087952]
[-111.44470215 -172.60658264]
[-118.28235626 -185.98306274]
[-123.27603912 -200.15156555]
[-126.33661652 -214.85925293]
[-127.40948486 -229.84365845]
[-126.47548676 -244.83737183]
[-123.55129242 -259.57278442]
[-118.68909454 -273.78695679]
[-111.97565460 -287.22619629]
[-103.53078461 -299.65066528]
[-93.50520325 -310.83865356]
[-82.07781219 -320.59048462]
[-69.45256042 -328.73211670]
[-55.85474777 -335.11828613]
[-41.52705765 -339.63500977]
[-26.72517204 -342.20166016]
[-11.71325588 -342.77243042]
[3.24078870 -341.33715820]
[17.87008858 -337.92147827]
[31.91356850 -332.58627319]
[45.12060165 -325.42684937]
[57.25550079 -316.57089233]
[68.10169220 -306.17651367]
[77.46562958 -294.42913818]
[85.18018341 -281.53848267]
[91.10769653 -267.73458862]
[95.14237213 -253.26374817]
[97.21221161 -238.38426208]
[97.28027344 -223.36164856]
[95.34535217 -208.46401978]
[91.44197083 -193.95722961]
[85.63978577 -180.10015869]
[78.04235840 -167.14013672]
[68.78525543 -155.30841064]
[58.03369904 -144.81616211]
[45.97954941 -135.85061646]
[32.83793259 -128.57179260]
[38.29328918 -114.59899139]
[43.74864578 -100.62619781]
[49.20400238 -86.65339661]
[55.78403091 -73.17366028]
[63.44462967 -60.27733612]
[71.10522461 -47.38100815]
[78.76582336 -34.48468399]
[86.42642212 -21.58835602]
[85.28343964 -36.54474640]
[87.70435333 -51.34809494]
[93.55226898 -65.16120148]
[102.49644470 -77.20286560]
[114.03104401 -86.79208374]
[127.50373077 -93.38652039]
[142.15255737 -96.61325073]
[157.14907837 -96.28976440]
[171.64514160 -92.43437195]
[184.82093811 -85.26510620]
[195.93132019 -75.18743134]
[204.34791565 -62.77128601]
[209.59475708 -48.71885681]
[211.37509155 -33.82488632]
[209.58824158 -18.93169403]
[204.33525085 -4.88156605]
[195.91320801 7.53089666]
[184.79841614 17.60370827]
[171.61949158 24.76720238]
[157.12173462 28.61625099]
[142.12507629 28.93316841]
[127.47766113 25.70003128]
[114.00786591 19.09969330]
[102.47746277 9.50543213]
[93.53803253 -2.54108214]
[96.20382690 12.22013474]
[106.07984161 23.36973190]
[100.91827393 38.32529449]
[103.58406830 53.08650970]
[106.24986267 67.84772491]
[111.70585632 53.87517929]
[122.31586456 43.27198410]
[136.29191589 37.82497406]
[151.27880859 38.45206070]
[164.75097656 45.04756927]
[174.43812561 56.50004196]
[178.70779419 70.87953949]
[176.84048462 85.76285553]
[169.15086365 98.64189911]
[156.93476868 107.34631348]
[142.25082397 110.40926361]
[127.57352448 107.31458282]
[115.37626648 98.58378601]
[107.71395874 85.68658447]
[116.25928497 100.12104797]
[107.50000000 114.42668152]
[107.50000000 129.42668152]
[107.50000000 144.42668152]
[107.50000000 159.42668152]
[107.50000000 174.42668152]
[107.50000000 189.42668152]
[107.50000000 204.42668152]
[107.50000000 219.42668152]
[107.50000000 234.42668152]
[108.28131866 249.40631104]
[109.84184265 264.32492065]
[111.40236664 279.24353027]
[113.07390594 294.15008545]
[114.85637665 309.04382324]
[129.44885254 313.20739746]
[141.30358887 322.61529541]
[148.63345337 335.80947876]
[150.34873962 350.76425171]
[146.21899414 365.19720459]
[136.90345764 376.91754150]
[123.84603882 384.15863037]
[125.62850952 399.05233765]
[127.41097260 413.94604492]
[129.19343567 428.83978271]
[130.97590637 443.73348999]
[132.75837708 458.62719727]
[134.54083252 473.52093506]
[149.46031189 475.82565308]
[163.20423889 482.07122803]
[174.75273132 491.79412842]
[183.24882507 504.27288818]
[188.06202698 518.58148193]
[188.83518982 533.65808105]
[185.51092529 548.38397217]
[178.33592224 561.66638184]
[167.84260559 572.51965332]
[154.80967712 580.13836670]
[140.20422363 583.95721436]
[125.11009979 583.69274902]
[110.64737701 579.36468506]
[97.88928223 571.29412842]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 196]
[8 195]
[9 194]
[10 193]
[11 192]
[12 191]
[13 190]
[20 183]
[21 182]
[23 181]
[24 180]
[25 179]
[33 178]
[34 177]
[35 176]
[36 175]
[37 174]
[38 173]
[39 172]
[40 171]
[41 170]
[44 168]
[45 154]
[46 153]
[47 152]
[49 150]
[50 149]
[51 124]
[52 123]
[53 122]
[54 121]
[55 120]
[67 119]
[68 118]
[69 117]
[70 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
