%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGUxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[84.55490875 585.40014648]
[69.97792053 588.97283936]
[55.15822983 591.34552002]
[40.19445419 592.50231934]
[25.18618011 592.43560791]
[10.23328209 591.14581299]
[-4.56472635 588.64147949]
[-19.10936737 584.93927002]
[-33.30384445 580.06384277]
[-47.05369568 574.04766846]
[-60.26741791 566.93078613]
[-72.85707855 558.76049805]
[-84.73888397 549.59124756]
[-95.83377075 539.48400879]
[-106.06789398 528.50604248]
[-115.37315369 516.73040771]
[-123.68762970 504.23553467]
[-130.95597839 491.10452271]
[-137.12982178 477.42474365]
[-142.16810608 463.28723145]
[-146.03726196 448.78613281]
[-148.71156311 434.01788330]
[-150.17321777 419.08081055]
[-150.41247559 404.07427979]
[-149.42778015 389.09820557]
[-147.22564697 374.25222778]
[-143.82073975 359.63513184]
[-139.23573303 345.34420776]
[-133.50112915 331.47454834]
[-126.65509796 318.11846924]
[-118.74318695 305.36486816]
[-109.81806946 293.29858398]
[-99.93911743 281.99996948]
[-89.17209625 271.54415894]
[-77.58864594 262.00073242]
[-65.26585388 253.43327332]
[-52.28573608 245.89872742]
[-38.73466873 239.44726562]
[-24.70283508 234.12181091]
[-10.28361416 229.95780945]
[4.42703390 226.98298645]
[19.33121109 225.21711731]
[34.32973099 224.67195129]
[49.32278061 225.35113525]
[64.21057892 227.25015259]
[67.31468964 212.57484436]
[70.41880035 197.89953613]
[73.52291107 183.22424316]
[71.83164215 176.02969360]
[76.78402710 168.35430908]
[80.10628510 153.72683716]
[83.42854309 139.09938049]
[69.69396973 129.74758911]
[60.59920883 115.84147644]
[57.53666306 99.51004791]
[60.97521210 83.25363159]
[70.38840485 69.56106567]
[84.33510590 60.52866745]
[100.68008423 57.53928375]
[103.56535339 42.81939316]
[106.45063019 28.09950066]
[109.33589935 13.37961006]
[112.22117615 -1.34028125]
[115.10644531 -16.06017303]
[110.16811371 -31.09092331]
[120.20903778 -42.09224701]
[105.71189880 -45.96597672]
[91.50934601 -50.80957031]
[77.66618347 -56.60092926]
[64.24557495 -63.31362915]
[51.30876541 -70.91703796]
[38.91477585 -79.37647247]
[27.12015533 -88.65331268]
[15.97872543 -98.70525360]
[5.54131937 -109.48641968]
[-4.14443827 -120.94761658]
[-13.03435230 -133.03654480]
[-21.08786201 -145.69805908]
[-28.26821709 -158.87438965]
[-34.54265976 -172.50538635]
[-39.88255692 -186.52888489]
[-44.26354218 -200.88088989]
[-47.66563416 -215.49591064]
[-50.07329941 -230.30725098]
[-51.47555923 -245.24736023]
[-51.86601639 -260.24804688]
[-51.24288177 -275.24084473]
[-49.60900497 -290.15740967]
[-46.97183990 -304.92962646]
[-43.34341812 -319.49011230]
[-38.74029541 -333.77239990]
[-33.18347549 -347.71136475]
[-26.69831467 -361.24337769]
[-19.31440163 -374.30673218]
[-11.06542683 -386.84176636]
[-1.98903060 -398.79132080]
[7.87337351 -410.10089111]
[18.47678566 -420.71881104]
[29.77282524 -430.59667969]
[41.70994949 -439.68945312]
[54.23368835 -447.95556641]
[67.28690338 -455.35736084]
[80.81003571 -461.86102295]
[94.74137878 -467.43692017]
[109.01737213 -472.05960083]
[123.57286835 -475.70794678]
[138.34146118 -478.36532593]
[153.25575256 -480.01962280]
[168.24771118 -480.66329956]
[183.24891663 -480.29336548]
[198.19091797 -478.91156006]
[213.00555420 -476.52416992]
[227.62521362 -473.14208984]
[241.98320007 -468.78076172]
[256.01397705 -463.46005249]
[269.65356445 -457.20428467]
[282.83969116 -450.04196167]
[295.51223755 -442.00579834]
[307.61334229 -433.13244629]
[319.08776855 -423.46240234]
[329.88320923 -413.03976440]
[339.95040894 -401.91207886]
[349.24337769 -390.13018799]
[357.71975708 -377.74777222]
[365.34088135 -364.82138062]
[372.07196045 -351.41000366]
[377.88226318 -337.57476807]
[382.74526978 -323.37884521]
[386.63885498 -308.88702393]
[389.54519653 -294.16540527]
[391.45104980 -279.28115845]
[392.34774780 -264.30221558]
[392.23114014 -249.29690552]
[391.10177612 -234.33370972]
[388.96484375 -219.48088074]
[385.83007812 -204.80619812]
[381.71176147 -190.37663269]
[376.62872314 -176.25801086]
[370.60412598 -162.51475525]
[363.66543579 -149.20957947]
[355.84436035 -136.40318298]
[347.17657471 -124.15399933]
[337.70162964 -112.51792908]
[327.46273804 -101.54805756]
[316.50662231 -91.29444122]
[304.88330078 -81.80387115]
[292.64575195 -73.11963654]
[279.84988403 -65.28137207]
[266.55404663 -58.32484436]
[252.81887817 -52.28178787]
[238.70709229 -47.17977524]
[224.28306580 -43.04209137]
[209.61262512 -39.88761520]
[194.76268005 -37.73073578]
[179.80099487 -36.58129883]
[164.79585266 -36.44454956]
[149.81571960 -37.32110596]
[134.92892456 -39.20697403]
[140.07363892 -25.22908783]
[129.82633972 -13.17490005]
[126.94106293 1.54499137]
[124.05579376 16.26488304]
[121.17051697 30.98477364]
[118.28524780 45.70466614]
[115.39997101 60.42455673]
[126.83498383 67.08710480]
[135.66369629 76.94625092]
[141.02865601 89.04444885]
[142.40878296 102.20667267]
[139.67005920 115.15458679]
[133.07844543 126.63063812]
[123.27416992 135.52024841]
[111.20943451 140.96002197]
[98.05600739 142.42164612]
[94.73374939 157.04910278]
[91.41148376 171.67655945]
[88.19821167 186.32835388]
[85.09410095 201.00364685]
[81.98999023 215.67895508]
[78.88587952 230.35426331]
[93.26750946 234.64630127]
[107.25143433 240.09631348]
[120.74460602 246.66799927]
[133.65721130 254.31767273]
[145.90333557 262.99438477]
[157.40147400 272.64038086]
[168.07510376 283.19152832]
[177.85319519 294.57754517]
[186.67066956 306.72271729]
[194.46887207 319.54617310]
[201.19587708 332.96258545]
[206.80693054 346.88265991]
[211.26467896 361.21380615]
[214.53947449 375.86059570]
[216.60951233 390.72558594]
[217.46102905 405.70983887]
[217.08833313 420.71362305]
[215.49392700 435.63711548]
[212.68841553 450.38098145]
[208.69046021 464.84713745]
[203.52668762 478.93927002]
[197.23144531 492.56359863]
[189.84661865 505.62948608]
[181.42138672 518.04998779]
[172.01177979 529.74237061]
[161.68045044 540.62890625]
[150.49612427 550.63708496]
[138.53326416 559.70031738]
[125.87145996 567.75836182]
[112.59497833 574.75744629]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 180]
[46 179]
[47 178]
[48 177]
[50 176]
[51 175]
[52 174]
[59 165]
[60 164]
[61 163]
[62 162]
[63 161]
[64 160]
[66 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
