%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[112.84205627 867.58416748]
[97.93694305 865.87841797]
[83.12041473 863.52416992]
[68.42068481 860.52587891]
[53.86573029 856.88922119]
[39.48325729 852.62115479]
[25.30064011 847.72985840]
[11.34488106 842.22448730]
[-2.35745621 836.11566162]
[-15.78028774 829.41497803]
[-28.89806175 822.13513184]
[-41.68581009 814.29003906]
[-54.11918640 805.89465332]
[-66.17453003 796.96484375]
[-77.82888794 787.51776123]
[-89.06007385 777.57128906]
[-99.84671021 767.14440918]
[-110.16825867 756.25689697]
[-120.00508881 744.92956543]
[-129.33845520 733.18389893]
[-138.15060425 721.04229736]
[-146.42475891 708.52795410]
[-154.14515686 695.66448975]
[-161.29711914 682.47662354]
[-167.86703491 668.98925781]
[-173.84237671 655.22821045]
[-179.21177673 641.21954346]
[-183.96502686 626.99005127]
[-188.09306335 612.56677246]
[-191.58804321 597.97717285]
[-194.44329834 583.24896240]
[-196.65341187 568.41027832]
[-198.21415710 553.48925781]
[-199.12257385 538.51440430]
[-199.37692261 523.51416016]
[-198.97673035 508.51712036]
[-197.92276001 493.55178833]
[-196.21702576 478.64669800]
[-193.86274719 463.83016968]
[-190.86442566 449.13043213]
[-187.22775269 434.57550049]
[-182.95967102 420.19302368]
[-178.06829834 406.01040649]
[-172.56294250 392.05465698]
[-166.45408630 378.35232544]
[-159.75335693 364.92950439]
[-152.47351074 351.81176758]
[-144.62840271 339.02401733]
[-136.23297119 326.59066772]
[-127.30318451 314.53533936]
[-117.85605621 302.88098145]
[-107.90956116 291.64981079]
[-97.48263550 280.86322021]
[-86.59513092 270.54165649]
[-75.26776886 260.70486450]
[-63.52211380 251.37152100]
[-51.38051987 242.55938721]
[-38.86610031 234.28526306]
[-26.00268173 226.56488037]
[-12.81474590 219.41293335]
[0.67260033 212.84304810]
[14.43368435 206.86773682]
[28.44231224 201.49835205]
[42.67181396 196.74513245]
[57.09510803 192.61711121]
[71.68473053 189.12216187]
[86.41291809 186.26693726]
[101.25163269 184.05685425]
[99.69110870 169.13824463]
[98.13059235 154.21963501]
[89.11119080 142.36637878]
[95.37081146 127.83614349]
[93.81028748 112.91754150]
[85.75378418 101.49018860]
[91.27111053 88.64298248]
[89.71058655 73.72438049]
[88.15006256 58.80577469]
[76.15639496 48.86647415]
[74.78632355 33.71465683]
[84.33583832 22.34177971]
[82.77531433 7.42317486]
[81.21479034 -7.49542999]
[79.65426636 -22.41403389]
[78.09374237 -37.33263779]
[70.05097961 -24.67112732]
[56.48472214 -18.27138519]
[41.59862900 -20.11644363]
[30.00531769 -29.63459206]
[25.29710197 -43.87652588]
[28.93287086 -58.42922974]
[39.78604507 -68.78338623]
[54.49365234 -71.73065186]
[68.49837494 -66.35778046]
[77.46079254 -54.32938004]
[77.90739441 -69.32273102]
[78.35400391 -84.31607819]
[78.80060577 -99.30942535]
[79.24721527 -114.30278015]
[65.15452576 -119.88597107]
[53.82336044 -129.95475769]
[46.62200546 -143.29327393]
[44.42005920 -158.29084778]
[47.48341751 -173.13644409]
[55.44216919 -186.03738403]
[67.33525085 -195.43580627]
[81.72651672 -200.19680786]
[96.87815857 -199.74549866]
[110.96053314 -194.13633728]
[122.27312469 -184.04669189]
[129.44989014 -170.69491577]
[131.62419128 -155.69331360]
[128.53347778 -140.85339355]
[120.55096436 -127.96714020]
[108.64057922 -118.59065247]
[94.24056244 -113.85617065]
[93.79396057 -98.86282349]
[93.34735107 -83.86946869]
[92.90074921 -68.87612152]
[92.45413971 -53.88277054]
[93.01235199 -38.89316177]
[94.57287598 -23.97455788]
[96.13339996 -9.05595303]
[97.69391632 5.86265182]
[99.25444031 20.78125572]
[110.95075226 29.93176842]
[112.74587250 45.03912354]
[103.06866455 57.24525070]
[104.62918854 72.16385651]
[106.18971252 87.08245850]
[114.24621582 98.50981140]
[108.72888947 111.35701752]
[110.28941345 126.27561951]
[119.42042542 139.19595337]
[113.04919434 152.65911865]
[114.60971832 167.57772827]
[116.17024231 182.49632263]
[131.14509583 181.58782959]
[146.14533997 181.33340454]
[161.14239502 181.73350525]
[176.10772705 182.78739929]
[191.01284790 184.49307251]
[205.82939148 186.84727478]
[220.52912903 189.84552002]
[235.08409119 193.48210144]
[249.46658325 197.75010681]
[263.64923096 202.64140320]
[277.60498047 208.14668274]
[291.30734253 214.25547791]
[304.73019409 220.95613098]
[317.84802246 228.23591614]
[330.63577271 236.08096313]
[343.06918335 244.47633362]
[355.12457275 253.40605164]
[366.77896118 262.85311890]
[378.01016235 272.79956055]
[388.79684448 283.22640991]
[399.11843872 294.11386108]
[408.95529175 305.44119263]
[418.28872681 317.18679810]
[427.10089111 329.32833862]
[435.37509155 341.84271240]
[443.09555054 354.70608521]
[450.24755859 367.89398193]
[456.81750488 381.38131714]
[462.79290771 395.14236450]
[468.16235352 409.15093994]
[472.91564941 423.38043213]
[477.04373169 437.80371094]
[480.53875732 452.39331055]
[483.39407349 467.12149048]
[485.60424805 481.96017456]
[487.16503906 496.88116455]
[488.07351685 511.85604858]
[488.32791138 526.85626221]
[487.92776489 541.85333252]
[486.87387085 556.81866455]
[485.16815186 571.72375488]
[482.81393433 586.54028320]
[479.81567383 601.24005127]
[476.17904663 615.79498291]
[471.91101074 630.17749023]
[467.01971436 644.36010742]
[461.51440430 658.31585693]
[455.40557861 672.01824951]
[448.70489502 685.44110107]
[441.42510986 698.55883789]
[433.58004761 711.34661865]
[425.18463135 723.78002930]
[416.25491333 735.83538818]
[406.80780029 747.48974609]
[396.86135864 758.72094727]
[386.43447876 769.50762939]
[375.54699707 779.82916260]
[364.21966553 789.66601562]
[352.47406006 798.99938965]
[340.33248901 807.81158447]
[327.81808472 816.08575439]
[314.95471191 823.80615234]
[301.76678467 830.95819092]
[288.27947998 837.52807617]
[274.51840210 843.50347900]
[260.50979614 848.87286377]
[246.28030396 853.62615967]
[231.85702515 857.75421143]
[217.26742554 861.24920654]
[202.53924561 864.10449219]
[187.70053101 866.31463623]
[172.77954102 867.87542725]
[157.80468750 868.78387451]
[142.80444336 869.03826904]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 136]
[69 135]
[70 134]
[72 132]
[73 131]
[75 129]
[76 128]
[77 127]
[80 124]
[81 123]
[82 122]
[83 121]
[84 120]
[94 119]
[95 118]
[96 117]
[97 116]
[98 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
