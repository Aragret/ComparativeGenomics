%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[182.33766174 821.72979736]
[167.91058350 817.61407471]
[153.68736267 812.84130859]
[139.69792175 807.42144775]
[125.97167206 801.36590576]
[112.53747559 794.68743896]
[99.42359924 787.40008545]
[86.65760803 779.51916504]
[74.26635742 771.06121826]
[62.27590179 762.04412842]
[50.71146011 752.48675537]
[39.59735107 742.40924072]
[28.95694733 731.83282471]
[18.81262779 720.77966309]
[9.18572426 709.27301025]
[0.09648333 697.33715820]
[-8.43597984 684.99713135]
[-16.39372253 672.27886963]
[-23.76000786 659.20916748]
[-30.51934433 645.81549072]
[-36.65752029 632.12597656]
[-42.16162109 618.16949463]
[-47.02007675 603.97528076]
[-51.22266769 589.57330322]
[-54.76055527 574.99377441]
[-57.62630081 560.26733398]
[-59.81387711 545.42504883]
[-61.31868362 530.49804688]
[-62.13755417 515.51776123]
[-62.26876831 500.51568604]
[-61.71204758 485.52337646]
[-60.46856689 470.57235718]
[-58.54093933 455.69406128]
[-55.93321991 440.91979980]
[-52.65089035 426.28060913]
[-48.70085526 411.80728149]
[-44.09141922 397.53030396]
[-38.83227921 383.47964478]
[-32.93449020 369.68487549]
[-26.41046333 356.17501831]
[-19.27391434 342.97845459]
[-11.53984928 330.12295532]
[-3.22453690 317.63555908]
[5.65453720 305.54254150]
[15.07870007 293.86929321]
[25.02813339 282.64038086]
[35.48191071 271.87945557]
[46.41804886 261.60906982]
[57.81354904 251.85090637]
[69.64444733 242.62544250]
[81.88586426 233.95207214]
[94.51205444 225.84906006]
[107.49645996 218.33343506]
[120.81177521 211.42100525]
[134.43000793 205.12631226]
[128.76722717 191.23628235]
[123.10443878 177.34625244]
[117.44165039 163.45622253]
[111.77886200 149.56620789]
[106.11607361 135.67617798]
[100.68003845 130.66905212]
[100.47408295 121.53694916]
[95.01872253 107.56414795]
[91.74185944 105.53079224]
[89.37717438 102.06291962]
[88.54524994 97.60030365]
[89.64710236 92.84365082]
[84.82110596 78.64118958]
[79.99510956 64.43873596]
[75.16911316 50.23628235]
[70.34311676 36.03382492]
[66.97782135 33.28996658]
[64.87245178 29.95350647]
[64.05860138 26.49329758]
[64.41233063 23.34028625]
[65.68004608 20.84007835]
[61.70795059 6.37555361]
[57.73585510 -8.08897018]
[53.76375961 -22.55349350]
[49.79166412 -37.01801682]
[34.80026627 -35.76396561]
[19.83371735 -37.28615952]
[5.40177393 -41.53276443]
[-8.00401878 -48.35913849]
[-19.92706490 -57.53277588]
[-29.96126747 -68.74122620]
[-37.76486969 -81.60273743]
[-43.07207870 -95.67925262]
[-45.70213699 -110.49132538]
[-45.56546402 -125.53446198]
[-42.66671371 -140.29629517]
[-37.10461807 -154.27406311]
[-29.06861877 -166.99165344]
[-18.83242035 -178.01594543]
[-6.74466419 -186.97143555]
[6.78294659 -193.55310059]
[21.28966522 -197.53678894]
[36.28140259 -198.78680420]
[51.24753952 -197.26057434]
[65.67833710 -193.01007080]
[79.08229065 -186.18008423]
[91.00286102 -177.00323486]
[101.03404236 -165.79208374]
[108.83417511 -152.92846680]
[114.13758850 -138.85052490]
[116.76365662 -124.03775024]
[116.62292480 -108.99464417]
[113.72019958 -94.23358917]
[108.15433502 -80.25733185]
[100.11491394 -67.54189301]
[89.87574005 -56.52037048]
[77.78556824 -47.56813812]
[64.25618744 -40.99011612]
[68.22828674 -26.52559090]
[72.20037842 -12.06106663]
[76.17247772 2.40345740]
[80.14456940 16.86798096]
[84.54557037 31.20782852]
[89.37156677 45.41028595]
[94.19756317 59.61273956]
[99.02355957 73.81519318]
[103.84956360 88.01765442]
[108.99152374 102.10879517]
[114.44687653 116.08158875]
[120.00610352 130.01338196]
[125.66889191 143.90341187]
[131.33168030 157.79344177]
[136.99446106 171.68347168]
[142.65725708 185.57350159]
[148.32003784 199.46351624]
[162.45755005 194.44256592]
[176.81039429 190.07502747]
[191.34838867 186.37013245]
[206.04093933 183.33563232]
[220.85717773 180.97793579]
[235.76591492 179.30200195]
[250.73582458 178.31134033]
[265.73541260 178.00804138]
[280.73312378 178.39273071]
[295.69741821 179.46461487]
[310.59686279 181.22145081]
[325.40008545 183.65951538]
[340.07595825 186.77369690]
[354.59362793 190.55743408]
[368.92254639 195.00279236]
[383.03262329 200.10040283]
[396.89413452 205.83955383]
[410.47793579 212.20817566]
[423.75549316 219.19287109]
[436.69885254 226.77894592]
[449.28082275 234.95046997]
[461.47491455 243.69023132]
[473.25549316 252.97987366]
[484.59780884 262.79983521]
[495.47796631 273.12948608]
[505.87310791 283.94708252]
[515.76135254 295.22988892]
[525.12194824 306.95419312]
[533.93518066 319.09530640]
[542.18249512 331.62768555]
[549.84655762 344.52502441]
[556.91125488 357.76019287]
[563.36181641 371.30529785]
[569.18450928 385.13192749]
[574.36718750 399.21096802]
[578.89898682 413.51278687]
[582.77032471 428.00735474]
[585.97302246 442.66415405]
[588.50042725 457.45239258]
[590.34716797 472.34094238]
[591.50933838 487.29849243]
[591.98455811 502.29364014]
[591.77185059 517.29473877]
[590.87152100 532.27038574]
[589.28564453 547.18896484]
[587.01745605 562.01916504]
[584.07171631 576.72979736]
[580.45458984 591.28985596]
[576.17382812 605.66882324]
[571.23828125 619.83636475]
[565.65838623 633.76275635]
[559.44592285 647.41870117]
[552.61389160 660.77545166]
[545.17669678 673.80493164]
[537.14996338 686.47973633]
[528.55053711 698.77325439]
[519.39654541 710.65954590]
[509.70724487 722.11364746]
[499.50302124 733.11151123]
[488.80526733 743.62994385]
[477.63656616 753.64691162]
[466.02035522 763.14129639]
[453.98107910 772.09307861]
[441.54403687 780.48352051]
[428.73538208 788.29498291]
[415.58209229 795.51092529]
[402.11181641 802.11627197]
[388.35284424 808.09716797]
[374.33416748 813.44091797]
[360.08520508 818.13629150]
[345.63598633 822.17352295]
[331.01684570 825.54406738]
[316.25857544 828.24078369]
[301.39215088 830.25811768]
[286.44891357 831.59167480]
[271.46020508 832.23876953]
[256.45761108 832.19799805]
[241.47267151 831.46948242]
[226.53688049 830.05468750]
[211.68167114 827.95660400]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 130]
[56 129]
[57 128]
[58 127]
[59 126]
[60 125]
[62 124]
[63 123]
[67 122]
[68 121]
[69 120]
[70 119]
[71 118]
[76 117]
[77 116]
[78 115]
[79 114]
[80 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
