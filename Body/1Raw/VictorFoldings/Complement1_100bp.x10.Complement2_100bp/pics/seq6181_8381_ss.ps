%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxGAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGG\
) } def
/len { sequence length } bind def

/coor [
[27.60228157 861.99133301]
[12.63724804 863.05847168]
[-2.36212206 863.39001465]
[-17.35969353 862.98522949]
[-32.31933594 861.84497070]
[-47.20501328 859.97204590]
[-61.98085785 857.37103271]
[-76.61127472 854.04809570]
[-91.06101990 850.01129150]
[-105.29528809 845.27032471]
[-119.27977753 839.83660889]
[-132.98080444 833.72326660]
[-146.36535645 826.94500732]
[-159.40119934 819.51818848]
[-172.05691528 811.46063232]
[-184.30203247 802.79180908]
[-196.10702515 793.53265381]
[-207.44348145 783.70532227]
[-218.28407288 773.33361816]
[-228.60269165 762.44244385]
[-238.37446594 751.05810547]
[-247.57588196 739.20800781]
[-256.18475342 726.92065430]
[-264.18032837 714.22570801]
[-271.54336548 701.15374756]
[-278.25613403 687.73620605]
[-284.30242920 674.00549316]
[-289.66772461 659.99456787]
[-294.33908081 645.73730469]
[-298.30520630 631.26800537]
[-301.55661011 616.62152100]
[-304.08541870 601.83312988]
[-305.88552856 586.93853760]
[-306.95263672 571.97344971]
[-307.28414917 556.97412109]
[-306.87930298 541.97650146]
[-305.73901367 527.01690674]
[-303.86608887 512.13122559]
[-301.26501465 497.35537720]
[-297.94204712 482.72497559]
[-293.90518188 468.27523804]
[-289.16418457 454.04098511]
[-283.73046875 440.05648804]
[-277.61709595 426.35549927]
[-270.83880615 412.97094727]
[-263.41192627 399.93511963]
[-255.35437012 387.27944946]
[-246.68551636 375.03436279]
[-237.42626953 363.22937012]
[-227.59893799 351.89294434]
[-217.22718811 341.05236816]
[-206.33601379 330.73379517]
[-194.95164490 320.96203613]
[-183.10151672 311.76065063]
[-170.81416321 303.15182495]
[-158.11920166 295.15625000]
[-145.04719543 287.79324341]
[-131.62966919 281.08053589]
[-117.89891052 275.03424072]
[-103.88801575 269.66900635]
[-89.63073730 264.99768066]
[-75.16142273 261.03158569]
[-60.51493073 257.78024292]
[-45.72654343 255.25146484]
[-30.83189011 253.45138550]
[-15.86685085 252.38430786]
[-0.86747879 252.05282593]
[14.13009071 252.45771790]
[29.08972740 253.59803772]
[43.97539520 255.47100830]
[58.75122452 258.07211304]
[62.07348633 243.44465637]
[65.39574432 228.81719971]
[68.71800232 214.18974304]
[72.04026031 199.56228638]
[75.36252594 184.93481445]
[69.27624512 168.47505188]
[81.89868164 155.06774902]
[85.00279236 140.39244080]
[88.10690308 125.71714020]
[90.77269745 110.95592499]
[85.83453369 97.87516785]
[94.39325714 86.81896210]
[96.61837769 71.98491669]
[98.84349060 57.15087128]
[101.06861115 42.31682587]
[103.29373169 27.48278427]
[105.51884460 12.64873981]
[106.85707855 -2.29144526]
[107.30368805 -17.28479576]
[107.75028992 -32.27814484]
[107.75028992 -47.27814484]
[107.30368805 -62.27149582]
[103.92015839 -70.75615692]
[106.96372223 -77.49103546]
[106.74039459 -92.48937225]
[106.51706696 -107.48770905]
[92.27400208 -112.73170471]
[80.88967133 -122.76971436]
[73.90372467 -136.24417114]
[72.26094818 -151.33276367]
[76.18350220 -165.99488831]
[85.14091492 -178.24761963]
[97.92175293 -186.43385315]
[112.79751587 -189.44650269]
[127.75638580 -186.87809753]
[140.77529907 -179.07601929]
[150.09353638 -167.09542847]
[154.45091248 -152.55657959]
[153.25810242 -137.42576599]
[146.67643738 -123.74929047]
[135.59602356 -113.37677765]
[121.51540375 -107.71103668]
[121.73873138 -92.71269989]
[121.96205902 -77.71436310]
[122.29703522 -62.71810150]
[122.74364471 -47.72475052]
[124.68912506 -45.70652390]
[125.95237732 -42.79606247]
[126.18956757 -39.24935150]
[125.15577698 -35.44201660]
[122.74364471 -31.83153915]
[122.29703522 -16.83819008]
[121.85042572 -1.84483933]
[132.05726624 -12.83668041]
[146.75292969 -15.84291935]
[160.45629883 -9.74230385]
[168.05636597 3.18978763]
[166.71849060 18.13000488]
[156.94166565 29.50601578]
[142.37239075 33.07484818]
[128.44467163 27.50542068]
[120.35289001 14.87385654]
[118.12776947 29.70790100]
[115.90265656 44.54194260]
[113.67753601 59.37598801]
[111.45242310 74.21002960]
[109.22730255 89.04407501]
[114.16546631 102.12483215]
[105.60674286 113.18103790]
[107.33882904 117.16272736]
[107.67951965 121.09318542]
[106.81578827 124.54127502]
[105.05539703 127.18090057]
[102.78220367 128.82125854]
[99.67809296 143.49655151]
[96.57398224 158.17185974]
[102.94257355 169.38809204]
[100.05503082 181.54728699]
[89.98998260 188.25708008]
[86.66772461 202.88453674]
[83.34546661 217.51199341]
[80.02320862 232.13946533]
[76.70094299 246.76692200]
[73.37868500 261.39437866]
[87.82845306 265.43112183]
[102.06274414 270.17202759]
[116.04725647 275.60565186]
[129.74832153 281.71890259]
[143.13290405 288.49710083]
[156.16877747 295.92388916]
[168.82453918 303.98135376]
[181.06968689 312.65011597]
[192.87474060 321.90927124]
[204.21124268 331.73651123]
[215.05187988 342.10818481]
[225.37054443 352.99926758]
[235.14239502 364.38357544]
[244.34385681 376.23364258]
[252.95278931 388.52093506]
[260.94842529 401.21582031]
[268.31155396 414.28778076]
[275.02438354 427.70526123]
[281.07073975 441.43597412]
[286.43609619 455.44680786]
[291.10751343 469.70407104]
[295.07373047 484.17333984]
[298.32519531 498.81982422]
[300.85406494 513.60821533]
[302.65426636 528.50280762]
[303.72143555 543.46783447]
[304.05303955 558.46722412]
[303.64825439 573.46478271]
[302.50805664 588.42443848]
[300.63519287 603.31011963]
[298.03417969 618.08599854]
[294.71130371 632.71643066]
[290.67453003 647.16613770]
[285.93359375 661.40045166]
[280.49993896 675.38494873]
[274.38662720 689.08599854]
[267.60839844 702.47058105]
[260.18157959 715.50640869]
[252.12409973 728.16217041]
[243.45530701 740.40728760]
[234.19612122 752.21228027]
[224.36885071 763.54876709]
[213.99714661 774.38940430]
[203.10603333 784.70806885]
[191.72171021 794.47985840]
[179.87161255 803.68127441]
[167.58430481 812.29016113]
[154.88938904 820.28582764]
[141.81742859 827.64886475]
[128.39991760 834.36169434]
[114.66918945 840.40802002]
[100.65832520 845.77331543]
[86.40106964 850.44470215]
[71.93177795 854.41088867]
[57.28530121 857.66229248]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[71 155]
[72 154]
[73 153]
[74 152]
[75 151]
[76 150]
[78 147]
[79 146]
[80 145]
[81 140]
[83 138]
[84 137]
[85 136]
[86 135]
[87 134]
[88 133]
[89 124]
[90 123]
[91 122]
[92 117]
[93 116]
[95 115]
[96 114]
[97 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
