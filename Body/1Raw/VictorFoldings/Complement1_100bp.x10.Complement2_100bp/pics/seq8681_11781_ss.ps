%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[105.55817413 462.38504028]
[93.58479309 471.44897461]
[80.64009094 479.06155396]
[66.89913940 485.11981201]
[52.54776764 489.54187012]
[37.78005600 492.26791382]
[22.79572296 493.26104736]
[7.79741621 492.50784302]
[-7.01203060 490.01849365]
[-21.43233681 485.82669067]
[-35.26848221 479.98907471]
[-48.33335114 472.58465576]
[-60.45025635 463.71350098]
[-71.45532990 453.49563599]
[-81.19973755 442.06921387]
[-89.55169678 429.58877563]
[-96.39826965 416.22311401]
[-101.64684296 402.15298462]
[-105.22645569 387.56863403]
[-107.08869171 372.66732788]
[-107.20835876 357.65060425]
[-105.58383942 342.72152710]
[-102.23711395 328.08200073]
[-97.21343994 313.92999268]
[-90.58074951 300.45690918]
[-82.42874146 287.84494019]
[-72.86767578 276.26467896]
[-62.02684021 265.87274170]
[-50.05285263 256.80960083]
[-37.10764694 249.19789124]
[-23.36629295 243.14053345]
[-9.01462269 238.71943665]
[5.75327110 235.99440002]
[20.73766899 235.00225830]
[35.73592758 235.75646973]
[50.54520798 238.24679565]
[54.73221970 223.84300232]
[58.91923141 209.43922424]
[63.10623932 195.03544617]
[61.95476151 187.73504639]
[67.46430206 180.44924927]
[71.86529541 166.10940552]
[76.26629639 151.76954651]
[62.67833710 143.01707458]
[52.09646225 130.79977417]
[45.37298965 116.10170746]
[43.04946136 100.10671997]
[45.31302643 84.10313416]
[51.98136902 69.37996674]
[62.51738358 57.12310028]
[76.07244110 48.31975937]
[91.55474854 43.67901993]
[107.71728516 43.57466125]
[111.68938446 29.11013985]
[115.66147614 14.64561558]
[114.36215210 8.16307831]
[116.24849701 2.80222940]
[119.97316742 -0.18706875]
[124.37416077 -14.52691555]
[128.77516174 -28.86676216]
[133.17616272 -43.20661163]
[137.57716370 -57.54645920]
[123.51342773 -62.77516937]
[109.77750397 -68.81277466]
[96.41588593 -75.63883972]
[83.47377014 -83.23026276]
[70.99495697 -91.56136322]
[59.02166367 -100.60395050]
[47.59441376 -110.32742310]
[36.75186539 -120.69888306]
[26.53070831 -131.68324280]
[16.96552849 -143.24331665]
[8.08869457 -155.34001160]
[-0.06976091 -167.93237305]
[-7.48223019 -180.97779846]
[-14.12363243 -194.43215942]
[-19.97149467 -208.24992371]
[-25.00602913 -222.38433838]
[-29.21020126 -236.78756714]
[-32.56978607 -251.41087341]
[-35.07341385 -266.20480347]
[-36.71261215 -281.11926270]
[-37.48183823 -296.10379028]
[-37.37848663 -311.10769653]
[-36.40290833 -326.08023071]
[-34.55840302 -340.97067261]
[-31.85121346 -355.72869873]
[-28.29049873 -370.30435181]
[-23.88830757 -384.64828491]
[-18.65953636 -398.71200562]
[-12.62187672 -412.44790649]
[-5.79575872 -425.80947876]
[1.79572022 -438.75158691]
[10.12687206 -451.23034668]
[19.16950798 -463.20361328]
[28.89303017 -474.63082886]
[39.26453400 -485.47332764]
[50.24893188 -495.69442749]
[61.80905151 -505.25958252]
[73.90577698 -514.13635254]
[86.49817657 -522.29473877]
[99.54364014 -529.70715332]
[112.99803162 -536.34851074]
[126.81581879 -542.19635010]
[140.95024109 -547.23077393]
[155.35348511 -551.43493652]
[169.97682190 -554.79443359]
[184.77073669 -557.29797363]
[199.68521118 -558.93713379]
[214.66975403 -559.70629883]
[229.67366028 -559.60290527]
[244.64617920 -558.62725830]
[259.53662109 -556.78265381]
[274.29464722 -554.07543945]
[288.87026978 -550.51464844]
[303.21420288 -546.11242676]
[317.27789307 -540.88360596]
[331.01376343 -534.84588623]
[344.37530518 -528.01971436]
[357.31738281 -520.42816162]
[369.79611206 -512.09692383]
[381.76934814 -503.05426025]
[393.19650269 -493.33068848]
[404.03897095 -482.95913696]
[414.26004028 -471.97470093]
[423.82510376 -460.41455078]
[432.70184326 -448.31777954]
[440.86019897 -435.72534180]
[448.27255249 -422.67987061]
[454.91384888 -409.22543335]
[460.76159668 -395.40762329]
[465.79602051 -381.27319336]
[470.00006104 -366.86990356]
[473.35952759 -352.24658203]
[475.86303711 -337.45263672]
[477.50210571 -322.53817749]
[478.27120972 -307.55361938]
[478.16775513 -292.54971313]
[477.19204712 -277.57720947]
[475.34741211 -262.68676758]
[472.64010620 -247.92875671]
[469.07925415 -233.35314941]
[464.67694092 -219.00923157]
[459.44805908 -204.94557190]
[453.41030884 -191.20971680]
[446.58407593 -177.84819031]
[438.99249268 -164.90615845]
[430.66122437 -152.42745972]
[421.61849976 -140.45426941]
[411.89486694 -129.02714539]
[401.52328491 -118.18472290]
[390.53878784 -107.96369934]
[378.97860718 -98.39866638]
[366.88180542 -89.52198029]
[354.28933716 -81.36368561]
[341.24380493 -73.95137787]
[327.78936768 -67.31014252]
[313.97152710 -61.46245193]
[299.83706665 -56.42809296]
[285.43377686 -52.22409821]
[270.81042480 -48.86469650]
[256.01647949 -46.36125183]
[241.10198975 -44.72223663]
[226.11744690 -43.95319748]
[211.11354065 -44.05673599]
[196.14103699 -45.03250122]
[181.25059509 -46.87718964]
[166.49259949 -49.58456421]
[151.91700745 -53.14545822]
[147.51600647 -38.80561066]
[143.11500549 -24.46576500]
[138.71400452 -10.12591743]
[134.31301880 4.21392918]
[130.12600708 18.61771202]
[126.15390778 33.08223343]
[122.18180847 47.54676056]
[134.11782837 54.40011597]
[144.06109619 63.91683960]
[151.43089294 75.54108429]
[155.79673767 88.59391022]
[156.90365601 102.31293488]
[154.68696594 115.89686584]
[149.27616882 128.55230713]
[140.98728943 139.54006958]
[130.30444336 148.21841431]
[117.85159302 154.08045959]
[104.35607910 156.78379822]
[90.60614014 156.17054749]
[86.20514679 170.51039124]
[81.80414581 184.85025024]
[77.51002502 199.22245789]
[73.32301331 213.62623596]
[69.13600159 228.03001404]
[64.94898987 242.43380737]
[78.78552246 248.27047729]
[91.85089111 255.67404175]
[103.96838379 264.54437256]
[114.97413635 274.76150513]
[124.71930695 286.18728638]
[133.07211304 298.66717529]
[139.91957092 312.03237915]
[145.16908264 326.10217285]
[148.74966431 340.68624878]
[150.61289978 355.58743286]
[150.73356628 370.60415649]
[149.11004639 385.53335571]
[145.76429749 400.17309570]
[140.74156189 414.32543945]
[134.10977173 427.79898071]
[125.95861053 440.41146851]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 194]
[37 193]
[38 192]
[39 191]
[41 190]
[42 189]
[43 188]
[53 176]
[54 175]
[55 174]
[58 173]
[59 172]
[60 171]
[61 170]
[62 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
