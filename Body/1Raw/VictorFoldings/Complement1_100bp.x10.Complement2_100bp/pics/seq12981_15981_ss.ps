%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[88.35018921 614.64959717]
[75.14530945 621.80920410]
[61.13328171 627.22131348]
[46.54418564 630.79718018]
[31.61758995 632.47796631]
[16.59860802 632.23614502]
[1.73386002 630.07568359]
[-12.73255920 626.03204346]
[-26.56309891 620.17163086]
[-39.53064728 612.59069824]
[-51.42226791 603.41363525]
[-62.04268646 592.79125977]
[-71.21750641 580.89794922]
[-78.79607391 567.92901611]
[-84.65393829 554.09741211]
[-88.69490814 539.63018799]
[-90.85263062 524.76507568]
[-91.09166718 509.74603271]
[-89.40809631 494.81976318]
[-85.82955933 480.23132324]
[-80.41482544 466.22030640]
[-73.25281525 453.01675415]
[-64.46112061 440.83746338]
[-54.18411636 429.88250732]
[-42.59055710 420.33169556]
[-29.87082672 412.34191895]
[-16.23378944 406.04431152]
[-1.90337908 401.54235840]
[12.88508701 398.90994263]
[27.88876724 398.19030762]
[42.86128998 399.39526367]
[45.96540070 384.71997070]
[49.06951141 370.04464722]
[51.84511948 355.30368042]
[54.29084778 340.50442505]
[56.73657608 325.70513916]
[59.18230438 310.90588379]
[61.62803268 296.10659790]
[64.07376099 281.30734253]
[55.17825317 271.98535156]
[53.24726868 259.04882812]
[59.20738220 247.18766785]
[71.08291626 240.83264160]
[73.74871063 226.07142639]
[76.41450500 211.31019592]
[79.08029938 196.54898071]
[81.74609375 181.78776550]
[83.97121429 166.95372009]
[85.75367737 152.06001282]
[87.53614044 137.16629028]
[85.20975494 130.15132141]
[89.45762634 122.06470490]
[91.46163940 107.19918060]
[93.35492706 92.31914520]
[95.13739777 77.42543030]
[96.91986084 62.53171158]
[98.70233154 47.63799286]
[85.46447754 32.52379990]
[87.57734680 12.85048103]
[103.23211670 1.25555646]
[104.34777069 -13.70289707]
[95.96948242 -30.10063744]
[106.40832520 -44.20728302]
[107.30113983 -59.18069077]
[100.39896393 -73.41692352]
[108.88008118 -85.66110229]
[109.77289581 -100.63450623]
[110.66571808 -115.60791016]
[111.55853271 -130.58131409]
[97.26010132 -135.37611389]
[84.69982910 -143.70228577]
[74.73058319 -154.98722839]
[68.02744293 -168.45773315]
[65.04194641 -183.19288635]
[65.97173309 -198.18702698]
[70.74741364 -212.41845703]
[79.03776550 -224.91896057]
[90.27264404 -234.83973694]
[103.68224335 -241.50903320]
[118.34980011 -244.47758484]
[119.24261475 -259.45098877]
[120.13542938 -274.42440796]
[120.80521393 -289.40945435]
[121.25182343 -304.40280151]
[121.69842529 -319.39614868]
[122.14503479 -334.38949585]
[122.59163666 -349.38284302]
[123.03824615 -364.37619019]
[123.48484802 -379.36953735]
[108.75800323 -382.41769409]
[94.78427124 -387.97698975]
[81.98828888 -395.87850952]
[70.75891876 -405.88211060]
[61.43740845 -417.68383789]
[54.30702209 -430.92501831]
[49.58444977 -445.20327759]
[47.41320419 -460.08468628]
[47.85926437 -475.11706543]
[50.90908051 -489.84356689]
[56.46996689 -503.81665039]
[64.37294006 -516.61175537]
[74.37783051 -527.83996582]
[86.18060303 -537.16015625]
[99.42258453 -544.28906250]
[113.70137024 -549.01000977]
[128.58303833 -551.17956543]
[143.61535645 -550.73181152]
[158.34150696 -547.68029785]
[172.31399536 -542.11785889]
[185.10816956 -534.21343994]
[196.33528137 -524.20727539]
[205.65411377 -512.40344238]
[212.78149414 -499.16061401]
[217.50082397 -484.88131714]
[219.66870117 -469.99938965]
[219.21922302 -454.96710205]
[216.16607666 -440.24130249]
[210.60202026 -426.26947021]
[202.69615173 -413.47616577]
[192.68870544 -402.25021362]
[180.88381958 -392.93270874]
[167.64021301 -385.80682373]
[153.36036682 -381.08911133]
[138.47819519 -378.92294312]
[138.03160095 -363.92959595]
[137.58499146 -348.93624878]
[137.13838196 -333.94287109]
[136.69177246 -318.94952393]
[136.24517822 -303.95617676]
[135.79856873 -288.96282959]
[138.36343384 -284.93414307]
[138.42472839 -279.25140381]
[135.10884094 -273.53158569]
[134.21601868 -258.55816650]
[133.32321167 -243.58477783]
[147.53407288 -238.89428711]
[160.05613708 -230.67877197]
[170.03251648 -219.49322510]
[176.77868652 -206.09614563]
[179.82939148 -191.39807129]
[178.97080994 -176.39967346]
[174.25547791 -162.12370300]
[165.99911499 -149.54518127]
[154.75950623 -139.52485657]
[141.29882812 -132.75022888]
[126.53193665 -129.68850708]
[125.63912201 -114.71509552]
[124.74630737 -99.74169159]
[123.85349274 -84.76828766]
[130.81953430 -71.60304260]
[122.27455139 -58.28787231]
[121.38172913 -43.31446838]
[129.17378235 -34.06187057]
[128.55250549 -21.57997131]
[119.30622101 -12.58724785]
[118.19057465 2.37120509]
[126.73670959 8.05754566]
[132.19403076 16.84692192]
[133.52084351 27.18870735]
[130.41127014 37.22534561]
[123.36238098 45.12599182]
[113.59604645 49.42045975]
[111.81358337 64.31417847]
[110.03111267 79.20789337]
[108.24864960 94.10160828]
[110.49381256 101.84317017]
[106.32716370 109.20319366]
[104.32315063 124.06871796]
[102.42986298 138.94876099]
[100.64739227 153.84246826]
[98.86492920 168.73619080]
[100.71479797 172.66455078]
[101.17236328 176.58311462]
[100.41168213 180.05538940]
[98.73065948 182.74626160]
[96.50730896 184.45356750]
[93.84151459 199.21478271]
[91.17572021 213.97599792]
[88.50992584 228.73721313]
[85.84413147 243.49842834]
[96.08007812 257.68450928]
[92.95084381 274.55230713]
[78.87303162 283.75308228]
[76.42729950 298.55233765]
[73.98157501 313.35162354]
[71.53585052 328.15087891]
[69.09011841 342.95016479]
[66.64439392 357.74942017]
[68.48398590 362.63439941]
[68.28566742 367.27270508]
[66.48466492 370.92941284]
[63.74481201 373.14877319]
[60.64070129 387.82406616]
[57.53659439 402.49935913]
[71.71464539 407.46032715]
[85.14188385 414.19366455]
[97.59780884 422.58877563]
[108.87789154 432.50787354]
[118.79689789 443.78799438]
[127.19195557 456.24398804]
[133.92520142 469.67126465]
[138.88607788 483.84933472]
[141.99311829 498.54541016]
[143.19531250 513.51818848]
[142.47290039 528.52172852]
[139.83775330 543.30969238]
[135.33314514 557.63928223]
[129.03303528 571.27514648]
[121.04089355 583.99340820]
[111.48795319 595.58520508]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 194]
[32 193]
[33 192]
[34 188]
[35 187]
[36 186]
[37 185]
[38 184]
[39 183]
[43 180]
[44 179]
[45 178]
[46 177]
[47 176]
[48 171]
[49 170]
[50 169]
[52 168]
[53 167]
[54 165]
[55 164]
[56 163]
[57 162]
[60 156]
[61 155]
[63 152]
[64 151]
[66 149]
[67 148]
[68 147]
[69 146]
[80 135]
[81 134]
[82 133]
[83 130]
[84 129]
[85 128]
[86 127]
[87 126]
[88 125]
[89 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
