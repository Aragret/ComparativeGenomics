%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[-21.55654907 763.88830566]
[-35.65011215 769.03424072]
[-49.99957657 773.41625977]
[-64.56356049 777.02172852]
[-79.30008698 779.84020996]
[-94.16664886 781.86364746]
[-109.12039185 783.08618164]
[-124.11820221 783.50433350]
[-139.11682129 783.11676025]
[-154.07302856 781.92474365]
[-168.94369507 779.93157959]
[-183.68592834 777.14312744]
[-198.25723267 773.56738281]
[-212.61560059 769.21459961]
[-226.71961975 764.09741211]
[-240.52864075 758.23059082]
[-254.00283813 751.63092041]
[-267.10336304 744.31756592]
[-279.79244995 736.31158447]
[-292.03347778 727.63598633]
[-303.79119873 718.31585693]
[-315.03170776 708.37799072]
[-325.72256470 697.85119629]
[-335.83297729 686.76568604]
[-345.33377075 675.15344238]
[-354.19757080 663.04797363]
[-362.39880371 650.48419189]
[-369.91384888 637.49829102]
[-376.72097778 624.12774658]
[-382.80065918 610.41107178]
[-388.13525391 596.38781738]
[-392.70947266 582.09851074]
[-396.51010132 567.58422852]
[-399.52615356 552.88684082]
[-401.74893188 538.04876709]
[-403.17205811 523.11279297]
[-403.79144287 508.12194824]
[-403.60525513 493.11947632]
[-402.61404419 478.14859009]
[-400.82067871 463.25253296]
[-398.23034668 448.47421265]
[-394.85046387 433.85620117]
[-390.69082642 419.44073486]
[-385.76342773 405.26928711]
[-380.08242798 391.38278198]
[-373.66424561 377.82119751]
[-366.52737427 364.62368774]
[-358.69238281 351.82830811]
[-350.18188477 339.47192383]
[-341.02038574 327.59014893]
[-331.23434448 316.21728516]
[-320.85195923 305.38607788]
[-309.90313721 295.12780762]
[-298.41946411 285.47201538]
[-286.43405151 276.44653320]
[-273.98147583 268.07739258]
[-261.09762573 260.38876343]
[-247.81964111 253.40275574]
[-234.18580627 247.13954163]
[-220.23545837 241.61718750]
[-206.00877380 236.85159302]
[-191.54681396 232.85652161]
[-176.89125061 229.64346313]
[-162.08436584 227.22171021]
[-147.16882324 225.59823608]
[-132.18763733 224.77772522]
[-117.18401337 224.76252747]
[-102.20120239 225.55270386]
[-87.28240204 227.14596558]
[-72.47063446 229.53771973]
[-57.80859756 232.72108459]
[-43.33856964 236.68685913]
[-29.10227585 241.42362976]
[-15.14075851 246.91772461]
[-1.49427390 253.15330505]
[11.79783154 260.11239624]
[19.45842934 247.21607971]
[27.11902618 234.31974792]
[34.77962494 221.42341614]
[42.44021988 208.52709961]
[50.10081863 195.63076782]
[56.88080978 182.25048828]
[62.74977112 168.44631958]
[68.61872864 154.64213562]
[74.48769379 140.83796692]
[80.35665131 127.03378296]
[86.22561646 113.22960663]
[80.90299988 99.75311279]
[86.57223511 86.41871643]
[99.97020721 80.90142822]
[105.83917236 67.09725189]
[111.70812988 53.29307556]
[117.57709503 39.48889923]
[122.92827606 25.47587585]
[127.75427246 11.27342129]
[132.58027649 -2.92903471]
[137.40626526 -17.13149071]
[124.10463715 -24.13242340]
[112.06203461 -33.12809753]
[101.57501221 -43.89698410]
[92.90183258 -56.17388916]
[86.25607300 -69.65648651]
[81.80139923 -84.01274872]
[79.64750671 -98.88915253]
[79.84743500 -113.91933441]
[82.39627075 -128.73318481]
[87.23123169 -142.96588135]
[94.23326111 -156.26693726]
[103.22992706 -168.30879211]
[113.99967957 -178.79492188]
[126.27730560 -187.46708679]
[139.76045227 -194.11174011]
[154.11708069 -198.56523132]
[168.99365234 -200.71789551]
[184.02383423 -200.51672363]
[198.83746338 -197.96667480]
[213.06976318 -193.13053894]
[226.37023926 -186.12739563]
[238.41136169 -177.12974548]
[248.89659119 -166.35913086]
[257.56774902 -154.08079529]
[264.21127319 -140.59709167]
[268.66360474 -126.24009705]
[270.81503296 -111.36334229]
[270.61260986 -96.33318329]
[268.06134033 -81.51976776]
[263.22402954 -67.28786469]
[256.21981812 -53.98796844]
[247.22114563 -41.94758987]
[236.44966125 -31.46323586]
[224.17060852 -22.79309464]
[210.68637085 -16.15067673]
[196.32901001 -11.69955540]
[181.45207214 -9.54934406]
[166.42193604 -9.75299549]
[151.60871887 -12.30549240]
[146.78273010 1.89696288]
[141.95672607 16.09941864]
[137.13073730 30.30187416]
[151.53443909 26.11457825]
[163.87620544 34.63987732]
[165.05815125 49.59323883]
[154.20898438 59.95159912]
[139.32630920 58.07916260]
[131.38127136 45.35786057]
[125.51230621 59.16203690]
[119.64334869 72.96621704]
[113.77438354 86.77039337]
[119.09700012 100.24688721]
[113.42776489 113.58128357]
[100.02979279 119.09857178]
[94.16082764 132.90274048]
[88.29187012 146.70692444]
[82.42290497 160.51109314]
[76.55394745 174.31527710]
[70.68498993 188.11946106]
[83.85836792 180.94573975]
[98.82625580 181.92669678]
[110.95069122 190.75834656]
[116.47479248 204.70411682]
[113.68684387 219.44274902]
[103.45072937 230.40731812]
[88.93821716 234.20034790]
[74.64617157 229.64651489]
[65.00313568 218.15687561]
[62.99714661 203.29136658]
[55.33654785 216.18769836]
[47.67594910 229.08401489]
[40.01535416 241.98034668]
[32.35475540 254.87667847]
[24.69415855 267.77301025]
[37.16377258 276.11672974]
[49.16754532 285.11773682]
[60.67086792 294.75012207]
[71.64057159 304.98608398]
[82.04502869 315.79608154]
[91.85424042 327.14898682]
[101.03992462 339.01205444]
[109.57559967 351.35107422]
[117.43664551 364.13046265]
[124.60040283 377.31338501]
[131.04621887 390.86184692]
[136.75550842 404.73675537]
[141.71180725 418.89810181]
[145.90081787 433.30508423]
[149.31047058 447.91616821]
[151.93093872 462.68917847]
[153.75465393 477.58157349]
[154.77636719 492.55038452]
[154.99313354 507.55245972]
[154.40432739 522.54449463]
[153.01164246 537.48339844]
[150.81909180 552.32592773]
[147.83300781 567.02941895]
[144.06198120 581.55145264]
[139.51690674 595.85009766]
[134.21089172 609.88415527]
[128.15921021 623.61315918]
[121.37931824 636.99755859]
[113.89077759 649.99877930]
[105.71517181 662.57922363]
[96.87606812 674.70275879]
[87.39896393 686.33428955]
[77.31117249 697.44042969]
[66.64178467 707.98901367]
[55.42156219 717.94970703]
[43.68285751 727.29382324]
[31.45951843 735.99432373]
[18.78678322 744.02618408]
[5.70119476 751.36627197]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[76 171]
[77 170]
[78 169]
[79 168]
[80 167]
[81 166]
[82 156]
[83 155]
[84 154]
[85 153]
[86 152]
[87 151]
[90 148]
[91 147]
[92 146]
[93 145]
[94 139]
[95 138]
[96 137]
[97 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
