%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[224.06341553 613.95733643]
[228.09075928 599.47845459]
[234.23118591 585.76159668]
[242.34750366 573.11315918]
[252.25840759 561.81573486]
[263.74246216 552.12170410]
[276.54315186 544.24761963]
[270.67416382 530.44348145]
[264.80520630 516.63928223]
[258.93624878 502.83511353]
[253.06729126 489.03094482]
[247.19833374 475.22677612]
[241.32937622 461.42257690]
[235.46041870 447.61840820]
[223.36021423 438.93310547]
[225.08117676 423.20578003]
[219.21221924 409.40158081]
[216.66595459 408.22912598]
[214.43069458 405.97741699]
[212.91984558 402.75985718]
[212.49815369 398.83724976]
[213.43200684 394.59674072]
[208.39509583 380.46771240]
[203.35816956 366.33868408]
[191.79638672 356.94857788]
[194.45040894 341.35156250]
[189.41348267 327.22253418]
[184.37657166 313.09350586]
[179.33966064 298.96447754]
[174.30273438 284.83544922]
[160.77743530 278.70343018]
[155.46800232 264.44635010]
[161.99153137 250.30131531]
[156.95462036 236.17228699]
[151.91769409 222.04325867]
[146.88078308 207.91423035]
[140.80694580 194.19895935]
[133.72984314 180.97343445]
[126.65274048 167.74790955]
[120.72528076 163.33349609]
[119.57038116 154.27236938]
[112.69097137 140.94294739]
[105.81156158 127.61351776]
[98.93214417 114.28408813]
[87.27133179 106.56935883]
[87.73842621 92.59532928]
[80.85900879 79.26589966]
[73.97959900 65.93647003]
[74.15869904 80.93540192]
[70.50121307 95.48265839]
[63.24971771 108.61338043]
[52.88518524 119.45664978]
[40.09505844 127.29327393]
[25.72765732 131.60346985]
[10.73592281 132.10136414]
[-3.88579798 128.75393677]
[-17.16769981 121.78321075]
[-28.22883987 111.65151978]
[-36.33557510 99.03086853]
[-40.95021439 84.75833893]
[-41.76668167 69.78057098]
[-38.73082733 55.09099960]
[-32.04401016 41.66391754]
[-22.14973831 30.38990593]
[-9.70426559 22.01672173]
[4.46694422 17.09972954]
[19.42396736 15.96505833]
[34.17475510 18.68796539]
[47.74094391 25.08784866]
[59.22273636 34.74023056]
[67.86097717 47.00944138]
[65.63585663 32.17539597]
[63.41073990 17.34135246]
[61.18562317 2.50730920]
[51.29610443 -5.77279949]
[49.74818802 -18.17391777]
[56.83047867 -27.98043251]
[54.82646179 -42.84596252]
[52.82244873 -57.71149063]
[50.81843567 -72.57701874]
[48.81442261 -87.44254303]
[39.30276871 -100.08528900]
[45.27033234 -113.73217773]
[35.75867844 -126.37492371]
[41.72624207 -140.02180481]
[39.72222519 -154.88734436]
[30.21057510 -167.53009033]
[36.17813492 -181.17697144]
[26.41299057 -189.60339355]
[25.04988098 -202.02618408]
[32.27738953 -211.72616577]
[30.49492264 -226.61988831]
[15.65028381 -229.53398132]
[2.43368125 -236.89445496]
[-7.86005735 -247.98020935]
[-14.22245598 -261.70520020]
[-16.03019333 -276.72476196]
[-13.10616207 -291.56744385]
[-5.73683262 -304.77911377]
[5.35582495 -315.06539917]
[19.08506584 -321.41860962]
[34.10583496 -323.21627808]
[48.94655609 -320.28231812]
[62.15328217 -312.90414429]
[72.43215942 -301.80459595]
[78.77615356 -288.07107544]
[80.56375885 -273.04910278]
[77.61984253 -258.21035767]
[70.23281097 -245.00859070]
[59.12638092 -234.73715210]
[45.38864136 -228.40235901]
[47.17110443 -213.50863647]
[58.43108368 -200.04833984]
[51.04366302 -183.18098450]
[60.41197586 -171.60151672]
[54.58775711 -156.89135742]
[56.59177017 -142.02581787]
[65.96008301 -130.44636536]
[60.13586044 -115.73619080]
[69.50417328 -104.15672302]
[63.67995071 -89.44655609]
[65.68396759 -74.58103180]
[67.68798065 -59.71550369]
[69.69199371 -44.84997559]
[71.69600677 -29.98444748]
[83.15513611 -16.69327736]
[76.01966858 0.28219199]
[78.24478912 15.11623573]
[80.46990204 29.95027924]
[82.69502258 44.78432465]
[87.30902863 59.05705643]
[94.18843842 72.38648224]
[101.06785583 85.71591187]
[112.72866821 93.43064117]
[112.26157379 107.40467072]
[119.14099121 120.73410034]
[126.02040100 134.06353760]
[132.89981079 147.39295959]
[139.87826538 160.67080688]
[146.95536804 173.89633179]
[154.03247070 187.12185669]
[156.12066650 172.26792908]
[165.27796936 160.38752747]
[179.11070251 154.58619690]
[194.00302124 156.38037109]
[206.06210327 165.30105591]
[212.13572693 179.01641846]
[210.63627625 193.94128418]
[201.95568848 206.17433167]
[188.36306763 212.51788330]
[173.41146851 211.31373596]
[161.00981140 202.87731934]
[166.04672241 217.00634766]
[171.08364868 231.13537598]
[176.12055969 245.26440430]
[190.12097168 252.09275818]
[195.02784729 266.49334717]
[188.43177795 279.79852295]
[193.46868896 293.92755127]
[198.50559998 308.05657959]
[203.54252625 322.18560791]
[208.57943726 336.31463623]
[220.50149536 346.71536255]
[217.48719788 361.30178833]
[222.52412415 375.43081665]
[227.56103516 389.55984497]
[233.01638794 403.53262329]
[238.88536072 417.33682251]
[251.40533447 427.00949097]
[249.26458740 441.74945068]
[255.13354492 455.55361938]
[261.00250244 469.35778809]
[266.87145996 483.16198730]
[272.74041748 496.96615601]
[278.60940552 510.77032471]
[284.47836304 524.57452393]
[290.34732056 538.37866211]
[304.89916992 534.62359619]
[319.84820557 533.07934570]
[334.86038208 533.78051758]
[349.60040283 536.71136475]
[363.73889160 541.80651855]
[376.96005249 548.95202637]
[388.96847534 557.98840332]
[399.49594116 568.71362305]
[408.30718994 580.88812256]
[415.20544434 594.23999023]
[420.03656006 608.47088623]
[422.69259644 623.26287842]
[423.11422729 638.28552246]
[421.29205322 653.20318604]
[417.26678467 667.68267822]
[411.12829590 681.40039062]
[403.01379395 694.04998779]
[393.10449219 705.34881592]
[381.62179565 715.04449463]
[368.82226562 722.92034912]
[354.99179077 728.80047607]
[340.43939209 732.55352783]
[325.49017334 734.09564209]
[310.47805786 733.39233398]
[295.73849487 730.45935059]
[281.60070801 725.36224365]
[268.38058472 718.21478271]
[256.37341309 709.17675781]
[245.84750366 698.45001221]
[237.03797913 686.27423096]
[230.14163208 672.92138672]
[225.31256104 658.68981934]
[222.65861511 643.89746094]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 177]
[8 176]
[9 175]
[10 174]
[11 173]
[12 172]
[13 171]
[14 170]
[16 168]
[17 167]
[22 166]
[23 165]
[24 164]
[26 162]
[27 161]
[28 160]
[29 159]
[30 158]
[33 155]
[34 154]
[35 153]
[36 152]
[37 141]
[38 140]
[39 139]
[41 138]
[42 137]
[43 136]
[44 135]
[46 133]
[47 132]
[48 131]
[71 130]
[72 129]
[73 128]
[74 127]
[77 125]
[78 124]
[79 123]
[80 122]
[81 121]
[83 119]
[85 117]
[86 116]
[88 114]
[91 112]
[92 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
