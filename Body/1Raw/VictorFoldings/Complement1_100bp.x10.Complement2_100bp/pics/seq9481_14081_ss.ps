%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[66.83525085 661.23333740]
[52.09105682 664.01867676]
[37.20105743 665.87274170]
[22.22402763 666.78814697]
[7.21906900 666.76135254]
[-7.75459719 665.79241943]
[-22.63787651 663.88525391]
[-37.37203217 661.04724121]
[-51.89891434 657.28967285]
[-66.16119385 652.62744141]
[-80.10257721 647.07879639]
[-93.66805267 640.66571045]
[-106.80407715 633.41351318]
[-119.45880890 625.35083008]
[-131.58230591 616.50939941]
[-143.12672424 606.92425537]
[-154.04649353 596.63305664]
[-164.29852295 585.67657471]
[-173.84236145 574.09790039]
[-182.64035034 561.94287109]
[-190.65773010 549.25939941]
[-197.86289978 536.09753418]
[-204.22740173 522.50915527]
[-209.72612000 508.54803467]
[-214.33737183 494.26916504]
[-218.04292297 479.72894287]
[-220.82818604 464.98474121]
[-222.68215942 450.09472656]
[-223.59750366 435.11770630]
[-223.57063293 420.11273193]
[-222.60163879 405.13906860]
[-220.69435120 390.25579834]
[-217.85629272 375.52166748]
[-214.09866333 360.99481201]
[-209.43629456 346.73254395]
[-203.88760376 332.79119873]
[-197.47447205 319.22573853]
[-190.22219849 306.08975220]
[-182.15942383 293.43508911]
[-173.31796265 281.31161499]
[-163.73271179 269.76727295]
[-153.44149780 258.84753418]
[-142.48492432 248.59556580]
[-130.90625000 239.05178833]
[-118.75115967 230.25387573]
[-106.06762695 222.23654175]
[-92.90570831 215.03144836]
[-79.31735229 208.66702271]
[-65.35617828 203.16836548]
[-51.07729340 198.55720520]
[-36.53704453 194.85171509]
[-21.79281616 192.06652832]
[-6.90279961 190.21264648]
[8.07424164 189.29737854]
[23.07919884 189.32432556]
[38.05285645 190.29339600]
[52.93611526 192.20075989]
[67.67024231 195.03889465]
[71.42654419 180.51684570]
[75.18283844 165.99478149]
[78.93914032 151.47271729]
[82.69544220 136.95066833]
[86.45174408 122.42860413]
[90.20804596 107.90653992]
[93.63910675 93.30422211]
[96.74321747 78.62892151]
[99.84732819 63.95361710]
[85.41234589 59.85384369]
[71.29080200 54.77854919]
[57.54852295 48.75139236]
[44.24959564 41.80047607]
[31.45602036 33.95820618]
[19.22744560 25.26115417]
[7.62089014 15.74986649]
[-3.30953169 5.46868801]
[-13.51285648 -5.53444386]
[-22.94151115 -17.20822716]
[-31.55153465 -29.49823189]
[-39.30278397 -42.34715652]
[-46.15911484 -55.69509506]
[-52.08856583 -69.47981262]
[-57.06348419 -83.63703156]
[-61.06068039 -98.10075378]
[-64.06151581 -112.80352783]
[-66.05199432 -127.67681885]
[-67.02284241 -142.65127563]
[-66.96952820 -157.65707397]
[-65.89230347 -172.62423706]
[-63.79618835 -187.48301697]
[-60.69095993 -202.16409302]
[-56.59109116 -216.59904480]
[-51.51569748 -230.72056580]
[-45.48844910 -244.46279907]
[-38.53744507 -257.76168823]
[-30.69509315 -270.55520630]
[-21.99795723 -282.78372192]
[-12.48659134 -294.39019775]
[-2.20533967 -305.32055664]
[8.79786015 -315.52380371]
[20.47170639 -324.95239258]
[32.76176834 -333.56234741]
[45.61074829 -341.31350708]
[58.95873260 -348.16973877]
[72.74348450 -354.09909058]
[86.90074158 -359.07391357]
[101.36448669 -363.07101440]
[116.06728363 -366.07174683]
[130.94058228 -368.06213379]
[145.91505432 -369.03286743]
[160.92083740 -368.97946167]
[175.88801575 -367.90213013]
[190.74676514 -365.80593872]
[205.42782593 -362.70059204]
[219.86276245 -358.60064697]
[233.98423767 -353.52514648]
[247.72642517 -347.49780273]
[261.02526855 -340.54672241]
[273.81872559 -332.70428467]
[286.04718018 -324.00704956]
[297.65362549 -314.49560547]
[308.58389282 -304.21429443]
[318.78707886 -293.21102905]
[328.21557617 -281.53710938]
[336.82543945 -269.24697876]
[344.57650757 -256.39794922]
[351.43267822 -243.04992676]
[357.36193848 -229.26513672]
[362.33666992 -215.10784912]
[366.33367920 -200.64407349]
[369.33428955 -185.94125366]
[371.32458496 -171.06793213]
[372.29522705 -156.09347534]
[372.24172974 -141.08767700]
[371.16427612 -126.12052155]
[369.06796265 -111.26177979]
[365.96255493 -96.58073425]
[361.86248779 -82.14583588]
[356.78689575 -68.02439117]
[350.75946045 -54.28223801]
[343.80828857 -40.98344803]
[335.96575928 -28.19002914]
[327.26846313 -15.96162987]
[317.75695801 -4.35526609]
[307.47555542 6.57494879]
[296.47219849 16.77805328]
[284.79824829 26.20647240]
[272.50805664 34.81624985]
[259.65896606 42.56723785]
[246.31089783 49.42330170]
[232.52606201 55.35247421]
[218.36874390 60.32711029]
[203.90493774 64.32401276]
[189.20210266 67.32455444]
[174.32878113 69.31473541]
[159.35430908 70.28527832]
[144.34851074 70.23166656]
[129.38136292 69.15413666]
[114.52262878 67.05772400]
[111.41851807 81.73302460]
[108.31440735 96.40833282]
[109.93869781 99.90605164]
[110.01336670 104.10275269]
[108.26079559 108.29029846]
[104.73010254 111.66284180]
[100.97380066 126.18490601]
[97.21750641 140.70695496]
[93.46120453 155.22901917]
[89.70490265 169.75108337]
[85.94860077 184.27313232]
[82.19229889 198.79519653]
[96.45462799 203.45733643]
[110.39607239 209.00581360]
[123.96160889 215.41874695]
[137.09770203 222.67080688]
[149.75251770 230.73338318]
[161.87611389 239.57464600]
[173.42062378 249.15972900]
[184.34051514 259.45077515]
[194.59266663 270.40716553]
[204.13662720 281.98571777]
[212.93472290 294.14065552]
[220.95223999 306.82406616]
[228.15754700 319.98587036]
[234.52218628 333.57412720]
[240.02105713 347.53521729]
[244.63244629 361.81402588]
[248.33816528 376.35421753]
[251.12358093 391.09838867]
[252.97769165 405.98840332]
[253.89320374 420.96542358]
[253.86648560 435.97036743]
[252.89764404 450.94403076]
[250.99050903 465.82733154]
[248.15261841 480.56149292]
[244.39514160 495.08840942]
[239.73292542 509.35070801]
[234.18437195 523.29211426]
[227.77137756 536.85760498]
[220.51925659 549.99371338]
[212.45660400 562.64843750]
[203.61528015 574.77203369]
[194.03013611 586.31646729]
[183.73902893 597.23632812]
[172.78257751 607.48840332]
[161.20399475 617.03228760]
[149.04899597 625.83032227]
[136.36555481 633.84777832]
[123.20371246 641.05303955]
[109.61541748 647.41760254]
[95.65430450 652.91638184]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 170]
[59 169]
[60 168]
[61 167]
[62 166]
[63 165]
[64 164]
[65 160]
[66 159]
[67 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
