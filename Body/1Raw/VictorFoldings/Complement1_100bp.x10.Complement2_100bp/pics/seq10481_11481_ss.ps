%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUGxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[20.97867203 413.67233276]
[13.16057491 426.47998047]
[4.52983236 438.75473022]
[-4.87735415 450.44503784]
[-15.02152729 461.50192261]
[-25.86013985 471.87899780]
[-37.34772873 481.53271484]
[-49.43611145 490.42257690]
[-62.07458496 498.51135254]
[-75.21013641 505.76504517]
[-88.78767395 512.15325928]
[-102.75025177 517.64923096]
[-117.03929138 522.22985840]
[-131.59487915 525.87591553]
[-146.35594177 528.57220459]
[-161.26058960 530.30731201]
[-176.24627686 531.07397461]
[-191.25016785 530.86907959]
[-206.20933533 529.69335938]
[-221.06103516 527.55181885]
[-235.74295044 524.45343018]
[-250.19352722 520.41113281]
[-264.35214233 515.44195557]
[-278.15939331 509.56671143]
[-291.55737305 502.81005859]
[-304.48992920 495.20028687]
[-316.90277100 486.76937866]
[-328.74383545 477.55267334]
[-339.96347046 467.58880615]
[-350.51461792 456.91958618]
[-360.35302734 445.58978271]
[-369.43743896 433.64688110]
[-377.72970581 421.14099121]
[-385.19506836 408.12457275]
[-391.80224609 394.65222168]
[-397.52349854 380.78045654]
[-402.33483887 366.56744385]
[-406.21606445 352.07278442]
[-409.15090942 337.35729980]
[-411.12704468 322.48269653]
[-412.13623047 307.51138306]
[-412.17422485 292.50613403]
[-411.24081421 277.52987671]
[-409.33996582 262.64547729]
[-406.47961426 247.91532898]
[-402.67178345 233.40121460]
[-397.93246460 219.16401672]
[-392.28149414 205.26347351]
[-385.74258423 191.75785828]
[-378.34317017 178.70382690]
[-370.11428833 166.15614319]
[-361.09045410 154.16741943]
[-351.30950928 142.78796387]
[-340.81250000 132.06547546]
[-329.64343262 122.04496765]
[-317.84915161 112.76844025]
[-305.47912598 104.27481842]
[-292.58526611 96.59970856]
[-279.22164917 89.77532196]
[-265.44430542 83.83027649]
[-251.31101990 78.78951263]
[-236.88108826 74.67416382]
[-222.21504211 71.50149536]
[-207.37437439 69.28481293]
[-192.42135620 68.03341675]
[-177.41868591 67.75255585]
[-162.42930603 68.44340515]
[-147.51606750 70.10307312]
[-132.74154663 72.72459412]
[-118.16770172 76.29696655]
[-103.85565948 80.80522156]
[-89.86544800 86.23043823]
[-76.25575256 92.54986572]
[-63.08366013 99.73699188]
[-50.40441132 107.76168060]
[-38.27119446 116.59026337]
[-26.73489571 126.18571472]
[-15.84390640 136.50779724]
[-5.64390564 147.51319885]
[3.82232380 159.15576172]
[16.04880905 150.46594238]
[28.27529526 141.77612305]
[40.50178146 133.08628845]
[52.72826767 124.39646912]
[64.95475006 115.70664215]
[77.18123627 107.01681519]
[77.39400482 92.32533264]
[86.16971588 80.54094696]
[100.18421936 76.12747192]
[114.12893677 80.75669861]
[126.35542297 72.06687164]
[138.58190918 63.37704468]
[150.80839539 54.68722153]
[163.03488159 45.99739838]
[175.26136780 37.30757523]
[187.48785400 28.61774826]
[199.71434021 19.92792511]
[211.94082642 11.23810005]
[224.16731262 2.54827571]
[236.39379883 -6.14154863]
[228.73860168 -19.05113602]
[222.17561340 -32.54879761]
[216.74969482 -46.54232407]
[212.49787903 -60.93613052]
[209.44923401 -75.63188934]
[207.62457275 -90.52921295]
[207.03636169 -105.52632904]
[207.68862915 -120.52079773]
[209.57690430 -135.41018677]
[212.68830872 -150.09278870]
[217.00155640 -164.46829224]
[222.48721313 -178.43852234]
[229.10778809 -191.90802002]
[236.81806946 -204.78479004]
[245.56536865 -216.98086548]
[255.28994751 -228.41293335]
[265.92538452 -239.00289917]
[277.39898682 -248.67840576]
[289.63241577 -257.37338257]
[302.54211426 -265.02844238]
[316.03985596 -271.59124756]
[330.03344727 -277.01702881]
[344.42730713 -281.26864624]
[359.12307739 -284.31713867]
[374.02041626 -286.14160156]
[389.01754761 -286.72964478]
[404.01202393 -286.07717896]
[418.90136719 -284.18872070]
[433.58395386 -281.07717896]
[447.95941162 -276.76373291]
[461.92956543 -271.27792358]
[475.39898682 -264.65716553]
[488.27566528 -256.94674683]
[500.47161865 -248.19929504]
[511.90359497 -238.47457886]
[522.49340820 -227.83903503]
[532.16882324 -216.36529541]
[540.86364746 -204.13177490]
[548.51855469 -191.22200012]
[555.08117676 -177.72418213]
[560.50677490 -163.73052979]
[564.75823975 -149.33660889]
[567.80651855 -134.64079285]
[569.63085938 -119.74342346]
[570.21868896 -104.74629211]
[569.56610107 -89.75183868]
[567.67742920 -74.86248779]
[564.56567383 -60.17996597]
[560.25207520 -45.80455399]
[554.76611328 -31.83446312]
[548.14520264 -18.36511993]
[540.43463135 -5.48853397]
[531.68701172 6.70733070]
[521.96215820 18.13916397]
[511.32650757 28.72887230]
[499.85266113 38.40411758]
[487.61901855 47.09880829]
[474.70916748 54.75354385]
[461.21127319 61.31604385]
[447.21752930 66.74147034]
[432.82357788 70.99275970]
[418.12771606 74.04088593]
[403.23031616 75.86501312]
[388.23318481 76.45268250]
[373.23873901 75.79988098]
[358.34942627 73.91107178]
[343.66693115 70.79914856]
[329.29156494 66.48538208]
[315.32153320 60.99922562]
[301.85229492 54.37816620]
[288.97579956 46.66743088]
[276.78002930 37.91968918]
[265.34829712 28.19470215]
[254.75872803 17.55889893]
[245.08361816 6.08493710]
[232.85713196 14.77476120]
[220.63064575 23.46458626]
[208.40415955 32.15441132]
[196.17767334 40.84423447]
[183.95118713 49.53405762]
[171.72470093 58.22388458]
[159.49821472 66.91371155]
[147.27172852 75.60353088]
[135.04524231 84.29335785]
[122.81876373 92.98318481]
[122.60599518 107.67466736]
[113.83028412 119.45905304]
[99.81578064 123.87252808]
[85.87106323 119.24330139]
[73.64457703 127.93312836]
[61.41809082 136.62295532]
[49.19160461 145.31277466]
[36.96511841 154.00260925]
[24.73863411 162.69242859]
[12.51214790 171.38224792]
[20.39525604 184.15000916]
[27.43537331 197.40126038]
[33.60297394 211.08042908]
[38.87218475 225.13012695]
[43.22090530 239.49145508]
[46.63089752 254.10414124]
[49.08786011 268.90692139]
[50.58148193 283.83770752]
[51.10550308 298.83383179]
[50.65772629 313.83245850]
[49.24002457 328.77062988]
[46.85834885 343.58569336]
[43.52268600 358.21554565]
[39.24703217 372.59878540]
[34.04931259 386.67510986]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[80 195]
[81 194]
[82 193]
[83 192]
[84 191]
[85 190]
[86 189]
[90 185]
[91 184]
[92 183]
[93 182]
[94 181]
[95 180]
[96 179]
[97 178]
[98 177]
[99 176]
[100 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
