%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxGGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAU\
) } def
/len { sequence length } bind def

/coor [
[-9.61021996 630.06048584]
[-10.95343590 645.04687500]
[-15.10883236 659.50817871]
[-21.92619514 672.92156982]
[-31.15907860 684.80224609]
[-42.47372055 694.72070312]
[-55.46110535 702.31835938]
[-69.65174866 707.32055664]
[-84.53266144 709.54656982]
[-99.56591034 708.91577148]
[-114.20805359 705.45111084]
[-127.92979431 699.27770996]
[-140.23509216 690.61883545]
[-150.67910767 679.78747559]
[-158.88432312 667.17510986]
[-164.55410767 653.23773193]
[-167.48348999 638.47918701]
[-167.56660461 623.43292236]
[-164.80043030 608.64294434]
[-159.28495789 594.64379883]
[-151.21957397 581.94158936]
[-140.89584351 570.99548340]
[-128.68695068 562.20117188]
[-115.03425598 555.87658691]
[-100.43127441 552.25036621]
[-85.40590668 551.45361328]
[-70.50131226 553.51501465]
[-65.67531586 539.31256104]
[-60.84931946 525.11010742]
[-56.02331924 510.90765381]
[-51.19732285 496.70520020]
[-46.37132645 482.50274658]
[-51.43506241 471.51705933]
[-47.53067780 459.64526367]
[-36.23314285 453.42205811]
[-31.19622612 439.29302979]
[-26.15930939 425.16400146]
[-21.12239265 411.03497314]
[-16.29639626 396.83251953]
[-11.68238640 382.55978394]
[-7.06837702 368.28704834]
[-2.45436764 354.01431274]
[2.15964150 339.74157715]
[6.77365065 325.46884155]
[11.38766003 311.19610596]
[16.00166893 296.92337036]
[1.66190910 301.32464600]
[-10.80542088 292.98403931]
[-12.20986938 278.04995728]
[-1.51612878 267.53121948]
[13.39277363 269.18185425]
[21.52633476 281.78344727]
[27.18912125 267.89343262]
[24.82915688 253.18698120]
[37.20373917 243.32896423]
[42.86652756 229.43893433]
[48.52931213 215.54891968]
[53.88049698 201.53588867]
[50.86620712 186.94947815]
[62.78826523 176.54875183]
[67.82518005 162.41972351]
[66.62390137 157.79739380]
[68.31359100 152.37135315]
[73.22813416 147.94880676]
[78.68348694 133.97601318]
[84.13884735 120.00321960]
[89.59420013 106.03041840]
[94.84091949 91.97795105]
[99.87783813 77.84892273]
[85.41339111 81.82130432]
[73.19992065 73.11319733]
[72.24073792 58.14389420]
[83.24291992 47.94821167]
[98.09606934 50.04201889]
[105.85082245 62.88020325]
[111.92465973 49.16493607]
[117.99849701 35.44966888]
[124.07232666 21.73440361]
[127.28559875 7.08261585]
[127.50892639 -7.91572142]
[127.73225403 -22.91405869]
[125.18837738 -27.47209930]
[124.69644165 -32.08851624]
[125.93508148 -35.97192001]
[128.31539917 -38.57315826]
[121.41321564 -52.80939484]
[129.89434814 -65.05356598]
[122.99215698 -79.28981018]
[131.47328186 -91.53398132]
[132.36610413 -106.50738525]
[125.46392059 -120.74362183]
[133.94503784 -132.98779297]
[134.83786011 -147.96121216]
[120.72386932 -162.26066589]
[121.66201019 -182.02487183]
[136.59887695 -194.53102112]
[136.82220459 -209.52935791]
[137.04553223 -224.52769470]
[137.26885986 -239.52603149]
[137.49218750 -254.52436829]
[124.01688385 -261.78210449]
[115.46752930 -274.47726440]
[113.80871582 -289.69259644]
[119.42163086 -303.93176270]
[131.01646423 -313.92269897]
[145.92880249 -317.36953735]
[160.73190308 -313.48022461]
[172.02412415 -303.14849854]
[177.21060181 -288.74853516]
[175.09950256 -273.58932495]
[166.17596436 -261.15432739]
[152.49053955 -254.30104065]
[152.26721191 -239.30270386]
[152.04388428 -224.30436707]
[151.82055664 -209.30603027]
[151.59722900 -194.30769348]
[160.46665955 -189.14012146]
[166.43745422 -180.69114685]
[168.37748718 -170.44667053]
[165.87081909 -160.24273682]
[159.30467224 -151.93653870]
[149.81126404 -147.06838989]
[148.91844177 -132.09498596]
[155.88449097 -118.92974091]
[147.33950806 -105.61457062]
[146.44668579 -90.64116669]
[153.41273499 -77.47592926]
[144.86775208 -64.16075134]
[151.83378601 -50.99551392]
[143.28880310 -37.68033981]
[142.73059082 -22.69073105]
[142.50726318 -7.69239378]
[142.28393555 7.30594397]
[149.11103821 -6.05035210]
[158.61540222 -17.65497589]
[170.36460876 -26.97999763]
[183.82417297 -33.60118866]
[198.38175964 -37.21732712]
[213.37512207 -37.66390610]
[228.12213135 -34.92060852]
[241.95190430 -29.11223412]
[254.23529053 -20.50302887]
[264.41348267 -9.48465061]
[272.02340698 3.44163537]
[276.71890259 17.68777084]
[278.28631592 32.60565186]
[276.65438843 47.51661301]
[271.89733887 61.74230576]
[264.23156738 74.63555908]
[254.00581360 85.60980988]
[241.68530273 94.16580963]
[227.83053589 99.91430664]
[213.07179260 102.59379578]
[198.08052063 102.08237457]
[183.53869629 98.40330505]
[170.10789490 91.72396088]
[158.39912415 82.34820557]
[148.94505310 70.70258331]
[142.17578125 57.31688690]
[138.39926147 42.80007172]
[137.78759766 27.80823708]
[131.71376038 41.52350235]
[125.63992310 55.23876953]
[119.56609344 68.95404053]
[114.00686646 82.88583374]
[108.96994781 97.01486206]
[110.08689117 102.13993835]
[108.25283813 107.52599335]
[103.56700134 111.48577881]
[98.11164093 125.45857239]
[92.65628815 139.43136597]
[87.20092773 153.40417480]
[81.95420837 167.45664978]
[76.91729736 181.58567810]
[79.57131195 197.18267822]
[68.00952911 206.57281494]
[68.95168304 211.70695496]
[67.93220520 216.23619080]
[65.51000214 219.51460266]
[62.41933823 221.21170044]
[56.75655365 235.10173035]
[51.09376526 248.99176025]
[53.04869080 264.69171143]
[41.07914734 273.55621338]
[35.41636276 287.44622803]
[30.27440262 301.53738403]
[25.66039276 315.81011963]
[21.04638481 330.08285522]
[16.43237495 344.35559082]
[11.81836605 358.62832642]
[7.20435619 372.90106201]
[2.59034705 387.17379761]
[-2.02366209 401.44650269]
[-1.01508915 407.98062134]
[-3.13893318 413.25189209]
[-6.99336386 416.07186890]
[-12.03028011 430.20089722]
[-17.06719589 444.32992554]
[-22.10411263 458.45895386]
[-18.36714554 476.48995972]
[-32.16886902 487.32873535]
[-36.99486542 501.53118896]
[-41.82086563 515.73364258]
[-46.64686203 529.93609619]
[-51.47285843 544.13854980]
[-56.29885864 558.34100342]
[-43.22393799 565.78704834]
[-31.79464340 575.57312012]
[-22.42413139 587.34558105]
[-15.45114040 600.67877197]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 206]
[28 205]
[29 204]
[30 203]
[31 202]
[32 201]
[35 199]
[36 198]
[37 197]
[38 196]
[39 193]
[40 192]
[41 191]
[42 190]
[43 189]
[44 188]
[45 187]
[46 186]
[52 185]
[53 184]
[55 182]
[56 181]
[57 180]
[58 176]
[60 174]
[61 173]
[64 172]
[65 171]
[66 170]
[67 169]
[68 166]
[69 165]
[75 164]
[76 163]
[77 162]
[78 161]
[79 133]
[80 132]
[81 131]
[85 130]
[87 128]
[89 126]
[90 125]
[92 123]
[93 122]
[96 116]
[97 115]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
