%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[180.92228699 321.43649292]
[187.57234192 307.97265625]
[195.71385193 295.35467529]
[205.24064636 283.74700928]
[216.02854919 273.30102539]
[206.88975525 261.40637207]
[197.75094604 249.51174927]
[193.21597290 248.01409912]
[189.57365417 243.65168762]
[188.52343750 237.12416077]
[179.74282837 224.96270752]
[170.96221924 212.80125427]
[162.18162537 200.63980103]
[153.40101624 188.47834778]
[146.93693542 184.89541626]
[144.58181763 176.06982422]
[135.98324585 163.77897644]
[127.38468933 151.48814392]
[118.78612518 139.19731140]
[102.50751495 132.64186096]
[101.06288147 114.28445435]
[88.38666534 108.38485718]
[86.77566528 94.49614716]
[77.99506378 82.33469391]
[69.21446228 70.17323303]
[60.43385696 58.01177979]
[51.65325165 45.85032272]
[37.30187607 39.19085693]
[36.12479019 24.34283447]
[23.53919411 21.52049828]
[16.47617722 11.21042824]
[18.27216339 -0.75205499]
[9.67359924 -13.04289246]
[11.95685291 1.78231382]
[11.04411030 16.75451851]
[6.97689486 31.19258499]
[-0.05976113 44.43967819]
[-9.74573708 55.89314270]
[-21.64038658 65.03192139]
[-35.20258331 71.44026947]
[-49.81533432 74.82663727]
[-64.81385803 75.03697205]
[-79.51582336 72.06170654]
[-93.25238800 66.03620148]
[-105.39863586 57.23456573]
[-115.40197754 46.05722046]
[-122.80735016 33.01266098]
[-127.27783966 18.69432640]
[-128.61007690 3.75360560]
[-126.74345398 -11.12979889]
[-121.76288605 -25.27878952]
[-113.89495850 -38.04968262]
[-103.49761200 -48.86149216]
[-91.04385376 -57.22234344]
[-77.10024261 -62.75188446]
[-62.30112839 -65.19854736]
[-47.31976700 -64.45103455]
[-32.83771133 -60.54334641]
[-19.51379585 -53.65325928]
[-7.95417213 -44.09422684]
[1.31757212 -32.29745102]
[-1.78653800 -46.97275162]
[-4.89064837 -61.64805603]
[-7.99475813 -76.32335663]
[-11.31701756 -90.95082092]
[-14.85669041 -105.52719116]
[-18.39636230 -120.10356903]
[-21.93603516 -134.67994690]
[-25.47570801 -149.25631714]
[-40.36401367 -147.31066895]
[-55.37540817 -146.98617554]
[-70.33388519 -148.28662109]
[-85.06407166 -151.19676208]
[-99.39325714 -155.68249512]
[-113.15343475 -161.69120789]
[-126.18328094 -169.15246582]
[-138.33003235 -177.97877502]
[-149.45126343 -188.06666565]
[-159.41659546 -199.29785156]
[-168.10916138 -211.54064941]
[-175.42709351 -224.65153503]
[-181.28454590 -238.47677612]
[-185.61286926 -252.85429382]
[-188.36131287 -267.61550903]
[-189.49765015 -282.58734131]
[-189.00856018 -297.59426880]
[-186.89976501 -312.46035767]
[-183.19601440 -327.01126099]
[-177.94070435 -341.07644653]
[-171.19546509 -354.49096680]
[-163.03938293 -367.09753418]
[-153.56808472 -378.74835205]
[-142.89260864 -389.30682373]
[-131.13812256 -398.64916992]
[-118.44244385 -406.66583252]
[-104.95441437 -413.26281738]
[-90.83219147 -418.36282349]
[-76.24133301 -421.90600586]
[-61.35292435 -423.85086060]
[-46.34151077 -424.17456055]
[-31.38310242 -422.87329102]
[-16.65307617 -419.96234131]
[-2.32413530 -415.47586060]
[11.43572330 -409.46640015]
[24.46516991 -402.00445557]
[36.61144257 -393.17749023]
[47.73213196 -383.08898926]
[57.69685364 -371.85726929]
[66.38877106 -359.61401367]
[73.70598602 -346.50271606]
[79.56270599 -332.67715454]
[83.89025879 -318.29940796]
[86.63790894 -303.53805542]
[87.77343750 -288.56616211]
[87.28353882 -273.55926514]
[85.17395020 -258.69329834]
[81.46940613 -244.14256287]
[76.21334076 -230.07768250]
[69.46738434 -216.66354370]
[61.31062317 -204.05740356]
[51.83869171 -192.40708923]
[41.16264725 -181.84919739]
[29.40765953 -172.50749207]
[16.71154785 -164.49150085]
[3.22316957 -157.89521790]
[-10.89933205 -152.79598999]
[-7.35965967 -138.21961975]
[-3.81998730 -123.64324188]
[-0.28031486 -109.06686401]
[3.25935745 -94.49048615]
[6.79949427 -91.28479767]
[8.36341763 -85.82117462]
[6.68054390 -79.42746735]
[9.78465462 -64.75216675]
[12.88876438 -50.07686234]
[15.99287415 -35.40156174]
[21.96443748 -21.64145660]
[30.56300163 -9.35061932]
[46.84160995 -2.79518008]
[48.28624344 15.56223106]
[62.00957489 21.35183144]
[63.81470871 37.06972122]
[72.59531403 49.23117828]
[81.37591553 61.39263153]
[90.15651703 73.55408478]
[98.93711853 85.71554565]
[111.61333466 91.61514282]
[113.22433472 105.50385284]
[125.80992889 108.32618713]
[132.87294006 118.63626099]
[131.07696533 130.59873962]
[139.67552185 142.88958740]
[148.27409363 155.18041992]
[156.87265015 167.47125244]
[165.56246948 179.69773865]
[174.34307861 191.85919189]
[183.12368774 204.02066040]
[191.90428162 216.18211365]
[200.68489075 228.34356689]
[209.64558411 240.37294006]
[218.78439331 252.26757812]
[227.92318726 264.16220093]
[240.79577637 256.42953491]
[254.46594238 250.21467590]
[268.75543213 245.59861755]
[283.47799683 242.64158630]
[298.44168091 241.38209534]
[313.45135498 241.83657837]
[328.31143188 243.99911499]
[342.82809448 247.84150696]
[356.81213379 253.31365967]
[370.08123779 260.34423828]
[382.46237183 268.84155273]
[393.79418945 278.69488525]
[403.92892456 289.77572632]
[412.73443604 301.93963623]
[420.09591675 315.02804565]
[425.91744995 328.87026978]
[430.12310791 343.28591919]
[432.65805054 358.08697510]
[433.48922729 373.08053589]
[432.60583496 388.07110596]
[430.01934814 402.86328125]
[425.76354980 417.26416016]
[419.89382935 431.08605957]
[412.48681641 444.14874268]
[403.63897705 456.28189087]
[393.46572876 467.32739258]
[382.09967041 477.14117432]
[369.68899536 485.59536743]
[356.39550781 492.57968140]
[342.39251709 498.00308228]
[327.86254883 501.79492188]
[312.99505615 503.90567017]
[297.98385620 504.30789185]
[283.02465820 502.99630737]
[268.31246948 499.98800659]
[254.03913879 495.32223511]
[240.39071655 489.05978394]
[227.54513550 481.28234863]
[215.66986084 472.09127808]
[204.91972351 461.60641479]
[195.43487549 449.96444702]
[187.33895874 437.31713867]
[180.73751831 423.82940674]
[175.71664429 409.67709351]
[172.34176636 395.04464722]
[170.65689087 380.12289429]
[170.68399048 365.10632324]
[172.42269897 350.19076538]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 162]
[6 161]
[7 160]
[10 159]
[11 158]
[12 157]
[13 156]
[14 155]
[16 154]
[17 153]
[18 152]
[19 151]
[21 148]
[23 146]
[24 145]
[25 144]
[26 143]
[27 142]
[29 140]
[32 138]
[33 137]
[61 136]
[62 135]
[63 134]
[64 133]
[65 130]
[66 129]
[67 128]
[68 127]
[69 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
