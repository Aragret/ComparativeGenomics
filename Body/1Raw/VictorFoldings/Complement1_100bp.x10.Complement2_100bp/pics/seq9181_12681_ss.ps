%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[74.56912994 188.10891724]
[75.93614197 203.05432129]
[76.12633514 218.06092834]
[75.13852692 233.03617859]
[72.97880554 247.88777161]
[69.66049957 262.52413940]
[65.20405579 276.85501099]
[59.63695908 290.79205322]
[52.99352646 304.24935913]
[45.31472015 317.14392090]
[36.64788055 329.39627075]
[27.04644585 340.93084717]
[16.56960869 351.67654419]
[5.28196669 361.56710815]
[-6.74688864 370.54156494]
[-19.44279480 378.54458618]
[-32.72747421 385.52679443]
[-46.51902390 391.44515991]
[-60.73241425 396.26324463]
[-75.28000641 399.95126343]
[-90.07212067 402.48651123]
[-105.01754761 403.85339355]
[-120.02414703 404.04342651]
[-134.99938965 403.05545044]
[-149.85095215 400.89559937]
[-164.48727417 397.57714844]
[-178.81811523 393.12054443]
[-192.75511169 387.55331421]
[-206.21234131 380.90972900]
[-219.10684204 373.23080444]
[-231.35910034 364.56384277]
[-242.89358521 354.96228027]
[-253.63917542 344.48532104]
[-263.52963257 333.19760132]
[-272.50393677 321.16864014]
[-280.50680542 308.47265625]
[-287.48889160 295.18789673]
[-293.40713501 281.39630127]
[-298.22506714 267.18286133]
[-301.91293335 252.63522339]
[-304.44805908 237.84307861]
[-305.81475830 222.89764404]
[-306.00463867 207.89103699]
[-305.01651001 192.91580200]
[-302.85650635 178.06425476]
[-299.53790283 163.42797852]
[-295.08117676 149.09718323]
[-289.51379395 135.16023254]
[-282.87008667 121.70307922]
[-275.19100952 108.80866241]
[-266.52392578 96.55648804]
[-256.92224121 85.02210999]
[-246.44519043 74.27662659]
[-235.15734863 64.38629150]
[-223.12829590 55.41209030]
[-210.43223572 47.40934753]
[-197.14741516 40.42739868]
[-183.35574341 34.50930023]
[-169.14225769 29.69153023]
[-154.59458923 26.00379944]
[-139.80241394 23.46883965]
[-124.85696411 22.10228348]
[-109.85036469 21.91255379]
[-94.87513733 22.90081978]
[-80.02361298 25.06099129]
[-65.38735962 28.37974739]
[-51.05661011 32.83662796]
[-37.11972809 38.40415192]
[-23.66263199 45.04799652]
[-10.76829433 52.72719955]
[1.48378634 61.39441681]
[13.01807117 70.99620819]
[23.76344681 81.47337341]
[33.65366364 92.76131439]
[42.62774277 104.79044342]
[50.63035965 117.48659515]
[63.90820694 110.50814056]
[77.18605042 103.52969360]
[90.46389771 96.55123901]
[95.56682587 90.31163788]
[103.99179077 89.56939697]
[106.23382568 85.85089874]
[109.24015808 83.29620361]
[112.55107880 82.00267029]
[115.72246552 81.90837860]
[118.37642670 82.81096649]
[132.13652039 76.83940125]
[145.89663696 70.86783600]
[159.65673828 64.89627838]
[173.41683960 58.92471313]
[187.17694092 52.95315170]
[200.93704224 46.98158646]
[214.69714355 41.01002502]
[228.45724487 35.03846359]
[242.21734619 29.06689835]
[255.97744751 23.09533691]
[269.73754883 17.12377357]
[264.67675781 2.99754047]
[260.55068970 -11.42944050]
[257.37701416 -26.09539223]
[255.16934204 -40.93751144]
[253.93713379 -55.89223862]
[253.68563843 -70.89553833]
[254.41596985 -85.88316345]
[256.12496948 -100.79093170]
[258.80532837 -115.55500793]
[262.44555664 -130.11216736]
[267.03009033 -144.40007019]
[272.53927612 -158.35754395]
[278.94952393 -171.92481995]
[286.23342896 -185.04379272]
[294.35974121 -197.65827942]
[303.29367065 -209.71426392]
[312.99697876 -221.16014099]
[323.42813110 -231.94686890]
[334.54241943 -242.02827454]
[346.29226685 -251.36117554]
[358.62738037 -259.90563965]
[371.49490356 -267.62503052]
[384.83975220 -274.48629761]
[398.60476685 -280.46011353]
[412.73104858 -285.52084351]
[427.15805054 -289.64682007]
[441.82400513 -292.82040405]
[456.66613770 -295.02798462]
[471.62088013 -296.26010132]
[486.62417603 -296.51150513]
[501.61181641 -295.78109741]
[516.51959229 -294.07199097]
[531.28363037 -291.39157104]
[545.84075928 -287.75125122]
[560.12866211 -283.16662598]
[574.08605957 -277.65734863]
[587.65332031 -271.24700928]
[600.77221680 -263.96304321]
[613.38665771 -255.83666992]
[625.44262695 -246.90264893]
[636.88842773 -237.19926453]
[647.67510986 -226.76806641]
[657.75646973 -215.65371704]
[667.08929443 -203.90380859]
[675.63366699 -191.56864929]
[683.35296631 -178.70108032]
[690.21417236 -165.35618591]
[696.18786621 -151.59112549]
[701.24853516 -137.46482849]
[705.37445068 -123.03780365]
[708.54791260 -108.37181854]
[710.75543213 -93.52967072]
[711.98748779 -78.57492828]
[712.23876953 -63.57162857]
[711.50830078 -48.58401108]
[709.79907227 -33.67626190]
[707.11859131 -18.91221809]
[703.47814941 -4.35509920]
[698.89349365 9.93275547]
[693.38409424 23.89016342]
[686.97369385 37.45735931]
[679.68963623 50.57624054]
[671.56317139 63.19063187]
[662.62908936 75.24652100]
[652.92565918 86.69227600]
[642.49438477 97.47888184]
[631.38000488 107.56015778]
[619.63000488 116.89292145]
[607.29479980 125.43722534]
[594.42718506 133.15646362]
[581.08227539 140.01759338]
[567.31713867 145.99122620]
[553.19085693 151.05178833]
[538.76379395 155.17759705]
[524.09777832 158.35101318]
[509.25561523 160.55841064]
[494.30087280 161.79035950]
[479.29757690 162.04158020]
[464.30996704 161.31100464]
[449.40222168 159.60174561]
[434.63818359 156.92112732]
[420.08108521 153.28062439]
[405.79327393 148.69584656]
[391.83587646 143.18640137]
[378.26873779 136.77590942]
[365.14990234 129.49179077]
[352.53555298 121.36525726]
[340.47970581 112.43110657]
[329.03402710 102.72758484]
[318.24746704 92.29625702]
[308.16625977 81.18178558]
[298.83355713 69.43176270]
[290.28933716 57.09650803]
[282.57015991 44.22884750]
[275.70910645 30.88387680]
[261.94900513 36.85543823]
[248.18891907 42.82700348]
[234.42881775 48.79856491]
[220.66870117 54.77012634]
[206.90859985 60.74169159]
[193.14849854 66.71325684]
[179.38839722 72.68481445]
[165.62829590 78.65637970]
[151.86819458 84.62794495]
[138.10809326 90.59950256]
[124.34798431 96.57106781]
[110.77178192 102.94966888]
[97.44235229 109.82908630]
[84.16450500 116.80754089]
[70.88665771 123.78598785]
[57.60881042 130.76443481]
[63.52733612 144.55593872]
[68.34553528 158.76927185]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[76 208]
[77 207]
[78 206]
[79 205]
[81 204]
[86 203]
[87 202]
[88 201]
[89 200]
[90 199]
[91 198]
[92 197]
[93 196]
[94 195]
[95 194]
[96 193]
[97 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
