%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[53.51855087 788.33654785]
[53.12970352 803.63714600]
[45.66474533 816.99877930]
[32.83906555 825.35101318]
[17.59990883 826.77465820]
[3.44912672 820.94250488]
[-6.36153746 809.19476318]
[-9.57766438 794.23095703]
[-5.46021128 779.48968506]
[5.04466057 768.35839844]
[19.52301025 763.39489746]
[21.74812698 748.56085205]
[23.97324371 733.72680664]
[26.19836044 718.89282227]
[28.42347908 704.05877686]
[30.64859581 689.22473145]
[32.87371445 674.39068604]
[27.10999489 660.65643311]
[36.80882263 648.15673828]
[39.03393936 633.32269287]
[24.22365761 627.08709717]
[11.51398182 617.23645020]
[1.76815557 604.43273926]
[-4.35008287 589.53875732]
[-6.42169619 573.56018066]
[-4.30104589 557.57714844]
[1.87388444 542.67181396]
[11.69045353 529.85461426]
[24.48893356 519.99603271]
[39.40684128 513.76745605]
[55.43706894 511.59533691]
[57.21953201 496.70162964]
[59.00199890 481.80792236]
[60.78446579 466.91418457]
[62.56692886 452.02047729]
[56.39684677 438.46395874]
[65.71921539 425.68099976]
[59.54913330 412.12448120]
[68.87149811 399.34152222]
[70.65396881 384.44778442]
[72.43643188 369.55407715]
[66.26634979 355.99755859]
[75.58871460 343.21459961]
[77.14923859 328.29598999]
[78.48747253 313.35580444]
[79.82570648 298.41561890]
[81.16394043 283.47543335]
[79.47206879 281.24032593]
[78.56362152 278.20037842]
[78.74956512 274.65060425]
[80.22846222 270.99310303]
[83.05255127 267.69482422]
[85.27766418 252.86079407]
[87.50278473 238.02674866]
[88.84101868 223.08656311]
[89.28762054 208.09321594]
[89.73423004 193.09985352]
[90.18083191 178.10650635]
[82.82590485 165.15451050]
[90.97065735 151.59082031]
[91.41725922 136.59747314]
[91.86386871 121.60412598]
[92.31047058 106.61077881]
[89.38359070 99.10038757]
[92.87699890 91.39798737]
[93.54678345 76.41294861]
[90.80368042 67.70012665]
[94.33973694 61.21028137]
[95.23255157 46.23687363]
[96.12536621 31.26346970]
[89.22318268 17.02723122]
[97.70430756 4.78305721]
[84.92362213 12.63506508]
[70.76487732 7.68228436]
[65.66538239 -6.42427826]
[73.38428497 -19.28579140]
[88.23150635 -21.42122459]
[99.26160431 -11.25794888]
[101.26561737 -26.12347794]
[95.44139862 -40.83364487]
[104.80970764 -52.41310883]
[106.81372070 -67.27863312]
[100.98950195 -81.98880768]
[110.35781097 -93.56826782]
[112.36182404 -108.43379974]
[114.36584473 -123.29932404]
[108.54161835 -138.00949097]
[117.90993500 -149.58895874]
[112.08570862 -164.29911804]
[121.45402527 -175.87858582]
[123.45803833 -190.74411011]
[125.46205139 -205.60964966]
[126.13183594 -220.59468079]
[125.46205139 -235.57972717]
[124.79226685 -250.56475830]
[116.44647217 -264.00567627]
[123.60774994 -277.06573486]
[109.41736603 -282.59320068]
[98.70664215 -293.41909790]
[93.33126831 -307.66781616]
[94.22257233 -322.87060547]
[101.22612762 -336.39355469]
[113.12851715 -345.89370728]
[127.86759186 -349.72512817]
[142.88970947 -347.22396851]
[155.59219360 -338.82357788]
[163.77427673 -325.97937012]
[166.01835632 -310.91668701]
[161.93563843 -296.24523926]
[152.23345947 -284.50695801]
[138.59278870 -277.73553467]
[146.89067078 -265.36645508]
[139.77729797 -251.23454285]
[140.44708252 -236.24951172]
[141.11686707 -221.26446533]
[148.67492676 -234.22116089]
[161.05755615 -242.68701172]
[175.87385559 -245.02740479]
[190.26301575 -240.79045105]
[201.44674683 -230.79423523]
[207.26562500 -216.96887207]
[206.59611511 -201.98382568]
[199.56750488 -188.73246765]
[187.53688049 -179.77342224]
[172.82720947 -176.83654785]
[158.27865601 -180.48892212]
[146.70034790 -190.02529907]
[140.32757568 -203.60563660]
[138.32356262 -188.74009705]
[136.31954956 -173.87457275]
[142.28710938 -160.22769165]
[132.77546692 -147.58494568]
[138.74302673 -133.93806458]
[129.23136902 -121.29531097]
[127.22735596 -106.42978668]
[125.22334290 -91.56425476]
[131.19090271 -77.91736603]
[121.67925262 -65.27462006]
[119.67523956 -50.40909576]
[125.64279938 -36.76221085]
[116.13114929 -24.11946297]
[114.12713623 -9.25393581]
[112.67771149 5.67587328]
[119.64375305 18.84111214]
[111.09877014 32.15628433]
[110.20595551 47.12969208]
[109.31314087 62.10309601]
[108.53182220 77.08273315]
[107.86203766 92.06777191]
[107.30382538 107.05738068]
[106.85721588 122.05073547]
[106.41061401 137.04408264]
[105.96400452 152.03742981]
[113.28699493 166.06185913]
[105.17418671 178.55311584]
[104.72757721 193.54646301]
[104.28097534 208.53981018]
[103.83436584 223.53317261]
[114.04119873 212.54132080]
[128.73686218 209.53507996]
[142.44023132 215.63569641]
[150.04029846 228.56779480]
[148.70242310 243.50801086]
[138.92559814 254.88401794]
[124.35633087 258.45285034]
[110.42861176 252.88342285]
[102.33682251 240.25186157]
[100.11170959 255.08590698]
[97.88658905 269.91995239]
[96.10412598 284.81365967]
[94.76589203 299.75384521]
[93.42765808 314.69403076]
[92.08942413 329.63421631]
[94.52014160 335.78265381]
[93.61654663 341.39340210]
[90.48242950 344.99707031]
[96.52502441 359.61889648]
[87.33014679 371.33654785]
[85.54768372 386.23025513]
[83.76521301 401.12396240]
[89.80780792 415.74578857]
[80.61293030 427.46347046]
[86.65551758 442.08529663]
[77.46064758 453.80294800]
[75.67818451 468.69665527]
[73.89571381 483.59039307]
[72.11325073 498.48410034]
[70.33078766 513.37780762]
[83.44139099 518.23919678]
[95.12812042 525.90228271]
[104.80220795 535.97674561]
[111.97724152 547.95098877]
[116.29356384 561.21801758]
[117.53636932 575.10620117]
[115.64632416 588.91320801]
[110.72244263 601.94183350]
[103.01685333 613.53466797]
[92.92193604 623.10772705]
[80.95034027 630.17980957]
[67.70891571 634.39642334]
[53.86798477 635.54779053]
[51.64286804 650.38183594]
[57.24743271 665.17706299]
[47.70775604 676.61578369]
[45.48263931 691.44982910]
[43.25752258 706.28387451]
[41.03240585 721.11791992]
[38.80728912 735.95196533]
[36.58217239 750.78601074]
[34.35705185 765.62005615]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 210]
[12 209]
[13 208]
[14 207]
[15 206]
[16 205]
[17 204]
[19 202]
[20 201]
[31 188]
[32 187]
[33 186]
[34 185]
[35 184]
[37 182]
[39 180]
[40 179]
[41 178]
[43 176]
[44 173]
[45 172]
[46 171]
[47 170]
[52 169]
[53 168]
[54 167]
[55 158]
[56 157]
[57 156]
[58 155]
[60 153]
[61 152]
[62 151]
[63 150]
[65 149]
[66 148]
[68 147]
[69 146]
[70 145]
[72 143]
[78 142]
[79 141]
[81 139]
[82 138]
[84 136]
[85 135]
[86 134]
[88 132]
[90 130]
[91 129]
[92 128]
[93 115]
[94 114]
[95 113]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
