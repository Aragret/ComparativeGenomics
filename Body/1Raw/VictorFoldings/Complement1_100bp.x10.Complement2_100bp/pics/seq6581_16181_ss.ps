%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[56.29819107 268.17166138]
[57.58052826 283.12829590]
[57.43532944 298.13906860]
[55.86390305 313.06808472]
[52.88048172 327.78012085]
[48.51208878 342.14193726]
[42.79828262 356.02346802]
[35.79080582 369.29901123]
[27.55312920 381.84832764]
[18.15985107 393.55776978]
[7.69604158 404.32131958]
[-3.74353600 414.04144287]
[-16.05528069 422.63012695]
[-29.12769127 430.00961304]
[-42.84238052 436.11306763]
[-57.07514572 440.88519287]
[-71.69708252 444.28277588]
[-86.57578278 446.27505493]
[-101.57648468 446.84399414]
[-116.56333923 445.98443604]
[-131.40063477 443.70416260]
[-145.95397949 440.02383423]
[-160.09156799 434.97674561]
[-173.68539429 428.60864258]
[-186.61233521 420.97720337]
[-198.75531006 412.15148926]
[-210.00434875 402.21148682]
[-220.25758362 391.24719238]
[-229.42216492 379.35791016]
[-237.41508484 366.65127563]
[-244.16394043 353.24243164]
[-249.60763550 339.25274658]
[-253.69686890 324.80895996]
[-256.39459229 310.04187012]
[-257.67639160 295.08520508]
[-257.53063965 280.07443237]
[-255.95866394 265.14547729]
[-252.97471619 250.43354797]
[-248.60578918 236.07188416]
[-242.89147949 222.19055176]
[-235.88352966 208.91526794]
[-227.64538574 196.36624146]
[-218.25167847 184.65715027]
[-207.78747559 173.89399719]
[-196.34754944 164.17430115]
[-184.03549194 155.58604431]
[-170.96281433 148.20703125]
[-157.24789429 142.10409546]
[-143.01496887 137.33248901]
[-128.39289856 133.93542480]
[-113.51412964 131.94367981]
[-98.51341248 131.37528992]
[-83.52658081 132.23539734]
[-68.68937683 134.51620483]
[-54.13616562 138.19708252]
[-39.99874878 143.24467468]
[-26.40515709 149.61326599]
[-13.47850037 157.24519348]
[-1.33584714 166.07133484]
[9.91283512 176.01174927]
[20.86874390 165.76635742]
[31.82465363 155.52096558]
[42.78056335 145.27557373]
[53.73647308 135.03018188]
[64.69238281 124.78479767]
[75.64829254 114.53940582]
[86.21533966 103.89339447]
[89.46533203 90.29452515]
[102.75278473 85.94306183]
[112.49874878 74.54059601]
[121.81362915 62.78334427]
[131.12850952 51.02609253]
[140.44340515 39.26884460]
[149.75828552 27.51159096]
[159.07316589 15.75434017]
[168.38804626 3.99708915]
[177.70292664 -7.76016235]
[187.01780701 -19.51741409]
[175.85867310 -29.54837608]
[165.34474182 -40.25369644]
[155.51670837 -51.59195328]
[146.41258240 -63.51929092]
[138.06758118 -75.98955536]
[130.51399231 -88.95450592]
[123.78105164 -102.36397552]
[117.89479828 -116.16609955]
[112.87801361 -130.30746460]
[108.75009155 -144.73338318]
[105.52701569 -159.38801575]
[103.22124481 -174.21467590]
[101.84171295 -189.15600586]
[101.39374542 -204.15420532]
[101.87908173 -219.15122986]
[103.29583740 -234.08908081]
[105.63854218 -248.90995789]
[108.89812469 -263.55651855]
[113.06197357 -277.97207642]
[118.11398315 -292.10092163]
[124.03460693 -305.88833618]
[130.80094910 -319.28097534]
[138.38681030 -332.22708130]
[146.76284790 -344.67651367]
[155.89666748 -356.58111572]
[165.75292969 -367.89486694]
[176.29350281 -378.57394409]
[187.47760010 -388.57705688]
[199.26194763 -397.86553955]
[211.60096741 -406.40338135]
[224.44691467 -414.15762329]
[237.75009155 -421.09823608]
[251.45903015 -427.19836426]
[265.52069092 -432.43438721]
[279.88067627 -436.78607178]
[294.48342896 -440.23660278]
[309.27246094 -442.77261353]
[324.19055176 -444.38424683]
[339.17996216 -445.06533813]
[354.18273926 -444.81323242]
[369.14080811 -443.62887573]
[383.99630737 -441.51687622]
[398.69177246 -438.48538208]
[413.17031860 -434.54617310]
[427.37600708 -429.71441650]
[441.25378418 -424.00885010]
[454.75003052 -417.45156860]
[467.81246948 -410.06787109]
[480.39062500 -401.88638306]
[492.43579102 -392.93875122]
[503.90139771 -383.25958252]
[514.74310303 -372.88632202]
[524.91888428 -361.85910034]
[534.38940430 -350.22055054]
[543.11810303 -338.01577759]
[551.07110596 -325.29193115]
[558.21765137 -312.09826660]
[564.53021240 -298.48580933]
[569.98419189 -284.50726318]
[574.55865479 -270.21664429]
[578.23577881 -255.66931152]
[581.00140381 -240.92150879]
[582.84478760 -226.03028870]
[583.75878906 -211.05326843]
[583.73999023 -196.04840088]
[582.78833008 -181.07371521]
[580.90753174 -166.18717957]
[578.10485840 -151.44636536]
[574.39117432 -136.90829468]
[569.78088379 -122.62923431]
[564.29180908 -108.66442108]
[557.94512939 -95.06787109]
[550.76538086 -81.89219666]
[542.78045654 -69.18836975]
[534.02117920 -57.00554657]
[524.52142334 -45.39084625]
[514.31793213 -34.38921738]
[503.45025635 -24.04321289]
[491.96035767 -14.39286709]
[479.89276123 -5.47551298]
[467.29409790 2.67435002]
[454.21313477 10.02519131]
[440.70046997 16.54857063]
[426.80838013 22.21925163]
[412.59063721 27.01529503]
[398.10220337 30.91814613]
[383.39916992 33.91270447]
[368.53842163 35.98738480]
[353.57742310 37.13415909]
[338.57406616 37.34859467]
[323.58642578 36.62985611]
[308.67242432 34.98073196]
[293.88983154 32.40759659]
[279.29577637 28.92040443]
[264.94677734 24.53265190]
[250.89830017 19.26130867]
[237.20472717 13.12677288]
[223.91902161 6.15277624]
[211.09259033 -1.63369977]
[198.77507019 -10.20253086]
[189.46017456 1.55472064]
[180.14529419 13.31197166]
[170.83041382 25.06922340]
[161.51553345 36.82647324]
[152.20065308 48.58372498]
[142.88577271 60.34097672]
[133.57087708 72.09822845]
[124.25600433 83.85547638]
[139.22943115 84.74800110]
[147.99182129 96.92257690]
[144.08389282 111.40456390]
[130.38639832 117.51838684]
[116.99663544 110.75714874]
[113.78466034 96.10660553]
[110.53466797 109.70547485]
[97.24721527 114.05693817]
[112.11278534 116.06066132]
[119.94541168 128.85324097]
[114.97117615 143.00445557]
[100.85690308 148.08256531]
[88.00710297 140.34417725]
[85.89368439 125.49531555]
[74.93777466 135.74070740]
[63.98186493 145.98609924]
[53.02595520 156.23149109]
[42.07004547 166.47688293]
[31.11413574 176.72227478]
[20.15822601 186.96766663]
[29.32323456 198.85662842]
[37.31660843 211.56294250]
[44.06596375 224.97155762]
[49.51016998 238.96102905]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 206]
[61 205]
[62 204]
[63 203]
[64 202]
[65 201]
[66 200]
[67 194]
[69 192]
[70 186]
[71 185]
[72 184]
[73 183]
[74 182]
[75 181]
[76 180]
[77 179]
[78 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
