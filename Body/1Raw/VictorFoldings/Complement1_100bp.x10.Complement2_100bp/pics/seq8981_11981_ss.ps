%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[149.05955505 247.49200439]
[151.16436768 232.63232422]
[154.44314575 217.98686218]
[158.87515259 203.64819336]
[164.43235779 189.70697021]
[171.07965088 176.25135803]
[178.77497864 163.36639404]
[166.54849243 154.67657471]
[154.32200623 145.98675537]
[142.09552002 137.29692078]
[129.86903381 128.60710144]
[117.45153046 120.19248199]
[104.84922028 112.05726624]
[92.01028442 104.30088043]
[78.94609833 96.93019104]
[63.12494659 96.88784027]
[55.84213257 83.89514923]
[42.77794647 76.52445984]
[29.71376228 69.15377045]
[21.55790329 81.74832916]
[12.64939880 93.82224274]
[3.02138877 105.33059692]
[-7.29031038 116.23058319]
[-18.24733734 126.48165131]
[-29.80893326 136.04566956]
[-41.93208313 144.88705444]
[-54.57169342 152.97291565]
[-67.68074036 160.27316284]
[-81.21045685 166.76066589]
[-95.11051178 172.41127014]
[-109.32920074 177.20394897]
[-123.81362152 181.12089539]
[-138.50988770 184.14752197]
[-153.36334229 186.27256775]
[-168.31872559 187.48812866]
[-183.32038879 187.78970337]
[-198.31253052 187.17613220]
[-213.23937988 185.64973450]
[-228.04541016 183.21617126]
[-242.67555237 179.88449097]
[-257.07534790 175.66709900]
[-271.19125366 170.57968140]
[-284.97076416 164.64115906]
[-298.36260986 157.87362671]
[-311.31695557 150.30226135]
[-323.78564453 141.95521545]
[-335.72225952 132.86357117]
[-347.08239746 123.06112671]
[-357.82382202 112.58435059]
[-367.90655518 101.47222137]
[-377.29309082 89.76607513]
[-385.94848633 77.50946045]
[-393.84060669 64.74797821]
[-400.94003296 51.52909088]
[-407.22039795 37.90198135]
[-412.65829468 23.91734505]
[-417.23352051 9.62720299]
[-420.92904663 -4.91528368]
[-423.73114014 -19.65601540]
[-425.62933350 -34.54015732]
[-426.61663818 -49.51233292]
[-426.68933105 -64.51685333]
[-425.84713745 -79.49789429]
[-424.09320068 -94.39972687]
[-421.43405151 -109.16690826]
[-417.87957764 -123.74452209]
[-413.44302368 -138.07830811]
[-408.14086914 -152.11497498]
[-401.99282837 -165.80229187]
[-395.02178955 -179.08934021]
[-387.25369263 -191.92668152]
[-378.71743774 -204.26657104]
[-369.44473267 -216.06311035]
[-359.47015381 -227.27239990]
[-348.83071899 -237.85275269]
[-337.56607056 -247.76478577]
[-325.71810913 -256.97164917]
[-313.33090210 -265.43911743]
[-300.45050049 -273.13562012]
[-287.12484741 -280.03256226]
[-273.40353394 -286.10430908]
[-259.33755493 -291.32824707]
[-244.97929382 -295.68496704]
[-230.38212585 -299.15820312]
[-215.60035706 -301.73510742]
[-200.68899536 -303.40606689]
[-185.70349121 -304.16482544]
[-170.69961548 -304.00860596]
[-155.73316956 -302.93798828]
[-140.85981750 -300.95693970]
[-126.13491821 -298.07284546]
[-111.61322784 -294.29641724]
[-97.34877777 -289.64169312]
[-83.39463043 -284.12603760]
[-69.80269623 -277.76992798]
[-56.62353897 -270.59701538]
[-43.90618515 -262.63397217]
[-31.69794655 -253.91046143]
[-20.04423714 -244.45890808]
[-8.98841095 -234.31448364]
[1.42840421 -223.51490784]
[11.16745663 -212.10035706]
[20.19251633 -200.11332703]
[28.47001076 -187.59837341]
[35.96914291 -174.60206604]
[42.66201782 -161.17276001]
[48.52373886 -147.36041260]
[53.53249741 -133.21640015]
[57.66966248 -118.79333496]
[60.91984177 -104.14488220]
[63.27094650 -89.32553101]
[64.71422577 -74.39041138]
[65.24431610 -59.39508057]
[64.85924530 -44.39532852]
[63.56043625 -29.44695091]
[61.35273361 -14.60556030]
[58.24434280 0.07363479]
[54.24682617 14.53602505]
[49.37506104 28.72780991]
[43.64716721 42.59619522]
[37.08444977 56.08958817]
[50.14863586 63.46027756]
[63.21282196 70.83096313]
[78.09953308 70.34611511]
[86.31678772 83.86600494]
[99.38097382 91.23669434]
[102.37577820 90.67045593]
[105.64280701 91.18139648]
[108.78348541 92.87242889]
[111.36679840 95.69779968]
[112.98443604 99.45495605]
[125.58674622 107.59017181]
[130.80027771 107.84736633]
[134.97624207 109.87582397]
[137.61369324 112.98370361]
[138.55885315 116.38061523]
[150.78533936 125.07044220]
[163.01182556 133.76026917]
[175.23831177 142.45008850]
[187.46479797 151.13990784]
[197.10345459 139.63615417]
[207.62561035 128.93455505]
[218.96476746 119.10278320]
[231.04920959 110.20299530]
[243.80255127 102.29145813]
[257.14413452 95.41819000]
[270.98965454 89.62665558]
[285.25155640 84.95346069]
[299.83963013 81.42815399]
[314.66168213 79.07302856]
[329.62402344 77.90296936]
[344.63198853 77.92537689]
[359.59075928 79.14010620]
[374.40573120 81.53948212]
[388.98321533 85.10832977]
[403.23107910 89.82408905]
[417.05923462 95.65694427]
[430.38024902 102.57001495]
[443.10992432 110.51959991]
[455.16772461 119.45543671]
[466.47747803 129.32101440]
[476.96762085 140.05398560]
[486.57189941 151.58647156]
[495.22952271 163.84558105]
[502.88580322 176.75376892]
[509.49230957 190.22946167]
[515.00726318 204.18743896]
[519.39581299 218.53947449]
[522.63024902 233.19480896]
[524.69006348 248.06077576]
[525.56219482 263.04342651]
[525.24127197 278.04797363]
[523.72918701 292.97961426]
[521.03558350 307.74392700]
[517.17742920 322.24752808]
[512.17919922 336.39877319]
[506.07241821 350.10815430]
[498.89572144 363.28903198]
[490.69448853 375.85803223]
[481.52053833 387.73568726]
[471.43191528 398.84695435]
[460.49240112 409.12152100]
[448.77114868 418.49444580]
[436.34225464 426.90652466]
[423.28430176 434.30447388]
[409.67984009 440.64160156]
[395.61492920 445.87780762]
[381.17843628 449.98001099]
[366.46166992 452.92224121]
[351.55764771 454.68591309]
[336.56063843 455.25985718]
[321.56539917 454.64050293]
[306.66680908 452.83169556]
[291.95901489 449.84490967]
[277.53503418 445.69903564]
[263.48602295 440.42025757]
[249.90081787 434.04196167]
[236.86534119 426.60446167]
[224.46197510 418.15481567]
[212.76914978 408.74642944]
[201.86077881 398.43875122]
[191.80586243 387.29699707]
[182.66793823 375.39160156]
[174.50480652 362.79782104]
[167.36805725 349.59530640]
[161.30281067 335.86746216]
[156.34744263 321.70117188]
[152.53324890 307.18594360]
[149.88435364 292.41354370]
[148.41752625 277.47738647]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 140]
[8 139]
[9 138]
[10 137]
[11 136]
[12 132]
[13 131]
[14 126]
[15 125]
[17 123]
[18 122]
[19 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
