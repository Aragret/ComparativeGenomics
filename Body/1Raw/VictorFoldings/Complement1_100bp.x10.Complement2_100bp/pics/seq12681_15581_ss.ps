%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUUxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[61.98555374 578.37536621]
[48.81058884 585.56372070]
[35.09353638 591.65429688]
[20.92568207 596.60656738]
[6.40131569 600.38751221]
[-8.38290691 602.97198486]
[-23.32859612 604.34283447]
[-38.33628845 604.49084473]
[-53.30611420 603.41516113]
[-68.13844299 601.12280273]
[-82.73457336 597.62915039]
[-96.99736023 592.95733643]
[-110.83189392 587.13854980]
[-124.14610291 580.21142578]
[-136.85139465 572.22216797]
[-148.86318970 563.22387695]
[-160.10156250 553.27642822]
[-170.49174500 542.44604492]
[-179.96455383 530.80480957]
[-188.45697021 518.43017578]
[-195.91247559 505.40447998]
[-202.28144836 491.81445312]
[-207.52149963 477.75048828]
[-211.59777832 463.30624390]
[-214.48313904 448.57778931]
[-216.15838623 433.66314697]
[-216.61236572 418.66159058]
[-215.84205627 403.67294312]
[-213.85258484 388.79696655]
[-210.65721130 374.13262939]
[-206.27716064 359.77755737]
[-200.74162292 345.82727051]
[-194.08740234 332.37460327]
[-186.35881042 319.50909424]
[-177.60726929 307.31634521]
[-167.89100647 295.87750244]
[-157.27470398 285.26867676]
[-145.82901001 275.56051636]
[-133.63008118 266.81756592]
[-120.75910187 259.09805298]
[-107.30174255 252.45333862]
[-93.34754944 246.92764282]
[-78.98939514 242.55773926]
[-64.32281494 239.37271118]
[-49.44543457 237.39375305]
[-34.45625305 236.63401794]
[-19.45502090 237.09858704]
[-4.54157114 238.78436279]
[10.18484688 241.68011475]
[24.62623024 245.76658630]
[29.87294960 231.71411133]
[35.11966705 217.66165161]
[40.36638641 203.60917664]
[45.61310196 189.55670166]
[50.85982132 175.50422668]
[56.10654068 161.45176697]
[61.35326004 147.39929199]
[66.59997559 133.34681702]
[55.64232254 143.59034729]
[42.50605774 150.83178711]
[27.99447060 154.62834167]
[12.99494648 154.74783325]
[-1.57528591 151.18296814]
[-14.82525158 144.15171814]
[-25.94470978 134.08406067]
[-34.25370407 121.59564209]
[-39.24412918 107.45012665]
[-40.61082458 92.51251984]
[-38.27021790 77.69625854]
[-32.36543274 63.90736771]
[-23.25755310 51.98904037]
[-11.50352573 42.67008591]
[2.17788291 36.52036667]
[16.95005035 33.91593933]
[31.90965462 35.01605988]
[46.14190674 39.75346375]
[58.77650070 47.83844757]
[69.04083252 58.77661896]
[76.30722046 71.89910126]
[80.13133240 86.40345001]
[80.27931976 101.40272522]
[76.74212646 115.97972870]
[86.40293884 104.50502777]
[89.04246521 90.77460480]
[102.12236023 85.83415985]
[111.78317261 74.35945892]
[121.44398499 62.88476181]
[131.10479736 51.41006088]
[139.61161804 39.05555344]
[146.88485718 25.93685913]
[154.15808105 12.81816483]
[161.43130493 -0.30052966]
[168.70454407 -13.41922379]
[165.90707397 -26.01037216]
[172.23504639 -36.78722763]
[183.82577515 -40.24864578]
[191.29351807 -53.25759888]
[198.76126099 -66.26654816]
[206.22900391 -79.27550507]
[194.26435852 -88.35710907]
[183.55931091 -98.89420319]
[174.28964233 -110.71375275]
[166.60758972 -123.62166595]
[160.63926697 -137.40599060]
[156.48271179 -151.84036255]
[154.20616150 -166.68777466]
[153.84700012 -181.70442200]
[155.41111755 -196.64369202]
[158.87284851 -211.26028442]
[164.17533875 -225.31417847]
[171.23150635 -238.57460022]
[179.92550659 -250.82379150]
[190.11454773 -261.86062622]
[201.63134766 -271.50384521]
[214.28675842 -279.59512329]
[227.87298584 -286.00158691]
[242.16693115 -290.61804199]
[256.93386841 -293.36865234]
[271.93130493 -294.20828247]
[286.91299438 -293.12313843]
[301.63290405 -290.13101196]
[315.84930420 -285.28109741]
[329.32879639 -278.65295410]
[341.84997559 -270.35549927]
[353.20727539 -260.52493286]
[363.21420288 -249.32269287]
[371.70642090 -236.93275452]
[378.54446411 -223.55854797]
[383.61605835 -209.41969299]
[386.83792114 -194.74835205]
[388.15713501 -179.78547668]
[387.55209351 -164.77673340]
[385.03265381 -149.96859741]
[380.64022827 -135.60423279]
[374.44696045 -121.91950989]
[366.55453491 -109.13914490]
[357.09252930 -97.47300720]
[346.21633911 -87.11266327]
[334.10455322 -78.22823334]
[320.95605469 -70.96561432]
[306.98678589 -65.44406128]
[292.42608643 -61.75425339]
[277.51309204 -59.95676422]
[262.49267578 -60.08112335]
[247.61149597 -62.12528229]
[233.11389160 -66.05567169]
[219.23794556 -71.80776215]
[211.77021790 -58.79880905]
[204.30247498 -45.78985596]
[196.83473206 -32.78090668]
[197.82385254 -15.25981522]
[181.82322693 -6.14599419]
[174.55000305 6.97269964]
[167.27677917 20.09139442]
[160.00354004 33.21008682]
[152.73031616 46.32878113]
[165.79483032 38.95868683]
[180.71963501 37.45849991]
[194.98960876 42.08103180]
[206.20002747 52.04730606]
[212.46173096 65.67782593]
[212.71951294 80.67560577]
[206.92994690 94.51326752]
[196.06864929 104.85891724]
[181.96597290 109.96912384]
[166.99842834 108.98274231]
[153.68833923 102.06597900]
[144.27868652 90.38444519]
[140.35514832 75.90666962]
[142.57949829 61.07087326]
[132.91868591 72.54557037]
[123.25787354 84.02027130]
[113.59706116 95.49497223]
[110.95753479 109.22539520]
[97.87763977 114.16584015]
[88.21682739 125.64054108]
[80.65245056 138.59353638]
[75.40573120 152.64601135]
[70.15901184 166.69848633]
[64.91229248 180.75094604]
[59.66557693 194.80342102]
[54.41885757 208.85589600]
[49.17213821 222.90837097]
[43.92541885 236.96083069]
[38.67870331 251.01330566]
[52.26452637 257.39126587]
[65.28527832 264.85534668]
[77.65431213 273.35592651]
[89.28929901 282.83642578]
[100.11281586 293.23373413]
[110.05284119 304.47869873]
[119.04321289 316.49642944]
[127.02410889 329.20697021]
[133.94241333 342.52575684]
[139.75207520 356.36413574]
[144.41444397 370.63000488]
[147.89849854 385.22842407]
[150.18104553 400.06228638]
[151.24688721 415.03280640]
[151.08892822 430.04040527]
[149.70823669 444.98516846]
[147.11399841 459.76770020]
[143.32345581 474.28955078]
[138.36186218 488.45413208]
[132.26222229 502.16717529]
[125.06512451 515.33740234]
[116.81848145 527.87713623]
[107.57715607 539.70300293]
[97.40266418 550.73626709]
[86.36270905 560.90344238]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 185]
[51 184]
[52 183]
[53 182]
[54 181]
[55 180]
[56 179]
[57 178]
[58 177]
[82 176]
[83 175]
[85 173]
[86 172]
[87 171]
[88 170]
[89 156]
[90 155]
[91 154]
[92 153]
[93 152]
[96 150]
[97 149]
[98 148]
[99 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
