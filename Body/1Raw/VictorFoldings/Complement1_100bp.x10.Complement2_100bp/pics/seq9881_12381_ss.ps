%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[86.70635223 601.51538086]
[71.71544647 602.54174805]
[56.73106384 601.42419434]
[42.05826569 598.18536377]
[27.99577141 592.89135742]
[14.82987976 585.64978027]
[2.82862806 576.60815430]
[-7.76365328 565.95056152]
[-16.73131752 553.89398193]
[-23.89179802 540.68383789]
[-29.09931183 526.58905029]
[-32.24784470 511.89660645]
[-33.27329254 496.90563965]
[-32.15478516 481.92132568]
[-28.91508675 467.24871826]
[-23.62015533 453.18655396]
[-16.37779236 440.02111816]
[-7.33543873 428.02041626]
[3.32281208 417.42880249]
[15.37997246 408.46188354]
[28.59057426 401.30221558]
[42.68566895 396.09558105]
[57.37829208 392.94796753]
[72.36932373 391.92343140]
[73.48497772 376.96499634]
[74.60062408 362.00653076]
[67.83136749 348.73904419]
[76.57364655 335.55255127]
[69.80438995 322.28506470]
[78.54666901 309.09860229]
[79.66231537 294.14013672]
[80.77796173 279.18167114]
[65.98269653 274.71798706]
[52.54138947 267.07791138]
[41.12629318 256.63995361]
[32.30910873 243.92269897]
[26.53235435 229.55900574]
[24.08716393 214.26445007]
[25.09860420 198.80175781]
[29.51929092 183.94268799]
[37.13159561 170.42962646]
[47.55836105 158.93836975]
[60.28157806 150.04441833]
[74.66813660 144.19412231]
[90.00129700 141.68226624]
[90.89411926 126.70886230]
[91.78693390 111.73545837]
[85.70145416 99.14742279]
[93.23966217 87.37172699]
[94.13247681 72.39832306]
[95.02529144 57.42491913]
[88.12311554 43.18867874]
[96.60423279 30.94450569]
[96.26925659 15.94824600]
[94.70874023 1.02964091]
[93.14821625 -13.88896370]
[91.58769226 -28.80756760]
[90.02716827 -43.72617340]
[88.46664429 -58.64477921]
[85.69103241 -73.38574219]
[81.71894073 -87.85026550]
[70.91555786 -94.89652252]
[67.90496826 -107.02583313]
[73.77175903 -117.60446167]
[70.01545715 -132.12651062]
[66.25915527 -146.64857483]
[62.50285339 -161.17063904]
[58.74655533 -175.69270325]
[43.89336014 -173.49844360]
[28.89107895 -172.89543152]
[13.90969372 -173.89051819]
[-0.88104314 -176.47241211]
[-15.31354141 -180.61187744]
[-29.22427177 -186.26197815]
[-42.45561218 -193.35871887]
[-54.85763931 -201.82168579]
[-66.28983307 -211.55497742]
[-76.62265778 -222.44831848]
[-85.73903656 -234.37826538]
[-93.53566742 -247.20967102]
[-99.92420959 -260.79711914]
[-104.83228302 -274.98663330]
[-108.20426941 -289.61749268]
[-110.00196075 -304.52389526]
[-110.20498657 -319.53689575]
[-108.81105804 -334.48645020]
[-105.83595276 -349.20315552]
[-101.31339264 -363.52020264]
[-95.29462433 -377.27545166]
[-87.84783173 -390.31298828]
[-79.05740356 -402.48510742]
[-69.02293396 -413.65386963]
[-57.85813141 -423.69277954]
[-45.68949509 -432.48800659]
[-32.65490723 -439.93997192]
[-18.90205574 -445.96417236]
[-4.58677435 -450.49240112]
[10.12873363 -453.47332764]
[25.07773018 -454.87319946]
[40.09083176 -454.67611694]
[54.99793243 -452.88430786]
[69.63011932 -449.51812744]
[83.82159424 -444.61566162]
[97.41156769 -438.23251343]
[110.24604034 -430.44094849]
[122.17960358 -421.32928467]
[133.07702637 -411.00079346]
[142.81484985 -399.57244873]
[151.28273010 -387.17376709]
[158.38470459 -373.94522095]
[164.04031372 -360.03674316]
[168.18548584 -345.60589600]
[170.77323914 -330.81616211]
[171.77424622 -315.83517456]
[171.17718506 -300.83267212]
[168.98881531 -285.97860718]
[165.23391724 -271.44131470]
[159.95504761 -257.38549805]
[153.21202087 -243.97044373]
[145.08125305 -231.34814453]
[135.65484619 -219.66160583]
[125.03961945 -209.04327393]
[113.35585785 -199.61343384]
[100.73594666 -191.47895813]
[87.32286835 -184.73199463]
[73.26861572 -179.44898987]
[77.02491760 -164.92694092]
[80.78121185 -150.40487671]
[84.53751373 -135.88281250]
[88.29381561 -121.36075592]
[101.25115967 -109.52546692]
[96.18346405 -91.82235718]
[100.15555573 -77.35783386]
[105.03110504 -91.54335785]
[115.87697601 -101.90516663]
[130.27017212 -106.12841034]
[144.99522400 -103.26959991]
[156.76252747 -93.96739960]
[162.94320679 -80.29994965]
[162.15650940 -65.32059479]
[154.57817078 -52.37575912]
[141.90121460 -44.35734940]
[126.95771027 -43.05670166]
[113.08607483 -48.76438141]
[103.38524628 -60.20529938]
[104.94577026 -45.28669739]
[106.50629425 -30.36809158]
[108.06681824 -15.44948673]
[109.62734222 -0.53088206]
[111.18786621 14.38772297]
[118.31109619 1.18698037]
[130.70130920 -7.26776409]
[145.59048462 -9.08769894]
[159.65237427 -3.86624670]
[169.74548340 7.23010731]
[173.61500549 21.72241020]
[170.39646912 36.37304306]
[160.80889893 47.90901566]
[146.99420166 53.75316620]
[132.03860474 52.59989548]
[119.28322601 44.70684433]
[111.57764435 31.83732033]
[118.54368591 45.00255966]
[109.99870300 58.31773376]
[109.10588074 73.29113770]
[108.21306610 88.26454163]
[114.29854584 100.85257721]
[106.76033783 112.62827301]
[105.86752319 127.60167694]
[104.97470856 142.57508850]
[119.00797272 146.52755737]
[131.90371704 153.31558228]
[143.09657288 162.63871765]
[152.09640503 174.08540344]
[158.50984192 187.15119934]
[162.05737305 201.26095581]
[162.58560181 215.79418945]
[160.07385254 230.11230469]
[154.63494873 243.58670044]
[146.51022339 255.62635803]
[136.05868530 265.70373535]
[123.74127960 273.37796021]
[110.10047150 278.31396484]
[95.73641968 280.29733276]
[94.62076569 295.25579834]
[93.50511932 310.21423340]
[100.19458008 324.55166626]
[91.53209686 336.66821289]
[98.22155762 351.00564575]
[89.55907440 363.12219238]
[88.44342804 378.08062744]
[87.32778168 393.03909302]
[102.00097656 396.27606201]
[116.06412506 401.56838989]
[129.23091125 408.80828857]
[141.23329163 417.84841919]
[151.82688904 428.50469971]
[160.79605103 440.56021118]
[167.95816040 453.76947021]
[173.16741943 467.86361694]
[176.31776428 482.55563354]
[177.34507751 497.54647827]
[176.22842407 512.53094482]
[172.99053955 527.20391846]
[167.69734192 541.26678467]
[160.45661926 554.43310547]
[151.41574097 566.43493652]
[140.75880432 577.02783203]
[128.70275879 585.99627686]
[115.49303436 593.15753174]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 192]
[25 191]
[26 190]
[28 188]
[30 186]
[31 185]
[32 184]
[45 170]
[46 169]
[47 168]
[49 166]
[50 165]
[51 164]
[53 162]
[54 150]
[55 149]
[56 148]
[57 147]
[58 146]
[59 145]
[60 133]
[61 132]
[64 130]
[65 129]
[66 128]
[67 127]
[68 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
