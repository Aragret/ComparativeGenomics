%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[84.97303772 471.98599243]
[84.45052338 456.96011353]
[86.40847015 442.05319214]
[90.79344940 427.67187500]
[97.48584747 414.20852661]
[106.30308533 402.03042603]
[117.00463104 391.46981812]
[129.29852295 382.81475830]
[142.84939575 376.30139160]
[138.66238403 361.89761353]
[134.47537231 347.49383545]
[130.28836060 333.09005737]
[126.10134125 318.68624878]
[121.91432953 304.28247070]
[117.72731781 289.87869263]
[102.87769318 288.32376099]
[89.71905518 281.18264771]
[80.27143860 269.51614380]
[75.99871063 255.08244324]
[77.58183289 240.07220459]
[84.81051636 226.77600098]
[96.61059570 217.23483276]
[92.42358398 202.83105469]
[88.23657227 188.42726135]
[85.61694336 203.19674683]
[79.70552063 216.98278809]
[70.81240082 229.06221008]
[59.40410995 238.80136108]
[46.07909393 245.68931580]
[31.53636360 249.36476135]
[16.53879547 249.63490295]
[1.87313557 246.48554993]
[-11.69128513 240.08190918]
[-23.44290543 230.75993347]
[-32.76525879 219.00859070]
[-39.16931152 205.44438171]
[-42.31911850 190.77880859]
[-42.04945374 175.78123474]
[-38.37445450 161.23838806]
[-31.48691177 147.91316223]
[-21.74812698 136.50456238]
[-9.66897964 127.61106873]
[4.11688185 121.69921875]
[18.88628006 119.07913208]
[33.86444092 119.88824463]
[48.26564407 124.08412933]
[61.33442307 131.44667053]
[72.38522339 141.58963013]
[80.83834076 153.98095703]
[86.25075531 167.97221375]
[87.58898926 153.03202820]
[88.92722321 138.09184265]
[90.26545715 123.15165710]
[91.60369110 108.21147156]
[82.64244843 120.24044037]
[69.60340118 127.65551758]
[54.68386841 129.20713806]
[40.39804840 124.63381195]
[29.15335083 114.70623016]
[22.84470558 101.09737396]
[22.53523254 86.10057068]
[28.27708054 72.24303436]
[39.10264969 61.86001968]
[53.18763733 56.70123291]
[68.15848541 57.63603210]
[81.49233246 64.50687408]
[90.94219208 76.15591431]
[94.91570282 90.62173462]
[99.10271454 76.21794891]
[103.28972626 61.81416702]
[107.47673798 47.41038513]
[111.66374969 33.00660324]
[101.14164734 43.69703674]
[87.74800873 50.45058441]
[72.89629364 52.55453110]
[58.15383911 49.78683853]
[45.07645798 42.43959427]
[35.04423141 31.28816223]
[29.11588287 17.50938416]
[27.91704941 2.55736780]
[31.57424545 -11.98996544]
[39.70151901 -24.59740257]
[51.44117737 -33.93444824]
[65.55430603 -39.01574326]
[80.55151367 -39.30504608]
[94.85011292 -34.77182388]
[106.94113922 -25.89448166]
[115.54858398 -13.60986614]
[119.76409912 0.78559971]
[119.14276886 15.77291489]
[126.80336761 2.87658834]
[134.46395874 -10.01973820]
[142.12455750 -22.91606522]
[149.78515625 -35.81239319]
[150.18081665 -51.62865067]
[163.33290100 -58.61949921]
[170.99349976 -71.51582336]
[178.65408325 -84.41215515]
[186.31468201 -97.30847931]
[193.97528076 -110.20480347]
[182.17120361 -119.49559021]
[171.68084717 -130.24768066]
[162.68370056 -142.27708435]
[155.33374023 -155.37796021]
[149.75672913 -169.32615662]
[146.04808044 -183.88296509]
[144.27127075 -198.79933167]
[144.45669556 -213.82000732]
[146.60119629 -228.68797302]
[150.66804504 -243.14880371]
[156.58769226 -256.95504761]
[164.25881958 -269.87051392]
[173.55015564 -281.67416382]
[184.30274963 -292.16400146]
[196.33258057 -301.16055298]
[209.43380737 -308.50988770]
[223.38226318 -314.08624268]
[237.93925476 -317.79418945]
[252.85571289 -319.57031250]
[267.87637329 -319.38415527]
[282.74423218 -317.23895264]
[297.20486450 -313.17141724]
[311.01083374 -307.25112915]
[323.92593384 -299.57937622]
[335.72912598 -290.28747559]
[346.21847534 -279.53439331]
[355.21444702 -267.50411987]
[362.56317139 -254.40254211]
[368.13885498 -240.45382690]
[371.84613037 -225.89665222]
[373.62152100 -210.98011780]
[373.43466187 -195.95947266]
[371.28875732 -181.09172058]
[367.22052002 -166.63127136]
[361.29956055 -152.82557678]
[353.62719727 -139.91084290]
[344.33471680 -128.10809326]
[333.58114624 -117.61927032]
[321.55044556 -108.62385559]
[308.44851685 -101.27576447]
[294.49954224 -95.70073700]
[279.94219971 -91.99417114]
[265.02557373 -90.21949005]
[250.00492859 -90.40705872]
[235.13728333 -92.55367279]
[220.67703247 -96.62259674]
[206.87161255 -102.54421234]
[199.21101379 -89.64788055]
[191.55041504 -76.75155640]
[183.88981628 -63.85522842]
[176.22921753 -50.95890045]
[176.38150024 -36.06507492]
[162.68148804 -28.15179443]
[155.02088928 -15.25546837]
[147.36029053 -2.35914111]
[139.69969177 10.53718567]
[132.03909302 23.43351173]
[126.06752777 37.19361496]
[121.88051605 51.59739685]
[117.69351196 66.00118256]
[113.50650024 80.40496063]
[109.31948853 94.80874634]
[106.54387665 109.54970551]
[105.20564270 124.48989105]
[103.86740875 139.43008423]
[102.52917480 154.37025452]
[101.19094086 169.31044006]
[102.64035797 184.24024963]
[106.82736969 198.64404297]
[111.01438141 213.04782104]
[126.09044647 214.77639771]
[139.32048035 222.12550354]
[148.70355225 233.94799805]
[152.83424377 248.42297363]
[151.11302185 263.33612061]
[143.83312988 276.41851807]
[132.13110352 285.69168091]
[136.31811523 300.09545898]
[140.50512695 314.49923706]
[144.69213867 328.90304565]
[148.87915039 343.30682373]
[153.06616211 357.71060181]
[157.25317383 372.11437988]
[172.18405151 370.34841919]
[187.20196533 371.06427002]
[201.89718628 374.24234009]
[215.86883545 379.79598999]
[228.73574829 387.57366943]
[240.14691162 397.36322021]
[249.79101562 408.89755249]
[257.40496826 421.86203003]
[262.78106689 435.90295410]
[265.77261353 450.63729858]
[266.29803467 465.66305542]
[264.34295654 480.57034302]
[259.96072388 494.95251465]
[253.27093506 508.41714478]
[244.45603943 520.59692383]
[233.75653076 531.15960693]
[221.46430969 539.81707764]
[207.91470337 546.33300781]
[193.47735596 550.52978516]
[178.54612732 552.29284668]
[163.52836609 551.57415771]
[148.83375549 548.39324951]
[134.86317444 542.83691406]
[121.99774933 535.05670166]
[110.58847046 525.26501465]
[100.94658661 513.72875977]
[93.33512878 500.76284790]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 183]
[10 182]
[11 181]
[12 180]
[13 179]
[14 178]
[15 177]
[22 170]
[23 169]
[24 168]
[50 167]
[51 166]
[52 165]
[53 164]
[54 163]
[68 162]
[69 161]
[70 160]
[71 159]
[72 158]
[90 157]
[91 156]
[92 155]
[93 154]
[94 153]
[96 151]
[97 150]
[98 149]
[99 148]
[100 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
