%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[-16.64718246 762.35131836]
[-31.33677483 765.40008545]
[-46.15069962 767.77227783]
[-61.05780411 769.46270752]
[-76.02673340 770.46801758]
[-91.02601624 770.78594971]
[-106.02409363 770.41583252]
[-120.98944092 769.35858154]
[-135.89057922 767.61627197]
[-150.69616699 765.19262695]
[-165.37507629 762.09277344]
[-179.89642334 758.32318115]
[-194.22969055 753.89178467]
[-208.34471130 748.80798340]
[-222.21180725 743.08233643]
[-235.80183411 736.72692871]
[-249.08619690 729.75518799]
[-262.03695679 722.18176270]
[-274.62689209 714.02252197]
[-286.82949829 705.29461670]
[-298.61914062 696.01647949]
[-309.97100830 686.20758057]
[-320.86123657 675.88854980]
[-331.26690674 665.08111572]
[-341.16616821 653.80792236]
[-350.53817749 642.09277344]
[-359.36322021 629.96026611]
[-367.62277222 617.43591309]
[-375.29940796 604.54608154]
[-382.37704468 591.31781006]
[-388.84075928 577.77899170]
[-394.67697144 563.95806885]
[-399.87338257 549.88409424]
[-404.41909790 535.58666992]
[-408.30456543 521.09588623]
[-411.52157593 506.44223022]
[-414.06338501 491.65646362]
[-415.92462158 476.76971436]
[-417.10140991 461.81329346]
[-417.59127808 446.81863403]
[-417.39315796 431.81732178]
[-416.50747681 416.84082031]
[-414.93612671 401.92068481]
[-412.68237305 387.08828735]
[-409.75097656 372.37481689]
[-406.14810181 357.81121826]
[-401.88131714 343.42810059]
[-396.95962524 329.25570679]
[-391.39334106 315.32388306]
[-385.19415283 301.66189575]
[-378.37515259 288.29849243]
[-370.95065308 275.26177979]
[-362.93627930 262.57913208]
[-354.34887695 250.27728271]
[-345.20648193 238.38206482]
[-335.52838135 226.91848755]
[-325.33483887 215.91069031]
[-314.64739990 205.38180542]
[-303.48843384 195.35397339]
[-291.88150024 185.84828186]
[-279.85095215 176.88471985]
[-267.42208862 168.48214722]
[-254.62109375 160.65824890]
[-241.47483826 153.42944336]
[-228.01100159 146.81095886]
[-214.25787354 140.81669617]
[-200.24440002 135.45927429]
[-186.00004578 130.74995422]
[-171.55474854 126.69864655]
[-156.93891907 123.31387329]
[-142.18327332 120.60273743]
[-127.31883240 118.57095337]
[-112.37688446 117.22278595]
[-97.38883972 116.56107330]
[-82.38621521 116.58721161]
[-67.40055847 117.30114746]
[-52.46339798 118.70137024]
[-37.60614014 120.78493500]
[-22.86002541 123.54747009]
[-8.25607109 126.98316193]
[6.17501211 131.08477783]
[20.40287590 135.84370422]
[34.39759827 141.24992371]
[48.12974548 147.29206848]
[61.57044601 153.95742798]
[68.84367371 140.83872986]
[76.11690521 127.72003937]
[83.39013672 114.60134125]
[90.66336060 101.48265076]
[90.39700317 96.24404144]
[93.08470917 91.22910309]
[98.35346985 88.08633423]
[106.01406860 75.19000244]
[113.67466736 62.29367828]
[121.33526611 49.39735031]
[128.99586487 36.50102234]
[117.02507019 27.43569756]
[106.14456177 17.08704758]
[96.49117279 5.58521652]
[88.18630981 -6.92514801]
[81.33440399 -20.28671455]
[76.02163696 -34.33144760]
[72.31481934 -48.88271713]
[70.26056671 -63.75753021]
[69.88470459 -78.76882172]
[71.19197845 -93.72779846]
[74.16593933 -108.44634247]
[78.76918030 -122.73935699]
[84.94381714 -136.42707825]
[92.61219025 -149.33738708]
[101.67787933 -161.30790710]
[112.02684784 -172.18811035]
[123.52896881 -181.84115601]
[136.03958130 -190.14564514]
[149.40135193 -196.99714661]
[163.44624329 -202.30949402]
[177.99763489 -206.01586914]
[192.87249756 -208.06968689]
[207.88380432 -208.44509888]
[222.84274292 -207.13737488]
[237.56120300 -204.16297913]
[251.85408020 -199.55931091]
[265.54162598 -193.38426208]
[278.45169067 -185.71549988]
[290.42193604 -176.64945984]
[301.30181885 -166.30015564]
[310.95452881 -154.79774475]
[319.25863647 -142.28688049]
[326.10974121 -128.92491150]
[331.42169189 -114.87985992]
[335.12762451 -100.32836914]
[337.18099976 -85.45343018]
[337.55593872 -70.44212341]
[336.24777222 -55.48321915]
[333.27294922 -40.76485062]
[328.66885376 -26.47211647]
[322.49340820 -12.78475857]
[314.82424927 0.12508835]
[305.75784302 12.09506893]
[295.40823364 22.97464752]
[283.90551758 32.62700272]
[271.39440918 40.93074799]
[258.03222656 47.78144836]
[243.98701477 53.09295654]
[229.43542480 56.79846954]
[214.56042480 58.85139084]
[199.54910278 59.22589874]
[184.59024048 57.91728592]
[169.87196350 54.94200897]
[155.57936096 50.33748627]
[141.89218140 44.16162109]
[134.23159790 57.05794907]
[126.57099152 69.95427704]
[118.91039276 82.85060120]
[111.24980164 95.74692535]
[103.78205872 108.75588226]
[96.50882721 121.87457275]
[89.23559570 134.99327087]
[81.96237183 148.11196899]
[74.68914032 161.23065186]
[87.46287537 169.09902954]
[99.86243439 177.54475403]
[111.86174774 186.55007935]
[123.43558502 196.09605408]
[134.55960083 206.16262817]
[145.21040344 216.72860718]
[155.36558533 227.77177429]
[165.00379944 239.26892090]
[174.10476685 251.19584656]
[182.64935303 263.52749634]
[190.61959839 276.23791504]
[197.99873352 289.30035400]
[204.77124023 302.68740845]
[210.92286682 316.37084961]
[216.44070435 330.32192993]
[221.31311035 344.51135254]
[225.52986145 358.90921021]
[229.08207703 373.48526001]
[231.96231079 388.20883179]
[234.16447449 403.04898071]
[235.68395996 417.97448730]
[236.51756287 432.95394897]
[236.66352844 447.95590210]
[236.12155151 462.94873047]
[234.89277649 477.90097046]
[232.97976685 492.78115845]
[230.38658142 507.55801392]
[227.11865234 522.20037842]
[223.18284607 536.67761230]
[218.58744812 550.95910645]
[213.34213257 565.01495361]
[207.45791626 578.81549072]
[200.94717407 592.33178711]
[193.82359314 605.53533936]
[186.10218811 618.39843750]
[177.79914856 630.89398193]
[168.93197632 642.99572754]
[159.51928711 654.67822266]
[149.58090210 665.91693115]
[139.13771057 676.68817139]
[128.21168518 686.96923828]
[116.82578278 696.73864746]
[105.00395966 705.97570801]
[92.77108002 714.66113281]
[80.15286255 722.77655029]
[67.17585754 730.30493164]
[53.86733627 737.23046875]
[40.25530243 743.53857422]
[26.36837769 749.21594238]
[12.23576546 754.25067139]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[85 160]
[86 159]
[87 158]
[88 157]
[89 156]
[92 155]
[93 154]
[94 153]
[95 152]
[96 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
