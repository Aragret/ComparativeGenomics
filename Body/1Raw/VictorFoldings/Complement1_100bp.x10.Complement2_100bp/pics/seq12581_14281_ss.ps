%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUAxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[84.75765991 603.12426758]
[69.80210876 601.89916992]
[54.96178055 599.67791748]
[40.30295944 596.47039795]
[25.89111519 592.29095459]
[11.79061317 587.15820312]
[-1.93557024 581.09509277]
[-15.22612953 574.12872314]
[-28.02170372 566.29016113]
[-40.26514816 557.61450195]
[-51.90177536 548.14044189]
[-62.87961578 537.91027832]
[-73.14963531 526.96972656]
[-82.66597748 515.36761475]
[-91.38612366 503.15579224]
[-99.27113342 490.38882446]
[-106.28579712 477.12368774]
[-112.39877319 463.41964722]
[-117.58277130 449.33789062]
[-121.81462860 434.94134521]
[-125.07544708 420.29428101]
[-127.35066986 405.46215820]
[-128.63012695 390.51113892]
[-128.90809631 375.50808716]
[-128.18336487 360.51995850]
[-126.45913696 345.61370850]
[-123.74313354 330.85589600]
[-120.04747772 316.31246948]
[-115.38867950 302.04837036]
[-109.78754425 288.12728882]
[-103.26908112 274.61141968]
[-95.86241150 261.56109619]
[-87.60062408 249.03463745]
[-78.52059937 237.08799744]
[-68.66290283 225.77450562]
[-58.07155609 215.14469910]
[-46.79386520 205.24606323]
[-34.88020325 196.12280273]
[-22.38377762 187.81565857]
[-9.36039925 180.36174011]
[4.13176537 173.79434204]
[18.03245544 168.14279175]
[32.27958679 163.43232727]
[46.80952835 159.68397522]
[61.55738449 156.91450500]
[76.45729065 155.13627625]
[91.44269562 154.35720825]
[91.66602325 139.35887146]
[91.88935089 124.36053467]
[92.11267853 109.36219788]
[84.91135406 122.52050018]
[74.03955841 132.85511780]
[60.53353500 139.38099670]
[45.68057632 141.47616577]
[30.89638329 138.94088745]
[17.59008408 132.01684570]
[7.02995205 121.36398315]
[0.22251248 107.99765015]
[-2.18339300 93.19185638]
[0.04155075 78.35778046]
[6.68527651 64.90933228]
[17.11454773 54.12831497]
[30.33530998 47.04231262]
[45.08744812 44.32671738]
[59.96487808 46.24036407]
[73.54958344 52.60085297]
[84.54675293 62.80194473]
[91.90820312 75.87133789]
[94.93235016 90.56446838]
[99.11936188 76.16069031]
[103.30637360 61.75690842]
[107.49338531 47.35312653]
[111.68039703 32.94934464]
[110.49579620 28.77194023]
[110.68326569 24.83120728]
[111.99992371 21.52941895]
[114.09719086 19.14864731]
[116.56915283 17.82670403]
[121.60607147 3.69767499]
[126.64299011 -10.43135452]
[131.67990112 -24.56038475]
[136.71682739 -38.68941498]
[141.75373840 -52.81844330]
[128.13154602 -59.12330246]
[115.13913727 -66.64078522]
[102.88417053 -75.30859375]
[91.46818542 -85.05490875]
[80.98579407 -95.79895782]
[71.52384949 -107.45172119]
[63.16075897 -119.91662598]
[55.96582794 -133.09039307]
[49.99867249 -146.86386108]
[45.30874252 -161.12289429]
[41.93490219 -175.74931335]
[39.90510178 -190.62194824]
[39.23616791 -205.61753845]
[39.93363953 -220.61183167]
[41.99174118 -235.48057556]
[45.39341736 -250.10055542]
[50.11047745 -264.35061646]
[56.10383224 -278.11270142]
[63.32382584 -291.27276611]
[71.71062469 -303.72174072]
[81.19472504 -315.35647583]
[91.69754791 -326.08053589]
[103.13206482 -335.80511475]
[115.40351105 -344.44958496]
[128.41020203 -351.94232178]
[142.04435730 -358.22125244]
[156.19300842 -363.23431396]
[170.73890686 -366.94000244]
[185.56152344 -369.30758667]
[200.53802490 -370.31747437]
[215.54429626 -369.96124268]
[230.45600891 -368.24191284]
[245.14958191 -365.17367554]
[259.50326538 -360.78201294]
[273.39813232 -355.10324097]
[286.71899414 -348.18447876]
[299.35552979 -340.08303833]
[311.20300293 -330.86605835]
[322.16320801 -320.60989380]
[332.14538574 -309.39953613]
[341.06674194 -297.32791138]
[348.85342407 -284.49502563]
[355.44085693 -271.00723267]
[360.77447510 -256.97625732]
[364.81008911 -242.51843262]
[367.51425171 -227.75350952]
[368.86453247 -212.80386353]
[368.84976196 -197.79336548]
[367.47009277 -182.84640503]
[364.73687744 -168.08683777]
[360.67285156 -153.63696289]
[355.31164551 -139.61651611]
[348.69769287 -126.14170074]
[340.88577271 -113.32415771]
[331.94067383 -101.27009583]
[321.93649292 -90.07941437]
[310.95611572 -79.84483337]
[299.09054565 -70.65116119]
[286.43811035 -62.57458878]
[273.10363770 -55.68204117]
[259.19763184 -50.03062820]
[244.83534241 -45.66718674]
[230.13575745 -42.62786865]
[215.22070312 -40.93785858]
[200.21374512 -40.61116791]
[185.23927307 -41.65049744]
[170.42134094 -44.04723740]
[155.88276672 -47.78152847]
[150.84585571 -33.65249634]
[145.80892944 -19.52346802]
[140.77201843 -5.39443827]
[135.73510742 8.73459148]
[130.69818115 22.86362076]
[126.08417511 37.13635254]
[121.89716339 51.54013443]
[117.71015167 65.94391632]
[113.52313995 80.34770203]
[109.33612823 94.75148010]
[107.11101532 109.58552551]
[106.88768768 124.58386230]
[106.66436005 139.58219910]
[106.44103241 154.58053589]
[121.39659882 155.80541992]
[136.23695374 158.02648926]
[150.89581299 161.23384094]
[165.30770874 165.41313171]
[179.40827942 170.54570007]
[193.13453674 176.60862732]
[206.42518616 183.57482910]
[219.22085571 191.41319275]
[231.46440125 200.08871460]
[243.10115051 209.56265259]
[254.07911682 219.79267883]
[264.34927368 230.73310852]
[273.86575317 242.33508301]
[282.58605957 254.54678345]
[290.47125244 267.31365967]
[297.48608398 280.57870483]
[303.59921265 294.28268433]
[308.78338623 308.36434937]
[313.01544189 322.76086426]
[316.27642822 337.40786743]
[318.55184937 352.23999023]
[319.83148193 367.19097900]
[320.10964966 382.19403076]
[319.38510132 397.18215942]
[317.66107178 412.08843994]
[314.94525146 426.84628296]
[311.24978638 441.38973999]
[306.59115601 455.65393066]
[300.99020386 469.57507324]
[294.47189331 483.09103394]
[287.06539917 496.14144897]
[278.80377197 508.66799927]
[269.72387695 520.61474609]
[259.86633301 531.92834473]
[249.27511597 542.55828857]
[237.99755859 552.45709229]
[226.08401489 561.58050537]
[213.58769226 569.88781738]
[200.56440735 577.34185791]
[187.07232666 583.90942383]
[173.17170715 589.56115723]
[158.92462158 594.27185059]
[144.39472961 598.02032471]
[129.64691162 600.78997803]
[114.74703217 602.56842041]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 165]
[48 164]
[49 163]
[50 162]
[69 161]
[70 160]
[71 159]
[72 158]
[73 157]
[78 156]
[79 155]
[80 154]
[81 153]
[82 152]
[83 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
