%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[38.69848251 715.98443604]
[24.12149811 719.55712891]
[9.30180740 721.92980957]
[-5.66196775 723.08660889]
[-20.67024422 723.01989746]
[-35.62314224 721.73010254]
[-50.42115021 719.22576904]
[-64.96578979 715.52355957]
[-79.16027069 710.64813232]
[-92.91011810 704.63195801]
[-106.12384033 697.51507568]
[-118.71350098 689.34478760]
[-130.59530640 680.17553711]
[-141.69018555 670.06829834]
[-151.92431641 659.09033203]
[-161.22958374 647.31469727]
[-169.54405212 634.81982422]
[-176.81239319 621.68878174]
[-182.98625183 608.00903320]
[-188.02452087 593.87152100]
[-191.89369202 579.37042236]
[-194.56799316 564.60217285]
[-196.02964783 549.66510010]
[-196.26890564 534.65856934]
[-195.28419495 519.68249512]
[-193.08206177 504.83651733]
[-189.67716980 490.21942139]
[-185.09216309 475.92849731]
[-179.35755920 462.05883789]
[-172.51152039 448.70275879]
[-164.59960938 435.94915771]
[-155.67448425 423.88287354]
[-145.79554749 412.58425903]
[-135.02851868 402.12844849]
[-123.44506836 392.58502197]
[-111.12227631 384.01754761]
[-98.14215851 376.48300171]
[-84.59109497 370.03155518]
[-70.55925751 364.70611572]
[-56.14003754 360.54211426]
[-41.42938995 357.56726074]
[-26.52521133 355.80139160]
[-11.52669239 355.25625610]
[3.46635628 355.93542480]
[18.35415649 357.83444214]
[21.45826530 343.15914917]
[24.56237602 328.48382568]
[27.66648674 313.80853271]
[22.73046112 299.75558472]
[33.15609360 287.85531616]
[28.22006989 273.80236816]
[38.64570236 261.90209961]
[25.51576805 269.15502930]
[11.06532001 265.13201904]
[3.57222867 252.13764954]
[7.32887745 237.61567688]
[20.18328667 229.88494873]
[34.77186966 233.37397766]
[42.73745728 246.08314514]
[47.13845444 231.74330139]
[51.53945160 217.40345764]
[55.94045258 203.06359863]
[60.34144974 188.72375488]
[56.67884827 174.28649902]
[68.12459564 163.36378479]
[53.85195541 167.97808838]
[41.26182938 159.82402039]
[39.63518906 144.91247559]
[50.17113495 134.23568726]
[65.10295868 135.66418457]
[73.42324066 148.14329529]
[78.87860107 134.17050171]
[84.33395386 120.19770050]
[89.68514252 106.18467712]
[94.72205353 92.05564880]
[91.83612061 76.49987793]
[103.25681305 66.93865967]
[108.08280945 52.73620224]
[112.80294800 38.49821472]
[117.41695404 24.22548103]
[122.03096771 9.95274734]
[126.64497375 -4.31998539]
[129.85824585 -18.97177315]
[131.64071655 -33.86548996]
[133.42318726 -48.75920868]
[135.20564270 -63.65292358]
[136.98811340 -78.54663849]
[138.54862976 -93.46524811]
[139.88687134 -108.40543365]
[141.22509766 -123.34561920]
[134.74984741 -137.78105164]
[143.59176636 -149.76727295]
[144.70741272 -164.72573853]
[145.60023499 -179.69914246]
[146.49304199 -194.67254639]
[147.38586426 -209.64595032]
[138.76437378 -225.91712952]
[148.99203491 -240.17762756]
[149.66181946 -255.16267395]
[150.33160400 -270.14770508]
[136.69093323 -276.91912842]
[126.98876190 -288.65744019]
[122.90602875 -303.32888794]
[125.15010834 -318.39154053]
[133.33218384 -331.23574829]
[146.03468323 -339.63613892]
[161.05679321 -342.13729858]
[175.79586792 -338.30590820]
[187.69825745 -328.80575562]
[194.70181274 -315.28280640]
[195.59312439 -300.07998657]
[190.21774292 -285.83129883]
[179.50701904 -275.00540161]
[165.31663513 -269.47793579]
[164.64685059 -254.49288940]
[163.97706604 -239.50784302]
[171.90600586 -230.37228394]
[171.47064209 -217.88252258]
[162.35926819 -208.75312805]
[161.46644592 -193.77972412]
[160.57363892 -178.80632019]
[159.68081665 -163.83291626]
[162.12460327 -159.72962952]
[162.01667786 -154.04760742]
[158.53195190 -148.42904663]
[165.10292053 -135.06224060]
[156.16528320 -122.00738525]
[154.82705688 -107.06719971]
[153.48881531 -92.12701416]
[155.80935669 -87.95278168]
[155.53228760 -82.27649689]
[151.88183594 -76.76417542]
[150.09936523 -61.87046051]
[148.31689453 -46.97674179]
[146.53443909 -32.08302307]
[144.75196838 -17.18930626]
[154.06738281 -28.94613457]
[167.32142639 -35.96970367]
[182.28053284 -37.07641983]
[196.42385864 -32.07978058]
[207.36799622 -21.82180786]
[213.26866150 -8.03115273]
[213.13148499 6.96822023]
[206.97958374 20.64865112]
[195.84967041 30.70475006]
[181.61734009 35.44188309]
[166.68095398 34.06176376]
[153.55760193 26.79696655]
[144.45875549 14.87173462]
[140.91770935 0.29402369]
[136.30369568 14.56675720]
[131.68969727 28.83949089]
[127.07568359 43.11222458]
[128.00929260 50.44367599]
[122.28527069 57.56220245]
[117.45927429 71.76465607]
[120.69039917 86.30457306]
[108.92451477 96.88164520]
[110.11763000 101.98952484]
[108.36396790 107.40229034]
[103.73760986 111.43139648]
[103.66764069 120.56555939]
[98.30675507 125.65306091]
[92.85139465 139.62585449]
[87.39604187 153.59864807]
[82.46444702 167.76478577]
[85.81225586 183.22773743]
[74.68129730 193.12475586]
[70.28029633 207.46459961]
[65.87930298 221.80444336]
[61.47830200 236.14430237]
[57.07730484 250.48414612]
[53.32100296 265.00619507]
[58.03499985 280.10882568]
[47.83139420 290.95941162]
[52.54539490 306.06204224]
[42.34178925 316.91262817]
[39.23767853 331.58795166]
[36.13356781 346.26324463]
[33.02945709 360.93853760]
[47.41108322 365.23059082]
[61.39501190 370.68060303]
[74.88817596 377.25228882]
[87.80078888 384.90194702]
[100.04691315 393.57867432]
[111.54504395 403.22467041]
[122.21867371 413.77581787]
[131.99676514 425.16183472]
[140.81425476 437.30700684]
[148.61244202 450.13046265]
[155.33944702 463.54687500]
[160.95050049 477.46694946]
[165.40826416 491.79809570]
[168.68305969 506.44488525]
[170.75309753 521.30987549]
[171.60459900 536.29412842]
[171.23191833 551.29791260]
[169.63751221 566.22143555]
[166.83198547 580.96527100]
[162.83404541 595.43139648]
[157.67025757 609.52355957]
[151.37501526 623.14788818]
[143.99020386 636.21380615]
[135.56495667 648.63427734]
[126.15535736 660.32666016]
[115.82402802 671.21319580]
[104.63970947 681.22137451]
[92.67684174 690.28460693]
[80.01503754 698.34265137]
[66.73855591 705.34173584]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 180]
[46 179]
[47 178]
[48 177]
[50 175]
[52 173]
[59 172]
[60 171]
[61 170]
[62 169]
[63 168]
[65 166]
[71 165]
[72 164]
[73 163]
[74 161]
[75 158]
[77 156]
[78 155]
[79 153]
[80 152]
[81 151]
[82 150]
[83 136]
[84 135]
[85 134]
[86 133]
[87 132]
[88 129]
[89 128]
[90 127]
[92 125]
[93 122]
[94 121]
[95 120]
[96 119]
[98 116]
[99 115]
[100 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
