%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[34.14514542 502.93984985]
[38.42867279 517.34985352]
[40.34506607 532.26037598]
[39.84469604 547.28521729]
[36.94051361 562.03515625]
[31.70774651 576.12823486]
[24.28193855 589.19934082]
[14.85543537 600.90991211]
[3.67240500 610.95660400]
[-8.97748470 619.07916260]
[-22.76657104 625.06726074]
[-37.33768463 628.76574707]
[-52.31339645 630.07885742]
[-67.30580139 628.97253418]
[-81.92655945 625.47540283]
[-95.79695892 619.67816162]
[-108.55772400 611.73089600]
[-119.87831116 601.83947754]
[-129.46549988 590.26007080]
[-137.07095337 577.29272461]
[-142.49768066 563.27319336]
[-145.60511780 548.56469727]
[-146.31275940 533.54815674]
[-144.60227966 518.61260986]
[-140.51799011 504.14492798]
[-134.16567993 490.51977539]
[-125.70989990 478.09014893]
[-115.36965942 467.17797852]
[-103.41280365 458.06588745]
[-90.14904022 450.98995972]
[-75.92194366 446.13345337]
[-61.10001373 443.62213135]
[-46.06718445 443.52111816]
[-31.21283913 445.83294678]
[-16.92174149 450.49777222]
[-10.04232883 437.16836548]
[-3.16291666 423.83892822]
[3.71649575 410.50949097]
[10.59590816 397.18005371]
[17.47532082 383.85064697]
[24.35473442 370.52120972]
[31.23414612 357.19177246]
[27.85606194 345.57647705]
[33.47832489 334.41522217]
[45.57402802 329.93673706]
[52.65113068 316.71121216]
[59.72823715 303.48568726]
[66.80534363 290.26016235]
[73.88244629 277.03463745]
[79.33780670 263.06182861]
[83.09410858 248.53976440]
[86.85041046 234.01770020]
[90.60670471 219.49565125]
[92.50000000 204.61561584]
[92.50000000 189.61561584]
[92.50000000 174.61561584]
[92.50000000 159.61561584]
[92.50000000 144.61561584]
[79.09811401 140.12373352]
[67.73645020 131.71539307]
[59.52402115 120.21133423]
[55.26243210 106.73445129]
[55.36765671 92.60021973]
[59.82942200 79.18827820]
[68.21222687 67.80776215]
[79.69781494 59.56951523]
[93.16509247 55.27766800]
[93.38842010 40.27933121]
[93.61174774 25.28099442]
[93.83507538 10.28265667]
[90.95378876 4.33204937]
[91.43756866 -1.33036888]
[94.29498291 -5.15715122]
[94.96476746 -20.14218903]
[95.63455200 -35.12722778]
[96.30433655 -50.11226654]
[96.97412109 -65.09730530]
[94.56707001 -69.72906494]
[94.21280670 -74.35808563]
[95.56652832 -78.20288849]
[98.02323151 -80.73210144]
[99.36146545 -95.67228699]
[100.69969940 -110.61247253]
[90.93096161 -119.88534546]
[88.32452393 -132.90138245]
[93.61225128 -144.86474609]
[104.65872192 -151.49835205]
[106.21924591 -166.41696167]
[107.77976990 -181.33557129]
[109.34029388 -196.25418091]
[110.90081787 -211.17277527]
[112.46134186 -226.09138489]
[114.02186584 -241.00999451]
[115.58238220 -255.92858887]
[117.14290619 -270.84719849]
[109.64199829 -281.34002686]
[111.24889374 -293.73361206]
[120.56127167 -301.45413208]
[122.34373474 -316.34783936]
[124.12619781 -331.24157715]
[110.38845825 -337.57635498]
[99.28202820 -347.84780884]
[91.89499664 -361.04959106]
[88.95108032 -375.88833618]
[90.73868561 -390.91030884]
[97.08268738 -404.64379883]
[107.36155701 -415.74334717]
[120.56828308 -423.12152100]
[135.40901184 -426.05551147]
[150.42977905 -424.25781250]
[164.15901184 -417.90463257]
[175.25167847 -407.61831665]
[182.62100220 -394.40664673]
[185.54502869 -379.56396484]
[183.73730469 -364.54440308]
[177.37489319 -350.81942749]
[167.08116150 -339.73367310]
[153.86456299 -332.37319946]
[139.01991272 -329.45910645]
[137.23745728 -314.56539917]
[135.45498657 -299.67166138]
[143.22062683 -283.93438721]
[132.06150818 -269.28668213]
[130.50099182 -254.36807251]
[128.94046021 -239.44946289]
[127.37994385 -224.53085327]
[125.81941986 -209.61225891]
[124.25889587 -194.69364929]
[122.69837189 -179.77503967]
[121.13785553 -164.85644531]
[119.57733154 -149.93783569]
[130.71617126 -137.33763123]
[129.26698303 -120.24334717]
[115.63988495 -109.27423859]
[114.30165100 -94.33405304]
[112.96341705 -79.39386749]
[111.95915985 -64.42752075]
[111.28937531 -49.44248199]
[110.61959076 -34.45744324]
[109.94980621 -19.47240448]
[109.28002167 -4.48736620]
[108.83341217 10.50598431]
[108.61008453 25.50432205]
[108.38675690 40.50265884]
[108.16342926 55.50099564]
[122.89596558 60.97977829]
[134.86479187 71.16860199]
[142.62515259 84.83759308]
[145.24035645 100.33679962]
[142.39468384 115.79535675]
[134.43167114 129.34729004]
[122.31247711 139.35678101]
[107.50000000 144.61561584]
[107.50000000 159.61561584]
[107.50000000 174.61561584]
[107.50000000 189.61561584]
[107.50000000 204.61561584]
[114.61980438 191.41302490]
[125.59593201 181.18930054]
[139.27003479 175.02336121]
[154.19906616 173.56591797]
[168.80752563 176.97077942]
[181.55372620 184.87863159]
[191.09255981 196.45492554]
[196.41737366 210.47799683]
[196.96618652 225.46795654]
[192.68112183 239.84286499]
[184.01438904 252.08572388]
[171.88058472 260.90451050]
[157.56022644 265.36853027]
[142.56459045 265.00674438]
[128.47619629 259.85726929]
[116.78182220 250.46356201]
[108.71559906 237.81698608]
[105.12876892 223.25195312]
[101.37246704 237.77400208]
[97.61616516 252.29606628]
[93.85986328 266.81811523]
[104.17390442 255.92681885]
[117.55989075 249.15811157]
[132.44525146 247.30720520]
[147.08128357 250.59152222]
[159.74855042 258.62524414]
[168.95889282 270.46453857]
[173.63032532 284.71859741]
[173.21403503 299.71279907]
[167.75892639 313.68569946]
[157.90586853 324.99575806]
[144.81237793 332.31427002]
[130.01667786 334.78146362]
[115.25693512 332.10748291]
[102.26712036 324.60650635]
[92.57326508 313.15969849]
[87.31419373 299.11184692]
[87.10797882 284.11172485]
[80.03086853 297.33724976]
[72.95376587 310.56277466]
[65.87666321 323.78829956]
[58.79955292 337.01382446]
[59.82043839 355.39968872]
[44.56357574 364.07119751]
[37.68416214 377.40063477]
[30.80475044 390.73004150]
[23.92533684 404.05947876]
[17.04592514 417.38891602]
[10.16651249 430.71835327]
[3.28710008 444.04776001]
[-3.59231257 457.37719727]
[8.48913383 466.32342529]
[18.97895622 477.09188843]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 208]
[36 207]
[37 206]
[38 205]
[39 204]
[40 203]
[41 202]
[42 201]
[45 199]
[46 198]
[47 197]
[48 196]
[49 195]
[50 178]
[51 177]
[52 176]
[53 175]
[54 157]
[55 156]
[56 155]
[57 154]
[58 153]
[67 145]
[68 144]
[69 143]
[70 142]
[73 141]
[74 140]
[75 139]
[76 138]
[77 137]
[81 136]
[82 135]
[83 134]
[87 131]
[88 130]
[89 129]
[90 128]
[91 127]
[92 126]
[93 125]
[94 124]
[95 123]
[98 121]
[99 120]
[100 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
