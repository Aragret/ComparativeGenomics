%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[38.55513382 969.49572754]
[23.55526543 969.20288086]
[8.58526516 968.21246338]
[-6.32244492 966.52667236]
[-21.13557816 964.14910889]
[-35.82205200 961.08489990]
[-50.35005951 957.34069824]
[-64.68813324 952.92468262]
[-78.80522919 947.84631348]
[-92.67076111 942.11669922]
[-106.25470734 935.74816895]
[-119.52764130 928.75451660]
[-132.46083069 921.15093994]
[-145.02624512 912.95385742]
[-157.19667053 904.18103027]
[-168.94577026 894.85150146]
[-180.24809265 884.98541260]
[-191.07914734 874.60418701]
[-201.41548157 863.73022461]
[-211.23471069 852.38720703]
[-220.51556396 840.59960938]
[-229.23794556 828.39300537]
[-237.38296509 815.79376221]
[-244.93298340 802.82922363]
[-251.87164307 789.52746582]
[-258.18389893 775.91729736]
[-263.85614014 762.02813721]
[-268.87600708 747.89019775]
[-273.23269653 733.53393555]
[-276.91671753 718.99053955]
[-279.92010498 704.29156494]
[-282.23638916 689.46868896]
[-283.86050415 674.55413818]
[-284.78897095 659.58020020]
[-285.01974487 644.57922363]
[-284.55236816 629.58380127]
[-283.38781738 614.62634277]
[-281.52859497 599.73925781]
[-278.97879028 584.95477295]
[-275.74389648 570.30493164]
[-271.83090210 555.82147217]
[-267.24832153 541.53576660]
[-262.00604248 527.47875977]
[-256.11541748 513.68084717]
[-249.58923340 500.17190552]
[-242.44161987 486.98126221]
[-234.68801880 474.13745117]
[-226.34527588 461.66827393]
[-217.43141174 449.60076904]
[-207.96577454 437.96102905]
[-197.96882629 426.77429199]
[-187.46224976 416.06478882]
[-176.46878052 405.85568237]
[-165.01223755 396.16912842]
[-153.11743164 387.02609253]
[-140.81011963 378.44635010]
[-128.11695862 370.44848633]
[-115.06544495 363.04986572]
[-101.68383789 356.26647949]
[-88.00112152 350.11300659]
[-74.04692841 344.60281372]
[-59.85148239 339.74780273]
[-45.44552994 335.55850220]
[-30.86026573 332.04397583]
[-16.12728310 329.21182251]
[-1.27848673 327.06820679]
[13.65396214 325.61776733]
[28.63772392 324.86361694]
[43.64034653 324.80743408]
[58.62933350 325.44931030]
[59.96756744 310.50912476]
[61.30580139 295.56893921]
[62.64403915 280.62875366]
[63.98227310 265.68856812]
[50.97346497 273.15655518]
[36.96846390 267.78442383]
[32.29123306 253.53227234]
[40.38965225 240.90628052]
[55.29386902 239.21385193]
[66.01647949 249.70103455]
[68.46220398 234.90176392]
[70.90793610 220.10249329]
[64.12075806 210.08944702]
[66.03721619 197.73991394]
[76.16888428 189.75793457]
[78.83467865 174.99671936]
[81.50047302 160.23548889]
[84.16626740 145.47427368]
[86.83206177 130.71305847]
[89.49786377 115.95184326]
[81.32261658 103.98892212]
[83.89768982 89.73005676]
[95.74092102 81.38236237]
[98.40671539 66.62113953]
[99.63368988 51.67140961]
[99.41036224 36.67307281]
[91.46846008 22.98962593]
[99.01541138 10.14856815]
[98.79208374 -4.84976912]
[85.10665131 -11.70306015]
[76.18310547 -24.13804817]
[74.07201385 -39.29726791]
[79.25848389 -53.69723511]
[90.55071259 -64.02894592]
[105.35381317 -67.91825104]
[120.26615143 -64.47141266]
[131.86099243 -54.48049545]
[137.47389221 -40.24132919]
[135.81509399 -25.02597809]
[127.26573181 -12.33081627]
[113.79042053 -5.07309723]
[114.01374817 9.92524052]
[121.93968201 22.53590393]
[114.40869904 36.44974518]
[114.63202667 51.44808197]
[122.29321289 38.55210495]
[134.49008179 29.82074738]
[149.16723633 26.72540283]
[163.85131836 29.78768539]
[176.06781006 38.49155045]
[183.75801086 51.37024307]
[185.62600708 66.25347900]
[181.35697937 80.63316345]
[171.67034912 92.08607483]
[158.19848633 98.68219757]
[143.21162415 99.30996704]
[129.23532104 93.86358643]
[118.62483215 83.26087952]
[113.16793823 69.28694153]
[110.50213623 84.04815674]
[118.67738342 96.01107788]
[116.10231018 110.26994324]
[104.25907898 118.61763763]
[101.59328461 133.37886047]
[98.92749023 148.14007568]
[96.26168823 162.90129089]
[93.59589386 177.66250610]
[90.93009949 192.42372131]
[97.55698395 209.60412598]
[85.70720673 222.54821777]
[83.26147461 237.34748840]
[80.81575012 252.14675903]
[78.92245483 267.02679443]
[77.58422089 281.96697998]
[76.24598694 296.90716553]
[74.90775299 311.84735107]
[73.56951904 326.78753662]
[88.43397522 328.81973267]
[103.18778229 331.54129028]
[117.79899597 334.94631958]
[132.23596191 339.02746582]
[146.46742249 343.77587891]
[160.46255493 349.18127441]
[174.19102478 355.23196411]
[187.62313843 361.91479492]
[200.72976685 369.21533203]
[213.48255920 377.11776733]
[225.85386658 385.60494995]
[237.81690979 394.65853882]
[249.34577942 404.25888062]
[260.41549683 414.38525391]
[271.00210571 425.01565552]
[281.08267212 436.12710571]
[290.63534546 447.69552612]
[299.63946533 459.69583130]
[308.07550049 472.10208130]
[315.92520142 484.88739014]
[323.17153931 498.02407837]
[329.79885864 511.48367310]
[335.79278564 525.23699951]
[341.14035034 539.25433350]
[345.82995605 553.50531006]
[349.85147095 567.95898438]
[353.19613647 582.58410645]
[355.85675049 597.34906006]
[357.82754517 612.22174072]
[359.10424805 627.17004395]
[359.68408203 642.16156006]
[359.56582642 657.16387939]
[358.74969482 672.14434814]
[357.23745728 687.07067871]
[355.03244019 701.91046143]
[352.13934326 716.63159180]
[348.56451416 731.20220947]
[344.31564331 745.59069824]
[339.40191650 759.76593018]
[333.83401489 773.69720459]
[327.62399292 787.35437012]
[320.78530884 800.70776367]
[313.33273315 813.72857666]
[305.28244019 826.38854980]
[296.65185547 838.66021729]
[287.45965576 850.51708984]
[277.72576904 861.93347168]
[267.47128296 872.88458252]
[256.71838379 883.34680176]
[245.49038696 893.29736328]
[233.81158447 902.71478271]
[221.70729065 911.57861328]
[209.20370483 919.86968994]
[196.32791138 927.57006836]
[183.10780334 934.66308594]
[169.57200623 941.13330078]
[155.74983215 946.96673584]
[141.67121887 952.15081787]
[127.36666870 956.67425537]
[112.86714935 960.52728271]
[98.20407104 963.70153809]
[83.40917969 966.19018555]
[68.51453400 967.98773193]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 147]
[71 146]
[72 145]
[73 144]
[74 143]
[80 142]
[81 141]
[82 140]
[85 138]
[86 137]
[87 136]
[88 135]
[89 134]
[90 133]
[93 130]
[94 129]
[95 115]
[96 114]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
