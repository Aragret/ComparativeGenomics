%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[192.52214050 441.21304321]
[198.41983032 427.34530640]
[207.35716248 415.21185303]
[218.85214233 405.46697998]
[232.28486633 398.63629150]
[228.74519348 384.05990601]
[225.20552063 369.48352051]
[221.66584778 354.90713501]
[218.12617493 340.33078003]
[213.93916321 325.92700195]
[209.11317444 311.72454834]
[204.28717041 297.52209473]
[199.14520264 283.43093872]
[193.68984985 269.45812988]
[188.23449707 255.48535156]
[182.77914429 241.51254272]
[176.29963684 227.98420715]
[168.83189392 214.97525024]
[161.36416626 201.96629333]
[153.32298279 189.30377197]
[144.72442627 177.01293945]
[136.12585449 164.72209167]
[121.25537109 164.64132690]
[109.14056396 155.71408081]
[104.55179596 141.19525146]
[109.44864655 126.58953857]
[100.85008240 114.29869843]
[88.26311493 108.21102142]
[86.85907745 94.29986572]
[79.37554932 89.06205750]
[78.22559357 81.76141357]
[69.81097412 69.34391785]
[61.39635468 56.92642212]
[52.16925812 45.10015106]
[42.17108536 33.91817474]
[32.17291260 22.73620224]
[22.17473984 11.55422783]
[9.36381721 10.05654716]
[1.26652002 0.53722245]
[1.80824542 -11.54719257]
[-10.97896004 -13.23544216]
[-18.93362999 -22.87426949]
[-18.21204567 -34.94927979]
[-27.87285614 -46.42398071]
[-37.53366852 -57.89867783]
[-38.72880554 -42.94636917]
[-49.16553116 -32.17256927]
[-64.07231903 -30.50292206]
[-76.63397980 -38.70076370]
[-81.10749817 -53.01815414]
[-75.44763947 -66.90937042]
[-62.24200821 -74.02354431]
[-47.52646255 -71.10720825]
[-55.94108200 -83.52470398]
[-64.35569763 -95.94219971]
[-72.77031708 -108.35969543]
[-81.27714539 -120.71420288]
[-89.87570953 -133.00503540]
[-98.47427368 -145.29588318]
[-111.71109009 -138.20201111]
[-125.69403076 -132.72352600]
[-140.22679138 -128.93733215]
[-155.10536194 -126.89659882]
[-170.12084961 -126.62995911]
[-185.06250000 -128.14115906]
[-199.72052002 -131.40899658]
[-213.88914490 -136.38758850]
[-227.36947632 -143.00701904]
[-239.97227478 -151.17440796]
[-251.52059937 -160.77505493]
[-261.85232544 -171.67420959]
[-270.82244873 -183.71885681]
[-278.30499268 -196.73989868]
[-284.19497681 -210.55456543]
[-288.40963745 -224.96888733]
[-290.88986206 -239.78053284]
[-291.60083008 -254.78155518]
[-290.53253174 -269.76138306]
[-287.70001221 -284.50970459]
[-283.14297485 -298.81948853]
[-276.92541504 -312.48983765]
[-269.13464355 -325.32885742]
[-259.88000488 -337.15628052]
[-249.29144287 -347.80609131]
[-237.51757812 -357.12878418]
[-224.72370911 -364.99346924]
[-211.08944702 -371.28973389]
[-196.80618286 -375.92922974]
[-182.07443237 -378.84677124]
[-167.10102844 -380.00143433]
[-152.09614563 -379.37698364]
[-137.27044678 -376.98223877]
[-122.83204651 -372.85073853]
[-108.98365784 -367.04055786]
[-95.91967010 -359.63320923]
[-83.82350159 -350.73269653]
[-72.86494446 -340.46398926]
[-63.19785309 -328.97122192]
[-54.95792770 -316.41574097]
[-48.26085663 -302.97381592]
[-43.20064545 -288.83413696]
[-39.84833527 -274.19519043]
[-38.25098801 -259.26251221]
[-38.43102646 -244.24572754]
[-40.38592529 -229.35565186]
[-44.08823776 -214.80128479]
[-49.48599243 -200.78698730]
[-56.50341415 -187.50949097]
[-65.04198456 -175.15516663]
[-74.98184204 -163.89747620]
[-86.18343353 -153.89443970]
[-77.58486938 -141.60360718]
[-68.98630524 -129.31277466]
[-62.57627869 -125.63400269]
[-60.35282135 -116.77431488]
[-51.93820572 -104.35681915]
[-43.52358627 -91.93932343]
[-35.10896683 -79.52182770]
[-26.05896759 -67.55948639]
[-16.39815712 -56.08478928]
[-6.73734617 -44.61008835]
[10.06119823 -39.53309631]
[13.13783836 -21.37777328]
[30.01010895 -16.55145073]
[33.35671616 1.55605543]
[43.35488510 12.73803043]
[53.35305786 23.92000389]
[63.35123062 35.10197830]
[62.46030045 20.12846184]
[69.71308899 6.99845505]
[82.86224365 -0.21956326]
[97.83335114 0.71098715]
[109.98744965 9.50176525]
[115.55847168 23.42885399]
[112.82015991 38.17679214]
[102.62101746 49.17576981]
[88.12136078 53.01763535]
[73.81385040 48.51180267]
[82.22846985 60.92929840]
[90.64308929 73.34679413]
[99.14991760 85.70130157]
[111.73688507 91.78897858]
[113.14092255 105.70013428]
[121.73948669 117.99097443]
[137.13887024 118.39762115]
[149.20497131 127.68537140]
[153.43838501 142.12637329]
[148.41670227 156.12353516]
[157.01525879 168.41436768]
[165.61383057 180.70521545]
[169.28442383 166.16125488]
[182.09283447 158.35453796]
[196.70181274 161.75712585]
[204.74269104 174.41984558]
[201.60926819 189.08891296]
[189.09651184 197.36123657]
[174.37310791 194.49855042]
[181.84085083 207.50750732]
[189.30859375 220.51646423]
[190.95359802 205.60693359]
[199.75312805 193.45916748]
[213.40699768 187.24855042]
[228.34613037 188.59852600]
[240.66546631 197.15621948]
[247.14476013 210.68466187]
[246.09033203 225.64755249]
[237.77783203 238.13363647]
[224.38009644 244.87907410]
[209.39927673 244.12062073]
[196.75193787 236.05718994]
[202.20729065 250.02998352]
[207.66264343 264.00277710]
[213.11801147 277.97558594]
[217.19439697 281.23596191]
[219.39271545 285.32507324]
[219.71179199 289.38873291]
[218.48962402 292.69607544]
[223.31562805 306.89852905]
[228.14161682 321.10098267]
[235.72602844 308.15972900]
[250.20445251 304.23858643]
[263.28298950 311.58377075]
[267.46963501 325.98767090]
[260.36614990 339.19903564]
[246.04165649 343.64981079]
[232.70254517 336.79110718]
[236.24221802 351.36749268]
[239.78189087 365.94384766]
[243.32156372 380.52023315]
[246.86123657 395.09661865]
[261.93069458 395.00595093]
[276.61471558 398.39358521]
[290.12142944 405.07684326]
[301.72241211 414.69525146]
[310.79205322 426.73013306]
[316.84121704 440.53244019]
[319.54373169 455.35787964]
[318.75378418 470.40689087]
[314.51400757 484.86791992]
[307.05307007 497.96105957]
[296.77331543 508.98028564]
[284.22909546 517.33129883]
[270.09692383 522.56372070]
[255.13891602 524.39544678]
[240.16177368 522.72760010]
[225.97315979 517.65020752]
[213.33825684 509.43704224]
[202.93846130 498.53103638]
[195.33460999 485.52035522]
[190.93678284 471.10662842]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 190]
[6 189]
[7 188]
[8 187]
[9 186]
[10 179]
[11 178]
[12 177]
[13 173]
[14 172]
[15 171]
[16 170]
[17 159]
[18 158]
[19 157]
[20 150]
[21 149]
[22 148]
[26 144]
[27 143]
[29 141]
[31 140]
[32 139]
[33 138]
[34 128]
[35 127]
[36 126]
[37 125]
[40 123]
[43 121]
[44 120]
[45 119]
[53 118]
[54 117]
[55 116]
[56 115]
[57 113]
[58 112]
[59 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
