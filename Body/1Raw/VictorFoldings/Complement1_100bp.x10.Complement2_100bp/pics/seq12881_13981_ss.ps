%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCGxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[107.99293518 858.76983643]
[93.16304016 856.49322510]
[78.47671509 853.42382812]
[63.97632217 849.57061768]
[49.70366287 844.94458008]
[35.69989014 839.55908203]
[22.00537872 833.42968750]
[8.65961742 826.57403564]
[-4.29891634 819.01196289]
[-16.83285904 810.76519775]
[-28.90607262 801.85748291]
[-40.48374557 792.31463623]
[-51.53250122 782.16406250]
[-62.02047348 771.43505859]
[-71.91743469 760.15856934]
[-81.19483185 748.36706543]
[-89.82593536 736.09460449]
[-97.78585052 723.37658691]
[-105.05162811 710.24957275]
[-111.60231018 696.75152588]
[-117.41902161 682.92132568]
[-122.48498535 668.79882812]
[-126.78559875 654.42474365]
[-130.30845642 639.84057617]
[-133.04341125 625.08831787]
[-134.98255920 610.21051025]
[-136.12031555 595.25006104]
[-136.45341492 580.25012207]
[-135.98088074 565.25396729]
[-134.70408630 550.30474854]
[-132.62670898 535.44561768]
[-129.75474548 520.71942139]
[-126.09645081 506.16864014]
[-121.66239166 491.83517456]
[-116.46536255 477.76037598]
[-110.52032471 463.98483276]
[-103.84443665 450.54824829]
[-96.45694733 437.48937988]
[-88.37914276 424.84588623]
[-79.63432312 412.65420532]
[-70.24769592 400.94946289]
[-60.24633789 389.76547241]
[-49.65907288 379.13446045]
[-38.51643372 369.08703613]
[-26.85054398 359.65219116]
[-14.69504166 350.85714722]
[-2.08497357 342.72726440]
[10.94330120 335.28594971]
[24.35222054 328.55468750]
[38.10311890 322.55285645]
[52.15635300 317.29779053]
[66.47140503 312.80465698]
[81.00699615 309.08636475]
[95.72121429 306.15365601]
[110.57164001 304.01498413]
[109.23340607 289.07479858]
[107.89517212 274.13461304]
[106.55693817 259.19442749]
[105.21870422 244.25424194]
[103.88047028 229.31405640]
[102.54223633 214.37387085]
[101.20400238 199.43368530]
[99.86576843 184.49349976]
[98.52753448 169.55331421]
[97.18930054 154.61312866]
[95.85106659 139.67294312]
[94.51283264 124.73276520]
[93.17459869 109.79257965]
[86.94411469 123.43739319]
[76.25629425 133.96215820]
[62.51730347 139.98213196]
[47.53474808 140.70532227]
[33.27983475 136.03654480]
[21.62804413 126.59007263]
[14.11237144 113.60874939]
[11.72163010 98.80049896]
[14.77036476 84.11359406]
[22.85746193 71.48034668]
[34.91892242 62.56288528]
[49.36785889 58.53445053]
[64.30326080 59.92505646]
[77.76011658 66.55173492]
[87.96795654 77.54264832]
[93.58422852 91.45407104]
[95.58824158 76.58854675]
[97.59225464 61.72301483]
[83.98989105 55.13263321]
[73.10527039 44.67473984]
[65.99564362 31.38257599]
[63.34618759 16.56382370]
[65.40396881 1.67194307]
[71.95501709 -11.83638000]
[82.34642792 -22.64372253]
[95.55147552 -29.70041275]
[110.27101135 -32.32646179]
[112.27502441 -47.19198990]
[114.27903748 -62.05751801]
[116.28305817 -76.92304993]
[118.28707123 -91.78857422]
[104.42012024 -97.75601959]
[92.67812347 -107.24433136]
[83.93240356 -119.54941559]
[78.83196259 -133.75814819]
[77.75527191 -148.81614685]
[80.78223419 -163.60600281]
[87.68824005 -177.03022766]
[97.96080017 -188.09263611]
[110.83763885 -195.97233582]
[125.36319733 -200.08460999]
[140.45959473 -200.12426758]
[155.00656128 -196.08839417]
[167.92462158 -188.27647400]
[178.25518799 -177.26820374]
[185.23162842 -163.88046265]
[188.33627319 -149.10670471]
[187.33874512 -134.04325867]
[182.31303406 -119.80791473]
[173.63209534 -107.45704651]
[161.94012451 -97.90716553]
[148.10473633 -91.86692810]
[133.15260315 -89.78456116]
[131.14859009 -74.91903687]
[129.14456177 -60.05350494]
[127.14055634 -45.18797684]
[125.13654327 -30.32244873]
[138.63522339 -23.89231682]
[149.50021362 -13.59075832]
[156.65881348 -0.41750717]
[159.39891052 14.34334755]
[157.43975830 29.24852753]
[150.96078491 42.83667755]
[140.58511353 53.77165985]
[127.31974030 60.97390747]
[112.45778656 63.72702789]
[110.45377350 78.59255981]
[108.44975281 93.45808411]
[108.11477661 108.45434570]
[109.45301056 123.39453125]
[110.79124451 138.33471680]
[112.12948608 153.27490234]
[113.46772003 168.21508789]
[114.80595398 183.15527344]
[116.14418793 198.09545898]
[117.48242188 213.03564453]
[118.82065582 227.97583008]
[120.15888977 242.91601562]
[121.49712372 257.85620117]
[122.83535767 272.79638672]
[124.17359161 287.73657227]
[125.51182556 302.67675781]
[140.50593567 302.14215088]
[155.50711060 302.41317749]
[170.47213745 303.48901367]
[185.35781860 305.36657715]
[200.12127686 308.04043579]
[214.71990967 311.50289917]
[229.11166382 315.74398804]
[243.25500488 320.75146484]
[257.10919189 326.51089478]
[270.63424683 333.00564575]
[283.79116821 340.21704102]
[296.54205322 348.12423706]
[308.85012817 356.70446777]
[320.67990112 365.93301392]
[331.99725342 375.78320312]
[342.76956177 386.22668457]
[352.96578979 397.23333740]
[362.55648804 408.77142334]
[371.51403809 420.80764771]
[379.81262207 433.30734253]
[387.42831421 446.23449707]
[394.33911133 459.55175781]
[400.52511597 473.22079468]
[405.96853638 487.20214844]
[410.65359497 501.45553589]
[414.56683350 515.93988037]
[417.69696045 530.61334229]
[420.03494263 545.43371582]
[421.57406616 560.35821533]
[422.30984497 575.34375000]
[422.24020386 590.34722900]
[421.36532593 605.32531738]
[419.68774414 620.23492432]
[417.21224976 635.03289795]
[413.94604492 649.67669678]
[409.89849854 664.12408447]
[405.08132935 678.33337402]
[399.50836182 692.26361084]
[393.19570923 705.87457275]
[386.16159058 719.12713623]
[378.42620850 731.98303223]
[370.01196289 744.40515137]
[360.94305420 756.35772705]
[351.24563599 767.80627441]
[340.94769287 778.71777344]
[330.07888794 789.06079102]
[318.67056274 798.80548096]
[306.75564575 807.92382812]
[294.36843872 816.38940430]
[281.54470825 824.17791748]
[268.32138062 831.26684570]
[254.73661804 837.63574219]
[240.82957458 843.26629639]
[226.64035034 848.14227295]
[212.20985413 852.24957275]
[197.57969666 855.57635498]
[182.79205322 858.11303711]
[167.88957214 859.85235596]
[152.91522217 860.78918457]
[137.91215515 860.92095947]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 150]
[56 149]
[57 148]
[58 147]
[59 146]
[60 145]
[61 144]
[62 143]
[63 142]
[64 141]
[65 140]
[66 139]
[67 138]
[68 137]
[84 136]
[85 135]
[86 134]
[95 125]
[96 124]
[97 123]
[98 122]
[99 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
