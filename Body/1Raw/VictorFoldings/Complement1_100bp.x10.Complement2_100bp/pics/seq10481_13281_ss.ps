%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUGxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[284.51699829 657.39575195]
[297.38629150 649.53240967]
[292.98529053 635.19256592]
[288.58428955 620.85272217]
[284.18328857 606.51287842]
[279.78228760 592.17303467]
[275.38128662 577.83319092]
[270.98028564 563.49334717]
[266.57928467 549.15350342]
[262.17828369 534.81365967]
[251.04733276 524.91662598]
[254.39514160 509.45367432]
[249.99414062 495.11383057]
[245.59315491 480.77398682]
[241.19215393 466.43411255]
[238.26522827 464.46804810]
[236.14517212 460.98660278]
[235.53382874 456.38449097]
[236.93026733 451.35488892]
[233.17396545 436.83282471]
[222.49603271 426.44863892]
[226.53096008 411.15060425]
[222.77467346 396.62854004]
[217.52795410 382.57608032]
[210.84774780 369.14569092]
[204.16755676 355.71533203]
[191.87101746 358.42932129]
[179.27029419 358.32339478]
[167.00422668 355.39904785]
[155.69557190 349.80072021]
[145.91935730 341.80874634]
[138.17362976 331.82531738]
[132.85415649 320.35415649]
[130.23413086 307.97515869]
[130.45016479 295.31512451]
[133.49520874 283.01589966]
[139.21862793 271.70196533]
[147.33375549 261.94860840]
[157.43215942 254.25280762]
[151.56320190 240.44863892]
[145.69424438 226.64445496]
[139.82527161 212.84028625]
[133.95631409 199.03610229]
[128.08735657 185.23193359]
[122.21839905 171.42774963]
[116.34943390 157.62356567]
[110.48047638 143.81939697]
[104.61151123 130.01521301]
[98.74255371 116.21104431]
[88.22370911 111.21151733]
[83.74676514 100.45985413]
[87.60864258 89.47225952]
[81.94585419 75.58223724]
[76.28306580 61.69220734]
[63.90848541 51.83420181]
[66.26844788 37.12774658]
[60.60566330 23.23772049]
[54.94287491 9.34769440]
[42.56829453 -0.51031148]
[44.92826080 -15.21676731]
[39.26547241 -29.10679436]
[37.65674973 -14.19330978]
[31.35248947 -0.58241981]
[21.01800156 10.28948689]
[7.74390554 17.27507019]
[-7.06894970 19.63712883]
[-21.85732841 17.12638474]
[-35.06058121 10.00780487]
[-45.28533173 -0.96736968]
[-51.45254135 -14.64090347]
[-52.91136932 -29.56979561]
[-49.50785828 -44.17856598]
[-41.60119629 -56.92551041]
[-30.02578545 -66.46542358]
[-16.00321007 -71.79152679]
[-1.01330554 -72.34174347]
[13.36200905 -68.05802155]
[25.60567093 -59.39241409]
[34.42566681 -47.25925827]
[24.91401291 -59.90200806]
[30.88157463 -73.54888916]
[28.87756157 -88.41442108]
[26.87354851 -103.27994537]
[24.86953354 -118.14547729]
[22.86552048 -133.01100159]
[13.35386753 -145.65374756]
[19.32143021 -159.30062866]
[4.31200075 -160.53800964]
[-10.08038235 -164.97348022]
[-23.18256187 -172.39958191]
[-34.38172531 -182.46897888]
[-43.15406799 -194.71072388]
[-49.08929062 -208.55221558]
[-51.90979385 -223.34609985]
[-51.48365402 -238.40042114]
[-47.83080673 -253.01104736]
[-41.12209702 -266.49465942]
[-31.67130852 -278.22055054]
[-19.92047119 -287.64031982]
[-6.41918945 -294.31335449]
[8.20105457 -297.92755127]
[23.25644684 -298.31390381]
[38.04281616 -295.45431519]
[51.86858368 -289.48251343]
[64.08708191 -280.67782593]
[74.12684631 -269.45208740]
[81.51828766 -256.33032227]
[85.91568756 -241.92626953]
[87.11338806 -226.91363525]
[85.05536652 -211.99455261]
[79.83786774 -197.86686707]
[71.70494080 -185.19131470]
[61.03696442 -174.56077576]
[48.33290863 -166.47244263]
[34.18695831 -161.30464172]
[43.55527115 -149.72518921]
[37.73104858 -135.01501465]
[39.73506165 -120.14949036]
[41.73907471 -105.28395844]
[43.74309158 -90.41843414]
[45.74710464 -75.55290222]
[55.11541367 -63.97344208]
[49.29119492 -49.26327515]
[53.15549850 -34.76958084]
[58.81828690 -20.87955284]
[70.78782654 -12.01505566]
[68.83290100 3.68490767]
[74.49568939 17.57493401]
[80.15847778 31.46496201]
[92.12802124 40.32946014]
[90.17309570 56.02942276]
[95.83587646 69.91944885]
[101.49866486 83.80947876]
[115.01042938 93.74971771]
[112.54673004 110.34207916]
[118.41568756 124.14625549]
[124.28465271 137.95043945]
[130.15361023 151.75460815]
[136.02256775 165.55879211]
[141.89154053 179.36296082]
[147.76049805 193.16714478]
[153.62945557 206.97131348]
[159.49841309 220.77549744]
[165.36737061 234.57966614]
[171.23634338 248.38385010]
[188.68954468 246.47067261]
[205.86802673 250.01560974]
[221.10800171 258.66442871]
[232.93679810 271.56915283]
[240.21514893 287.47109985]
[242.24690247 304.82366943]
[238.84562683 321.94284058]
[230.35163879 337.17050171]
[217.59793091 349.03512573]
[224.27813721 362.46551514]
[230.95832825 375.89587402]
[232.02615356 360.93392944]
[238.66957092 347.48532104]
[249.90306091 337.54507446]
[264.06021118 332.58776855]
[279.04089355 333.34878540]
[292.62283325 339.71520996]
[302.79116821 350.74267578]
[308.03753662 364.79525757]
[307.58367920 379.78839111]
[301.49688721 393.49792480]
[290.68011475 403.89010620]
[276.73797607 409.42333984]
[261.73867798 409.27679443]
[247.90731812 403.47219849]
[237.29672241 392.87225342]
[241.05302429 407.39431763]
[251.99963379 418.81719971]
[247.69602966 433.07650757]
[251.45233154 447.59857178]
[255.53199768 462.03314209]
[259.93298340 476.37298584]
[264.33398438 490.71282959]
[268.73498535 505.05267334]
[280.18075562 515.97534180]
[276.51812744 530.41265869]
[280.91912842 544.75250244]
[285.32012939 559.09234619]
[289.72113037 573.43218994]
[294.12213135 587.77203369]
[298.52313232 602.11187744]
[302.92413330 616.45172119]
[307.32513428 630.79156494]
[311.72613525 645.13140869]
[326.79089355 644.42163086]
[341.55871582 647.48138428]
[355.10128784 654.11834717]
[366.56732178 663.91534424]
[375.23602295 676.25653076]
[380.56250000 690.36602783]
[382.21191406 705.35705566]
[380.08056641 720.28717041]
[374.30249023 734.21789551]
[365.24081421 746.27343750]
[353.46524048 755.69610596]
[339.71594238 761.89355469]
[324.85723877 764.47613525]
[309.82315063 763.28155518]
[295.55874634 758.38488770]
[282.96066284 750.09393311]
[272.82086182 738.92993164]
[265.77673340 725.59460449]
[262.27105713 710.92620850]
[262.52423096 695.84686279]
[266.52032471 681.30444336]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 189]
[3 188]
[4 187]
[5 186]
[6 185]
[7 184]
[8 183]
[9 182]
[10 181]
[12 179]
[13 178]
[14 177]
[15 176]
[19 175]
[20 174]
[22 172]
[23 171]
[24 156]
[25 155]
[26 154]
[39 145]
[40 144]
[41 143]
[42 142]
[43 141]
[44 140]
[45 139]
[46 138]
[47 137]
[48 136]
[49 135]
[52 133]
[53 132]
[54 131]
[56 129]
[57 128]
[58 127]
[60 125]
[61 124]
[79 123]
[81 121]
[82 120]
[83 119]
[84 118]
[85 117]
[87 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
