%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[146.96719360 756.61041260]
[133.45651245 750.08294678]
[120.37777710 742.72808838]
[107.78159332 734.57440186]
[95.71669006 725.65338135]
[84.22974396 715.99957275]
[73.36519623 705.65026855]
[63.16507721 694.64550781]
[53.66885376 683.02795410]
[44.91326141 670.84246826]
[36.93217850 658.13623047]
[29.75647736 644.95837402]
[23.41392326 631.35986328]
[17.92905235 617.39337158]
[13.32308674 603.11291504]
[9.61384487 588.57373047]
[6.81567669 573.83209229]
[4.93940878 558.94494629]
[3.99229956 543.96997070]
[3.97801352 528.96514893]
[4.89660597 513.98840332]
[6.74452257 499.09771729]
[9.51461506 484.35076904]
[13.19616508 469.80453491]
[17.77493095 455.51531982]
[23.23319626 441.53842163]
[29.54984474 427.92788696]
[36.70043945 414.73638916]
[44.65731430 402.01498413]
[53.38968658 389.81283569]
[62.86376953 378.17718506]
[73.04291534 367.15304565]
[83.88773346 356.78308105]
[95.35627747 347.10739136]
[107.40417480 338.16342163]
[119.98480988 329.98574829]
[133.04951477 322.60604858]
[146.54774475 316.05282593]
[160.42726135 310.35150146]
[155.60127258 296.14904785]
[150.77526855 281.94659424]
[145.94926453 267.74414062]
[142.13725281 264.86706543]
[140.09211731 259.56475830]
[141.19787598 253.04640198]
[136.79687500 238.70654297]
[132.28924561 224.39985657]
[127.67523193 210.12713623]
[123.06122589 195.85440063]
[118.44721222 181.58166504]
[113.83320618 167.30892944]
[109.21919250 153.03619385]
[104.60518646 138.76345825]
[99.99118042 124.49073029]
[95.37716675 110.21799469]
[88.62568665 123.61267853]
[74.89394379 129.64916992]
[60.45990753 125.56766510]
[51.92262650 113.23418427]
[53.18523026 98.28741455]
[63.67047501 87.56082916]
[78.58464050 85.95847321]
[91.11029053 94.21440125]
[88.00617981 79.53910065]
[84.90207672 64.86380005]
[81.79796600 50.18849564]
[78.69385529 35.51319504]
[75.58974457 20.83789062]
[70.75218201 13.08961201]
[72.55037689 5.92104959]
[69.66510773 -8.79884148]
[62.14628601 4.18065596]
[48.48143768 10.36708641]
[33.76721191 7.45306301]
[23.49164963 -3.47455406]
[21.48728180 -18.34003448]
[28.50168991 -31.59892273]
[41.91867065 -38.30597687]
[56.73402405 -35.95964050]
[67.42253113 -25.43399429]
[66.30688477 -40.39244843]
[65.19123077 -55.35089874]
[49.88838196 -60.28355026]
[37.67938614 -70.68599701]
[30.41456032 -84.94285583]
[29.17997932 -100.85761261]
[34.13519669 -115.99105072]
[44.49333954 -128.03504944]
[58.64588547 -135.16465759]
[57.30765152 -150.10484314]
[55.96941757 -165.04502869]
[54.63118362 -179.98521423]
[53.29294968 -194.92539978]
[38.54165649 -198.28018188]
[25.55006027 -206.03089905]
[15.59095001 -217.41822815]
[9.64001560 -231.32655334]
[8.28026962 -246.39328003]
[11.64492512 -261.14233398]
[19.40434837 -274.12872314]
[30.79834938 -284.08020020]
[44.71066284 -290.02182007]
[59.77829742 -291.37145996]
[74.52508545 -287.99691772]
[87.50627899 -280.22879028]
[97.45011902 -268.82812500]
[103.38240814 -254.91184998]
[104.72196198 -239.84330750]
[101.33754730 -225.09878540]
[93.56072235 -212.12280273]
[82.15339661 -202.18659973]
[68.23313141 -196.26364136]
[69.57136536 -181.32345581]
[70.90960693 -166.38327026]
[72.24784088 -151.44308472]
[73.58607483 -136.50289917]
[87.12866211 -132.82356262]
[98.62639618 -124.72537231]
[106.68640137 -113.16441345]
[110.32378387 -99.51773834]
[109.08192444 -85.41934967]
[103.08966827 -72.56454468]
[93.04834747 -62.50606537]
[80.14968872 -56.46654892]
[81.26533508 -41.50809479]
[82.38098145 -26.54964256]
[84.38500214 -11.68411446]
[87.27027130 3.03577733]
[90.26504517 17.73378181]
[93.36915588 32.40908432]
[96.47326660 47.08438492]
[99.57737732 61.75968933]
[102.68148804 76.43498993]
[105.78559875 91.11029053]
[109.64990234 105.60398865]
[114.26390839 119.87671661]
[118.87792206 134.14945984]
[123.49192810 148.42218018]
[128.10594177 162.69491577]
[132.71995544 176.96765137]
[137.33395386 191.24038696]
[141.94796753 205.51312256]
[146.56198120 219.78585815]
[152.17938232 226.98881531]
[151.13671875 234.30555725]
[155.53771973 248.64540100]
[160.15171814 262.91812134]
[164.97772217 277.12057495]
[169.80372620 291.32302856]
[174.62971497 305.52551270]
[189.10940552 301.59036255]
[203.80572510 298.56304932]
[218.66183472 296.45526123]
[233.62023926 295.27514648]
[248.62306213 295.02728271]
[263.61230469 295.71264648]
[278.52990723 297.32852173]
[293.31820679 299.86871338]
[307.91998291 303.32336426]
[322.27874756 307.67913818]
[336.33892822 312.91915894]
[350.04614258 319.02316284]
[363.34735107 325.96755981]
[376.19110107 333.72543335]
[388.52767944 342.26678467]
[400.30941772 351.55859375]
[411.49066162 361.56488037]
[422.02819824 372.24697876]
[431.88125610 383.56350708]
[441.01168823 395.47070312]
[449.38421631 407.92251587]
[456.96640015 420.87075806]
[463.72894287 434.26531982]
[469.64566040 448.05441284]
[474.69366455 462.18466187]
[478.85342407 476.60144043]
[482.10885620 491.24890137]
[484.44735718 506.07046509]
[485.85986328 521.00872803]
[486.34094238 536.00585938]
[485.88873291 551.00390625]
[484.50497437 565.94488525]
[482.19497681 580.77087402]
[478.96774292 595.42462158]
[474.83575439 609.84936523]
[469.81494141 623.98925781]
[463.92477417 637.78973389]
[457.18801880 651.19732666]
[449.63076782 664.16009521]
[441.28222656 676.62799072]
[432.17471313 688.55273438]
[422.34347534 699.88824463]
[411.82650757 710.59057617]
[400.66452026 720.61834717]
[388.90069580 729.93280029]
[376.58056641 738.49792480]
[363.75177002 746.28051758]
[350.46395874 753.25042725]
[336.76852417 759.38079834]
[322.71844482 764.64788818]
[308.36810303 769.03131104]
[293.77301025 772.51403809]
[278.98962402 775.08270264]
[264.07513428 776.72729492]
[249.08724976 777.44146729]
[234.08396912 777.22247314]
[219.12332153 776.07116699]
[204.26319885 773.99194336]
[189.56106567 770.99291992]
[175.07383728 767.08569336]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 150]
[40 149]
[41 148]
[42 147]
[45 146]
[46 145]
[47 143]
[48 142]
[49 141]
[50 140]
[51 139]
[52 138]
[53 137]
[54 136]
[55 135]
[63 134]
[64 133]
[65 132]
[66 131]
[67 130]
[68 129]
[70 128]
[71 127]
[80 126]
[81 125]
[82 124]
[89 116]
[90 115]
[91 114]
[92 113]
[93 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
