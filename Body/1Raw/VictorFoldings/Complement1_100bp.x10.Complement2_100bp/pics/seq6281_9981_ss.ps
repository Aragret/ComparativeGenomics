%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[-144.37327576 143.88064575]
[-146.57687378 129.04571533]
[-147.88073730 114.10480499]
[-148.28012085 99.11242676]
[-147.77355957 84.12329102]
[-146.36289978 69.19208527]
[-144.05329895 54.37329102]
[-140.85316467 39.72098160]
[-155.28771973 35.64131546]
[-169.72227478 31.56164932]
[-184.15682983 27.48198318]
[-198.59138489 23.40231514]
[-213.02592468 19.32264900]
[-218.01441956 33.47423935]
[-223.89042664 47.28094482]
[-230.63026428 60.68717575]
[-238.20681763 73.63894653]
[-246.58958435 86.08409882]
[-255.74478149 97.97253418]
[-265.63555908 109.25637054]
[-276.22210693 119.89016724]
[-287.46176147 129.83111572]
[-299.30929565 139.03918457]
[-311.71697998 147.47731018]
[-324.63488770 155.11148071]
[-338.01095581 161.91098022]
[-351.79135132 167.84841919]
[-365.92056274 172.89990234]
[-380.34173584 177.04507446]
[-394.99676514 180.26725769]
[-409.82666016 182.55346680]
[-424.77169800 183.89450073]
[-439.77169800 184.28497314]
[-454.76626587 183.72328186]
[-469.69503784 182.21170044]
[-484.49786377 179.75631714]
[-499.11514282 176.36703491]
[-513.48803711 172.05747986]
[-527.55865479 166.84501648]
[-541.27038574 160.75062561]
[-554.56793213 153.79884338]
[-567.39782715 146.01768494]
[-579.70837402 137.43846130]
[-591.45001221 128.09571838]
[-602.57543945 118.02709961]
[-613.03991699 107.27311707]
[-622.80120850 95.87709808]
[-631.82006836 83.88491058]
[-640.06018066 71.34486389]
[-647.48840332 58.30743408]
[-654.07470703 44.82513046]
[-659.79272461 30.95223427]
[-664.61932373 16.74461174]
[-668.53509521 2.25947309]
[-671.52423096 -12.44485760]
[-673.57482910 -27.30916977]
[-674.67846680 -42.27360916]
[-674.83081055 -57.27791977]
[-674.03118896 -72.26168060]
[-672.28289795 -87.16456604]
[-669.59289551 -101.92655182]
[-665.97198486 -116.48821259]
[-661.43487549 -130.79090881]
[-655.99975586 -144.77703857]
[-649.68847656 -158.39028931]
[-642.52655029 -171.57585144]
[-634.54272461 -184.28062439]
[-625.76922607 -196.45344543]
[-616.24133301 -208.04531860]
[-605.99737549 -219.00955200]
[-595.07867432 -229.30198669]
[-583.52917480 -238.88119507]
[-571.39532471 -247.70860291]
[-558.72607422 -255.74865723]
[-545.57238770 -262.96899414]
[-531.98724365 -269.34051514]
[-518.02532959 -274.83761597]
[-503.74291992 -279.43811035]
[-489.19744873 -283.12347412]
[-474.44754028 -285.87890625]
[-459.55255127 -287.69326782]
[-444.57247925 -288.55929565]
[-429.56762695 -288.47348022]
[-414.59844971 -287.43615723]
[-399.72518921 -285.45153809]
[-385.00775146 -282.52755737]
[-370.50540161 -278.67605591]
[-356.27651978 -273.91247559]
[-342.37841797 -268.25604248]
[-328.86703491 -261.72955322]
[-315.79681396 -254.35922241]
[-303.22036743 -246.17477417]
[-291.18832397 -237.20915222]
[-279.74911499 -227.49845886]
[-268.94885254 -217.08178711]
[-258.83102417 -206.00111389]
[-249.43632507 -194.30101013]
[-240.80261230 -182.02862549]
[-232.96464539 -169.23335266]
[-225.95397949 -155.96673584]
[-219.79887390 -142.28218079]
[-214.52407837 -128.23478699]
[-210.15084839 -113.88114166]
[-206.69679260 -99.27901459]
[-204.17581177 -84.48722076]
[-202.59806824 -69.56531525]
[-201.96990967 -54.57338715]
[-202.29386902 -39.57180023]
[-203.56863403 -24.62096405]
[-205.78907776 -9.78108025]
[-208.94625854 4.88809633]
[-194.51171875 8.96776295]
[-180.07716370 13.04743004]
[-165.64260864 17.12709618]
[-151.20805359 21.20676231]
[-136.77349854 25.28643036]
[-131.83042908 11.12673378]
[-126.04145050 -2.70867538]
[-119.42766571 -16.16931152]
[-112.01321411 -29.20606041]
[-103.82514954 -41.77135468]
[-94.89335632 -53.81933594]
[-85.25041962 -65.30605316]
[-74.93151855 -76.18959045]
[-63.97432327 -86.43022919]
[-52.41880035 -95.99060822]
[-40.30712128 -104.83583832]
[-27.68347740 -112.93364716]
[-14.59393120 -120.25448608]
[-1.08624625 -126.77164459]
[12.79029083 -132.46133423]
[26.98504448 -137.30281067]
[41.44622421 -141.27839661]
[56.12105560 -144.37358093]
[70.95600128 -146.57707214]
[85.89691925 -147.88084412]
[100.88929749 -148.28012085]
[115.87843323 -147.77345276]
[130.80963135 -146.36268616]
[145.62840271 -144.05297852]
[160.28070068 -140.85275269]
[174.71302795 -136.77366638]
[188.87272644 -131.83064270]
[202.70814514 -126.04168701]
[216.16880798 -119.42793274]
[229.20556641 -112.01351166]
[241.77087402 -103.82547760]
[253.81887817 -94.89371490]
[265.30563354 -85.25080109]
[276.18917847 -74.93193054]
[286.42984009 -63.97475433]
[295.99026489 -52.41925430]
[304.83551025 -40.30759430]
[312.93334961 -27.68397141]
[320.25421143 -14.59444237]
[326.77142334 -1.08677244]
[332.46115112 12.78975105]
[337.30264282 26.98449516]
[341.27825928 41.44566345]
[344.37347412 56.12048721]
[346.57699585 70.95542908]
[347.88079834 85.89634705]
[348.28012085 100.88872528]
[347.77349854 115.87786102]
[346.36276245 130.80906677]
[344.05307007 145.62783813]
[340.85287476 160.28013611]
[336.77383423 174.71247864]
[331.83084106 188.87219238]
[326.04193115 202.70762634]
[319.42819214 216.16828918]
[312.01382446 229.20507812]
[303.82580566 241.77040100]
[294.89407349 253.81843567]
[285.25119019 265.30520630]
[274.93234253 276.18878174]
[263.97518921 286.42947388]
[252.41970825 295.98989868]
[240.30807495 304.83517456]
[227.68446350 312.93304443]
[214.59495544 320.25396729]
[201.08729553 326.77117920]
[187.21078491 332.46093750]
[173.01605225 337.30245972]
[158.55490112 341.27813721]
[143.88008118 344.37338257]
[129.04515076 346.57693481]
[114.10423279 347.88076782]
[99.11185455 348.28012085]
[84.12271118 347.77352905]
[69.19151306 346.36282349]
[54.37272263 344.05319214]
[39.72042465 340.85302734]
[25.28807831 336.77401733]
[11.12834740 331.83105469]
[-2.70710182 326.04217529]
[-16.16778564 319.42846680]
[-29.20458603 312.01409912]
[-41.76993561 303.82614136]
[-53.81798172 294.89443970]
[-65.30476379 285.25155640]
[-76.18836975 274.93273926]
[-86.42908478 263.97561646]
[-95.98954773 252.42016602]
[-104.83486176 240.30854797]
[-112.93275452 227.68495178]
[-120.25369263 214.59545898]
[-126.77094269 201.08782959]
[-132.46073914 187.21133423]
[-137.30230713 173.01660156]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 116]
[9 115]
[10 114]
[11 113]
[12 112]
[13 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
