%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[68.39939117 333.45034790]
[65.78147125 348.23080444]
[61.83032608 362.71194458]
[56.57869339 376.77380371]
[50.07009888 390.29983521]
[42.35846710 403.17794800]
[33.50770569 415.30145264]
[23.59115601 426.56985474]
[12.69099045 436.88983154]
[0.89753294 446.17581177]
[-11.69149017 454.35089111]
[-24.97175980 461.34729004]
[-38.83322906 467.10705566]
[-53.16103745 471.58245850]
[-67.83645630 474.73638916]
[-82.73787689 476.54275513]
[-97.74182129 476.98654175]
[-112.72395325 476.06411743]
[-127.56012726 473.78308105]
[-142.12741089 470.16238403]
[-156.30508423 465.23196411]
[-169.97566223 459.03274536]
[-183.02587891 451.61605835]
[-195.34756470 443.04336548]
[-206.83865356 433.38571167]
[-217.40390015 422.72311401]
[-226.95574951 411.14395142]
[-235.41506958 398.74414062]
[-242.71176147 385.62646484]
[-248.78535461 371.89959717]
[-253.58551025 357.67730713]
[-257.07247925 343.07742310]
[-259.21731567 328.22094727]
[-260.00231934 313.23098755]
[-259.42092896 298.23175049]
[-257.47796631 283.34750366]
[-254.18955994 268.70162964]
[-249.58294678 254.41548157]
[-243.69628906 240.60742188]
[-236.57838440 227.39187622]
[-228.28819275 214.87837219]
[-218.89442444 203.17057800]
[-208.47492981 192.36550903]
[-197.11602783 182.55273438]
[-184.91186523 173.81353760]
[-171.96356201 166.22033691]
[-158.37840271 159.83607483]
[-144.26898193 154.71363831]
[-129.75219727 150.89546204]
[-114.94836426 148.41322327]
[-99.98013306 147.28744507]
[-84.97154999 147.52749634]
[-70.04698181 149.13136292]
[-55.33008957 152.08576965]
[-40.94284058 156.36621094]
[-27.00444603 161.93724060]
[-13.63040733 168.75270081]
[-0.93154907 176.75608826]
[10.98690033 185.88108826]
[21.15044785 174.84921265]
[31.31399345 163.81733704]
[41.47753906 152.78546143]
[51.64108658 141.75358582]
[54.57423782 127.15064240]
[69.61528015 122.24375153]
[79.77883148 111.21187592]
[89.85997009 100.10464478]
[92.45805359 92.47427368]
[100.09120178 88.83203125]
[110.25475311 77.80015564]
[119.74365234 66.18289185]
[128.52424622 54.02143860]
[137.30485535 41.85998154]
[145.99467468 29.63349533]
[154.59324646 17.34265709]
[163.19180298 5.05181932]
[151.45539856 -4.29715443]
[140.32292175 -14.35769367]
[129.83744812 -25.09087563]
[120.03952789 -36.45517731]
[110.96707916 -48.40663147]
[102.65520477 -60.89899445]
[95.13604736 -73.88394165]
[88.43872070 -87.31124115]
[82.58911133 -101.12892914]
[77.60986328 -115.28356171]
[73.52024078 -129.72036743]
[70.33606720 -144.38351440]
[68.06965637 -159.21624756]
[66.72977448 -174.16117859]
[66.32160950 -189.16050720]
[66.84674072 -204.15620422]
[68.30313110 -219.09024048]
[70.68515778 -233.90484619]
[73.98359680 -248.54269409]
[78.18568420 -262.94717407]
[83.27516937 -277.06253052]
[89.23236084 -290.83419800]
[96.03421021 -304.20886230]
[103.65440369 -317.13476562]
[112.06345367 -329.56192017]
[121.22883606 -341.44226074]
[131.11508179 -352.72979736]
[141.68395996 -363.38088989]
[152.89456177 -373.35427856]
[164.70352173 -382.61145020]
[177.06515503 -391.11654663]
[189.93162537 -398.83663940]
[203.25317383 -405.74194336]
[216.97825623 -411.80566406]
[231.05377197 -417.00436401]
[245.42526245 -421.31793213]
[260.03710938 -424.72967529]
[274.83282471 -427.22644043]
[289.75512695 -428.79849243]
[304.74627686 -429.43978882]
[319.74832153 -429.14785767]
[334.70321655 -427.92382812]
[349.55303955 -425.77239990]
[364.24041748 -422.70193481]
[378.70849609 -418.72430420]
[392.90127563 -413.85488892]
[406.76388550 -408.11251831]
[420.24267578 -401.51940918]
[433.28549194 -394.10110474]
[445.84188843 -385.88626099]
[457.86325073 -376.90670776]
[469.30313110 -367.19714355]
[480.11724854 -356.79513550]
[490.26373291 -345.74093628]
[499.70336914 -334.07733154]
[508.39962769 -321.84939575]
[516.31884766 -309.10449219]
[523.43035889 -295.89193726]
[529.70672607 -282.26278687]
[535.12365723 -268.26977539]
[539.66015625 -253.96710205]
[543.29864502 -239.41004944]
[546.02514648 -224.65495300]
[547.82897949 -209.75889587]
[548.70330811 -194.77949524]
[548.64459229 -179.77473450]
[547.65319824 -164.80264282]
[545.73291016 -149.92114258]
[542.89117432 -135.18780518]
[539.13897705 -120.65965271]
[534.49078369 -106.39287567]
[528.96459961 -92.44267273]
[522.58184814 -78.86302185]
[515.36724854 -65.70644379]
[507.34860229 -53.02385330]
[498.55700684 -40.86431503]
[489.02645874 -29.27486610]
[478.79385376 -18.30035019]
[467.89874268 -7.98322392]
[456.38330078 1.63659775]
[444.29205322 10.52189732]
[431.67181396 18.63829803]
[418.57138062 25.95440102]
[405.04144287 32.44189835]
[391.13436890 38.07569504]
[376.90396118 42.83399200]
[362.40521240 46.69837952]
[347.69430542 49.65391159]
[332.82809448 51.68914795]
[317.86410522 52.79621887]
[302.86022949 52.97083664]
[287.87454224 52.21232986]
[272.96496582 50.52363205]
[258.18923950 47.91127777]
[243.60450745 44.38537216]
[229.26719666 39.95955658]
[215.23275757 34.65095139]
[201.55551147 28.48009682]
[188.28836060 21.47086906]
[175.48265076 13.65038300]
[166.88407898 25.94122124]
[158.28552246 38.23205948]
[157.02699280 45.51477051]
[149.46630859 50.64058304]
[140.68571472 62.80204010]
[131.90510559 74.96349335]
[146.52079773 71.58985901]
[160.37278748 77.34509277]
[168.29460144 90.08262634]
[167.33160400 105.05168152]
[157.84298706 116.66917419]
[143.36775208 120.60205841]
[129.30480957 115.38346863]
[120.89929199 102.95981598]
[121.28662872 87.96369934]
[111.12308502 98.99558258]
[101.04194641 110.10281372]
[97.65475464 118.58602142]
[90.81070709 121.37541962]
[80.64716339 132.40730286]
[76.98704529 147.79931641]
[62.67296600 151.91712952]
[52.50941849 162.94900513]
[42.34587097 173.98088074]
[32.18232346 185.01277161]
[22.01877785 196.04464722]
[32.08811951 207.17674255]
[41.10343170 219.17837524]
[48.99001694 231.95010376]
[55.68251801 245.38609314]
[61.12547684 259.37500000]
[65.27379608 273.80090332]
[68.09309387 288.54425049]
[69.56001282 303.48291016]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 202]
[60 201]
[61 200]
[62 199]
[63 198]
[65 196]
[66 195]
[67 193]
[69 192]
[70 191]
[71 182]
[72 181]
[73 180]
[74 178]
[75 177]
[76 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
