%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[61.15327072 528.23834229]
[50.71462250 539.02233887]
[39.42108917 548.90747070]
[27.34981728 557.82617188]
[14.58326530 565.71759033]
[1.20864427 572.52783203]
[-12.68268204 578.21032715]
[-26.99582100 582.72625732]
[-41.63299942 586.04473877]
[-56.49422455 588.14318848]
[-71.47798157 589.00726318]
[-86.48191071 588.63098145]
[-101.40352631 587.01696777]
[-116.14088440 584.17626953]
[-130.59332275 580.12823486]
[-144.66212463 574.90057373]
[-158.25115967 568.52893066]
[-171.26760864 561.05688477]
[-183.62255859 552.53546143]
[-195.23161316 543.02288818]
[-206.01547241 532.58410645]
[-215.90045166 521.29046631]
[-224.81904602 509.21905518]
[-232.71032715 496.45242310]
[-239.52038574 483.07772827]
[-245.20269775 469.18634033]
[-249.71846008 454.87313843]
[-253.03680420 440.23593140]
[-255.13508606 425.37466431]
[-255.99894714 410.39089966]
[-255.62249756 395.38696289]
[-254.00831604 380.46539307]
[-251.16741943 365.72805786]
[-247.11923218 351.27566528]
[-241.89137268 337.20693970]
[-235.51959229 323.61798096]
[-228.04737854 310.60159302]
[-219.52581787 298.24676514]
[-210.01309204 286.63781738]
[-199.57418823 275.85409546]
[-188.28041077 265.96923828]
[-176.20892334 257.05078125]
[-163.44218445 249.15965271]
[-150.06739807 242.34974670]
[-136.17594910 236.66760254]
[-121.86269379 232.15202332]
[-107.22544098 228.83384705]
[-92.36416626 226.73574829]
[-77.38038635 225.87205505]
[-62.37646484 226.24868774]
[-47.45489120 227.86305237]
[-32.71759415 230.70411682]
[-18.26525116 234.75248718]
[-4.19658566 239.98049927]
[9.39229870 246.35246277]
[16.86003876 233.34350586]
[24.32778168 220.33454895]
[31.79552269 207.32559204]
[39.26326370 194.31665039]
[46.73100281 181.30769348]
[54.19874573 168.29873657]
[61.66648483 155.28979492]
[68.93971252 142.17109680]
[76.01682281 128.94557190]
[83.09392548 115.72003937]
[90.17103577 102.49451447]
[90.89514923 94.46655273]
[97.45323181 89.12591553]
[104.72646332 76.00721741]
[111.99969482 62.88852310]
[119.27291870 49.76982880]
[124.72827911 35.79703140]
[128.26794434 21.22065735]
[127.25199890 12.14290047]
[131.97035217 6.45440865]
[135.72665405 -8.06765079]
[139.48295593 -22.58971024]
[143.23925781 -37.11177063]
[146.99555969 -51.63382721]
[132.85281372 -56.66181183]
[119.20980072 -62.92006683]
[106.17328644 -70.35961151]
[93.84529877 -78.92222595]
[82.32232666 -88.54089355]
[71.69455719 -99.14032745]
[62.04515839 -110.63758087]
[53.44966125 -122.94266510]
[45.97533035 -135.95927429]
[39.68067169 -149.58552551]
[34.61494827 -163.71478271]
[30.81780243 -178.23646545]
[28.31895638 -193.03692627]
[27.13796806 -208.00030518]
[27.28407860 -223.00952148]
[28.75614357 -237.94708252]
[31.54264450 -252.69607544]
[35.62177277 -267.14108276]
[40.96159744 -281.16906738]
[47.52033615 -294.67019653]
[55.24664688 -307.53881836]
[64.08007050 -319.67422485]
[73.95146179 -330.98144531]
[84.78356171 -341.37197876]
[96.49160767 -350.76449585]
[108.98394775 -359.08551025]
[122.16282654 -366.26986694]
[135.92507935 -372.26132202]
[150.16302490 -377.01303101]
[164.76521301 -380.48779297]
[179.61735535 -382.65838623]
[194.60321045 -383.50784302]
[209.60551453 -383.02951050]
[224.50682068 -381.22711182]
[239.19052124 -378.11480713]
[253.54168701 -373.71691895]
[267.44802856 -368.06787109]
[280.80065918 -361.21185303]
[293.49508667 -353.20257568]
[305.43197632 -344.10266113]
[316.51791382 -333.98339844]
[326.66610718 -322.92391968]
[335.79714966 -311.01083374]
[343.83956909 -298.33734131]
[350.73040771 -285.00265503]
[356.41577148 -271.11114502]
[360.85113525 -256.77151489]
[364.00177002 -242.09597778]
[365.84304810 -227.19941711]
[366.36056519 -212.19842529]
[365.55023193 -197.21040344]
[363.41842651 -182.35264587]
[359.98184204 -167.74143982]
[355.26733398 -153.49113464]
[349.31179810 -139.71327209]
[342.16189575 -126.51567841]
[333.87356567 -114.00164795]
[324.51165771 -102.26911926]
[314.14944458 -91.40991974]
[302.86804199 -81.50903320]
[290.75573730 -72.64395142]
[277.90731812 -64.88406372]
[264.42337036 -58.29008865]
[250.40937805 -52.91364670]
[235.97506714 -48.79681396]
[221.23339844 -45.97180557]
[206.29972839 -44.46073532]
[191.29095459 -44.27543259]
[176.32453918 -45.41733932]
[161.51760864 -47.87752914]
[157.76132202 -33.35546875]
[154.00502014 -18.83340836]
[150.24871826 -4.31134987]
[146.49241638 10.21070957]
[142.84432983 24.76033020]
[139.30465698 39.33670425]
[149.24148560 28.10017967]
[162.13220215 20.43016815]
[176.74818420 17.05772400]
[191.69628906 18.30429077]
[205.55178833 24.05105209]
[216.99404907 33.75026321]
[224.93246460 46.47745895]
[228.61041260 61.01956177]
[227.67732239 75.99050903]
[222.22212219 89.96337128]
[212.76478577 101.60633850]
[200.20671082 109.80968475]
[185.74485779 113.79151154]
[170.75764465 113.17230225]
[156.67355347 108.01107025]
[144.83499146 98.79975128]
[136.37031555 86.41632080]
[132.08636475 72.04107666]
[132.39161682 57.04306030]
[125.11838531 70.16175079]
[117.84515381 83.28044891]
[110.57192993 96.39913940]
[103.39656067 109.57161713]
[96.31945801 122.79714203]
[89.24234772 136.02267456]
[82.16524506 149.24819946]
[81.99652863 155.85751343]
[78.96968079 160.66743469]
[74.67543793 162.75753784]
[67.20769501 175.76647949]
[59.73995590 188.77543640]
[52.27221680 201.78439331]
[44.80447388 214.79333496]
[37.33673477 227.80229187]
[29.86899185 240.81124878]
[22.40125084 253.82019043]
[34.75640869 262.34133911]
[46.36568832 271.85363770]
[57.14979172 282.29214478]
[67.03504944 293.58557129]
[75.95393372 305.65673828]
[83.84551239 318.42318726]
[90.65589142 331.79772949]
[96.33853912 345.68899536]
[100.85463715 360.00207520]
[104.17333221 374.63922119]
[106.27195740 389.50042725]
[107.13618469 404.48416138]
[106.76009369 419.48809814]
[105.14627075 434.40972900]
[102.30572510 449.14712524]
[98.25787354 463.59960938]
[93.03035736 477.66845703]
[86.65888977 491.25756836]
[79.18699646 504.27413940]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 191]
[56 190]
[57 189]
[58 188]
[59 187]
[60 186]
[61 185]
[62 184]
[63 181]
[64 180]
[65 179]
[66 178]
[68 177]
[69 176]
[70 175]
[71 174]
[72 155]
[73 154]
[75 153]
[76 152]
[77 151]
[78 150]
[79 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
