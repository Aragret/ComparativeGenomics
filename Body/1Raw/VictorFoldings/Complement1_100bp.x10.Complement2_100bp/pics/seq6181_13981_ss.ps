%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[85.95434570 876.69299316]
[70.98366547 875.71856689]
[56.06924820 874.09649658]
[41.23909378 871.82989502]
[26.52104759 868.92303467]
[11.94274139 865.38128662]
[-2.46845722 861.21136475]
[-16.68549156 856.42108154]
[-30.68167305 851.01940918]
[-44.43072128 845.01654053]
[-57.90682602 838.42370605]
[-71.08468628 831.25329590]
[-83.93956757 823.51879883]
[-96.44732666 815.23461914]
[-108.58448792 806.41644287]
[-120.32826233 797.08081055]
[-131.65660095 787.24517822]
[-142.54823303 776.92803955]
[-152.98272705 766.14880371]
[-162.94047546 754.92767334]
[-172.40280151 743.28570557]
[-181.35191345 731.24475098]
[-189.77104187 718.82745361]
[-197.64434814 706.05706787]
[-204.95707703 692.95764160]
[-211.69548035 679.55377197]
[-217.84692383 665.87054443]
[-223.39985657 651.93365479]
[-228.34384155 637.76934814]
[-232.66961670 623.40417480]
[-236.36903381 608.86511230]
[-239.43516541 594.17938232]
[-241.86225891 579.37463379]
[-243.64575195 564.47869873]
[-244.78228760 549.51940918]
[-245.26974487 534.52496338]
[-245.10719299 519.52349854]
[-244.29495239 504.54315186]
[-242.83454895 489.61203003]
[-240.72871399 474.75820923]
[-237.98141479 460.00952148]
[-234.59779358 445.39373779]
[-230.58419800 430.93820190]
[-225.94818115 416.67010498]
[-220.69844055 402.61624146]
[-214.84483337 388.80297852]
[-208.39836121 375.25625610]
[-201.37109375 362.00152588]
[-193.77624512 349.06362915]
[-185.62806702 336.46685791]
[-176.94187927 324.23489380]
[-167.73394775 312.39071655]
[-158.02160645 300.95651245]
[-147.82305908 289.95376587]
[-137.15745544 279.40310669]
[-126.04481506 269.32440186]
[-114.50601959 259.73657227]
[-102.56271362 250.65754700]
[-90.23733521 242.10443115]
[-77.55300903 234.09326172]
[-64.53356171 226.63908386]
[-51.20342255 219.75588989]
[-37.58763123 213.45660400]
[-23.71173859 207.75303650]
[-9.60180283 202.65592957]
[4.71568966 198.17481995]
[19.21385765 194.31814575]
[33.86548615 191.09312439]
[48.64306259 188.50582886]
[63.51884460 186.56109619]
[78.46490479 185.26260376]
[93.45318604 184.61276245]
[93.45318604 169.61276245]
[93.45318604 154.61276245]
[93.45318604 139.61276245]
[93.22985840 124.61443329]
[92.78325653 109.62107849]
[92.11347198 94.63603973]
[91.22065735 79.66263580]
[90.32784271 64.68923187]
[89.43502045 49.71582413]
[88.54220581 34.74242020]
[79.43083954 25.61302757]
[78.99546814 13.12326431]
[86.92440796 3.98770404]
[86.25462341 -10.99733448]
[77.90882874 -24.43825340]
[85.07011414 -37.49832153]
[84.40032959 -52.48336029]
[83.73053741 -67.46839905]
[83.06075287 -82.45343781]
[82.39096832 -97.43847656]
[81.72118378 -112.42351532]
[81.05139923 -127.40855408]
[80.38161469 -142.39358521]
[79.71183014 -157.37863159]
[65.31894684 -162.19622803]
[53.64079666 -171.89083862]
[46.25675964 -185.15132141]
[44.16546631 -200.18431091]
[47.64973831 -214.95672607]
[56.23836517 -227.47071838]
[68.76980591 -236.03387451]
[83.54927826 -239.48808289]
[98.57798767 -237.36619568]
[111.82341766 -229.95520020]
[121.49423981 -218.25735474]
[126.28255463 -203.85469055]
[125.54077148 -188.69506836]
[119.36922455 -174.82868958]
[108.60255432 -164.13087463]
[94.69686890 -158.04841614]
[95.36665344 -143.06336975]
[96.03643799 -128.07833862]
[96.70622253 -113.09329987]
[97.37600708 -98.10826111]
[98.04579163 -83.12322235]
[98.71557617 -68.13818359]
[99.38536835 -53.15314484]
[100.05515289 -38.16810608]
[108.35303497 -25.79901695]
[101.23966217 -11.66711998]
[101.90944672 3.31791878]
[112.13710785 17.57842064]
[103.51560974 33.84960175]
[104.40843201 48.82300949]
[105.30124664 63.79641342]
[106.19406128 78.76982117]
[107.08687592 93.74322510]
[110.12003326 98.02270508]
[110.53955841 103.69697571]
[107.77660370 109.17447662]
[108.22321320 124.16782379]
[111.36733246 129.98384094]
[111.13687134 135.66221619]
[108.45318604 139.61276245]
[108.45318604 154.61276245]
[108.45318604 169.61276245]
[108.45318604 184.61276245]
[123.44147491 185.26260376]
[138.38752747 186.56109619]
[153.26332092 188.50582886]
[168.04089355 191.09312439]
[182.69252014 194.31814575]
[197.19068909 198.17481995]
[211.50817871 202.65592957]
[225.61811829 207.75303650]
[239.49400330 213.45660400]
[253.10980225 219.75588989]
[266.43994141 226.63908386]
[279.45938110 234.09326172]
[292.14370728 242.10443115]
[304.46908569 250.65754700]
[316.41238403 259.73657227]
[327.95120239 269.32440186]
[339.06381226 279.40310669]
[349.72943115 289.95376587]
[359.92797852 300.95651245]
[369.64031982 312.39071655]
[378.84826660 324.23489380]
[387.53445435 336.46685791]
[395.68261719 349.06362915]
[403.27746582 362.00152588]
[410.30474854 375.25625610]
[416.75122070 388.80297852]
[422.60482788 402.61624146]
[427.85455322 416.67010498]
[432.49057007 430.93820190]
[436.50418091 445.39373779]
[439.88778687 460.00952148]
[442.63510132 474.75820923]
[444.74093628 489.61203003]
[446.20132446 504.54315186]
[447.01358032 519.52349854]
[447.17611694 534.52496338]
[446.68865967 549.51940918]
[445.55212402 564.47869873]
[443.76864624 579.37463379]
[441.34155273 594.17938232]
[438.27542114 608.86511230]
[434.57598877 623.40417480]
[430.25021362 637.76934814]
[425.30624390 651.93365479]
[419.75329590 665.87054443]
[413.60186768 679.55377197]
[406.86346436 692.95764160]
[399.55072021 706.05706787]
[391.67739868 718.82745361]
[383.25830078 731.24475098]
[374.30917358 743.28570557]
[364.84686279 754.92767334]
[354.88909912 766.14880371]
[344.45462036 776.92803955]
[333.56298828 787.24517822]
[322.23464966 797.08081055]
[310.49087524 806.41644287]
[298.35369873 815.23461914]
[285.84594727 823.51879883]
[272.99105835 831.25329590]
[259.81320190 838.42370605]
[246.33709717 845.01654053]
[232.58805847 851.01940918]
[218.59187317 856.42108154]
[204.37483215 861.21136475]
[189.96363831 865.38128662]
[175.38533020 868.92303467]
[160.66728210 871.82989502]
[145.83712769 874.09649658]
[130.92271423 875.71856689]
[115.95203400 876.69299316]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[72 139]
[73 138]
[74 137]
[75 136]
[76 133]
[77 132]
[78 129]
[79 128]
[80 127]
[81 126]
[82 125]
[85 123]
[86 122]
[88 120]
[89 119]
[90 118]
[91 117]
[92 116]
[93 115]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
