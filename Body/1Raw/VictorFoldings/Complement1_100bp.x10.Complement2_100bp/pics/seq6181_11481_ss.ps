%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[50.54703903 720.04406738]
[35.66625977 721.95922852]
[20.70514488 723.08636475]
[5.70539570 723.42236328]
[-9.29118347 722.96630859]
[-24.24279404 721.71936035]
[-39.10776138 719.68511963]
[-53.84465408 716.86926270]
[-68.41239929 713.27947998]
[-82.77039337 708.92596436]
[-96.87861633 703.82073975]
[-110.69775391 697.97802734]
[-124.18927765 691.41418457]
[-137.31558228 684.14746094]
[-150.04010010 676.19812012]
[-162.32734680 667.58831787]
[-174.14309692 658.34197998]
[-185.45439148 648.48504639]
[-196.22972107 638.04486084]
[-206.43904114 627.05053711]
[-216.05390930 615.53271484]
[-225.04751587 603.52355957]
[-233.39480591 591.05645752]
[-241.07250977 578.16619873]
[-248.05921936 564.88873291]
[-254.33546448 551.26104736]
[-259.88375854 537.32110596]
[-264.68862915 523.10778809]
[-268.73669434 508.66070557]
[-272.01669312 494.02008057]
[-274.51940918 479.22680664]
[-276.23794556 464.32202148]
[-277.16748047 449.34732056]
[-277.30541992 434.34445190]
[-276.65136719 419.35519409]
[-275.20718384 404.42135620]
[-272.97683716 389.58453369]
[-269.96661377 374.88610840]
[-266.18487549 360.36703491]
[-261.64212036 346.06777954]
[-256.35107422 332.02816772]
[-250.32644653 318.28738403]
[-243.58503723 304.88369751]
[-236.14564514 291.85446167]
[-228.02899170 279.23602295]
[-219.25770569 267.06350708]
[-209.85623169 255.37088013]
[-199.85076904 244.19070435]
[-189.26922607 233.55415344]
[-178.14106750 223.49087524]
[-166.49732971 214.02891541]
[-154.37045288 205.19464111]
[-141.79425049 197.01268005]
[-128.80377197 189.50582886]
[-115.43521118 182.69503784]
[-101.72583771 176.59925842]
[-87.71386719 171.23548889]
[-73.43834686 166.61868286]
[-58.93906403 162.76170349]
[-44.25643539 159.67530823]
[-29.43138313 157.36810303]
[-14.50522614 155.84651184]
[0.48043212 155.11477661]
[15.48382473 155.17492676]
[30.46313286 156.02680969]
[45.37660980 157.66804504]
[60.18268204 160.09405518]
[74.84008789 163.29809570]
[78.81218719 148.83357239]
[82.78428650 134.36904907]
[86.75637817 119.90451813]
[90.72847748 105.43999481]
[91.95545197 90.49026489]
[90.39492798 75.57165527]
[88.83440399 60.65305328]
[87.27388000 45.73444748]
[85.60234070 30.82787323]
[83.81987762 15.93415546]
[82.03740692 1.04043853]
[80.25494385 -13.85327911]
[78.47248077 -28.74699593]
[63.45084000 -29.20306587]
[48.66497040 -31.89299965]
[34.44519424 -36.75670624]
[21.10918617 -43.68552780]
[8.95487785 -52.52466965]
[-1.74619985 -63.07666397]
[-10.75498009 -75.10577393]
[-17.87020493 -88.34326935]
[-22.93291473 -102.49341583]
[-25.83000946 -117.24009705]
[-26.49676514 -132.25386047]
[-24.91828918 -147.19929504]
[-21.12984085 -161.74252319]
[-15.21605873 -175.55862427]
[-7.30905771 -188.33895874]
[2.41451645 -199.79800415]
[13.73743534 -209.67976379]
[26.40674210 -217.76347351]
[40.13939667 -223.86854553]
[54.62861252 -227.85856628]
[69.55068970 -229.64442444]
[84.57226562 -229.18621826]
[99.35774994 -226.49418640]
[113.57682800 -221.62844849]
[126.91184998 -214.69772339]
[139.06489563 -205.85685730]
[149.76448059 -195.30334473]
[158.77154541 -183.27294922]
[165.88488770 -170.03443909]
[170.94557190 -155.88357544]
[173.84057617 -141.13647461]
[174.50518799 -126.12261963]
[172.92457581 -111.17740631]
[169.13406372 -96.63472748]
[163.21830750 -82.81945801]
[155.30949402 -70.04025269]
[145.58428955 -58.58258820]
[134.25996399 -48.70244217]
[121.58950043 -40.62053680]
[107.85597992 -34.51742935]
[93.36619568 -30.52946281]
[95.14865875 -15.63574505]
[96.93112946 -0.74202734]
[98.71359253 14.15168953]
[100.49605560 29.04540825]
[104.41212463 35.31327820]
[102.19248962 44.17392349]
[103.75301361 59.09252930]
[105.31352997 74.01113129]
[106.87405396 88.92974091]
[112.07681274 74.86093140]
[120.34418488 62.34492111]
[131.24247742 52.03826904]
[144.20001221 44.48164368]
[158.53703308 40.07145309]
[173.50146484 39.03904343]
[188.30828857 41.43857193]
[202.18078613 47.14416504]
[214.39123535 55.85652542]
[224.29907227 67.11860657]
[231.38458252 80.33963776]
[235.27606201 94.82605743]
[235.76936340 109.81794739]
[232.83863831 124.52885437]
[226.63758850 138.18707275]
[217.49153137 150.07612610]
[205.88023376 159.57234192]
[192.41282654 166.17755127]
[177.79577637 169.54527283]
[162.79583740 169.49884033]
[148.19992065 166.04069519]
[134.77365112 159.35223389]
[123.22138214 149.78431702]
[114.14910126 137.83886719]
[108.03273010 124.14251709]
[105.19300079 109.41209412]
[101.22090149 123.87661743]
[97.24880981 138.34114075]
[93.27671051 152.80566406]
[89.30461121 167.27018738]
[103.54271698 172.00114441]
[117.51129150 177.47691345]
[131.17141724 183.68226624]
[144.48501587 190.59988403]
[157.41497803 198.21049500]
[169.92527771 206.49288940]
[181.98103333 215.42396545]
[193.54864502 224.97885132]
[204.59585571 235.13090515]
[215.09191895 245.85183716]
[225.00753784 257.11175537]
[234.31509399 268.87930298]
[242.98863220 281.12164307]
[251.00399780 293.80468750]
[258.33883667 306.89303589]
[264.97271729 320.35028076]
[270.88714600 334.13885498]
[276.06561279 348.22036743]
[280.49371338 362.55554199]
[284.15911865 377.10443115]
[287.05157471 391.82650757]
[289.16302490 406.68069458]
[290.48760986 421.62561035]
[291.02160645 436.61962891]
[290.76354980 451.62091064]
[289.71417236 466.58767700]
[287.87637329 481.47821045]
[285.25527954 496.25100708]
[281.85818481 510.86486816]
[277.69458008 525.27911377]
[272.77606201 539.45349121]
[267.11633301 553.34857178]
[260.73117065 566.92559814]
[253.63836670 580.14666748]
[245.85771179 592.97503662]
[237.41087341 605.37487793]
[228.32141113 617.31170654]
[218.61462402 628.75213623]
[208.31761169 639.66436768]
[197.45903015 650.01794434]
[186.06918335 659.78405762]
[174.17979431 668.93542480]
[161.82398987 677.44659424]
[149.03623962 685.29382324]
[135.85217285 692.45520020]
[122.30853271 698.91082764]
[108.44306183 704.64270020]
[94.29441071 709.63476562]
[79.90202332 713.87322998]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 161]
[69 160]
[70 159]
[71 158]
[72 157]
[73 131]
[74 130]
[75 129]
[76 128]
[77 126]
[78 125]
[79 124]
[80 123]
[81 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
