%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[141.54769897 560.81567383]
[149.97459412 548.31567383]
[161.14854431 538.19604492]
[174.41992188 531.04522705]
[170.66362000 516.52319336]
[166.90731812 502.00112915]
[163.15101624 487.47906494]
[150.19366455 475.64376831]
[155.26136780 457.94067383]
[151.28927612 443.47616577]
[147.31718445 429.01162720]
[143.34507751 414.54711914]
[139.37298584 400.08258057]
[132.03013611 413.16244507]
[118.04254150 418.57974243]
[103.80515289 413.85781860]
[95.82710266 401.15542603]
[97.75585938 386.27993774]
[108.70960999 376.03222656]
[123.68045044 375.09744263]
[135.82496643 383.90441895]
[133.37924194 369.10516357]
[130.93350220 354.30587769]
[128.48777771 339.50662231]
[126.04205322 324.70733643]
[112.26331329 322.04544067]
[100.19511414 314.82485962]
[91.29756927 303.89538574]
[86.65526581 290.55703735]
[86.84510040 276.40533447]
[91.86466217 263.14047241]
[101.13005829 252.36300659]
[113.54379272 245.38085938]
[111.31867218 230.54681396]
[109.09355164 215.71276855]
[106.86843872 200.87872314]
[104.64331818 186.04467773]
[102.41820526 171.21063232]
[100.19308472 156.37658691]
[97.96797180 141.54255676]
[95.74285126 126.70850372]
[93.51773071 111.87446594]
[88.94213867 126.15955353]
[81.62096405 139.25155640]
[71.84581757 150.62901306]
[60.00603485 159.83876038]
[46.57318497 166.51399231]
[32.08230209 170.38880920]
[17.11054993 171.30891418]
[2.25424361 169.23764038]
[-11.89489174 164.25747681]
[-24.77330399 156.56680298]
[-35.86804962 146.47192383]
[-44.73722839 134.37490845]
[-51.02758789 120.75759125]
[-54.48857880 106.16233826]
[-54.98236084 91.17046356]
[-52.48925781 76.37909698]
[-47.10857391 62.37737656]
[-39.05461502 49.72298050]
[-28.64817619 38.91992569]
[-16.30373383 30.39849663]
[-2.51296425 24.49809837]
[12.17485046 21.45374298]
[27.17469978 21.38668442]
[41.88914871 24.29959297]
[55.73212051 30.07644844]
[68.15225983 38.48716354]
[78.65487671 49.19673920]
[86.82165527 61.77862167]
[92.32731628 75.73167419]
[94.95225525 90.49598694]
[99.13926697 76.09220886]
[103.32627869 61.68842697]
[107.51329041 47.28464508]
[111.70030212 32.88086319]
[104.34642029 19.14921379]
[108.79782867 4.60137558]
[121.93417358 -2.32480454]
[126.12118530 -16.72858620]
[130.30819702 -31.13236809]
[134.49520874 -45.53615189]
[130.91755676 -60.94754028]
[141.89991760 -71.00918579]
[146.08692932 -85.41297150]
[150.27394104 -99.81674957]
[145.47038269 -117.59334564]
[158.60249329 -129.23440552]
[162.57460022 -143.69892883]
[166.54669189 -158.16345215]
[158.98918152 -171.78408813]
[163.22351074 -186.39659119]
[176.25527954 -193.51759338]
[180.22737122 -207.98211670]
[184.19946289 -222.44664001]
[188.17156982 -236.91116333]
[174.52522278 -243.22204590]
[162.10383606 -251.69311523]
[151.24624634 -262.09323120]
[142.24867249 -274.13870239]
[135.35656738 -287.50091553]
[130.75794983 -301.81533813]
[128.57827759 -316.69146729]
[128.87702942 -331.72344971]
[131.64602661 -346.50122070]
[136.80975342 -360.62164307]
[144.22731018 -373.69946289]
[153.69638062 -385.37792969]
[164.95860291 -395.33843994]
[177.70675659 -403.30929565]
[191.59306335 -409.07299805]
[206.23869324 -412.47235107]
[221.24409485 -413.41461182]
[236.19990540 -411.87402344]
[250.69813538 -407.89266968]
[264.34326172 -401.57916260]
[276.76303101 -393.10571289]
[287.61862183 -382.70349121]
[296.61386108 -370.65628052]
[303.50338745 -357.29272461]
[308.09924316 -342.97741699]
[310.27606201 -328.10089111]
[309.97439575 -313.06896973]
[307.20257568 -298.29171753]
[302.03613281 -284.17230225]
[294.61602783 -271.09591675]
[285.14471436 -259.41928101]
[273.88058472 -249.46090698]
[261.13088989 -241.49252319]
[247.24346924 -235.73149109]
[232.59718323 -232.33496094]
[217.59161377 -231.39561462]
[202.63609314 -232.93905640]
[198.66398621 -218.47453308]
[194.69189453 -204.01000977]
[190.71980286 -189.54548645]
[198.28718567 -176.76777649]
[194.46498108 -162.04209900]
[181.01121521 -154.19136047]
[177.03912354 -139.72683716]
[173.06701660 -125.26231384]
[178.77566528 -114.59751129]
[175.58482361 -102.51436615]
[164.67773438 -95.62973785]
[160.49072266 -81.22595978]
[156.30371094 -66.82217407]
[160.18084717 -52.44104004]
[148.89898682 -41.34914017]
[144.71197510 -26.94535828]
[140.52496338 -12.54157543]
[136.33795166 1.86220658]
[143.71427917 14.75117779]
[139.67323303 29.41830635]
[126.10408020 37.06787109]
[121.91706848 51.47165298]
[117.73006439 65.87543488]
[113.54305267 80.27922058]
[109.35604095 94.68299866]
[108.35177612 109.64934540]
[110.57689667 124.48339081]
[112.80200958 139.31742859]
[115.02713013 154.15147400]
[117.25224304 168.98551941]
[119.47736359 183.81956482]
[121.70248413 198.65361023]
[123.92759705 213.48765564]
[126.15271759 228.32170105]
[128.37783813 243.15573120]
[144.00517273 246.93655396]
[156.95405579 256.40213013]
[165.25912476 270.07916260]
[167.67398071 285.85803223]
[163.85806274 301.31808472]
[154.42439270 314.09912109]
[140.84132385 322.26162720]
[143.28704834 337.06088257]
[145.73278809 351.86016846]
[148.17851257 366.65942383]
[150.62423706 381.45870972]
[153.83750916 396.11047363]
[157.80960083 410.57501221]
[161.78170776 425.03952026]
[165.75379944 439.50405884]
[169.72589111 453.96856689]
[180.52928162 461.01483154]
[183.53985596 473.14413452]
[177.67308044 483.72277832]
[181.42938232 498.24484253]
[185.18566895 512.76690674]
[188.94197083 527.28894043]
[204.01614380 527.10784912]
[218.69546509 530.54022217]
[232.12651062 537.38641357]
[243.52838135 547.24847412]
[252.23823547 559.55303955]
[257.74966431 573.58471680]
[259.74224854 588.52770996]
[258.10012817 603.51324463]
[252.91879272 617.67016602]
[244.49948120 630.17529297]
[233.33164978 640.30163574]
[220.06462097 647.46051025]
[205.46969604 651.23565674]
[190.39543152 651.40759277]
[175.71818542 647.96636963]
[162.29130554 641.11199951]
[150.89540100 631.24304199]
[142.19302368 618.93316650]
[136.69009399 604.89819336]
[134.70657349 589.95397949]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 190]
[5 189]
[6 188]
[7 187]
[9 184]
[10 183]
[11 182]
[12 181]
[13 180]
[21 179]
[22 178]
[23 177]
[24 176]
[25 175]
[33 168]
[34 167]
[35 166]
[36 165]
[37 164]
[38 163]
[39 162]
[40 161]
[41 160]
[42 159]
[72 158]
[73 157]
[74 156]
[75 155]
[76 154]
[79 151]
[80 150]
[81 149]
[82 148]
[84 146]
[85 145]
[86 144]
[88 141]
[89 140]
[90 139]
[93 136]
[94 135]
[95 134]
[96 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
