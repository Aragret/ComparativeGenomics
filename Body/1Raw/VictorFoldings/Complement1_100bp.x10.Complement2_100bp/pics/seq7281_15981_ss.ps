%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[221.98043823 396.96704102]
[224.59202576 382.18447876]
[228.59698486 367.71710205]
[233.95903015 353.69592285]
[240.62960815 340.24795532]
[248.54829407 327.49496460]
[257.64340210 315.55242920]
[267.83255005 304.52853394]
[257.83438110 293.34655762]
[247.83619690 282.16458130]
[237.83802795 270.98260498]
[227.83985901 259.80062866]
[221.03810120 256.90963745]
[217.77758789 248.37695312]
[207.94700623 237.04736328]
[201.18904114 234.05541992]
[198.05593872 225.47512817]
[188.39512634 214.00042725]
[178.73431396 202.52572632]
[169.07350159 191.05102539]
[159.24291992 179.72143555]
[149.24475098 168.53945923]
[139.24658203 157.35748291]
[129.24841309 146.17550659]
[124.61459351 145.01930237]
[120.65790558 140.93989563]
[119.12509918 134.50856018]
[109.46428680 123.03385162]
[99.80348206 111.55915070]
[101.31191254 126.48311615]
[95.79778290 140.43283081]
[84.49296570 150.29188538]
[69.92297363 153.85774231]
[55.34278870 150.33380127]
[44.00966263 140.50729370]
[38.45543671 126.57350159]
[39.92094803 111.64526367]
[48.07879257 99.05758667]
[61.10648727 91.62259674]
[76.09361267 91.00127411]
[89.69202423 97.33245850]
[82.03143311 84.43612671]
[74.37083435 71.53980255]
[66.71023560 58.64347458]
[54.42662430 54.70956421]
[48.31159210 43.81047440]
[51.16765594 32.05592346]
[43.69991302 19.04697037]
[36.23217392 6.03801775]
[22.65148735 -2.07835746]
[23.02550125 -16.96826553]
[15.55775928 -29.97721863]
[8.09001827 -42.98617172]
[0.62227714 -55.99512482]
[-6.84546423 -69.00407410]
[-14.31320477 -82.01303101]
[-21.78094673 -95.02198029]
[-24.72405815 -80.31354523]
[-35.67197037 -70.05960846]
[-50.54138565 -68.08464050]
[-63.78637695 -75.12525177]
[-70.46689606 -88.55546570]
[-68.09126282 -103.36614990]
[-57.54553986 -114.03328705]
[-42.76301956 -116.57829285]
[-29.25636482 -110.05113983]
[-35.12532806 -123.85531616]
[-47.64530945 -133.52798462]
[-45.50456238 -148.26794434]
[-51.37352371 -162.07212830]
[-57.24248505 -175.87629700]
[-63.11144257 -189.68048096]
[-68.98040771 -203.48464966]
[-83.57887268 -199.89566040]
[-98.56402588 -198.69503784]
[-113.54769897 -199.91389465]
[-128.14178467 -203.52064514]
[-141.96827698 -209.42187500]
[-154.66902161 -217.46472168]
[-165.91502380 -227.44085693]
[-175.41500854 -239.09188843]
[-182.92291260 -252.11599731]
[-188.24423218 -266.17587280]
[-191.24114990 -280.90728760]
[-191.83602905 -295.92868042]
[-190.01347351 -310.85095215]
[-185.82067871 -325.28759766]
[-179.36627197 -338.86465454]
[-170.81739807 -351.23046875]
[-160.39553833 -362.06469727]
[-148.37060547 -371.08676147]
[-135.05409241 -378.06292725]
[-120.79093933 -382.81246948]
[-105.95057678 -385.21243286]
[-90.91741180 -385.20062256]
[-76.08084106 -382.77731323]
[-61.82516479 -378.00534058]
[-48.51964569 -371.00823975]
[-36.50892258 -361.96728516]
[-26.10410500 -351.11666870]
[-17.57470322 -338.73742676]
[-11.14164639 -325.15023804]
[-6.97156763 -310.70703125]
[-5.17248249 -295.78189087]
[-5.79099131 -280.76144409]
[-8.81107330 -266.03475952]
[-14.15450001 -251.98329163]
[-21.68286514 -238.97099304]
[-31.20116615 -227.33491516]
[-42.46285629 -217.37648010]
[-55.17622757 -209.35362244]
[-49.30726624 -195.54943848]
[-43.43830490 -181.74526978]
[-37.56934738 -167.94108582]
[-31.70038414 -154.13691711]
[-19.60018921 -145.45159912]
[-21.32114983 -129.72427368]
[-15.45218849 -115.92009735]
[-8.77199364 -102.48972321]
[-1.30425286 -89.48076630]
[6.16348839 -76.47181702]
[13.63122940 -63.46286392]
[21.09897041 -50.45391083]
[28.56671143 -37.44495773]
[36.03445435 -24.43600655]
[49.08099747 -17.25012016]
[49.24112701 -1.42972326]
[56.70886612 11.57922935]
[64.17660522 24.58818054]
[79.80545807 32.56978607]
[79.60655975 50.98287582]
[87.26715851 63.87920380]
[94.92775726 76.77552795]
[102.58835602 89.67185974]
[111.27817535 101.89834595]
[120.93898773 113.37304688]
[130.59979248 124.84774780]
[140.43037415 136.17733765]
[150.42855835 147.35931396]
[160.42672729 158.54129028]
[170.42489624 169.72326660]
[176.57591248 172.14741516]
[180.05679321 176.63967896]
[180.54820251 181.39021301]
[190.20901489 192.86491394]
[199.86982727 204.33961487]
[209.53063965 215.81431580]
[219.27659607 227.21678162]
[229.10717773 238.54637146]
[239.02183533 249.80247498]
[249.02000427 260.98443604]
[259.01818848 272.16641235]
[269.01635742 283.34838867]
[279.01452637 294.53036499]
[291.10519409 285.63314819]
[303.98684692 277.92550659]
[317.54284668 271.47729492]
[331.65042114 266.34683228]
[346.18176270 262.58065796]
[361.00534058 260.21282959]
[375.98687744 259.26483154]
[390.99066162 259.74520874]
[405.88085938 261.64962769]
[420.52261353 264.96084595]
[434.78329468 269.64889526]
[448.53375244 275.67126465]
[461.64950562 282.97344971]
[474.01174927 291.48931885]
[485.50848389 301.14175415]
[496.03564453 311.84332275]
[505.49789429 323.49713135]
[513.80950928 335.99758911]
[520.89520264 349.23153687]
[526.69085693 363.07910156]
[531.14398193 377.41488647]
[534.21417236 392.10906982]
[535.87371826 407.02853394]
[536.10748291 422.03820801]
[534.91345215 437.00213623]
[532.30242920 451.78479004]
[528.29797363 466.25231934]
[522.93646240 480.27368164]
[516.26635742 493.72192383]
[508.34814453 506.47518921]
[499.25347900 518.41802979]
[489.06472778 529.44232178]
[477.87420654 539.44812012]
[465.78320312 548.34490967]
[452.90127563 556.05206299]
[439.34503174 562.49981689]
[425.23727417 567.62976074]
[410.70578003 571.39538574]
[395.88214111 573.76269531]
[380.90057373 574.71014404]
[365.89678955 574.22918701]
[351.00665283 572.32421875]
[336.36505127 569.01251221]
[322.10452271 564.32397461]
[308.35427856 558.30108643]
[295.23880005 550.99841309]
[282.87686157 542.48205566]
[271.38046265 532.82922363]
[260.85369873 522.12725830]
[251.39189148 510.47314453]
[243.08073425 497.97235107]
[235.99549866 484.73815918]
[230.20034790 470.89038086]
[225.74778748 456.55441284]
[222.67810059 441.86013794]
[221.01911926 426.94061279]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 154]
[9 153]
[10 152]
[11 151]
[12 150]
[14 149]
[15 148]
[17 147]
[18 146]
[19 145]
[20 144]
[21 141]
[22 140]
[23 139]
[24 138]
[27 137]
[28 136]
[29 135]
[41 134]
[42 133]
[43 132]
[44 131]
[47 129]
[48 128]
[49 127]
[51 125]
[52 124]
[53 123]
[54 122]
[55 121]
[56 120]
[57 119]
[66 118]
[67 117]
[69 115]
[70 114]
[71 113]
[72 112]
[73 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
