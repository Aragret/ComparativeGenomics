%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[191.20394897 360.92086792]
[188.92282104 346.08880615]
[187.70561218 331.13183594]
[187.55853271 316.12609863]
[188.48234558 301.14813232]
[190.47230530 286.27420044]
[193.51829529 271.58016968]
[197.60479736 257.14083862]
[202.71098328 243.02984619]
[208.81083679 229.31907654]
[215.87324524 216.07839966]
[223.86225891 203.37530518]
[211.76651001 194.50440979]
[199.67076111 185.63351440]
[187.57501221 176.76261902]
[175.47926331 167.89172363]
[163.38349915 159.02082825]
[151.28775024 150.14993286]
[139.19200134 141.27903748]
[127.09625244 132.40814209]
[124.30829620 132.70050049]
[121.23655701 131.90612793]
[118.29436493 129.91140747]
[115.92852020 126.75431061]
[114.56575775 122.63158417]
[103.01945496 113.05646515]
[109.14169312 126.75019836]
[112.32510376 141.40849304]
[112.43432617 156.40809631]
[109.46472168 171.11120605]
[103.54254913 184.89263916]
[94.91963196 197.16641235]
[83.96260834 207.41061401]
[71.13739014 215.18966675]
[56.98931122 220.17282104]
[42.11994553 222.14816284]
[27.16155243 221.03172302]
[12.75016785 216.87094116]
[-0.50142699 209.84277344]
[-12.02976799 200.24603271]
[-21.34466553 188.48880005]
[-28.05004311 175.07096863]
[-31.86078644 160.56311035]
[-32.61486053 145.58207703]
[-30.28020287 130.76487732]
[-24.95608139 116.74154663]
[-16.86888313 104.10836792]
[-6.36247730 93.40250397]
[6.11639595 85.07918549]
[20.03713036 79.49230957]
[34.80780792 76.87944031]
[49.80037308 77.35167694]
[64.37733459 80.88893890]
[77.91886902 87.34082031]
[89.84931183 96.43310547]
[83.16912079 83.00273132]
[76.48892212 69.57235718]
[69.11823273 56.50817108]
[61.07706070 43.84564590]
[53.03588867 31.18312073]
[44.99471664 18.52059555]
[31.43896484 24.98580742]
[17.20274162 29.76987457]
[2.49365115 32.80303192]
[-12.47380352 34.04104233]
[-27.48135185 33.46585846]
[-42.31014252 31.08586502]
[-56.74392319 26.93577003]
[-70.57221222 21.07609558]
[-83.59334564 13.59228897]
[-95.61744690 4.59348917]
[-106.46916199 -5.78907537]
[-115.99024200 -17.40399551]
[-124.04184723 -30.08189392]
[-130.50654602 -43.63788605]
[-135.29008484 -57.87429047]
[-138.32269287 -72.58349609]
[-139.56013489 -87.55099487]
[-138.98439026 -102.55851746]
[-136.60385132 -117.38722229]
[-132.45321655 -131.82084656]
[-126.59301758 -145.64891052]
[-119.10872650 -158.66976929]
[-110.10948181 -170.69354248]
[-99.72650909 -181.54486084]
[-88.11122894 -191.06550598]
[-75.43302917 -199.11663818]
[-61.87679672 -205.58084106]
[-47.64021683 -210.36383057]
[-32.93090057 -213.39588928]
[-17.96335220 -214.63278198]
[-2.95584702 -214.05647278]
[11.87276459 -211.67536926]
[26.30623627 -207.52420044]
[40.13408661 -201.66349792]
[53.15466309 -194.17871094]
[65.17809296 -185.17901611]
[76.02902985 -174.79563904]
[85.54924011 -163.18000793]
[93.59989166 -150.50151062]
[100.06358337 -136.94502258]
[104.84605408 -122.70826721]
[107.87755585 -107.99884033]
[109.11389160 -93.03124237]
[108.53702545 -78.02375793]
[106.15536499 -63.19524002]
[102.00365448 -48.76192093]
[96.14242554 -34.93429184]
[88.65715790 -21.91399384]
[79.65701294 -9.89090347]
[69.27323151 0.95964617]
[57.65724182 10.47942352]
[65.69841766 23.14194870]
[73.73958588 35.80447388]
[81.78076172 48.46699905]
[84.96282959 33.80840302]
[96.74538422 24.52554512]
[111.74160004 24.86242676]
[123.09540558 34.66502762]
[125.61600494 49.45172882]
[118.15100098 62.46225357]
[104.11330414 67.74836731]
[89.91930389 62.89216232]
[96.59949493 76.32254028]
[103.27969360 89.75291443]
[112.59457397 101.51016235]
[124.14087677 111.08528137]
[135.96714783 120.31238556]
[148.06289673 129.18327332]
[160.15864563 138.05416870]
[172.25439453 146.92506409]
[184.35015869 155.79595947]
[196.44590759 164.66685486]
[208.54165649 173.53775024]
[220.63740540 182.40864563]
[232.73315430 191.27954102]
[242.44834900 179.84240723]
[252.95471191 169.12747192]
[264.19869995 159.18936157]
[276.12301636 150.07872009]
[288.66690063 141.84196472]
[301.76644897 134.52107239]
[315.35485840 128.15333557]
[329.36294556 122.77123260]
[343.71926880 118.40216064]
[358.35073853 115.06839752]
[373.18273926 112.78693390]
[388.13967896 111.56938171]
[403.14541626 111.42196655]
[418.12341309 112.34542084]
[432.99737549 114.33504486]
[447.69149780 117.38069916]
[462.13088989 121.46687317]
[476.24200439 126.57273102]
[489.95291138 132.67225647]
[503.19375610 139.73437500]
[515.89703369 147.72309875]
[527.99804688 156.59770203]
[539.43511963 166.31298828]
[550.14996338 176.81942749]
[560.08801270 188.06349182]
[569.19854736 199.98788452]
[577.43524170 212.53182983]
[584.75598145 225.63142395]
[591.12365723 239.21989441]
[596.50561523 253.22801208]
[600.87457275 267.58438110]
[604.20825195 282.21585083]
[606.48962402 297.04788208]
[607.70703125 312.00485229]
[607.85430908 327.01055908]
[606.93078613 341.98855591]
[604.94104004 356.86251831]
[601.89526367 371.55661011]
[597.80895996 385.99597168]
[592.70300293 400.10705566]
[586.60339355 413.81790161]
[579.54113770 427.05868530]
[571.55236816 439.76193237]
[562.67761230 451.86288452]
[552.96228027 463.29986572]
[542.45574951 474.01464844]
[531.21160889 483.95257568]
[519.28717041 493.06304932]
[506.74313354 501.29959106]
[493.64349365 508.62030029]
[480.05496216 514.98779297]
[466.04681396 520.36968994]
[451.69039917 524.73858643]
[437.05889893 528.07208252]
[422.22686768 530.35333252]
[407.26989746 531.57067871]
[392.26416016 531.71783447]
[377.28616333 530.79418945]
[362.41226196 528.80432129]
[347.71817017 525.75842285]
[333.27883911 521.67205811]
[319.16778564 516.56597900]
[305.45697021 510.46621704]
[292.21624756 503.40390015]
[279.51309204 495.41497803]
[267.41220093 486.54019165]
[255.97528076 476.82473755]
[245.26060486 466.31811523]
[235.32275391 455.07391357]
[226.21237183 443.14938354]
[217.97590637 430.60531616]
[210.65531921 417.50561523]
[204.28790283 403.91702271]
[198.90611267 389.90884399]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 136]
[13 135]
[14 134]
[15 133]
[16 132]
[17 131]
[18 130]
[19 129]
[20 128]
[25 127]
[26 126]
[55 125]
[56 124]
[57 123]
[58 115]
[59 114]
[60 113]
[61 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
