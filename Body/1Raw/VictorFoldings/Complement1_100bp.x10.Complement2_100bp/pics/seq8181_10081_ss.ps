%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[55.93563843 344.19412231]
[55.96160889 359.25042725]
[52.85624313 373.98306274]
[46.75528336 387.74795532]
[37.92544937 399.94335938]
[26.75273705 410.03613281]
[13.72556973 417.58508301]
[-0.58655941 422.26019287]
[-15.55798626 423.85708618]
[-30.53422356 422.30593872]
[-44.86057663 417.67459106]
[-57.91075516 410.16549683]
[-69.11426544 400.10693359]
[-77.98133087 387.93856812]
[-84.12433624 374.19241333]
[-87.27471924 359.46932983]
[-87.29476929 344.41299438]
[-84.18360138 329.68157959]
[-78.07723236 315.91909790]
[-69.24259949 303.72720337]
[-58.06591415 293.63879395]
[-45.03577805 286.09497070]
[-30.72181129 281.42550659]
[-15.74975872 279.83450317]
[-0.77413225 281.39151001]
[3.83987713 267.11877441]
[8.45388603 252.84605408]
[12.96151447 238.53936768]
[17.36251259 224.19952393]
[21.65663719 209.82730103]
[25.84364700 195.42352295]
[30.03065872 181.01974487]
[34.21767044 166.61596680]
[24.07000542 177.66244507]
[11.98615170 186.54954529]
[-1.58212554 192.94500732]
[-16.12756729 196.60971069]
[-31.10638046 197.40669250]
[-45.95857239 195.30610657]
[-60.12887955 190.38652039]
[-73.08753967 182.83184814]
[-84.35008240 172.92451477]
[-93.49544525 161.03492737]
[-100.18173218 147.60758972]
[-104.15895844 133.14447021]
[-105.27844238 118.18630219]
[-103.49832153 103.29230499]
[-98.88516235 89.01930237]
[-91.61141205 75.90089417]
[-81.94902039 64.42752075]
[-70.25921631 55.02813721]
[-56.97903442 48.05413055]
[-42.60496140 43.76623535]
[-27.67438507 42.32476044]
[-12.74549389 43.78359222]
[1.62358499 48.08819199]
[14.89565182 55.07762909]
[26.57452011 64.49060059]
[36.22356796 75.97519684]
[43.48205948 89.10205078]
[48.07862854 103.38040924]
[49.84143066 118.27646637]
[48.70455933 133.23332214]
[44.71270752 147.68611145]
[45.34533691 142.95231628]
[48.95842743 138.56567383]
[55.17889404 136.32572937]
[65.50556183 125.44639587]
[75.83222961 114.56706238]
[86.15889740 103.68772888]
[89.61100006 90.13875580]
[102.96176910 85.98560333]
[106.85063934 70.64978790]
[121.22444153 66.74553680]
[124.86270142 58.36694336]
[131.78677368 55.78255081]
[142.27427673 45.05817032]
[152.76176453 34.33378983]
[163.24926758 23.60941124]
[163.88589478 10.72696209]
[172.84173584 2.01050782]
[184.93530273 1.74195790]
[195.58131409 -8.82508945]
[206.22732544 -19.39213753]
[216.87333679 -29.95918465]
[227.36083984 -40.68356323]
[237.68750000 -51.56290054]
[248.01417542 -62.44223404]
[258.34085083 -73.32157135]
[248.24903870 -84.42844391]
[239.00506592 -96.25030518]
[230.65942383 -108.72256470]
[223.25769043 -121.77712250]
[216.84027100 -135.34266663]
[211.44224548 -149.34512329]
[207.09307861 -163.70799255]
[203.81652832 -178.35282898]
[201.63049316 -193.19966125]
[200.54690552 -208.16738892]
[200.57168579 -223.17428589]
[201.70469666 -238.13835144]
[203.93975830 -252.97789001]
[207.26466370 -267.61181641]
[211.66125488 -281.96026611]
[217.10549927 -295.94479370]
[223.56768799 -309.48907471]
[231.01249695 -322.51910400]
[239.39929199 -334.96374512]
[248.68226624 -346.75500488]
[258.81069946 -357.82849121]
[269.72927856 -368.12371826]
[281.37838745 -377.58447266]
[293.69436646 -386.15905762]
[306.60998535 -393.80065918]
[320.05468750 -400.46752930]
[333.95504761 -406.12329102]
[348.23510742 -410.73699951]
[362.81695557 -414.28347778]
[377.62088013 -416.74337769]
[392.56604004 -418.10324097]
[407.57083130 -418.35565186]
[422.55325317 -417.49920654]
[437.43154907 -415.53863525]
[452.12442017 -412.48458862]
[466.55160522 -408.35375977]
[480.63430786 -403.16876221]
[494.29562378 -396.95785522]
[507.46096802 -389.75497437]
[520.05834961 -381.59945679]
[532.01910400 -372.53585815]
[543.27777100 -362.61370850]
[553.77288818 -351.88714600]
[563.44720459 -340.41476440]
[572.24780273 -328.25924683]
[580.12664795 -315.48699951]
[587.04071045 -302.16772461]
[592.95227051 -288.37420654]
[597.82891846 -274.18176270]
[601.64416504 -259.66793823]
[604.37707520 -244.91197205]
[606.01275635 -229.99447632]
[606.54223633 -214.99691772]
[605.96270752 -200.00120544]
[604.27728271 -185.08924866]
[601.49511719 -170.34248352]
[597.63146973 -155.84146118]
[592.70745850 -141.66539001]
[586.74993896 -127.89167786]
[579.79150391 -114.59555817]
[571.87005615 -101.84964752]
[563.02893066 -89.72357178]
[553.31640625 -78.28355408]
[542.78552246 -67.59207153]
[531.49377441 -57.70752335]
[519.50292969 -48.68389511]
[506.87835693 -40.57047272]
[493.68905640 -33.41156769]
[480.00708008 -27.24627876]
[465.90713501 -22.10828209]
[451.46624756 -18.02563667]
[436.76330566 -15.02064228]
[421.87854004 -13.10971165]
[406.89334106 -12.30328083]
[391.88946533 -12.60575581]
[376.94891357 -14.01548290]
[362.15328979 -16.52476311]
[347.58337402 -20.11989212]
[333.31878662 -24.78123283]
[319.43737793 -30.48332787]
[306.01498413 -37.19503403]
[293.12493896 -44.87969208]
[280.83764648 -53.49533463]
[269.22018433 -62.99489975]
[258.89349365 -52.11556625]
[248.56683350 -41.23622894]
[238.24017334 -30.35689735]
[237.46687317 -25.64403534]
[233.72477722 -21.36691475]
[227.44038391 -19.31317711]
[216.79437256 -8.74612904]
[206.14836121 1.82091892]
[195.50234985 12.38796711]
[191.81646729 29.54550743]
[173.97364807 34.09691238]
[163.48614502 44.82129288]
[152.99864197 55.54567337]
[142.51115417 66.27005005]
[132.10377502 77.07221222]
[128.95353699 91.62985992]
[113.84110260 96.31227112]
[110.38899994 109.86124420]
[97.03823090 114.01439667]
[86.71156311 124.89373016]
[76.38489532 135.77307129]
[66.05822754 146.65240479]
[55.89468002 157.68428040]
[48.62145233 170.80297852]
[44.43444061 185.20675659]
[40.24742889 199.61053467]
[36.06041718 214.01431274]
[36.67000961 223.12838745]
[31.70236015 228.60052490]
[27.30136108 242.94036865]
[27.77519226 252.06250000]
[22.72661972 257.46005249]
[18.11260986 271.73278809]
[13.49860096 286.00552368]
[26.55173302 293.50949097]
[37.75919724 303.56365967]
[46.63105392 315.72851562]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 207]
[26 206]
[27 205]
[28 203]
[29 202]
[30 200]
[31 199]
[32 198]
[33 197]
[64 196]
[67 195]
[68 194]
[69 193]
[70 192]
[72 190]
[74 188]
[76 187]
[77 186]
[78 185]
[79 184]
[82 182]
[83 181]
[84 180]
[85 179]
[86 176]
[87 175]
[88 174]
[89 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
