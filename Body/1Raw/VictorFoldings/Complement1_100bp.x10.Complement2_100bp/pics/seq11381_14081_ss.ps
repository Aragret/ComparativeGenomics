%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAUxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[124.66085052 399.67254639]
[115.04154205 411.19461060]
[104.45462036 421.83447266]
[92.98065186 431.51110840]
[80.70695496 440.15090942]
[67.72695923 447.68807983]
[54.13944244 454.06527710]
[40.04781342 459.23397827]
[25.55932617 463.15481567]
[10.78424358 465.79797363]
[-4.16498280 467.14334106]
[-19.17457771 467.18066406]
[-34.13031006 465.90963745]
[-48.91835403 463.33999634]
[-63.42615891 459.49121094]
[-77.54331207 454.39266968]
[-91.16236877 448.08309937]
[-104.17968750 440.61056519]
[-116.49618530 432.03192139]
[-128.01812744 422.41244507]
[-138.65782166 411.82537842]
[-148.33430481 400.35125732]
[-156.97392273 388.07745361]
[-164.51091003 375.09735107]
[-170.88792419 361.50973511]
[-176.05642700 347.41802979]
[-179.97706604 332.92950439]
[-182.62002563 318.15438843]
[-183.96517944 303.20513916]
[-184.00227356 288.19552612]
[-182.73106384 273.23980713]
[-180.16119385 258.45181274]
[-176.31222534 243.94406128]
[-171.21347046 229.82698059]
[-164.90371704 216.20800781]
[-157.43099976 203.19079590]
[-148.85217285 190.87442017]
[-139.23254395 179.35261536]
[-128.64530945 168.71305847]
[-117.17107391 159.03674316]
[-104.89714050 150.39729309]
[-91.91693115 142.86048889]
[-78.32923889 136.48367310]
[-64.23746490 131.31536865]
[-49.74886322 127.39492798]
[-34.97370911 124.75217438]
[-20.02444458 123.40724182]
[-5.01484680 123.37034607]
[9.94084930 124.64176941]
[24.72881889 127.21184540]
[39.23651886 131.06101990]
[53.35352707 136.15997314]
[66.97241211 142.46990967]
[74.44015503 129.46096802]
[81.90789032 116.45201111]
[89.37563324 103.44306183]
[96.74632263 90.37887573]
[104.01955414 77.26017761]
[111.29278564 64.14148712]
[107.16287994 49.12210846]
[114.72585297 35.92149734]
[129.06997681 32.07682800]
[136.34321594 18.95813179]
[143.61643982 5.83943796]
[150.88966370 -7.27925587]
[158.16290283 -20.39794922]
[145.46148682 -28.38476562]
[133.21936035 -37.05914688]
[121.47365570 -46.39474869]
[110.26007080 -56.36322021]
[99.61265564 -66.93428802]
[89.56375122 -78.07584381]
[80.14386749 -89.75405884]
[71.38161469 -101.93346405]
[63.30360794 -114.57706451]
[55.93437195 -127.64646912]
[49.29629517 -141.10197449]
[43.40953445 -154.90274048]
[38.29196548 -169.00682068]
[33.95913315 -183.37141418]
[30.42419434 -197.95288086]
[27.69788551 -212.70693970]
[25.78848648 -227.58877563]
[24.70179558 -242.55319214]
[24.44111252 -257.55474854]
[25.00723076 -272.54791260]
[26.39842987 -287.48709106]
[28.61048508 -302.32696533]
[31.63667679 -317.02243042]
[35.46781921 -331.52890015]
[40.09226990 -345.80227661]
[45.49599075 -359.79922485]
[51.66256714 -373.47726440]
[58.57327652 -386.79479980]
[66.20712280 -399.71142578]
[74.54093170 -412.18789673]
[83.54938507 -424.18634033]
[93.20513153 -435.67031860]
[103.47883606 -446.60491943]
[114.33930969 -456.95697021]
[125.75356293 -466.69503784]
[137.68693542 -475.78952026]
[150.10317993 -484.21279907]
[162.96459961 -491.93930054]
[176.23211670 -498.94558716]
[189.86544800 -505.21032715]
[203.82319641 -510.71453857]
[218.06295776 -515.44146729]
[232.54148865 -519.37683105]
[247.21482849 -522.50854492]
[262.03842163 -524.82727051]
[276.96722412 -526.32580566]
[291.95590210 -526.99969482]
[306.95895386 -526.84686279]
[321.93081665 -525.86779785]
[336.82598877 -524.06542969]
[351.59927368 -521.44525146]
[366.20574951 -518.01525879]
[380.60113525 -513.78576660]
[394.74163818 -508.76974487]
[408.58438110 -502.98236084]
[422.08724976 -496.44116211]
[435.20928955 -489.16607666]
[447.91064453 -481.17916870]
[460.15270996 -472.50473022]
[471.89834595 -463.16903687]
[483.11187744 -453.20046997]
[493.75921631 -442.62933350]
[503.80804443 -431.48770142]
[513.22784424 -419.80941772]
[521.98999023 -407.62997437]
[530.06793213 -394.98629761]
[537.43707275 -381.91683960]
[544.07507324 -368.46130371]
[549.96173096 -354.66049194]
[555.07916260 -340.55636597]
[559.41192627 -326.19174194]
[562.94677734 -311.61026001]
[565.67297363 -296.85617065]
[567.58227539 -281.97433472]
[568.66882324 -267.00988770]
[568.92944336 -252.00833130]
[568.36322021 -237.01519775]
[566.97186279 -222.07600403]
[564.75970459 -207.23616028]
[561.73345947 -192.54069519]
[557.90216064 -178.03427124]
[553.27764893 -163.76092529]
[547.87384033 -149.76400757]
[541.70715332 -136.08604431]
[534.79632568 -122.76853943]
[527.16241455 -109.85196686]
[518.82849121 -97.37554932]
[509.81997681 -85.37716675]
[500.16415405 -73.89326477]
[489.89035034 -62.95872498]
[479.02981567 -52.60674667]
[467.61547852 -42.86877441]
[455.68206787 -33.77437973]
[443.26574707 -25.35118294]
[430.40429688 -17.62476349]
[417.13671875 -10.61858845]
[403.50332642 -4.35393381]
[389.54556274 1.15017378]
[375.30575562 5.87701893]
[360.82717896 9.81224632]
[346.15383911 12.94390392]
[331.33023071 15.26248169]
[316.40142822 16.76093864]
[301.41271973 17.43472290]
[286.40966797 17.28178978]
[271.43783569 16.30260086]
[256.54266357 14.50013256]
[241.76940918 11.87985802]
[227.16293335 8.44973469]
[212.76759338 4.22018099]
[198.62712097 -0.79595947]
[184.78443909 -6.58345222]
[171.28158569 -13.12472057]
[164.00836182 -0.00602642]
[156.73513794 13.11266804]
[149.46189880 26.23136139]
[142.18867493 39.35005569]
[146.52708435 53.55265045]
[139.33787537 66.96047974]
[124.41147614 71.41471100]
[117.13824463 84.53340912]
[109.86502075 97.65209961]
[109.02146149 105.66839600]
[102.38459015 110.91079712]
[94.91684723 123.91975403]
[87.44910431 136.92871094]
[79.98136139 149.93765259]
[92.29810333 158.51596069]
[103.82031250 168.13510132]
[114.46031189 178.72187805]
[124.13711548 190.19572449]
[132.77706909 202.46928406]
[140.31442261 215.44917297]
[146.69181824 229.03660583]
[151.86071777 243.12815857]
[155.78176880 257.61660767]
[158.42514038 272.39163208]
[159.77070618 287.34085083]
[159.80822754 302.35043335]
[158.53742981 317.30618286]
[155.96797180 332.09426880]
[152.11941528 346.60214233]
[147.02105713 360.71936035]
[140.71168518 374.33850098]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 193]
[54 192]
[55 191]
[56 190]
[57 188]
[58 187]
[59 186]
[62 183]
[63 182]
[64 181]
[65 180]
[66 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
