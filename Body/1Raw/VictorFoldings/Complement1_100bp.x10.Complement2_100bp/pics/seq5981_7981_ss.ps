%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxGACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGG\
) } def
/len { sequence length } bind def

/coor [
[124.78280640 614.74560547]
[124.39395905 630.04614258]
[116.92900085 643.40777588]
[104.10331726 651.76007080]
[88.86416626 653.18365479]
[74.71338654 647.35156250]
[64.90271759 635.60382080]
[61.68659210 620.64001465]
[65.80404663 605.89874268]
[76.30891418 594.76739502]
[90.78726959 589.80395508]
[85.02354431 576.06970215]
[94.72237396 563.57000732]
[96.94749451 548.73596191]
[99.17261505 533.90191650]
[101.39772797 519.06787109]
[103.62284851 504.23382568]
[105.84796143 489.39978027]
[108.07308197 474.56573486]
[110.18770599 459.71551514]
[111.52593994 444.77532959]
[112.19572449 429.79031372]
[112.86550903 414.80526733]
[113.42372131 399.81564331]
[106.06878662 386.86364746]
[114.21353912 373.29995728]
[114.66014862 358.30661011]
[115.10675049 343.31326294]
[114.43696594 328.32824707]
[112.65450287 313.43450928]
[110.87203217 298.54080200]
[109.08956909 283.64709473]
[107.30710602 268.75335693]
[95.94720459 264.47225952]
[87.43511200 255.71569824]
[83.43020630 244.10270691]
[84.75052643 231.81709290]
[91.20652771 221.19689941]
[101.62548065 214.28941345]
[100.28724670 199.34922791]
[98.94901276 184.40904236]
[89.87062836 176.41468811]
[88.63345337 163.97872925]
[96.44344330 153.71389771]
[95.32779694 138.75544739]
[94.21215057 123.79698944]
[93.09650421 108.83853912]
[83.37483978 120.26172638]
[68.60642242 122.88734436]
[55.54317093 115.51499939]
[50.15743256 101.51522064]
[54.91148758 87.28852081]
[67.63185120 79.33915710]
[82.50294495 81.30146790]
[92.72663116 92.28002167]
[93.17323303 77.28667450]
[93.61984253 62.29332352]
[83.06159210 50.84075928]
[83.72809601 35.64173508]
[94.71143341 25.64663696]
[84.15318298 14.19407558]
[84.81969452 -1.00495124]
[95.80302429 -11.00004959]
[96.24963379 -25.99339867]
[88.92664337 -40.01782227]
[97.03945160 -52.50908279]
[97.48606110 -67.50243378]
[97.82103729 -82.49869537]
[98.04436493 -97.49703217]
[95.79584503 -101.21161652]
[94.93309021 -105.06130981]
[95.32841492 -108.59389496]
[96.72036743 -111.44504547]
[98.75402832 -113.37438965]
[99.86968231 -128.33283997]
[100.98532867 -143.29129028]
[102.10097504 -158.24975586]
[103.21662140 -173.20820618]
[100.73415375 -181.99882507]
[104.46186829 -188.38052368]
[105.80010223 -203.32070923]
[99.32484436 -217.75613403]
[108.16676331 -229.74237061]
[109.05957794 -244.71577454]
[109.50618744 -259.70913696]
[109.95278931 -274.70248413]
[110.39939880 -289.69583130]
[110.84600830 -304.68917847]
[111.29261017 -319.68252563]
[96.12945557 -328.56576538]
[87.59752655 -343.82739258]
[87.96852875 -361.21893311]
[97.05006409 -375.95117188]
[112.26347351 -384.01287842]
[112.26347351 -399.01287842]
[112.26347351 -414.01287842]
[112.26347351 -429.01287842]
[112.26347351 -444.01287842]
[112.26347351 -459.01287842]
[112.26347351 -474.01287842]
[98.92234039 -481.62271118]
[91.18737793 -494.89169312]
[91.13922882 -510.25051880]
[98.79086304 -523.56774902]
[112.08402252 -531.26104736]
[127.44291687 -531.26104736]
[140.73608398 -523.56774902]
[148.38771057 -510.25051880]
[148.33956909 -494.89169312]
[140.60459900 -481.62271118]
[127.26347351 -474.01287842]
[127.26347351 -459.01287842]
[127.26347351 -444.01287842]
[127.26347351 -429.01287842]
[127.26347351 -414.01287842]
[127.26347351 -399.01287842]
[127.26347351 -384.01287842]
[138.82112122 -378.91003418]
[147.62277222 -369.78140259]
[152.33544922 -357.95861816]
[152.22621155 -345.18490601]
[147.27597046 -333.35824585]
[138.18750000 -324.24920654]
[126.28595734 -319.23593140]
[125.83935547 -304.24255371]
[125.39274597 -289.24920654]
[124.94614410 -274.25585938]
[124.49953461 -259.26251221]
[124.05293274 -244.26916504]
[125.87483978 -242.13871765]
[126.96262360 -239.15823364]
[126.98828888 -235.60369873]
[125.72971344 -231.86463928]
[123.10694885 -228.40412903]
[129.67793274 -215.03732300]
[120.74028778 -201.98246765]
[119.40205383 -187.04228210]
[118.17507935 -172.09255981]
[117.05943298 -157.13409424]
[115.94377899 -142.17564392]
[114.82813263 -127.21719360]
[113.71248627 -112.25874329]
[113.04270172 -97.27370453]
[112.81937408 -82.27536774]
[115.86293793 -75.54048920]
[112.47940826 -67.05582428]
[112.03279877 -52.06247711]
[119.38773346 -39.11047745]
[111.24298096 -25.54679298]
[110.79637146 -10.55344296]
[121.16531372 0.07767352]
[120.92597961 15.28942490]
[109.70478058 26.09324265]
[120.07372284 36.72435760]
[119.83438873 51.93611145]
[108.61318970 62.73992920]
[108.16658020 77.73327637]
[107.71997833 92.72663116]
[108.05495453 107.72288513]
[109.17060089 122.68134308]
[110.28625488 137.63980103]
[111.40190125 152.59825134]
[122.11994934 167.57171631]
[113.88919830 183.07080078]
[115.22743225 198.01098633]
[116.56566620 212.95117188]
[132.39738464 221.78939819]
[139.69050598 238.21772766]
[135.69737244 255.58164978]
[122.20082092 266.97088623]
[123.98328400 281.86462402]
[125.76575470 296.75833130]
[127.54821777 311.65203857]
[129.33068848 326.54577637]
[136.67811584 313.46847534]
[149.52911377 305.73208618]
[164.52447510 305.35885620]
[177.74443054 312.44635010]
[185.73332214 325.14193726]
[186.40289307 340.12698364]
[179.57807922 353.48446655]
[167.04290771 361.72274780]
[152.07402039 362.68835449]
[138.58425903 356.12893677]
[130.10009766 343.75988770]
[129.65350342 358.75323486]
[129.20689392 373.74658203]
[136.52987671 387.77099609]
[128.41706848 400.26226807]
[131.28958130 408.93328857]
[127.85054779 415.47503662]
[127.18076324 430.46008301]
[126.51097870 445.44512939]
[138.28262329 436.14843750]
[153.19564819 437.76150513]
[162.70718384 449.36022949]
[161.36859131 464.30038452]
[149.94667053 474.02355957]
[134.98443604 472.95986938]
[125.05323029 461.71954346]
[127.00807190 470.64233398]
[122.90712738 476.79083252]
[120.68200684 491.62487793]
[118.45688629 506.45892334]
[116.23177338 521.29296875]
[114.00665283 536.12701416]
[111.78153992 550.96105957]
[109.55641937 565.79510498]
[115.16098785 580.59033203]
[105.62130737 592.02905273]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 210]
[13 208]
[14 207]
[15 206]
[16 205]
[17 204]
[18 203]
[19 202]
[20 200]
[21 193]
[22 192]
[23 191]
[24 189]
[26 187]
[27 186]
[28 185]
[29 174]
[30 173]
[31 172]
[32 171]
[33 170]
[39 166]
[40 165]
[41 164]
[44 162]
[45 161]
[46 160]
[47 159]
[55 158]
[56 157]
[57 156]
[60 153]
[63 150]
[64 149]
[66 147]
[67 146]
[68 144]
[69 143]
[74 142]
[75 141]
[76 140]
[77 139]
[78 138]
[80 137]
[81 136]
[83 134]
[84 129]
[85 128]
[86 127]
[87 126]
[88 125]
[89 124]
[94 117]
[95 116]
[96 115]
[97 114]
[98 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
