%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAUxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[103.65762329 657.19354248]
[92.47601318 667.27105713]
[79.49452209 674.89117432]
[65.24474335 679.74182129]
[50.31018448 681.62432861]
[35.30241776 680.46166992]
[20.83599281 676.30145264]
[7.50330639 669.31402588]
[-4.14967871 659.78546143]
[-13.64577961 648.10607910]
[-20.59613609 634.75402832]
[-24.71613693 620.27606201]
[-25.83707047 605.26513672]
[-23.91303444 590.33587646]
[-19.02281570 576.09960938]
[-11.36666870 563.13934326]
[-1.25810623 551.98577881]
[10.88893223 543.09570312]
[24.57703400 536.83300781]
[39.24567795 533.45428467]
[54.29419327 533.09790039]
[56.95999146 518.33666992]
[59.62578583 503.57543945]
[62.29158020 488.81423950]
[64.95737457 474.05300903]
[67.62316895 459.29177856]
[60.98583221 449.17880249]
[63.08594131 436.85919189]
[73.33532715 429.02893066]
[76.22059631 414.30902100]
[79.10587311 399.58914185]
[81.66170502 384.80850220]
[83.88681793 369.97445679]
[86.11193848 355.14041138]
[88.33705139 340.30636597]
[90.56217194 325.47232056]
[92.78728485 310.63827515]
[93.90293884 295.67980957]
[93.90293884 280.67980957]
[93.90293884 265.67980957]
[93.79126740 250.68023682]
[93.56793976 235.68190002]
[93.34461212 220.68356323]
[85.41867828 208.07289124]
[92.94966125 194.15905762]
[92.72633362 179.16072083]
[84.26769257 170.51329041]
[83.95888519 158.01976013]
[92.51071167 148.36424255]
[84.77340698 135.63696289]
[92.51071167 121.83679199]
[92.51071167 106.83679199]
[89.36151123 99.41687775]
[92.62403870 91.61387634]
[92.84736633 76.61553955]
[93.07069397 61.61720657]
[93.18236542 46.61762238]
[93.18236542 31.61762047]
[93.18236542 16.61762047]
[93.18236542 1.61762094]
[83.60767365 -14.11155224]
[92.96839905 -28.95553207]
[92.74507141 -43.95386887]
[92.52174377 -58.95220566]
[91.96353149 -73.94181824]
[91.07071686 -88.91522217]
[90.17790222 -103.88862610]
[89.28508759 -118.86203766]
[85.96919250 -124.58185577]
[86.03048706 -130.26457214]
[88.59535980 -134.29328918]
[88.14875031 -149.28663635]
[87.70214844 -164.27998352]
[87.25553894 -179.27333069]
[86.80893707 -194.26667786]
[78.66418457 -207.83036804]
[86.01911163 -220.78236389]
[85.57250977 -235.77571106]
[75.12251282 -240.48867798]
[67.22159576 -248.72372437]
[62.98355484 -259.26464844]
[62.98513412 -270.57431030]
[67.18781281 -281.01885986]
[74.94891357 -289.10360718]
[85.11956787 -293.68713379]
[85.34289551 -308.68545532]
[85.56622314 -323.68380737]
[85.78955078 -338.68212891]
[86.01287842 -353.68048096]
[86.23620605 -368.67880249]
[75.80483246 -377.19943237]
[72.23753357 -389.98556519]
[76.62081909 -402.30908203]
[87.14331055 -409.74591064]
[87.58991241 -424.73925781]
[73.13522339 -429.06643677]
[60.29352188 -436.98809814]
[49.94038391 -447.96423340]
[42.78170013 -461.24636841]
[39.30556107 -475.92898560]
[39.74897766 -491.01095581]
[44.08171844 -505.46395874]
[52.00836563 -518.30261230]
[62.98846817 -528.65148926]
[76.27339172 -535.80505371]
[90.95733643 -539.27551270]
[106.03913116 -538.82629395]
[120.49047852 -534.48797607]
[133.32604980 -526.55639648]
[143.67071533 -515.57226562]
[150.81913757 -502.28457642]
[154.28393555 -487.59930420]
[153.82887268 -472.51766968]
[149.48497009 -458.06802368]
[141.54841614 -445.23550415]
[130.56031799 -434.89508057]
[117.26988220 -427.75180054]
[102.58325958 -424.29266357]
[102.13665771 -409.29931641]
[114.18180084 -397.56246948]
[114.00805664 -380.40774536]
[101.23454285 -368.45547485]
[101.01121521 -353.45715332]
[100.78788757 -338.45880127]
[100.56455994 -323.46047974]
[100.34123230 -308.46212769]
[100.11790466 -293.46380615]
[115.69641113 -283.13891602]
[121.95430756 -265.36907959]
[116.19214630 -247.27468872]
[100.56585693 -236.22232056]
[101.01246643 -221.22897339]
[109.12527466 -208.73771667]
[101.80228424 -194.71328735]
[102.24889374 -179.71994019]
[102.69549561 -164.72659302]
[103.14210510 -149.73324585]
[103.58870697 -134.73988342]
[104.25849152 -119.75485229]
[105.15130615 -104.78144073]
[106.04412842 -89.80803680]
[106.93694305 -74.83463287]
[109.31725311 -72.23339844]
[110.55590057 -68.34999084]
[110.06396484 -63.73357773]
[107.52008057 -59.17553329]
[107.74340820 -44.17719650]
[107.96673584 -29.17885971]
[116.42537689 -20.53143501]
[116.73418427 -8.03790092]
[108.18236542 1.61762094]
[108.18236542 16.61762047]
[108.18236542 31.61762047]
[108.18236542 46.61762238]
[111.32585907 53.30643082]
[108.06903076 61.84053421]
[107.84570312 76.83886719]
[107.62237549 91.83721161]
[107.51071167 106.83679199]
[107.51071167 121.83679199]
[115.24800873 135.63696289]
[107.51071167 148.36424255]
[117.08539581 164.09341431]
[107.72467041 178.93739319]
[107.94799805 193.93572998]
[115.88990784 207.61917114]
[108.34294891 220.46023560]
[108.56627655 235.45857239]
[108.78960419 250.45690918]
[112.04644012 258.99099731]
[108.90293884 265.67980957]
[108.90293884 280.67980957]
[108.90293884 295.67980957]
[117.75228882 283.56829834]
[131.43156433 277.41381836]
[146.36502075 278.82516479]
[158.64909363 287.43338013]
[165.07275391 300.98831177]
[163.95687866 315.94674683]
[155.59315491 328.39859009]
[142.16783142 335.08892822]
[127.19026184 334.26895142]
[114.57554626 326.15298462]
[107.62133026 312.86340332]
[105.39621735 327.69741821]
[103.17109680 342.53146362]
[100.94598389 357.36550903]
[98.72086334 372.19955444]
[96.49574280 387.03359985]
[98.40786743 391.89065552]
[98.27863312 396.53140259]
[96.53226471 400.21450806]
[93.82575989 402.47442627]
[90.94049072 417.19430542]
[88.05521393 431.91418457]
[94.42557526 449.19134521]
[82.38439178 461.95758057]
[79.71859741 476.71881104]
[77.05279541 491.48001099]
[74.38700104 506.24124146]
[71.72120667 521.00244141]
[69.05541229 535.76367188]
[83.02866364 541.36126709]
[95.58889771 549.65740967]
[106.22177887 560.31225586]
[114.49191284 572.88964844]
[120.06062317 586.87438965]
[122.69989014 601.69396973]
[122.30162811 616.74145508]
[118.88214874 631.40063477]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 202]
[22 201]
[23 200]
[24 199]
[25 198]
[26 197]
[29 195]
[30 194]
[31 193]
[32 189]
[33 188]
[34 187]
[35 186]
[36 185]
[37 184]
[38 173]
[39 172]
[40 171]
[41 169]
[42 168]
[43 167]
[45 165]
[46 164]
[49 162]
[51 160]
[52 159]
[54 158]
[55 157]
[56 156]
[57 154]
[58 153]
[59 152]
[60 151]
[62 148]
[63 147]
[64 146]
[65 142]
[66 141]
[67 140]
[68 139]
[71 138]
[72 137]
[73 136]
[74 135]
[75 134]
[77 132]
[78 131]
[85 127]
[86 126]
[87 125]
[88 124]
[89 123]
[90 122]
[94 119]
[95 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
