%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[110.61447906 459.69915771]
[96.41091919 464.56500244]
[81.77653503 467.91949463]
[66.87168121 469.72589111]
[51.85966110 469.96435547]
[36.90494919 468.63235474]
[22.17140007 465.74438477]
[7.82044363 461.33215332]
[-5.99068403 455.44400024]
[-19.11066055 448.14440918]
[-31.39573669 439.51339722]
[-42.71130753 429.64547729]
[-52.93339920 418.64883423]
[-61.95000839 406.64389038]
[-69.66234589 393.76220703]
[-75.98590851 380.14492798]
[-80.85141754 365.94125366]
[-84.20555878 351.30679321]
[-86.01158142 336.40188599]
[-86.24970245 321.38986206]
[-84.91730499 306.43518066]
[-82.02899933 291.70172119]
[-77.61642456 277.35086060]
[-71.72792816 263.53988647]
[-64.42802429 250.42007446]
[-55.79669571 238.13520813]
[-45.92851639 226.81987000]
[-34.93160629 216.59805298]
[-22.92645264 207.58174133]
[-10.04459000 199.86970520]
[3.57284117 193.54647827]
[17.77663994 188.68132019]
[32.41118240 185.32752991]
[47.31612396 183.52186584]
[62.32815933 183.28411865]
[77.28280640 184.61686707]
[80.16808319 169.89697266]
[83.05335236 155.17709351]
[85.71914673 140.41587830]
[88.16487122 125.61660004]
[90.61060333 110.81732941]
[85.86773682 97.66450500]
[94.59012604 86.73694611]
[97.03585052 71.93767548]
[91.65219116 57.06061935]
[101.36111450 45.76521683]
[103.80683899 30.96594620]
[92.22299194 40.49560547]
[77.25743103 41.51153946]
[64.49195862 33.63483047]
[58.68775940 19.80329895]
[62.00967026 5.17575932]
[73.21869659 -4.79207516]
[88.13414764 -6.38244867]
[101.19293213 0.99780852]
[107.52458954 14.59720230]
[111.71160126 0.19342028]
[115.89861298 -14.21036148]
[101.74138641 -19.17885590]
[87.87661743 -24.91305161]
[74.34567261 -31.39583588]
[61.18894577 -38.60786438]
[48.44569016 -46.52760696]
[36.15394592 -55.13143539]
[24.35039139 -64.39366913]
[13.07025337 -74.28666687]
[2.34719825 -84.78090668]
[-7.78677273 -95.84505463]
[-17.30141640 -107.44611359]
[-26.16833496 -119.54944611]
[-34.36106873 -132.11892700]
[-41.85516357 -145.11706543]
[-48.62825775 -158.50505066]
[-54.66013718 -172.24291992]
[-59.93280029 -186.28970337]
[-64.43051147 -200.60345459]
[-68.13983917 -215.14146423]
[-71.04972839 -229.86033630]
[-73.15148163 -244.71617126]
[-74.43883514 -259.66461182]
[-74.90794373 -274.66104126]
[-74.55741119 -289.66070557]
[-73.38827515 -304.61883545]
[-71.40402985 -319.49081421]
[-68.61059570 -334.23223877]
[-65.01631165 -348.79910278]
[-60.63190460 -363.14797974]
[-55.47045898 -377.23599243]
[-49.54737473 -391.02114868]
[-42.88033295 -404.46224976]
[-35.48923111 -417.51922607]
[-27.39612389 -430.15307617]
[-18.62516594 -442.32614136]
[-9.20253563 -454.00204468]
[0.84364891 -465.14596558]
[11.48340511 -475.72463989]
[22.68497849 -485.70651245]
[34.41493988 -495.06176758]
[46.63828278 -503.76251221]
[59.31852722 -511.78274536]
[72.41783142 -519.09857178]
[85.89709473 -525.68811035]
[99.71610260 -531.53173828]
[113.83360291 -536.61199951]
[128.20747375 -540.91375732]
[142.79479980 -544.42413330]
[157.55206299 -547.13262939]
[172.43521118 -549.03125000]
[187.39984131 -550.11425781]
[202.40127563 -550.37841797]
[217.39476013 -549.82299805]
[232.33552551 -548.44958496]
[247.17900085 -546.26232910]
[261.88088989 -543.26776123]
[276.39730835 -539.47485352]
[290.68493652 -534.89477539]
[304.70111084 -529.54138184]
[318.40405273 -523.43048096]
[331.75280762 -516.58044434]
[344.70758057 -509.01162720]
[357.22970581 -500.74667358]
[369.28179932 -491.81024170]
[380.82788086 -482.22897339]
[391.83352661 -472.03146362]
[402.26583862 -461.24816895]
[412.09375000 -449.91128540]
[421.28787231 -438.05459595]
[429.82080078 -425.71353149]
[437.66705322 -412.92489624]
[444.80322266 -399.72686768]
[451.20800781 -386.15881348]
[456.86227417 -372.26126099]
[461.74920654 -358.07568359]
[465.85415649 -343.64437866]
[469.16488647 -329.01046753]
[471.67153931 -314.21755981]
[473.36663818 -299.30987549]
[474.24508667 -284.33184814]
[474.30429077 -269.32818604]
[473.54406738 -254.34370422]
[471.96670532 -239.42308044]
[469.57687378 -224.61087036]
[466.38171387 -209.95127869]
[462.39077759 -195.48803711]
[457.61596680 -181.26431274]
[452.07153320 -167.32257080]
[445.77404785 -153.70440674]
[438.74224854 -140.45046997]
[430.99716187 -127.60031891]
[422.56192017 -115.19228363]
[413.46163940 -103.26342010]
[403.72351074 -91.84930420]
[393.37661743 -80.98401642]
[382.45181274 -70.69998169]
[370.98168945 -61.02789307]
[359.00048828 -51.99660873]
[346.54400635 -43.63308334]
[333.64935303 -35.96228027]
[320.35507202 -29.00709152]
[306.70080566 -22.78827477]
[292.72729492 -17.32438850]
[278.47625732 -12.63173771]
[263.99023438 -8.72432995]
[249.31243896 -5.61382437]
[234.48667908 -3.30950546]
[219.55720520 -1.81824958]
[204.56858826 -1.14450717]
[189.56553650 -1.29028916]
[174.59281921 -2.25516057]
[159.69515991 -4.03624153]
[144.91697693 -6.62821674]
[130.30239868 -10.02335072]
[126.11537933 4.38043165]
[121.92837524 18.78421402]
[118.60610962 33.41167450]
[116.16038513 48.21094513]
[121.71897888 62.02945709]
[111.83512878 74.38339996]
[109.38939667 89.18267059]
[114.13226318 102.33549500]
[105.40987396 113.26305389]
[102.96414948 128.06233215]
[100.51841736 142.86160278]
[102.48510742 149.17378235]
[101.16670990 154.70178223]
[97.77324677 158.06236267]
[94.88796997 172.78225708]
[92.00270081 187.50213623]
[106.35386658 191.91368103]
[120.16528320 197.80116272]
[133.28561401 205.10011292]
[145.57110596 213.73054504]
[156.88716125 223.59790039]
[167.10978699 234.59405518]
[176.12698364 246.59855652]
[183.83993530 259.47985840]
[190.16416931 273.09683228]
[195.03036499 287.30026245]
[198.38520813 301.93457031]
[200.19195557 316.83938599]
[200.43081665 331.85140991]
[199.09915161 346.80615234]
[196.21154785 361.53976440]
[191.79966736 375.89083862]
[185.91184998 389.70208740]
[178.61257935 402.82226562]
[169.98185730 415.10754395]
[160.11422729 426.42333984]
[149.11781311 436.64572144]
[137.11309814 445.66259766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 188]
[37 187]
[38 186]
[39 183]
[40 182]
[41 181]
[43 179]
[44 178]
[46 176]
[47 175]
[56 174]
[57 173]
[58 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
