%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[94.79247284 639.89178467]
[103.59471893 627.46441650]
[116.69396973 619.69720459]
[114.91149902 604.80346680]
[113.12903595 589.90972900]
[111.34657288 575.01605225]
[109.56410217 560.12231445]
[107.78163910 545.22857666]
[105.66385651 543.39196777]
[104.14598083 540.60583496]
[103.59331512 537.09442139]
[104.28330994 533.21002197]
[106.36371613 529.39874268]
[105.47090149 514.42535400]
[104.57808685 499.45196533]
[103.68526459 484.47854614]
[102.79244995 469.50512695]
[101.89963531 454.53173828]
[101.00682068 439.55831909]
[88.17552948 436.99047852]
[76.32656860 431.41275024]
[66.15515900 423.14688110]
[58.25942612 412.67245483]
[53.10520935 400.59921265]
[50.99861526 387.63131714]
[52.06780243 374.52658081]
[56.25522614 362.05191040]
[63.32069778 350.93859863]
[72.85514832 341.83935547]
[84.30434418 335.29013062]
[97.00106049 331.67831421]
[96.77773285 316.67996216]
[96.55440521 301.68164062]
[88.62847137 289.07095337]
[96.15945435 275.15713501]
[95.93612671 260.15878296]
[95.71279907 245.16044617]
[95.48947144 230.16210938]
[95.26614380 215.16377258]
[95.04281616 200.16543579]
[94.81948853 185.16709900]
[85.02095032 170.60839844]
[94.12307739 154.60113525]
[93.67646790 139.60777283]
[93.22985840 124.61443329]
[92.78325653 109.62107849]
[92.11347198 94.63603973]
[91.22065735 79.66263580]
[90.32784271 64.68923187]
[77.41956329 56.28193283]
[72.00023651 42.05223465]
[75.95227814 27.53171921]
[87.55786133 18.23395157]
[86.66504669 3.26054573]
[75.12715149 -7.20438528]
[74.43501282 -22.40226746]
[84.48282623 -33.33739090]
[83.59001160 -48.31079865]
[82.69719696 -63.28420258]
[81.80438232 -78.25760651]
[80.68872833 -93.21606445]
[79.35049438 -108.15625000]
[78.01226044 -123.09643555]
[63.44779968 -124.55557251]
[49.40578842 -128.67308044]
[36.36699295 -135.30641174]
[24.77753448 -144.22689819]
[15.03363037 -155.12765503]
[7.46805048 -167.63410950]
[2.33874917 -181.31690979]
[-0.17992643 -195.70666504]
[-0.00316438 -210.30996704]
[2.86145782 -224.62644958]
[8.31428528 -238.16578674]
[16.16705132 -250.46459961]
[26.14937782 -261.10223389]
[37.91808319 -269.71524048]
[51.06897736 -276.00967407]
[65.15075684 -279.77117920]
[64.03511047 -294.72964478]
[55.29283142 -307.91610718]
[62.06209183 -321.18359375]
[60.94644165 -336.14205933]
[59.83079147 -351.10052490]
[58.71514511 -366.05895996]
[57.59949493 -381.01742554]
[42.64081573 -382.59149170]
[28.20364571 -386.81143188]
[14.75208378 -393.54159546]
[2.71853924 -402.56564331]
[-7.51015806 -413.59350586]
[-15.60519791 -426.27066040]
[-21.30635834 -440.18957520]
[-24.43037033 -454.90286255]
[-24.87681007 -469.93750000]
[-22.63132858 -484.81021118]
[-17.76610374 -499.04290771]
[-10.43753719 -512.17803955]
[-0.88120925 -523.79339600]
[10.59568214 -533.51556396]
[23.62420464 -541.03204346]
[37.78554153 -546.10119629]
[52.62446594 -548.56005859]
[67.66397095 -548.32958984]
[82.42059326 -545.41723633]
[96.41997528 -539.91662598]
[109.21208954 -532.00451660]
[120.38571930 -521.93524170]
[129.58169556 -510.03256226]
[136.50437927 -496.67904663]
[140.93125916 -482.30398560]
[142.72000122 -467.36944580]
[141.81314087 -452.35556030]
[138.23980713 -437.74490356]
[132.11486816 -424.00717163]
[123.63522339 -411.58401489]
[113.07345581 -400.87472534]
[100.76908112 -392.22357178]
[87.11763000 -385.90869141]
[72.55794525 -382.13305664]
[73.67359924 -367.17462158]
[74.78924561 -352.21615601]
[75.90489197 -337.25772095]
[77.02054596 -322.29925537]
[85.68302155 -310.18270874]
[78.99356079 -295.84527588]
[80.10921478 -280.88684082]
[95.39218903 -279.08578491]
[110.03737640 -274.34503174]
[123.48481750 -266.84399414]
[135.21995544 -256.86758423]
[144.79336548 -244.79551697]
[151.83796692 -231.08776855]
[156.08306885 -216.26715088]
[157.36474609 -200.89926147]
[155.63227844 -185.57096863]
[150.95002747 -170.86798096]
[143.49513245 -157.35246277]
[133.55075073 -145.54154968]
[121.49538422 -135.88755798]
[107.78836823 -128.76065063]
[92.95244598 -124.43466949]
[94.29067993 -109.49448395]
[95.62891388 -94.55429840]
[98.65435028 -90.85892487]
[99.39048767 -85.22375488]
[96.77778625 -79.15042877]
[97.67060089 -64.17701721]
[98.56341553 -49.20361328]
[99.45623016 -34.23020935]
[110.73229218 -24.56655693]
[111.85103607 -9.39411163]
[101.63845062 2.36772990]
[102.53126526 17.34113503]
[115.15947723 25.19392014]
[120.80900574 39.14192581]
[117.11901093 53.91478348]
[105.30124664 63.79641342]
[106.19406128 78.76982117]
[107.08687592 93.74322510]
[110.12003326 98.02270508]
[110.53955841 103.69697571]
[107.77660370 109.17447662]
[108.22321320 124.16782379]
[108.66981506 139.16117859]
[109.11642456 154.15452576]
[117.95193481 163.55114746]
[118.01525116 176.04833984]
[109.81782532 184.94377136]
[110.04115295 199.94210815]
[110.26448059 214.94044495]
[110.48780823 229.93878174]
[110.71113586 244.93711853]
[110.93446350 259.93545532]
[111.15779114 274.93380737]
[119.09969330 288.61724854]
[111.55274200 301.45831299]
[111.77606964 316.45663452]
[111.99939728 331.45498657]
[128.35232544 336.20883179]
[142.42886353 345.76171875]
[152.86445618 359.17422485]
[158.65161133 375.13339233]
[159.23716736 392.08139038]
[154.57516479 408.36746216]
[145.13023376 422.40863037]
[131.83129883 432.84381104]
[115.98022461 438.66549683]
[116.87303925 453.63891602]
[117.76586151 468.61233521]
[118.65867615 483.58572388]
[119.55149078 498.55914307]
[120.44430542 513.53253174]
[121.33712006 528.50592041]
[122.67535400 543.44610596]
[124.45782471 558.33984375]
[126.24028778 573.23358154]
[128.02275085 588.12725830]
[129.80522156 603.02099609]
[131.58769226 617.91473389]
[146.14988708 622.37145996]
[157.63613892 632.37072754]
[164.05638123 646.18017578]
[164.29827881 661.40716553]
[158.31991577 675.41357422]
[147.15708923 685.77264404]
[132.74380493 690.68969727]
[117.57726288 689.31274414]
[104.28516388 681.88037109]
[95.17043304 669.68029785]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 200]
[4 199]
[5 198]
[6 197]
[7 196]
[8 195]
[13 194]
[14 193]
[15 192]
[16 191]
[17 190]
[18 189]
[19 188]
[31 179]
[32 178]
[33 177]
[35 175]
[36 174]
[37 173]
[38 172]
[39 171]
[40 170]
[41 169]
[43 166]
[44 165]
[45 164]
[46 163]
[47 160]
[48 159]
[49 158]
[53 154]
[54 153]
[57 150]
[58 149]
[59 148]
[60 147]
[61 144]
[62 143]
[63 142]
[79 127]
[80 126]
[82 124]
[83 123]
[84 122]
[85 121]
[86 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
