%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[209.48962402 339.64886475]
[210.10774231 324.65359497]
[211.91529846 309.75482178]
[214.90084839 295.04678345]
[219.04551697 280.62243652]
[224.32312012 266.57299805]
[230.70027161 252.98725891]
[238.13665771 239.95115662]
[246.58526611 227.54707336]
[234.89768982 218.14492798]
[223.21009827 208.74278259]
[211.52252197 199.34062195]
[199.83494568 189.93847656]
[188.14735413 180.53631592]
[176.45977783 171.13417053]
[164.77220154 161.73202515]
[153.08460999 152.32986450]
[141.39703369 142.92771912]
[126.66291046 144.78273010]
[114.67610168 135.41410828]
[112.83029938 119.94701385]
[101.14271545 110.54486847]
[89.04696655 101.67397308]
[76.56716919 93.35202789]
[64.08737946 85.03008270]
[48.31319809 83.81112671]
[42.01690674 70.31275940]
[29.53711319 61.99081421]
[20.66111946 59.83337402]
[16.93473434 53.45090866]
[4.58022594 44.94408417]
[-7.77428341 36.43725586]
[-20.12879181 27.93042946]
[-32.48330307 19.42360115]
[-41.94961166 31.06959152]
[-52.31127548 41.92666245]
[-63.50278854 51.92616653]
[-75.45339203 61.00489044]
[-88.08752441 69.10543060]
[-101.32531738 76.17656708]
[-115.08306122 82.17360687]
[-129.27378845 87.05861664]
[-143.80776978 90.80072784]
[-158.59312439 93.37627411]
[-173.53637695 94.76896667]
[-188.54302979 94.97000885]
[-203.51821899 93.97812653]
[-218.36724854 91.79959106]
[-232.99627686 88.44818115]
[-247.31277466 83.94506836]
[-261.22622681 78.31874084]
[-274.64871216 71.60476685]
[-287.49530029 63.84558868]
[-299.68481445 55.09027100]
[-311.14019775 45.39416122]
[-321.78900146 34.81856537]
[-331.56390381 23.43034744]
[-340.40307617 11.30150890]
[-348.25070190 -1.49126911]
[-355.05709839 -14.86710453]
[-360.77926636 -28.74142838]
[-365.38101196 -43.02652359]
[-368.83325195 -57.63207626]
[-371.11416626 -72.46573639]
[-372.20932007 -87.43372345]
[-372.11181641 -102.44141388]
[-370.82223511 -117.39390564]
[-368.34872437 -132.19667053]
[-364.70697021 -146.75611877]
[-359.91995239 -160.98020935]
[-354.01794434 -174.77899170]
[-347.03829956 -188.06524658]
[-339.02508545 -200.75495911]
[-330.02902222 -212.76789856]
[-320.10693359 -224.02812195]
[-309.32162476 -234.46443176]
[-297.74118042 -244.01084900]
[-285.43890381 -252.60700989]
[-272.49255371 -260.19857788]
[-258.98397827 -266.73754883]
[-244.99856567 -272.18258667]
[-230.62475586 -276.49926758]
[-215.95341492 -279.66027832]
[-201.07731628 -281.64566040]
[-186.09049988 -282.44284058]
[-171.08772278 -282.04678345]
[-156.16384888 -280.45999146]
[-141.41320801 -277.69250488]
[-126.92909241 -273.76184082]
[-112.80304718 -268.69281006]
[-99.12439728 -262.51748657]
[-85.97962189 -255.27491760]
[-73.45182800 -247.01086426]
[-61.62022400 -237.77760315]
[-50.55960846 -227.63349915]
[-40.33991241 -216.64268494]
[-31.02575493 -204.87464905]
[-22.67601776 -192.40380859]
[-15.34349442 -179.30899048]
[-9.07454205 -165.67300415]
[-3.90879583 -151.58203125]
[0.12108314 -137.12519836]
[2.98961687 -122.39388275]
[4.67866945 -107.48123169]
[5.17756224 -92.48152924]
[4.48314047 -77.48960114]
[2.59979463 -62.60023880]
[-0.46056780 -47.90757751]
[-4.67859793 -33.50451279]
[-10.02762794 -19.48210335]
[-16.47383881 -5.92900515]
[-23.97647476 7.06909227]
[-11.62196541 15.57591915]
[0.73254371 24.08274651]
[13.08705235 32.58957291]
[25.44156265 41.09640121]
[37.85905838 49.51102066]
[50.33885193 57.83296204]
[65.22039032 58.45667648]
[72.40931702 72.55029297]
[84.88911438 80.87223053]
[97.36890411 89.19417572]
[95.49864197 74.31123352]
[104.59070587 62.38083267]
[119.43675232 60.23725891]
[131.53228760 69.10844421]
[133.94845581 83.91257477]
[125.30113983 96.16916656]
[110.54486847 98.85728455]
[122.23244476 108.25943756]
[137.73588562 106.74906158]
[149.45481873 116.45066833]
[150.79917908 131.24014282]
[162.48677063 140.64228821]
[174.17434692 150.04443359]
[185.86192322 159.44659424]
[197.54951477 168.84873962]
[209.23709106 178.25088501]
[220.92466736 187.65304565]
[232.61225891 197.05519104]
[244.29983521 206.45735168]
[255.98741150 215.85949707]
[266.29370117 204.94982910]
[277.43417358 194.89350891]
[289.33840942 185.75407410]
[301.93115234 177.58934021]
[315.13278198 170.45092773]
[328.85983276 164.38395691]
[343.02554321 159.42678833]
[357.54028320 155.61076355]
[372.31234741 152.96000671]
[387.24829102 151.49127197]
[402.25372314 151.21386719]
[417.23376465 152.12951660]
[432.09371948 154.23245239]
[446.73959351 157.50938416]
[461.07882690 161.93957520]
[475.02075195 167.49502563]
[488.47720337 174.14059448]
[501.36312866 181.83428955]
[513.59704590 190.52746582]
[525.10162354 200.16514587]
[535.80407715 210.68641663]
[545.63684082 222.02473450]
[554.53765869 234.10844421]
[562.45025635 246.86111450]
[569.32464600 260.20214844]
[575.11730957 274.04714966]
[579.79174805 288.30865479]
[583.31823730 302.89645386]
[585.67462158 317.71829224]
[586.84594727 332.68054199]
[586.82482910 347.68850708]
[585.61132812 362.64736938]
[583.21319580 377.46255493]
[579.64556885 392.04034424]
[574.93103027 406.28860474]
[569.09930420 420.11724854]
[562.18737793 433.43884277]
[554.23883057 446.16915894]
[545.30401611 458.22775269]
[535.43939209 469.53829956]
[524.70727539 480.02938843]
[513.17559814 489.63461304]
[500.91726685 498.29327393]
[488.00970459 505.95062256]
[474.53457642 512.55822754]
[460.57705688 518.07440186]
[446.22540283 522.46417236]
[431.57034302 525.69976807]
[416.70452881 527.76086426]
[401.72195435 528.63427734]
[386.71737671 528.31457520]
[371.78561401 526.80377197]
[357.02108765 524.11145020]
[342.51715088 520.25451660]
[328.36547852 515.25744629]
[314.65557861 509.15179443]
[301.47412109 501.97622681]
[288.90441895 493.77603149]
[277.02600098 484.60308838]
[265.91387939 474.51541138]
[255.63839722 463.57675171]
[246.26446533 451.85629272]
[237.85136414 439.42810059]
[230.45230103 426.37075806]
[224.11402893 412.76684570]
[218.87664795 398.70236206]
[214.77323914 384.26620483]
[211.82977295 369.54968262]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 142]
[10 141]
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[21 130]
[22 129]
[23 122]
[24 121]
[25 120]
[27 118]
[28 117]
[30 116]
[31 115]
[32 114]
[33 113]
[34 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
