%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGGxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[100.90240479 624.90222168]
[88.00629425 617.22479248]
[75.77888489 608.52172852]
[64.30154419 598.85101318]
[53.65065765 588.27691650]
[43.89710617 576.86981201]
[35.10579300 564.70574951]
[27.33523178 551.86553955]
[20.63713074 538.43463135]
[15.05606365 524.50250244]
[10.62917614 510.16180420]
[7.38592625 495.50799561]
[5.34789848 480.63858032]
[4.52865601 465.65255737]
[4.93365002 450.64959717]
[6.56018591 435.72955322]
[9.39743900 420.99176025]
[13.42652798 406.53427124]
[18.62063980 392.45327759]
[24.94520569 378.84252930]
[32.35813904 365.79257202]
[40.81010437 353.39028931]
[50.24485779 341.71817017]
[60.59960938 330.85391235]
[71.80545044 320.86981201]
[83.78780365 311.83233643]
[96.46693420 303.80163574]
[109.75845337 296.83108521]
[123.57391357 290.96716309]
[137.82138062 286.24880981]
[134.28170776 271.67245483]
[130.74203491 257.09606934]
[127.20235443 242.51969910]
[123.66268158 227.94331360]
[108.05066681 223.77470398]
[96.60530090 212.23522949]
[92.51768494 196.40777588]
[96.99517822 180.58856201]
[108.90681458 169.12100220]
[105.15051270 154.59893799]
[94.47257996 144.21476746]
[98.50750732 128.91673279]
[96.16333771 127.37953186]
[94.28683472 124.82114410]
[93.26999664 121.41505432]
[93.43484497 117.47330475]
[94.98741913 113.41825104]
[85.94354248 102.75523376]
[90.29269409 89.46702576]
[87.40741730 74.74713135]
[84.52214813 60.02724075]
[74.27484894 47.97305298]
[79.41955566 33.99516678]
[76.53427887 19.27527618]
[73.64900970 4.55538511]
[63.40171051 -7.49880266]
[68.54641724 -21.47668839]
[53.83672333 -25.39922905]
[42.33568192 -35.27916336]
[36.28955841 -49.11623383]
[36.84847641 -64.14449310]
[43.84805679 -77.38516235]
[55.85261917 -86.23705292]
[52.96734619 -100.95694733]
[50.08207321 -115.67684174]
[47.19680023 -130.39672852]
[32.26036835 -128.90090942]
[17.24949646 -128.81034851]
[2.29610324 -130.12585449]
[-12.46839619 -132.83583069]
[-26.91424751 -136.91650391]
[-40.91450119 -142.33198547]
[-54.34611511 -149.03468323]
[-67.09104919 -156.96569824]
[-79.03730011 -166.05534363]
[-90.07988739 -176.22370911]
[-100.12174988 -187.38146973]
[-109.07465363 -199.43052673]
[-116.85990906 -212.26502991]
[-123.40910339 -225.77215576]
[-128.66468811 -239.83322144]
[-132.58044434 -254.32463074]
[-135.12199402 -269.11904907]
[-136.26698303 -284.08648682]
[-136.00537109 -299.09533691]
[-134.33941650 -314.01376343]
[-131.28379822 -328.71060181]
[-126.86535645 -343.05676270]
[-121.12291718 -356.92611694]
[-114.10694885 -370.19677734]
[-105.87911224 -382.75213623]
[-96.51171875 -394.48187256]
[-86.08707428 -405.28283691]
[-74.69681549 -415.06018066]
[-62.44102859 -423.72796631]
[-49.42742157 -431.20996094]
[-35.77036285 -437.44049072]
[-21.58987808 -442.36471558]
[-7.01058149 -445.93945312]
[7.83939648 -448.13320923]
[22.82955170 -448.92675781]
[37.82814789 -448.31307983]
[52.70337296 -446.29760742]
[67.32450104 -442.89804077]
[81.56304169 -438.14425659]
[95.29385376 -432.07800293]
[108.39627075 -424.75265503]
[120.75515747 -416.23251343]
[132.26188660 -406.59252930]
[142.81533813 -395.91735840]
[152.32276917 -384.30084229]
[160.70062256 -371.84509277]
[167.87527466 -358.65954590]
[173.78367615 -344.86007690]
[178.37390137 -330.56796265]
[181.60559082 -315.90881348]
[183.45037842 -301.01144409]
[183.89202881 -286.00680542]
[182.92665100 -271.02673340]
[180.56275940 -256.20288086]
[176.82110596 -241.66554260]
[171.73458862 -227.54244995]
[165.34788513 -213.95773315]
[157.71714783 -201.03076172]
[148.90942383 -188.87516785]
[139.00212097 -177.59776306]
[128.08232117 -167.29765320]
[116.24595642 -158.06536865]
[103.59707642 -149.98204041]
[90.24683380 -143.11869812]
[76.31255341 -137.53565979]
[61.91669083 -133.28199768]
[64.80196381 -118.56211090]
[67.68723297 -103.84221649]
[70.57250977 -89.12232971]
[85.03050995 -85.45741272]
[96.51074219 -75.83900452]
[102.70175934 -62.13380814]
[102.32678986 -47.03812790]
[95.40666962 -33.54743195]
[83.26630402 -24.36196136]
[93.30722809 -13.36063766]
[88.36889648 1.67011273]
[91.25417328 16.39000320]
[94.13944244 31.10989571]
[104.18036652 42.11121750]
[99.24204254 57.14196777]
[102.12731171 71.86186218]
[105.01258087 86.58174896]
[114.05645752 97.24476624]
[109.70730591 110.53297424]
[113.02956390 125.16043854]
[123.97617340 136.58332825]
[119.67256927 150.84265137]
[123.42887115 165.36470032]
[137.08404541 168.39773560]
[148.04791260 176.97734070]
[154.21600342 189.38430786]
[154.43563843 203.17201233]
[148.72097778 215.64884949]
[138.23905945 224.40364075]
[141.77873230 238.98002625]
[145.31840515 253.55639648]
[148.85807800 268.13278198]
[152.39775085 282.70913696]
[167.22241211 280.36770630]
[182.18858337 279.24243164]
[197.19668579 279.34078979]
[212.14683533 280.66210938]
[226.93952942 283.19763184]
[241.47633362 286.93048096]
[255.66050720 291.83578491]
[269.39764404 297.88092041]
[282.59634399 305.02566528]
[295.16876221 313.22244263]
[307.03121948 322.41674805]
[318.10476685 332.54733276]
[328.31573486 343.54684448]
[337.59616089 355.34201050]
[345.88430786 367.85440063]
[353.12496948 381.00073242]
[359.26995850 394.69348145]
[364.27844238 408.84155273]
[368.11703491 423.35079956]
[370.76019287 438.12463379]
[372.19036865 453.06475830]
[372.39801025 468.07174683]
[371.38174438 483.04574585]
[369.14834595 497.88705444]
[365.71264648 512.49694824]
[361.09753418 526.77813721]
[355.33370972 540.63568115]
[348.45953369 553.97729492]
[340.52078247 566.71423340]
[331.57025146 578.76165771]
[321.66751099 590.03942871]
[310.87847900 600.47253418]
[299.27493286 609.99151611]
[286.93411255 618.53302002]
[273.93814087 626.04016113]
[260.37353516 632.46307373]
[246.33049011 637.75891113]
[231.90252686 641.89251709]
[217.18565369 644.83636475]
[202.27778625 646.57080078]
[187.27815247 647.08435059]
[172.28656006 646.37359619]
[157.40280151 644.44323730]
[142.72590637 641.30609131]
[128.35354614 636.98309326]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 165]
[31 164]
[32 163]
[33 162]
[34 161]
[39 155]
[40 154]
[42 152]
[47 151]
[49 149]
[50 148]
[51 147]
[53 145]
[54 144]
[55 143]
[57 141]
[63 135]
[64 134]
[65 133]
[66 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
