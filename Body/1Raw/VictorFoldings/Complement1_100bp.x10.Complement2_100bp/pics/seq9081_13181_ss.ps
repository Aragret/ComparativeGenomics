%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[-105.97216797 512.05578613]
[-99.92752075 525.80987549]
[-95.81209564 540.25903320]
[-93.70256042 555.13397217]
[-93.63820648 570.15759277]
[-95.62024689 585.05004883]
[-99.61175537 599.53387451]
[-105.53836060 613.33929443]
[-113.28965759 626.20904541]
[-122.72125244 637.90344238]
[-133.65744019 648.20458984]
[-145.89447021 656.92059326]
[-159.20439148 663.88909912]
[-173.33924866 668.98022461]
[-188.03570557 672.09918213]
[-203.01998901 673.18786621]
[-218.01292419 672.22595215]
[-232.73524475 669.23138428]
[-246.91264343 664.26000977]
[-260.28103638 657.40435791]
[-272.59133911 648.79211426]
[-283.61425781 638.58386230]
[-293.14443970 626.96966553]
[-301.00430298 614.16589355]
[-307.04745483 600.41113281]
[-311.16131592 585.96154785]
[-313.26925659 571.08636475]
[-313.33197021 556.06274414]
[-311.34832764 541.17053223]
[-307.35525513 526.68707275]
[-301.42715454 512.88232422]
[-293.67446899 500.01339722]
[-284.24160767 488.32003784]
[-273.30429077 478.02008057]
[-261.06631470 469.30538940]
[-247.75564575 462.33834839]
[-233.62023926 457.24874878]
[-218.92344666 454.13137817]
[-203.93905640 453.04431152]
[-188.94621277 454.00784302]
[-174.22421265 457.00399780]
[-160.04734802 461.97692871]
[-146.67971802 468.83404541]
[-138.08114624 456.54321289]
[-129.48258972 444.25234985]
[-120.88401794 431.96151733]
[-112.93733215 419.23950195]
[-105.66410828 406.12078857]
[-98.39087677 393.00210571]
[-91.11764526 379.88339233]
[-83.84441376 366.76470947]
[-76.57118988 353.64602661]
[-91.25127411 356.72741699]
[-103.88540649 348.64172363]
[-107.23618317 334.02075195]
[-99.38411713 321.24011230]
[-84.82723999 317.62109375]
[-71.90438843 325.23684692]
[-68.01823425 339.72378540]
[-59.60361481 327.30630493]
[-51.18899536 314.88879395]
[-61.79814529 303.65179443]
[-69.65167999 290.33404541]
[-74.35504913 275.59860229]
[-75.67060089 260.17977905]
[-73.52960968 244.84671021]
[-68.03585052 230.36497498]
[-59.46057129 217.45828247]
[-48.22909546 206.77239990]
[-34.89974594 198.84278870]
[-20.13607979 194.06779480]
[-4.67385006 192.68864441]
[10.71565247 194.77723694]
[25.26407242 200.23240662]
[33.49288177 187.69100952]
[41.72168732 175.14959717]
[42.23460007 160.26382446]
[56.27430344 152.97018433]
[64.50311279 140.42878723]
[72.73191833 127.88738251]
[80.96073151 115.34597778]
[89.18953705 102.80458069]
[97.32475281 90.20227051]
[105.36592865 77.53974152]
[113.40709686 64.87722015]
[121.44827271 52.21469498]
[127.00749969 38.28289413]
[129.89277649 23.56300354]
[124.95443726 8.53225327]
[134.99536133 -2.46906900]
[137.88063049 -17.18896103]
[140.76591492 -31.90885162]
[135.82757568 -46.93960190]
[145.86849976 -57.94092560]
[148.75376892 -72.66082001]
[150.75778198 -87.52634430]
[151.87344360 -102.48479462]
[152.98908997 -117.44325256]
[154.10473633 -132.40170288]
[140.18022156 -138.35037231]
[128.94337463 -148.49984741]
[121.61307526 -161.74920654]
[118.98447418 -176.66125488]
[121.34269714 -191.61843872]
[128.43194580 -204.99832153]
[139.48321533 -215.34956360]
[153.29776001 -221.54931641]
[168.37709045 -222.92509460]
[183.08549500 -219.32765198]
[195.82751465 -211.14723206]
[205.22100830 -199.27114868]
[210.24703979 -184.98767090]
[210.36039734 -169.84614563]
[205.54881287 -155.48901367]
[196.33419800 -143.47361755]
[183.71607971 -135.10331726]
[169.06318665 -131.28605652]
[167.94754028 -116.32760620]
[166.83189392 -101.36914825]
[165.71624756 -86.41069794]
[176.40370178 -96.93581390]
[191.21894836 -99.28285980]
[204.63624573 -92.57643890]
[211.65129089 -79.31788635]
[209.64762878 -64.45230865]
[199.37258911 -53.52420425]
[184.65849304 -50.60948181]
[170.99334717 -56.79526138]
[163.47366333 -69.77554321]
[160.58839417 -55.05565262]
[165.73309326 -41.07776642]
[155.48579407 -29.02357864]
[152.60052490 -14.30368805]
[149.71525574 0.41620365]
[154.85995483 14.39408875]
[144.61265564 26.44827652]
[141.72738647 41.16816711]
[150.82894897 29.24501991]
[162.40467834 19.70548630]
[175.84730530 13.04999352]
[190.45169067 9.62767315]
[205.45167542 9.61805439]
[220.06042480 13.02164173]
[233.51159668 19.65989113]
[245.09953308 29.18457031]
[254.21638489 41.09603500]
[260.38388062 54.76943588]
[263.27850342 69.48748779]
[262.74841309 84.47811890]
[258.82141113 98.95494843]
[251.70346069 112.15854645]
[241.76800537 123.39627838]
[229.53622437 132.07864380]
[215.64976501 137.75018311]
[200.83708191 140.11335754]
[185.87522888 139.04421997]
[171.54908752 134.59886169]
[158.61013794 127.01045990]
[147.73716736 116.67708588]
[139.50053406 104.14082336]
[134.33232117 90.05929565]
[132.50364685 75.17118073]
[134.11079407 60.25586700]
[126.06962585 72.91838837]
[118.02845001 85.58091736]
[109.98727417 98.24343872]
[108.66807556 106.19531250]
[101.73093414 111.03338623]
[93.50212860 123.57479095]
[85.27332306 136.11619568]
[77.04450989 148.65759277]
[68.81570435 161.19898987]
[67.71421051 176.98181152]
[54.26308823 183.37840271]
[46.03428268 195.91981506]
[37.80547333 208.46121216]
[48.00827408 218.87550354]
[55.81286621 231.18264771]
[60.87850571 244.84060669]
[62.98501205 259.24847412]
[62.04235077 273.77288818]
[58.09445572 287.77590942]
[51.31720734 300.64303589]
[42.01058960 311.81011963]
[30.58541679 320.78823853]
[17.54519844 327.18487549]
[3.46394372 330.72134399]
[-11.03909492 331.24468994]
[-25.32666397 328.73446655]
[-38.77149963 323.30340576]
[-47.18611908 335.72091675]
[-55.60073853 348.13839722]
[-63.45249176 360.91925049]
[-70.72572327 374.03793335]
[-77.99895477 387.15664673]
[-85.27217865 400.27532959]
[-92.54541016 413.39401245]
[-99.81864166 426.51272583]
[-85.42380524 422.29504395]
[-71.63565063 428.20153809]
[-64.75793457 441.53186035]
[-67.93505096 456.19152832]
[-79.71446991 465.47836304]
[-94.71080017 465.14654541]
[-106.06791687 455.34777832]
[-108.59317780 440.56008911]
[-117.19174194 452.85092163]
[-125.79030609 465.14175415]
[-134.38887024 477.43261719]
[-123.36485291 487.63967896]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 209]
[44 208]
[45 207]
[46 206]
[47 198]
[48 197]
[49 196]
[50 195]
[51 194]
[52 193]
[59 192]
[60 191]
[61 190]
[74 176]
[75 175]
[76 174]
[78 172]
[79 171]
[80 170]
[81 169]
[82 168]
[83 166]
[84 165]
[85 164]
[86 163]
[87 137]
[88 136]
[90 134]
[91 133]
[92 132]
[94 130]
[95 129]
[96 120]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
