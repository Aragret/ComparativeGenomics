%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUGxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[53.22679138 458.59808350]
[44.09023666 470.50219727]
[34.14554214 481.73999023]
[23.44116402 492.25668335]
[12.02924919 502.00106812]
[-0.03460297 510.92565918]
[-12.69161797 518.98693848]
[-25.88013268 526.14569092]
[-39.53589249 532.36706543]
[-53.59236526 537.62066650]
[-67.98107147 541.88092041]
[-82.63191223 545.12707520]
[-97.47350311 547.34332275]
[-112.43354034 548.51892090]
[-127.43914795 548.64807129]
[-142.41720581 547.73016357]
[-157.29473877 545.76965332]
[-171.99928284 542.77612305]
[-186.45918274 538.76416016]
[-200.60398865 533.75323486]
[-214.36480713 527.76788330]
[-227.67457581 520.83715820]
[-240.46846008 512.99487305]
[-252.68412781 504.27926636]
[-264.26208496 494.73275757]
[-275.14587402 484.40182495]
[-285.28250122 473.33688354]
[-294.62258911 461.59176636]
[-303.12063599 449.22375488]
[-310.73519897 436.29306030]
[-317.42922974 422.86267090]
[-323.17010498 408.99807739]
[-327.92980957 394.76678467]
[-331.68521118 380.23812866]
[-334.41799927 365.48291016]
[-336.11483765 350.57299805]
[-336.76748657 335.58105469]
[-336.37277222 320.58007812]
[-334.93258667 305.64318848]
[-332.45394897 290.84313965]
[-328.94894409 276.25207520]
[-324.43466187 261.94104004]
[-318.93307495 247.97975159]
[-312.47100830 234.43624878]
[-305.07992554 221.37651062]
[-296.79583740 208.86418152]
[-287.65911865 196.96018982]
[-277.71426392 185.72254944]
[-267.00973511 175.20599365]
[-255.59767151 165.46177673]
[-243.53369141 156.53736877]
[-230.87655640 148.47624207]
[-217.68794250 141.31767273]
[-204.03208923 135.09654236]
[-189.97554016 129.84313965]
[-175.58677673 125.58309174]
[-160.93588257 122.33712769]
[-146.09426880 120.12106323]
[-131.13420105 118.94570923]
[-116.12860107 118.81678009]
[-101.15055847 119.73490906]
[-86.27304840 121.69562531]
[-71.56855774 124.68936920]
[-57.10871124 128.70155334]
[-42.96397018 133.71264648]
[-29.20324135 139.69822693]
[-15.89356899 146.62911987]
[-3.09979486 154.47157288]
[9.11574936 163.18737793]
[20.69355011 172.73406982]
[31.02021790 161.85472107]
[41.34688568 150.97538757]
[51.67355728 140.09605408]
[62.00022507 129.21672058]
[65.15046692 114.65907288]
[80.26290131 109.97666168]
[90.58956909 99.09732819]
[91.64354706 93.95893860]
[95.50145721 89.77684021]
[101.38935852 88.05361176]
[112.03536224 77.48655701]
[122.68137360 66.91950989]
[133.32737732 56.35246658]
[137.67114258 41.13923645]
[152.15481567 37.66468048]
[162.80081177 27.09763336]
[173.44682312 16.53058434]
[184.09283447 5.96353722]
[174.29879761 -5.40596962]
[165.33114624 -17.43801880]
[157.23457336 -30.07266998]
[150.04940796 -43.24697113]
[143.81143188 -56.89529419]
[138.55175781 -70.94964600]
[134.29655457 -85.33999634]
[131.06704712 -99.99465942]
[128.87930298 -114.84062195]
[127.74424744 -129.80392456]
[127.66751099 -144.81002808]
[128.64949036 -159.78416443]
[130.68527222 -174.65173340]
[133.76475525 -189.33865356]
[137.87255859 -203.77177429]
[142.98822021 -217.87918091]
[149.08628845 -231.59057617]
[156.13633728 -244.83767700]
[164.10328674 -257.55447388]
[172.94740295 -269.67761230]
[182.62466431 -281.14666748]
[193.08682251 -291.90457153]
[204.28178406 -301.89764404]
[216.15376282 -311.07614136]
[228.64361572 -319.39434814]
[241.68911743 -326.81082153]
[255.22526550 -333.28857422]
[269.18463135 -338.79537964]
[283.49768066 -343.30377197]
[298.09310913 -346.79132080]
[312.89816284 -349.24063110]
[327.83911133 -350.63946533]
[342.84152222 -350.98092651]
[357.83065796 -350.26327515]
[372.73181152 -348.49005127]
[387.47079468 -345.67016602]
[401.97412109 -341.81762695]
[416.16958618 -336.95162964]
[429.98641968 -331.09640503]
[443.35583496 -324.28112793]
[456.21118164 -316.53976440]
[468.48846436 -307.91088867]
[480.12646484 -298.43746948]
[491.06723022 -288.16671753]
[501.25625610 -277.14978027]
[510.64276123 -265.44155884]
[519.17999268 -253.10040283]
[526.82543945 -240.18775940]
[533.54101562 -226.76799011]
[539.29321289 -212.90794373]
[544.05340576 -198.67665100]
[547.79791260 -184.14503479]
[550.50799561 -169.38548279]
[552.17016602 -154.47154236]
[552.77624512 -139.47747803]
[552.32312012 -124.47803497]
[550.81311035 -109.54790497]
[548.25366211 -94.76148987]
[544.65753174 -80.19244385]
[540.04272461 -65.91335297]
[534.43212891 -51.99536514]
[527.85382080 -38.50780869]
[520.34039307 -25.51788330]
[511.92947388 -13.09030437]
[502.66284180 -1.28698409]
[492.58666992 9.83327198]
[481.75122070 20.21506310]
[470.21041870 29.80666542]
[458.02178955 38.56029892]
[445.24603271 46.43234634]
[431.94680786 53.38359070]
[418.19039917 59.37940598]
[404.04528809 64.38991547]
[389.58200073 68.39015961]
[374.87255859 71.36020660]
[359.99023438 73.28526306]
[345.00921631 74.15573883]
[330.00411987 73.96729279]
[315.04965210 72.72086334]
[300.22039795 70.42266846]
[285.59017944 67.08415222]
[271.23190308 62.72194290]
[257.21710205 57.35777664]
[243.61560059 51.01838303]
[230.49514771 43.73533630]
[217.92112732 35.54492569]
[205.95616150 26.48795509]
[194.65988159 16.60954666]
[184.01387024 27.17659378]
[173.36785889 37.74364090]
[162.72186279 48.31068802]
[159.13957214 62.76809311]
[143.89442444 66.99847412]
[133.24842834 77.56552124]
[122.60240936 88.13256836]
[111.95640564 98.69961548]
[101.46890259 109.42399597]
[91.14223480 120.30332947]
[87.25335693 135.63914490]
[72.87956238 139.54339600]
[62.55289078 150.42272949]
[52.22622299 161.30206299]
[41.89955139 172.18139648]
[31.57288361 183.06072998]
[41.70967865 194.12554932]
[51.04993439 205.87051392]
[59.54814529 218.23841858]
[67.16291046 231.16900635]
[73.85713196 244.59928894]
[79.59819031 258.46380615]
[84.35811615 272.69503784]
[88.11373138 287.22363281]
[90.84671783 301.97882080]
[92.54378510 316.88870239]
[93.19664764 331.88064575]
[92.80212402 346.88162231]
[91.36214447 361.81851196]
[88.88372803 376.61859131]
[85.37893677 391.20971680]
[80.86486053 405.52084351]
[75.36347198 419.48220825]
[68.90159607 433.02578735]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 192]
[71 191]
[72 190]
[73 189]
[74 188]
[76 186]
[77 185]
[80 184]
[81 183]
[82 182]
[83 181]
[85 179]
[86 178]
[87 177]
[88 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
