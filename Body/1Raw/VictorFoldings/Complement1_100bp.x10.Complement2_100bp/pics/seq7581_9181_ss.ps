%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[51.74487305 563.74188232]
[42.93733597 575.90051270]
[32.92630768 587.08898926]
[21.81790543 597.18890381]
[9.72988701 606.09301758]
[-3.20960808 613.70709229]
[-16.86341476 619.95025635]
[-31.08679390 624.75646973]
[-45.72896957 628.07470703]
[-60.63472748 629.86981201]
[-75.64605713 630.12274170]
[-90.60383606 628.83087158]
[-105.34949493 626.00781250]
[-119.72672272 621.68353271]
[-133.58311462 615.90386963]
[-146.77178955 608.73010254]
[-159.15292358 600.23828125]
[-170.59529114 590.51837158]
[-180.97758484 579.67346191]
[-190.18975830 567.81854248]
[-198.13414001 555.07916260]
[-204.72653198 541.59051514]
[-209.89703369 527.49548340]
[-213.59085083 512.94348145]
[-215.76881409 498.08886719]
[-216.40783691 483.08898926]
[-215.50115967 468.10293579]
[-213.05838013 453.28955078]
[-209.10539246 438.80581665]
[-203.68411255 424.80532837]
[-196.85200500 411.43649292]
[-188.68147278 398.84097290]
[-179.25915527 387.15237427]
[-168.68493652 376.49450684]
[-157.07087708 366.98040771]
[-144.54013062 358.71093750]
[-131.22550964 351.77374268]
[-117.26815033 346.24234009]
[-102.81602478 342.17541504]
[-88.02232361 339.61602783]
[-73.04386902 338.59133911]
[-58.03944397 339.11221313]
[-43.16810226 341.17309570]
[-28.58749199 344.75216675]
[-14.45217228 349.81149292]
[-7.97267675 336.28314209]
[-1.49318087 322.75479126]
[4.98631477 309.22647095]
[11.46581078 295.69812012]
[17.94530678 282.16976929]
[23.71133995 268.32229614]
[28.74825668 254.19325256]
[33.78517151 240.06422424]
[38.82209015 225.93519592]
[37.74384308 223.34762573]
[37.62560272 220.17703247]
[38.69455719 216.78694153]
[41.04224777 213.61631775]
[44.60229874 211.13035583]
[50.47126007 197.32617188]
[56.34022141 183.52200317]
[62.20918274 169.71781921]
[68.07814026 155.91365051]
[55.65090942 146.67439270]
[45.78918457 134.73510742]
[39.06344986 120.78647614]
[35.86278152 105.63538361]
[36.37232208 90.15828705]
[40.56260300 75.25052643]
[48.19122314 61.77446747]
[58.81688309 50.50968552]
[71.82490540 42.10781860]
[86.46279907 37.05490494]
[101.88379669 35.64324570]
[117.19582367 37.95449829]
[122.85861206 24.06447220]
[128.52139282 10.17444515]
[134.18418884 -3.71558189]
[139.84696960 -17.60560799]
[140.18885803 -26.73363876]
[145.69885254 -31.65926933]
[143.97789001 -47.38659668]
[156.07809448 -56.07190323]
[161.94705200 -69.87608337]
[148.70663452 -76.94638824]
[136.14292908 -85.15922546]
[124.35423279 -94.45030975]
[113.43282318 -104.74694061]
[103.46418762 -115.96851349]
[94.52632904 -128.02722168]
[86.68920135 -140.82867432]
[80.01415253 -154.27267456]
[74.55342102 -168.25402832]
[70.34973907 -182.66328430]
[67.43600464 -197.38768005]
[65.83503723 -212.31196594]
[65.55935669 -227.31935120]
[66.61111450 -242.29237366]
[68.98209381 -257.11386108]
[72.65372467 -271.66778564]
[77.59728241 -285.84024048]
[83.77407074 -299.52032471]
[91.13574219 -312.60098267]
[99.62468719 -324.97982788]
[109.17446899 -336.55993652]
[119.71033478 -347.25073242]
[131.14984131 -356.96853638]
[143.40344238 -365.63723755]
[156.37524414 -373.18905640]
[169.96372986 -379.56488037]
[184.06253052 -384.71475220]
[198.56130981 -388.59844971]
[213.34660339 -391.18551636]
[228.30267334 -392.45568848]
[243.31248474 -392.39910889]
[258.25854492 -391.01614380]
[273.02392578 -388.31765747]
[287.49298096 -384.32473755]
[301.55255127 -379.06866455]
[315.09255981 -372.59054565]
[328.00704956 -364.94110107]
[340.19491577 -356.18020630]
[351.56079102 -346.37643433]
[362.01574707 -335.60647583]
[371.47790527 -323.95465088]
[379.87326050 -311.51214600]
[387.13607788 -298.37634277]
[393.20950317 -284.65005493]
[398.04602051 -270.44070435]
[401.60778809 -255.85951233]
[403.86691284 -241.02058411]
[404.80572510 -226.04005432]
[404.41687012 -211.03517151]
[402.70339966 -196.12338257]
[399.67871094 -181.42137146]
[395.36645508 -167.04423523]
[389.80044556 -153.10447693]
[383.02416992 -139.71119690]
[375.09072876 -126.96920776]
[366.06219482 -114.97825623]
[356.00918579 -103.83218384]
[345.01043701 -93.61821747]
[333.15200806 -84.41629791]
[320.52670288 -76.29845428]
[307.23336792 -69.32820892]
[293.37597656 -63.56011581]
[279.06304932 -59.03932571]
[264.40658569 -55.80121613]
[249.52127075 -53.87113190]
[234.52363586 -53.26417542]
[219.53103638 -53.98509979]
[204.66082764 -56.02826309]
[190.02938843 -59.37767410]
[175.75122070 -64.00711823]
[169.88226318 -50.20294189]
[172.02301025 -35.46298218]
[159.50302124 -25.79030800]
[153.73699951 -11.94282246]
[148.07420349 1.94720471]
[142.41142273 15.83723164]
[136.74864197 29.72725868]
[131.08584595 43.61728668]
[142.87416077 51.96723557]
[152.50408936 62.73526764]
[159.49084473 75.37928772]
[163.48269653 89.26277924]
[164.27867126 103.68680573]
[161.83871460 117.92522430]
[156.28564453 131.26124573]
[147.89903259 143.02351379]
[137.10107422 152.61987305]
[124.43535614 159.56721497]
[110.53950500 163.51582336]
[96.11307526 164.26687622]
[81.88231659 161.78260803]
[76.01335907 175.58677673]
[70.14439392 189.39096069]
[64.27543640 203.19512939]
[58.40647507 216.99931335]
[52.95111847 230.97210693]
[47.91420364 245.10113525]
[42.87728500 259.23016357]
[37.84037018 273.35919189]
[51.35488510 266.85092163]
[65.92157745 270.43023682]
[74.88074493 282.46075439]
[74.13638306 297.44226074]
[64.02879333 308.52545166]
[49.17904282 310.64318848]
[36.37623215 302.82730103]
[31.47365189 288.64926147]
[24.99415588 302.17761230]
[18.51465988 315.70596313]
[12.03516483 329.23431396]
[5.55566883 342.76263428]
[-0.92382699 356.29098511]
[11.87841797 364.13360596]
[23.80640984 373.25100708]
[34.73370743 383.54653931]
[44.54447174 394.91110229]
[53.13470459 407.22418213]
[60.41334534 420.35525513]
[66.30323792 434.16516113]
[70.74194336 448.50747681]
[73.68241119 463.23016357]
[75.09346771 478.17715454]
[74.96015930 493.19003296]
[73.28389740 508.10961914]
[70.08244324 522.77777100]
[65.38974762 537.03900146]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 196]
[46 195]
[47 194]
[48 193]
[49 192]
[50 191]
[51 183]
[52 182]
[53 181]
[54 180]
[59 179]
[60 178]
[61 177]
[62 176]
[63 175]
[75 162]
[76 161]
[77 160]
[78 159]
[79 158]
[81 157]
[83 155]
[84 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
