%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[35.77928543 885.56823730]
[20.82589912 886.79748535]
[5.82749987 887.20111084]
[-9.17035961 886.77789307]
[-24.12213135 885.52917480]
[-38.98240662 883.45861816]
[-53.70605469 880.57263184]
[-68.24835968 876.87988281]
[-82.56516266 872.39166260]
[-96.61297607 867.12158203]
[-110.34914398 861.08563232]
[-123.73194122 854.30212402]
[-136.72073364 846.79174805]
[-149.27606201 838.57720947]
[-161.35981750 829.68353271]
[-172.93527222 820.13763428]
[-183.96730042 809.96862793]
[-194.42237854 799.20727539]
[-204.26876831 787.88635254]
[-213.47656250 776.04022217]
[-222.01779175 763.70477295]
[-229.86651611 750.91760254]
[-236.99890137 737.71746826]
[-243.39329529 724.14440918]
[-249.03025818 710.23974609]
[-253.89270020 696.04571533]
[-257.96582031 681.60534668]
[-261.23727417 666.96252441]
[-263.69711304 652.16168213]
[-265.33789062 637.24786377]
[-266.15460205 622.26623535]
[-266.14474487 607.26245117]
[-265.30838013 592.28192139]
[-263.64804077 577.37023926]
[-261.16879272 562.57269287]
[-257.87811279 547.93414307]
[-253.78604126 533.49914551]
[-248.90499878 519.31146240]
[-243.24978638 505.41421509]
[-236.83758545 491.84960938]
[-229.68788147 478.65881348]
[-221.82238770 465.88192749]
[-213.26496887 453.55773926]
[-204.04164124 441.72366333]
[-194.18041992 430.41567993]
[-183.71121216 419.66809082]
[-172.66586304 409.51351929]
[-161.07788086 399.98284912]
[-148.98246765 391.10501099]
[-136.41636658 382.90698242]
[-123.41773224 375.41360474]
[-110.02604675 368.64770508]
[-96.28197479 362.62979126]
[-82.22725677 357.37814331]
[-67.90457916 352.90872192]
[-53.35743713 349.23507690]
[-38.63001251 346.36837769]
[-23.76703262 344.31735229]
[-8.81363678 343.08822632]
[6.18476534 342.68469238]
[21.18262100 343.10800171]
[36.13438416 344.35687256]
[50.99464417 346.42752075]
[53.87991714 331.70761108]
[56.54571152 316.94641113]
[58.99143982 302.14712524]
[61.43716812 287.34786987]
[63.88289642 272.54858398]
[66.32862091 257.74932861]
[68.77435303 242.95004272]
[71.22007751 228.15077209]
[73.66580200 213.35150146]
[64.81014252 201.43038940]
[67.07964325 186.38699341]
[79.64363861 177.17918396]
[82.08937073 162.37991333]
[84.53509521 147.58064270]
[71.75842285 141.29763794]
[61.26897812 131.66999817]
[53.91628265 119.47747803]
[50.29581833 105.70751953]
[50.70080185 91.47531128]
[55.09843063 77.93350220]
[63.13254929 66.17881775]
[74.15249634 57.16324615]
[87.26577759 51.61693573]
[101.41037750 49.98907852]
[104.07617188 35.22786331]
[106.74196625 20.46664619]
[108.30249023 5.54804134]
[108.74909973 -9.44530869]
[99.64697266 -25.45258331]
[109.44551086 -40.01128006]
[109.66883850 -55.00961685]
[109.89216614 -70.00794983]
[110.11549377 -85.00629425]
[110.33882141 -100.00463104]
[96.08492279 -105.11393738]
[84.26388550 -114.57659149]
[76.15797424 -127.36615753]
[72.64645386 -142.09530640]
[74.11022186 -157.16635132]
[80.39051056 -170.94447327]
[90.80607605 -181.93513489]
[104.22711945 -188.94615173]
[119.19781494 -191.21702576]
[134.09426880 -188.50143433]
[147.30061340 -181.09391785]
[157.38432312 -169.79801941]
[163.25160217 -155.83901978]
[164.26600647 -140.73107910]
[160.31750488 -126.11300659]
[151.83439636 -113.57045746]
[139.73686218 -104.46395111]
[125.33715820 -99.78130341]
[125.11383057 -84.78295898]
[124.89050293 -69.78462219]
[124.66717529 -54.78628922]
[124.44384766 -39.78795242]
[132.64126587 -30.89251518]
[132.57795715 -18.39532471]
[123.74244690 -8.99870300]
[123.29583740 5.99464703]
[132.50187683 -5.84802675]
[146.35832214 -11.59249306]
[161.24313354 -9.73716164]
[173.26547241 -0.76701295]
[179.28269958 12.97317886]
[177.72195435 27.89175987]
[168.99119568 40.08905029]
[155.37263489 46.37670517]
[140.42611694 45.11114883]
[128.05863953 36.62319183]
[121.50318909 23.13244057]
[118.83738708 37.89365768]
[116.17159271 52.65487671]
[130.00308228 59.96380997]
[140.90110779 71.18714905]
[147.80017090 85.22756958]
[150.02572632 100.71231079]
[147.36019897 116.12741089]
[140.06416321 129.96571350]
[128.85099792 140.87420654]
[114.81703186 147.78636169]
[99.33436584 150.02636719]
[96.88864136 164.82565308]
[94.44290924 179.62492371]
[103.37643433 192.38540649]
[100.68530273 207.35913086]
[88.46507263 215.79724121]
[86.01934814 230.59651184]
[83.57362366 245.39578247]
[81.12789154 260.19503784]
[78.68216705 274.99432373]
[76.23643494 289.79357910]
[73.79071045 304.59286499]
[71.34498596 319.39212036]
[73.31167603 325.70431519]
[71.99327087 331.23233032]
[68.59980774 334.59289551]
[65.71453857 349.31277466]
[80.25686646 353.00540161]
[94.57369995 357.49353027]
[108.62155151 362.76351929]
[122.35775757 368.79934692]
[135.74060059 375.58273315]
[148.72944641 383.09304810]
[161.28483582 391.30749512]
[173.36865234 400.20111084]
[184.94418335 409.74688721]
[195.97627258 419.91586304]
[206.43144226 430.67712402]
[216.27790833 441.99798584]
[225.48577881 453.84408569]
[234.02708435 466.17941284]
[241.87590027 478.96655273]
[249.00839233 492.16665649]
[255.40287781 505.73962402]
[261.03994751 519.64422607]
[265.90246582 533.83825684]
[269.97570801 548.27862549]
[273.24725342 562.92144775]
[275.70721436 577.72222900]
[277.34808350 592.63604736]
[278.16488647 607.61761475]
[278.15515137 622.62145996]
[277.31890869 637.60198975]
[275.65866089 652.51367188]
[273.17950439 667.31127930]
[269.88894653 681.94982910]
[265.79696655 696.38482666]
[260.91601562 710.57257080]
[255.26089478 724.46984863]
[248.84880066 738.03448486]
[241.69918823 751.22534180]
[233.83378601 764.00225830]
[225.27645874 776.32653809]
[216.05322266 788.16064453]
[206.19206238 799.46875000]
[195.72294617 810.21636963]
[184.67765808 820.37103271]
[173.08973694 829.90179443]
[160.99440002 838.77972412]
[148.42834473 846.97784424]
[135.42976379 854.47125244]
[122.03812408 861.23730469]
[108.29409790 867.25531006]
[94.23941803 872.50701904]
[79.91677094 876.97656250]
[65.36965179 880.65032959]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 161]
[64 160]
[65 157]
[66 156]
[67 155]
[68 154]
[69 153]
[70 152]
[71 151]
[72 150]
[75 147]
[76 146]
[77 145]
[87 136]
[88 135]
[89 134]
[90 123]
[91 122]
[93 119]
[94 118]
[95 117]
[96 116]
[97 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
