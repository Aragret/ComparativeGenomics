%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[83.15575409 541.33361816]
[68.17926788 540.50714111]
[53.23947906 539.17260742]
[38.35362625 537.33148193]
[23.53887558 534.98596191]
[8.81231403 532.13879395]
[-5.80907345 528.79315186]
[-20.30842209 524.95294189]
[-34.66901016 520.62261963]
[-48.87427139 515.80712891]
[-62.90782166 510.51205444]
[-76.75347900 504.74353027]
[-90.39527130 498.50814819]
[-103.81746674 491.81317139]
[-117.00457764 484.66625977]
[-129.94140625 477.07568359]
[-142.61300659 469.05017090]
[-155.00479126 460.59902954]
[-167.10246277 451.73196411]
[-178.89205933 442.45922852]
[-190.35998535 432.79150391]
[-201.49301147 422.73995972]
[-212.27830505 412.31613159]
[-222.70341492 401.53210449]
[-232.75633240 390.40029907]
[-242.42544556 378.93353271]
[-251.69961548 367.14508057]
[-260.56814575 355.04849243]
[-269.02078247 342.65771484]
[-277.04782104 329.98709106]
[-284.63995361 317.05117798]
[-291.78845215 303.86492920]
[-298.48507690 290.44354248]
[-304.72210693 276.80252075]
[-310.49230957 262.95755005]
[-315.78909302 248.92463684]
[-320.60629272 234.71997070]
[-324.93835449 220.35990906]
[-328.78030396 205.86102295]
[-332.12771606 191.24003601]
[-334.97671509 176.51382446]
[-337.32403564 161.69935608]
[-339.16693115 146.81372070]
[-340.50329590 131.87409973]
[-341.33160400 116.89771271]
[-341.65087891 101.90184021]
[-341.46075439 86.90377045]
[-340.76147461 71.92079926]
[-339.55380249 56.97022247]
[-337.83917236 42.06927490]
[-335.61953735 27.23513985]
[-332.89746094 12.48493385]
[-329.67611694 -2.16433477]
[-325.95916748 -16.69576836]
[-321.75091553 -31.09260750]
[-317.05624390 -45.33824539]
[-311.88052368 -59.41625214]
[-306.22976685 -73.31039429]
[-300.11044312 -87.00463867]
[-293.52966309 -100.48319244]
[-286.49499512 -113.73051453]
[-279.01452637 -126.73132324]
[-271.09692383 -139.47062683]
[-262.75131226 -151.93371582]
[-253.98728943 -164.10624695]
[-244.81498718 -175.97415161]
[-235.24497986 -187.52375793]
[-225.28831482 -198.74172974]
[-214.95646667 -209.61514282]
[-204.26135254 -220.13143921]
[-193.21530151 -230.27851868]
[-181.83105469 -240.04464722]
[-170.12176514 -249.41857910]
[-158.10090637 -258.38949585]
[-145.78236389 -266.94705200]
[-133.18034363 -275.08139038]
[-120.30936432 -282.78308105]
[-107.18429565 -290.04330444]
[-93.82025909 -296.85363770]
[-80.23267365 -303.20626831]
[-66.43721008 -309.09384155]
[-52.44977951 -314.50955200]
[-38.28651810 -319.44720459]
[-23.96375656 -323.90103149]
[-9.49801922 -327.86596680]
[5.09401274 -331.33740234]
[19.79550743 -334.31134033]
[34.58950806 -336.78436279]
[49.45895386 -338.75360107]
[64.38668823 -340.21676636]
[79.35550690 -341.17221069]
[78.90889740 -356.16555786]
[78.46229553 -371.15890503]
[78.01568604 -386.15225220]
[63.39828110 -389.96121216]
[50.44680023 -397.73526001]
[40.21115875 -408.84417725]
[33.52111816 -422.38745117]
[30.91900635 -437.26715088]
[32.61576843 -452.27706909]
[38.47385406 -466.20040894]
[48.01837540 -477.90847778]
[60.47560120 -486.45214844]
[74.83567810 -491.13882446]
[89.93450165 -491.58856201]
[104.54807281 -487.76492310]
[117.49173737 -479.97787476]
[127.71621704 -468.85867310]
[134.39263916 -455.30868530]
[136.97981262 -440.42639160]
[135.26795959 -425.41818237]
[129.39588928 -411.50073242]
[119.83961487 -399.80224609]
[107.37381744 -391.27111816]
[93.00904083 -386.59884644]
[93.45564270 -371.60549927]
[93.90225220 -356.61215210]
[94.34885406 -341.61880493]
[109.34799957 -341.55603027]
[124.33636475 -340.98394775]
[139.29666138 -339.90325928]
[154.21162415 -338.31518555]
[169.06407166 -336.22158813]
[183.83685303 -333.62481689]
[198.51293945 -330.52795410]
[213.07540894 -326.93450928]
[227.50744629 -322.84863281]
[241.79241943 -318.27505493]
[255.91386414 -313.21905518]
[269.85546875 -307.68643188]
[283.60116577 -301.68359375]
[297.13510132 -295.21746826]
[310.44168091 -288.29553223]
[323.50552368 -280.92568970]
[336.31158447 -273.11651611]
[348.84509277 -264.87701416]
[361.09158325 -256.21664429]
[373.03692627 -247.14543152]
[384.66735840 -237.67382812]
[395.96945190 -227.81274414]
[406.93017578 -217.57357788]
[417.53689575 -206.96812439]
[427.77737427 -196.00862122]
[437.63980103 -184.70770264]
[447.11279297 -173.07839966]
[456.18545532 -161.13414001]
[464.84725952 -148.88868713]
[473.08828735 -136.35617065]
[480.89898682 -123.55104828]
[488.27035522 -110.48808289]
[495.19390869 -97.18234253]
[501.66165161 -83.64917755]
[507.66613770 -69.90419769]
[513.20037842 -55.96324539]
[518.25811768 -41.84241104]
[522.83337402 -27.55797958]
[526.92095947 -13.12642193]
[530.51617432 1.43561292]
[533.61480713 16.11133003]
[536.21331787 30.88380432]
[538.30871582 45.73599625]
[539.89855957 60.65077591]
[540.98101807 75.61093903]
[541.55493164 90.59922791]
[541.61950684 105.59836578]
[541.17468262 120.59104919]
[540.22106934 135.55998230]
[538.75970459 150.48788452]
[536.79229736 165.35757446]
[534.32104492 180.15187073]
[531.34887695 194.85372925]
[527.87921143 209.44618225]
[523.91607666 223.91239929]
[519.46392822 238.23570251]
[514.52801514 252.39956665]
[509.11398315 266.38763428]
[503.22808838 280.18383789]
[496.87713623 293.77218628]
[490.06838989 307.13705444]
[482.80978394 320.26300049]
[475.10961914 333.13488770]
[466.97683716 345.73791504]
[458.42077637 358.05749512]
[449.45129395 370.07943726]
[440.07879639 381.78985596]
[430.31402588 393.17529297]
[420.16830444 404.22256470]
[409.65328979 414.91894531]
[398.78112793 425.25213623]
[387.56436157 435.21014404]
[376.01593018 444.78155518]
[364.14913940 453.95529175]
[351.97766113 462.72079468]
[339.51559448 471.06790161]
[326.77725220 478.98706055]
[313.77734375 486.46908569]
[300.53085327 493.50537109]
[287.05310059 500.08779907]
[273.35958862 506.20877075]
[259.46615601 511.86120605]
[245.38876343 517.03863525]
[231.14370728 521.73504639]
[216.74737549 525.94500732]
[202.21638489 529.66375732]
[187.56750488 532.88684082]
[172.81762695 535.61071777]
[157.98376465 537.83215332]
[143.08302307 539.54858398]
[128.13259888 540.75805664]
[113.14971161 541.45916748]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[91 118]
[92 117]
[93 116]
[94 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
