%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[81.88694763 854.34210205]
[66.89764404 853.67211914]
[51.97265625 852.13171387]
[37.16248703 849.72613525]
[22.51724625 846.46343994]
[8.08649158 842.35473633]
[-6.08094883 837.41394043]
[-19.93713570 831.65771484]
[-33.43518448 825.10552979]
[-46.52941895 817.77960205]
[-59.17553711 809.70477295]
[-71.33074951 800.90820312]
[-82.95391846 791.41979980]
[-94.00571442 781.27160645]
[-104.44875336 770.49798584]
[-114.24768829 759.13537598]
[-123.36936951 747.22222900]
[-131.78292847 734.79888916]
[-139.45989990 721.90728760]
[-146.37429810 708.59118652]
[-152.50273132 694.89556885]
[-157.82446289 680.86676025]
[-162.32148743 666.55224609]
[-165.97859192 652.00048828]
[-168.78338623 637.26068115]
[-170.72640991 622.38275146]
[-171.80105591 607.41705322]
[-172.00370789 592.41412354]
[-171.33366394 577.42486572]
[-169.79321289 562.49987793]
[-167.38754272 547.68969727]
[-164.12481689 533.04449463]
[-160.01605225 518.61376953]
[-155.07518005 504.44631958]
[-149.31889343 490.59014893]
[-142.76667786 477.09213257]
[-135.44071960 463.99792480]
[-127.36577606 451.35183716]
[-118.56919098 439.19668579]
[-109.08073425 427.57354736]
[-98.93249512 416.52178955]
[-88.15882874 406.07879639]
[-76.79617310 396.27990723]
[-64.88299561 387.15826416]
[-52.45958710 378.74478149]
[-39.56800079 371.06784058]
[-26.25184631 364.15350342]
[-12.55618954 358.02514648]
[1.47263229 352.70346069]
[15.78714752 348.20648193]
[30.33892059 344.54943848]
[45.07871246 341.74472046]
[59.95664978 339.80175781]
[74.92238617 338.72717285]
[89.92529297 338.52459717]
[90.59507751 323.53955078]
[91.15328217 308.54992676]
[91.59989166 293.55657959]
[92.04650116 278.56323242]
[82.90781403 263.58154297]
[92.71562195 247.99665833]
[92.93894958 232.99832153]
[92.93894958 217.99832153]
[92.71562195 202.99998474]
[84.25698090 194.35255432]
[83.94817352 181.85902405]
[92.50000000 172.20350647]
[92.50000000 157.20350647]
[92.50000000 142.20350647]
[92.50000000 127.20349884]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[92.50000000 72.79650116]
[89.37059021 64.21485901]
[92.61332703 57.57358932]
[92.83665466 42.57525253]
[93.05998230 27.57691383]
[90.17869568 21.62630653]
[90.66248322 15.96388817]
[93.51988983 12.13710594]
[93.29656219 -2.86123109]
[92.18091583 -17.81968498]
[91.06526184 -32.77813721]
[89.94961548 -47.73659134]
[88.83396912 -62.69504547]
[80.09169006 -75.88152313]
[86.86094666 -89.14901733]
[85.74530029 -104.10746765]
[70.83612823 -106.23603058]
[56.73326874 -111.52028656]
[44.09632492 -119.71307373]
[33.51635742 -130.43121338]
[25.48821068 -143.17337036]
[20.38737106 -157.34361267]
[18.45241737 -172.27914429]
[19.77385139 -187.28140259]
[24.28986359 -201.64871216]
[31.78923416 -214.70909119]
[41.92120361 -225.85168457]
[54.21188354 -234.55531311]
[68.08641815 -240.41291809]
[82.89585876 -243.15051270]
[97.94755554 -242.64006042]
[112.53750610 -238.90542603]
[125.98330688 -232.12129211]
[137.65608215 -222.60498047]
[147.00987244 -210.80155945]
[153.60719299 -197.26310730]
[157.13945007 -182.62284851]
[157.44146729 -167.56553650]
[154.49908447 -152.79541016]
[148.44995117 -139.00331116]
[139.57698059 -126.83432007]
[128.29518127 -116.85759735]
[115.13221741 -109.53977203]
[100.70375061 -105.22311401]
[101.81939697 -90.26466370]
[110.48188019 -78.14811707]
[103.79241943 -63.81069183]
[104.90806580 -48.85224152]
[106.02371979 -33.89378738]
[107.13936615 -18.93533325]
[108.25501251 -3.97687960]
[117.26292419 -15.97094154]
[131.56610107 -20.48972893]
[145.82978821 -15.84784603]
[154.73399353 -3.77660108]
[154.95768738 11.22173119]
[146.41740417 23.55314255]
[132.29849243 28.61832237]
[117.86692810 24.52808380]
[108.50492859 12.80689144]
[108.05831909 27.80024147]
[107.83499146 42.79858017]
[107.61166382 57.79691696]
[107.50000000 72.79650116]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[107.50000000 127.20349884]
[107.50000000 142.20350647]
[107.50000000 157.20350647]
[107.50000000 172.20350647]
[117.07468414 187.93267822]
[107.71395874 202.77665710]
[107.93728638 217.77499390]
[110.99446869 223.63717651]
[110.67948914 229.31147766]
[107.93728638 233.22164917]
[107.71395874 248.21998596]
[116.12107849 258.00177002]
[115.62629700 270.48931885]
[107.03984833 279.00982666]
[106.59323883 294.00320435]
[106.14663696 308.99655151]
[109.01914978 317.66754150]
[105.58011627 324.20932007]
[104.91033173 339.19436646]
[119.83532715 340.73464966]
[134.64552307 343.14010620]
[149.29078674 346.40267944]
[163.72157288 350.51123047]
[177.88905334 355.45193481]
[191.74528503 361.20806885]
[205.24339294 367.76010132]
[218.33769226 375.08590698]
[230.98387146 383.16070557]
[243.13916016 391.95712280]
[254.76240540 401.44543457]
[265.81430054 411.59353638]
[276.25741577 422.36706543]
[286.05645752 433.72961426]
[295.17822266 445.64266968]
[303.59188843 458.06597900]
[311.26895142 470.95745850]
[318.18347168 484.27352905]
[324.31201172 497.96911621]
[329.63385010 511.99786377]
[334.13101196 526.31231689]
[337.78823853 540.86407471]
[340.59317017 555.60382080]
[342.53628540 570.48175049]
[343.61105347 585.44744873]
[343.81384277 600.45037842]
[343.14392090 615.43963623]
[341.60357666 630.36468506]
[339.19805908 645.17486572]
[335.93545532 659.82006836]
[331.82681274 674.25085449]
[326.88604736 688.41833496]
[321.12988281 702.27453613]
[314.57775879 715.77258301]
[307.25192261 728.86688232]
[299.17706299 741.51300049]
[290.38058472 753.66827393]
[280.89224243 765.29150391]
[270.74407959 776.34332275]
[259.97048950 786.78637695]
[248.60794067 796.58538818]
[236.69482422 805.70709229]
[224.27148438 814.12072754]
[211.37995911 821.79772949]
[198.06387329 828.71221924]
[184.36825562 834.84069824]
[170.33949280 840.16247559]
[156.02500916 844.65954590]
[141.47326660 848.31671143]
[126.73349762 851.12158203]
[111.85557556 853.06469727]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 159]
[56 158]
[57 156]
[58 155]
[59 154]
[61 151]
[62 150]
[63 147]
[64 146]
[67 144]
[68 143]
[69 142]
[70 141]
[71 140]
[73 138]
[74 137]
[76 136]
[77 135]
[78 134]
[81 133]
[82 124]
[83 123]
[84 122]
[85 121]
[86 120]
[88 118]
[89 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
