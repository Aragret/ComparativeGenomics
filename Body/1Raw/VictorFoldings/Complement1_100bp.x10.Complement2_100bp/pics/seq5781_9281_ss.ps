%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[183.99273682 637.09844971]
[172.96034241 626.92834473]
[162.57496643 616.09844971]
[152.87599182 604.64971924]
[143.90019226 592.62561035]
[135.68165588 580.07177734]
[128.25152588 567.03576660]
[121.63799286 553.56713867]
[115.86614990 539.71685791]
[110.95789337 525.53753662]
[106.93183899 511.08297729]
[103.80326080 496.40798950]
[101.58403015 481.56820679]
[100.28255463 466.61996460]
[99.90377808 451.61996460]
[100.44914246 436.62509155]
[101.91656494 421.69223022]
[104.30049133 406.87805176]
[107.59188080 392.23870850]
[111.77823639 377.82974243]
[116.84368134 363.70581055]
[122.76900482 349.92053223]
[129.53172302 336.52615356]
[137.10618591 323.57351685]
[145.46366882 311.11172485]
[154.57246399 299.18807983]
[164.39801025 287.84777832]
[174.90304565 277.13385010]
[186.04771423 267.08697510]
[197.78973389 257.74520874]
[189.19117737 245.45437622]
[180.59260559 233.16352844]
[171.99404907 220.87269592]
[163.39547729 208.58186340]
[154.79692078 196.29101562]
[146.19834900 184.00018311]
[132.56274414 178.00691223]
[130.99182129 162.26388550]
[127.60204315 161.29345703]
[124.51387787 158.63294983]
[122.51657104 154.44200134]
[122.29819489 149.22669983]
[114.25701904 136.56417847]
[106.21584320 123.90164948]
[98.17467499 111.23912048]
[96.61227417 126.15753174]
[87.31571198 137.92927551]
[73.16563416 142.90675354]
[58.54659271 139.54763794]
[47.98846054 128.89279175]
[44.76278305 114.24372864]
[49.86907959 100.13962555]
[61.72510147 90.95079041]
[76.65713501 89.52448273]
[90.03851318 96.30283356]
[83.76115417 82.67951965]
[77.48379517 69.05619812]
[71.20643616 55.43288422]
[64.92907715 41.80957031]
[53.69040680 42.52018738]
[42.79460526 39.78230286]
[33.27198792 33.87150574]
[26.01793480 25.36261940]
[21.70870590 15.07383442]
[20.73841667 3.98805189]
[23.18304062 -6.84101868]
[28.79473877 -16.38900948]
[37.02687073 -23.75779724]
[31.57151604 -37.73059464]
[26.11615753 -51.70339203]
[13.88971806 -61.74454498]
[16.46837997 -76.41423035]
[11.01302242 -90.38703156]
[5.55766582 -104.35983276]
[0.10230856 -118.33262634]
[-14.62700081 -115.30683136]
[-29.65581131 -114.81398773]
[-44.55171204 -116.86828613]
[-58.88611984 -121.41062164]
[-72.24660492 -128.31028748]
[-84.24875641 -137.36878967]
[-94.54725647 -148.32546997]
[-102.84578705 -160.86509705]
[-108.90558624 -174.62689209]
[-112.55230713 -189.21488953]
[-113.68102264 -204.20935059]
[-112.25925446 -219.17886353]
[-108.32791138 -233.69274902]
[-102.00009918 -247.33337402]
[-93.45790100 -259.70831299]
[-82.94707489 -270.46145630]
[-70.77004242 -279.28347778]
[-57.27716827 -285.92053223]
[-42.85665894 -290.18161011]
[-27.92342758 -291.94418335]
[-12.90713215 -291.15750122]
[1.76017880 -287.84417725]
[15.65649796 -282.09960938]
[28.38199997 -274.08901978]
[39.57054901 -264.04290771]
[48.90022278 -252.25030518]
[56.10259628 -239.05053711]
[60.97043610 -224.82337952]
[63.36368561 -209.97816467]
[63.21348572 -194.94201660]
[60.52416229 -180.14758301]
[55.37308884 -166.02049255]
[47.90847397 -152.96723938]
[38.34508896 -141.36337280]
[26.95809174 -131.54277039]
[14.07510662 -123.78798676]
[19.53046417 -109.81518555]
[24.98582077 -95.84239197]
[30.44117737 -81.86959076]
[42.27741241 -72.82786560]
[40.08895493 -57.15874863]
[45.54431152 -43.18595123]
[50.99967194 -29.21315384]
[69.81542969 -27.37723732]
[85.15477753 -16.18758392]
[92.71363831 1.31901109]
[90.31890869 20.31926346]
[78.55239105 35.53220749]
[84.82975006 49.15552521]
[91.10710907 62.77884293]
[97.38446808 76.40216064]
[103.66183472 90.02547455]
[110.83719635 103.19795227]
[118.87837219 115.86047363]
[126.91954803 128.52299500]
[134.96072388 141.18553162]
[143.28265381 153.66531372]
[157.53329468 160.53771973]
[158.48919678 175.40162659]
[167.08775330 187.69245911]
[175.68632507 199.98329163]
[184.28488159 212.27413940]
[192.88343811 224.56497192]
[201.48200989 236.85580444]
[210.08056641 249.14665222]
[222.88143921 241.31840515]
[236.13995361 234.29304504]
[249.80580139 228.09722900]
[263.82714844 222.75444031]
[278.15081787 218.28494263]
[292.72244263 214.70571899]
[307.48681641 212.03033447]
[322.38784790 210.26892090]
[337.36904907 209.42817688]
[352.37362671 209.51129150]
[367.34460449 210.51794434]
[382.22521973 212.44430542]
[396.95901489 215.28309631]
[411.49011230 219.02352905]
[425.76339722 223.65141296]
[439.72470093 229.14920044]
[453.32107544 235.49603271]
[466.50094604 242.66783142]
[479.21429443 250.63739014]
[491.41293335 259.37448120]
[503.05056763 268.84597778]
[514.08306885 279.01593018]
[524.46856689 289.84576416]
[534.16766357 301.29440308]
[543.14355469 313.31842041]
[551.36224365 325.87216187]
[558.79248047 338.90808105]
[565.40612793 352.37667847]
[571.17810059 366.22686768]
[576.08648682 380.40612793]
[580.11273193 394.86065674]
[583.24145508 409.53564453]
[585.46081543 424.37536621]
[586.76245117 439.32360840]
[587.14135742 454.32360840]
[586.59613037 469.31848145]
[585.12884521 484.25134277]
[582.74505615 499.06558228]
[579.45385742 513.70495605]
[575.26763916 528.11395264]
[570.20233154 542.23791504]
[564.27709961 556.02325439]
[557.51452637 569.41772461]
[549.94018555 582.37042236]
[541.58282471 594.83227539]
[532.47418213 606.75604248]
[522.64874268 618.09643555]
[512.14379883 628.81042480]
[500.99923706 638.85748291]
[489.25729370 648.19934082]
[476.96255493 656.80065918]
[464.16159058 664.62872314]
[450.90301514 671.65399170]
[437.23712158 677.84967041]
[423.21569824 683.19232178]
[408.89199829 687.66168213]
[394.32031250 691.24072266]
[379.55593872 693.91601562]
[364.65487671 695.67724609]
[349.67367554 696.51788330]
[334.66909790 696.43457031]
[319.69812012 695.42779541]
[304.81753540 693.50128174]
[290.08377075 690.66235352]
[275.55270386 686.92175293]
[261.27947998 682.29376221]
[247.31822205 676.79583740]
[233.72190857 670.44885254]
[220.54211426 663.27691650]
[207.82882690 655.30725098]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 140]
[31 139]
[32 138]
[33 137]
[34 136]
[35 135]
[36 134]
[38 132]
[42 131]
[43 130]
[44 129]
[45 128]
[55 127]
[56 126]
[57 125]
[58 124]
[59 123]
[68 118]
[69 117]
[70 116]
[72 114]
[73 113]
[74 112]
[75 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
