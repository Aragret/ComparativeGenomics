%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[132.29020691 275.20739746]
[132.80429077 260.20840454]
[134.49360657 245.29598999]
[137.34773254 230.56208801]
[141.34909058 216.09753418]
[146.47297668 201.99151611]
[152.68783569 188.33099365]
[159.95532227 175.20021057]
[168.23065186 162.68009949]
[156.40438843 153.45300293]
[144.57810974 144.22590637]
[129.78417969 142.49708557]
[123.66339874 127.90781403]
[111.83713531 118.68071747]
[100.01086426 109.45362091]
[94.79467010 108.90108490]
[90.25936127 105.46533966]
[87.97525787 99.77149963]
[76.42895508 90.19638062]
[64.88265991 80.62126160]
[49.32088852 77.76785278]
[44.46306610 63.68769836]
[26.24356270 61.01726532]
[20.79269600 44.33628845]
[9.10511398 34.93413544]
[-2.58246708 25.53198433]
[-14.27004814 16.12983322]
[-24.40509224 27.19494057]
[-35.22825623 37.58795547]
[-46.69507217 47.26617050]
[-58.75841141 56.18981552]
[-71.36871338 64.32222748]
[-84.47414398 71.62997437]
[-98.02086639 78.08304596]
[-111.95320129 83.65490723]
[-126.21390533 88.32266998]
[-140.74436951 92.06715393]
[-155.48489380 94.87297058]
[-170.37490845 96.72859192]
[-185.35321045 97.62638855]
[-200.35826111 97.56267548]
[-215.32839966 96.53771210]
[-230.20211792 94.55570984]
[-244.91828918 91.62481689]
[-259.41644287 87.75707245]
[-273.63696289 82.96837616]
[-287.52148438 77.27839661]
[-301.01293945 70.71052551]
[-314.05581665 63.29174423]
[-326.59661865 55.05254364]
[-338.58374023 46.02677536]
[-349.96795654 36.25152969]
[-360.70245361 25.76697922]
[-370.74316406 14.61620522]
[-380.04882812 2.84502816]
[-388.58117676 -9.49818039]
[-396.30514526 -22.36269951]
[-403.18902588 -35.69566345]
[-409.20449829 -49.44228745]
[-414.32687378 -63.54608536]
[-418.53506470 -77.94908905]
[-421.81182861 -92.59213257]
[-424.14364624 -107.41502380]
[-425.52099609 -122.35686493]
[-425.93817139 -137.35626221]
[-425.39346313 -152.35154724]
[-423.88912964 -167.28114319]
[-421.43133545 -182.08367920]
[-418.03018188 -196.69831848]
[-413.69967651 -211.06501770]
[-408.45755005 -225.12475586]
[-402.32540894 -238.81973267]
[-395.32839966 -252.09367371]
[-387.49533081 -264.89205933]
[-378.85833740 -277.16226196]
[-369.45291138 -288.85388184]
[-359.31774902 -299.91888428]
[-348.49447632 -310.31176758]
[-337.02755737 -319.98986816]
[-324.96411133 -328.91336060]
[-312.35372925 -337.04565430]
[-299.24819946 -344.35324097]
[-285.70141602 -350.80615234]
[-271.76901245 -356.37786865]
[-257.50827026 -361.04547119]
[-242.97775269 -364.78979492]
[-228.23719788 -367.59545898]
[-213.34716797 -369.45092773]
[-198.36886597 -370.34854126]
[-183.36380005 -370.28466797]
[-168.39367676 -369.25952148]
[-153.51998901 -367.27737427]
[-138.80384827 -364.34631348]
[-124.30574799 -360.47842407]
[-110.08525085 -355.68954468]
[-96.20079803 -349.99942017]
[-82.70944214 -343.43139648]
[-69.66661835 -336.01248169]
[-57.12593079 -327.77313232]
[-45.13890457 -318.74722290]
[-33.75479889 -308.97186279]
[-23.02039909 -298.48718262]
[-12.97981071 -287.33630371]
[-3.67429423 -275.56503296]
[4.85791159 -263.22171021]
[12.58174610 -250.35711670]
[19.46547127 -237.02407837]
[25.48079681 -223.27738953]
[30.60300827 -209.17353821]
[34.81105423 -194.77047729]
[38.08764648 -180.12741089]
[40.41931534 -165.30448914]
[41.79648209 -150.36262512]
[42.21348953 -135.36323547]
[41.66862488 -120.36794281]
[40.16411972 -105.43836975]
[37.70616531 -90.63586426]
[34.30485535 -76.02125549]
[29.97417068 -61.65459824]
[24.73190498 -47.59492874]
[18.59960175 -33.90002060]
[11.60245895 -20.62615013]
[3.76922989 -7.82786131]
[-4.86789703 4.44225264]
[6.81968403 13.84440422]
[18.50726509 23.24655533]
[30.19484711 32.64870453]
[42.25073242 31.65764618]
[52.06479645 39.39508057]
[54.03818512 52.14139557]
[68.77408600 54.30992508]
[74.45777893 69.07495880]
[86.00408173 78.65007782]
[97.55037689 88.22519684]
[109.23796082 97.62734985]
[121.06423187 106.85444641]
[132.89050293 116.08154297]
[148.53031921 118.47035980]
[153.80522156 132.39964294]
[165.63148499 141.62673950]
[177.45774841 150.85383606]
[187.58934021 139.78201294]
[198.55836487 129.53924561]
[210.29724121 120.18867493]
[222.73355103 111.78795624]
[235.79064941 104.38888550]
[249.38803101 98.03707886]
[263.44186401 92.77169800]
[277.86547852 88.62521362]
[292.56994629 85.62316895]
[307.46466064 83.78409576]
[322.45770264 83.11932373]
[337.45672607 83.63294983]
[352.36920166 85.32180786]
[367.10317993 88.17548370]
[381.56787109 92.17638397]
[395.67404175 97.29985046]
[409.33474731 103.51428986]
[422.46575928 110.78137970]
[434.98611450 119.05632019]
[446.81863403 128.28810120]
[457.89035034 138.41978455]
[468.13302612 149.38893127]
[477.48345947 161.12788391]
[485.88406372 173.56430054]
[493.28298950 186.62147522]
[499.63464355 200.21891785]
[504.89990234 214.27278137]
[509.04623413 228.69644165]
[512.04809570 243.40095520]
[513.88702393 258.29568481]
[514.55169678 273.28875732]
[514.03790283 288.28775024]
[512.34887695 303.20019531]
[509.49505615 317.93417358]
[505.49398804 332.39880371]
[500.37039185 346.50494385]
[494.15582275 360.16558838]
[486.88858032 373.29650879]
[478.61352539 385.81680298]
[469.38162231 397.64920044]
[459.24981689 408.72082520]
[448.28057861 418.96337891]
[436.54150391 428.31369019]
[424.10501099 436.71417236]
[411.04776001 444.11297607]
[397.45025635 450.46447754]
[383.39633179 455.72958374]
[368.97262573 459.87579346]
[354.26809692 462.87753296]
[339.37335205 464.71627808]
[324.38027954 465.38076782]
[309.38128662 464.86682129]
[294.46884155 463.17767334]
[279.73489380 460.32369995]
[265.27032471 456.32247925]
[251.16424561 451.19873047]
[237.50366211 444.98400879]
[224.37280273 437.71667480]
[211.85260010 429.44146729]
[200.02027893 420.20944214]
[188.94877625 410.07751465]
[178.70632935 399.10818481]
[169.35612488 387.36901855]
[160.95579529 374.93243408]
[153.55712891 361.87512207]
[147.20573425 348.27755737]
[141.94078064 334.22357178]
[137.79473877 319.79983521]
[134.79315186 305.09524536]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 141]
[10 140]
[11 139]
[13 137]
[14 136]
[15 135]
[18 134]
[19 133]
[20 132]
[22 130]
[24 127]
[25 126]
[26 125]
[27 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
