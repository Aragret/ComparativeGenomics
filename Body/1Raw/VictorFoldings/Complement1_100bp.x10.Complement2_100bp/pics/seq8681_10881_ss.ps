%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[87.46933746 569.31994629]
[74.27343750 562.17510986]
[61.60191345 554.13684082]
[49.51515198 545.24353027]
[38.07075119 535.53753662]
[27.32324982 525.06512451]
[17.32386780 513.87615967]
[8.12025261 502.02398682]
[-0.24373236 489.56506348]
[-7.72823048 476.55880737]
[-14.29757309 463.06716919]
[-19.92045593 449.15444946]
[-24.57008171 434.88693237]
[-28.22429085 420.33264160]
[-30.86567307 405.56091309]
[-32.48163986 390.64215088]
[-33.06448746 375.64746094]
[-32.61144257 360.64828491]
[-31.12466049 345.71609497]
[-28.61122704 330.92205811]
[-25.08312225 316.33670044]
[-20.55715752 302.02947998]
[-15.05490208 288.06860352]
[-8.60257721 274.52062988]
[-1.23092973 261.45007324]
[7.02490902 248.91921997]
[16.12559700 236.98783875]
[26.02776337 225.71273804]
[36.68422318 215.14767456]
[48.04418945 205.34298706]
[60.05352402 196.34539795]
[72.65499878 188.19779968]
[85.78856659 180.93901062]
[99.39163971 174.60360718]
[113.39937592 169.22181702]
[108.99838257 154.88195801]
[104.59738159 140.54211426]
[100.19638824 126.20227051]
[95.79538727 111.86241913]
[91.07525635 97.62443542]
[79.15319824 87.22370148]
[82.16748810 72.63729858]
[77.13056946 58.50826645]
[72.09365082 44.37923813]
[67.05673981 30.25020790]
[52.63184738 34.38241577]
[37.97392273 37.59141922]
[23.14197731 39.86429596]
[8.19574070 41.19189072]
[-6.80460644 41.56886292]
[-21.79866219 40.99369049]
[-36.72605133 39.46869278]
[-51.52666092 37.00000763]
[-66.14089966 33.59757614]
[-80.50991821 29.27510071]
[-94.57585907 24.04998589]
[-108.28208160 17.94326973]
[-121.57340240 10.97954273]
[-134.39628601 3.18684626]
[-146.69911194 -5.40344143]
[-158.43232727 -14.75673008]
[-169.54870605 -24.83535576]
[-180.00347900 -35.59873962]
[-189.75453186 -47.00353241]
[-198.76261902 -59.00381851]
[-206.99147034 -71.55127716]
[-214.40792847 -84.59537506]
[-220.98214722 -98.08360291]
[-226.68765259 -111.96163177]
[-231.50148010 -126.17358398]
[-235.40422058 -140.66224670]
[-238.38017273 -155.36924744]
[-240.41735840 -170.23539734]
[-241.50758362 -185.20082092]
[-241.64642334 -200.20526123]
[-240.83334351 -215.18830872]
[-239.07162476 -230.08961487]
[-236.36834717 -244.84918213]
[-232.73439026 -259.40756226]
[-228.18440247 -273.70617676]
[-222.73669434 -287.68740845]
[-216.41322327 -301.29498291]
[-209.23941040 -314.47412109]
[-201.24418640 -327.17169189]
[-192.45971680 -339.33663940]
[-182.92138672 -350.91992188]
[-172.66758728 -361.87493896]
[-161.73963928 -372.15756226]
[-150.18151855 -381.72637939]
[-138.03976440 -390.54287720]
[-125.36328888 -398.57153320]
[-112.20312500 -405.78002930]
[-98.61225891 -412.13934326]
[-84.64542389 -417.62387085]
[-70.35885620 -422.21151733]
[-55.81008148 -425.88381958]
[-41.05768967 -428.62597656]
[-26.16107941 -430.42697144]
[-11.18023586 -431.27951050]
[3.82451892 -431.18020630]
[18.79276466 -430.12942505]
[33.66423035 -428.13143921]
[48.37903214 -425.19424438]
[62.87792206 -421.32968140]
[77.10250854 -416.55331421]
[90.99552917 -410.88439941]
[104.50102234 -404.34576416]
[117.56462097 -396.96368408]
[130.13371277 -388.76791382]
[142.15769958 -379.79150391]
[153.58815002 -370.07052612]
[164.37904358 -359.64413452]
[174.48692322 -348.55435181]
[183.87109375 -336.84582520]
[192.49377441 -324.56567383]
[200.32022095 -311.76336670]
[207.31895447 -298.49044800]
[213.46176147 -284.80038452]
[218.72392273 -270.74826050]
[223.08424377 -256.39065552]
[226.52517700 -241.78544617]
[229.03285217 -226.99139404]
[230.59716797 -212.06806946]
[231.21185303 -197.07557678]
[230.87440491 -182.07429504]
[229.58619690 -167.12460327]
[227.35240173 -152.28672791]
[224.18203735 -137.62039185]
[220.08786011 -123.18466949]
[215.08633423 -109.03768158]
[209.19763184 -95.23638916]
[202.44544983 -81.83637238]
[194.85696411 -68.89157867]
[186.46275330 -56.45414734]
[177.29661560 -44.57415009]
[167.39544678 -33.29942322]
[156.79911804 -22.67537308]
[145.55030823 -12.74477386]
[133.69432068 -3.54761434]
[121.27886200 4.87907171]
[108.35395050 12.50135231]
[94.97161865 19.28853607]
[81.18576813 25.21329117]
[86.22267914 39.34231949]
[91.25959778 53.47135162]
[96.29651642 67.60037994]
[107.85829926 76.99050140]
[105.20428467 92.58751678]
[108.41915131 94.71753693]
[110.67953491 98.25427246]
[111.37821960 102.73968506]
[110.13523102 107.46142578]
[114.53623199 121.80126953]
[118.93723297 136.14111328]
[123.33822632 150.48095703]
[127.73922729 164.82081604]
[142.35435486 161.41806030]
[157.16941833 159.03173828]
[172.11381531 157.67320251]
[187.11633301 157.34895325]
[202.10546875 158.06051636]
[217.00981140 159.80450439]
[231.75831604 162.57261658]
[246.28068542 166.35163879]
[260.50775146 171.12359619]
[274.37167358 176.86570740]
[287.80642700 183.55064392]
[300.74795532 191.14653015]
[313.13461304 199.61717224]
[324.90731812 208.92221069]
[336.01004028 219.01728821]
[346.38980103 229.85429382]
[355.99719238 241.38160706]
[364.78640747 253.54428101]
[372.71554565 266.28436279]
[379.74682617 279.54110718]
[385.84677124 293.25137329]
[390.98626709 307.34982300]
[395.14086914 321.76925659]
[398.29074097 336.44094849]
[400.42089844 351.29501343]
[401.52117920 366.26065063]
[401.58630371 381.26651001]
[400.61602783 396.24114990]
[398.61492920 411.11312866]
[395.59255981 425.81164551]
[391.56332397 440.26660156]
[386.54644775 454.40914917]
[380.56576538 468.17184448]
[373.64984131 481.48916626]
[365.83163452 494.29760742]
[357.14834595 506.53613281]
[347.64141846 518.14642334]
[337.35614014 529.07318115]
[326.34149170 539.26428223]
[314.65002441 548.67114258]
[302.33740234 557.24902344]
[289.46231079 564.95697021]
[276.08612061 571.75830078]
[262.27255249 577.62060547]
[248.08746338 582.51593018]
[233.59843445 586.42089844]
[218.87452698 589.31695557]
[203.98590088 591.19030762]
[189.00350952 592.03198242]
[173.99873352 591.83801270]
[159.04310608 590.60931396]
[144.20788574 588.35168457]
[129.56376648 585.07598877]
[115.18052673 580.79772949]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 156]
[36 155]
[37 154]
[38 153]
[39 152]
[40 148]
[42 146]
[43 145]
[44 144]
[45 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
