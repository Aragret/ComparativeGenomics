%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[100.06005096 560.67230225]
[96.12786865 546.17687988]
[94.00685120 531.30810547]
[93.72915649 516.29138184]
[95.29899597 501.35430908]
[98.69257355 486.72341919]
[103.85843658 472.62045288]
[110.71826935 459.25924683]
[119.16809082 446.84231567]
[129.07980347 435.55789185]
[140.30313110 425.57708740]
[152.66793823 417.05120850]
[165.98680115 410.10946655]
[160.74008179 396.05697632]
[155.49336243 382.00451660]
[150.24664307 367.95202637]
[144.99992371 353.89956665]
[139.75320435 339.84710693]
[136.71444702 338.05871582]
[134.39093018 334.70965576]
[133.50674438 330.15206909]
[134.60134888 325.04824829]
[129.98733521 310.77551270]
[125.37332916 296.50277710]
[114.09625244 286.77258301]
[117.21347046 271.26150513]
[112.59946442 256.98876953]
[107.98545074 242.71604919]
[103.37144470 228.44331360]
[98.75743866 214.17057800]
[94.14342499 199.89784241]
[91.87458038 214.72526550]
[85.89411926 228.48150635]
[76.59872437 240.25416565]
[64.60491180 249.26240540]
[50.70819092 254.90875244]
[35.83028412 256.81869507]
[20.95798492 254.86553955]
[7.07772493 249.17886353]
[-4.88987160 240.13581848]
[-14.15103626 228.33619690]
[-20.09150887 214.56265259]
[-22.31727982 199.72869873]
[-20.68072128 184.81825256]
[-15.29037952 170.82023621]
[-6.50377893 158.66311646]
[5.09629917 149.15321350]
[18.74046135 142.92129517]
[33.52374268 140.38070679]
[48.46561813 141.69993591]
[62.57504654 146.79148865]
[74.91619873 155.31768799]
[84.67053986 166.71298218]
[91.19270325 180.22645569]
[91.41603088 165.22811890]
[91.63935852 150.22978210]
[91.86268616 135.23144531]
[84.31573486 122.39038849]
[92.25764465 108.70694733]
[83.94178772 121.19079590]
[71.07722473 128.90461731]
[56.14789581 130.35897827]
[42.03642273 125.27307892]
[31.46751213 114.62892151]
[26.48185349 100.48172760]
[28.04209709 85.56309509]
[35.84698868 72.75357819]
[48.38951874 64.52649689]
[63.24792862 62.47037125]
[77.55329132 66.98220825]
[88.54346466 77.19083405]
[94.09661102 91.12639618]
[96.98188782 76.40650177]
[99.86715698 61.68661499]
[102.75242615 46.96672440]
[104.97754669 32.13267899]
[106.53807068 17.21407509]
[108.09859467 2.29546928]
[109.65911865 -12.62313557]
[111.21963501 -27.54174042]
[103.33329010 -44.18166351]
[114.18751526 -57.97125244]
[115.52574921 -72.91143799]
[116.86398315 -87.85162354]
[118.20221710 -102.79180908]
[119.31786346 -117.75025940]
[120.21067810 -132.72366333]
[121.10349274 -147.69706726]
[121.99631500 -162.67047119]
[111.78372955 -174.43231201]
[112.90247345 -189.60476685]
[124.17852783 -199.26841736]
[125.07134247 -214.24182129]
[110.55497742 -218.23791504]
[97.18684387 -225.16516113]
[85.55134583 -234.72073364]
[76.15713501 -246.48689270]
[69.41487885 -259.94927979]
[65.61933136 -274.51934814]
[64.93640900 -289.56021118]
[67.39596558 -304.41430664]
[72.89048767 -318.43228149]
[81.17977905 -331.00137329]
[91.90145111 -341.57205200]
[104.58681488 -349.68222046]
[118.68132019 -354.97738647]
[133.56880188 -357.22604370]
[148.59846497 -356.32986450]
[163.11325073 -352.32806396]
[176.47866821 -345.39556885]
[188.11039734 -335.83541870]
[197.49998474 -324.06555176]
[204.23693848 -310.60052490]
[208.02676392 -296.02896118]
[208.70376587 -280.98782349]
[206.23835754 -266.13470459]
[200.73832703 -252.11888123]
[192.44409180 -239.55307007]
[181.71826172 -228.98660278]
[169.02970886 -220.88140869]
[154.93312073 -215.59179688]
[140.04475403 -213.34899902]
[139.15193176 -198.37559509]
[149.19975281 -187.44047546]
[148.50761414 -172.24259949]
[136.96971130 -161.77766418]
[136.07690430 -146.80426025]
[135.18408203 -131.83085632]
[134.29127502 -116.85744476]
[136.73506165 -112.75415802]
[136.62712097 -107.07213593]
[133.14239502 -101.45357513]
[131.80416870 -86.51338959]
[130.46592712 -71.57320404]
[129.12770081 -56.63301849]
[136.64080811 -47.15252304]
[135.64817810 -34.69465637]
[126.13824463 -25.98121643]
[124.57772064 -11.06261253]
[123.01719666 3.85599232]
[121.45667267 18.77459717]
[119.89614868 33.69320297]
[132.20028687 25.11366653]
[146.99084473 27.61148643]
[155.79515076 39.75579834]
[153.56967163 54.58979034]
[141.58927917 63.61587524]
[126.71688080 61.66350174]
[117.47232056 49.85199356]
[114.58705139 64.57188416]
[111.70177460 79.29177856]
[108.81650543 94.01167297]
[107.25598145 108.93027496]
[114.78695679 122.84411621]
[106.86102295 135.45477295]
[106.63769531 150.45310974]
[106.41436768 165.45144653]
[106.19104004 180.44978333]
[108.41616058 195.28382874]
[113.03016663 209.55656433]
[117.64418030 223.82929993]
[122.25818634 238.10203552]
[126.87220001 252.37477112]
[131.48620605 266.64749146]
[143.09330750 277.39859009]
[139.64605713 291.88876343]
[144.26007080 306.16149902]
[148.87408447 320.43423462]
[153.80567932 334.60037231]
[159.05239868 348.65286255]
[164.29911804 362.70532227]
[169.54583740 376.75778198]
[174.79255676 390.81027222]
[180.03926086 404.86273193]
[194.64849854 401.37707520]
[209.57536316 399.71319580]
[224.59355164 399.89630127]
[239.47540283 401.92361450]
[253.99531555 405.76443481]
[267.93316650 411.36050415]
[281.07766724 418.62698364]
[293.22952271 427.45373535]
[304.20455933 437.70693970]
[313.83636475 449.23117065]
[321.97894287 461.85171509]
[328.50885010 475.37725830]
[333.32705688 489.60275269]
[336.36059570 504.31250000]
[337.56341553 519.28356934]
[336.91729736 534.28900146]
[334.43203735 549.10125732]
[330.14535522 563.49578857]
[324.12216187 577.25445557]
[316.45379639 590.16864014]
[307.25653076 602.04260254]
[296.66976929 612.69622803]
[284.85403442 621.96807861]
[271.98840332 629.71765137]
[258.26794434 635.82739258]
[243.90066528 640.20465088]
[229.10433960 642.78314209]
[214.10330200 643.52374268]
[199.12496948 642.41528320]
[184.39637756 639.47442627]
[170.14082336 634.74591064]
[156.57443237 628.30133057]
[143.90286255 620.23840332]
[132.31819153 610.67938232]
[121.99605560 599.76916504]
[113.09293365 587.67309570]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 174]
[14 173]
[15 172]
[16 171]
[17 170]
[18 169]
[22 168]
[23 167]
[24 166]
[26 164]
[27 163]
[28 162]
[29 161]
[30 160]
[31 159]
[54 158]
[55 157]
[56 156]
[57 155]
[59 153]
[72 152]
[73 151]
[74 150]
[75 149]
[76 142]
[77 141]
[78 140]
[79 139]
[80 138]
[82 135]
[83 134]
[84 133]
[85 132]
[86 129]
[87 128]
[88 127]
[89 126]
[92 123]
[93 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
