%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[73.42412567 765.33642578]
[58.54872894 767.31201172]
[43.57247162 768.25671387]
[28.56672478 768.16583252]
[13.60299969 767.03997803]
[-1.24739349 764.88439941]
[-15.91368675 761.70941162]
[-30.32598686 757.53015137]
[-44.41561127 752.36651611]
[-58.11541748 746.24310303]
[-71.36012268 739.18914795]
[-84.08660126 731.23822021]
[-96.23420715 722.42822266]
[-107.74505615 712.80108643]
[-118.56429291 702.40277100]
[-128.64035034 691.28283691]
[-137.92521667 679.49420166]
[-146.37464905 667.09307861]
[-153.94837952 654.13854980]
[-160.61030579 640.69238281]
[-166.32868958 626.81866455]
[-171.07627869 612.58343506]
[-174.83044434 598.05462646]
[-177.57330322 583.30139160]
[-179.29177856 568.39410400]
[-179.97769165 553.40374756]
[-179.62776184 538.40185547]
[-178.24365234 523.45977783]
[-175.83198547 508.64880371]
[-172.40422058 494.03955078]
[-167.97669983 479.70153809]
[-162.57054138 465.70318604]
[-156.21150208 452.11117554]
[-148.92987061 438.99023438]
[-140.76036072 426.40295410]
[-131.74191284 414.40927124]
[-121.91748047 403.06637573]
[-111.33390045 392.42831421]
[-100.04159546 382.54577637]
[-88.09439850 373.46585083]
[-75.54921722 365.23184204]
[-62.46586227 357.88293457]
[-48.90666580 351.45416260]
[-34.93624496 345.97619629]
[-20.62118530 341.47512817]
[-6.02969599 337.97241211]
[8.76868343 335.48471069]
[23.70343208 334.02389526]
[38.70337677 333.59695435]
[53.69704056 334.20587158]
[68.61296082 335.84777832]
[71.27875519 321.08654785]
[73.94455719 306.32534790]
[68.59230804 292.42559814]
[78.65900421 280.22018433]
[81.32479858 265.45895386]
[83.99059296 250.69775391]
[86.54642487 235.91709900]
[80.98783112 222.09858704]
[90.87168884 209.74464417]
[93.31741333 194.94537354]
[95.76313782 180.14610291]
[96.54446411 165.16645813]
[95.65164948 150.19305420]
[94.75883484 135.21965027]
[93.86601257 120.24624634]
[92.97319794 105.27284241]
[90.87324524 103.06383514]
[89.53064728 100.04192352]
[89.24803925 96.48614502]
[90.22073364 92.78342438]
[92.50000000 89.38667297]
[92.50000000 74.38667297]
[92.50000000 59.38667297]
[92.50000000 44.38667297]
[92.50000000 29.38667488]
[92.50000000 14.38667488]
[92.05339050 -0.60667539]
[91.16057587 -15.58008099]
[90.26776123 -30.55348778]
[89.37494659 -45.52689362]
[88.48213196 -60.50029755]
[79.93714905 -73.81546783]
[86.90319061 -86.98071289]
[77.71770477 -75.12209320]
[63.34884262 -70.81675720]
[49.15584183 -75.67049408]
[40.43233871 -87.87297058]
[40.43198013 -102.87297058]
[49.15490341 -115.07586670]
[63.34767532 -119.93027496]
[77.71673584 -115.62561798]
[86.90319061 -103.76634216]
[87.79600525 -118.73974609]
[79.17450714 -135.01092529]
[89.40216827 -149.27143860]
[90.07195282 -164.25646973]
[75.83561707 -169.33761597]
[63.73044205 -178.39057922]
[54.83282089 -190.61038208]
[49.93392563 -204.91046143]
[49.46936035 -220.01925659]
[53.48043442 -234.59330750]
[61.61048508 -247.33668518]
[73.13659668 -257.11627197]
[87.03386688 -263.06243896]
[102.06656647 -264.64651489]
[116.89800262 -261.72763062]
[130.20936584 -254.56527710]
[140.81701660 -243.79638672]
[147.77774048 -230.37849426]
[150.47259521 -215.50473022]
[148.66194153 -200.49763489]
[142.50679016 -186.69163513]
[132.55444336 -175.31436157]
[119.68988037 -167.37745667]
[105.05699158 -163.58668518]
[104.38720703 -148.60165405]
[112.31614685 -139.46607971]
[111.88078308 -126.97632599]
[102.76940918 -117.84693146]
[101.87659454 -102.87352753]
[101.87659454 -87.87352753]
[110.35771942 -75.62934875]
[103.45553589 -61.39311600]
[104.34835052 -46.41970825]
[105.24116516 -31.44630241]
[106.13398743 -16.47289658]
[107.02680206 -1.49949121]
[109.03150940 0.45991626]
[110.38085938 3.33147645]
[110.72354889 6.86955118]
[109.80357361 10.70597839]
[107.50000000 14.38667488]
[107.50000000 29.38667488]
[107.50000000 44.38667297]
[107.50000000 59.38667297]
[107.50000000 74.38667297]
[107.50000000 89.38667297]
[107.94660950 104.38002777]
[108.83942413 119.35343170]
[109.73223877 134.32684326]
[110.62505341 149.30024719]
[111.51786804 164.27365112]
[118.15184784 150.82038879]
[129.14828491 140.61849976]
[143.06042480 135.01025391]
[158.05787659 134.73347473]
[172.16744995 139.82461548]
[183.53282166 149.61381531]
[190.65866089 162.81314087]
[192.60745239 177.68600464]
[189.12278748 192.27563477]
[180.66313171 204.66249084]
[168.34150696 213.21688843]
[153.77903748 216.81333923]
[138.89166260 214.97866821]
[125.63806915 207.95426941]
[115.76200104 196.66430664]
[110.56241608 182.59182739]
[108.11668396 197.39109802]
[105.67095947 212.19036865]
[111.05461884 227.06742859]
[101.34569550 238.36282349]
[103.03400421 247.33987427]
[98.75180817 253.36354065]
[96.08601379 268.12475586]
[93.42021942 282.88598633]
[98.58178711 297.84155273]
[88.70577240 308.99114990]
[86.03997803 323.75234985]
[83.37418365 338.51358032]
[97.92219543 342.19268799]
[112.18172455 346.86672974]
[126.08480072 352.51342773]
[139.56518555 359.10583496]
[152.55860901 366.61257935]
[165.00318909 374.99789429]
[176.83959961 384.22177124]
[188.01142883 394.24029541]
[198.46545410 405.00570679]
[208.15185547 416.46670532]
[217.02445984 428.56866455]
[225.04098511 441.25393677]
[232.16323853 454.46203613]
[238.35728455 468.13003540]
[243.59358215 482.19284058]
[247.84719849 496.58337402]
[251.09785461 511.23306274]
[253.33004761 526.07214355]
[254.53317261 541.02984619]
[254.70146179 556.03491211]
[253.83413696 571.01586914]
[251.93531799 585.90124512]
[249.01406860 600.62017822]
[245.08428955 615.10253906]
[240.16471863 629.27917480]
[234.27879333 643.08270264]
[227.45458984 656.44720459]
[219.72459412 669.30908203]
[211.12565613 681.60705566]
[201.69876099 693.28240967]
[191.48881531 704.27960205]
[180.54449463 714.54614258]
[168.91795349 724.03320312]
[156.66458130 732.69549561]
[143.84277344 740.49182129]
[130.51365662 747.38488770]
[116.74072266 753.34204102]
[102.58962250 758.33471680]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 172]
[52 171]
[53 170]
[55 168]
[56 167]
[57 166]
[58 164]
[60 162]
[61 161]
[62 160]
[63 144]
[64 143]
[65 142]
[66 141]
[67 140]
[72 139]
[73 138]
[74 137]
[75 136]
[76 135]
[77 134]
[78 129]
[79 128]
[80 127]
[81 126]
[82 125]
[84 123]
[93 122]
[94 121]
[96 118]
[97 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
