%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[-6.65943241 610.88519287]
[-18.01029015 620.70227051]
[-30.07109833 629.63281250]
[-42.77277374 637.62561035]
[-56.04256058 644.63488770]
[-69.80445099 650.62054443]
[-83.97960663 655.54821777]
[-98.48685455 659.38970947]
[-113.24308014 662.12310791]
[-128.16375732 663.73260498]
[-143.16343689 664.20904541]
[-158.15620422 663.54974365]
[-173.05615234 661.75842285]
[-187.77795410 658.84539795]
[-202.23728943 654.82727051]
[-216.35131836 649.72717285]
[-230.03919983 643.57415771]
[-243.22254944 636.40362549]
[-255.82583618 628.25659180]
[-267.77685547 619.17968750]
[-279.00720215 609.22491455]
[-289.45248413 598.44934082]
[-299.05291748 586.91461182]
[-307.75347900 574.68688965]
[-315.50436401 561.83618164]
[-322.26116943 548.43603516]
[-327.98516846 534.56329346]
[-332.64358521 520.29736328]
[-336.20974731 505.72000122]
[-338.66320801 490.91467285]
[-339.98995972 475.96618652]
[-340.18234253 460.96017456]
[-339.23928833 445.98257446]
[-337.16619873 431.11923218]
[-333.97494507 416.45520020]
[-329.68377686 402.07455444]
[-324.31732178 388.05960083]
[-317.90631104 374.49066162]
[-310.48742676 361.44546509]
[-302.10321045 348.99868774]
[-292.80166626 337.22164917]
[-282.63604736 326.18182373]
[-271.66464233 315.94241333]
[-259.95022583 306.56210327]
[-247.55996704 298.09460449]
[-234.56478882 290.58840942]
[-221.03915405 284.08651733]
[-207.06051636 278.62622070]
[-192.70895386 274.23873901]
[-178.06666565 270.94921875]
[-163.21754456 268.77648926]
[-148.24661255 267.73300171]
[-133.23965454 267.82476807]
[-118.28260803 269.05123901]
[-103.46115112 271.40536499]
[-88.86019135 274.87368774]
[-74.56335449 279.43637085]
[-60.65253067 285.06719971]
[-47.20740509 291.73397827]
[-39.54681015 278.83764648]
[-31.88621140 265.94134521]
[-46.40023804 269.72854614]
[-60.00642395 263.41415405]
[-66.48419952 249.88496399]
[-62.87202072 235.32640076]
[-50.82131958 226.39439392]
[-35.84151840 227.17256165]
[-24.78117752 237.30513000]
[-22.69731903 252.16143799]
[-21.29929924 237.33258057]
[-6.85036135 230.88752747]
[2.11033463 218.85815430]
[11.07103062 206.82876587]
[20.03172684 194.79939270]
[28.99242210 182.77001953]
[22.97136116 169.14605713]
[24.58885765 154.23834229]
[33.51006317 142.06138611]
[47.41984558 135.94462585]
[62.62287521 137.62246704]
[71.58357239 125.59309387]
[80.54426575 113.56372070]
[89.50496674 101.53433990]
[97.91957855 89.11684418]
[105.77133942 76.33600616]
[106.40242767 60.52738953]
[119.65713501 53.73313141]
[127.50889587 40.95228958]
[128.13998413 25.14367294]
[141.39469910 18.34941483]
[142.02578735 2.54080081]
[155.28048706 -4.25345707]
[163.13224792 -17.03429985]
[170.98400879 -29.81514168]
[178.83575439 -42.59598541]
[166.95005798 -51.76998901]
[156.10685730 -62.15541077]
[146.42900085 -73.63457489]
[138.02616882 -86.07741547]
[130.99353027 -99.34294891]
[125.41082001 -113.28086090]
[121.34125519 -127.73322296]
[118.83097076 -142.53628540]
[117.90840149 -157.52230835]
[118.58399963 -172.52149963]
[120.85011292 -187.36389160]
[124.68106079 -201.88133240]
[130.03344727 -215.90930176]
[136.84660339 -229.28887939]
[145.04336548 -241.86843872]
[154.53082275 -253.50546265]
[165.20149231 -264.06808472]
[176.93444824 -273.43661499]
[189.59678650 -281.50491333]
[203.04499817 -288.18157959]
[217.12672424 -293.39089966]
[231.68238831 -297.07391357]
[246.54708862 -299.18887329]
[261.55236816 -299.71179199]
[276.52822876 -298.63674927]
[291.30496216 -295.97592163]
[305.71517944 -291.75952148]
[319.59555054 -286.03521729]
[332.78881836 -278.86798096]
[345.14550781 -270.33892822]
[356.52557373 -260.54473877]
[366.80010986 -249.59642029]
[375.85269165 -237.61796570]
[383.58071899 -224.74514771]
[389.89663696 -211.12379456]
[394.72891235 -196.90826416]
[398.02276611 -182.25962830]
[399.74084473 -167.34385681]
[399.86373901 -152.32995605]
[398.39004517 -137.38806152]
[395.33642578 -122.68746948]
[390.73751831 -108.39473724]
[384.64541626 -94.67182922]
[377.12911987 -81.67422485]
[368.27386475 -69.54919434]
[358.17993164 -58.43413925]
[346.96170044 -48.45498657]
[334.74627686 -39.72481537]
[321.67211914 -32.34254456]
[307.88729858 -26.39182091]
[293.54806519 -21.94006729]
[278.81683350 -19.03772736]
[263.86059570 -17.71768951]
[248.84875488 -17.99490738]
[233.95143127 -19.86623955]
[219.33741760 -23.31048584]
[205.17230225 -28.28861809]
[191.61660767 -34.74422836]
[183.76484680 -21.96338654]
[175.91308594 -9.18254375]
[168.06134033 3.59829855]
[167.99185181 18.49274254]
[154.17553711 26.20117188]
[154.10604858 41.09561539]
[140.28973389 48.80404282]
[132.43797302 61.58488464]
[132.36849976 76.47933197]
[118.55217743 84.18775940]
[110.70042419 96.96859741]
[125.50346375 94.54577637]
[137.76394653 103.18756104]
[140.45851135 117.94355774]
[132.04360962 130.36085510]
[117.33964539 133.32624817]
[104.76973724 125.14105225]
[101.53433990 110.49504089]
[92.57364655 122.52441406]
[83.61294556 134.55378723]
[74.65225220 146.58317566]
[80.61212158 160.66958618]
[78.73339081 175.74829102]
[69.61997986 187.78207397]
[55.79924774 193.59957886]
[41.02180099 191.73071289]
[32.06110382 203.76008606]
[23.10040855 215.78947449]
[14.13971233 227.81884766]
[5.17901611 239.84822083]
[3.14006686 255.53749084]
[-10.66794109 261.12213135]
[-18.98988533 273.60192871]
[-26.65048218 286.49826050]
[-34.31108093 299.39459229]
[-22.02496529 308.01251221]
[-10.42580318 317.53494263]
[0.41996366 327.90734863]
[10.45021248 339.07031250]
[19.60748863 350.95986938]
[27.83934212 363.50793457]
[35.09861755 376.64263916]
[41.34373856 390.28872681]
[46.53892899 404.36804199]
[50.65443420 418.79995728]
[53.66667938 433.50180054]
[55.55840683 448.38931274]
[56.31878662 463.37728882]
[55.94345856 478.37985229]
[54.43457794 493.31103516]
[51.80078506 508.08535767]
[48.05716324 522.61816406]
[43.22515869 536.82623291]
[37.33244705 550.62817383]
[30.41278458 563.94494629]
[22.50580597 576.70019531]
[13.65680027 588.82092285]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 188]
[60 187]
[61 186]
[69 185]
[71 183]
[72 182]
[73 181]
[74 180]
[75 179]
[80 174]
[81 173]
[82 172]
[83 171]
[84 164]
[85 163]
[87 161]
[88 160]
[90 158]
[92 156]
[93 155]
[94 154]
[95 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
