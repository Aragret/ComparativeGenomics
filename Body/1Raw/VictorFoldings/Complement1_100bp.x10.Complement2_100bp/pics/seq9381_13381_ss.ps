%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[31.67999268 533.30181885]
[22.34497833 545.05920410]
[11.88568020 555.82867432]
[0.40604910 565.50317383]
[-11.97982121 573.98663330]
[-25.14883041 581.19470215]
[-38.97009659 587.05566406]
[-53.30625534 591.51135254]
[-68.01482391 594.51745605]
[-82.94960785 596.04412842]
[-97.96218872 596.07617188]
[-112.90335846 594.61322021]
[-127.62461090 591.66986084]
[-141.97964478 587.27539062]
[-155.82579041 581.47338867]
[-169.02543640 574.32159424]
[-181.44737244 565.89111328]
[-192.96817017 556.26562500]
[-203.47332764 545.54083252]
[-212.85841370 533.82336426]
[-221.03016663 521.22967529]
[-227.90736389 507.88494873]
[-233.42166138 493.92172241]
[-237.51824951 479.47885132]
[-240.15641785 464.69985962]
[-241.30993652 449.73162842]
[-240.96736145 434.72293091]
[-239.13208008 419.82290649]
[-235.82232666 405.17968750]
[-231.07101440 390.93875122]
[-224.92535400 377.24169922]
[-217.44644165 364.22463989]
[-208.70857239 352.01690674]
[-198.79862976 340.73986816]
[-187.81507874 330.50558472]
[-175.86709595 321.41580200]
[-163.07342529 313.56085205]
[-149.56121826 307.01876831]
[-135.46476746 301.85458374]
[-120.92417145 298.11965942]
[-106.08395386 295.85107422]
[-91.09159851 295.07138062]
[-76.09610748 295.78836060]
[-61.24653244 297.99487305]
[-46.69044495 301.66894531]
[-32.57252121 306.77413940]
[-26.09302521 293.24578857]
[-19.61352921 279.71743774]
[-19.55927658 272.32696533]
[-12.93553162 266.03698730]
[-6.25533676 252.60662842]
[0.42485791 239.17625427]
[7.10505247 225.74588013]
[-6.47195768 232.12277222]
[-21.35492325 230.25265503]
[-32.93219757 220.71501160]
[-37.61643219 206.46516418]
[-33.95616913 191.91860962]
[-23.08557892 181.58273315]
[-8.37303448 178.66023254]
[5.62262440 184.05667114]
[14.56468964 196.09989929]
[15.68231201 211.05845642]
[24.09693146 198.64096069]
[32.51155090 186.22346497]
[40.92616653 173.80596924]
[49.34078598 161.38847351]
[50.07526779 146.51197815]
[64.22200775 139.42817688]
[72.63662720 127.01068115]
[81.05124664 114.59318542]
[89.46586609 102.17568970]
[95.23189545 88.32820129]
[98.11717224 73.60831451]
[101.00244141 58.88842010]
[103.55827332 44.10776520]
[105.78339386 29.27372360]
[108.00850677 14.43967915]
[110.23362732 -0.39436468]
[112.45874023 -15.22840881]
[114.68386078 -30.06245232]
[116.90898132 -44.89649582]
[119.13409424 -59.73054123]
[105.70384979 -53.05007935]
[92.04343414 -59.24629211]
[88.22279358 -73.75155640]
[97.05837250 -85.87313843]
[112.03689575 -86.67544556]
[122.11628723 -75.56864166]
[125.43854523 -90.19610596]
[128.76080322 -104.82356262]
[127.60981750 -113.88519287]
[132.24295044 -119.64330292]
[135.78262329 -134.21968079]
[139.32229614 -148.79605103]
[141.43692017 -163.64625549]
[142.10670471 -178.63128662]
[142.77648926 -193.61633301]
[128.68103027 -199.14776611]
[117.14698029 -208.95817566]
[109.42545319 -221.98341370]
[106.35403442 -236.81059265]
[108.26587677 -251.83135986]
[114.95360565 -265.41638184]
[125.69178772 -276.09207153]
[139.31562805 -282.70037842]
[154.34730530 -284.52453613]
[169.15629578 -281.36660767]
[182.13623047 -273.56918335]
[191.87915039 -261.97805786]
[197.32821655 -247.85055542]
[197.89234924 -232.71911621]
[193.51036072 -218.22508240]
[184.65757751 -205.94065857]
[172.29426575 -197.19837952]
[157.76153564 -192.94654846]
[157.09175110 -177.96150208]
[156.42196655 -162.97647095]
[164.83714294 -175.39356995]
[177.53208923 -183.38348389]
[192.36744690 -185.59974670]
[206.84323120 -181.66886902]
[218.52000427 -172.25329590]
[225.43002319 -158.93971252]
[226.40882874 -143.97167969]
[221.29148865 -129.87158203]
[210.94033813 -119.01553345]
[197.09974670 -113.23297119]
[182.10209656 -113.49835205]
[168.47474670 -119.76695251]
[158.51416016 -130.98242188]
[153.89868164 -145.25637817]
[150.35900879 -130.68000793]
[146.81933594 -116.10363007]
[143.38827515 -101.50130463]
[140.06600952 -86.87384796]
[136.74374390 -72.24638367]
[133.96813965 -57.50542068]
[131.74302673 -42.67137909]
[129.51789856 -27.83733559]
[127.29278564 -13.00329113]
[125.06767273 1.83075249]
[122.84255219 16.66479683]
[120.61743927 31.49884033]
[118.39231873 46.33288193]
[120.18280792 49.37039948]
[120.59100342 53.42606354]
[119.15439606 57.84075165]
[115.72233582 61.77369308]
[112.83705902 76.49358368]
[109.95178986 91.21347809]
[119.04389191 79.28310394]
[130.45932007 69.55232239]
[143.67872620 62.46381378]
[158.10075378 58.34005737]
[173.06925964 57.36865234]
[187.90330505 59.59379578]
[201.92802429 64.91426086]
[214.50538635 73.08798981]
[225.06320190 83.74314880]
[233.12118530 96.39498901]
[238.31271362 110.46794128]
[240.40164185 125.32177734]
[239.29292297 140.28074646]
[235.03698730 154.66430664]
[227.82746887 167.81813049]
[217.99234009 179.14376831]
[205.97903442 188.12600708]
[192.33409119 194.35621643]
[177.67823792 197.55093384]
[162.67825317 197.56484985]
[148.01651001 194.39732361]
[134.36001587 188.19245911]
[122.33007812 179.23251343]
[112.47395325 167.92514038]
[105.24003601 154.78472900]
[100.95742798 140.40907288]
[99.82095337 125.45219421]
[101.88336182 110.59030914]
[93.46874237 123.00780487]
[85.05412292 135.42529297]
[76.63950348 147.84278870]
[75.30315399 163.60746765]
[61.75828171 169.80308533]
[53.34366226 182.22058105]
[44.92904282 194.63807678]
[36.51442719 207.05557251]
[28.09980774 219.47306824]
[20.53542900 232.42607117]
[13.85523415 245.85644531]
[7.17503929 259.28683472]
[0.49484465 272.71719360]
[-6.08518314 286.19692993]
[-12.56467915 299.72528076]
[-19.04417419 313.25363159]
[-6.21710873 321.05395508]
[5.76954317 330.09268188]
[16.79664993 340.27999878]
[26.75461578 351.51464844]
[35.54447174 363.68499756]
[43.07885742 376.67004395]
[49.28289032 390.34075928]
[54.09490967 404.56127930]
[57.46709442 419.19027710]
[59.36592484 434.08230591]
[59.77252960 449.08941650]
[58.68286896 464.06243896]
[56.10777283 478.85253906]
[52.07283401 493.31277466]
[46.61815262 507.29937744]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 195]
[47 194]
[48 193]
[50 192]
[51 191]
[52 190]
[53 189]
[63 188]
[64 187]
[65 186]
[66 185]
[67 184]
[69 182]
[70 181]
[71 180]
[72 179]
[73 151]
[74 150]
[75 149]
[76 145]
[77 144]
[78 143]
[79 142]
[80 141]
[81 140]
[82 139]
[83 138]
[89 137]
[90 136]
[91 135]
[93 134]
[94 133]
[95 132]
[96 118]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
