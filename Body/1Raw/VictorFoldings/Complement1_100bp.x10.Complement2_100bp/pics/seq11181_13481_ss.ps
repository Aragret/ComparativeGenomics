%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAUxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[299.86691284 288.21975708]
[289.29013062 298.85348511]
[278.14846802 308.89370728]
[266.47512817 318.31054688]
[254.30494690 327.07586670]
[241.67428589 335.16348267]
[228.62080383 342.54928589]
[215.18345642 349.21121216]
[201.40237427 355.12942505]
[187.31864929 360.28622437]
[172.97434998 364.66622925]
[158.41226196 368.25634766]
[143.67584229 371.04589844]
[128.80908203 373.02655029]
[113.85634613 374.19238281]
[98.86225128 374.53991699]
[83.87155914 374.06811523]
[68.92899323 372.77841187]
[54.07915878 370.67459106]
[39.36637115 367.76300049]
[24.83453751 364.05230713]
[10.52702522 359.55355835]
[-3.51346397 354.28021240]
[-17.24502945 348.24798584]
[-30.62668991 341.47491455]
[-43.61851120 333.98117065]
[-56.18171692 325.78912354]
[-68.27881622 316.92324829]
[-79.87371063 307.41000366]
[-90.93178558 297.27777100]
[-101.42005157 286.55676270]
[-111.30720520 275.27899170]
[-120.56372833 263.47814941]
[-129.16200256 251.18940735]
[-137.07638550 238.44944763]
[-144.28321838 225.29632568]
[-150.76103210 211.76925659]
[-156.49047852 197.90863037]
[-161.45445251 183.75579834]
[-165.63813782 169.35301208]
[-169.02906799 154.74324036]
[-171.61711121 139.97010803]
[-173.39453125 125.07768250]
[-174.35604858 110.11042023]
[-174.49877930 95.11298370]
[-173.82229614 80.13012695]
[-172.32862854 65.20657349]
[-170.02221680 50.38685608]
[-166.90995789 35.71520233]
[-163.00114441 21.23539925]
[-158.30741882 6.99066162]
[-152.84281921 -6.97650099]
[-146.62362671 -20.62440491]
[-139.66842651 -33.91231918]
[-131.99795532 -46.80058289]
[-123.63510895 -59.25074387]
[-114.60485840 -71.22563171]
[-104.93413544 -82.68952179]
[-94.65181732 -93.60819244]
[-83.78857422 -103.94906616]
[-72.37683868 -113.68127441]
[-60.45066833 -122.77577209]
[-48.04565048 -131.20542908]
[-35.19880295 -138.94506836]
[-21.94847107 -145.97160339]
[-8.33419895 -152.26406860]
[5.60338449 -157.80368042]
[19.82268333 -162.57391357]
[34.28126526 -166.56051636]
[48.93597412 -169.75160217]
[63.74307632 -172.13764954]
[78.65838623 -173.71151733]
[93.63739014 -174.46853638]
[108.63537598 -174.40643311]
[123.60759735 -173.52539062]
[138.50935364 -171.82804871]
[153.29620361 -169.31947327]
[167.92398071 -166.00712585]
[182.34904480 -161.90092468]
[196.52835083 -157.01310730]
[210.41958618 -151.35826111]
[223.98127747 -144.95326233]
[237.17297363 -137.81724548]
[249.95527649 -129.97146606]
[262.29006958 -121.43937683]
[274.14050293 -112.24642181]
[285.47125244 -102.42004395]
[296.24847412 -91.98956299]
[306.44003296 -80.98611450]
[316.01547241 -69.44253540]
[324.94625854 -57.39326859]
[333.20571899 -44.87428284]
[346.15872192 -52.43865967]
[359.11169434 -60.00304031]
[372.06469727 -67.56742096]
[385.01770020 -75.13179779]
[397.97070312 -82.69617462]
[391.34661865 -96.16149139]
[385.70001221 -110.06505585]
[381.05966187 -124.33602142]
[377.44921875 -138.90165710]
[374.88708496 -153.68775940]
[373.38632202 -168.61897278]
[372.95455933 -183.61920166]
[373.59399414 -198.61201477]
[375.30139160 -213.52099609]
[378.06802368 -228.27020264]
[381.87982178 -242.78445435]
[386.71734619 -256.98977661]
[392.55596924 -270.81381226]
[399.36590576 -284.18612671]
[407.11242676 -297.03851318]
[415.75613403 -309.30554199]
[425.25292969 -320.92465210]
[435.55444336 -331.83670044]
[446.60815430 -341.98602295]
[458.35775757 -351.32089233]
[470.74334717 -359.79379272]
[483.70184326 -367.36154175]
[497.16720581 -373.98553467]
[511.07083130 -379.63201904]
[525.34179688 -384.27224731]
[539.90747070 -387.88259888]
[554.69360352 -390.44461060]
[569.62481689 -391.94525146]
[584.62506104 -392.37692261]
[599.61785889 -391.73736572]
[614.52685547 -390.02984619]
[629.27600098 -387.26309204]
[643.79022217 -383.45117188]
[657.99554443 -378.61352539]
[671.81951904 -372.77484131]
[685.19177246 -365.96481323]
[698.04412842 -358.21813965]
[710.31109619 -349.57437134]
[721.93011475 -340.07748413]
[732.84210205 -329.77587891]
[742.99133301 -318.72210693]
[752.32611084 -306.97244263]
[760.79895020 -294.58676147]
[768.36657715 -281.62820435]
[774.99041748 -268.16278076]
[780.63684082 -254.25914001]
[785.27697754 -239.98809814]
[788.88714600 -225.42239380]
[791.44909668 -210.63626099]
[792.94964600 -195.70503235]
[793.38116455 -180.70478821]
[792.74145508 -165.71199036]
[791.03387451 -150.80302429]
[788.26696777 -136.05386353]
[784.45495605 -121.53968048]
[779.61724854 -107.33441162]
[773.77838135 -93.51046753]
[766.96826172 -80.13828278]
[759.22155762 -67.28599548]
[750.57763672 -55.01911163]
[741.08068848 -43.40012741]
[730.77899170 -32.48825836]
[719.72515869 -22.33910942]
[707.97540283 -13.00439644]
[695.58966064 -4.53168869]
[682.63104248 3.03583908]
[669.16558838 9.65962315]
[655.26190186 15.30591106]
[640.99078369 19.94593048]
[626.42504883 23.55603409]
[611.63891602 26.11782837]
[596.70770264 27.61825752]
[581.70745850 28.04967690]
[566.71466064 27.40988541]
[551.80566406 25.70214653]
[537.05657959 22.93516159]
[522.54241943 19.12302780]
[508.33715820 14.28517532]
[494.51327515 8.44625473]
[481.14114380 1.63602018]
[468.28890991 -6.11082411]
[456.02209473 -14.75480175]
[444.40316772 -24.25186539]
[433.49139404 -34.55361938]
[423.34231567 -45.60756302]
[414.00769043 -57.35737610]
[405.53509521 -69.74317932]
[392.58209229 -62.17879868]
[379.62908936 -54.61442184]
[366.67608643 -47.05004120]
[353.72308350 -39.48566437]
[340.77008057 -31.92128372]
[347.61492920 -18.57617950]
[353.72079468 -4.87719965]
[359.06942749 9.13477516]
[363.64492798 23.41792679]
[367.43359375 37.92963028]
[370.42416382 52.62657166]
[372.60763550 67.46489716]
[373.97756958 82.40032196]
[374.52984619 97.38826752]
[374.26281738 112.38401031]
[373.17730713 127.34278870]
[371.27648926 142.21997070]
[368.56610107 156.97114563]
[365.05419922 171.55230713]
[360.75128174 185.91992188]
[355.67016602 200.03111267]
[349.82604980 213.84378052]
[343.23635864 227.31669617]
[335.92074585 240.40965271]
[327.90103149 253.08355713]
[319.20120239 265.30062866]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[92 189]
[93 188]
[94 187]
[95 186]
[96 185]
[97 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
