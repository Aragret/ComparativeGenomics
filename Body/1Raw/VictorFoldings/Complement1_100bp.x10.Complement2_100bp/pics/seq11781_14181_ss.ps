%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUGxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[105.57101440 761.19256592]
[90.56816864 761.55596924]
[75.58081055 760.78369141]
[60.69478226 758.88012695]
[45.99534988 755.85620117]
[31.56671524 751.72924805]
[17.49152374 746.52282715]
[3.85039592 740.26690674]
[-9.27853012 732.99719238]
[-21.82005310 724.75537109]
[-33.70233536 715.58862305]
[-44.85731506 705.54956055]
[-55.22109985 694.69555664]
[-64.73432159 683.08880615]
[-73.34249115 670.79583740]
[-80.99629211 657.88708496]
[-87.65190125 644.43640137]
[-93.27118683 630.52093506]
[-97.82196045 616.22027588]
[-101.27815247 601.61645508]
[-103.61997223 586.79302979]
[-104.83399963 571.83496094]
[-104.91329193 556.82794189]
[-103.85737610 541.85791016]
[-101.67231750 527.01055908]
[-98.37062836 512.37103271]
[-93.97122192 498.02313232]
[-88.49928284 484.04904175]
[-81.98617554 470.52877808]
[-74.46919250 457.53985596]
[-65.99140167 445.15661621]
[-56.60135269 433.45004272]
[-46.35283661 422.48712158]
[-35.30455399 412.33071899]
[-23.51979637 403.03894043]
[-11.06605911 394.66506958]
[1.98531914 387.25704956]
[15.55958176 380.85729980]
[29.57897568 375.50247192]
[43.96319962 371.22329712]
[58.62985611 368.04421997]
[73.49494171 365.98345947]
[88.47330475 365.05285645]
[103.47914886 365.25772095]
[104.81738281 350.31753540]
[106.15561676 335.37734985]
[107.49385071 320.43716431]
[108.83208466 305.49697876]
[108.49710846 290.50073242]
[106.49309540 275.63519287]
[104.48908234 260.76965332]
[102.48506927 245.90414429]
[100.48105621 231.03860474]
[90.54900360 242.27935791]
[75.58670807 243.34233093]
[64.16526794 233.61860657]
[62.82739258 218.67839050]
[72.33947754 207.08010864]
[87.25257111 205.46777344]
[99.02331543 214.76419067]
[98.35352325 199.77915955]
[97.68373871 184.79411316]
[97.01395416 169.80908203]
[96.34416962 154.82403564]
[95.45135498 139.85063171]
[94.33570862 124.89218140]
[93.22005463 109.93373108]
[91.88182068 94.99354553]
[90.32130432 80.07493591]
[81.19028473 67.15460205]
[87.56152344 53.69144058]
[86.00099945 38.77283859]
[84.44047546 23.85423279]
[82.76893616 8.94765854]
[80.98646545 -5.94605923]
[79.20400238 -20.83977699]
[69.88163757 -33.62273407]
[76.05171967 -47.17926025]
[74.26924896 -62.07297897]
[72.48678589 -76.96669769]
[70.70432281 -91.86041260]
[55.68268204 -92.31648254]
[40.89681244 -95.00641632]
[26.67703629 -99.87012482]
[13.34102917 -106.79894257]
[1.18672073 -115.63808441]
[-9.51435661 -126.19007874]
[-18.52313805 -138.21919250]
[-25.63836098 -151.45668030]
[-30.70107079 -165.60682678]
[-33.59816742 -180.35351562]
[-34.26492310 -195.36727905]
[-32.68644333 -210.31271362]
[-28.89799690 -224.85592651]
[-22.98421478 -238.67204285]
[-15.07721424 -251.45237732]
[-5.35364056 -262.91143799]
[5.96927881 -272.79318237]
[18.63858604 -280.87689209]
[32.37124252 -286.98196411]
[46.86045456 -290.97198486]
[61.78253174 -292.75784302]
[76.80410767 -292.29965210]
[91.58959198 -289.60760498]
[105.80867004 -284.74185181]
[119.14369202 -277.81115723]
[131.29673767 -268.97027588]
[141.99632263 -258.41674805]
[151.00338745 -246.38635254]
[158.11672974 -233.14785767]
[163.17741394 -218.99697876]
[166.07241821 -204.24989319]
[166.73703003 -189.23603821]
[165.15641785 -174.29083252]
[161.36590576 -159.74813843]
[155.45014954 -145.93287659]
[147.54133606 -133.15367126]
[137.81613159 -121.69600677]
[126.49180603 -111.81585693]
[113.82134247 -103.73395538]
[100.08782196 -97.63084412]
[85.59803772 -93.64287567]
[87.38050079 -78.74916077]
[89.16297150 -63.85544205]
[90.94543457 -48.96172714]
[100.14031219 -37.24406433]
[94.09771729 -22.62224197]
[95.88018799 -7.72852516]
[97.66265106 7.16519213]
[101.57872009 13.43306446]
[99.35907745 22.29370880]
[100.91960144 37.21231461]
[102.48012543 52.13092041]
[111.49951935 63.98418045]
[105.23990631 78.51441956]
[106.80043030 93.43302155]
[110.02164459 97.57279205]
[110.69412231 103.22267151]
[108.17851257 108.81807709]
[109.29415894 123.77653503]
[110.40980530 138.73498535]
[113.81049347 144.40481567]
[113.83381653 150.08781433]
[111.32920837 154.15425110]
[111.99899292 169.13929749]
[112.66877747 184.12432861]
[113.33856201 199.10937500]
[114.00835419 214.09440613]
[115.34658813 229.03459167]
[117.35060120 243.90013123]
[119.35461426 258.76565552]
[121.35862732 273.63119507]
[123.36264038 288.49670410]
[128.97763062 274.58728027]
[139.18484497 263.59579468]
[152.64131165 256.96835327]
[167.57664490 255.57687378]
[182.02580261 259.60449219]
[194.08778381 268.52124023]
[202.17559814 281.15402222]
[205.22518921 295.84075928]
[202.83529663 310.64913940]
[195.32037354 323.63088989]
[183.66912842 333.07803345]
[169.41447449 337.74765015]
[154.43188477 337.02532959]
[140.69255066 331.00613403]
[130.00411987 320.48199463]
[123.77227020 306.83520508]
[122.43403625 321.77539062]
[121.09580231 336.71557617]
[119.75756836 351.65576172]
[118.41933441 366.59594727]
[133.22271729 369.06118774]
[147.79725647 372.63894653]
[162.05946350 377.30868530]
[175.92765808 383.04370117]
[189.32240295 389.81115723]
[202.16697693 397.57223511]
[214.38778687 406.28253174]
[225.91485596 415.89212036]
[236.68214417 426.34594727]
[246.62796021 437.58419800]
[255.69537354 449.54241943]
[263.83242798 462.15219116]
[270.99249268 475.34121704]
[277.13458252 489.03399658]
[282.22351074 503.15206909]
[286.23013306 517.61456299]
[289.13150024 532.33868408]
[290.91098022 547.24005127]
[291.55834961 562.23333740]
[291.06997681 577.23266602]
[289.44860840 592.15203857]
[286.70352173 606.90606689]
[282.85049438 621.41027832]
[277.91152954 635.58154297]
[271.91497803 649.33868408]
[264.89514160 662.60284424]
[256.89224243 675.29821777]
[247.95214844 687.35192871]
[238.12603760 698.69494629]
[227.47019958 709.26239014]
[216.04566956 718.99365234]
[203.91789246 727.83300781]
[191.15634155 735.72985840]
[177.83410645 742.63897705]
[164.02749634 748.52069092]
[149.81559753 753.34143066]
[135.27981567 757.07348633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 173]
[45 172]
[46 171]
[47 170]
[48 169]
[49 153]
[50 152]
[51 151]
[52 150]
[53 149]
[60 148]
[61 147]
[62 146]
[63 145]
[64 144]
[65 141]
[66 140]
[67 139]
[68 136]
[69 135]
[71 133]
[72 132]
[73 131]
[74 129]
[75 128]
[76 127]
[78 125]
[79 124]
[80 123]
[81 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
