%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[183.49656677 801.46575928]
[169.28643799 796.65332031]
[155.32339478 791.16516113]
[141.63952637 785.01385498]
[128.26632690 778.21350098]
[115.23455048 770.77984619]
[102.57415771 762.72985840]
[90.31428528 754.08221436]
[78.48313141 744.85668945]
[67.10788727 735.07446289]
[56.21474075 724.75817871]
[45.82873535 713.93145752]
[35.97375488 702.61926270]
[26.67247581 690.84753418]
[17.94628525 678.64343262]
[9.81525612 666.03497314]
[2.29808950 653.05114746]
[-4.58792496 639.72186279]
[-10.82694912 626.07775879]
[-16.40463257 612.15020752]
[-21.30814552 597.97131348]
[-25.52621269 583.57354736]
[-29.04912949 568.99011230]
[-31.86879349 554.25457764]
[-33.97872162 539.40081787]
[-35.37405777 524.46295166]
[-36.05159760 509.47534180]
[-36.00977325 494.47250366]
[-35.24869156 479.48892212]
[-33.77009583 464.55905151]
[-31.57739258 449.71725464]
[-28.67562103 434.99768066]
[-25.07145500 420.43411255]
[-20.77318573 406.06011963]
[-15.79070091 391.90875244]
[-10.13545704 378.01251221]
[-3.82046413 364.40341187]
[3.13975430 351.11273193]
[10.72918892 338.17102051]
[18.93038368 325.60809326]
[27.72447777 313.45281982]
[37.09123993 301.73315430]
[47.00913239 290.47604370]
[57.45533752 279.70739746]
[68.40583038 269.45199585]
[79.83542633 259.73336792]
[91.71783447 250.57394409]
[104.02572632 241.99473572]
[116.73079681 234.01550293]
[129.80381775 226.65460205]
[143.21472168 219.92893982]
[137.14088440 206.21366882]
[131.06706238 192.49839783]
[124.99321747 178.78312683]
[120.93972778 176.25761414]
[118.42970276 171.15892029]
[118.94950104 164.56790161]
[113.28671265 150.67788696]
[107.52068329 136.83039856]
[101.65171814 123.02622223]
[95.78276062 109.22204590]
[89.98147583 103.62582397]
[89.93087769 95.16838074]
[84.26808929 81.27835846]
[78.60530090 67.38832855]
[72.94251251 53.49830246]
[61.37836838 47.78574753]
[56.94777298 36.10013199]
[61.51592255 24.89930344]
[56.60137939 20.47677040]
[54.91168976 15.05072498]
[56.11297226 10.42839146]
[44.19091415 0.02766418]
[47.20520401 -14.55874443]
[42.16828918 -28.68777466]
[37.13137436 -42.81680298]
[32.09445572 -56.94583511]
[17.25295639 -54.50254822]
[2.21370292 -54.74879074]
[-12.53985405 -57.67664719]
[-26.53344727 -63.19200134]
[-39.31724167 -71.11755371]
[-50.48029327 -81.19852448]
[-59.66375351 -93.11087036]
[-66.57241058 -106.47164154]
[-70.98418427 -120.85134888]
[-72.75724792 -135.78775024]
[-71.83461761 -150.80068970]
[-68.24593353 -165.40757751]
[-62.10657120 -179.13885498]
[-53.61388016 -191.55313110]
[-43.04087067 -202.25131226]
[-30.72741127 -210.88951111]
[-17.06933784 -217.19004822]
[-2.50569677 -220.95039368]
[12.49534988 -222.04965210]
[27.45158195 -220.45248413]
[41.88221741 -216.21025085]
[55.32336807 -209.45932007]
[67.34296417 -200.41668701]
[77.55461884 -189.37304688]
[85.63007355 -176.68341064]
[91.30973053 -162.75569153]
[94.41101837 -148.03761292]
[94.83423615 -133.00230408]
[92.56578827 -118.13307953]
[87.67858887 -103.90792084]
[80.32975006 -90.78411865]
[70.75549316 -79.18354034]
[59.26359940 -69.47909546]
[46.22348785 -61.98274994]
[51.26040268 -47.85372162]
[56.29731750 -33.72468948]
[61.33423615 -19.59566116]
[72.89601898 -10.20553684]
[70.24200439 5.39147520]
[75.48872375 19.44394684]
[89.76065826 29.65564537]
[86.83254242 47.83551407]
[92.49533081 61.72554398]
[98.15811157 75.61557007]
[103.82089996 89.50559998]
[109.58693695 103.35308075]
[115.45589447 117.15725708]
[121.32485962 130.96144104]
[127.56247711 137.63450623]
[127.17674255 145.01509094]
[132.83952332 158.90512085]
[138.70848083 172.70930481]
[144.78231812 186.42456055]
[150.85615540 200.13983154]
[156.92999268 213.85510254]
[170.92337036 208.44471741]
[185.16006470 203.71147156]
[199.60731506 199.66624451]
[214.23188782 196.31834412]
[229.00016785 193.67546082]
[243.87818909 191.74369812]
[258.83169556 190.52746582]
[273.82632446 190.02958679]
[288.82760620 190.25119019]
[303.80096436 191.19177246]
[318.71203613 192.84916687]
[333.52648926 195.21957397]
[348.21026611 198.29753113]
[362.72958374 202.07597351]
[377.05102539 206.54617310]
[391.14169312 211.69789124]
[404.96914673 217.51925659]
[418.50161743 223.99688721]
[431.70791626 231.11587524]
[444.55773926 238.85984802]
[457.02148438 247.21099854]
[469.07052612 256.15011597]
[480.67709351 265.65667725]
[491.81454468 275.70874023]
[502.45724487 286.28323364]
[512.58068848 297.35583496]
[522.16162109 308.90109253]
[531.17797852 320.89239502]
[539.60906982 333.30221558]
[547.43548584 346.10198975]
[554.63922119 359.26229858]
[561.20367432 372.75283813]
[567.11383057 386.54260254]
[572.35595703 400.59985352]
[576.91815186 414.89227295]
[580.78979492 429.38699341]
[583.96209717 444.05068970]
[586.42767334 458.84960938]
[588.18084717 473.74969482]
[589.21765137 488.71673584]
[589.53570557 503.71627808]
[589.13421631 518.71380615]
[588.01409912 533.67480469]
[586.17797852 548.56494141]
[583.63012695 563.34991455]
[580.37628174 577.99566650]
[576.42395020 592.46862793]
[571.78234863 606.73547363]
[566.46197510 620.76330566]
[560.47521973 634.51995850]
[553.83575439 647.97375488]
[546.55889893 661.09375000]
[538.66137695 673.84979248]
[530.16137695 686.21246338]
[521.07836914 698.15344238]
[511.43331909 709.64514160]
[501.24838257 720.66125488]
[490.54702759 731.17639160]
[479.35379028 741.16632080]
[467.69448853 750.60809326]
[455.59588623 759.47998047]
[443.08584595 767.76165771]
[430.19314575 775.43402100]
[416.94741821 782.47937012]
[403.37911987 788.88159180]
[389.51947021 794.62591553]
[375.40036011 799.69909668]
[361.05422974 804.08953857]
[346.51412964 807.78710938]
[331.81344604 810.78326416]
[316.98602295 813.07122803]
[302.06594849 814.64556885]
[287.08758545 815.50280762]
[272.08532715 815.64093018]
[257.09368896 815.05957031]
[242.14717102 813.76013184]
[227.28013611 811.74560547]
[212.52679443 809.02056885]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 132]
[52 131]
[53 130]
[54 129]
[57 128]
[58 127]
[59 125]
[60 124]
[61 123]
[63 122]
[64 121]
[65 120]
[66 119]
[69 117]
[72 116]
[74 114]
[75 113]
[76 112]
[77 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
