%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[18.36337852 404.65298462]
[25.92384529 417.68319702]
[30.39475822 432.06927490]
[31.55185509 447.08953857]
[29.33709908 461.99063110]
[23.86158180 476.02511597]
[15.39995098 488.48901367]
[4.37663841 498.75714111]
[-8.65542984 506.31442261]
[-23.04257202 510.78186035]
[-38.06313324 511.93533325]
[-52.96368790 509.71694946]
[-66.99683380 504.23803711]
[-79.45867157 495.77337646]
[-89.72412872 484.74758911]
[-97.27827454 471.71368408]
[-101.74221802 457.32546997]
[-102.89203644 442.30462646]
[-100.67005920 427.40460205]
[-95.18774414 413.37277222]
[-86.72006989 400.91299438]
[-75.69178772 390.65020752]
[-62.65605545 383.09921265]
[-48.26675034 378.63876343]
[-33.24563217 377.49258423]
[-18.34615135 379.71817017]
[-12.89079475 365.74539185]
[-7.43543768 351.77258301]
[-1.98008084 337.79977417]
[-4.55874205 323.13009644]
[7.66769791 313.08895874]
[6.60457277 308.43289185]
[8.45506477 303.05957031]
[13.49910545 298.78530884]
[19.36806679 284.98114014]
[25.23702621 271.17697144]
[31.10598755 257.37277222]
[25.31354904 243.69860840]
[31.06886482 229.61560059]
[45.45087814 223.63267517]
[51.31983948 209.82849121]
[57.18880081 196.02432251]
[63.05776215 182.22013855]
[68.82379150 168.37265015]
[74.48657990 154.48262024]
[80.14936829 140.59260559]
[84.97536469 126.39014435]
[88.94746399 111.92562103]
[84.28909302 95.81115723]
[96.35169983 84.15484619]
[100.10800171 69.63278198]
[103.86430359 55.11072540]
[107.62060547 40.58866501]
[111.37689972 26.06660652]
[115.13320160 11.54454803]
[118.88950348 -2.97751141]
[108.43893433 7.78286314]
[94.83754730 14.10759449]
[79.87483215 15.16455460]
[65.51939392 10.81468201]
[53.65993881 1.63027835]
[45.85677719 -11.18029118]
[43.13655472 -25.93157578]
[45.85715866 -40.68278885]
[53.66065216 -53.49315643]
[65.52034760 -62.67725372]
[79.87590027 -67.02675629]
[94.83858490 -65.96940613]
[108.43981171 -59.64432526]
[118.89009857 -48.88367844]
[124.81452942 -35.10322189]
[125.43331909 -20.11364555]
[132.31272888 -33.44307709]
[139.19213867 -46.77250290]
[146.07156372 -60.10193253]
[142.90045166 -72.60420990]
[148.90473938 -83.56469727]
[160.38728333 -87.36967468]
[167.46438599 -100.59520721]
[167.15341187 -116.41335297]
[179.98022461 -123.98450470]
[187.05732727 -137.21002197]
[194.03578186 -150.48786926]
[200.91519165 -163.81730652]
[207.79460144 -177.14672852]
[208.94949341 -186.20785522]
[214.87695312 -190.62226868]
[221.95405579 -203.84779358]
[229.03117371 -217.07333374]
[228.72019958 -232.89147949]
[241.54699707 -240.46263123]
[248.62411499 -253.68815613]
[236.18482971 -262.09460449]
[224.67584229 -271.73550415]
[214.21916199 -282.50872803]
[204.92564392 -294.29998779]
[196.89378357 -306.98437500]
[190.20872498 -320.42736816]
[184.94136047 -334.48648071]
[181.14749146 -349.01269531]
[178.86737061 -363.85198975]
[178.12513733 -378.84710693]
[178.92866516 -393.83905029]
[181.26945496 -408.66891479]
[185.12268066 -423.17947388]
[190.44749451 -437.21694946]
[197.18745422 -450.63250732]
[205.27110291 -463.28390503]
[214.61276245 -475.03710938]
[225.11340332 -485.76745605]
[236.66171265 -495.36123657]
[249.13526917 -503.71676636]
[262.40182495 -510.74542236]
[276.32080078 -516.37274170]
[290.74459839 -520.53900146]
[305.52035522 -523.20013428]
[320.49139404 -524.32788086]
[335.49905396 -523.91027832]
[350.38421631 -521.95178223]
[364.98910522 -518.47308350]
[379.15890503 -513.51116943]
[392.74340820 -507.11856079]
[405.59860229 -499.36303711]
[417.58819580 -490.32681274]
[428.58514404 -480.10571289]
[438.47283936 -468.80801392]
[447.14645386 -456.55352783]
[454.51406860 -443.47216797]
[460.49758911 -429.70257568]
[465.03356934 -415.39071655]
[468.07391357 -400.68832397]
[469.58639526 -385.75125122]
[469.55502319 -370.73782349]
[467.98007202 -355.80718994]
[464.87829590 -341.11764526]
[460.28250122 -326.82489014]
[454.24148560 -313.08044434]
[446.81924438 -300.02999878]
[438.09445190 -287.81188965]
[428.15960693 -276.55563354]
[417.12002563 -266.38058472]
[405.09274292 -257.39459229]
[392.20523071 -249.69288635]
[378.59411621 -243.35713196]
[364.40368652 -238.45448303]
[349.78439331 -235.03692627]
[334.89114380 -233.14067078]
[319.88189697 -232.78582764]
[304.91567993 -233.97615051]
[290.15121460 -236.69902039]
[275.74493408 -240.92559814]
[261.84963989 -246.61105347]
[254.77253723 -233.38551331]
[255.58970642 -218.51335144]
[242.25669861 -209.99621582]
[235.17959595 -196.77069092]
[228.10247803 -183.54516602]
[221.12403870 -170.26731873]
[214.24461365 -156.93789673]
[207.36520386 -143.60845947]
[207.09094238 -136.22290039]
[200.28285217 -130.13291931]
[193.20574951 -116.90739441]
[194.02291870 -102.03522491]
[180.68991089 -93.51809692]
[173.61280823 -80.29257202]
[175.12315369 -62.80870056]
[159.40098572 -53.22252274]
[152.52157593 -39.89309311]
[145.64216614 -26.56366348]
[138.76275635 -13.23423386]
[133.41156006 0.77878916]
[129.65525818 15.30084801]
[125.89896393 29.82290840]
[122.14266205 44.34496689]
[118.38636017 58.86702728]
[114.63005829 73.38908386]
[110.87375641 87.91114807]
[116.16896057 98.28428650]
[113.16858673 109.53768158]
[103.41198730 115.89772034]
[99.43988800 130.36224365]
[111.95230103 122.08941650]
[126.94233704 122.63593292]
[138.81909180 131.79795837]
[143.15283203 146.15827942]
[138.32717896 160.36083984]
[126.14196777 169.10845947]
[111.14199829 169.13847351]
[98.92188263 160.43969727]
[94.03939056 146.25538635]
[88.37660980 160.14541626]
[82.71382141 174.03544617]
[82.37192535 183.16346741]
[76.86193848 188.08909607]
[70.99297333 201.89328003]
[65.12401581 215.69744873]
[59.25505447 229.50163269]
[64.92508698 244.00985718]
[58.77647781 257.92565918]
[44.91016388 263.24176025]
[39.04120255 277.04592896]
[33.17224121 290.85009766]
[27.30328178 304.65426636]
[21.64049530 318.54431152]
[23.82895279 334.21340942]
[11.99271679 343.25515747]
[6.53735971 357.22793579]
[1.08200288 371.20074463]
[-4.37335396 385.17352295]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 210]
[27 209]
[28 208]
[29 207]
[31 205]
[34 204]
[35 203]
[36 202]
[37 201]
[40 198]
[41 197]
[42 196]
[43 195]
[44 193]
[45 192]
[46 191]
[47 182]
[48 181]
[50 178]
[51 177]
[52 176]
[53 175]
[54 174]
[55 173]
[56 172]
[72 171]
[73 170]
[74 169]
[75 168]
[78 166]
[79 165]
[81 163]
[82 162]
[83 160]
[84 159]
[85 158]
[87 157]
[88 156]
[89 155]
[91 153]
[92 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
