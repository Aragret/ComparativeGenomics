%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[179.43576050 843.77429199]
[165.78558350 837.54486084]
[152.52842712 830.51770020]
[139.71084595 822.71752930]
[127.37786865 814.17175293]
[115.57279968 804.91033936]
[104.33712769 794.96588135]
[93.71029663 784.37322998]
[83.72965240 773.16967773]
[74.43023682 761.39453125]
[65.84472656 749.08917236]
[58.00327682 736.29681396]
[50.93342590 723.06237793]
[44.66001129 709.43237305]
[39.20506287 695.45465088]
[34.58774948 681.17834473]
[30.82428551 666.65356445]
[27.92789078 651.93133545]
[25.90873909 637.06341553]
[24.77392387 622.10192871]
[24.52742767 607.09954834]
[25.17012024 592.10888672]
[26.69974327 577.18261719]
[29.11092377 562.37316895]
[32.39519119 547.73260498]
[36.54100800 533.31231689]
[41.53381729 519.16290283]
[47.35607529 505.33416748]
[53.98733521 491.87463379]
[61.40430069 478.83157349]
[69.58092499 466.25079346]
[78.48847961 454.17651367]
[88.09568787 442.65112305]
[98.36878967 431.71511841]
[109.27170563 421.40689087]
[120.76614380 411.76266479]
[132.81172180 402.81634521]
[145.36613464 394.59930420]
[158.38528442 387.14044189]
[171.82344055 380.46594238]
[185.63339233 374.59924316]
[180.59648132 360.47021484]
[175.55955505 346.34118652]
[170.52264404 332.21215820]
[165.48573303 318.08312988]
[147.53005981 315.64093018]
[133.23280334 304.36920166]
[126.60569000 287.32070923]
[129.56401062 269.18402100]
[141.37402344 254.99421692]
[135.71122742 241.10420227]
[130.04844666 227.21417236]
[124.38565826 213.32414246]
[112.41611481 204.45964050]
[114.37104034 188.75967407]
[108.70825195 174.86965942]
[103.04547119 160.97962952]
[101.43674469 175.89311218]
[95.13248444 189.50399780]
[84.79799652 200.37590027]
[71.52390289 207.36149597]
[56.71104431 209.72355652]
[41.92266846 207.21279907]
[28.71941566 200.09422302]
[18.49466515 189.11904907]
[12.32745552 175.44551086]
[10.86862850 160.51663208]
[14.27213669 145.90785217]
[22.17880058 133.16090393]
[33.75421143 123.62099457]
[47.77678680 118.29489136]
[62.76668930 117.74467468]
[77.14200592 122.02840424]
[89.38566589 130.69401550]
[98.20566559 142.82716370]
[96.20164490 127.96163177]
[94.19763184 113.09610748]
[85.80446625 101.91368866]
[90.93683624 88.90790558]
[88.93282318 74.04238129]
[86.92881012 59.17685318]
[84.81418610 44.32665634]
[75.11535645 31.82692528]
[80.87907410 18.09270477]
[78.65395355 3.25866032]
[67.77482605 13.58554363]
[52.89764023 11.66999340]
[44.98930740 -1.07591844]
[49.87955475 -15.25637913]
[63.96347427 -20.41808128]
[76.85800934 -12.75738239]
[75.74235535 -27.71583557]
[74.62670898 -42.67428970]
[73.51106262 -57.63274384]
[58.85816956 -61.45000839]
[46.24005890 -69.82031250]
[37.02544022 -81.83570099]
[32.21385193 -96.19283295]
[32.32721710 -111.33435822]
[37.35323715 -125.61784363]
[46.74673080 -137.49391174]
[59.48875809 -145.67434692]
[74.19716644 -149.27177429]
[89.27648926 -147.89599609]
[103.09103394 -141.69624329]
[114.14231110 -131.34501648]
[121.23155212 -117.96512604]
[123.58977509 -103.00794220]
[120.96117401 -88.09589386]
[113.63088226 -74.84652710]
[102.39402771 -64.69705200]
[88.46951294 -58.74839020]
[89.58515930 -43.78993607]
[90.70081329 -28.83148384]
[91.81645966 -13.87303066]
[93.48799896 1.03354323]
[95.71311951 15.86758709]
[105.25279236 27.30628777]
[99.64823151 42.10153961]
[103.74917603 48.25003433]
[101.79433441 57.17284012]
[103.79835510 72.03836823]
[105.80236816 86.90389252]
[114.19553375 98.08631134]
[109.06316376 111.09209442]
[111.06717682 125.95761871]
[113.07118988 140.82315063]
[116.93549347 155.31683350]
[122.59828186 169.20686340]
[128.26106262 183.09689331]
[140.63565063 192.95489502]
[138.27568054 207.66136169]
[143.93847656 221.55137634]
[149.60125732 235.44140625]
[155.26403809 249.33143616]
[167.28231812 249.42803955]
[178.53167725 253.55955505]
[187.70251465 261.22018433]
[193.73559570 271.49468994]
[195.94439697 283.16778564]
[194.09310913 294.86785889]
[188.42163086 305.22808838]
[179.61476135 313.04620361]
[184.65167236 327.17523193]
[189.68858337 341.30426025]
[194.72550964 355.43328857]
[199.76242065 369.56231689]
[214.16925049 365.36990356]
[228.79913330 362.03829956]
[243.60069275 359.57925415]
[258.52191162 358.00140381]
[273.51043701 357.31024170]
[288.51354980 357.50823975]
[303.47860718 358.59466553]
[318.35299683 360.56573486]
[333.08450317 363.41452026]
[347.62139893 367.13101196]
[361.91256714 371.70214844]
[375.90783691 377.11184692]
[389.55807495 383.34118652]
[402.81527710 390.36819458]
[415.63293457 398.16824341]
[427.96600342 406.71392822]
[439.77114868 415.97521973]
[451.00689697 425.91958618]
[461.63381958 436.51211548]
[471.61456299 447.71557617]
[480.91409302 459.49066162]
[489.49969482 471.79592896]
[497.34124756 484.58822632]
[504.41122437 497.82260132]
[510.68475342 511.45254517]
[516.13983154 525.43023682]
[520.75726318 539.70648193]
[524.52087402 554.23126221]
[527.41735840 568.95343018]
[529.43664551 583.82141113]
[530.57159424 598.78283691]
[530.81823730 613.78521729]
[530.17565918 628.77587891]
[528.64617920 643.70214844]
[526.23510742 658.51165771]
[522.95098877 673.15222168]
[518.80529785 687.57257080]
[513.81262207 701.72198486]
[507.99047852 715.55078125]
[501.35934448 729.01037598]
[493.94247437 742.05352783]
[485.76599121 754.63439941]
[476.85852051 766.70874023]
[467.25143433 778.23419189]
[456.97842407 789.17028809]
[446.07559204 799.47863770]
[434.58123779 809.12292480]
[422.53573608 818.06939697]
[409.98138428 826.28649902]
[396.96231079 833.74548340]
[383.52420044 840.42010498]
[369.71432495 846.28692627]
[355.58111572 851.32537842]
[341.17425537 855.51763916]
[326.54434204 858.84912109]
[311.74276733 861.30804443]
[296.82150269 862.88574219]
[281.83300781 863.57678223]
[266.82986450 863.37866211]
[251.86483765 862.29211426]
[236.99044800 860.32092285]
[222.25897217 857.47198486]
[207.72212219 853.75537109]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 147]
[42 146]
[43 145]
[44 144]
[45 143]
[50 135]
[51 134]
[52 133]
[53 132]
[55 130]
[56 129]
[57 128]
[75 127]
[76 126]
[77 125]
[79 123]
[80 122]
[81 121]
[82 119]
[84 117]
[85 116]
[91 115]
[92 114]
[93 113]
[94 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
