%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUGxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[122.32936859 682.79327393]
[108.76200104 676.38421631]
[95.62383270 669.13592529]
[82.96671295 661.07696533]
[70.84060669 652.23913574]
[59.29335403 642.65734863]
[48.37053299 632.36944580]
[38.11525726 621.41595459]
[28.56799126 609.84014893]
[19.76641846 597.68774414]
[11.74527454 585.00659180]
[4.53621578 571.84686279]
[-1.83230758 558.26043701]
[-7.33516169 544.30090332]
[-11.95062828 530.02337646]
[-15.66049385 515.48425293]
[-18.45011520 500.74087524]
[-20.30848503 485.85140991]
[-21.22826576 470.87466431]
[-21.20583153 455.86968994]
[-20.24126816 440.89575195]
[-18.33838272 426.01190186]
[-15.50468636 411.27691650]
[-11.75136089 396.74896240]
[-7.09322023 382.48532104]
[-1.54864728 368.54232788]
[4.86047554 354.97497559]
[12.10885429 341.83685303]
[20.16788292 329.17977905]
[29.00575638 317.05371094]
[38.58759308 305.50653076]
[48.87557983 294.58374023]
[59.82911301 284.32852173]
[71.40496826 274.78131104]
[83.55745697 265.97982788]
[96.23860931 257.95874023]
[109.39839935 250.74975586]
[122.98487091 244.38130188]
[136.94441223 238.87850952]
[132.33041382 224.60578918]
[127.71640015 210.33305359]
[123.10238647 196.06031799]
[118.48838043 181.78758240]
[113.87436676 167.51484680]
[109.26036072 153.24211121]
[104.64634705 138.96937561]
[100.03234100 124.69664764]
[95.41833496 110.42391205]
[90.16984558 124.47572327]
[78.22161865 133.54434204]
[63.27593994 134.81976318]
[49.96389008 127.90677643]
[42.41035461 114.94745636]
[42.95587540 99.95737457]
[51.43141937 87.58139038]
[65.21074677 81.65431976]
[80.02418518 84.01273346]
[91.28176117 93.92607880]
[88.61596680 79.16486359]
[85.95017242 64.40364838]
[83.28437042 49.64242935]
[80.61857605 34.88121033]
[77.84296417 20.14024925]
[74.95769501 5.42035770]
[72.07242584 -9.29953384]
[69.18714905 -24.01942444]
[66.30187988 -38.73931503]
[51.36049652 -37.28648758]
[36.34865189 -37.28251266]
[21.40650558 -38.72742462]
[6.67357206 -41.60773468]
[-7.71258783 -45.89654541]
[-21.61765099 -51.55381775]
[-34.91178894 -58.52672577]
[-47.47086716 -66.75016785]
[-59.17763138 -76.14736176]
[-69.92277527 -86.63056183]
[-79.60596466 -98.10189056]
[-88.13678741 -110.45423889]
[-95.43560028 -123.57227325]
[-101.43425751 -137.33351135]
[-106.07673645 -151.60946655]
[-109.31969452 -166.26684570]
[-111.13285828 -181.16879272]
[-111.49929047 -196.17616272]
[-110.41558075 -211.14883423]
[-107.89183807 -225.94702148]
[-103.95162964 -240.43254089]
[-98.63174438 -254.47013855]
[-91.98184967 -267.92877197]
[-84.06404877 -280.68273926]
[-74.95225525 -292.61297607]
[-64.73155212 -303.60812378]
[-53.49736786 -313.56546021]
[-41.35459900 -322.39202881]
[-28.41661644 -330.00546265]
[-14.80422592 -336.33462524]
[-0.64452499 -341.32043457]
[13.93027878 -344.91635132]
[28.78409958 -347.08880615]
[43.77825165 -347.81747437]
[58.77272797 -347.09561157]
[73.62753296 -344.92990112]
[88.20396423 -341.34057617]
[102.36592865 -336.36117554]
[115.98118591 -330.03820801]
[128.92262268 -322.43063354]
[141.06938171 -313.60955811]
[152.30809021 -303.65731812]
[162.53376770 -292.66683960]
[171.65097046 -280.74072266]
[179.57455444 -267.99032593]
[186.23056030 -254.53472900]
[191.55680847 -240.49954224]
[195.50358582 -226.01580811]
[198.03402710 -211.21876526]
[199.12454224 -196.24658203]
[198.76490784 -181.23904419]
[196.95849609 -166.33627319]
[193.72218323 -151.67742920]
[189.08618164 -137.39936829]
[183.09376526 -123.63541412]
[175.80090332 -110.51407623]
[167.27568054 -98.15785980]
[157.59768677 -86.68214417]
[146.85729980 -76.19406891]
[135.15480042 -66.79157257]
[122.59944916 -58.56243896]
[109.30847931 -51.58349991]
[95.40598297 -45.91992569]
[81.02176666 -41.62458801]
[83.90704346 -26.90469742]
[86.79231262 -12.18480682]
[89.67758942 2.53508496]
[92.56285858 17.25497627]
[96.93425751 23.21422386]
[95.37979889 32.21541595]
[98.04559326 46.97663498]
[100.71138763 61.73785019]
[103.37718201 76.49906921]
[106.04297638 91.26028442]
[109.69106293 105.80990601]
[114.30507660 120.08264160]
[118.91908264 134.35537720]
[123.53309631 148.62811279]
[128.14710999 162.90083313]
[132.76110840 177.17356873]
[137.37512207 191.44630432]
[141.98913574 205.71903992]
[146.60313416 219.99177551]
[151.21714783 234.26451111]
[165.75622559 230.55441284]
[180.49957275 227.76455688]
[195.38899231 225.90596008]
[210.36575317 224.98594666]
[225.37071228 225.00814819]
[240.34468079 225.97247314]
[255.22853088 227.87512207]
[269.96356201 230.70858765]
[284.49160767 234.46168518]
[298.75531006 239.11959839]
[312.69839478 244.66395569]
[326.26580811 251.07287598]
[339.40405273 258.32104492]
[352.06127930 266.37988281]
[364.18746948 275.21755981]
[375.73483276 284.79922485]
[386.65774536 295.08703613]
[396.91314697 306.04040527]
[406.46054077 317.61611938]
[415.26223755 329.76846313]
[423.28350830 342.44949341]
[430.49270630 355.60916138]
[436.86135864 369.19552612]
[442.36434937 383.15499878]
[446.97998047 397.43243408]
[450.69000244 411.97152710]
[453.47976685 426.71490479]
[455.33828735 441.60433960]
[456.25823975 456.58108521]
[456.23596191 471.58605957]
[455.27154541 486.55999756]
[453.36880493 501.44387817]
[450.53527832 516.17889404]
[446.78210449 530.70690918]
[442.12411499 544.97058105]
[436.57968140 558.91363525]
[430.17068481 572.48101807]
[422.92245483 585.61926270]
[414.86355591 598.27636719]
[406.02581787 610.40252686]
[396.44409180 621.94982910]
[386.15621948 632.87274170]
[375.20278931 643.12805176]
[363.62704468 652.67541504]
[351.47463989 661.47705078]
[338.79357910 669.49822998]
[325.63388062 676.70733643]
[312.04745483 683.07592773]
[298.08798218 688.57885742]
[283.81048584 693.19439697]
[269.27139282 696.90435791]
[254.52801514 699.69403076]
[239.63856506 701.55249023]
[224.66180420 702.47235107]
[209.65684509 702.45001221]
[194.68289185 701.48553467]
[179.79904175 699.58270264]
[165.06404114 696.74908447]
[150.53605652 692.99584961]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 151]
[40 150]
[41 149]
[42 148]
[43 147]
[44 146]
[45 145]
[46 144]
[47 143]
[48 142]
[58 141]
[59 140]
[60 139]
[61 138]
[62 137]
[63 135]
[64 134]
[65 133]
[66 132]
[67 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
