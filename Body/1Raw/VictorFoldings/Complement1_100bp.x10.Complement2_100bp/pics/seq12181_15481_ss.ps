%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUGxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[57.30833054 708.96502686]
[42.44362259 711.00616455]
[27.48601532 712.18756104]
[12.48518753 712.50524902]
[-2.50902462 711.95812988]
[-17.44681358 710.54809570]
[-32.27855682 708.27978516]
[-46.95498276 705.16076660]
[-61.42733765 701.20141602]
[-75.64754486 696.41485596]
[-89.56837463 690.81695557]
[-103.14356995 684.42639160]
[-116.32804871 677.26428223]
[-129.07800293 669.35455322]
[-141.35107422 660.72332764]
[-153.10650635 651.39941406]
[-164.30525208 641.41375732]
[-174.91007996 630.79943848]
[-184.88580322 619.59179688]
[-194.19924927 607.82806396]
[-202.81948853 595.54730225]
[-210.71789551 582.79034424]
[-217.86822510 569.59948730]
[-224.24673462 556.01861572]
[-229.83221436 542.09277344]
[-234.60612488 527.86834717]
[-238.55259705 513.39245605]
[-241.65853882 498.71325684]
[-243.91362000 483.87948608]
[-245.31034851 468.94046021]
[-245.84408569 453.94577026]
[-245.51306152 438.94522095]
[-244.31837463 423.98867798]
[-242.26399231 409.12579346]
[-239.35673523 394.40594482]
[-235.60627747 379.87805176]
[-231.02505493 365.59036255]
[-225.62831116 351.59033203]
[-219.43394470 337.92446899]
[-212.46255493 324.63818359]
[-204.73728943 311.77560425]
[-196.28382874 299.37945557]
[-187.13021851 287.49090576]
[-177.30690002 276.14947510]
[-166.84649658 265.39282227]
[-155.78375244 255.25669861]
[-144.15541077 245.77473450]
[-132.00010681 236.97846985]
[-119.35823059 228.89709473]
[-106.27175903 221.55747986]
[-92.78417206 214.98397827]
[-78.94027710 209.19845581]
[-64.78606415 204.22012329]
[-50.36854172 200.06550598]
[-35.73561478 196.74841309]
[-20.93588448 194.27986145]
[-6.01851845 192.66806030]
[8.96692944 191.91836548]
[23.97068024 192.03324890]
[38.94289017 193.01232910]
[53.83382416 194.85238647]
[68.59401703 197.54727173]
[72.13368988 182.97088623]
[75.67336273 168.39451599]
[79.21303558 153.81814575]
[82.75270844 139.24176025]
[86.29238129 124.66539001]
[89.83205414 110.08901978]
[86.08058929 96.61986542]
[95.59156799 86.37131500]
[99.13124084 71.79493713]
[91.17154694 58.40535355]
[94.96892548 43.67325974]
[107.78289795 36.16741943]
[111.32257080 21.59104347]
[114.86224365 7.01466703]
[118.40191650 -7.56170797]
[121.94158936 -22.13808441]
[107.71991730 -26.93739700]
[93.97064972 -32.95795822]
[80.79844666 -40.15394592]
[68.30353546 -48.47059631]
[56.58102798 -57.84461212]
[45.72013092 -68.20464325]
[35.80351257 -79.47185516]
[26.90663910 -91.56048584]
[19.09722519 -104.37854004]
[12.43470669 -117.82845306]
[6.96978855 -131.80786133]
[2.74406314 -146.21038818]
[-0.21030810 -160.92640686]
[-1.87084031 -175.84390259]
[-2.22489572 -190.84938049]
[-1.26977944 -205.82859802]
[0.98723900 -220.66757202]
[4.52898216 -235.25337219]
[9.32849503 -249.47497559]
[15.34924984 -263.22415161]
[22.54542351 -276.39627075]
[30.86224747 -288.89105225]
[40.23642731 -300.61343384]
[50.59661484 -311.47418213]
[61.86396408 -321.39062500]
[73.95272064 -330.28735352]
[86.77088165 -338.09658813]
[100.22088623 -344.75891113]
[114.20037842 -350.22363281]
[128.60296631 -354.44915771]
[143.31901550 -357.40332031]
[158.23654175 -359.06362915]
[173.24201965 -359.41748047]
[188.22122192 -358.46215820]
[203.06016541 -356.20492554]
[217.64591980 -352.66299438]
[231.86744690 -347.86328125]
[245.61654663 -341.84231567]
[258.78854370 -334.64596558]
[271.28323364 -326.32897949]
[283.00546265 -316.95462036]
[293.86608887 -306.59426880]
[303.78237915 -295.32678223]
[312.67892456 -283.23791504]
[320.48797607 -270.41964722]
[327.15011597 -256.96954346]
[332.61462402 -242.98997498]
[336.83996582 -228.58734131]
[339.79391479 -213.87124634]
[341.45404053 -198.95368958]
[341.80767822 -183.94821167]
[340.85214233 -168.96900940]
[338.59469604 -154.13009644]
[335.05255127 -139.54440308]
[330.25262451 -125.32293701]
[324.23147583 -111.57392883]
[317.03494263 -98.40202332]
[308.71777344 -85.90746307]
[299.34326172 -74.18534851]
[288.98275757 -63.32489014]
[277.71514893 -53.40874481]
[265.62612915 -44.51237869]
[252.80775452 -36.70350647]
[239.35755920 -30.04155159]
[225.37791443 -24.57722092]
[210.97521973 -20.35210228]
[196.25907898 -17.39834976]
[181.34150696 -15.73844624]
[166.33602905 -15.38502216]
[151.35684204 -16.34076881]
[136.51795959 -18.59841156]
[132.97828674 -4.02203560]
[129.43861389 10.55433941]
[125.89894867 25.13071442]
[122.35927582 39.70709229]
[130.30375671 52.25383759]
[126.92166901 67.08677673]
[113.70761871 75.33460999]
[110.16794586 89.91098022]
[113.91941071 103.38013458]
[104.40843201 113.62868500]
[100.86875916 128.20506287]
[97.32908630 142.78143311]
[93.78941345 157.35781860]
[90.24974060 171.93418884]
[86.71006775 186.51055908]
[83.17039490 201.08694458]
[97.52267456 205.46160889]
[111.59908295 210.65588379]
[125.35285187 216.65251160]
[138.73829651 223.43154907]
[151.71096802 230.97050476]
[164.22775269 239.24430847]
[176.24707031 248.22549438]
[187.72900391 257.88421631]
[198.63539124 268.18841553]
[208.93003845 279.10382080]
[218.57872009 290.59417725]
[227.54939270 302.62133789]
[235.81224060 315.14535522]
[243.33984375 328.12460327]
[250.10717773 341.51599121]
[256.09176636 355.27499390]
[261.27371216 369.35595703]
[265.63583374 383.71203613]
[269.16363525 398.29562378]
[271.84536743 413.05819702]
[273.67214966 427.95077515]
[274.63790894 442.92385864]
[274.73944092 457.92770386]
[273.97637939 472.91247559]
[272.35128784 487.82839966]
[269.86956787 502.62591553]
[266.53945923 517.25585938]
[262.37197876 531.66967773]
[257.38104248 545.81945801]
[251.58319092 559.65820312]
[244.99769592 573.13995361]
[237.64642334 586.21984863]
[229.55378723 598.85455322]
[220.74668884 611.00201416]
[211.25437927 622.62188721]
[201.10839844 633.67559814]
[190.34243774 644.12640381]
[178.99224854 653.93963623]
[167.09556580 663.08264160]
[154.69189453 671.52508545]
[141.82243347 679.23889160]
[128.52993774 686.19842529]
[114.85857391 692.38061523]
[100.85374451 697.76489258]
[86.56198120 702.33337402]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 165]
[63 164]
[64 163]
[65 162]
[66 161]
[67 160]
[68 159]
[70 157]
[71 156]
[74 153]
[75 152]
[76 151]
[77 150]
[78 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
