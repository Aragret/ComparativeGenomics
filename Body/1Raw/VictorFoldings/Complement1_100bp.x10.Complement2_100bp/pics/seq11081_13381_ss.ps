%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[120.57547760 530.22454834]
[110.12194824 519.45983887]
[100.37960815 508.04745483]
[91.38848114 496.03433228]
[83.18550873 483.46981812]
[75.80440521 470.40554810]
[69.27549744 456.89520264]
[63.62562561 442.99432373]
[58.87799072 428.76000977]
[55.05211258 414.25076294]
[52.16370773 399.52621460]
[50.22464752 384.64682007]
[49.24290085 369.67379761]
[49.22249603 354.66860962]
[50.16352463 339.69296265]
[52.06211472 324.80838013]
[54.91046906 310.07601929]
[58.69688034 295.55642700]
[63.40578461 281.30923462]
[69.01783752 267.39303589]
[75.50997925 253.86500549]
[82.85552979 240.78071594]
[91.02430725 228.19395447]
[99.98273468 216.15641785]
[109.69400787 204.71759033]
[120.11821747 193.92446899]
[131.21252441 183.82139587]
[142.93135071 174.44992065]
[134.33279419 162.15907288]
[125.73423004 149.86824036]
[117.13566589 137.57740784]
[108.53710175 125.28656769]
[99.93853760 112.99572754]
[90.97784424 100.96634674]
[81.66295624 89.20909882]
[72.34807587 77.45184326]
[63.03319550 65.69459534]
[53.71831131 53.93734360]
[44.40342712 42.18009186]
[35.08854675 30.42284012]
[20.45412064 24.41083717]
[18.61520958 9.63018513]
[9.30032635 -2.12706566]
[-0.01455609 -13.88431740]
[-12.48118305 -5.52828360]
[-25.57229424 1.81085289]
[-39.20512009 8.08669090]
[-53.29346848 13.25955200]
[-67.74826813 17.29673195]
[-82.47813416 20.17270470]
[-97.38993073 21.86928749]
[-112.38938141 22.37575531]
[-127.38166046 21.68890381]
[-142.27197266 19.81307793]
[-156.96617126 16.76013565]
[-171.37136841 12.54937935]
[-185.39648438 7.20743179]
[-198.95283508 0.76806617]
[-211.95471191 -6.72800493]
[-224.31993103 -15.23338795]
[-235.97029114 -24.69430923]
[-246.83215332 -35.05095291]
[-256.83685303 -46.23783875]
[-265.92108154 -58.18423843]
[-274.02746582 -70.81462860]
[-281.10473633 -84.04914093]
[-287.10812378 -97.80411530]
[-291.99972534 -111.99258423]
[-295.74853516 -126.52483368]
[-298.33093262 -141.30899048]
[-299.73052979 -156.25158691]
[-299.93850708 -171.25814819]
[-298.95355225 -186.23379517]
[-296.78189087 -201.08384705]
[-293.43725586 -215.71440125]
[-288.94076538 -230.03298950]
[-283.32086182 -243.94905090]
[-276.61309814 -257.37463379]
[-268.85986328 -270.22482300]
[-260.11019897 -282.41839600]
[-250.41938782 -293.87823486]
[-239.84872437 -304.53192139]
[-228.46502686 -314.31210327]
[-216.34027100 -323.15689087]
[-203.55113220 -331.01043701]
[-190.17843628 -337.82299805]
[-176.30676270 -343.55160522]
[-162.02380371 -348.15994263]
[-147.41984558 -351.61895752]
[-132.58724976 -353.90673828]
[-117.61976624 -355.00881958]
[-102.61203766 -354.91824341]
[-87.65894318 -353.63555908]
[-72.85503387 -351.16891479]
[-58.29390335 -347.53387451]
[-44.06760406 -342.75344849]
[-30.26608849 -336.85784912]
[-16.97661018 -329.88433838]
[-4.28319502 -321.87698364]
[7.73390675 -312.88647461]
[18.99871635 -302.96963501]
[29.44001579 -292.18911743]
[38.99178696 -280.61309814]
[47.59364319 -268.31481934]
[55.19120026 -255.37196350]
[61.73641968 -241.86640930]
[67.18791962 -227.88351440]
[71.51123810 -213.51170349]
[74.67903900 -198.84182739]
[76.67129517 -183.96665955]
[77.47541046 -168.98020935]
[77.08630371 -153.97724915]
[75.50642395 -139.05264282]
[72.74577332 -124.30072784]
[68.82179260 -109.81478882]
[63.75930786 -95.68640137]
[57.59030914 -82.00489807]
[50.35380936 -68.85677338]
[42.09555817 -56.32515717]
[32.86776733 -44.48928070]
[22.72877884 -33.42397690]
[11.74269485 -23.19919968]
[21.05757713 -11.44194889]
[30.37246132 0.31530273]
[44.34062195 5.48634863]
[46.84579468 21.10795784]
[56.16067886 32.86520767]
[65.47556305 44.62245941]
[74.79044342 56.37971115]
[84.10533142 68.13696289]
[93.42021179 79.89421082]
[102.73509216 91.65146637]
[105.72206116 92.25772858]
[108.55444336 93.96422577]
[110.82431793 96.71578979]
[112.14984131 100.30734253]
[112.22937775 104.39716339]
[120.82794189 116.68800354]
[129.42649841 128.97883606]
[138.02507019 141.26966858]
[146.62362671 153.56051636]
[155.22219849 165.85134888]
[168.04304504 158.05509949]
[181.33705139 151.09629822]
[195.04960632 145.00355530]
[209.12434387 139.80187988]
[223.50344849 135.51269531]
[238.12780762 132.15357971]
[252.93734741 129.73835754]
[267.87121582 128.27696228]
[282.86801147 127.77537537]
[297.86611938 128.23567200]
[312.80395508 129.65596008]
[327.62008667 132.03041077]
[342.25363159 135.34925842]
[356.64447021 139.59886169]
[370.73348999 144.76174927]
[384.46276855 150.81674194]
[397.77587891 157.73892212]
[410.61813354 165.49984741]
[422.93676758 174.06764221]
[434.68112183 183.40710449]
[445.80297852 193.47984314]
[456.25662231 204.24446106]
[465.99911499 215.65672302]
[474.99035645 227.66975403]
[483.19348145 240.23417664]
[490.57470703 253.29835510]
[497.10379028 266.80862427]
[502.75381470 280.70944214]
[507.50158691 294.94369507]
[511.32763672 309.45291138]
[514.21618652 324.17742920]
[516.15545654 339.05679321]
[517.13732910 354.02981567]
[517.15789795 369.03497314]
[516.21704102 384.01065063]
[514.31860352 398.89526367]
[511.47042847 413.62765503]
[507.68417358 428.14730835]
[502.97543335 442.39453125]
[497.36352539 456.31079102]
[490.87155151 469.83889771]
[483.52615356 482.92324829]
[475.35751343 495.51013184]
[466.39920044 507.54776001]
[456.68807983 518.98669434]
[446.26397705 529.77990723]
[435.16976929 539.88311768]
[423.45104980 549.25469971]
[411.15597534 557.85626221]
[398.33502197 565.65240479]
[385.04095459 572.61102295]
[371.32830811 578.70361328]
[357.25350952 583.90515137]
[342.87435913 588.19415283]
[328.24996948 591.55310059]
[313.44039917 593.96820068]
[298.50653076 595.42944336]
[283.50973511 595.93084717]
[268.51159668 595.47033691]
[253.57380676 594.04992676]
[238.75770569 591.67529297]
[224.12419128 588.35632324]
[209.73338318 584.10650635]
[195.64443970 578.94348145]
[181.91522217 572.88836670]
[168.60218811 565.96600342]
[155.76002502 558.20495605]
[143.44148254 549.63702393]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 142]
[29 141]
[30 140]
[31 139]
[32 138]
[33 137]
[34 132]
[35 131]
[36 130]
[37 129]
[38 128]
[39 127]
[40 126]
[42 124]
[43 123]
[44 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
