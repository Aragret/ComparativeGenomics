%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[93.20126343 624.89318848]
[78.42022705 622.23663330]
[64.05715179 617.85046387]
[50.31367493 611.79626465]
[37.38272858 604.15905762]
[25.44584274 595.04602051]
[14.67059422 584.58514404]
[5.20825100 572.92321777]
[-2.80835032 560.22399902]
[-9.26666927 546.66571045]
[-14.07604218 532.43878174]
[-17.16895103 517.74285889]
[-18.50197792 502.78424072]
[-18.05640793 487.77301025]
[-15.83849812 472.91979980]
[-11.87938309 458.43319702]
[-6.23464203 444.51654053]
[1.01648092 431.36520386]
[9.77219105 419.16381836]
[19.90957260 408.08367920]
[31.28631210 398.28030396]
[43.74269867 389.89132690]
[57.10386276 383.03451538]
[71.18223572 377.80615234]
[85.78017426 374.27963257]
[100.69275665 372.50442505]
[100.69275665 357.50442505]
[97.54925537 350.81561279]
[100.80608368 342.28152466]
[101.02941132 327.28317261]
[101.25273895 312.28485107]
[100.91776276 297.28857422]
[100.02494812 282.31518555]
[99.13213348 267.34176636]
[98.23931885 252.36836243]
[89.40298462 244.10726929]
[88.53662109 231.63998413]
[96.64877319 221.61222839]
[95.97898865 206.62719727]
[95.30920410 191.64215088]
[91.87017059 185.10037231]
[94.74268341 176.42936707]
[86.62987518 163.93811035]
[93.95285797 149.91368103]
[93.50625610 134.92033386]
[85.39344788 122.42906952]
[92.71643066 108.40464783]
[81.66884613 118.55110931]
[66.67716217 118.05171967]
[56.32929611 107.19253540]
[56.55298615 92.19420624]
[67.22008514 81.64844513]
[82.21999359 81.59635162]
[92.95970154 92.06688690]
[86.05752563 77.83065033]
[94.53864288 65.58647919]
[84.32606506 53.82463455]
[85.44480896 38.65219116]
[96.72086334 28.98853874]
[97.61367798 14.01513290]
[98.50649261 -0.95827305]
[95.89342499 -9.71096802]
[99.52571106 -16.14744949]
[100.64135742 -31.10590363]
[90.60502625 -43.01848984]
[91.94953918 -58.17259598]
[103.36821747 -67.66729736]
[104.48387146 -82.62574768]
[105.59951782 -97.58419800]
[98.91005707 -111.92162323]
[107.57254028 -124.03816986]
[108.68818665 -138.99662781]
[109.80383301 -153.95507812]
[110.02716064 -168.95341492]
[109.35737610 -183.93846130]
[108.68759155 -198.92349243]
[108.01780701 -213.90853882]
[107.23648834 -228.88816833]
[106.34367371 -243.86157227]
[105.45085144 -258.83499146]
[104.55803680 -273.80838013]
[89.57870483 -274.96304321]
[74.89612579 -278.14669800]
[60.78383255 -283.30004883]
[47.50473404 -290.32708740]
[35.30620193 -299.09689331]
[24.41549683 -309.44610596]
[15.03549957 -321.18194580]
[7.34095573 -334.08572388]
[1.47521019 -347.91708374]
[-2.45246172 -362.41836548]
[-4.36889029 -377.31942749]
[-4.23837328 -392.34262085]
[-2.06334257 -407.20812988]
[2.11568260 -421.63897705]
[8.22084999 -435.36633301]
[16.13842392 -448.13449097]
[25.72090340 -459.70556641]
[36.78977203 -469.86401367]
[49.13882828 -478.42056274]
[62.53801346 -485.21582031]
[76.73770905 -490.12319946]
[91.47338104 -493.05130005]
[106.47052002 -493.94552612]
[121.44972992 -492.78924561]
[136.13195801 -489.60400391]
[150.24369812 -484.44912720]
[163.52203369 -477.42065430]
[175.71961975 -468.64950562]
[186.60920715 -458.29910278]
[195.98793030 -446.56228638]
[203.68107605 -433.65765381]
[209.54533386 -419.82565308]
[213.47143555 -405.32394409]
[215.38624573 -390.42269897]
[215.25410461 -375.39950562]
[213.07746887 -360.53424072]
[208.89688110 -346.10385132]
[202.79022217 -332.37713623]
[194.87126160 -319.60983276]
[185.28753662 -308.03979492]
[174.21755981 -297.88256836]
[161.86758423 -289.32736206]
[148.46766663 -282.53353882]
[134.26744080 -277.62768555]
[119.53144073 -274.70120239]
[120.42426300 -259.72778320]
[121.31707764 -244.75439453]
[122.20989227 -229.78099060]
[125.74594116 -223.29113770]
[123.00284576 -214.57832336]
[123.67263031 -199.59327698]
[124.34241486 -184.60824585]
[125.01219940 -169.62319946]
[134.37322998 -181.34375000]
[148.80459595 -185.43467712]
[162.92375183 -180.37016296]
[171.46461487 -168.03915405]
[171.24165344 -153.04081726]
[162.33801270 -140.96914673]
[148.07453918 -136.32658386]
[133.77114868 -140.84469604]
[124.76229095 -152.83943176]
[123.64663696 -137.88098145]
[122.53099060 -122.92252350]
[129.30024719 -109.65502930]
[120.55796814 -96.46855164]
[119.44232178 -81.51010132]
[118.32667542 -66.55164337]
[128.21057129 -55.46813583]
[127.29222870 -40.28224564]
[115.59980774 -29.99025536]
[114.48416138 -15.03180122]
[113.47990417 -0.06545719]
[112.58708191 14.90794849]
[111.69426727 29.88135338]
[121.74208832 40.81647873]
[121.04994202 56.01436234]
[109.51205444 66.47929382]
[116.47809601 79.64453125]
[107.93311310 92.95970154]
[107.70978546 107.95803833]
[115.85453796 121.52172852]
[108.49960327 134.47372437]
[108.94621277 149.46707153]
[117.09096527 163.03076172]
[109.73603058 175.98275757]
[110.29424286 190.97236633]
[110.96402740 205.95741272]
[111.63381195 220.94244385]
[121.90129089 236.22839355]
[113.21272278 251.47555542]
[114.10553741 266.44894409]
[114.99835205 281.42236328]
[115.89116669 296.39578247]
[127.64823914 287.08065796]
[142.29519653 290.31585693]
[149.03486633 303.71646118]
[142.89900208 317.40411377]
[128.41073608 321.28872681]
[116.25107574 312.50817871]
[116.02774811 327.50650024]
[115.80442047 342.50485229]
[115.69275665 357.50442505]
[115.69275665 372.50442505]
[130.60533142 374.27963257]
[145.20327759 377.80615234]
[159.28164673 383.03451538]
[172.64280701 389.89132690]
[185.09919739 398.28030396]
[196.47593689 408.08367920]
[206.61331177 419.16381836]
[215.36903381 431.36520386]
[222.62014771 444.51654053]
[228.26489258 458.43319702]
[232.22401428 472.91979980]
[234.44192505 487.77301025]
[234.88748169 502.78424072]
[233.55445862 517.74285889]
[230.46154785 532.43878174]
[225.65217590 546.66571045]
[219.19386292 560.22399902]
[211.17726135 572.92321777]
[201.71492004 584.58514404]
[190.93966675 595.04602051]
[179.00277710 604.15905762]
[166.07183838 611.79626465]
[152.32835388 617.85046387]
[137.96528625 622.23663330]
[123.18424988 624.89318848]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 185]
[27 184]
[29 183]
[30 182]
[31 181]
[32 175]
[33 174]
[34 173]
[35 172]
[38 170]
[39 169]
[40 168]
[42 167]
[44 165]
[45 164]
[47 162]
[54 161]
[56 159]
[59 156]
[60 155]
[61 154]
[63 153]
[64 152]
[67 149]
[68 148]
[69 147]
[71 145]
[72 144]
[73 143]
[74 134]
[75 133]
[76 132]
[77 131]
[78 129]
[79 128]
[80 127]
[81 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
