%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[80.83059692 716.53619385]
[66.43842316 712.27807617]
[52.45304489 706.83056641]
[38.97255325 700.23181152]
[26.09150887 692.52825928]
[13.90026855 683.77380371]
[2.48434210 674.02990723]
[-8.07619286 663.36492920]
[-17.70726204 651.85369873]
[-26.34130669 639.57690430]
[-33.91776657 626.62066650]
[-40.38349533 613.07586670]
[-45.69314575 599.03759766]
[-49.80946350 584.60418701]
[-52.70358658 569.87701416]
[-54.35520554 554.95928955]
[-54.75273895 539.95562744]
[-53.89339828 524.97137451]
[-51.78321075 510.11160278]
[-48.43697739 495.48049927]
[-43.87817001 481.18069458]
[-38.13876724 467.31253052]
[-31.25902939 453.97329712]
[-23.28721046 441.25650024]
[-14.27922726 429.25137329]
[-4.29826784 418.04214478]
[6.58565903 407.70742798]
[18.29620743 398.31967163]
[30.75123787 389.94479370]
[43.86338425 382.64147949]
[57.54067230 376.46099854]
[71.68716431 371.44671631]
[86.20363617 367.63372803]
[100.98825073 365.04885864]
[99.65001678 350.10867310]
[98.31178284 335.16848755]
[95.85507202 332.63928223]
[94.50135803 328.79446411]
[94.85562134 324.16546631]
[97.26267242 319.53369141]
[96.59288788 304.54864502]
[95.92309570 289.56362915]
[95.25331116 274.57858276]
[94.58352661 259.59353638]
[93.91374207 244.60850525]
[93.02092743 229.63510132]
[91.90528107 214.67665100]
[90.78962708 199.71818542]
[89.67398071 184.75973511]
[88.55833435 169.80128479]
[80.63430786 182.53744507]
[67.45067596 189.69229126]
[52.45360947 189.39556885]
[39.56330490 181.72483826]
[32.14926147 168.68521118]
[32.14949036 153.68521118]
[39.56392670 140.64579773]
[52.45446014 132.97546387]
[67.45153809 132.67918396]
[80.63494873 139.83444214]
[88.55833435 152.56999207]
[89.67398071 137.61154175]
[90.78962708 122.65308380]
[91.90528107 107.69462585]
[92.90953827 92.72828674]
[86.00735474 78.49204254]
[94.48847961 66.24787140]
[95.38129425 51.27446365]
[96.27411652 36.30105972]
[96.60908508 21.30480003]
[96.38575745 6.30646324]
[96.16242981 -8.69187450]
[95.93910217 -23.69021225]
[95.71577454 -38.68854904]
[85.03533936 -46.89482117]
[81.08893585 -59.56905746]
[85.10335541 -72.01760864]
[95.39975739 -79.76445770]
[95.39975739 -94.76445770]
[87.66246033 -108.56462860]
[95.39975739 -121.29190063]
[95.39975739 -136.29190063]
[80.50627899 -138.25128174]
[65.99597168 -142.13793945]
[52.11714554 -147.88539124]
[39.10727310 -155.39526367]
[27.18897629 -164.53907776]
[16.56618690 -175.16033936]
[7.42068100 -187.07733154]
[-0.09105382 -200.08613586]
[-5.84048033 -213.96414185]
[-9.72921848 -228.47389221]
[-11.69072723 -243.36709595]
[-11.69144249 -258.38891602]
[-9.73135185 -273.28228760]
[-5.84399462 -287.79241943]
[-0.09588923 -301.67095947]
[7.41460705 -314.68048096]
[16.55897903 -326.59835815]
[27.18075562 -337.22064209]
[39.09818268 -346.36557007]
[52.10734177 -353.87667847]
[65.98562622 -359.62545776]
[80.49555206 -363.51348877]
[95.38884735 -365.47430420]
[110.41066742 -365.47430420]
[125.30396271 -363.51348877]
[139.81388855 -359.62545776]
[153.69218445 -353.87667847]
[166.70133972 -346.36557007]
[178.61875916 -337.22064209]
[189.24053955 -326.59835815]
[198.38491821 -314.68048096]
[205.89540100 -301.67095947]
[211.64350891 -287.79241943]
[215.53086853 -273.28228760]
[217.49096680 -258.38891602]
[217.49024963 -243.36709595]
[215.52873230 -228.47389221]
[211.63999939 -213.96414185]
[205.89057922 -200.08613586]
[198.37884521 -187.07733154]
[189.23333740 -175.16033936]
[178.61054993 -164.53907776]
[166.69224548 -155.39526367]
[153.68237305 -147.88539124]
[139.80354309 -142.13793945]
[125.29324341 -138.25128174]
[110.39975739 -136.29190063]
[110.39975739 -121.29190063]
[118.13706207 -108.56462860]
[110.39975739 -94.76445770]
[110.39975739 -79.76445770]
[122.78901672 -68.39145660]
[123.12609863 -51.23915863]
[110.71411896 -38.91187668]
[110.93744659 -23.91353989]
[111.16077423 -8.91520214]
[111.38410187 6.08313560]
[111.60742950 21.08147240]
[123.76870728 12.30062962]
[138.25660706 16.18661308]
[144.39117432 29.87482071]
[137.65025330 43.27481461]
[123.00297546 46.50862122]
[111.24752045 37.19387436]
[110.35470581 52.16728210]
[109.46188354 67.14068604]
[116.42792511 80.30592346]
[107.88294220 93.62110138]
[110.58491516 101.21530151]
[106.86373138 108.81027985]
[105.74808502 123.76873016]
[104.63243866 138.72718811]
[103.51678467 153.68563843]
[103.51678467 168.68563843]
[104.63243866 183.64408875]
[105.74808502 198.60253906]
[106.86373138 213.56100464]
[107.97937775 228.51945496]
[111.38006592 234.18927002]
[111.40338898 239.87226868]
[108.89878082 243.93872070]
[109.56856537 258.92376709]
[110.23834991 273.90878296]
[110.90813446 288.89382935]
[111.57792664 303.87887573]
[112.24771118 318.86392212]
[113.25196838 333.83026123]
[114.59020233 348.77044678]
[115.92843628 363.71063232]
[130.93708801 363.62683105]
[145.90010071 364.79925537]
[160.71253967 367.21960449]
[175.27049255 370.87100220]
[189.47184753 375.72775269]
[203.21699524 381.75579834]
[216.40951538 388.91290283]
[228.95686340 397.14883423]
[240.77104187 406.40582275]
[251.76918030 416.61892700]
[261.87411499 427.71652222]
[271.01498413 439.62078857]
[279.12765503 452.24816895]
[286.15524292 465.51013184]
[292.04846191 479.31362915]
[296.76593018 493.56185913]
[300.27459717 508.15484619]
[302.54983521 522.99029541]
[303.57568359 537.96405029]
[303.34494019 552.97119141]
[301.85925293 567.90637207]
[299.12899780 582.66479492]
[295.17337036 597.14306641]
[290.02008057 611.23950195]
[283.70532227 624.85534668]
[276.27334595 637.89495850]
[267.77630615 650.26696777]
[258.27377319 661.88458252]
[247.83244324 672.66625977]
[236.52552795 682.53643799]
[224.43235779 691.42584229]
[211.63774109 699.27215576]
[198.23143005 706.02032471]
[184.30746460 711.62298584]
[169.96351624 716.04083252]
[155.30018616 719.24291992]
[140.42033386 721.20678711]
[125.42834473 721.91864014]
[110.42936707 721.37347412]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 171]
[35 170]
[36 169]
[40 168]
[41 167]
[42 166]
[43 165]
[44 164]
[45 163]
[46 160]
[47 159]
[48 158]
[49 157]
[50 156]
[61 155]
[62 154]
[63 153]
[64 152]
[65 150]
[67 148]
[68 147]
[69 146]
[70 140]
[71 139]
[72 138]
[73 137]
[74 136]
[78 133]
[79 132]
[81 130]
[82 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
