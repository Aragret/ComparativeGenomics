%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[127.92717743 578.25109863]
[117.74201202 567.22857666]
[108.45307159 555.44085693]
[100.11762238 542.96069336]
[92.78705597 529.86505127]
[86.50656891 516.23455811]
[81.31488800 502.15335083]
[77.24401093 487.70822144]
[74.31904602 472.98818970]
[72.55802155 458.08407593]
[71.97180176 443.08773804]
[72.56399536 428.09161377]
[74.33095551 413.18820190]
[77.26177979 398.46936035]
[81.33840942 384.02581787]
[86.53569794 369.94668579]
[92.82161713 356.31872559]
[100.15739441 343.22595215]
[108.49781799 330.74911499]
[117.79145050 318.96514893]
[127.98100281 307.94665527]
[139.00366211 297.76159668]
[150.79144287 288.47277832]
[163.27168274 280.13745117]
[176.36744690 272.80700684]
[170.09007263 259.18371582]
[163.81271362 245.56039429]
[158.15852356 240.80099487]
[157.54499817 231.68719482]
[151.47116089 217.97192383]
[145.39733887 204.25665283]
[139.01872253 190.68045044]
[132.33853149 177.25007629]
[125.65834045 163.81970215]
[118.97814178 150.38932800]
[111.99969482 137.11148071]
[104.72646332 123.99278259]
[97.45323181 110.87408447]
[90.08254242 97.80989838]
[82.61479950 84.80094910]
[75.14705658 71.79199982]
[67.67932129 58.78304672]
[52.68825150 54.55154037]
[45.30021667 41.25223160]
[49.42669678 26.98661613]
[41.67030334 14.14767551]
[33.62913132 1.48515069]
[25.58795929 -11.17737389]
[17.54678535 -23.83989906]
[9.50561333 -36.50242233]
[1.46444023 -49.16494751]
[-12.46511555 -56.66682053]
[-12.75634384 -71.55857849]
[-20.79751778 -84.22109985]
[-28.83868980 -96.88362885]
[-36.87986374 -109.54615021]
[-44.92103577 -122.20867920]
[-52.96220779 -134.87120056]
[-66.43292999 -128.23895264]
[-80.54177094 -123.10203552]
[-95.12331390 -119.52069855]
[-110.00659180 -117.53692627]
[-125.01710510 -117.17397308]
[-139.97886658 -118.43610382]
[-154.71644592 -121.30850983]
[-169.05708313 -125.75751495]
[-182.83261108 -131.73095703]
[-195.88151550 -139.15881348]
[-208.05084229 -147.95397949]
[-219.19787598 -158.01335144]
[-229.19194031 -169.21896362]
[-237.91584778 -181.43946838]
[-245.26733398 -194.53157043]
[-251.16018677 -208.34176636]
[-255.52532959 -222.70814514]
[-258.31155396 -237.46226501]
[-259.48623657 -252.43113708]
[-259.03558350 -267.43927002]
[-256.96490479 -282.31069946]
[-253.29841614 -296.87106323]
[-248.07916260 -310.94964600]
[-241.36830139 -324.38140869]
[-233.24453735 -337.00881958]
[-223.80311584 -348.68386841]
[-213.15472412 -359.26965332]
[-201.42420959 -368.64205933]
[-188.74909973 -376.69122314]
[-175.27801514 -383.32275391]
[-161.16889954 -388.45892334]
[-146.58717346 -392.03945923]
[-131.70378113 -394.02243042]
[-116.69325256 -394.38458252]
[-101.73155975 -393.12164307]
[-86.99412537 -390.24844360]
[-72.65373993 -385.79867554]
[-58.87853622 -379.82446289]
[-45.83001709 -372.39593506]
[-33.66117477 -363.60009766]
[-22.51467896 -353.54013062]
[-12.52122116 -342.33398438]
[-3.79796576 -330.11300659]
[3.55280948 -317.02050781]
[9.44492149 -303.20999146]
[13.80928802 -288.84338379]
[16.59473801 -274.08911133]
[17.76861572 -259.12017822]
[17.31715584 -244.11206055]
[15.24565411 -229.24075317]
[11.57839489 -214.68058777]
[6.35837698 -200.60227966]
[-0.35319865 -187.17089844]
[-8.47764206 -174.54391479]
[-17.91969681 -162.86936951]
[-28.56866264 -152.28416443]
[-40.29968262 -142.91236877]
[-32.25851059 -130.24984741]
[-24.21733856 -117.58732605]
[-16.17616463 -104.92479706]
[-8.13499260 -92.26227570]
[-0.09381932 -79.59974670]
[13.26057720 -73.00358582]
[14.12696552 -57.20612335]
[22.16813850 -44.54359818]
[30.20931053 -31.88107300]
[38.25048447 -19.21854782]
[46.29165649 -6.55602217]
[54.33282852 6.10650253]
[57.67589951 7.22732019]
[60.64218140 10.02306938]
[62.45036697 14.29902172]
[62.43564987 19.51887512]
[76.83543396 23.14955711]
[84.59410095 36.23610306]
[80.68827057 51.31530380]
[88.15601349 64.32425690]
[95.62375641 77.33320618]
[103.09149170 90.34216309]
[109.51667786 95.20935822]
[110.57192993 103.60086060]
[117.84515381 116.71955109]
[125.11838531 129.83824158]
[129.59382629 132.52479553]
[132.31874084 136.28353882]
[133.17785645 140.26812744]
[132.40852356 143.70912170]
[139.08871460 157.13949585]
[145.76890564 170.56988525]
[152.44909668 184.00025940]
[156.80010986 186.88397217]
[159.35447693 190.76063538]
[160.03482056 194.77961731]
[159.11259460 198.18281555]
[165.18643188 211.89808655]
[171.26026917 225.61335754]
[177.43603516 239.28302002]
[183.71339417 252.90634155]
[189.99075317 266.52966309]
[204.07180786 261.33755493]
[218.51683044 257.26623535]
[233.23674011 254.34080505]
[248.14080811 252.57933044]
[263.13714600 251.99266052]
[278.13327026 252.58438110]
[293.03674316 254.35089111]
[307.75567627 257.28125000]
[322.19931030 261.35745239]
[336.27862549 266.55432129]
[349.90676880 272.83981323]
[362.99975586 280.17517090]
[375.47686768 288.51522827]
[387.26113892 297.80850220]
[398.27993774 307.99771118]
[408.46533203 319.02005005]
[417.75451660 330.80755615]
[426.09020996 343.28753662]
[433.42105103 356.38308716]
[439.70181274 370.01339722]
[444.89379883 384.09451294]
[448.96496582 398.53958130]
[451.89022827 413.25952148]
[453.65155029 428.16360474]
[454.23806763 443.15994263]
[453.64617920 458.15606689]
[451.87951660 473.05953979]
[448.94900513 487.77844238]
[444.87268066 502.22204590]
[439.67565918 516.30126953]
[433.39004517 529.92938232]
[426.05453491 543.02227783]
[417.71435547 555.49926758]
[408.42095947 567.28344727]
[398.23162842 578.30218506]
[387.20919800 588.48742676]
[375.42160034 597.77648926]
[362.94152832 606.11206055]
[349.84591675 613.44281006]
[336.21551514 619.72338867]
[322.13433838 624.91522217]
[307.68923950 628.98626709]
[292.96926880 631.91137695]
[278.06515503 633.67254639]
[263.06881714 634.25891113]
[248.07270813 633.66687012]
[233.16926575 631.90008545]
[218.45039368 628.96942139]
[204.00683594 624.89294434]
[189.92764282 619.69580078]
[176.29962158 613.40997314]
[163.20677185 606.07434082]
[150.72985840 597.73406982]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 157]
[26 156]
[27 155]
[29 154]
[30 153]
[31 152]
[32 148]
[33 147]
[34 146]
[35 145]
[36 141]
[37 140]
[38 139]
[39 137]
[40 136]
[41 135]
[42 134]
[45 131]
[46 127]
[47 126]
[48 125]
[49 124]
[50 123]
[51 122]
[53 120]
[54 119]
[55 118]
[56 117]
[57 116]
[58 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
