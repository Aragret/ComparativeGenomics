%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[171.32707214 295.80368042]
[174.50546265 281.13381958]
[178.98606873 266.80798340]
[184.73281860 252.94142151]
[191.69941711 239.64582825]
[199.82980347 227.02825928]
[209.05850220 215.19029236]
[198.10258484 204.94490051]
[187.14668274 194.69950867]
[175.05047607 194.79115295]
[165.83908081 186.34521484]
[164.81918335 173.48742676]
[154.01702881 163.08004761]
[143.21487427 152.67268372]
[132.41270447 142.26530457]
[121.61055756 131.85792542]
[114.61260986 129.48083496]
[110.72650146 121.21427917]
[100.08049011 110.64723206]
[88.60578918 100.98642731]
[76.37930298 92.29660034]
[64.15281677 83.60677338]
[51.92633438 74.91695404]
[39.69984818 66.22712708]
[27.47336197 57.53730392]
[15.24687672 48.84747696]
[-0.48401552 47.15940475]
[-6.37561750 33.47955704]
[-18.73012543 24.97272873]
[-31.20992088 16.65078545]
[-43.68971252 8.32884121]
[-56.16950607 0.00689741]
[-68.64929962 -8.31504631]
[-77.92933655 3.47965956]
[-88.10616302 14.50989819]
[-99.11705780 24.70766449]
[-110.89411163 34.01008224]
[-123.36473083 42.35980225]
[-136.45202637 49.70534134]
[-150.07528687 56.00141144]
[-164.15055847 61.20919800]
[-178.59103394 65.29659271]
[-193.30767822 68.23838806]
[-208.20977783 70.01645660]
[-223.20545959 70.61982727]
[-238.20223999 70.04478455]
[-253.10766602 68.29487610]
[-267.82986450 65.38088989]
[-282.27801514 61.32078171]
[-296.36309814 56.13959885]
[-309.99822998 49.86927414]
[-323.09939575 42.54847336]
[-335.58575439 34.22232819]
[-347.38037109 24.94217491]
[-358.41049194 14.76523018]
[-368.60815430 3.75423717]
[-377.91046143 -8.02291584]
[-386.26004028 -20.49361801]
[-393.60543823 -33.58098221]
[-399.90136719 -47.20431900]
[-405.10903931 -61.27963638]
[-409.19625854 -75.72015381]
[-412.13790894 -90.43683624]
[-413.91583252 -105.33895874]
[-414.51904297 -120.33462524]
[-413.94384766 -135.33140564]
[-412.19378662 -150.23681641]
[-409.27966309 -164.95896912]
[-405.21939087 -179.40710449]
[-400.03808594 -193.49212646]
[-393.76760864 -207.12721252]
[-386.44668579 -220.22827148]
[-378.12039185 -232.71455383]
[-368.84011841 -244.50907898]
[-358.66308594 -255.53910828]
[-347.65197754 -265.73663330]
[-335.87472534 -275.03881836]
[-323.40393066 -283.38827515]
[-310.31649780 -290.73355103]
[-296.69308472 -297.02935791]
[-282.61773682 -302.23684692]
[-268.17718506 -306.32394409]
[-253.46044922 -309.26544189]
[-238.55831909 -311.04321289]
[-223.56263733 -311.64627075]
[-208.56587219 -311.07092285]
[-193.66047668 -309.32070923]
[-178.93835449 -306.40643311]
[-164.49026489 -302.34603882]
[-150.40528870 -297.16455078]
[-136.77027893 -290.89395142]
[-123.66928101 -283.57287598]
[-111.18308258 -275.24649048]
[-99.38865662 -265.96609497]
[-88.35873413 -255.78892517]
[-78.16130066 -244.77770996]
[-68.85924530 -233.00038147]
[-60.50991058 -220.52949524]
[-53.16477203 -207.44198608]
[-46.86911774 -193.81852722]
[-41.66176224 -179.74310303]
[-37.57481003 -165.30249023]
[-34.63346481 -150.58575439]
[-32.85585403 -135.68359375]
[-32.25294113 -120.68791199]
[-32.82844162 -105.69115448]
[-34.57880783 -90.78577423]
[-37.49324799 -76.06367493]
[-41.55379486 -61.61562729]
[-46.73541260 -47.53071213]
[-53.00615311 -33.89575958]
[-60.32735825 -20.79483986]
[-47.84756470 -12.47289658]
[-35.36777115 -4.15095234]
[-22.88797569 4.17099142]
[-10.40818214 12.49293518]
[-5.63247728 12.45190048]
[-0.78029138 15.41050148]
[2.31420708 21.25307083]
[17.17057991 22.31958771]
[23.93670082 36.62099075]
[36.16318893 45.31081772]
[48.38967133 54.00064087]
[60.61615753 62.69046402]
[72.84264374 71.38028717]
[85.06912994 80.07011414]
[97.29561615 88.75994110]
[92.09798431 74.68923950]
[93.94313049 59.80315781]
[102.41884613 47.42728043]
[115.63162994 40.32641602]
[130.62971497 40.08691406]
[144.06250000 46.76227570]
[152.92904663 58.86120987]
[155.24856567 73.68078613]
[150.50285339 87.91027069]
[139.75213623 98.37076569]
[125.39812469 102.72536469]
[110.64753723 100.00122833]
[121.29354858 110.56827545]
[132.01792908 121.05577850]
[142.82008362 131.46315002]
[153.62223816 141.87051392]
[164.42439270 152.27789307]
[175.22654724 162.68527222]
[193.19697571 166.70341492]
[197.39207458 183.74360657]
[208.34797668 193.98899841]
[219.30389404 204.23439026]
[230.49742126 194.23384094]
[242.54235840 185.27694702]
[255.34169006 177.43582153]
[268.79238892 170.77359009]
[282.78613281 165.34391785]
[297.21023560 161.19049072]
[311.94860840 158.34677124]
[326.88256836 156.83564758]
[341.89184570 156.66929626]
[356.85562134 157.84904480]
[371.65338135 160.36538696]
[386.16601562 164.19808960]
[400.27667236 169.31628418]
[413.87173462 175.67874146]
[426.84170532 183.23425293]
[439.08221436 191.92196655]
[450.49465942 201.67196655]
[460.98715210 212.40571594]
[470.47525024 224.03680420]
[478.88253784 236.47158813]
[486.14132690 249.60993958]
[492.19317627 263.34606934]
[496.98931885 277.56939697]
[500.49121094 292.16540527]
[502.67059326 307.01654053]
[503.50994873 322.00326538]
[503.00250244 337.00488281]
[501.15237427 351.90063477]
[497.97442627 366.57055664]
[493.49426270 380.89657593]
[487.74792480 394.76330566]
[480.78173828 408.05908203]
[472.65173340 420.67691040]
[463.42340088 432.51516724]
[453.17105103 443.47851562]
[441.97720337 453.47872925]
[429.93200684 462.43524170]
[417.13241577 470.27600098]
[403.68151855 476.93780518]
[389.68762207 482.36706543]
[375.26336670 486.52005005]
[360.52493286 489.36331177]
[345.59091187 490.87396240]
[330.58163452 491.03988647]
[315.61788940 489.85968018]
[300.82019043 487.34286499]
[286.30767822 483.50970459]
[272.19717407 478.39111328]
[258.60232544 472.02822876]
[245.63258362 464.47232056]
[233.39234924 455.78421021]
[221.98019409 446.03387451]
[211.48802185 435.29980469]
[202.00027466 423.66842651]
[193.59336853 411.23339844]
[186.33499146 398.09481812]
[180.28356934 384.35848999]
[175.48783875 370.13500977]
[171.98640442 355.53890991]
[169.80747986 340.68771362]
[168.96858215 325.70095825]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 149]
[8 148]
[9 147]
[12 145]
[13 144]
[14 143]
[15 142]
[16 141]
[18 140]
[19 139]
[20 127]
[21 126]
[22 125]
[23 124]
[24 123]
[25 122]
[26 121]
[28 119]
[29 116]
[30 115]
[31 114]
[32 113]
[33 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
