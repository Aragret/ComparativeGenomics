%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[319.48828125 92.00550079]
[319.52215576 107.00251007]
[318.53253174 121.96688080]
[316.52401733 136.82882690]
[313.50598145 151.51905823]
[309.49246216 165.96908569]
[304.50222778 180.11154175]
[298.55847168 193.88047791]
[291.68899536 207.21170044]
[283.92575073 220.04306030]
[275.30496216 232.31472778]
[265.86682129 243.96948242]
[255.65534973 254.95298767]
[244.71813965 265.21401978]
[233.10620117 274.70477295]
[220.87364197 283.38095093]
[208.07752991 291.20214844]
[194.77751160 298.13186646]
[181.03559875 304.13781738]
[166.91584778 309.19198608]
[152.48411560 313.27078247]
[137.80769348 316.35525513]
[122.95497894 318.43096924]
[107.99523926 319.48825073]
[92.99822235 319.52218628]
[78.03385162 318.53262329]
[63.17190170 316.52413940]
[48.48165512 313.50616455]
[34.03161240 309.49267578]
[19.88914490 304.50247192]
[6.12018728 298.55880737]
[-7.21106100 291.68933105]
[-20.04244423 283.92614746]
[-32.31413651 275.30541992]
[-43.96892166 265.86730957]
[-54.95245743 255.65586853]
[-65.21353912 244.71870422]
[-74.70432281 233.10678101]
[-83.38055420 220.87426758]
[-91.20178986 208.07817078]
[-98.13155365 194.77816772]
[-104.13754272 181.03627014]
[-109.19175720 166.91654968]
[-113.27062225 152.48483276]
[-116.35512543 137.80841064]
[-118.43088531 122.95571136]
[-119.48822021 107.99597168]
[-119.52220917 92.99896240]
[-118.53269196 78.03459167]
[-116.52426910 63.17262650]
[-113.50632477 48.48237228]
[-109.49291229 34.03231812]
[-104.50275421 19.88983154]
[-98.55911255 6.12085342]
[-91.68970490 -7.21041775]
[-83.92655182 -20.04182625]
[-75.30584717 -32.31354904]
[-65.86779785 -43.96836472]
[-55.65639496 -54.95193481]
[-44.71925354 -65.21305084]
[-33.10736847 -74.70387268]
[-20.87487602 -83.38014984]
[-8.07881165 -91.20143127]
[5.22116232 -98.13124084]
[18.96303749 -104.13727570]
[33.08274460 -109.19152832]
[47.51444626 -113.27044678]
[62.19086075 -116.35499573]
[77.04355621 -118.43080902]
[92.00328827 -119.48819733]
[107.00030518 -119.52223206]
[121.96467590 -118.53276062]
[136.82664490 -116.52439880]
[151.51690674 -113.50649261]
[165.96697998 -109.49313354]
[180.10948181 -104.50302124]
[193.87847900 -98.55942535]
[207.20977783 -91.69006348]
[220.04121399 -83.92694855]
[232.31295776 -75.30628967]
[243.96780396 -65.86827850]
[254.95141602 -55.65691376]
[265.21255493 -44.71980667]
[274.70343018 -33.10795212]
[283.37976074 -20.87549019]
[291.20104980 -8.07945347]
[298.13092041 5.22049761]
[304.13699341 18.96235275]
[309.19131470 33.08204269]
[323.62585449 29.00237465]
[338.06042480 24.92270851]
[352.49496460 20.84304047]
[366.92950439 16.76337433]
[381.36407471 12.68370724]
[395.79861450 8.60404110]
[410.23318481 4.52437401]
[424.66772461 0.44470716]
[421.45751953 -14.21237469]
[419.12960815 -29.03520584]
[417.69232178 -43.97072601]
[417.15084839 -58.96546936]
[417.50704956 -73.96575928]
[418.75973511 -88.91789246]
[420.90435791 -103.76834869]
[423.93325806 -118.46396637]
[427.83563232 -132.95213318]
[432.59744263 -147.18099976]
[438.20169067 -161.09962463]
[444.62829590 -174.65817261]
[451.85427856 -187.80810547]
[459.85372925 -200.50236511]
[468.59805298 -212.69549561]
[478.05590820 -224.34385681]
[488.19345093 -235.40576172]
[498.97442627 -245.84158325]
[510.36019897 -255.61398315]
[522.30999756 -264.68795776]
[534.78112793 -273.03106689]
[547.72882080 -280.61340332]
[561.10687256 -287.40783691]
[574.86724854 -293.39004517]
[588.96081543 -298.53860474]
[603.33703613 -302.83511353]
[617.94445801 -306.26416016]
[632.73083496 -308.81347656]
[647.64318848 -310.47396851]
[662.62811279 -311.23965454]
[677.63208008 -311.10778809]
[692.60125732 -310.07885742]
[707.48211670 -308.15655518]
[722.22137451 -305.34774780]
[736.76629639 -301.66250610]
[751.06481934 -297.11401367]
[765.06567383 -291.71853638]
[778.71881104 -285.49542236]
[791.97534180 -278.46691895]
[804.78784180 -270.65820312]
[817.11035156 -262.09719849]
[828.89886475 -252.81460571]
[840.11114502 -242.84361267]
[850.70703125 -232.21992493]
[860.64855957 -220.98156738]
[869.90026855 -209.16879272]
[878.42895508 -196.82385254]
[886.20404053 -183.99096680]
[893.19781494 -170.71606445]
[899.38513184 -157.04666138]
[904.74389648 -143.03169250]
[909.25488281 -128.72134399]
[912.90203857 -114.16682434]
[915.67218018 -99.42024231]
[917.55548096 -84.53438568]
[918.54516602 -69.56254578]
[918.63775635 -54.55831528]
[917.83276367 -39.57540512]
[916.13323975 -24.66745186]
[913.54516602 -9.88782215]
[910.07788086 4.71057653]
[905.74371338 19.07548523]
[900.55822754 33.15547943]
[894.53997803 46.90016174]
[887.71051025 60.26032257]
[880.09429932 73.18814087]
[871.71850586 85.63732910]
[862.61328125 97.56333923]
[852.81103516 108.92346191]
[842.34704590 119.67704010]
[831.25860596 129.78556824]
[819.58551025 139.21287537]
[807.36950684 147.92520142]
[794.65429688 155.89137268]
[781.48547363 163.08285522]
[767.91015625 169.47392273]
[753.97686768 175.04167175]
[739.73559570 179.76620483]
[725.23724365 183.63056946]
[710.53375244 186.62097168]
[695.67773438 188.72668457]
[680.72235107 189.94017029]
[665.72119141 190.25708008]
[650.72790527 189.67630005]
[635.79620361 188.19989014]
[620.97949219 185.83314514]
[606.33087158 182.58453369]
[591.90277100 178.46568298]
[577.74682617 173.49134827]
[563.91369629 167.67932129]
[550.45288086 161.05043030]
[537.41259766 153.62837219]
[524.83953857 145.43974304]
[512.77868652 136.51383972]
[501.27325439 126.88262939]
[490.36437988 116.58058167]
[480.09115601 105.64457703]
[470.49032593 94.11375427]
[461.59628296 82.02941132]
[453.44085693 69.43479156]
[446.05322266 56.37498093]
[439.45986938 42.89673615]
[433.68435669 29.04830551]
[428.74740601 14.87926006]
[414.31283569 18.95892715]
[399.87829590 23.03859329]
[385.44372559 27.11826134]
[371.00918579 31.19792747]
[356.57464600 35.27759552]
[342.14007568 39.35726166]
[327.70553589 43.43692780]
[313.27096558 47.51659393]
[316.35537720 62.19303894]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[89 209]
[90 208]
[91 207]
[92 206]
[93 205]
[94 204]
[95 203]
[96 202]
[97 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
