%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[100.02595520 794.81866455]
[86.29093170 788.76818848]
[73.10246277 781.60412598]
[60.55065155 773.37542725]
[48.72124100 764.13830566]
[37.69503403 753.95581055]
[27.54735565 742.89758301]
[18.34752274 731.03918457]
[10.15838337 718.46148682]
[3.03587627 705.25054932]
[-2.97134233 691.49652100]
[-7.82223701 677.29345703]
[-11.48367119 662.73822021]
[-13.93063164 647.93041992]
[-15.14640522 632.97106934]
[-15.12268448 617.96246338]
[-13.85963345 603.00701904]
[-11.36587811 588.20703125]
[-7.65845585 573.66345215]
[-2.76269102 559.47576904]
[3.28797245 545.74084473]
[10.45220184 532.55242920]
[18.68105698 520.00073242]
[27.91832542 508.17141724]
[38.10091019 497.14532471]
[49.15924454 486.99780273]
[61.01779556 477.79809570]
[73.59555054 469.60910034]
[86.80659485 462.48675537]
[100.56068420 456.47970581]
[114.76384735 451.62896729]
[129.31907654 447.96771240]
[126.87335205 433.16845703]
[124.42762756 418.36917114]
[121.98189545 403.56991577]
[119.53617096 388.77062988]
[117.09043884 373.97137451]
[114.64471436 359.17208862]
[99.94577789 356.48388672]
[87.02925110 348.91470337]
[77.46383667 337.36148071]
[72.41888428 323.20626831]
[72.52146912 308.15103149]
[77.77851868 294.01303101]
[87.57361603 282.50527954]
[100.73927307 275.02926636]
[98.29354095 260.22998047]
[95.84781647 245.43070984]
[93.40208435 230.63143921]
[90.95635986 215.83216858]
[84.20019531 229.22448730]
[71.70745850 237.52699280]
[56.74372482 238.56942749]
[43.22047424 232.07929993]
[34.67265701 219.75311279]
[33.33464813 204.81291199]
[39.55620193 191.16401672]
[51.71101761 182.37422180]
[66.62185669 180.74116516]
[80.39105988 186.69171143]
[89.41905975 198.66958618]
[89.19573212 183.67124939]
[87.28050995 181.62428284]
[86.06072998 178.69532776]
[85.87637329 175.14547729]
[86.96672821 171.35395813]
[89.43235779 167.77980042]
[90.10214233 152.79475403]
[90.77192688 137.80972290]
[91.44171143 122.82468414]
[92.11149597 107.83964539]
[80.33985138 117.13632202]
[65.42682648 115.52327728]
[55.91529846 103.92453766]
[57.25389099 88.98438263]
[68.67579651 79.26121521]
[83.63803864 80.32490540]
[93.56924438 91.56523132]
[95.57325745 76.69969940]
[81.80286407 70.51452637]
[70.34485626 60.70961761]
[62.12225723 48.08607101]
[57.79428101 33.67160416]
[57.70349503 18.63685226]
[61.84870911 4.20032501]
[69.88577271 -8.47036552]
[81.15611267 -18.35293388]
[94.74073029 -24.65289879]
[109.53508759 -26.86744881]
[111.53910065 -41.73297882]
[113.54311371 -56.59850693]
[107.71889496 -71.30867004]
[117.08720398 -82.88813782]
[119.09121704 -97.75366211]
[120.98451233 -112.63369751]
[122.76697540 -127.52742004]
[124.54944611 -142.42112732]
[126.33190918 -157.31484985]
[128.11437988 -172.20857239]
[114.22371674 -178.14373779]
[102.56873322 -187.75302124]
[94.09425354 -200.25740051]
[89.48725128 -214.64323425]
[89.12120056 -229.74432373]
[93.02577972 -244.33647156]
[100.88446045 -257.23678589]
[112.06017303 -267.39947510]
[125.64694977 -274.00070190]
[140.54338074 -276.50531006]
[155.54185486 -274.71029663]
[169.42654419 -268.76119995]
[181.07186890 -259.14019775]
[189.53378296 -246.62731934]
[194.12634277 -232.23686218]
[194.47721863 -217.13542175]
[190.55798340 -202.54719543]
[182.68634033 -189.65478516]
[171.50042725 -179.50334167]
[157.90702820 -172.91577148]
[143.00808716 -170.42610168]
[141.22563171 -155.53237915]
[139.44316101 -140.63867188]
[137.66069031 -125.74494934]
[135.87823486 -110.85123444]
[138.20462036 -103.83627319]
[133.95674133 -95.74964905]
[131.95272827 -80.88412476]
[137.92028809 -67.23723602]
[128.40864563 -54.59449005]
[126.40462494 -39.72896194]
[124.40061188 -24.86343575]
[138.08041382 -18.81029892]
[149.51181030 -9.13794041]
[157.76284790 3.37629509]
[162.15771484 17.72292709]
[162.33207703 32.74177170]
[158.26322937 47.21576691]
[150.27270508 59.96958542]
[139.00085449 69.96509552]
[125.35546875 76.38583374]
[110.43878174 78.70371246]
[108.43476868 93.56924438]
[107.09653473 108.50942993]
[106.42675018 123.49446869]
[105.75696564 138.47950745]
[105.08718109 153.46453857]
[104.41739655 168.44958496]
[104.19406891 183.44792175]
[104.41739655 198.44625854]
[105.75563049 213.38644409]
[108.20135498 228.18571472]
[110.64708710 242.98498535]
[113.09281158 257.78424072]
[115.53854370 272.58352661]
[130.40946960 275.42623901]
[143.38618469 283.17068481]
[152.91238403 294.86563110]
[157.85328674 309.08737183]
[157.63076782 324.11306763]
[152.29100037 338.12954712]
[142.49650574 349.45193481]
[129.44398499 356.72637939]
[131.88970947 371.52563477]
[134.33543396 386.32492065]
[136.78117371 401.12417603]
[139.22689819 415.92346191]
[141.67262268 430.72271729]
[144.11834717 445.52200317]
[159.07763672 444.30569458]
[174.08625793 444.32885742]
[189.04171753 445.59140015]
[203.84182739 448.08462524]
[218.38549805 451.79150391]
[232.57337952 456.68676758]
[246.30856323 462.73693848]
[259.49719238 469.90069580]
[272.04919434 478.12911987]
[283.87884521 487.36596680]
[294.90527344 497.54815674]
[305.05322266 508.60610962]
[314.25332642 520.46435547]
[322.44277954 533.04180908]
[329.56561279 546.25256348]
[335.57315063 560.00646973]
[340.42437744 574.20947266]
[344.08615112 588.76452637]
[346.53347778 603.57232666]
[347.74960327 618.53161621]
[347.72622681 633.54028320]
[346.46353149 648.49566650]
[343.97015381 663.29577637]
[340.26306152 677.83941650]
[335.36764526 692.02722168]
[329.31729126 705.76232910]
[322.15338135 718.95086670]
[313.92483521 731.50280762]
[304.68783569 743.33233643]
[294.50552368 754.35864258]
[283.44741821 764.50646973]
[271.58911133 773.70642090]
[259.01153564 781.89569092]
[245.80065918 789.01837158]
[232.04672241 795.02575684]
[217.84367371 799.87683105]
[203.28852844 803.53845215]
[188.48072815 805.98559570]
[173.52140808 807.20153809]
[158.51278687 807.17797852]
[143.55735779 805.91510010]
[128.75730896 803.42150879]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 168]
[33 167]
[34 166]
[35 165]
[36 164]
[37 163]
[38 162]
[46 154]
[47 153]
[48 152]
[49 151]
[50 150]
[61 149]
[62 148]
[67 147]
[68 146]
[69 145]
[70 144]
[71 143]
[78 142]
[79 141]
[89 131]
[90 130]
[91 129]
[93 127]
[94 126]
[95 124]
[96 123]
[97 122]
[98 121]
[99 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
