%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAUxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[198.00032043 550.76245117]
[189.10877991 538.67578125]
[180.98585510 526.05975342]
[173.66299438 512.96307373]
[167.16850281 499.43652344]
[161.52752686 485.53234863]
[156.76187134 471.30438232]
[152.88999939 456.80764771]
[149.92686462 442.09826660]
[147.88395691 427.23309326]
[146.76914978 412.26968384]
[146.58679199 397.26589966]
[147.33755493 382.27981567]
[149.01853943 367.36938477]
[151.62326050 352.59231567]
[155.14164734 338.00576782]
[159.56004333 323.66616821]
[164.86140442 309.62899780]
[171.02519226 295.94854736]
[178.02755737 282.67779541]
[185.84143066 269.86804199]
[194.43656921 257.56884766]
[203.77972412 245.82778931]
[213.83473206 234.69032288]
[203.34722900 223.96594238]
[192.85972595 213.24156189]
[182.37222290 202.51718140]
[171.88471985 191.79280090]
[161.39723206 181.06842041]
[150.90972900 170.34403992]
[140.42222595 159.61965942]
[137.64689636 174.36068726]
[124.46370697 181.51632690]
[110.59079742 175.81173706]
[106.25476837 161.45211792]
[114.65197754 149.02284241]
[129.59075928 147.68574524]
[119.92995453 136.21104431]
[110.26914215 124.73633575]
[100.60832977 113.26163483]
[104.20512390 127.82402802]
[104.63177490 142.81796265]
[101.86888123 157.56130981]
[96.04212952 171.38336182]
[87.41660309 183.65528870]
[76.38471222 193.81881714]
[63.44831848 201.41156006]
[49.19595718 206.08811951]
[34.27600479 207.63571167]
[19.36722565 205.98396301]
[5.14786720 201.20799255]
[-7.73518372 193.52510071]
[-18.69583511 183.28477478]
[-27.23545074 170.95291138]
[-32.96553421 157.09049988]
[-35.62540436 142.32821655]
[-35.09405518 127.33763123]
[-31.39566231 112.80072021]
[-24.69847298 99.37880707]
[-15.30716896 87.68251038]
[-3.64898992 78.24392700]
[9.74569511 71.49245453]
[24.26751518 67.73522949]
[39.25582886 67.14319611]
[54.02876282 69.74327087]
[67.91424561 75.41718292]
[80.28059387 83.90679932]
[90.56781769 94.82935333]
[86.16682434 80.48950195]
[80.65728760 73.20370483]
[81.80876160 65.90330505]
[77.62174988 51.49951935]
[73.91189575 66.03351593]
[64.98414612 78.08736420]
[52.16289902 85.87296295]
[37.35009766 88.23535919]
[22.74313354 84.82409668]
[10.50886917 76.14523315]
[2.46218061 63.48620987]
[-0.20325260 48.72492981]
[2.90797043 34.05113220]
[11.33431816 21.64159393]
[23.82579231 13.33719254]
[38.52935791 10.36983871]
[53.26382446 13.17972088]
[65.84342957 21.35000992]
[74.40128326 33.66694260]
[73.28563690 18.70848846]
[72.16999054 3.75003433]
[71.05433655 -11.20841885]
[69.93869019 -26.16687202]
[68.82304382 -41.12532425]
[54.02136230 -44.09396362]
[40.57001877 -50.94698715]
[29.46719170 -61.17586136]
[21.53678894 -74.02153015]
[17.36729431 -88.53076935]
[17.26811218 -103.62688446]
[21.24660492 -118.18965149]
[29.00754166 -131.13841248]
[39.97500610 -141.51228333]
[53.33514404 -148.54145813]
[68.09654236 -151.70433044]
[83.16380310 -150.76617432]
[97.41884613 -145.79663086]
[109.80384064 -137.16445923]
[119.39974976 -125.51022339]
[125.49448395 -111.69874573]
[127.63577271 -96.75493622]
[125.66472626 -81.78771973]
[119.72760010 -67.90776825]
[110.26497650 -56.14505768]
[97.97904205 -47.37246704]
[83.78149414 -42.24097443]
[84.89714050 -27.28252029]
[86.01279449 -12.32406807]
[87.12844086 2.63438559]
[88.24408722 17.59283829]
[89.35974121 32.55129242]
[92.02553558 47.31251144]
[96.21254730 61.71629333]
[100.50666809 76.08850098]
[104.90766907 90.42835236]
[112.08303070 103.60083008]
[121.74384308 115.07553101]
[131.40464783 126.55022430]
[141.06546021 138.02493286]
[151.14660645 149.13215637]
[161.63410950 159.85653687]
[172.12161255 170.58091736]
[182.60910034 181.30529785]
[193.09660339 192.02967834]
[203.58410645 202.75405884]
[214.07160950 213.47843933]
[224.55911255 224.20281982]
[235.91835022 214.39903259]
[247.86511230 205.32041931]
[260.35317993 197.00209045]
[273.33425903 189.47622681]
[286.75808716 182.77195740]
[300.57275391 176.91522217]
[314.72482300 171.92866516]
[329.15951538 167.83157349]
[343.82098389 164.63983154]
[358.65255737 162.36575317]
[373.59680176 161.01815796]
[388.59591675 160.60223389]
[403.59188843 161.11962891]
[418.52667236 162.56829834]
[433.34249878 164.94267273]
[447.98205566 168.23355103]
[462.38870239 172.42820740]
[476.50668335 177.51039124]
[490.28143311 183.46046448]
[503.65957642 190.25541687]
[516.58941650 197.86892700]
[529.02093506 206.27156067]
[540.90600586 215.43080139]
[552.19866943 225.31121826]
[562.85516357 235.87458801]
[572.83441162 247.08003235]
[582.09765625 258.88421631]
[590.60913086 271.24145508]
[598.33587646 284.10394287]
[605.24804688 297.42190552]
[611.31884766 311.14385986]
[616.52484131 325.21667480]
[620.84582520 339.58593750]
[624.26513672 354.19604492]
[626.76953125 368.99044800]
[628.34930420 383.91192627]
[628.99835205 398.90277100]
[628.71417236 413.90496826]
[627.49780273 428.86047363]
[625.35406494 443.71142578]
[622.29119873 458.40039062]
[618.32104492 472.87048340]
[613.45892334 487.06579590]
[607.72375488 500.93136597]
[601.13763428 514.41357422]
[593.72601318 527.46020508]
[585.51770020 540.02081299]
[576.54431152 552.04687500]
[566.84069824 563.49176025]
[556.44427490 574.31121826]
[545.39532471 584.46343994]
[533.73657227 593.90911865]
[521.51318359 602.61163330]
[508.77233887 610.53747559]
[495.56344604 617.65582275]
[481.93753052 623.93920898]
[467.94735718 629.36334229]
[453.64700317 633.90722656]
[439.09182739 637.55328369]
[424.33813477 640.28735352]
[409.44302368 642.09893799]
[394.46408081 642.98095703]
[379.45928955 642.93005371]
[364.48669434 641.94635010]
[349.60418701 640.03375244]
[334.86938477 637.19964600]
[320.33929443 633.45489502]
[306.07012939 628.81408691]
[292.11706543 623.29516602]
[278.53411865 616.91943359]
[265.37380981 609.71154785]
[252.68708801 601.69952393]
[240.52301025 592.91418457]
[228.92864990 583.38964844]
[217.94883728 573.16265869]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 135]
[25 134]
[26 133]
[27 132]
[28 131]
[29 130]
[30 129]
[31 128]
[37 127]
[38 126]
[39 125]
[40 124]
[68 123]
[69 122]
[71 121]
[72 120]
[87 119]
[88 118]
[89 117]
[90 116]
[91 115]
[92 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
