%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[-16.08068085 454.56143188]
[-8.32949829 467.46929932]
[-3.43176651 481.70678711]
[-1.60159254 496.65148926]
[-2.91898417 511.65008545]
[-7.32635069 526.04693604]
[-14.63102055 539.21258545]
[-24.51366615 550.57159424]
[-36.54225922 559.62738037]
[-50.19096375 565.98400879]
[-64.86311340 569.36358643]
[-79.91730499 569.61840820]
[-94.69543457 566.73736572]
[-108.55147552 560.84637451]
[-120.87968445 552.20294189]
[-131.14112854 541.18493652]
[-138.88723755 528.27404785]
[-143.77937317 514.03460693]
[-145.60366821 499.08920288]
[-144.28036499 484.09109497]
[-139.86734009 469.69601440]
[-132.55749512 456.53320312]
[-122.67037964 445.17807007]
[-110.63822174 436.12704468]
[-96.98702240 429.77581787]
[-82.31354523 426.40197754]
[-67.25925446 426.15304565]
[-52.48225403 429.03991699]
[-46.61329269 415.23574829]
[-40.74433136 401.43157959]
[-34.87537003 387.62741089]
[-29.21258354 373.73736572]
[-23.75722694 359.76458740]
[-18.30187035 345.79177856]
[-12.84651279 331.81896973]
[-13.91977215 328.46032715]
[-13.41956520 324.41497803]
[-11.04085541 320.42813110]
[-6.82294846 317.35302734]
[-0.74911439 303.63775635]
[5.32471943 289.92248535]
[11.39855385 276.20721436]
[17.47238731 262.49194336]
[11.19472790 251.23937988]
[12.56483269 238.23149109]
[21.30531693 228.24078369]
[34.39388657 225.06211853]
[40.67124939 211.43879700]
[46.94860840 197.81547546]
[53.22597122 184.19216919]
[51.52503586 169.39500427]
[64.32746124 160.09938049]
[70.60482025 146.47605896]
[76.88217926 132.85275269]
[83.15953827 119.22943115]
[89.33531189 105.55976105]
[95.20426941 91.75558472]
[100.86705780 77.86555481]
[98.91213226 62.16559601]
[110.88167572 53.30109787]
[116.54446411 39.41107178]
[122.20724487 25.52104378]
[127.87003326 11.63101673]
[115.10318756 19.50550652]
[100.11272430 20.04037857]
[86.81712341 13.09581757]
[78.69181824 0.48711541]
[77.86074066 -14.48984432]
[84.54113770 -27.92011833]
[96.98677063 -36.29306793]
[111.94437408 -37.42002106]
[125.50407410 -31.00639725]
[134.12139893 -18.72870255]
[135.54393005 -3.79716992]
[143.20452881 -16.69349670]
[150.86512756 -29.58982468]
[158.52572632 -42.48614883]
[158.92137146 -58.30241013]
[172.07345581 -65.29325867]
[179.73405457 -78.18958282]
[187.39465332 -91.08590698]
[195.05525208 -103.98223877]
[196.74742126 -112.95855713]
[202.92712402 -117.01233673]
[210.77888489 -129.79318237]
[218.63063049 -142.57402039]
[204.06182861 -139.00331116]
[190.55116272 -145.51960754]
[184.27554321 -159.14370728]
[188.10408020 -173.64689636]
[200.28642273 -182.39848328]
[215.25297546 -181.39738464]
[226.16123962 -171.10125732]
[228.02368164 -156.21557617]
[237.16247559 -168.11021423]
[246.30128479 -180.00483704]
[255.08187866 -192.16630554]
[263.49649048 -204.58380127]
[271.91113281 -217.00129700]
[260.54080200 -226.81111145]
[250.38624573 -237.87463379]
[241.58479309 -250.04223633]
[234.25543213 -263.14938354]
[228.49732971 -277.01879883]
[224.38833618 -291.46292114]
[221.98400879 -306.28640747]
[221.31689453 -321.28878784]
[222.39598083 -336.26718140]
[225.20671082 -351.01901245]
[229.71104431 -365.34475708]
[235.84806824 -379.05072021]
[243.53480530 -391.95153809]
[252.66728210 -403.87271118]
[263.12200928 -414.65301514]
[274.75756836 -424.14669800]
[287.41662598 -432.22537231]
[300.92797852 -438.77972412]
[315.10891724 -443.72116089]
[329.76763916 -446.98284912]
[344.70590210 -448.52069092]
[359.72167969 -448.31384277]
[374.61190796 -446.36514282]
[389.17523193 -442.70092773]
[403.21466064 -437.37075806]
[416.54034424 -430.44671631]
[428.97210693 -422.02246094]
[440.34176636 -412.21188354]
[450.49557495 -401.14767456]
[459.29623413 -388.97949219]
[466.62469482 -375.87185669]
[472.38186646 -362.00204468]
[476.48992920 -347.55764771]
[478.89324951 -332.73400879]
[479.55935669 -317.73156738]
[478.47927856 -302.75326538]
[475.66757202 -288.00161743]
[471.16226196 -273.67617798]
[465.02432251 -259.97061157]
[457.33673096 -247.07032776]
[448.20346069 -235.14976501]
[437.74801636 -224.37013245]
[426.11181641 -214.87722778]
[413.45220947 -206.79940796]
[399.94042969 -200.24595642]
[385.75915527 -195.30545044]
[371.10025024 -192.04473877]
[356.16186523 -190.50791931]
[341.14611816 -190.71575928]
[326.25601196 -192.66545105]
[311.69293213 -196.33064270]
[297.65383911 -201.66174316]
[284.32861328 -208.58666992]
[275.91400146 -196.16917419]
[267.49938965 -183.75167847]
[267.89529419 -180.97654724]
[267.21578979 -177.87736511]
[265.33193970 -174.86297607]
[262.26507568 -172.38128662]
[258.19592285 -170.86604309]
[249.05711365 -158.97140503]
[239.91830444 -147.07678223]
[231.41148376 -134.72225952]
[223.55972290 -121.94142151]
[215.70796204 -109.16058350]
[207.95158386 -96.32164001]
[200.29098511 -83.42531586]
[192.63038635 -70.52898407]
[184.96978760 -57.63265991]
[185.12207031 -42.73883438]
[171.42204285 -34.82555389]
[163.76144409 -21.92922592]
[156.10084534 -9.03289986]
[148.44026184 3.86342740]
[141.76005554 17.29380417]
[136.09727478 31.18383026]
[130.43449402 45.07385635]
[124.77169800 58.96388245]
[127.13166809 73.67034149]
[114.75708008 83.52834320]
[109.09429932 97.41837311]
[109.98127747 102.58821106]
[107.90855408 107.88699341]
[103.05057526 111.63359833]
[102.43705750 120.74739838]
[96.78285980 125.50679016]
[90.50549316 139.13011169]
[84.22813416 152.75341797]
[77.95077515 166.37673950]
[79.20271301 182.14833069]
[66.84928894 190.46952820]
[60.57192612 204.09283447]
[54.29456329 217.71615601]
[48.01720428 231.33947754]
[54.37452698 247.63682556]
[47.12096405 263.18356323]
[31.18765450 268.56579590]
[25.11382103 282.28103638]
[19.03998566 295.99630737]
[12.96615219 309.71157837]
[6.89231825 323.42684937]
[1.12628496 337.27432251]
[-4.32907200 351.24713135]
[-9.78442955 365.21994019]
[-15.23978615 379.19271851]
[-14.62191772 385.77526855]
[-17.05574799 390.91076660]
[-21.07119370 393.49636841]
[-26.94015503 407.30053711]
[-32.80911636 421.10470581]
[-38.67807770 434.90890503]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 210]
[29 209]
[30 208]
[31 207]
[32 204]
[33 203]
[34 202]
[35 201]
[39 200]
[40 199]
[41 198]
[42 197]
[43 196]
[47 193]
[48 192]
[49 191]
[50 190]
[52 188]
[53 187]
[54 186]
[55 185]
[56 183]
[57 180]
[58 179]
[60 177]
[61 176]
[62 175]
[63 174]
[74 173]
[75 172]
[76 171]
[77 170]
[79 168]
[80 167]
[81 166]
[82 165]
[84 164]
[85 163]
[86 162]
[94 161]
[95 160]
[96 159]
[97 154]
[98 153]
[99 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
