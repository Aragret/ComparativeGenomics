%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[153.90371704 406.95401001]
[164.77142334 396.50619507]
[177.82400513 388.96340942]
[166.84162903 378.90176392]
[170.41929626 363.49038696]
[166.23228455 349.08660889]
[162.04527283 334.68283081]
[157.85826111 320.27902222]
[147.41168213 314.18020630]
[143.80552673 302.21444702]
[149.49522400 290.63903809]
[145.52313232 276.17449951]
[141.55102539 261.70999146]
[137.36401367 247.30621338]
[126.23306274 237.40919495]
[129.58087158 221.94624329]
[118.44991302 212.04922485]
[121.79772186 196.58627319]
[117.39672089 182.24642944]
[112.99572754 167.90658569]
[101.86476898 158.00956726]
[105.21257782 142.54661560]
[100.81157684 128.20677185]
[96.41058350 113.86692047]
[86.30645752 104.20264435]
[89.24957275 90.53408051]
[84.84857178 76.19422913]
[79.33903503 68.90843201]
[80.49051666 61.60803223]
[76.30350494 47.20425034]
[72.11649323 32.80046844]
[67.92948151 18.39668465]
[63.74246979 3.99290299]
[48.01545715 4.00909996]
[32.93378067 -0.39834899]
[19.71486473 -8.86514664]
[9.42336941 -20.69966125]
[2.88544011 -34.93942261]
[0.62239784 -50.42938995]
[2.80917358 -65.91564178]
[9.26081753 -80.14688110]
[19.44811058 -91.97554016]
[32.54096985 -100.45033264]
[28.13997269 -114.79017639]
[16.69422340 -125.71287537]
[20.35682297 -140.15014648]
[15.95582581 -154.48999023]
[11.55482769 -168.82983398]
[7.15382957 -183.16967773]
[2.75283146 -197.50953674]
[-1.64816654 -211.84938049]
[-6.26217556 -226.12211609]
[-11.08817387 -240.32456970]
[-15.91417122 -254.52702332]
[-20.74016953 -268.72949219]
[-25.56616592 -282.93194580]
[-30.39216423 -297.13439941]
[-36.11618423 -304.25292969]
[-35.18257523 -311.58438110]
[-39.79658508 -325.85708618]
[-44.41059494 -340.12982178]
[-47.95093155 -325.55361938]
[-57.04922867 -313.62799072]
[-70.17226410 -306.36257935]
[-85.10857391 -304.98178101]
[-99.34113312 -309.71826172]
[-110.47149658 -319.77386475]
[-116.62400818 -333.45401001]
[-116.76186371 -348.45339966]
[-110.86183167 -362.24432373]
[-99.91816711 -372.50277710]
[-85.77507019 -377.50006104]
[-70.81590271 -376.39401245]
[-57.56154633 -369.37106323]
[-48.24485397 -357.61315918]
[-50.02731705 -372.50689697]
[-51.80978394 -387.40060425]
[-53.59225082 -402.29431152]
[-55.37471771 -417.18804932]
[-70.39622498 -417.44906616]
[-85.24226379 -419.75314331]
[-99.63626862 -424.05737305]
[-113.31008148 -430.28158569]
[-126.00897217 -438.30978394]
[-137.49636841 -447.99240112]
[-147.55825806 -459.14910889]
[-156.00720215 -471.57202148]
[-162.68580627 -485.02975464]
[-167.46965027 -499.27154541]
[-170.26960754 -514.03210449]
[-171.03352356 -529.03643799]
[-169.74716187 -544.00506592]
[-166.43447876 -558.65905762]
[-161.15721130 -572.72546387]
[-154.01364136 -585.94226074]
[-145.13687134 -598.06317139]
[-134.69227600 -608.86242676]
[-122.87440491 -618.13885498]
[-109.90343475 -625.71960449]
[-96.02101135 -631.46343994]
[-81.48574066 -635.26342773]
[-66.56842041 -637.04870605]
[-51.54694366 -636.78607178]
[-36.70115280 -634.48034668]
[-22.30761337 -630.17456055]
[-8.63447380 -623.94891357]
[4.06354809 -615.91931152]
[15.54989433 -606.23547363]
[25.61058235 -595.07763672]
[34.05818558 -582.65380859]
[40.73533249 -569.19537354]
[45.51763153 -554.95306396]
[48.31599045 -540.19219971]
[49.07827759 -525.18780518]
[47.79029083 -510.21932983]
[44.47602844 -495.56567383]
[39.19723129 -481.49984741]
[32.05223846 -468.28381348]
[23.17416000 -456.16387939]
[12.72838593 -445.36572266]
[0.90951562 -436.09060669]
[-12.06227207 -428.51126099]
[-25.94532204 -422.76889038]
[-40.48099899 -418.97048950]
[-38.69853210 -404.07678223]
[-36.91606522 -389.18307495]
[-35.13360214 -374.28933716]
[-33.35113525 -359.39562988]
[-30.13786125 -344.74383545]
[-25.52385139 -330.47109985]
[-20.90984344 -316.19836426]
[-16.18970871 -301.96038818]
[-11.36371040 -287.75793457]
[-6.53771305 -273.55548096]
[-1.71171546 -259.35302734]
[3.11428213 -245.15055847]
[7.94027996 -230.94810486]
[11.75229740 -228.07102966]
[13.79742432 -222.76872253]
[12.69168091 -216.25038147]
[17.09267807 -201.91052246]
[21.49367714 -187.57067871]
[25.89467430 -173.23083496]
[30.29567337 -158.89099121]
[34.69667053 -144.55114746]
[45.82763290 -134.65412903]
[42.47982025 -119.19117737]
[46.88081741 -104.85132599]
[61.20658875 -105.31975555]
[75.17623901 -102.05724335]
[87.83403015 -95.28054047]
[98.31230164 -85.44703674]
[105.89095306 -73.22390747]
[110.04692078 -59.44283676]
[110.49027252 -45.04343033]
[107.18444061 -31.00916290]
[100.34913635 -18.30019379]
[90.44575500 -7.78769207]
[78.14625549 -0.19410822]
[82.33325958 14.20967388]
[86.52027130 28.61345673]
[90.70728302 43.01723862]
[94.89429474 57.42102051]
[99.18842316 71.79323578]
[103.58941650 86.13307953]
[113.69354248 95.79735565]
[110.75042725 109.46591949]
[115.15142822 123.80577087]
[119.55242157 138.14561462]
[130.99816895 149.06831360]
[127.33557129 163.50558472]
[131.73657227 177.84542847]
[136.13757324 192.18527222]
[147.58331299 203.10797119]
[143.92071533 217.54524231]
[155.36647034 228.46794128]
[151.70387268 242.90521240]
[156.27586365 247.68101501]
[157.55729675 253.21771240]
[156.01554871 257.73788452]
[159.98765564 272.20242310]
[163.95974731 286.66693115]
[177.35781860 299.29916382]
[172.26203918 316.09201050]
[176.44905090 330.49581909]
[180.63606262 344.89959717]
[184.82307434 359.30337524]
[196.10493469 370.39526367]
[192.22778320 384.77639771]
[207.28988647 384.14657593]
[222.06489563 387.14035034]
[235.69380188 393.58364868]
[247.38426208 403.10186768]
[256.45660400 415.14163208]
[262.38336182 429.00299072]
[264.81997681 443.88003540]
[263.62475586 458.90783691]
[258.86721802 473.21270752]
[250.82395935 485.96295166]
[239.96260071 496.41735840]
[226.91459656 503.96804810]
[212.43853760 508.17605591]
[197.37606812 508.79675293]
[182.60287476 505.79403687]
[168.97785950 499.34249878]
[157.29318237 489.81716919]
[148.22814941 477.77191162]
[142.30978394 463.90695190]
[139.88220215 449.02844238]
[141.08651733 434.00137329]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 189]
[5 187]
[6 186]
[7 185]
[8 184]
[11 182]
[12 181]
[13 180]
[14 177]
[16 175]
[18 173]
[19 172]
[20 171]
[22 169]
[23 168]
[24 167]
[26 165]
[27 164]
[29 163]
[30 162]
[31 161]
[32 160]
[33 159]
[43 148]
[44 147]
[46 145]
[47 144]
[48 143]
[49 142]
[50 141]
[51 140]
[52 137]
[53 136]
[54 135]
[55 134]
[56 133]
[57 132]
[59 131]
[60 130]
[61 129]
[75 128]
[76 127]
[77 126]
[78 125]
[79 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
