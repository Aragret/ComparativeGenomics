%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[9.10403538 421.06765747]
[16.38213348 434.26965332]
[20.28862000 448.82998657]
[20.59637451 463.90209961]
[17.28750801 478.60974121]
[10.55439281 492.09783936]
[0.78848207 503.58218384]
[-11.44244671 512.39514160]
[-25.42730141 518.02429199]
[-40.35302353 520.14233398]
[-55.35184860 518.62622070]
[-69.55176544 513.56402588]
[-82.12721252 505.25009155]
[-92.34706879 494.16775513]
[-99.61716461 480.96136475]
[-103.51481628 466.39868164]
[-103.81343842 451.32635498]
[-100.49565887 436.62072754]
[-93.75436401 423.13671875]
[-83.98149109 411.65829468]
[-71.74522400 402.85278320]
[-57.75695801 397.23211670]
[-42.82995224 395.12307739]
[-27.83205032 396.64831543]
[-22.79513359 382.51925659]
[-17.75821686 368.39022827]
[-20.77250671 353.80383301]
[-8.85044956 343.40310669]
[-3.81353307 329.27407837]
[-6.82782269 314.68765259]
[5.09423447 304.28692627]
[10.13115025 290.15789795]
[9.05290508 287.57034302]
[8.93466282 284.39974976]
[10.00362015 281.00964355]
[12.35130882 277.83901978]
[15.91136074 275.35305786]
[21.78032112 261.54888916]
[13.97075367 248.89390564]
[15.12409496 233.88945007]
[25.00700188 222.30577087]
[39.98888397 218.72116089]
[45.85784531 204.91699219]
[51.72680664 191.11280823]
[50.80278015 186.42716980]
[52.81243515 181.11131287]
[57.98150253 176.98915100]
[64.25885773 163.36582947]
[70.53622437 149.74250793]
[76.81358337 136.11920166]
[82.78514862 122.35909271]
[88.44792938 108.46907043]
[86.73600006 94.59243774]
[97.66204071 85.86814117]
[103.32482910 71.97811890]
[108.98761749 58.08808899]
[107.03269196 42.38812637]
[119.00222778 33.52362823]
[124.66501617 19.63360214]
[127.11074829 4.83433199]
[126.21792603 -10.13907433]
[125.32511139 -25.11248016]
[116.78012848 -38.42765427]
[123.74617004 -51.59289169]
[122.85335541 -66.56629944]
[121.96054077 -81.53970337]
[107.90676880 -87.39231110]
[97.82880402 -98.72022247]
[93.68552399 -113.24101257]
[96.24722290 -128.05987549]
[104.95301819 -140.24668884]
[118.03258514 -147.41540527]
[117.13977051 -162.38882446]
[116.24695587 -177.36222839]
[112.93106079 -183.08204651]
[112.99235535 -188.76477051]
[115.55722046 -192.79347229]
[115.11061859 -207.78681946]
[114.66400909 -222.78016663]
[114.21740723 -237.77351379]
[113.77079773 -252.76687622]
[113.32419586 -267.76022339]
[110.91205597 -271.37069702]
[109.87826538 -275.17803955]
[110.11545563 -278.72473145]
[111.37870789 -281.63519287]
[113.32419586 -283.65344238]
[113.77079773 -298.64678955]
[114.21740723 -313.64013672]
[114.66400909 -328.63348389]
[114.99898529 -343.62973022]
[115.22231293 -358.62808228]
[115.44564056 -373.62640381]
[115.66896820 -388.62475586]
[115.89229584 -403.62307739]
[101.41448975 -407.90042114]
[88.62818146 -415.92620850]
[78.48220825 -427.10482788]
[71.72946167 -440.60678101]
[68.87104034 -455.43014526]
[70.11906433 -470.47491455]
[75.38092041 -484.62466431]
[84.26614380 -496.82940674]
[96.11538696 -506.18344116]
[110.04935455 -511.99264526]
[125.03406525 -513.82598877]
[139.95755005 -511.54730225]
[153.71238708 -505.32580566]
[165.27787781 -495.62313843]
[173.79577637 -483.15927124]
[178.63400269 -468.85910034]
[179.43353271 -453.78384399]
[176.13504028 -439.05218506]
[168.98327637 -425.75726318]
[158.50897217 -414.88565063]
[145.48937988 -407.24414062]
[130.89064026 -403.39974976]
[130.66731262 -388.40142822]
[130.44398499 -373.40307617]
[130.22065735 -358.40475464]
[129.99732971 -343.40640259]
[133.04089355 -336.67153931]
[129.65736389 -328.18688965]
[129.21075439 -313.19351196]
[128.76414490 -298.20016479]
[128.31755066 -283.20681763]
[128.31755066 -268.20681763]
[128.76414490 -253.21347046]
[129.21075439 -238.22012329]
[129.65736389 -223.22677612]
[130.10397339 -208.23342896]
[130.55056763 -193.24008179]
[131.22035217 -178.25503540]
[132.11317444 -163.28163147]
[133.00599670 -148.30822754]
[146.84474182 -142.74456787]
[156.93702698 -131.67861938]
[161.24151611 -117.26915741]
[158.85311890 -102.35890198]
[150.19265747 -89.91368103]
[136.93394470 -82.43251801]
[137.82676697 -67.45911407]
[138.71957397 -52.48570633]
[147.20069885 -40.24153137]
[140.29852295 -26.00529480]
[141.19132996 -11.03188992]
[142.08415222 3.94151592]
[147.93324280 -9.87108994]
[156.33122253 -22.29985046]
[166.96409607 -32.88010788]
[179.43437195 -41.21631241]
[193.27583313 -46.99680710]
[207.97099304 -50.00548172]
[222.97047424 -50.12985992]
[237.71351624 -47.36529160]
[251.64892578 -41.81512833]
[264.25573730 -33.68686676]
[275.06259155 -23.28439140]
[283.66552734 -10.99660587]
[289.74285889 2.71710420]
[293.06744385 17.34403992]
[293.51492310 32.33736420]
[291.06863403 47.13653946]
[285.81997681 61.18828583]
[277.96517944 73.96726990]
[267.79794312 84.99574280]
[255.69834900 93.86139679]
[242.11875916 100.23278046]
[227.56683350 103.87168884]
[212.58663940 104.64208984]
[197.73818970 102.51518250]
[183.57662964 97.57047272]
[170.63139343 89.99282074]
[159.38642883 80.06553650]
[150.26217651 68.15974426]
[143.59971619 54.72056580]
[139.64814758 40.25041962]
[138.55503845 25.29638863]
[132.89225769 39.18641663]
[135.25222778 53.89287186]
[122.87763977 63.75087738]
[117.21485138 77.64090729]
[111.55207062 91.53092957]
[113.26399994 105.40756226]
[102.33795929 114.13185883]
[96.67517090 128.02188110]
[97.38713837 133.19297791]
[96.16643524 137.67216492]
[93.60025787 140.83915710]
[90.43689728 142.39656067]
[84.15953827 156.01988220]
[77.88217926 169.64318848]
[71.60482025 183.26651001]
[65.53098297 196.98178101]
[59.66202164 210.78594971]
[53.79306030 224.59013367]
[61.60643387 237.86631775]
[60.12152863 253.02047729]
[50.11637878 264.26150513]
[35.58449936 267.41784668]
[29.71553802 281.22201538]
[24.26017952 295.19482422]
[19.22326469 309.32385254]
[21.87727928 324.92086792]
[10.31549644 334.31100464]
[5.27858019 348.44003296]
[7.93259573 364.03704834]
[-3.62918758 373.42715454]
[-8.66610336 387.55618286]
[-13.70302010 401.68521118]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 210]
[25 209]
[26 208]
[28 206]
[29 205]
[31 203]
[32 202]
[37 201]
[38 200]
[42 196]
[43 195]
[44 194]
[47 193]
[48 192]
[49 191]
[50 190]
[51 186]
[52 185]
[54 183]
[55 182]
[56 181]
[58 179]
[59 178]
[60 147]
[61 146]
[62 145]
[64 143]
[65 142]
[66 141]
[72 135]
[73 134]
[74 133]
[77 132]
[78 131]
[79 130]
[80 129]
[81 128]
[82 127]
[87 126]
[88 125]
[89 124]
[90 123]
[91 121]
[92 120]
[93 119]
[94 118]
[95 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
