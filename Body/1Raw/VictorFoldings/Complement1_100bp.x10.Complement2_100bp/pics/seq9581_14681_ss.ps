%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[83.49607849 562.36627197]
[68.71356201 565.01452637]
[53.72157288 565.89587402]
[38.73058319 564.99780273]
[23.95103645 562.33294678]
[9.59041691 557.93878174]
[-4.14967537 551.87689209]
[-17.07635117 544.23242188]
[-29.00813866 535.11273193]
[-39.77753448 524.64581299]
[-49.23335648 512.97863770]
[-57.24285507 500.27490234]
[-63.69359207 486.71304321]
[-68.49501038 472.48339844]
[-71.57969666 457.78573608]
[-72.90435791 442.82641602]
[-72.45039368 427.81539917]
[-70.22418213 412.96347046]
[-66.25696564 398.47906494]
[-60.60444260 384.56558228]
[-53.34596634 371.41830444]
[-44.58343506 359.22180176]
[-34.43986130 348.14730835]
[-23.05764008 338.35031128]
[-10.59656620 329.96829224]
[2.76843023 323.11898804]
[16.84972382 317.89849854]
[31.44963455 314.38012695]
[46.36320496 312.61325073]
[61.38106918 312.62271118]
[63.16353607 297.72900391]
[64.94599915 282.83526611]
[66.72846985 267.94155884]
[68.51093292 253.04785156]
[66.63079834 250.06498718]
[66.10203552 246.02326965]
[67.40656281 241.56776428]
[70.72000122 237.53439331]
[65.16140747 223.71588135]
[75.04526520 211.36192322]
[69.48666382 197.54342651]
[79.37052155 185.18946838]
[81.81625366 170.39019775]
[84.26197815 155.59092712]
[86.70770264 140.79165649]
[88.93282318 125.95761871]
[90.93683624 111.09209442]
[85.80446625 98.08631134]
[94.19763184 86.90389252]
[96.20164490 72.03836823]
[87.10379791 83.96434784]
[74.35035706 91.86053467]
[59.61925888 94.68804169]
[44.84863663 92.07485962]
[31.98181534 84.36480713]
[22.71165085 72.57226562]
[18.25779152 58.24874878]
[19.20621681 43.27876282]
[25.43214798 29.63186455]
[36.11645508 19.10354233]
[49.85343170 13.07897472]
[64.83574677 12.35079765]
[79.09221649 17.01481628]
[90.74716187 26.45739746]
[98.26716614 39.43620682]
[100.66279602 54.24604416]
[105.90950775 40.19356918]
[98.94501495 28.66489410]
[99.87835693 15.42331886]
[108.14529419 5.28725052]
[120.55404663 1.81561708]
[126.00940704 -12.15718079]
[131.46476746 -26.12997818]
[136.92012024 -40.10277557]
[142.37547302 -54.07557297]
[147.83084106 -68.04837036]
[133.25453186 -64.50841522]
[121.30574036 -73.57629395]
[120.79267883 -88.56752014]
[132.09355164 -98.43110657]
[146.87776184 -95.89599609]
[154.24684143 -82.83261108]
[160.72634888 -96.36096191]
[167.20584106 -109.88930511]
[173.68533325 -123.41764832]
[180.06393433 -136.99385071]
[186.34130859 -150.61717224]
[192.61866760 -164.24049377]
[198.89602661 -177.86380005]
[205.17338562 -191.48712158]
[192.25579834 -199.13825989]
[180.19337463 -208.07705688]
[169.11401367 -218.20877075]
[159.13513184 -229.42599487]
[150.36251831 -241.60980225]
[142.88919067 -254.63107300]
[136.79434204 -268.35174561]
[132.14259338 -282.62637329]
[128.98324585 -297.30364990]
[127.34980774 -312.22799683]
[127.25958252 -327.24118042]
[128.71353149 -342.18408203]
[131.69624329 -356.89828491]
[136.17608643 -371.22778320]
[142.10559082 -385.02072144]
[149.42189026 -398.13085938]
[158.04742432 -410.41925049]
[167.89076233 -421.75558472]
[178.84756470 -432.01974487]
[190.80166626 -441.10287476]
[203.62637329 -448.90869141]
[217.18571472 -455.35449219]
[231.33595276 -460.37191772]
[245.92710876 -463.90780640]
[260.80447388 -465.92462158]
[275.81039429 -466.40103149]
[290.78573608 -465.33197021]
[305.57177734 -462.72879028]
[320.01181030 -458.61904907]
[333.95272827 -453.04632568]
[347.24673462 -446.06973267]
[359.75292969 -437.76315308]
[371.33874512 -428.21472168]
[381.88134766 -417.52557373]
[391.26901245 -405.80911255]
[399.40219116 -393.18945312]
[406.19467163 -379.80041504]
[411.57443237 -365.78393555]
[415.48449707 -351.28857422]
[417.88339233 -336.46798706]
[418.74566650 -321.47930908]
[418.06222534 -306.48141479]
[415.84027100 -291.63330078]
[412.10336304 -277.09231567]
[406.89111328 -263.01266479]
[400.25878906 -249.54357910]
[392.27670288 -236.82783508]
[383.02947998 -225.00021362]
[372.61508179 -214.18611145]
[361.14398193 -204.50016785]
[348.73773193 -196.04504395]
[335.52786255 -188.91036987]
[321.65441895 -183.17179871]
[307.26443481 -178.89013672]
[292.51049805 -176.11077881]
[277.54895020 -174.86318970]
[262.53845215 -175.16059875]
[247.63806152 -176.99984741]
[233.00578308 -180.36145020]
[218.79670715 -185.20976257]
[212.51933289 -171.58644104]
[206.24197388 -157.96313477]
[199.96461487 -144.33981323]
[193.68725586 -130.71649170]
[193.74304199 -123.32604980]
[187.21368408 -116.93815613]
[180.73419189 -103.40981293]
[174.25468445 -89.88146210]
[167.77519226 -76.35311890]
[161.80363464 -62.59301376]
[156.34828186 -48.62021637]
[150.89291382 -34.64741898]
[145.43756104 -20.67462158]
[139.98220825 -6.70182371]
[134.52684021 7.27097416]
[141.93142700 22.37100220]
[136.00730896 38.47130203]
[119.96198273 45.44028854]
[114.71526337 59.49275970]
[111.06717682 74.04238129]
[109.06316376 88.90790558]
[114.19553375 101.91368866]
[105.80236816 113.09610748]
[103.79835510 127.96163177]
[105.95210266 134.21246338]
[104.79888153 139.77726746]
[101.50698090 143.23739624]
[99.06124878 158.03666687]
[96.61552429 172.83593750]
[94.16979218 187.63520813]
[99.55345917 202.51225281]
[89.84453583 213.80766296]
[95.22819519 228.68470764]
[85.51927185 239.98011780]
[83.40464783 254.83030701]
[81.62218475 269.72402954]
[79.83972168 284.61773682]
[78.05725098 299.51147461]
[76.27478790 314.40518188]
[90.87075806 317.93988037]
[104.94620514 323.17611694]
[118.30352783 330.04037476]
[130.75521851 338.43630981]
[142.12648010 348.24606323]
[152.25765991 359.33187866]
[161.00654602 371.53814697]
[168.25032043 384.69354248]
[173.88726807 398.61334229]
[177.83828735 413.10217285]
[180.04789734 427.95660400]
[180.48506165 442.96810913]
[179.14367676 457.92593384]
[176.04254150 472.62014771]
[171.22521973 486.84439087]
[164.75932312 500.39904785]
[156.73562622 513.09381104]
[147.26675415 524.75042725]
[136.48565674 535.20532227]
[124.54368591 544.31164551]
[111.60846710 551.94158936]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 189]
[31 188]
[32 187]
[33 186]
[34 185]
[38 184]
[40 182]
[42 180]
[43 179]
[44 178]
[45 177]
[46 174]
[47 173]
[49 171]
[50 170]
[66 169]
[67 168]
[71 165]
[72 164]
[73 163]
[74 162]
[75 161]
[76 160]
[82 159]
[83 158]
[84 157]
[85 156]
[86 154]
[87 153]
[88 152]
[89 151]
[90 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
