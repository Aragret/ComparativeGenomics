%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUUxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[184.30517578 427.00799561]
[192.35371399 414.24539185]
[203.43185425 404.00152588]
[216.78428650 396.97479248]
[213.46203613 382.34732056]
[210.13977051 367.71987915]
[206.81752014 353.09240723]
[203.49525452 338.46493530]
[198.88124084 324.19219971]
[193.01228333 310.38803101]
[180.91209412 301.70272827]
[182.63304138 285.97540283]
[176.76408386 272.17123413]
[170.89512634 258.36703491]
[165.02616882 244.56286621]
[149.17475891 238.94401550]
[142.15345764 223.29101562]
[148.75273132 207.09011841]
[142.67889404 193.37484741]
[136.60505676 179.65959167]
[130.53121948 165.94432068]
[123.55277252 152.66647339]
[115.70101929 139.88563538]
[107.84925842 127.10478973]
[99.99750519 114.32394409]
[87.79519653 107.49787140]
[87.22164917 93.52780914]
[79.36989594 80.74697113]
[75.48046112 78.81661224]
[72.68841553 76.02931976]
[71.12839508 72.83530426]
[70.77500153 69.68225861]
[71.45747375 66.96336365]
[64.38036346 53.73783875]
[57.30326080 40.51231003]
[50.22615433 27.28678322]
[33.78709793 29.85585976]
[17.48711395 26.64656258]
[3.29286671 18.06402397]
[-7.08918715 5.16059446]
[-12.41794395 -10.49316216]
[-12.06599712 -26.99962807]
[-6.09346151 -42.36416245]
[4.76142216 -54.73613739]
[-2.70631909 -67.74509430]
[-10.17405987 -80.75404358]
[-17.64180183 -93.76299286]
[-25.10954285 -106.77194977]
[-32.57728195 -119.78089905]
[-40.14166260 -132.73390198]
[-47.80226135 -145.63023376]
[-46.65927505 -130.67384338]
[-49.08019638 -115.87049103]
[-54.92810822 -102.05738068]
[-63.87228012 -90.01570892]
[-75.40688324 -80.42649841]
[-88.87957001 -73.83205414]
[-103.52839661 -70.60533142]
[-118.52490997 -70.92881775]
[-133.02098083 -74.78421021]
[-146.19677734 -81.95347595]
[-157.30715942 -92.03115082]
[-165.72375488 -104.44729614]
[-170.97059631 -118.49972534]
[-172.75093079 -133.39369202]
[-170.96408081 -148.28688049]
[-165.71109009 -162.33702087]
[-157.28904724 -174.74948120]
[-146.17425537 -184.82229614]
[-132.99533081 -191.98577881]
[-118.49757385 -195.83483887]
[-103.50092316 -196.15174866]
[-88.85350800 -192.91860962]
[-75.38370514 -186.31826782]
[-63.85330200 -176.72401428]
[-54.91386795 -164.67750549]
[-57.57966232 -179.43872070]
[-60.24546051 -194.19993591]
[-62.91125488 -208.96115112]
[-65.57704926 -223.72236633]
[-68.24284363 -238.48358154]
[-83.27642822 -238.28054810]
[-98.13836670 -240.55488586]
[-112.42321777 -245.24455261]
[-125.74127960 -252.22158813]
[-137.72923279 -261.29568481]
[-148.06001282 -272.21926880]
[-156.45182800 -284.69433594]
[-162.67570496 -298.38058472]
[-166.56187439 -312.90460205]
[-168.00430298 -327.87020874]
[-166.96365356 -342.86911011]
[-163.46832275 -357.49212646]
[-157.61363220 -371.34030151]
[-149.55934143 -384.03591919]
[-139.52516174 -395.23257446]
[-127.78482819 -404.62481689]
[-114.65862274 -411.95645142]
[-100.50465393 -417.02743530]
[-85.70903778 -419.69943237]
[-70.67541504 -419.89956665]
[-55.81391144 -417.62237549]
[-41.52996445 -412.92996216]
[-28.21324730 -405.95034790]
[-16.22705078 -396.87396240]
[-5.89836502 -385.94839478]
[2.49103379 -373.47171021]
[8.71227741 -359.78427124]
[12.59564495 -345.25949097]
[14.03519726 -330.29360962]
[12.99166012 -315.29489136]
[9.49350357 -300.67257690]
[3.63615847 -286.82550049]
[-4.42058134 -274.13143921]
[-14.45692253 -262.93673706]
[-26.19906616 -253.54673767]
[-39.32667923 -246.21763611]
[-53.48162842 -241.14938354]
[-50.81583405 -226.38816833]
[-48.15003967 -211.62695312]
[-45.48424149 -196.86572266]
[-42.81844711 -182.10450745]
[-40.15265274 -167.34329224]
[-34.90593338 -153.29081726]
[-27.24533653 -140.39450073]
[-21.12667656 -136.24916077]
[-19.56833076 -127.24864197]
[-12.10058975 -114.23969269]
[-4.63284922 -101.23073578]
[2.83489203 -88.22178650]
[10.30263329 -75.21282959]
[17.77037430 -62.20388031]
[30.90370178 -65.18905640]
[44.36292267 -64.35354614]
[57.05783081 -59.75553894]
[67.95746613 -51.75837708]
[76.17381287 -41.00184631]
[81.03419495 -28.35101509]
[82.13627625 -14.82666397]
[79.38140869 -1.52290928]
[72.98333740 10.48129654]
[63.45168304 20.20967865]
[70.52878571 33.43520355]
[77.60589600 46.66073227]
[84.68299866 59.88626099]
[92.15074158 72.89521027]
[100.00249481 85.67605591]
[112.20480347 92.50212860]
[112.77835083 106.47219086]
[120.63010406 119.25302887]
[128.48185730 132.03387451]
[136.33361816 144.81471252]
[138.11795044 129.92121887]
[147.58874512 118.28919983]
[161.81137085 113.52294159]
[176.37876892 117.09934235]
[186.77709961 127.91020203]
[189.78431702 142.60566711]
[184.46859741 156.63218689]
[172.47708130 165.64347839]
[157.52546692 166.84732056]
[144.24649048 159.87048340]
[150.32032776 173.58575439]
[156.39416504 187.30102539]
[162.46798706 201.01628113]
[175.50778198 204.38946533]
[184.09855652 214.50920105]
[185.27484131 227.53604126]
[178.83033752 238.69390869]
[184.69931030 252.49809265]
[190.56826782 266.30227661]
[196.43722534 280.10644531]
[208.95721436 289.77911377]
[206.81646729 304.51907349]
[212.68542480 318.32324219]
[215.23403931 303.54135132]
[223.87327576 291.27905273]
[236.93501282 283.90405273]
[251.89724731 282.84030151]
[265.87100220 288.29321289]
[276.15817261 299.20989990]
[280.77243042 313.48254395]
[278.82287598 328.35531616]
[270.68594360 340.95651245]
[257.93270874 348.85302734]
[243.02563477 350.52020264]
[228.84306335 345.63607788]
[218.12271118 335.14270020]
[221.44497681 349.77014160]
[224.76722717 364.39761353]
[228.08949280 379.02505493]
[231.41175842 393.65252686]
[246.48948669 394.22207642]
[260.90576172 398.67553711]
[273.67767334 406.70928955]
[283.93435669 417.77554321]
[290.97656250 431.11984253]
[294.32409668 445.83227539]
[293.74874878 460.90979004]
[289.28970337 475.32437134]
[281.25103760 488.09313965]
[270.18081665 498.34558105]
[256.83380127 505.38262939]
[242.12005615 508.72448730]
[227.04277039 508.14331055]
[212.62992859 503.67871094]
[199.86424255 495.63510132]
[189.61608887 484.56091309]
[182.58419800 471.21118164]
[179.24801636 456.49615479]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 192]
[5 191]
[6 190]
[7 189]
[8 188]
[9 175]
[10 174]
[12 172]
[13 171]
[14 170]
[15 169]
[18 165]
[19 164]
[20 163]
[21 162]
[22 152]
[23 151]
[24 150]
[25 149]
[27 147]
[28 146]
[33 145]
[34 144]
[35 143]
[36 142]
[44 132]
[45 131]
[46 130]
[47 129]
[48 128]
[49 127]
[50 125]
[51 124]
[76 123]
[77 122]
[78 121]
[79 120]
[80 119]
[81 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
