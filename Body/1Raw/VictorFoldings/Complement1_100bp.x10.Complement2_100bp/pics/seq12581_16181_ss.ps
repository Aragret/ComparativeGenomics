%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[143.41275024 497.35311890]
[136.31219482 484.13192749]
[130.23187256 470.41162109]
[125.20662689 456.27075195]
[121.26523590 441.79031372]
[118.43027496 427.05328369]
[116.71797943 412.14404297]
[116.13816833 397.14801025]
[116.69415283 382.15106201]
[118.38275146 367.23910522]
[121.19429779 352.49758911]
[125.11267090 338.01092529]
[130.11544800 323.86206055]
[136.17395020 310.13211060]
[143.25349426 296.89965820]
[151.31352234 284.24053955]
[160.30786133 272.22726440]
[170.18499756 260.92861938]
[180.88836670 250.40931702]
[192.35662842 240.72962952]
[183.57601929 228.56817627]
[169.85269165 222.77857971]
[168.04756165 207.06068420]
[159.26695251 194.89923096]
[150.48635864 182.73777771]
[136.76303101 176.94818115]
[134.95788574 161.23028564]
[126.17729187 149.06883240]
[117.39668274 136.90737915]
[108.61608124 124.74591827]
[99.83547974 112.58446503]
[90.78547668 100.62212372]
[81.47059631 88.86487579]
[73.68857574 84.08177948]
[72.10611725 76.86252594]
[62.96731567 64.96789551]
[53.82851028 53.07326126]
[44.68970871 41.17862701]
[34.09983826 42.47417068]
[24.00460625 39.28146362]
[16.20536041 32.24048996]
[12.06448174 22.67147255]
[12.26764584 12.32767487]
[16.71118164 3.07424498]
[8.11261845 -9.21659279]
[-0.48594558 -21.50743103]
[-9.08450985 -33.79826736]
[-17.68307304 -46.08910751]
[-26.28163719 -58.37994385]
[-39.27407074 -50.86475372]
[-52.86445618 -44.49428558]
[-66.95217133 -39.31570816]
[-81.43292236 -35.36735535]
[-96.19947815 -32.67846298]
[-111.14252472 -31.26894379]
[-126.15142822 -31.14922714]
[-141.11506653 -32.32020187]
[-155.92263794 -34.77320099]
[-170.46452332 -38.49005508]
[-184.63305664 -43.44325638]
[-198.32331848 -49.59612274]
[-211.43399048 -56.90310669]
[-223.86796570 -65.31010437]
[-235.53320312 -74.75487518]
[-246.34333801 -85.16748810]
[-256.21832275 -96.47085571]
[-265.08505249 -108.58128357]
[-272.87786865 -121.40911865]
[-279.53909302 -134.85937500]
[-285.01940918 -148.83248901]
[-289.27822876 -163.22497559]
[-292.28402710 -177.93031311]
[-294.01452637 -192.83958435]
[-294.45693970 -207.84245300]
[-293.60800171 -222.82780457]
[-291.47399902 -237.68469238]
[-288.07067871 -252.30314636]
[-283.42327881 -266.57489014]
[-277.56622314 -280.39431763]
[-270.54284668 -293.65905762]
[-262.40515137 -306.27093506]
[-253.21340942 -318.13656616]
[-243.03564453 -329.16812134]
[-231.94723511 -339.28387451]
[-220.03025818 -348.40896606]
[-207.37297058 -356.47579956]
[-194.06904602 -363.42471313]
[-180.21702576 -369.20422363]
[-165.91943359 -373.77154541]
[-151.28213501 -377.09283447]
[-136.41351318 -379.14352417]
[-121.42362976 -379.90847778]
[-106.42349243 -379.38192749]
[-91.52413940 -377.56787109]
[-76.83589935 -374.47970581]
[-62.46750259 -370.14025879]
[-48.52533722 -364.58169556]
[-35.11263275 -357.84518433]
[-22.32868576 -349.98056030]
[-10.26815033 -341.04608154]
[0.97968006 -331.10787964]
[11.33153057 -320.23956299]
[20.71075630 -308.52154541]
[29.04791832 -296.04064941]
[36.28128815 -282.88922119]
[42.35731506 -269.16467285]
[47.23100662 -254.96859741]
[50.86628342 -240.40611267]
[53.23623276 -225.58502197]
[54.32330704 -210.61505127]
[54.11945343 -195.60705566]
[52.62618256 -180.67214966]
[49.85455704 -165.92089844]
[45.82508850 -151.46250916]
[40.56761551 -137.40405273]
[34.12105942 -123.84958649]
[26.53315353 -110.89948273]
[17.86007500 -98.64962006]
[8.16603661 -87.19069672]
[-2.47718787 -76.60753632]
[-13.99079990 -66.97850800]
[-5.39223576 -54.68767166]
[3.20632839 -42.39683151]
[11.80489254 -30.10599518]
[20.40345573 -17.81515694]
[29.00201988 -5.52431917]
[48.38289642 -3.55051827]
[60.24673080 12.28466415]
[56.58434296 32.03982544]
[65.72314453 43.93445587]
[74.86194611 55.82909012]
[84.00074768 67.72372437]
[93.22784424 79.54999542]
[102.54273224 91.30724335]
[106.27196503 92.28968048]
[109.55004883 94.91113281]
[111.65469360 98.93326569]
[111.99693298 103.80386353]
[120.77753448 115.96531677]
[129.55813599 128.12677002]
[138.33874512 140.28822327]
[147.11935425 152.44967651]
[161.47071838 159.10914612]
[162.64781189 173.95716858]
[171.42842102 186.11862183]
[180.20901489 198.28009033]
[194.56039429 204.93955994]
[195.73748779 219.78756714]
[204.51808167 231.94903564]
[217.31481934 224.10931396]
[230.66780090 217.25985718]
[244.50057983 211.43989563]
[258.73388672 206.68276978]
[273.28619385 203.01571655]
[288.07418823 200.45974731]
[303.01312256 199.02949524]
[318.01742554 198.73316956]
[333.00119019 199.57244873]
[347.87857056 201.54252625]
[362.56433105 204.63214111]
[376.97436523 208.82356262]
[391.02615356 214.09281921]
[404.63916016 220.40969849]
[417.73547363 227.73802185]
[430.24002075 236.03582764]
[442.08120728 245.25558472]
[453.19119263 255.34446716]
[463.50634766 266.24468994]
[472.96759033 277.89382935]
[481.52072144 290.22512817]
[489.11672974 303.16799927]
[495.71215820 316.64828491]
[501.26916504 330.58877563]
[505.75595093 344.90960693]
[509.14682007 359.52874756]
[511.42236328 374.36245728]
[512.56951904 389.32580566]
[512.58172607 404.33303833]
[511.45886230 419.29821777]
[509.20745850 434.13562012]
[505.84036255 448.76025391]
[501.37686157 463.08834839]
[495.84249878 477.03784180]
[489.26901245 490.52883911]
[481.69403076 503.48403931]
[473.16098022 515.82922363]
[463.71868896 527.49371338]
[453.42126465 538.41070557]
[442.32766724 548.51763916]
[430.50149536 557.75665283]
[418.01043701 566.07476807]
[404.92608643 573.42437744]
[391.32333374 579.76336670]
[377.28015137 585.05541992]
[362.87695312 589.27026367]
[348.19622803 592.38378906]
[333.32208252 594.37805176]
[318.33969116 595.24163818]
[303.33493042 594.96972656]
[288.39367676 593.56378174]
[273.60156250 591.03186035]
[259.04330444 587.38842773]
[244.80227661 582.65441895]
[230.96006775 576.85699463]
[217.59596252 570.02923584]
[204.78649902 562.21032715]
[192.60507202 553.44506836]
[181.12142944 543.78363037]
[170.40138245 533.28131104]
[160.50630188 521.99841309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 149]
[21 148]
[23 146]
[24 145]
[25 144]
[27 142]
[28 141]
[29 140]
[30 139]
[31 138]
[32 134]
[33 133]
[35 132]
[36 131]
[37 130]
[38 129]
[44 126]
[45 125]
[46 124]
[47 123]
[48 122]
[49 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
