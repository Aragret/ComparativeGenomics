%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUAxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[30.25738335 355.92785645]
[38.18534088 368.71310425]
[43.62880707 382.73748779]
[46.40237808 397.52334595]
[46.41159058 412.56710815]
[43.65612793 427.35635376]
[38.22983932 441.38739014]
[30.31754684 454.18234253]
[20.18873787 465.30535889]
[8.18839359 474.37765503]
[-5.27475643 481.09017944]
[-19.74216270 485.21435547]
[-34.72106934 486.60971069]
[-49.70130539 485.22866821]
[-64.17264557 481.11831665]
[-77.64219666 474.41864014]
[-89.65119934 465.35781860]
[-99.79062653 454.24447632]
[-107.71514130 441.45709229]
[-113.15482330 427.43124390]
[-115.92440796 412.64462280]
[-115.92956543 397.60086060]
[-113.17012024 382.81234741]
[-107.74005127 368.78277588]
[-99.82431030 355.98999023]
[-89.69250488 344.86968994]
[-77.68971252 335.80062866]
[-64.22475433 329.09170532]
[-49.75623703 324.97143555]
[-34.77695465 323.58013916]
[-19.79709244 324.96520996]
[-5.32686234 329.07946777]
[1.35333240 315.64907837]
[8.03352737 302.21871948]
[14.31088734 288.59539795]
[20.17984772 274.79122925]
[26.04880905 260.98703003]
[22.98464584 243.70764160]
[37.78888702 232.75701904]
[43.45167160 218.86698914]
[49.11445999 204.97697449]
[54.77724457 191.08694458]
[52.41728210 176.38049316]
[64.79186249 166.52247620]
[62.43189621 151.81602478]
[74.80648041 141.95802307]
[72.44651794 127.25156403]
[84.82109833 117.39356232]
[90.48388672 103.50353241]
[90.36888123 95.44379425]
[96.33576965 89.44987488]
[102.20472717 75.64569855]
[94.39135742 62.36949921]
[95.87625885 47.21534348]
[105.88140869 35.97430420]
[120.41329193 32.81797028]
[126.28224945 19.01379395]
[132.15121460 5.20961761]
[138.02017212 -8.59455872]
[143.88912964 -22.39873695]
[149.55192566 -36.28876114]
[155.00727844 -50.26156235]
[160.46263123 -64.23435974]
[158.27418518 -79.90347290]
[170.11041260 -88.94519806]
[175.46159363 -102.95822144]
[180.70831299 -117.01069641]
[178.28681946 -132.64549255]
[189.98712158 -141.86244202]
[195.23384094 -155.91490173]
[200.48056030 -169.96737671]
[205.72727966 -184.01985168]
[192.06016541 -190.21556091]
[178.84773254 -197.32951355]
[166.15156555 -205.32853699]
[154.03088379 -214.17532349]
[142.54219055 -223.82864380]
[131.73902893 -234.24346924]
[121.67180634 -245.37126160]
[112.38743591 -257.16012573]
[103.92922211 -269.55508423]
[96.33658600 -282.49838257]
[89.64493561 -295.92962646]
[83.88546753 -309.78622437]
[79.08503723 -324.00357056]
[75.26602936 -338.51535034]
[72.44625092 -353.25393677]
[70.63883972 -368.15057373]
[69.85223389 -383.13583374]
[70.09010315 -398.13983154]
[71.35131836 -413.09262085]
[73.63002014 -427.92449951]
[76.91557312 -442.56628418]
[81.19266510 -456.94970703]
[86.44135284 -471.00775146]
[92.63716125 -484.67480469]
[99.75119781 -497.88720703]
[107.75029755 -510.58328247]
[116.59717560 -522.70391846]
[126.25056458 -534.19256592]
[136.66546631 -544.99566650]
[147.79331970 -555.06280518]
[159.58224487 -564.34710693]
[171.97727966 -572.80523682]
[184.92060852 -580.39776611]
[198.35191345 -587.08935547]
[212.20854187 -592.84869385]
[226.42591858 -597.64904785]
[240.93772888 -601.46795654]
[255.67631531 -604.28759766]
[270.57296753 -606.09490967]
[285.55822754 -606.88146973]
[300.56225586 -606.64349365]
[315.51501465 -605.38214111]
[330.34689331 -603.10333252]
[344.98864746 -599.81768799]
[359.37203979 -595.54052734]
[373.43002319 -590.29174805]
[387.09707642 -584.09582520]
[400.30941772 -576.98168945]
[413.00546265 -568.98254395]
[425.12603760 -560.13555908]
[436.61459351 -550.48211670]
[447.41760254 -540.06713867]
[457.48468018 -528.93920898]
[466.76889038 -517.15020752]
[475.22695923 -504.75512695]
[482.81939697 -491.81173706]
[489.51089478 -478.38040161]
[495.27017212 -464.52374268]
[500.07040405 -450.30633545]
[503.88922119 -435.79449463]
[506.70880127 -421.05587769]
[508.51599121 -406.15921021]
[509.30239868 -391.17395020]
[509.06433105 -376.16995239]
[507.80291748 -361.21716309]
[505.52401733 -346.38531494]
[502.23828125 -331.74359131]
[497.96099854 -317.36019897]
[492.71212769 -303.30224609]
[486.51611328 -289.63525391]
[479.40191650 -276.42297363]
[471.40261841 -263.72698975]
[462.55560303 -251.60646057]
[452.90203857 -240.11796570]
[442.48699951 -229.31501770]
[431.35900879 -219.24801636]
[419.56997681 -209.96388245]
[407.17483521 -201.50592041]
[394.23138428 -193.91354370]
[380.79998779 -187.22215271]
[366.94329834 -181.46296692]
[352.72586060 -176.66282654]
[338.21398926 -172.84411621]
[323.47537231 -170.02462769]
[308.57867432 -168.21752930]
[293.59341431 -167.43121338]
[278.58941650 -167.66938782]
[263.63662720 -168.93090820]
[248.80480957 -171.20989990]
[234.16310120 -174.49575806]
[219.77973938 -178.77313232]
[214.53303528 -164.72065735]
[209.28631592 -150.66819763]
[204.03959656 -136.61572266]
[206.83638000 -121.98604584]
[194.76078796 -111.76397705]
[189.51406860 -97.71150208]
[190.11938477 -90.34568024]
[184.08320618 -83.48984528]
[186.66188049 -68.82015228]
[174.43544006 -58.77900314]
[168.98007202 -44.80620193]
[163.52471924 -30.83340645]
[164.58784485 -26.17735481]
[162.73735046 -20.80402184]
[157.69331360 -16.52977562]
[151.82435608 -2.72559834]
[145.95538330 11.07857895]
[140.08642578 24.88275528]
[134.21746826 38.68693161]
[142.02703857 51.34191895]
[140.87368774 66.34637451]
[130.99078369 77.93005371]
[116.00890350 81.51465607]
[110.13994598 95.31883240]
[104.37390900 109.16632080]
[98.71112823 123.05634308]
[100.66604614 138.75630188]
[88.69651031 147.62080383]
[90.65143585 163.32077026]
[78.68189240 172.18527222]
[80.63681793 187.88522339]
[68.66727448 196.74972534]
[63.00448608 210.63975525]
[57.34170151 224.52978516]
[51.67891312 238.41981506]
[55.95277405 250.58930969]
[50.95027161 262.04177856]
[39.85298538 266.85601807]
[33.98402405 280.66018677]
[28.11506462 294.46435547]
[28.79486847 298.75292969]
[28.14044380 302.64346313]
[26.44075966 305.76541138]
[24.07543945 307.88006592]
[21.46390343 308.89889526]
[14.78370857 322.32928467]
[8.10351372 335.75967407]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 210]
[33 209]
[34 208]
[35 203]
[36 202]
[37 201]
[39 198]
[40 197]
[41 196]
[42 195]
[44 193]
[46 191]
[48 189]
[49 188]
[51 187]
[52 186]
[56 182]
[57 181]
[58 180]
[59 179]
[60 178]
[61 175]
[62 174]
[63 173]
[65 171]
[66 169]
[67 168]
[69 166]
[70 165]
[71 164]
[72 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
