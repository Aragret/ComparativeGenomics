%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[98.98066711 243.84957886]
[104.10417938 258.01162720]
[106.06303406 272.94406128]
[104.76560974 287.94839478]
[100.27259827 302.32293701]
[92.79413605 315.39529419]
[82.68001556 326.55407715]
[70.40327454 335.27737427]
[56.53813934 341.15716553]
[41.73309326 343.91845703]
[26.68060303 343.43209839]
[12.08469582 339.72082520]
[-1.37194955 332.95822144]
[-13.05994129 323.46060181]
[-22.43261147 311.67214966]
[-29.05158234 298.14428711]
[-32.60727310 283.50970459]
[-32.93337631 268.45288086]
[-30.01464081 253.67807007]
[-23.98758316 239.87631226]
[-15.13409615 227.69313049]
[-3.86827588 217.69836426]
[9.28295612 210.35948181]
[23.70449257 206.01974487]
[38.72181320 204.88212585]
[53.63252640 206.99981689]
[58.87924576 192.94734192]
[64.12596130 178.89488220]
[69.37268066 164.84240723]
[60.78497696 148.67555237]
[66.84550476 131.06355286]
[84.14650726 123.34410095]
[88.97250366 109.14164734]
[86.43765259 95.39151001]
[96.82504272 86.03235626]
[101.65103912 71.82990265]
[106.47703552 57.62744522]
[109.47180939 42.92944336]
[110.58746338 27.97098923]
[111.70310974 13.01253510]
[112.81875610 -1.94591844]
[113.93441010 -16.90437126]
[115.05005646 -31.86282539]
[116.16570282 -46.82127762]
[101.27633667 -48.66419220]
[86.49435425 -51.22984695]
[71.85481262 -54.51216125]
[57.39244843 -58.50334930]
[43.14155197 -63.19393921]
[29.13593483 -68.57281494]
[15.40880966 -74.62720490]
[1.99273932 -81.34276581]
[-11.08045578 -88.70355225]
[-23.77976608 -96.69211578]
[-36.07507324 -105.28950500]
[-47.93721008 -114.47532654]
[-59.33803940 -124.22779846]
[-70.25052643 -134.52377319]
[-80.64878845 -145.33885193]
[-90.50814819 -156.64736938]
[-99.80523682 -168.42250061]
[-108.51799011 -180.63633728]
[-116.62575531 -193.25987244]
[-124.10929108 -206.26319885]
[-130.95085144 -219.61544800]
[-137.13420105 -233.28497314]
[-142.64468384 -247.23933411]
[-147.46922302 -261.44543457]
[-151.59638977 -275.86959839]
[-155.01637268 -290.47756958]
[-157.72106934 -305.23474121]
[-159.70407104 -320.10610962]
[-160.96066284 -335.05639648]
[-161.48788452 -350.05010986]
[-161.28445435 -365.05172729]
[-160.35087585 -380.02563477]
[-158.68936157 -394.93634033]
[-156.30386353 -409.74844360]
[-153.20001221 -424.42687988]
[-149.38517761 -438.93673706]
[-144.86842346 -453.24368286]
[-139.66046143 -467.31375122]
[-133.77363586 -481.11355591]
[-127.22190094 -494.61041260]
[-120.02080536 -507.77224731]
[-112.18743896 -520.56787109]
[-103.74037170 -532.96691895]
[-94.69963837 -544.94000244]
[-85.08668518 -556.45874023]
[-74.92431641 -567.49572754]
[-64.23662567 -578.02490234]
[-53.04897690 -588.02117920]
[-41.38789749 -597.46093750]
[-29.28104591 -606.32171631]
[-16.75714302 -614.58258057]
[-3.84588957 -622.22387695]
[9.42208672 -629.22747803]
[23.01531792 -635.57678223]
[36.90156174 -641.25671387]
[51.04787827 -646.25384521]
[65.42071533 -650.55633545]
[79.98599243 -654.15386963]
[94.70914459 -657.03802490]
[109.55525970 -659.20190430]
[124.48912811 -660.64044189]
[139.47532654 -661.35015869]
[154.47828674 -661.32934570]
[169.46246338 -660.57818604]
[184.39228821 -659.09826660]
[199.23234558 -656.89331055]
[213.94746399 -653.96838379]
[228.50271606 -650.33044434]
[242.86358643 -645.98822021]
[256.99600220 -640.95190430]
[270.86645508 -635.23352051]
[284.44204712 -628.84655762]
[297.69058228 -621.80627441]
[310.58062744 -614.12927246]
[323.08160400 -605.83374023]
[335.16384888 -596.93945312]
[346.79873657 -587.46740723]
[357.95864868 -577.44018555]
[368.61715698 -566.88146973]
[378.74890137 -555.81634521]
[388.32992554 -544.27105713]
[397.33746338 -532.27294922]
[405.75015259 -519.85058594]
[413.54803467 -507.03329468]
[420.71264648 -493.85156250]
[427.22695923 -480.33663940]
[433.07556152 -466.52056885]
[438.24453735 -452.43612671]
[442.72164917 -438.11672974]
[446.49627686 -423.59634399]
[449.55944824 -408.90939331]
[451.90393066 -394.09069824]
[453.52410889 -379.17547607]
[454.41622925 -364.19903564]
[454.57809448 -349.19689941]
[454.00933838 -334.20471191]
[452.71133423 -319.25796509]
[450.68716431 -304.39215088]
[447.94158936 -289.64254761]
[444.48117065 -275.04406738]
[440.31405640 -260.63140869]
[435.45019531 -246.43872070]
[429.90109253 -232.49967957]
[423.67990112 -218.84733582]
[416.80136108 -205.51408386]
[409.28186035 -192.53153992]
[401.13916016 -179.93049622]
[392.39260864 -167.74085999]
[383.06292725 -155.99151611]
[373.17230225 -144.71035767]
[362.74411011 -133.92411804]
[351.80316162 -123.65840149]
[340.37536621 -113.93754578]
[328.48782349 -104.78461456]
[316.16873169 -96.22131348]
[303.44735718 -88.26795959]
[290.35382080 -80.94340515]
[276.91918945 -74.26503754]
[263.17535400 -68.24868774]
[249.15489197 -62.90862656]
[234.89106750 -58.25752640]
[220.41769409 -54.30641556]
[205.76913452 -51.06466293]
[190.98008728 -48.53995895]
[176.08567810 -46.73829269]
[161.12120056 -45.66394043]
[146.12217712 -45.31944656]
[131.12416077 -45.70563126]
[130.00851440 -30.74717712]
[128.89286804 -15.78872299]
[127.77721405 -0.83026975]
[126.66156006 14.12818336]
[125.54591370 29.08663750]
[124.43026733 44.04508972]
[132.51231384 31.40861702]
[144.21844482 22.02956963]
[158.31327820 16.89774323]
[173.30935669 16.55471230]
[187.62409973 21.03667450]
[199.74685669 29.87063980]
[208.39826965 42.12434006]
[212.66532898 56.50460815]
[212.09773254 71.49386597]
[206.75537109 85.51026154]
[197.20205688 97.07460022]
[184.44595337 104.96648407]
[169.83325195 108.35305786]
[154.90605164 106.87693024]
[141.23968506 100.69387054]
[130.27636719 90.45640564]
[123.17309570 77.24491882]
[120.67949677 62.45344543]
[115.85349274 76.65589905]
[111.02749634 90.85835266]
[113.56234741 104.60848999]
[103.17495728 113.96764374]
[98.34896088 128.17010498]
[105.57900238 137.60742188]
[107.33771515 149.24391174]
[103.30257416 160.17146301]
[94.58453369 167.71543884]
[83.42515564 170.08912659]
[78.17843628 184.14160156]
[72.93171692 198.19406128]
[67.68499756 212.24653625]
[80.33503723 220.41909790]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 209]
[27 208]
[28 207]
[29 206]
[32 201]
[33 200]
[35 198]
[36 197]
[37 196]
[38 178]
[39 177]
[40 176]
[41 175]
[42 174]
[43 173]
[44 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
