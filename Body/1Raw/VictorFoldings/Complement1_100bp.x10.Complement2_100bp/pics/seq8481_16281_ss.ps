%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[95.53482819 503.16058350]
[86.06734467 514.82733154]
[75.06824493 525.06280518]
[62.75163651 533.66790771]
[49.35726166 540.47503662]
[35.14584732 545.35168457]
[20.39402199 548.20294189]
[5.38893461 548.97338867]
[-9.57733536 547.64788818]
[-24.21346474 544.25231934]
[-38.23455811 538.85278320]
[-51.36769485 531.55438232]
[-63.35722733 522.49914551]
[-73.96977997 511.86334229]
[-82.99877167 499.85403442]
[-90.26845551 486.70498657]
[-95.63732910 472.67211914]
[-99.00087738 458.02859497]
[-100.29362488 443.05947876]
[-99.49041748 428.05609131]
[-96.60688782 413.31054688]
[-91.69916534 399.10983276]
[-84.86277008 385.73037720]
[-76.23078918 373.43261719]
[-65.97123718 362.45590210]
[-54.28382111 353.01397705]
[-41.39604187 345.29052734]
[-27.55876350 339.43597412]
[-13.04133129 335.56423950]
[1.87366891 333.75073242]
[16.89591026 334.03067017]
[31.73298264 336.39868164]
[36.13397980 322.05883789]
[32.47138214 307.62155151]
[43.91712952 296.69885254]
[48.31812668 282.35900879]
[52.71912766 268.01916504]
[57.12012482 253.67932129]
[61.52112198 239.33947754]
[65.92211914 224.99961853]
[70.32312012 210.65977478]
[66.66051483 196.22251892]
[78.10626984 185.29980469]
[82.50726318 170.95996094]
[86.90826416 156.62011719]
[91.30925751 142.28027344]
[93.31327820 127.41474152]
[92.86666870 112.42139435]
[85.68240356 100.42647552]
[92.13998413 88.02521515]
[91.69337463 73.03186035]
[91.24677277 58.03851318]
[81.20800781 42.60138702]
[90.12262726 27.48528481]
[89.45284271 12.50024605]
[88.78305817 -2.48479247]
[76.88860321 6.65424442]
[62.29143143 3.20134258]
[55.75202942 -10.29814720]
[62.09100342 -23.89290428]
[76.63549805 -27.56137848]
[88.66307831 -18.60076714]
[81.34008789 -32.62519073]
[89.45289612 -45.11645126]
[89.89950562 -60.10980225]
[90.34611511 -75.10314941]
[90.79271698 -90.09650421]
[75.87284088 -91.71864319]
[61.12622833 -94.50638580]
[46.64380264 -98.44255829]
[32.51485062 -103.50287628]
[18.82648468 -109.65614319]
[5.66309881 -116.86443329]
[-6.89414787 -125.08329010]
[-18.76783562 -134.26205444]
[-29.88475990 -144.34411621]
[-40.17637634 -155.26733398]
[-49.57923889 -166.96435547]
[-58.03536987 -179.36306763]
[-65.49263763 -192.38700867]
[-71.90505981 -205.95590210]
[-77.23310089 -219.98608398]
[-81.44392395 -234.39105225]
[-84.51155090 -249.08200073]
[-86.41707611 -263.96832275]
[-87.14875031 -278.95828247]
[-86.70206451 -293.95944214]
[-85.07977295 -308.87930298]
[-82.29187775 -323.62588501]
[-78.35556030 -338.10827637]
[-73.29509735 -352.23718262]
[-67.14169312 -365.92547607]
[-59.93326950 -379.08877563]
[-51.71428299 -391.64596558]
[-42.53540421 -403.51956177]
[-32.45322037 -414.63638306]
[-21.52989769 -424.92788696]
[-9.83278084 -434.33062744]
[2.56601310 -442.78662109]
[15.59003925 -450.24374390]
[29.15900040 -456.65603638]
[43.18923950 -461.98394775]
[57.59424973 -466.19461060]
[72.28521729 -469.26208496]
[87.17157745 -471.16744995]
[102.16153717 -471.89898682]
[117.16268921 -471.45214844]
[132.08253479 -469.82971191]
[146.82908630 -467.04165649]
[161.31143188 -463.10519409]
[175.44027710 -458.04458618]
[189.12852478 -451.89102173]
[202.29176331 -444.68249512]
[214.84884644 -436.46337891]
[226.72233582 -427.28436279]
[237.83905029 -417.20205688]
[248.13044739 -406.27862549]
[257.53308105 -394.58142090]
[265.98895264 -382.18255615]
[273.44595337 -369.15844727]
[279.85809326 -355.58941650]
[285.18585205 -341.55911255]
[289.39639282 -327.15408325]
[292.46371460 -312.46307373]
[294.36892700 -297.57669067]
[295.10031128 -282.58673096]
[294.65332031 -267.58557129]
[293.03070068 -252.66575623]
[290.24252319 -237.91921997]
[286.30590820 -223.43692017]
[281.24514771 -209.30812073]
[275.09146118 -195.61994934]
[267.88278198 -182.45678711]
[259.66354370 -169.89978027]
[250.48440552 -158.02638245]
[240.40199280 -146.90975952]
[229.47846985 -136.61848450]
[217.78115845 -127.21598053]
[205.38218689 -118.76023102]
[192.35801697 -111.30335999]
[178.78892517 -104.89135742]
[164.75857544 -99.56373596]
[150.35346985 -95.35336304]
[135.66244507 -92.28618622]
[120.77604675 -90.38111115]
[105.78606415 -89.64989471]
[105.33946228 -74.65654755]
[104.89285278 -59.66319656]
[104.44625092 -44.66984558]
[111.80117798 -31.71784782]
[103.65642548 -18.15416145]
[103.76809692 -3.15457749]
[104.43788147 11.83046150]
[105.10766602 26.81550026]
[113.82002258 35.20724487]
[114.50067139 47.68604660]
[106.24011993 57.59190750]
[106.68672180 72.58525848]
[107.13333130 87.57860565]
[114.31759644 99.57352448]
[107.86001587 111.97478485]
[108.30662537 126.96813965]
[114.62413025 113.36338806]
[124.20671082 101.82328033]
[136.41879272 93.11322021]
[150.45037842 87.81091309]
[165.37081909 86.26805115]
[180.19049072 88.58695984]
[193.92645264 94.61383820]
[205.66766357 103.94894409]
[214.63534546 115.97310638]
[220.23472595 129.88880920]
[222.09440613 144.77308655]
[220.09104919 159.63870239]
[214.35752869 173.49967957]
[205.27412415 185.43667603]
[193.44329834 194.65792847]
[179.64976501 200.55186462]
[164.80838013 202.72752380]
[149.90354919 201.04061890]
[135.92381287 195.60304260]
[123.79644012 186.77543640]
[114.32576752 175.14331055]
[108.13996124 161.47816467]
[105.64910889 146.68127441]
[101.24810791 161.02111816]
[96.84711456 175.36096191]
[92.44611359 189.70080566]
[95.79392242 205.16375732]
[84.66296387 215.06077576]
[80.26197052 229.40061951]
[75.86096954 243.74046326]
[71.45996857 258.08032227]
[67.05897522 272.42016602]
[62.65797424 286.76000977]
[58.25697708 301.09985352]
[61.60478973 316.56280518]
[50.47382736 326.45983887]
[46.07283020 340.79968262]
[59.68383789 347.16259766]
[72.27679443 355.35791016]
[83.60657501 365.22616577]
[93.45264435 376.57522583]
[101.62334442 389.18417358]
[107.95962524 402.80758667]
[112.33816528 417.18029785]
[114.67371368 432.02252197]
[114.92082214 447.04531860]
[113.07467651 461.95632935]
[109.17121124 476.46527100]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 199]
[33 198]
[35 196]
[36 195]
[37 194]
[38 193]
[39 192]
[40 191]
[41 190]
[43 188]
[44 187]
[45 186]
[46 185]
[47 162]
[48 161]
[50 159]
[51 158]
[52 157]
[54 154]
[55 153]
[56 152]
[62 151]
[64 149]
[65 148]
[66 147]
[67 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
