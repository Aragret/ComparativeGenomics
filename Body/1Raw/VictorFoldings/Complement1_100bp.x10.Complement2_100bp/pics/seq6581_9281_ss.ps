%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[149.87141418 883.03723145]
[135.04595947 880.74108887]
[120.32965851 877.82617188]
[105.74833679 874.29754639]
[91.32756042 870.16143799]
[77.09264374 865.42504883]
[63.06855011 860.09674072]
[49.27988815 854.18579102]
[35.75084305 847.70263672]
[22.50514984 840.65869141]
[9.56604958 833.06616211]
[-3.04376078 824.93853760]
[-15.30215836 816.28991699]
[-27.18763924 807.13562012]
[-38.67934799 797.49163818]
[-49.75712967 787.37481689]
[-60.40154648 776.80303955]
[-70.59392548 765.79479980]
[-80.31639099 754.36938477]
[-89.55187225 742.54687500]
[-98.28417969 730.34796143]
[-106.49799347 717.79412842]
[-114.17890167 704.90728760]
[-121.31342316 691.71014404]
[-127.88904572 678.22583008]
[-133.89424133 664.47796631]
[-139.31846619 650.49066162]
[-144.15219116 636.28851318]
[-148.38696289 621.89642334]
[-152.01535034 607.33959961]
[-155.03096008 592.64355469]
[-157.42852783 577.83416748]
[-159.20384216 562.93737793]
[-160.35377502 547.97930908]
[-160.87632751 532.98620605]
[-160.77056885 517.98437500]
[-160.03669739 503.00015259]
[-158.67599487 488.05975342]
[-156.69084167 473.18948364]
[-154.08473206 458.41537476]
[-150.86222839 443.76333618]
[-147.02899170 429.25912476]
[-142.59173584 414.92813110]
[-137.55825806 400.79553223]
[-131.93739319 386.88613892]
[-125.73897552 373.22427368]
[-118.97389984 359.83398438]
[-111.65403748 346.73873901]
[-103.79221344 333.96148682]
[-95.40223694 321.52465820]
[-86.49880981 309.45010376]
[-77.09757233 297.75894165]
[-67.21499634 286.47174072]
[-56.86843872 275.60827637]
[-46.07603836 265.18762207]
[-34.85673141 255.22802734]
[-23.23019981 245.74699402]
[-11.21684361 236.76113892]
[1.16226447 228.28623962]
[13.88540554 220.33715820]
[26.93025970 212.92784119]
[40.27394104 206.07127380]
[53.89304352 199.77951050]
[67.76367188 194.06356812]
[81.86148834 188.93348694]
[96.16176605 184.39826965]
[110.63941193 180.46585083]
[107.31715393 165.83839417]
[103.99489594 151.21093750]
[100.67263794 136.58346558]
[97.35037994 121.95600891]
[94.02811432 107.32855225]
[90.33779144 103.60089111]
[88.99869537 98.07096100]
[90.83157349 92.21626282]
[87.94630432 77.49636841]
[85.06102753 62.77647781]
[82.17575836 48.05658722]
[67.16551208 48.77106857]
[52.21121216 47.29233551]
[37.63159943 43.65190887]
[23.73744011 37.92737961]
[10.82489204 30.24077034]
[-0.83081353 20.75592041]
[-10.98123550 9.67500019]
[-19.41001511 -2.76580048]
[-25.93749428 -16.30130386]
[-30.42453957 -30.64300156]
[-32.77550888 -45.48519897]
[-32.94028854 -60.51153183]
[-30.91537094 -75.40171814]
[-26.74391365 -89.83836365]
[-20.51483345 -103.51375580]
[-12.36090374 -116.13640594]
[-2.45592427 -127.43725586]
[8.98897839 -137.17543030]
[21.72985649 -145.14335632]
[35.49513626 -151.17120361]
[49.99140930 -155.13049316]
[64.90969086 -156.93681335]
[79.93199158 -156.55166626]
[94.73811340 -153.98327637]
[109.01245880 -149.28637695]
[122.45077515 -142.56109619]
[134.76661682 -133.95075989]
[145.69747925 -123.63891602]
[155.01037598 -111.84535980]
[162.50677490 -98.82146454]
[168.02691650 -84.84484863]
[171.45312500 -70.21340942]
[172.71238708 -55.23902893]
[171.77783203 -40.24087906]
[168.66940308 -25.53864861]
[163.45335388 -11.44571877]
[156.24087524 1.73752141]
[147.18566895 13.73006916]
[136.48077393 24.27630234]
[124.35435486 33.15142822]
[111.06488800 40.16627502]
[96.89565277 45.17131424]
[99.78092194 59.89120483]
[102.66619110 74.61109924]
[105.55146790 89.33098602]
[108.65557861 104.00629425]
[111.97783661 118.63375092]
[115.30009460 133.26121521]
[118.62235260 147.88867188]
[121.94461823 162.51612854]
[125.26687622 177.14358521]
[140.02279663 174.43634033]
[154.87913513 172.34938049]
[169.80982971 170.88635254]
[184.78869629 170.04986572]
[199.78945923 169.84133911]
[214.78578186 170.26118469]
[229.75138855 171.30862427]
[244.65998840 172.98185730]
[259.48544312 175.27792358]
[274.20175171 178.19279480]
[288.78308105 181.72137451]
[303.20388794 185.85746765]
[317.43881226 190.59379578]
[331.46292114 195.92208862]
[345.25161743 201.83296204]
[358.78067017 208.31607056]
[372.02639771 215.36001587]
[384.96551514 222.95246887]
[397.57534790 231.08009338]
[409.83377075 239.72863770]
[421.71926880 248.88291931]
[433.21102905 258.52688599]
[444.28881836 268.64361572]
[454.93328857 279.21536255]
[465.12570190 290.22360229]
[474.84817505 301.64895630]
[484.08370972 313.47146606]
[492.81607056 325.67031860]
[501.02990723 338.22418213]
[508.71084595 351.11096191]
[515.84539795 364.30807495]
[522.42108154 377.79241943]
[528.42633057 391.54025269]
[533.85058594 405.52752686]
[538.68438721 419.72967529]
[542.91918945 434.12176514]
[546.54760742 448.67858887]
[549.56323242 463.37457275]
[551.96087646 478.18392944]
[553.73620605 493.08071899]
[554.88623047 508.03878784]
[555.40881348 523.03192139]
[555.30310059 538.03375244]
[554.56927490 553.01800537]
[553.20861816 567.95837402]
[551.22351074 582.82867432]
[548.61743164 597.60278320]
[545.39501953 612.25482178]
[541.56176758 626.75903320]
[537.12457275 641.09002686]
[532.09112549 655.22265625]
[526.47033691 669.13208008]
[520.27197266 682.79394531]
[513.50689697 696.18426514]
[506.18710327 709.27954102]
[498.32531738 722.05682373]
[489.93536377 734.49365234]
[481.03198242 746.56823730]
[471.63076782 758.25939941]
[461.74822998 769.54669189]
[451.40170288 780.41015625]
[440.60934448 790.83087158]
[429.39007568 800.79046631]
[417.76358032 810.27154541]
[405.75024414 819.25744629]
[393.37115479 827.73236084]
[380.64804077 835.68151855]
[367.60321045 843.09088135]
[354.25955200 849.94744873]
[340.64047241 856.23925781]
[326.76986694 861.95526123]
[312.67205811 867.08538818]
[298.37179565 871.62066650]
[283.89416504 875.55310059]
[269.26452637 878.87585449]
[254.50862122 881.58306885]
[239.65226746 883.66998291]
[224.72157288 885.13293457]
[209.74269104 885.96942139]
[194.74194336 886.17785645]
[179.74560547 885.75799561]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 129]
[68 128]
[69 127]
[70 126]
[71 125]
[72 124]
[75 123]
[76 122]
[77 121]
[78 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
