%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxGACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUG\
) } def
/len { sequence length } bind def

/coor [
[26.72920036 745.14660645]
[11.72927666 744.47613525]
[-3.11022472 742.18780518]
[-17.61531830 738.30847168]
[-31.61593819 732.88354492]
[-44.94793320 725.97662354]
[-57.45499802 717.66876221]
[-68.99048615 708.05731201]
[-79.41915894 697.25500488]
[-88.61873627 685.38848877]
[-96.48136139 672.59680176]
[-102.91484833 659.03002930]
[-107.84376526 644.84716797]
[-111.21033478 630.21459961]
[-112.97507477 615.30371094]
[-113.11729431 600.28948975]
[-111.63533783 585.34790039]
[-108.54656219 570.65417480]
[-103.88719177 556.38049316]
[-97.71186066 542.69427490]
[-90.09296417 529.75598145]
[-81.11982727 517.71728516]
[-70.89765930 506.71936035]
[-59.54631424 496.89111328]
[-47.19887543 488.34780884]
[-34.00011063 481.18960571]
[-20.10476875 475.50045776]
[-5.67576551 471.34698486]
[9.11772442 468.77798462]
[24.10225677 467.82348633]
[16.94097710 454.76342773]
[25.28676987 441.32250977]
[25.95655441 426.33746338]
[26.62633896 411.35241699]
[27.29612541 396.36740112]
[14.63375854 404.40881348]
[0.40284675 399.66738892]
[-4.90611219 385.63830566]
[2.62044907 372.66329956]
[17.43422890 370.30703735]
[28.61442184 380.30496216]
[30.39688873 365.41125488]
[32.17935181 350.51754761]
[33.96181870 335.62384033]
[35.74428558 320.73010254]
[37.52675247 305.83639526]
[27.65668106 317.13159180]
[13.70160484 322.63214111]
[-1.22087955 321.10916138]
[-13.77705002 312.90289307]
[-21.16182518 299.84667969]
[-21.72542953 284.85726929]
[-15.34194946 271.28335571]
[-3.43747354 262.15737915]
[11.32850933 259.51809692]
[25.65723991 263.95513916]
[36.34764481 274.47729492]
[41.01145935 288.73385620]
[45.19847107 274.33004761]
[49.38548279 259.92626953]
[53.57249451 245.52249146]
[57.75950623 231.11871338]
[61.94651794 216.71493530]
[66.13352966 202.31114197]
[62.25638580 187.93000793]
[73.53823853 176.83811951]
[77.72525024 162.43432617]
[81.48155212 147.91227722]
[84.80381012 133.28480530]
[88.12607574 118.65734863]
[91.44833374 104.02989197]
[89.73028564 99.07386017]
[90.91131592 93.50802612]
[95.09340668 89.01947784]
[98.84970856 74.49741364]
[102.60601044 59.97535706]
[94.84654236 46.46875000]
[98.86283875 31.79482651]
[111.78713989 24.48059845]
[115.54344177 9.95853901]
[119.29974365 -4.56351995]
[123.05604553 -19.08557892]
[113.90277863 -27.59942055]
[109.26477814 -39.13013840]
[109.96527100 -51.46662140]
[115.81006622 -62.27122116]
[125.63599396 -69.52271271]
[137.54190063 -71.89431763]
[141.72891235 -86.29810333]
[145.70101929 -100.76262665]
[141.66607666 -116.06066132]
[152.34400940 -126.44483185]
[156.10031128 -140.96688843]
[159.85661316 -155.48895264]
[163.61291504 -170.01101685]
[167.36921692 -184.53306580]
[171.12551880 -199.05513000]
[173.68135071 -213.83578491]
[175.01959229 -228.77597046]
[176.35781860 -243.71615601]
[162.62243652 -250.12825012]
[151.91065979 -260.85363770]
[145.51599121 -274.59713745]
[144.21063232 -289.69918823]
[148.15217590 -304.33612061]
[156.86470032 -316.74047852]
[169.29609680 -325.41433716]
[183.94523621 -329.31033325]
[199.04315186 -327.95797729]
[212.76669312 -321.52056885]
[223.45867920 -310.77545166]
[229.82800293 -297.02020264]
[231.10554504 -281.91577148]
[227.13702393 -267.28613281]
[218.40165710 -254.89784241]
[205.95429993 -246.24690247]
[191.29800415 -242.37791443]
[189.95977783 -227.43772888]
[188.62153625 -212.49754333]
[198.15092468 -224.08161926]
[211.93605042 -229.99520874]
[226.89726257 -228.91719055]
[239.69219971 -221.08842468]
[247.46243286 -208.25785828]
[248.47207642 -193.29187012]
[242.49557495 -179.53392029]
[230.86808777 -170.05754089]
[216.18722534 -166.97981262]
[201.73274231 -170.98828125]
[190.73379517 -181.18745422]
[185.64758301 -195.29882812]
[181.89128113 -180.77676392]
[178.13497925 -166.25471497]
[174.37867737 -151.73265076]
[170.62237549 -137.21058655]
[166.86607361 -122.68852997]
[171.16967773 -108.42920685]
[160.22306824 -97.00632477]
[161.83193970 -92.50959778]
[160.63308716 -86.95443726]
[156.13269043 -82.11109161]
[151.94569397 -67.70730591]
[163.40461731 -54.26988220]
[164.51315308 -36.48725128]
[154.63902283 -21.46789360]
[137.57810974 -15.32927895]
[133.82180786 -0.80721939]
[130.06550598 13.71483994]
[126.30920410 28.23689842]
[134.06599426 40.90053558]
[130.46343994 55.68148041]
[117.12806702 63.73165894]
[113.37176514 78.25371552]
[109.61546326 92.77577972]
[106.07579041 107.35214996]
[102.75353241 121.97961426]
[99.43127441 136.60707092]
[96.10901642 151.23452759]
[97.54016113 155.33401489]
[97.58757782 159.27893066]
[96.46977997 162.65322876]
[94.51793671 165.15461731]
[92.12903595 166.62133789]
[87.94202423 181.02513123]
[91.51968384 196.43650818]
[80.53730774 206.49815369]
[76.35029602 220.90194702]
[72.16328430 235.30572510]
[67.97628021 249.70950317]
[63.78926468 264.11328125]
[59.60225296 278.51705933]
[55.41524124 292.92083740]
[52.42046738 307.61886597]
[50.63800430 322.51257324]
[48.85553741 337.40628052]
[47.07307053 352.30001831]
[45.29060364 367.19372559]
[43.50814056 382.08743286]
[42.28116226 397.03717041]
[41.61137772 412.02221680]
[40.94159317 427.00726318]
[40.27180862 441.99227905]
[47.38518143 456.12417603]
[39.08729553 468.49328613]
[53.92692184 470.78079224]
[68.43222046 474.65939331]
[82.43313599 480.08358765]
[95.76550293 486.98974609]
[108.27301025 495.29693604]
[119.80902100 504.90774536]
[130.23826599 515.70953369]
[139.43849182 527.57556152]
[147.30180359 540.36682129]
[153.73602295 553.93322754]
[158.66569519 568.11578369]
[162.03305054 582.74822998]
[163.79859924 597.65899658]
[163.94163513 612.67321777]
[162.46046448 627.61486816]
[159.37248230 642.30877686]
[154.71388245 656.58270264]
[148.53929138 670.26922607]
[140.92108154 683.20794678]
[131.94860840 695.24713135]
[121.72702789 706.24560547]
[110.37620544 716.07446289]
[98.02922821 724.61840820]
[84.83084869 731.77734375]
[70.93581390 737.46728516]
[56.50703430 741.62152100]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 184]
[32 182]
[33 181]
[34 180]
[35 179]
[41 178]
[42 177]
[43 176]
[44 175]
[45 174]
[46 173]
[58 172]
[59 171]
[60 170]
[61 169]
[62 168]
[63 167]
[64 166]
[66 164]
[67 163]
[68 158]
[69 157]
[70 156]
[71 155]
[74 154]
[75 153]
[76 152]
[79 149]
[80 148]
[81 147]
[82 146]
[88 142]
[89 141]
[90 138]
[92 136]
[93 135]
[94 134]
[95 133]
[96 132]
[97 131]
[98 119]
[99 118]
[100 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
