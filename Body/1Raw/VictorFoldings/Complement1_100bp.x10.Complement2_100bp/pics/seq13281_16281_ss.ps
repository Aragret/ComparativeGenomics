%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGUxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[106.03603363 564.88354492]
[90.69245911 564.19769287]
[77.75608826 555.91845703]
[70.70672607 542.27288818]
[71.44062805 526.93151855]
[79.76037598 514.02117920]
[93.42799377 507.01461792]
[94.09777832 492.02960205]
[86.93650055 478.96951294]
[95.28229523 465.52859497]
[95.95207977 450.54357910]
[96.62186432 435.55853271]
[97.29164886 420.57348633]
[90.13037109 407.51342773]
[98.47615814 394.07250977]
[99.14594269 379.08746338]
[99.81573486 364.10241699]
[99.92739868 349.10284424]
[99.48078918 334.10949707]
[91.36798096 321.61822510]
[98.69097137 307.59381104]
[90.57816315 295.10253906]
[97.90115356 281.07812500]
[83.32848358 277.67416382]
[70.12339783 270.60858154]
[59.18887711 260.35769653]
[51.27438736 247.61590576]
[46.92454529 233.24859619]
[46.44160461 218.23341370]
[49.86449814 203.59368896]
[56.96573639 190.32873535]
[67.26655579 179.34561157]
[80.06916046 171.39710999]
[94.50401306 167.03015137]
[94.05740356 152.03678894]
[93.61080170 137.04344177]
[93.16419220 122.05009460]
[92.71759033 107.05674744]
[89.34886932 99.73388672]
[92.37762451 91.83721161]
[92.15429688 76.83886719]
[84.21238708 63.15542603]
[91.75933838 50.31436539]
[91.53601074 35.31602859]
[91.20103455 20.31977081]
[90.75443268 5.32641983]
[79.53323364 -5.47739792]
[79.29389954 -20.68914795]
[89.66284180 -31.32026482]
[89.21623230 -46.31361389]
[88.76963043 -61.30696487]
[88.32302094 -76.30031586]
[73.46497345 -78.64012146]
[59.29365540 -83.66902924]
[46.29120255 -91.21439362]
[34.89970398 -101.01797485]
[25.50616264 -112.74477386]
[18.42934990 -125.99450684]
[13.90898895 -140.31524658]
[12.09762955 -155.21879578]
[13.05550671 -170.19744873]
[16.74853516 -184.74114990]
[23.04952240 -198.35494995]
[31.74254608 -210.57583618]
[42.53034973 -220.98841858]
[55.04452515 -229.23916626]
[68.85806274 -235.04829407]
[83.49995422 -238.21929932]
[83.05334473 -253.21264648]
[82.60674286 -268.20599365]
[82.16013336 -283.19934082]
[81.71352386 -298.19268799]
[81.26692200 -313.18603516]
[73.12216949 -326.74972534]
[80.47710419 -339.70172119]
[80.03049469 -354.69506836]
[71.19498444 -364.09170532]
[71.13166809 -376.58889771]
[79.32909393 -385.48434448]
[79.10576630 -400.48266602]
[78.88243866 -415.48101807]
[78.65911102 -430.47933960]
[67.60001373 -441.44903564]
[67.58718109 -456.66265869]
[78.11325836 -467.13821411]
[77.88993073 -482.13656616]
[77.66660309 -497.13488770]
[77.44327545 -512.13323975]
[62.60480499 -514.59484863]
[48.44440842 -519.66662598]
[35.41727829 -527.18554688]
[23.94219208 -536.90985107]
[14.38801861 -548.52697754]
[7.06188822 -561.66345215]
[2.19930506 -575.89703369]
[-0.04341920 -590.77020264]
[0.40580994 -605.80474854]
[3.53255153 -620.51739502]
[9.23629379 -634.43530273]
[17.33368492 -647.11096191]
[27.56442833 -658.13690186]
[39.59964752 -667.15869141]
[53.05245590 -673.88641357]
[67.49040985 -678.10363770]
[82.44937897 -679.67492676]
[97.44850159 -678.54974365]
[112.00561523 -674.76422119]
[125.65277100 -668.44006348]
[137.95126343 -659.78057861]
[148.50575256 -649.06408691]
[156.97695923 -636.63519287]
[163.09255981 -622.89331055]
[166.65597534 -608.28021240]
[167.55264282 -593.26568604]
[165.75373840 -578.33239746]
[161.31709290 -563.96032715]
[154.38533020 -550.61151123]
[145.18127441 -538.71508789]
[134.00080872 -528.65344238]
[121.20332336 -520.75000000]
[107.20021057 -515.25891113]
[92.44161224 -512.35656738]
[92.66493988 -497.35821533]
[92.88826752 -482.35989380]
[93.11159515 -467.36154175]
[103.94490051 -457.20404053]
[104.38504028 -441.99676514]
[93.65744781 -430.70266724]
[93.88077545 -415.70434570]
[94.10410309 -400.70599365]
[94.32743073 -385.70767212]
[104.12596893 -371.14895630]
[95.02384186 -355.14169312]
[95.47045135 -340.14834595]
[103.58325958 -327.65707397]
[96.26026917 -313.63265991]
[96.70687866 -298.63931274]
[97.15348053 -283.64596558]
[97.60009003 -268.65261841]
[98.04669189 -253.65925598]
[98.49330139 -238.66590881]
[113.29797363 -236.37202454]
[127.43278503 -231.39538574]
[140.41586304 -223.90412903]
[151.80430603 -214.15209961]
[161.20932007 -202.47030640]
[168.30944824 -189.25569153]
[172.86158752 -174.95758057]
[174.70930481 -160.06250000]
[173.78823853 -145.07754517]
[170.12826538 -130.51315308]
[163.85264587 -116.86569214]
[155.17375183 -104.60056305]
[144.38597107 -94.13633728]
[131.85568237 -85.83042908]
[118.00880432 -79.96694183]
[103.31636810 -76.74691772]
[103.76297760 -61.75357056]
[104.20957947 -46.76021957]
[104.65618896 -31.76687241]
[115.63951874 -21.77177429]
[116.30603027 -6.57274675]
[105.74777985 4.87981415]
[106.19438934 19.87316322]
[109.53564453 26.46541595]
[106.53434753 35.09270096]
[106.75767517 50.09103775]
[114.68360901 62.70170212]
[107.15263367 76.61553955]
[107.37596130 91.61387634]
[107.71093750 106.61013794]
[108.15753937 121.60349274]
[108.60414886 136.59683228]
[109.05075836 151.59019470]
[109.49736023 166.58354187]
[124.16654205 170.08357239]
[137.41955566 177.25596619]
[148.35583496 187.60650635]
[156.23402405 200.42526245]
[160.52223206 214.83529663]
[160.93386841 229.85261536]
[157.44688416 244.45335388]
[150.30484009 257.64361572]
[139.99984741 268.52716064]
[127.23872375 276.36621094]
[112.89450073 280.63153076]
[121.03925323 294.19519043]
[113.68431854 307.14721680]
[121.82907104 320.71087646]
[114.47414398 333.66287231]
[114.92074585 348.65625000]
[126.94995117 339.69531250]
[141.49409485 343.36514282]
[147.83178711 356.96051025]
[141.29110718 370.45938110]
[126.69361115 373.91088867]
[114.80077362 364.77221680]
[114.13098145 379.75726318]
[113.46119690 394.74227905]
[120.57456970 408.87417603]
[112.27668762 421.24328613]
[111.60690308 436.22830200]
[110.93711853 451.21334839]
[110.26733398 466.19839478]
[117.38070679 480.33029175]
[109.08281708 492.69937134]
[108.41303253 507.68441772]
[121.40105438 515.88238525]
[128.53582764 529.48352051]
[127.89810944 544.82916260]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 207]
[8 206]
[10 204]
[11 203]
[12 202]
[13 201]
[15 199]
[16 198]
[17 197]
[18 191]
[19 190]
[21 188]
[23 186]
[34 175]
[35 174]
[36 173]
[37 172]
[38 171]
[40 170]
[41 169]
[43 167]
[44 166]
[45 164]
[46 163]
[49 160]
[50 159]
[51 158]
[52 157]
[68 141]
[69 140]
[70 139]
[71 138]
[72 137]
[73 136]
[75 134]
[76 133]
[79 131]
[80 130]
[81 129]
[82 128]
[85 125]
[86 124]
[87 123]
[88 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
