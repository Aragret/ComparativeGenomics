%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[84.22459412 720.78613281]
[70.49103546 726.92645264]
[55.86297607 730.43847656]
[40.83863449 731.20257568]
[25.92974091 729.19274902]
[11.64408493 724.47735596]
[-1.53176868 717.21710205]
[-13.14905643 707.65924072]
[-22.81209564 696.12921143]
[-30.19177055 683.01989746]
[-35.03672791 668.77764893]
[-37.18195343 653.88763428]
[-36.55437851 638.85699463]
[-33.17538452 624.19763184]
[-27.16004944 610.40881348]
[-18.71326065 597.96026611]
[-8.12270832 587.27593994]
[4.25089502 578.71978760]
[17.98610878 572.58312988]
[32.61511993 569.07501221]
[47.63966370 568.31494141]
[49.64367676 553.44940186]
[51.64768982 538.58392334]
[53.65170288 523.71838379]
[44.44503403 512.06622314]
[46.26562500 496.96191406]
[58.54990768 487.38409424]
[60.55392075 472.51858521]
[62.55793381 457.65304565]
[50.04778290 449.53137207]
[42.27251434 436.73080444]
[40.82008743 421.76245117]
[46.03189850 407.59005737]
[56.92448044 397.04306030]
[71.37461853 392.25195312]
[73.37863159 377.38641357]
[75.38264465 362.52090454]
[69.41508484 348.87402344]
[78.92673492 336.23126221]
[80.70920563 321.33755493]
[82.26972961 306.41894531]
[83.49670410 291.46920776]
[84.38951874 276.49578857]
[75.70095062 261.24865723]
[85.96842957 245.96269226]
[86.63821411 230.97766113]
[79.47693634 217.91758728]
[87.82272339 204.47666931]
[88.49250793 189.49163818]
[89.16230011 174.50659180]
[89.83208466 159.52156067]
[90.50186920 144.53651428]
[91.17165375 129.55148315]
[77.50497437 121.09984589]
[69.94449615 106.92073059]
[70.54248810 90.86300659]
[79.13661957 77.28549194]
[93.39404297 69.87374878]
[93.84064484 54.88039780]
[94.28725433 39.88705063]
[86.96426392 25.86262703]
[95.07707214 13.37136555]
[95.52368164 -1.62198400]
[95.97028351 -16.61533356]
[96.41689301 -31.60868454]
[96.86349487 -46.60203552]
[97.31010437 -61.59538269]
[97.75671387 -76.58873749]
[97.64504242 -91.58831787]
[96.97525787 -106.57335663]
[96.30547333 -121.55839539]
[87.33103943 -130.82243347]
[87.08167267 -143.31729126]
[95.14574432 -152.33378601]
[94.69914246 -167.32713318]
[93.80632782 -182.30053711]
[92.46809387 -197.24072266]
[91.12985992 -212.18090820]
[81.75070953 -221.03497314]
[80.94366455 -233.50624084]
[88.59709167 -242.87382507]
[79.85481262 -256.06030273]
[86.62406921 -269.32778931]
[85.50842285 -284.28625488]
[84.39277649 -299.24468994]
[83.27712250 -314.20315552]
[82.16147614 -329.16162109]
[81.04582977 -344.12005615]
[79.93018341 -359.07852173]
[71.18790436 -372.26498413]
[77.95716095 -385.53247070]
[63.10933685 -388.17691040]
[49.38597107 -394.43151855]
[37.64972687 -403.90313721]
[28.63834763 -415.99633789]
[22.91830063 -429.95098877]
[20.84915352 -444.88983154]
[22.56097221 -459.87384033]
[27.94615173 -473.96109009]
[36.66617584 -486.26605225]
[48.17289352 -496.01522827]
[61.74298477 -502.59576416]
[76.52342224 -505.59399414]
[91.58509827 -504.82147217]
[105.98121643 -500.32675171]
[118.80683136 -492.39236450]
[129.25570679 -481.51708984]
[136.67103577 -468.38452148]
[140.58665466 -453.82022095]
[140.75643921 -438.73971558]
[137.16972351 -424.09094238]
[130.05197144 -410.79476929]
[119.85060120 -399.68698120]
[107.20688629 -391.46585083]
[92.91561127 -386.64813232]
[101.57809448 -374.53158569]
[94.88863373 -360.19415283]
[96.00428009 -345.23571777]
[97.11993408 -330.27725220]
[98.23558044 -315.31881714]
[99.35122681 -300.36035156]
[100.46687317 -285.40188599]
[101.58252716 -270.44345093]
[110.24500275 -258.32690430]
[103.55554962 -243.98947144]
[114.20326233 -230.03981018]
[106.07003784 -213.51914978]
[107.40827179 -198.57896423]
[108.74651337 -183.63877869]
[110.80867004 -181.73992920]
[112.24291992 -178.90982056]
[112.69079590 -175.38351440]
[111.88545227 -171.52139282]
[109.69248962 -167.77374268]
[110.13909912 -152.78039551]
[120.15330505 -138.36920166]
[111.29051208 -122.22817993]
[111.96029663 -107.24314117]
[112.63008118 -92.25810242]
[124.52453613 -101.39714050]
[139.12170410 -97.94423676]
[145.66110229 -84.44474792]
[139.32212830 -70.84999084]
[124.77764130 -67.18151855]
[112.75006104 -76.14212799]
[112.30345154 -61.14877701]
[111.85684967 -46.15542984]
[111.41024017 -31.16207886]
[110.96363831 -16.16872787]
[110.51702881 -1.17537808]
[110.07042694 13.81797218]
[117.42535400 26.76996994]
[109.28060150 40.33365631]
[108.83399963 55.32700729]
[108.38739014 70.32035828]
[120.32786560 76.80500793]
[128.32286072 87.79161072]
[130.82064819 101.14775848]
[127.33640289 114.28113556]
[118.54639435 124.64266205]
[106.15669250 130.22126770]
[105.48690796 145.20629883]
[104.81712341 160.19134521]
[104.14733887 175.17637634]
[103.47754669 190.16142273]
[102.80776215 205.14645386]
[109.92113495 219.27835083]
[101.62325287 231.64744568]
[100.95346832 246.63247681]
[109.06562042 256.66024780]
[108.19925690 269.12750244]
[99.36292267 277.38861084]
[98.47010803 292.36203003]
[100.80792999 297.02911377]
[101.09323120 301.66287231]
[99.68242645 305.48712158]
[97.18833160 307.97946167]
[95.62780762 322.89807129]
[97.96672058 329.08200073]
[96.97969055 334.67868042]
[93.79226685 338.23529053]
[99.61648560 352.94543457]
[90.24817657 364.52490234]
[88.24416351 379.39044189]
[86.24015045 394.25595093]
[98.90572357 402.70254517]
[106.61655426 415.75741577]
[107.88935852 430.80401611]
[102.52507019 444.85342407]
[91.63769531 455.13809204]
[77.42346191 459.65707397]
[75.41944885 474.52258301]
[73.41543579 489.38812256]
[82.72492218 501.87695312]
[80.48080444 516.92419434]
[68.51723480 525.72241211]
[66.51322174 540.58789062]
[64.50920868 555.45343018]
[62.50519180 570.31896973]
[76.79212189 575.03045654]
[89.96993256 582.28723145]
[101.58979034 591.84197998]
[111.25594330 603.36932373]
[118.63914490 616.47668457]
[123.48794556 630.71759033]
[125.63718414 645.60705566]
[125.01366425 660.63787842]
[121.63861847 675.29815674]
[115.62699890 689.08856201]
[107.18356323 701.53936768]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 199]
[22 198]
[23 197]
[24 196]
[27 193]
[28 192]
[29 191]
[35 185]
[36 184]
[37 183]
[39 181]
[40 178]
[41 177]
[42 173]
[43 172]
[45 169]
[46 168]
[48 166]
[49 165]
[50 164]
[51 163]
[52 162]
[53 161]
[58 155]
[59 154]
[60 153]
[62 151]
[63 150]
[64 149]
[65 148]
[66 147]
[67 146]
[68 145]
[69 139]
[70 138]
[71 137]
[74 135]
[75 134]
[76 129]
[77 128]
[78 127]
[81 125]
[83 123]
[84 122]
[85 121]
[86 120]
[87 119]
[88 118]
[89 117]
[91 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
