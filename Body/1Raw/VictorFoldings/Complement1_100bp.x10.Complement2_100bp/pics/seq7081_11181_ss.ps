%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[202.56520081 716.86053467]
[188.97064209 710.51440430]
[175.69343567 703.52862549]
[162.76365662 695.91894531]
[150.21060181 687.70269775]
[138.06272888 678.89849854]
[126.34752655 669.52618408]
[115.09154510 659.60711670]
[104.32028198 649.16369629]
[94.05814362 638.21954346]
[84.32836914 626.79949951]
[75.15300751 614.92944336]
[66.55283356 602.63623047]
[58.54733658 589.94775391]
[51.15465164 576.89276123]
[44.39152527 563.50073242]
[38.27327347 549.80212402]
[32.81376266 535.82788086]
[28.02536011 521.60968018]
[23.91890717 507.17974854]
[20.50371170 492.57077026]
[17.78750610 477.81585693]
[15.77644730 462.94839478]
[14.47508907 448.00210571]
[13.88638020 433.01080322]
[14.01165295 418.00848389]
[14.85062504 403.02908325]
[16.40139580 388.10659790]
[18.66044998 373.27481079]
[21.62267303 358.56729126]
[25.28135300 344.01739502]
[29.62820244 329.65805054]
[34.65337372 315.52182007]
[40.34548569 301.64068604]
[46.69163895 288.04614258]
[53.67745972 274.76895142]
[61.28712463 261.83920288]
[69.50339508 249.28616333]
[78.30765533 237.13830566]
[87.67996216 225.42312622]
[97.59908295 214.16716003]
[108.04255676 203.39593506]
[118.98670959 193.13381958]
[130.40676880 183.40406799]
[142.27684021 174.22872925]
[133.67828369 161.93788147]
[125.07971191 149.64704895]
[116.48114777 137.35621643]
[107.88258362 125.06537628]
[99.28401947 112.77453613]
[101.50661469 127.60895538]
[100.02105713 142.53521729]
[94.91818237 156.64056396]
[86.51004791 169.06243896]
[75.31079865 179.04125977]
[62.00527954 185.96681213]
[47.40713120 189.41558838]
[32.40903473 189.17669678]
[17.92812729 185.26475525]
[4.84992266 177.91897583]
[-6.02584124 167.58854675]
[-14.03410816 154.90518188]
[-18.68516922 140.64447021]
[-19.69460869 125.67848206]
[-17.00070190 110.92237091]
[-10.76817989 97.27848053]
[-1.37816465 85.58114624]
[10.59514046 76.54566193]
[24.41956520 70.72455597]
[39.24973679 68.47378540]
[54.17878723 69.93098450]
[68.29380035 75.00704193]
[80.73163605 83.39157104]
[90.73173523 94.57186127]
[86.75963593 80.10733795]
[82.78753662 65.64281464]
[78.81544495 51.17829132]
[74.38766479 46.26847076]
[73.27164459 40.69608307]
[74.94728851 36.22380829]
[71.40761566 21.64743233]
[67.86794281 7.07105684]
[64.32826996 -7.50531864]
[60.78860092 -22.08169365]
[45.72535324 -21.86664391]
[30.99202538 -25.00938225]
[17.32763672 -31.35227394]
[5.41759062 -40.57715988]
[-4.14071321 -52.22132492]
[-10.86783409 -65.70069885]
[-14.42634106 -80.33917236]
[-14.63774204 -95.40247345]
[-11.49143219 -110.13503265]
[-5.14523077 -123.79788208]
[4.08254051 -135.70570374]
[15.72902107 -145.26118469]
[29.21002769 -151.98503113]
[43.84935760 -155.53999329]
[58.91270828 -155.74774170]
[73.64450836 -152.59786987]
[87.30582428 -146.24835205]
[99.21139526 -137.01770020]
[108.76406097 -125.36890411]
[115.48464966 -111.88626862]
[119.03605652 -97.24607849]
[119.24015808 -82.18267059]
[116.08671570 -67.45163727]
[109.73388672 -53.79186249]
[100.50035095 -41.88852310]
[88.84924316 -32.33868790]
[75.36497498 -25.62136650]
[78.90464783 -11.04499149]
[82.44432068 3.53138423]
[85.98399353 18.10775948]
[89.52366638 32.68413544]
[93.27996826 47.20619583]
[97.25205994 61.67071915]
[101.22415924 76.13523865]
[105.19625854 90.59976959]
[111.57485962 104.17597198]
[120.17342377 116.46681213]
[128.77198792 128.75764465]
[137.37055969 141.04849243]
[145.96911621 153.33932495]
[154.56768799 165.63015747]
[167.25610352 157.62458801]
[180.31109619 150.23181152]
[193.70304871 143.46858215]
[207.40164185 137.35025024]
[221.37583923 131.89064026]
[235.59399414 127.10214233]
[250.02388000 122.99559021]
[264.63284302 119.58029175]
[279.38775635 116.86399078]
[294.25518799 114.85282898]
[309.20147705 113.55136871]
[324.19277954 112.96256256]
[339.19509888 113.08773041]
[354.17449951 113.92659760]
[369.09698486 115.47727203]
[383.92880249 117.73622131]
[398.63632202 120.69834900]
[413.18624878 124.35692596]
[427.54562378 128.70367432]
[441.68188477 133.72875977]
[455.56304932 139.42077637]
[469.15765381 145.76683044]
[482.43490601 152.75256348]
[495.36471558 160.36213684]
[507.91778564 168.57832336]
[520.06573486 177.38250732]
[531.78094482 186.75473022]
[543.03698730 196.67378235]
[553.80828857 207.11717224]
[564.07049561 218.06126404]
[573.80029297 229.48124695]
[582.97570801 241.35125732]
[591.57592773 253.64442444]
[599.58148193 266.33285522]
[606.97424316 279.38787842]
[613.73742676 292.77984619]
[619.85571289 306.47845459]
[625.31530762 320.45266724]
[630.10375977 334.67080688]
[634.21032715 349.10070801]
[637.62554932 363.70968628]
[640.34185791 378.46459961]
[642.35296631 393.33203125]
[643.65441895 408.27835083]
[644.24316406 423.26962280]
[644.11798096 438.27197266]
[643.27905273 453.25134277]
[641.72833252 468.17382812]
[639.46936035 483.00564575]
[636.50720215 497.71316528]
[632.84857178 512.26306152]
[628.50183105 526.62243652]
[623.47668457 540.75872803]
[617.78466797 554.63983154]
[611.43853760 568.23443604]
[604.45281982 581.51165771]
[596.84320068 594.44146729]
[588.62701416 606.99450684]
[579.82275391 619.14239502]
[570.45050049 630.85766602]
[560.53143311 642.11364746]
[550.08801270 652.88494873]
[539.14392090 663.14709473]
[527.72393799 672.87689209]
[515.85388184 682.05230713]
[503.56069946 690.65246582]
[490.87222290 698.65802002]
[477.81723022 706.05072021]
[464.42523193 712.81390381]
[450.72662354 718.93218994]
[436.75238037 724.39172363]
[422.53421021 729.18011475]
[408.10430908 733.28662109]
[393.49533081 736.70184326]
[378.74041748 739.41809082]
[363.87295532 741.42919922]
[348.92666626 742.73059082]
[333.93536377 743.31933594]
[318.93304443 743.19409180]
[303.95367432 742.35516357]
[289.03115845 740.80438232]
[274.19937134 738.54541016]
[259.49185181 735.58319092]
[244.94194031 731.92456055]
[230.58259583 727.57775879]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 125]
[46 124]
[47 123]
[48 122]
[49 121]
[50 120]
[74 119]
[75 118]
[76 117]
[77 116]
[80 115]
[81 114]
[82 113]
[83 112]
[84 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
