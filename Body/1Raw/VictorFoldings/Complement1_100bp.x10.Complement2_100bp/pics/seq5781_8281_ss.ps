%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAU\
) } def
/len { sequence length } bind def

/coor [
[32.99888229 583.44824219]
[17.95755005 582.77593994]
[3.38478518 578.99072266]
[-10.08235359 572.25793457]
[-21.85514069 562.87207031]
[-31.41891861 551.24328613]
[-38.35560226 537.88006592]
[-42.36194992 523.36651611]
[-43.26282120 508.33715820]
[-41.01882935 493.44894409]
[-35.72808075 479.35278320]
[-27.62185478 466.66488647]
[-17.05452728 455.93991089]
[-4.48805332 447.64669800]
[9.52821350 442.14779663]
[24.38154221 439.68359375]
[25.05132675 424.69854736]
[25.72111320 409.71350098]
[18.55983162 396.65344238]
[26.90562439 383.21252441]
[27.57541084 368.22747803]
[28.24519539 353.24243164]
[28.91497993 338.25741577]
[21.49394608 351.29306030]
[10.74103451 361.75131226]
[-2.49573541 368.80737305]
[-17.17245674 371.90475464]
[-32.13166046 370.79922485]
[-46.19360352 365.57794189]
[-58.24930191 356.65267944]
[-67.34799194 344.72735596]
[-72.77210999 330.74240112]
[-74.09389496 315.80075073]
[-71.20909882 301.08074951]
[-64.34523773 287.74331665]
[-54.04360962 276.84027100]
[-41.11665726 269.23147583]
[-26.58384514 265.51696777]
[-11.59129810 265.98974609]
[2.67861319 270.61245728]
[15.10050201 279.02059937]
[24.69472885 290.55102539]
[30.70464897 304.29443359]
[32.65626144 319.17037964]
[37.69318008 305.04135132]
[42.73009491 290.91232300]
[42.01518631 283.55633545]
[47.94861221 276.61138916]
[46.81628418 271.97167969]
[48.58657074 266.57138062]
[53.56641388 262.22250366]
[59.22920227 248.33248901]
[64.89199066 234.44245911]
[70.55477142 220.55242920]
[76.21755981 206.66241455]
[81.88034821 192.77238464]
[87.54313660 178.88235474]
[93.20591736 164.99232483]
[95.65164948 150.19305420]
[94.75883484 135.21965027]
[93.86601257 120.24624634]
[92.97319794 105.27284241]
[90.87324524 103.06383514]
[89.53064728 100.04192352]
[89.24803925 96.48614502]
[90.22073364 92.78342438]
[92.50000000 89.38667297]
[92.50000000 74.38667297]
[89.37059021 65.80503082]
[92.61332703 59.16376114]
[92.83665466 44.16542435]
[92.72499084 29.16584015]
[92.27838135 14.17249107]
[91.83177948 -0.82085913]
[91.38516998 -15.81420898]
[83.24041748 -29.37789536]
[90.59535217 -42.32989120]
[90.14874268 -57.32324219]
[89.70214081 -72.31658936]
[89.25553131 -87.30994415]
[88.80892944 -102.30329132]
[88.36231995 -117.29664612]
[87.91571808 -132.28999329]
[87.46910858 -147.28334045]
[84.72423553 -151.72325134]
[84.02666473 -156.31309509]
[85.09066772 -160.24792480]
[87.35245514 -162.95286560]
[79.82147980 -176.86669922]
[87.74741364 -189.47737122]
[87.97074127 -204.47570801]
[88.19406891 -219.47404480]
[73.53424835 -222.92424011]
[59.95906448 -229.44561768]
[48.10343933 -238.73315430]
[38.52188492 -250.35244751]
[31.66255188 -263.76004028]
[27.84626007 -278.32882690]
[27.25150490 -293.37744141]
[29.90610313 -308.20199585]
[35.68589783 -322.10910034]
[44.32055283 -334.44833374]
[55.40621185 -344.64257812]
[68.42438507 -352.21496582]
[82.76617432 -356.81140137]
[97.76080322 -358.21682739]
[112.70693207 -356.36557007]
[126.90551758 -351.34417725]
[139.69245911 -343.38754272]
[150.46968079 -332.86776733]
[158.73312378 -320.27691650]
[164.09628296 -306.20385742]
[166.30831909 -291.30685425]
[165.26577759 -276.28265381]
[161.01741028 -261.83392334]
[153.76193237 -248.63650513]
[143.83866882 -237.30764771]
[131.71177673 -228.37721252]
[117.94844055 -222.26290894]
[103.19240570 -219.25071716]
[102.96907806 -204.25238037]
[102.74575043 -189.25404358]
[110.29270172 -176.41297913]
[102.35079193 -162.72953796]
[102.46246338 -147.72994995]
[102.90906525 -132.73660278]
[103.35567474 -117.74324799]
[103.80227661 -102.74990082]
[104.24888611 -87.75654602]
[104.69548798 -72.76319885]
[105.14209747 -57.76984787]
[105.58869934 -42.77649689]
[113.70150757 -30.28523827]
[106.37852478 -16.26081467]
[106.82512665 -1.26746511]
[107.27173615 13.72588444]
[107.71833801 28.71923447]
[110.02014923 31.39019012]
[111.14262390 35.30875015]
[110.51345825 39.90847397]
[107.83499146 44.38875198]
[107.61166382 59.38708878]
[107.50000000 74.38667297]
[107.50000000 89.38667297]
[107.94660950 104.38002777]
[108.83942413 119.35343170]
[109.73223877 134.32684326]
[110.62505341 149.30024719]
[116.47415161 135.48764038]
[124.87211609 123.05887604]
[135.50500488 112.47861481]
[147.97528076 104.14241791]
[161.81672668 98.36192322]
[176.51188660 95.35324097]
[191.51138306 95.22886658]
[206.25440979 97.99343872]
[220.18981934 103.54360199]
[232.79663086 111.67185974]
[243.60350037 122.07433319]
[252.20642090 134.36212158]
[258.28378296 148.07583618]
[261.60833740 162.70275879]
[262.05584717 177.69609070]
[259.60952759 192.49526978]
[254.36087036 206.54701233]
[246.50608826 219.32600403]
[236.33885193 230.35447693]
[224.23925781 239.22012329]
[210.65965271 245.59150696]
[196.10774231 249.23042297]
[181.12753296 250.00082397]
[166.27909851 247.87390137]
[152.11753845 242.92919922]
[139.17228699 235.35154724]
[127.92733765 225.42425537]
[118.80307007 213.51847839]
[112.14061737 200.07928467]
[108.18904114 185.60914612]
[107.09594727 170.65512085]
[101.43315887 184.54513550]
[95.77037048 198.43516541]
[90.10758972 212.32519531]
[84.44480133 226.21522522]
[78.78201294 240.10525513]
[73.11922455 253.99526978]
[67.45644379 267.88531494]
[62.00108337 281.85809326]
[56.85912323 295.94924927]
[51.82220840 310.07827759]
[46.78529358 324.20730591]
[43.90002060 338.92718506]
[43.23023605 353.91223145]
[42.56044769 368.89727783]
[41.89066315 383.88232422]
[49.00403595 398.01419067]
[40.70615005 410.38330078]
[40.03636551 425.36834717]
[39.36658096 440.35336304]
[53.94083405 444.13290405]
[67.41062164 450.86035156]
[79.18709564 460.24160767]
[88.75545502 471.86660767]
[95.69739532 485.22711182]
[99.70944977 499.73907471]
[100.61623383 514.76806641]
[98.37809753 529.65716553]
[93.09289551 543.75543213]
[84.99166107 556.44647217]
[74.42855072 567.17565918]
[61.86534500 575.47381592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 198]
[17 197]
[18 196]
[20 194]
[21 193]
[22 192]
[23 191]
[44 190]
[45 189]
[46 188]
[48 187]
[51 186]
[52 185]
[53 184]
[54 183]
[55 182]
[56 181]
[57 180]
[58 179]
[59 148]
[60 147]
[61 146]
[62 145]
[67 144]
[68 143]
[70 142]
[71 141]
[72 137]
[73 136]
[74 135]
[75 134]
[77 132]
[78 131]
[79 130]
[80 129]
[81 128]
[82 127]
[83 126]
[84 125]
[88 124]
[90 122]
[91 121]
[92 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
