%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[112.24156189 290.00799561]
[108.34007263 304.63870239]
[99.89732361 317.20846558]
[87.82912445 326.35379028]
[73.44454956 331.08270264]
[58.30392075 330.88226318]
[44.04959106 325.77413940]
[32.22775269 316.31250000]
[24.12075806 303.52362061]
[20.60799026 288.79476929]
[22.07048798 273.72360229]
[28.34960938 259.94494629]
[38.76424408 248.95339966]
[52.18468857 241.94123840]
[67.15519714 239.66909790]
[69.82099152 224.90788269]
[72.48678589 210.14666748]
[75.15258789 195.38545227]
[77.81838226 180.62423706]
[80.48417664 165.86302185]
[83.14997101 151.10179138]
[77.79772949 137.20205688]
[87.86441803 124.99664307]
[78.41762543 117.50157928]
[73.03564453 106.71028137]
[72.73212433 94.65517426]
[77.56422424 83.60670471]
[86.62186432 75.64574432]
[98.19914246 72.27165222]
[101.30325317 57.59635162]
[104.40736389 42.92104721]
[107.51147461 28.24574661]
[110.61557770 13.57044411]
[98.09172821 21.82593918]
[83.17742920 20.22482872]
[72.69129181 9.49911594]
[71.42743683 -5.44754505]
[79.96368408 -17.78174210]
[94.39737701 -21.86444855]
[108.12963104 -15.82910442]
[114.88245392 -2.43314838]
[119.49646759 -16.70588112]
[124.11047363 -30.97861481]
[128.72448730 -45.25135040]
[133.33848572 -59.52408218]
[137.95249939 -73.79681396]
[142.56651306 -88.06954956]
[128.51441956 -93.32463837]
[114.71414948 -99.20934296]
[101.19389343 -105.71163177]
[87.98126984 -112.81822205]
[75.10326385 -120.51460266]
[62.58619690 -128.78503418]
[50.45563507 -137.61264038]
[38.73636246 -146.97938538]
[27.45231819 -156.86611938]
[16.62655640 -167.25265503]
[6.28119373 -178.11776733]
[-3.56263471 -189.43925476]
[-12.88481903 -201.19400024]
[-21.66631317 -213.35798645]
[-29.88917923 -225.90635681]
[-37.53661728 -238.81347656]
[-44.59300232 -252.05299377]
[-51.04392242 -265.59783936]
[-56.87619400 -279.42034912]
[-62.07790375 -293.49227905]
[-66.63842773 -307.78488159]
[-70.54844666 -322.26898193]
[-73.79997253 -336.91497803]
[-76.38636017 -351.69290161]
[-78.30233002 -366.57263184]
[-79.54396820 -381.52374268]
[-80.10873413 -396.51568604]
[-79.99547577 -411.51782227]
[-79.20442200 -426.49951172]
[-77.73719788 -441.43017578]
[-75.59678650 -456.27926636]
[-72.78757477 -471.01647949]
[-69.31529236 -485.61172485]
[-65.18704224 -500.03512573]
[-60.41124344 -514.25726318]
[-54.99766541 -528.24902344]
[-48.95736694 -541.98193359]
[-42.30268097 -555.42785645]
[-35.04720688 -568.55926514]
[-27.20576859 -581.34948730]
[-18.79438400 -593.77227783]
[-9.83023739 -605.80230713]
[-0.33164197 -617.41491699]
[9.68199730 -628.58654785]
[20.19022369 -639.29418945]
[31.17156792 -649.51611328]
[42.60359573 -659.23132324]
[54.46295547 -668.42004395]
[66.72541046 -677.06353760]
[79.36592102 -685.14404297]
[92.35865784 -692.64508057]
[105.67707062 -699.55139160]
[119.29396057 -705.84881592]
[133.18150330 -711.52447510]
[147.31134033 -716.56683350]
[161.65458679 -720.96551514]
[176.18194580 -724.71154785]
[190.86373901 -727.79736328]
[205.66996765 -730.21655273]
[220.57040405 -731.96423340]
[235.53459167 -733.03680420]
[250.53195190 -733.43206787]
[265.53186035 -733.14929199]
[280.50366211 -732.18896484]
[295.41677856 -730.55303955]
[310.24072266 -728.24493408]
[324.94525146 -725.26934814]
[339.50030518 -721.63232422]
[353.87612915 -717.34130859]
[368.04336548 -712.40509033]
[381.97308350 -706.83374023]
[395.63681030 -700.63861084]
[409.00665283 -693.83233643]
[422.05526733 -686.42895508]
[434.75601196 -678.44342041]
[447.08294678 -669.89221191]
[459.01086426 -660.79266357]
[470.51544189 -651.16339111]
[481.57312012 -641.02410889]
[492.16134644 -630.39556885]
[502.25848389 -619.29937744]
[511.84387207 -607.75830078]
[520.89801025 -595.79583740]
[529.40228271 -583.43646240]
[537.33941650 -570.70544434]
[544.69317627 -557.62872314]
[551.44848633 -544.23309326]
[557.59161377 -530.54589844]
[563.10992432 -516.59509277]
[567.99224854 -502.40921021]
[572.22857666 -488.01715088]
[575.81018066 -473.44839478]
[578.72985840 -458.73263550]
[580.98150635 -443.90002441]
[582.56066895 -428.98077393]
[583.46405029 -414.00543213]
[583.68981934 -399.00454712]
[583.23748779 -384.00881958]
[582.10797119 -369.04882812]
[580.30364990 -354.15515137]
[577.82812500 -339.35821533]
[574.68652344 -324.68826294]
[570.88525391 -310.17526245]
[566.43200684 -295.84884644]
[561.33599854 -281.73831177]
[555.60754395 -267.87243652]
[549.25836182 -254.27960205]
[542.30145264 -240.98754883]
[534.75103760 -228.02345276]
[526.62249756 -215.41377258]
[517.93243408 -203.18428040]
[508.69866943 -191.35995483]
[498.94003296 -179.96496582]
[488.67642212 -169.02258301]
[477.92886353 -158.55516052]
[466.71926880 -148.58409119]
[455.07055664 -139.12973022]
[443.00653076 -130.21141052]
[430.55184937 -121.84733582]
[417.73193359 -114.05460358]
[404.57296753 -106.84913635]
[391.10183716 -100.24564362]
[377.34606934 -94.25762177]
[363.33380127 -88.89730835]
[349.09359741 -84.17564392]
[334.65460205 -80.10227966]
[320.04626465 -76.68553925]
[305.29849243 -73.93240356]
[290.44134521 -71.84849548]
[275.50521851 -70.43807220]
[260.52062988 -69.70401764]
[245.51815796 -69.64781952]
[230.52847290 -70.26960754]
[215.58219910 -71.56810760]
[200.70986938 -73.54066467]
[185.94186401 -76.18324280]
[171.30836487 -79.49045563]
[156.83924866 -83.45553589]
[152.22523499 -69.18280792]
[147.61122131 -54.91007233]
[142.99722290 -40.63734055]
[138.38320923 -26.36460686]
[133.76919556 -12.09187222]
[129.15518188 2.18086076]
[125.29088593 16.67455482]
[122.18677521 31.34985733]
[119.08266449 46.02515793]
[115.97855377 60.70046234]
[112.87444305 75.37576294]
[125.04770660 87.97017670]
[127.26787567 105.34482574]
[118.65273285 120.59562683]
[102.62564087 127.66243744]
[107.78720856 142.61799622]
[97.91118622 153.76759338]
[95.24539185 168.52880859]
[92.57959747 183.29002380]
[89.91380310 198.05123901]
[87.24800873 212.81246948]
[84.58221436 227.57368469]
[81.91641235 242.33489990]
[95.14650726 249.69990540]
[105.26647949 260.96334839]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 208]
[16 207]
[17 206]
[18 205]
[19 204]
[20 203]
[21 202]
[23 200]
[29 196]
[30 195]
[31 194]
[32 193]
[33 192]
[41 191]
[42 190]
[43 189]
[44 188]
[45 187]
[46 186]
[47 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
