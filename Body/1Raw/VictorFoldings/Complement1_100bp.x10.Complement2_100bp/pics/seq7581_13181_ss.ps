%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[234.97415161 242.38227844]
[241.54757690 228.88796997]
[249.30415344 216.03721619]
[237.20840454 207.16632080]
[225.11265564 198.29542542]
[210.27380371 197.00784302]
[203.72135925 182.60728455]
[191.62561035 173.73638916]
[179.52984619 164.86549377]
[167.43409729 155.99459839]
[155.33834839 147.12370300]
[143.24259949 138.25280762]
[130.95175171 129.65423584]
[118.47196198 121.33229828]
[105.99217224 113.01035309]
[92.05313110 111.91732788]
[85.68588257 99.46944427]
[73.20609283 91.14749908]
[60.72629547 82.82555389]
[48.12398529 74.69033813]
[35.40194702 66.74365234]
[22.62110710 58.89189911]
[9.78216553 51.13550568]
[-3.05677462 43.37911606]
[-12.02025032 41.62016296]
[-16.02791023 35.41045380]
[-28.74994659 27.46377182]
[-41.47198105 19.51708603]
[-50.30961227 31.64513588]
[-59.98993301 43.11181259]
[-70.46361542 53.85868454]
[-81.67728424 63.83098221]
[-93.57380676 72.97789764]
[-106.09255981 81.25281525]
[-119.16973114 88.61356354]
[-132.73870850 95.02264404]
[-146.73033142 100.44738770]
[-161.07330322 104.86015320]
[-175.69451904 108.23845673]
[-190.51950073 110.56507874]
[-205.47270203 111.82816315]
[-220.47789001 112.02127838]
[-235.45863342 111.14344025]
[-250.33859253 109.19911194]
[-265.04190063 106.19821930]
[-279.49371338 102.15603638]
[-293.62030029 97.09317017]
[-307.34970093 91.03542328]
[-320.61199951 84.01365662]
[-333.33953857 76.06365967]
[-345.46752930 67.22593689]
[-356.93414307 57.54552841]
[-367.68093872 47.07176590]
[-377.65313721 35.85801315]
[-386.79995728 23.96142387]
[-395.07479858 11.44261265]
[-402.43542480 -1.63462245]
[-408.84442139 -15.20364380]
[-414.26904297 -29.19530487]
[-418.68170166 -43.53830719]
[-422.05987549 -58.15956116]
[-424.38638306 -72.98456573]
[-425.64938354 -87.93775940]
[-425.84237671 -102.94296265]
[-424.96441650 -117.92369843]
[-423.01998901 -132.80363464]
[-420.01898193 -147.50694275]
[-415.97668457 -161.95869446]
[-410.91369629 -176.08525085]
[-404.85586548 -189.81462097]
[-397.83398438 -203.07684326]
[-389.88388062 -215.80433655]
[-381.04608154 -227.93225098]
[-371.36557007 -239.39878845]
[-360.89172363 -250.14549255]
[-349.67791748 -260.11761475]
[-337.78125000 -269.26434326]
[-325.26235962 -277.53909302]
[-312.18508911 -284.89962769]
[-298.61599731 -291.30850220]
[-284.62429810 -296.73303223]
[-270.28128052 -301.14556885]
[-255.65998840 -304.52365112]
[-240.83496094 -306.85003662]
[-225.88175964 -308.11291504]
[-210.87655640 -308.30578613]
[-195.89582825 -307.42773438]
[-181.01591492 -305.48315430]
[-166.31262207 -302.48205566]
[-151.86090088 -298.43963623]
[-137.73439026 -293.37655640]
[-124.00506592 -287.31860352]
[-110.74288940 -280.29663086]
[-98.01544952 -272.34643555]
[-85.88760376 -263.50854492]
[-74.42115021 -253.82795715]
[-63.67452240 -243.35401917]
[-53.70248032 -232.14012146]
[-44.55583954 -220.24339294]
[-36.28120804 -207.72444153]
[-28.92075920 -194.64709473]
[-22.51199341 -181.07798767]
[-17.08757210 -167.08624268]
[-12.67513657 -152.74316406]
[-9.29717159 -138.12185669]
[-6.97088957 -123.29682159]
[-5.70814657 -108.34360504]
[-5.51537609 -93.33840179]
[-6.39356089 -78.35768127]
[-8.33822632 -63.47777557]
[-11.33946133 -48.77451706]
[-15.38197422 -34.32282639]
[-20.44516373 -20.19634819]
[-26.50322914 -6.46706867]
[-33.52529907 6.79505014]
[-20.80326271 14.74173450]
[-8.08122540 22.68841934]
[4.69961691 30.54017448]
[17.53855705 38.29656601]
[30.37749863 46.05295563]
[37.72813034 46.82107925]
[43.34863281 54.02161789]
[56.07067108 61.96829987]
[60.84303665 61.78509521]
[65.78115845 64.59791565]
[69.04824066 70.34575653]
[81.52803802 78.66770172]
[94.00782776 86.98964691]
[107.94686890 88.08267212]
[114.31411743 100.53055573]
[126.79390717 108.85250092]
[139.27369690 117.17444611]
[144.48283386 117.50923920]
[148.62812805 119.59963989]
[151.21900940 122.74644470]
[152.11349487 126.15705109]
[164.20924377 135.02795410]
[176.30499268 143.89884949]
[188.40074158 152.76974487]
[200.49650574 161.64064026]
[212.59225464 170.51153564]
[228.29626465 172.43362427]
[233.98355103 186.19967651]
[246.07929993 195.07057190]
[258.17504883 203.94146729]
[268.10089111 192.68164062]
[278.99612427 182.35690308]
[290.77301025 173.05036926]
[303.33670044 164.83699036]
[316.58609009 157.78289795]
[330.41445923 151.94487000]
[344.71044922 147.36991882]
[359.35903931 144.09489441]
[374.24218750 142.14614868]
[389.24014282 141.53936768]
[404.23208618 142.27946472]
[419.09732056 144.36044312]
[433.71618652 147.76557922]
[447.97097778 152.46745300]
[461.74688721 158.42819214]
[474.93301392 165.59980774]
[487.42321777 173.92456055]
[499.11688232 183.33541870]
[509.91989136 193.75662231]
[519.74523926 205.10424805]
[528.51385498 217.28694153]
[536.15509033 230.20660400]
[542.60742188 243.75921631]
[547.81896973 257.83566284]
[551.74768066 272.32260132]
[554.36193848 287.10339355]
[555.64080811 302.05902100]
[555.57385254 317.06906128]
[554.16162109 332.01269531]
[551.41558838 346.76956177]
[547.35778809 361.22088623]
[542.02087402 375.25027466]
[535.44787598 388.74478149]
[527.69171143 401.59576416]
[518.81475830 413.69976807]
[508.88858032 424.95928955]
[497.99304199 435.28369141]
[486.21588135 444.58984375]
[473.65191650 452.80285645]
[460.40231323 459.85653687]
[446.57379150 465.69415283]
[432.27761841 470.26864624]
[417.62896729 473.54324341]
[402.74572754 475.49154663]
[387.74777222 476.09783936]
[372.75585938 475.35729980]
[357.89065552 473.27584839]
[343.27191162 469.87026978]
[329.01727295 465.16796875]
[315.24154663 459.20681763]
[302.05563354 452.03479004]
[289.56570435 443.70965576]
[277.87231445 434.29846191]
[267.06961060 423.87692261]
[257.24462891 412.52899170]
[248.47639465 400.34603882]
[240.83554077 387.42614746]
[234.38360596 373.87332153]
[229.17251587 359.79672241]
[225.24423218 345.30966187]
[222.63038635 330.52880859]
[221.35202026 315.57312012]
[221.41943359 300.56307983]
[222.83209229 285.61947632]
[225.57858276 270.86270142]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 145]
[4 144]
[5 143]
[7 141]
[8 140]
[9 139]
[10 138]
[11 137]
[12 136]
[13 132]
[14 131]
[15 130]
[17 128]
[18 127]
[19 126]
[20 123]
[21 122]
[22 120]
[23 119]
[24 118]
[26 117]
[27 116]
[28 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
