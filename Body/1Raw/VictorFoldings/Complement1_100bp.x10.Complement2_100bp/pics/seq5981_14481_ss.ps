%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[110.59895325 385.89483643]
[103.35649872 399.05545044]
[94.45816040 411.15811157]
[84.05619049 421.99572754]
[72.32857513 431.38287354]
[59.47599792 439.15887451]
[45.71837997 445.19070435]
[31.29113007 449.37512207]
[16.44112206 451.64056396]
[1.42245507 451.94827271]
[-13.50788021 450.29293823]
[-28.09440613 446.70291138]
[-42.08752823 441.23962402]
[-55.24780273 433.99655151]
[-67.35004425 425.09762573]
[-78.18717194 414.69512939]
[-87.57373810 402.96707153]
[-95.34912872 390.11413574]
[-101.38030243 376.35623169]
[-105.56405640 361.92877197]
[-107.82879639 347.07867432]
[-108.13577271 332.05996704]
[-106.47972870 317.12973022]
[-102.88900757 302.54336548]
[-97.42504883 288.55050659]
[-90.18135071 275.39056396]
[-81.28186035 263.28875732]
[-70.87885284 252.45213318]
[-59.15034866 243.06611633]
[-46.29703140 235.29133606]
[-32.53883743 229.26081848]
[-18.11119080 225.07775879]
[-3.26096582 222.81372070]
[11.75772953 222.50746155]
[26.68790627 224.16421509]
[41.27408981 227.75563049]
[46.72944641 213.78283691]
[52.18480682 199.81002808]
[49.60614395 185.14035034]
[61.83258438 175.09919739]
[59.25392151 160.42950439]
[71.48036194 150.38835144]
[70.98478699 143.01432800]
[77.12236023 136.24913025]
[82.78514862 122.35909271]
[88.44792938 108.46907043]
[86.73600006 94.59243774]
[97.66204071 85.86814117]
[95.70711517 70.16818237]
[107.67665863 61.30368423]
[113.33944702 47.41365814]
[119.00222778 33.52362823]
[107.21949768 24.08715248]
[98.58191681 11.72533607]
[93.78249359 -2.55509210]
[93.20209503 -17.59408951]
[96.87920380 -32.17252731]
[104.50753784 -45.11102295]
[115.46150970 -55.36534882]
[128.84753418 -62.11071014]
[143.57695007 -64.80808258]
[158.45448303 -63.24726868]
[164.11727905 -77.13729095]
[169.78005981 -91.02732086]
[175.44285583 -104.91735077]
[179.84384155 -119.25719452]
[182.94795227 -133.93249512]
[186.05206299 -148.60780334]
[189.15617371 -163.28309631]
[174.73345947 -167.42779541]
[160.64317322 -172.59083557]
[146.95710754 -178.74591064]
[133.74501038 -185.86166382]
[121.07422638 -193.90182495]
[109.00929260 -202.82543945]
[97.61171722 -212.58700562]
[86.93955994 -223.13682556]
[77.04721832 -234.42109680]
[67.98509216 -246.38232422]
[59.79936600 -258.95956421]
[52.53174973 -272.08874512]
[46.21928024 -285.70291138]
[40.89412689 -299.73275757]
[36.58341980 -314.10671997]
[33.30912781 -328.75158691]
[31.08793831 -343.59274292]
[29.93116760 -358.55453491]
[29.84471130 -373.56072998]
[30.82901001 -388.53485107]
[32.87904739 -403.40060425]
[35.98437881 -418.08221436]
[40.12917709 -432.50491333]
[45.29232407 -446.59515381]
[51.44750595 -460.28118896]
[58.56335831 -473.49322510]
[66.60362244 -486.16394043]
[75.52732086 -498.22879028]
[85.28899384 -509.62631226]
[95.83887482 -520.29840088]
[107.12322235 -530.19061279]
[119.08453369 -539.25268555]
[131.66183472 -547.43829346]
[144.79106140 -554.70581055]
[158.40528870 -561.01818848]
[172.43516541 -566.34320068]
[186.80915833 -570.65380859]
[201.45405579 -573.92797852]
[216.29522705 -576.14910889]
[231.25701904 -577.30572510]
[246.26321411 -577.39208984]
[261.23733521 -576.40765381]
[276.10305786 -574.35754395]
[290.78466797 -571.25207520]
[305.20733643 -567.10717773]
[319.29754639 -561.94390869]
[332.98352051 -555.78863525]
[346.19549561 -548.67266846]
[358.86614990 -540.63232422]
[370.93093872 -531.70849609]
[382.32836914 -521.94677734]
[393.00036621 -511.39678955]
[402.89254761 -500.11236572]
[411.95449829 -488.15100098]
[420.14001465 -475.57360840]
[427.40744019 -462.44433594]
[433.71969604 -448.83004761]
[439.04464722 -434.80014038]
[443.35513306 -420.42611694]
[446.62918091 -405.78118896]
[448.85015869 -390.94000244]
[450.00668335 -375.97821045]
[450.09292603 -360.97201538]
[449.10839844 -345.99789429]
[447.05813599 -331.13217163]
[443.95257568 -316.45059204]
[439.80755615 -302.02798462]
[434.64419556 -287.93780518]
[428.48880005 -274.25189209]
[421.37274170 -261.03994751]
[413.33227539 -248.36935425]
[404.40838623 -236.30462646]
[394.64654541 -224.90727234]
[384.09649658 -214.23536682]
[372.81201172 -204.34327698]
[360.85055542 -195.28143311]
[348.27313232 -187.09599304]
[335.14379883 -179.82867432]
[321.52944946 -173.51652527]
[307.49951172 -168.19168091]
[293.12542725 -163.88131714]
[278.48049927 -160.60736084]
[263.63931274 -158.38650513]
[248.67747498 -157.23008728]
[233.67129517 -157.14396667]
[218.69718933 -158.12861633]
[203.83148193 -160.17898560]
[200.72737122 -145.50369263]
[197.62326050 -130.82838440]
[194.51914978 -116.15308380]
[205.08100891 -126.80424500]
[219.18910217 -131.89950562]
[234.11938477 -130.45503235]
[246.98905945 -122.74974060]
[255.31318665 -110.27140045]
[257.48452759 -95.42938995]
[253.08378601 -81.08946228]
[242.96070862 -70.02043152]
[229.06990051 -64.35955811]
[214.09346008 -65.19986725]
[200.92309570 -72.37910461]
[192.10180664 -84.51107788]
[189.33287048 -99.25456238]
[183.67008972 -85.36453247]
[178.00730896 -71.47451019]
[172.34451294 -57.58448029]
[184.07261658 -48.29851913]
[192.71762085 -36.07169724]
[197.57194519 -21.88997269]
[198.23410034 -6.89989948]
[194.64187622 7.68406582]
[187.07809448 20.67795753]
[176.14836121 31.02442169]
[162.73257446 37.87874222]
[147.91409302 40.67782211]
[132.89225769 39.18641663]
[127.22946930 53.07644272]
[121.56668091 66.96646881]
[123.92665100 81.67292786]
[111.55207062 91.53092957]
[113.26399994 105.40756226]
[102.33795929 114.13185883]
[96.67517090 128.02188110]
[91.01238251 141.91191101]
[85.45316315 155.84370422]
[87.64161682 171.51281738]
[75.80538177 180.55455017]
[77.99384308 196.22366333]
[66.15760040 205.26539612]
[60.70224762 219.23818970]
[55.24688721 233.21098328]
[68.40785217 240.45280457]
[80.51094818 249.35057068]
[91.34906006 259.75201416]
[100.73674011 271.47918701]
[108.51335907 284.33139038]
[114.54584503 298.08874512]
[118.73096466 312.51577759]
[120.99712372 327.36569214]
[121.30552673 342.38433838]
[119.65090942 357.31475830]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 200]
[37 199]
[38 198]
[40 196]
[42 194]
[44 193]
[45 192]
[46 191]
[48 189]
[50 187]
[51 186]
[52 185]
[62 175]
[63 174]
[64 173]
[65 172]
[66 159]
[67 158]
[68 157]
[69 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
