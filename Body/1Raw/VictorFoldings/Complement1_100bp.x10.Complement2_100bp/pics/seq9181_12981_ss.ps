%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[-39.57365799 573.03393555]
[-51.11141205 582.62579346]
[-63.17794037 591.54333496]
[-75.73387909 599.75744629]
[-88.73828125 607.24133301]
[-102.14871979 613.97064209]
[-115.92145538 619.92340088]
[-130.01156616 625.08013916]
[-144.37309265 629.42413330]
[-158.95918274 632.94110107]
[-173.72227478 635.61968994]
[-188.61419678 637.45104980]
[-203.58639526 638.42926025]
[-218.59001160 638.55114746]
[-233.57611084 637.81628418]
[-248.49583435 636.22711182]
[-263.30047607 633.78875732]
[-277.94180298 630.50921631]
[-292.37200928 626.39910889]
[-306.54403687 621.47192383]
[-320.41165161 615.74371338]
[-333.92965698 609.23321533]
[-347.05392456 601.96154785]
[-359.74163818 593.95245361]
[-371.95144653 585.23217773]
[-383.64352417 575.82904053]
[-394.77969360 565.77374268]
[-405.32366943 555.09906006]
[-415.24102783 543.83990479]
[-424.49945068 532.03289795]
[-433.06872559 519.71661377]
[-440.92089844 506.93118286]
[-448.03036499 493.71835327]
[-454.37393188 480.12121582]
[-459.93087769 466.18408203]
[-464.68313599 451.95242310]
[-468.61517334 437.47271729]
[-471.71414185 422.79211426]
[-473.96997070 407.95855713]
[-475.37530518 393.02038574]
[-475.92550659 378.02636719]
[-475.61883545 363.02539062]
[-474.45626831 348.06637573]
[-472.44161987 333.19815063]
[-469.58145142 318.46917725]
[-465.88507080 303.92749023]
[-461.36453247 289.62057495]
[-456.03460693 275.59503174]
[-449.91268921 261.89666748]
[-443.01870728 248.57012939]
[-435.37518311 235.65888977]
[-427.00704956 223.20507812]
[-417.94158936 211.24929810]
[-408.20834351 199.83055115]
[-397.83911133 188.98609924]
[-386.86767578 178.75129700]
[-375.32983398 169.15953064]
[-363.26324463 160.24209595]
[-350.70724487 152.02807617]
[-337.70278931 144.54425049]
[-324.29229736 137.81504822]
[-310.51950073 131.86242676]
[-296.42935181 126.70576477]
[-282.06781006 122.36191559]
[-267.48168945 118.84503174]
[-252.71856689 116.16659546]
[-237.82662964 114.33533478]
[-222.85443115 113.35722351]
[-207.85081482 113.23545837]
[-192.86470032 113.97042847]
[-177.94500732 115.55974579]
[-163.14036560 117.99822235]
[-148.49908447 121.27790070]
[-134.06890869 125.38808441]
[-119.89692688 130.31536865]
[-106.02934265 136.04368591]
[-92.51139832 142.55433655]
[-79.38719177 149.82609558]
[-66.69952393 157.83525085]
[-54.48978043 166.55566406]
[-42.79779053 175.95889282]
[-31.66168976 186.01428223]
[-21.11780167 196.68901062]
[-9.86170578 186.77435303]
[1.39438999 176.85971069]
[12.65048599 166.94505310]
[23.90658188 157.03041077]
[35.16267776 147.11575317]
[46.41877365 137.20109558]
[57.67486954 127.28645325]
[68.93096161 117.37180328]
[80.18705750 107.45714569]
[80.85404205 90.96706390]
[93.15687561 79.96669769]
[109.61857605 81.14145660]
[120.72581482 71.06031799]
[111.59079742 59.15187836]
[103.47037506 46.52974319]
[96.42002869 33.28013229]
[90.48791504 19.49356079]
[85.71455383 5.26420498]
[82.13256073 -9.31073475]
[79.76639557 -24.13169289]
[78.63223267 -39.09742737]
[78.73780823 -54.10570526]
[80.08241272 -69.05400085]
[82.65685272 -83.84020233]
[86.44353485 -98.36330414]
[91.41661072 -112.52410126]
[97.54209900 -126.22585297]
[104.77814484 -139.37495422]
[113.07534027 -151.88160706]
[122.37699127 -163.66035461]
[132.61955261 -174.63073730]
[143.73307800 -184.71781921]
[155.64161682 -193.85269165]
[168.26385498 -201.97296143]
[181.51354980 -209.02316284]
[195.30018616 -214.95510864]
[209.52960205 -219.72828674]
[224.10458374 -223.31011963]
[238.92556763 -225.67610168]
[253.89132690 -226.81008911]
[268.89959717 -226.70433044]
[283.84786987 -225.35955811]
[298.63406372 -222.78494263]
[313.15710449 -218.99807739]
[327.31784058 -214.02484131]
[341.01953125 -207.89918518]
[354.16854858 -200.66297913]
[366.67507935 -192.36563110]
[378.45373535 -183.06384277]
[389.42398071 -172.82115173]
[399.51092529 -161.70750427]
[408.64566040 -149.79885864]
[416.76577759 -137.17652893]
[423.81582642 -123.92674255]
[429.74761963 -110.14002991]
[434.52062988 -95.91056061]
[438.10226440 -81.33554077]
[440.46807861 -66.51451874]
[441.60189819 -51.54875946]
[441.49597168 -36.54048538]
[440.15100098 -21.59222221]
[437.57620239 -6.80607939]
[433.78918457 7.71693325]
[428.81576538 21.87760925]
[422.68994141 35.57921219]
[415.45358276 48.72814941]
[407.15609741 61.23459625]
[397.85415649 73.01312256]
[387.61132812 83.98326111]
[376.49758911 94.07008362]
[364.58880615 103.20467377]
[351.96640015 111.32463837]
[338.71652222 118.37451172]
[324.92974854 124.30613708]
[310.70022583 129.07897949]
[296.12515259 132.66046143]
[281.30410767 135.02609253]
[266.33831787 136.15972900]
[251.33006287 136.05360413]
[236.38180542 134.70846558]
[221.59570312 132.13349915]
[207.07272339 128.34629822]
[192.91210938 123.37271881]
[179.21058655 117.24674225]
[166.06173706 110.01022339]
[153.55538940 101.71258545]
[141.77697754 92.41051483]
[130.80694580 82.16755676]
[119.69971466 92.24869537]
[120.59688568 104.89182281]
[114.11064148 115.78136444]
[102.56611633 121.01372528]
[90.10171509 118.71324158]
[78.84561920 128.62789917]
[67.58952332 138.54254150]
[56.33342361 148.45719910]
[45.07732773 158.37185669]
[33.82123184 168.28649902]
[22.56513786 178.20115662]
[11.30904102 188.11579895]
[0.05294542 198.03045654]
[-11.20315075 207.94509888]
[-1.94463682 219.75202942]
[6.62473249 232.06825256]
[14.47700500 244.85360718]
[21.58656883 258.06637573]
[27.93023491 271.66348267]
[33.48730850 285.60058594]
[38.23966980 299.83218384]
[42.17181015 314.31188965]
[45.27090454 328.99243164]
[47.52684784 343.82598877]
[48.93228149 358.76412964]
[49.48262024 373.75814819]
[49.17606735 388.75912476]
[48.01362610 403.71813965]
[45.99908447 418.58639526]
[43.13901520 433.31539917]
[39.44274521 447.85711670]
[34.92233658 462.16406250]
[29.59252930 476.18963623]
[23.47070885 489.88806152]
[16.57684517 503.21466064]
[8.93342209 516.12597656]
[0.56537336 528.57983398]
[-8.50000763 540.53570557]
[-18.23315048 551.95446777]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[83 185]
[84 184]
[85 183]
[86 182]
[87 181]
[88 180]
[89 179]
[90 178]
[91 177]
[92 176]
[95 172]
[96 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
