%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[186.03219604 661.37835693]
[174.44134521 651.84991455]
[163.44697571 641.63903809]
[153.08917236 630.78302002]
[143.40573120 619.32135010]
[134.43200684 607.29595947]
[126.20072937 594.75067139]
[118.74194336 581.73126221]
[112.08285522 568.28527832]
[106.24776459 554.46173096]
[101.25797272 540.31109619]
[97.13167572 525.88500977]
[93.88393402 511.23614502]
[91.52660370 496.41787720]
[90.06827545 481.48431396]
[89.51428223 466.48992920]
[89.86663818 451.48947144]
[91.12405396 436.53762817]
[93.28195953 421.68902588]
[96.33245850 406.99777222]
[100.26443481 392.51751709]
[105.06352997 378.30108643]
[110.71224213 364.40036011]
[117.18995667 350.86605835]
[124.47303009 337.74755859]
[132.53489685 325.09274292]
[141.34614563 312.94778442]
[150.87460327 301.35699463]
[161.08552551 290.36264038]
[171.94163513 280.00488281]
[183.40332031 270.32153320]
[195.42877197 261.34783936]
[187.19995117 248.80644226]
[178.97114563 236.26504517]
[170.74234009 223.72364807]
[162.51353455 211.18225098]
[154.28472900 198.64085388]
[140.73085022 200.31701660]
[127.71458435 195.96897888]
[117.79414368 186.39118958]
[112.94513702 173.41175842]
[114.16725159 159.54371643]
[121.27878571 147.49844360]
[113.23760986 134.83590698]
[105.19644165 122.17338562]
[87.45550537 119.00782776]
[77.56933594 103.94047546]
[81.72818756 86.40577698]
[67.58144379 79.32196808]
[66.84696198 64.44548798]
[58.43234634 52.02798843]
[50.01772690 39.61049271]
[41.60310745 27.19299889]
[33.18848801 14.77550316]
[24.77387047 2.35800743]
[11.55762672 9.47993851]
[-2.31133127 15.22824478]
[-16.69068527 19.54393959]
[-31.43287659 22.38273430]
[-46.38663101 23.71549988]
[-61.39849472 23.52856255]
[-76.31442261 21.82383537]
[-90.98135376 18.61881447]
[-105.24877930 13.94639015]
[-118.97029877 7.85450649]
[-132.00509644 0.40567747]
[-144.21942139 -8.32365990]
[-155.48793030 -18.24392891]
[-165.69499207 -29.25333023]
[-174.73585510 -41.23889160]
[-182.51776123 -54.07761765]
[-188.96086121 -67.63776398]
[-193.99900818 -81.78018188]
[-197.58053589 -96.35974884]
[-199.66867065 -111.22685242]
[-200.24198914 -126.22892761]
[-199.29461670 -141.21203613]
[-196.83625793 -156.02241516]
[-192.89215088 -170.50810242]
[-187.50277710 -184.52044678]
[-180.72341919 -197.91563416]
[-172.62365723 -210.55624390]
[-163.28662109 -222.31254578]
[-152.80809021 -233.06390381]
[-141.29562378 -242.69998169]
[-128.86734009 -251.12190247]
[-115.65078735 -258.24325562]
[-101.78157806 -263.99096680]
[-87.40203857 -268.30603027]
[-72.65971375 -271.14416504]
[-57.70590591 -272.47625732]
[-42.69404984 -272.28866577]
[-27.77819633 -270.58328247]
[-13.11140633 -267.37762451]
[1.15581465 -262.70455933]
[14.87706089 -256.61209106]
[27.91153145 -249.16267395]
[40.12546921 -240.43280029]
[51.39354324 -230.51203918]
[61.60011673 -219.50218201]
[70.64046478 -207.51623535]
[78.42180634 -194.67715454]
[84.86429596 -181.11672974]
[89.90183258 -166.97409058]
[93.48271179 -152.39436340]
[95.57019043 -137.52717590]
[96.14285278 -122.52507019]
[95.19481659 -107.54200745]
[92.73580933 -92.73172760]
[88.79106903 -78.24622345]
[83.40106964 -64.23412323]
[76.62113190 -50.83921814]
[68.52081299 -38.19896698]
[59.18325424 -26.44307899]
[48.70425797 -15.69218636]
[37.19136429 -6.05661106]
[45.60598373 6.36088419]
[54.02060318 18.77837944]
[62.43522263 31.19587517]
[70.84983826 43.61336899]
[79.26445770 56.03086472]
[92.80932617 62.22649384]
[94.14568329 77.99115753]
[105.41484833 77.87893677]
[115.35806274 83.18357849]
[121.54048920 92.60612488]
[122.44821167 103.83923340]
[117.85896301 114.13221741]
[125.90013885 126.79473877]
[133.94131470 139.45726013]
[150.45309448 138.58972168]
[165.06559753 146.12432861]
[173.83393860 159.92045593]
[174.44480896 176.16183472]
[166.82612610 190.41203308]
[175.05493164 202.95344543]
[183.28373718 215.49484253]
[191.51255798 228.03623962]
[199.74136353 240.57763672]
[207.97016907 253.11903381]
[220.98945618 245.66006470]
[234.43534851 239.00079346]
[248.25880432 233.16551208]
[262.40936279 228.17552185]
[276.83538818 224.04902649]
[291.48422241 220.80108643]
[306.30245972 218.44354248]
[321.23602295 216.98501587]
[336.23037720 216.43080139]
[351.23086548 216.78295898]
[366.18270874 218.04016113]
[381.03134155 220.19786072]
[395.72262573 223.24815369]
[410.20294189 227.17993164]
[424.41943359 231.97882080]
[438.32025146 237.62734985]
[451.85464478 244.10487366]
[464.97323608 251.38777161]
[477.62817383 259.44946289]
[489.77325439 268.26052856]
[501.36416626 277.78881836]
[512.35864258 287.99960327]
[522.71655273 298.85556030]
[532.40008545 310.31710815]
[541.37396240 322.34243774]
[549.60534668 334.88763428]
[557.06420898 347.90698242]
[563.72344971 361.35290527]
[569.55865479 375.17636108]
[574.54858398 389.32696533]
[578.67504883 403.75299072]
[581.92291260 418.40185547]
[584.28039551 433.22012329]
[585.73883057 448.15365601]
[586.29296875 463.14804077]
[585.94073486 478.14849854]
[584.68347168 493.10034180]
[582.52569580 507.94897461]
[579.47534180 522.64025879]
[575.54351807 537.12054443]
[570.74450684 551.33703613]
[565.09594727 565.23779297]
[558.61834717 578.77215576]
[551.33538818 591.89074707]
[543.27368164 604.54559326]
[534.46252441 616.69067383]
[524.93420410 628.28155518]
[514.72338867 639.27600098]
[503.86734009 649.63385010]
[492.40576172 659.31732178]
[480.38037109 668.29107666]
[467.83514404 676.52246094]
[454.81576538 683.98126221]
[441.36981201 690.64044189]
[427.54632568 696.47558594]
[413.39572144 701.46545410]
[398.96966553 705.59179688]
[384.32077026 708.83959961]
[369.50250244 711.19702148]
[354.56893921 712.65539551]
[339.57458496 713.20947266]
[324.57409668 712.85717773]
[309.62228394 711.59985352]
[294.77365112 709.44201660]
[280.08239746 706.39160156]
[265.60211182 702.45965576]
[251.38566589 697.66064453]
[237.48490906 692.01196289]
[223.95057678 685.53436279]
[210.83204651 678.25134277]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 140]
[33 139]
[34 138]
[35 137]
[36 136]
[37 135]
[43 130]
[44 129]
[45 128]
[48 123]
[50 121]
[51 120]
[52 119]
[53 118]
[54 117]
[55 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
