%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[38.11191177 655.10473633]
[27.73603058 665.98303223]
[15.74942970 675.05596924]
[2.46259117 682.08843994]
[-11.78032303 686.89837646]
[-26.61038589 689.36120605]
[-41.64346695 689.41308594]
[-56.49016953 687.05261230]
[-70.76593018 682.34106445]
[-84.10096741 675.40039062]
[-96.14987946 666.41040039]
[-106.60057068 655.60394287]
[-115.18233490 643.26098633]
[-121.67288971 629.70117188]
[-125.90411377 615.27569580]
[-127.76640320 600.35833740]
[-127.21152496 585.33544922]
[-124.25385284 570.59606934]
[-118.96999359 556.52209473]
[-111.49681854 543.47802734]
[-102.02789307 531.80175781]
[-90.80848694 521.79565430]
[-78.12921906 513.71905518]
[-64.31849670 507.78100586]
[-49.73406219 504.13540649]
[-34.75368500 502.87664795]
[-19.76539230 504.03735352]
[-16.22571945 489.46096802]
[-12.68604660 474.88461304]
[-9.14637375 460.30822754]
[-5.60670185 445.73184204]
[-2.06702924 431.15548706]
[1.47264314 416.57910156]
[-6.70488787 406.62130737]
[-7.66835022 393.57702637]
[-0.84255016 382.19198608]
[11.47275352 376.73782349]
[15.22905445 362.21575928]
[18.98535538 347.69369507]
[22.74165535 333.17163086]
[26.49795532 318.64959717]
[30.25425720 304.12753296]
[34.01055908 289.60546875]
[37.76685715 275.08340454]
[41.52315903 260.56134033]
[40.21836090 258.08029175]
[39.81772614 254.93289185]
[40.57997131 251.46095276]
[42.63542557 248.09352112]
[45.95949554 245.29985046]
[50.57350540 231.02713013]
[55.08113480 216.72044373]
[59.48213196 202.38058472]
[63.88312912 188.04074097]
[58.49455261 177.21070862]
[62.04373932 165.22792053]
[73.15097809 158.67108154]
[77.76498413 144.39834595]
[82.37899780 130.12562561]
[78.93175507 115.63542175]
[90.53885651 104.88434601]
[93.96991730 90.28202057]
[96.19503021 75.44797516]
[98.42015076 60.61393356]
[100.64526367 45.77989197]
[86.21254730 39.88519287]
[73.61243439 30.71917534]
[63.57176971 18.81573486]
[56.66851807 4.86653376]
[53.29850769 -10.31919956]
[53.65272141 -25.86161041]
[57.70649338 -40.86119843]
[65.22116089 -54.45087433]
[75.75812531 -65.84608459]
[88.70445251 -74.39010620]
[103.30850983 -79.59188843]
[118.72360992 -81.15428162]
[120.72762299 -96.01980591]
[114.90340424 -110.72997284]
[124.27171326 -122.30944061]
[126.27572632 -137.17497253]
[128.27973938 -152.04049683]
[129.95127869 -166.94706726]
[131.28952026 -181.88725281]
[132.62774658 -196.82743835]
[126.15249634 -211.26286316]
[134.99441528 -223.24909973]
[136.33264160 -238.18928528]
[137.33691406 -253.15562439]
[130.22354126 -267.28753662]
[138.52142334 -279.65661621]
[139.19120789 -294.64166260]
[139.86099243 -309.62670898]
[140.53077698 -324.61172485]
[141.20056152 -339.59677124]
[141.87034607 -354.58181763]
[142.54013062 -369.56686401]
[143.20991516 -384.55187988]
[129.11445618 -390.08331299]
[117.58040619 -399.89373779]
[109.85887909 -412.91897583]
[106.78745270 -427.74615479]
[108.69930267 -442.76693726]
[115.38703156 -456.35195923]
[126.12521362 -467.02761841]
[139.74905396 -473.63595581]
[154.78071594 -475.46008301]
[169.58972168 -472.30215454]
[182.56965637 -464.50473022]
[192.31257629 -452.91360474]
[197.76164246 -438.78610229]
[198.32577515 -423.65466309]
[193.94378662 -409.16064453]
[185.09100342 -396.87622070]
[172.72769165 -388.13394165]
[158.19496155 -383.88211060]
[157.52517700 -368.89706421]
[156.85539246 -353.91201782]
[156.18560791 -338.92697144]
[155.51582336 -323.94195557]
[154.84602356 -308.95690918]
[154.17623901 -293.97186279]
[153.50645447 -278.98681641]
[160.66773987 -265.92675781]
[152.32194519 -252.48583984]
[154.41873169 -249.65109253]
[155.24664307 -245.65989685]
[154.27711487 -241.11970520]
[151.27282715 -236.85105896]
[149.93460083 -221.91087341]
[156.50556946 -208.54405212]
[147.56793213 -195.48921204]
[146.22970581 -180.54902649]
[144.89146423 -165.60884094]
[146.85957336 -162.68327332]
[147.50845337 -158.65910339]
[146.33715820 -154.16673279]
[143.14527893 -150.03648376]
[141.14125061 -135.17095947]
[139.13723755 -120.30542755]
[145.10481262 -106.65853882]
[135.59315491 -94.01579285]
[133.58914185 -79.15026855]
[147.11164856 -74.04638672]
[159.16160583 -66.05117035]
[169.13023376 -55.56454086]
[176.51293945 -43.11240768]
[180.93501282 -29.32027054]
[182.17050171 -14.88181019]
[180.15383911 -0.52400631]
[174.98327637 13.02947330]
[166.91613770 25.09474754]
[156.35597229 35.06222534]
[143.83238220 42.42741013]
[129.97450256 46.81642532]
[115.47930908 48.00500870]
[113.25419617 62.83905029]
[111.02907562 77.67309570]
[108.80396271 92.50714111]
[119.00595093 81.51081085]
[133.11862183 76.42820740]
[147.98913574 78.39481354]
[160.29541016 86.97127533]
[167.28817749 100.24158478]
[167.40524292 115.24112701]
[160.62045288 128.61897278]
[148.44953918 137.38645935]
[133.61151123 139.58491516]
[119.42124939 134.72320557]
[109.04886627 123.88745117]
[104.81158447 109.49835205]
[107.92881012 125.00942993]
[96.65173340 134.73962402]
[92.03771973 149.01235962]
[87.42371368 163.28509521]
[91.69586945 181.19682312]
[78.22297668 192.44174194]
[73.82197571 206.78158569]
[69.42098236 221.12142944]
[69.89481354 230.24356079]
[64.84623718 235.64112854]
[60.23223114 249.91386414]
[56.04521942 264.31765747]
[52.28891754 278.83972168]
[48.53261566 293.36175537]
[44.77631760 307.88381958]
[41.02001572 322.40588379]
[37.26371384 336.92794800]
[33.50741577 351.45001221]
[29.75111389 365.97207642]
[25.99481201 380.49411011]
[35.14729309 395.40222168]
[30.77216148 411.99057007]
[16.04901886 420.11877441]
[12.50934601 434.69515991]
[8.96967411 449.27151489]
[5.43000126 463.84790039]
[1.89032876 478.42428589]
[-1.64934361 493.00064087]
[-5.18901587 507.57702637]
[8.66234207 513.41961670]
[21.39703751 521.40863037]
[32.68520737 531.33703613]
[42.23446274 542.94769287]
[49.79745865 555.93988037]
[55.17829132 569.97711182]
[58.23758316 584.69567871]
[58.89609146 599.71441650]
[57.13676071 614.64428711]
[53.00516510 629.09857178]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 200]
[28 199]
[29 198]
[30 197]
[31 196]
[32 195]
[33 194]
[37 191]
[38 190]
[39 189]
[40 188]
[41 187]
[42 186]
[43 185]
[44 184]
[45 183]
[50 182]
[51 181]
[52 179]
[53 178]
[54 177]
[57 175]
[58 174]
[59 173]
[61 171]
[62 159]
[63 158]
[64 157]
[65 156]
[77 143]
[78 142]
[80 140]
[81 139]
[82 138]
[83 134]
[84 133]
[85 132]
[87 130]
[88 129]
[89 125]
[91 123]
[92 122]
[93 121]
[94 120]
[95 119]
[96 118]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
