%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[96.10806274 367.87283325]
[88.04330444 380.68838501]
[76.25275421 390.18899536]
[62.01535034 395.34411621]
[46.87546921 395.59451294]
[32.47536850 390.91308594]
[20.37706375 381.80761719]
[11.89289093 369.26577759]
[7.94314671 354.64804077]
[8.95627117 339.54000854]
[14.82236767 325.58050537]
[24.90512657 314.28375244]
[38.11084366 306.87512207]
[53.00706482 304.15826416]
[55.23218155 289.32421875]
[57.45729828 274.49017334]
[59.68241501 259.65612793]
[61.90753174 244.82209778]
[64.13265228 229.98805237]
[66.35776520 215.15400696]
[68.58288574 200.31996155]
[70.80799866 185.48591614]
[73.03311920 170.65188599]
[75.25823975 155.81784058]
[77.48335266 140.98379517]
[79.70847321 126.14974976]
[71.15337372 138.47088623]
[60.25301743 148.77536011]
[47.47089767 156.62503052]
[33.35050964 161.68612671]
[18.49226570 163.74345398]
[3.52794242 162.70951843]
[-10.90616894 158.62828064]
[-24.19632339 151.67329407]
[-35.77741623 142.14028931]
[-45.15701294 130.43460083]
[-51.93628693 117.05396271]
[-55.82698441 102.56732941]
[-56.66366577 87.59068298]
[-54.41075897 72.76083374]
[-49.16405869 58.70835876]
[-41.14665604 46.03076935]
[-30.69945335 35.26712799]
[-18.26667213 26.87511063]
[-4.37696218 21.21154785]
[10.37908077 18.51725769]
[25.37402153 18.90680313]
[39.97026825 22.36362076]
[53.54718018 28.74072456]
[65.52745819 37.76695633]
[75.40170288 49.05851746]
[82.75004578 62.13528442]
[87.26004028 76.44122314]
[88.73991394 91.36804962]
[87.12670898 106.28121948]
[87.90818024 92.32124329]
[100.21076965 85.67760468]
[108.25193787 73.01508331]
[116.29311371 60.35255432]
[124.33428955 47.69003296]
[132.37545776 35.02750778]
[140.41662598 22.36498070]
[148.26838684 9.58413887]
[155.54161072 -3.53455544]
[162.42103577 -16.86398506]
[169.30044556 -30.19341469]
[176.17985535 -43.52284241]
[183.05926514 -56.85227203]
[170.14865112 -64.49715424]
[157.70440674 -72.87978363]
[145.76860046 -81.97180939]
[134.38166809 -91.74245453]
[123.58209229 -102.15866852]
[113.40644836 -113.18519592]
[103.88916016 -124.78472900]
[95.06242371 -136.91802979]
[86.95611572 -149.54402161]
[79.59765625 -162.61999512]
[73.01194763 -176.10171509]
[67.22128296 -189.94354248]
[62.24523926 -204.09864807]
[58.10066605 -218.51913452]
[54.80158234 -233.15621948]
[52.35915756 -247.96035767]
[50.78164673 -262.88146973]
[50.07439423 -277.86904907]
[50.23979187 -292.87240601]
[51.27727890 -307.84075928]
[53.18334579 -322.72348022]
[55.95154190 -337.47018433]
[59.57250214 -352.03097534]
[64.03397369 -366.35659790]
[69.32086182 -380.39855957]
[75.41526794 -394.10937500]
[82.29658508 -407.44262695]
[89.94152069 -420.35321045]
[98.32420349 -432.79742432]
[107.41627502 -444.73318481]
[117.18697357 -456.12008667]
[127.60322571 -466.91958618]
[138.62979126 -477.09521484]
[150.22937012 -486.61245728]
[162.36270142 -495.43911743]
[174.98873901 -503.54537964]
[188.06474304 -510.90377808]
[201.54647827 -517.48944092]
[215.38833618 -523.28002930]
[229.54345703 -528.25604248]
[243.96397400 -532.40057373]
[258.60107422 -535.69958496]
[273.40521240 -538.14196777]
[288.32632446 -539.71936035]
[303.31393433 -540.42657471]
[318.31729126 -540.26110840]
[333.28564453 -539.22357178]
[348.16833496 -537.31744385]
[362.91500854 -534.54919434]
[377.47579956 -530.92816162]
[391.80139160 -526.46661377]
[405.84335327 -521.17968750]
[419.55413818 -515.08520508]
[432.88735962 -508.20385742]
[445.79788208 -500.55886841]
[458.24209595 -492.17611694]
[470.17779541 -483.08401489]
[481.56466675 -473.31326294]
[492.36413574 -462.89697266]
[502.53970337 -451.87036133]
[512.05688477 -440.27072144]
[520.88354492 -428.13735962]
[528.98974609 -415.51129150]
[536.34808350 -402.43527222]
[542.93365479 -388.95349121]
[548.72424316 -375.11163330]
[553.70013428 -360.95648193]
[557.84460449 -346.53594971]
[561.14355469 -331.89883423]
[563.58587646 -317.09466553]
[565.16326904 -302.17355347]
[565.87036133 -287.18597412]
[565.70489502 -272.18261719]
[564.66723633 -257.21426392]
[562.76104736 -242.33157349]
[559.99273682 -227.58488464]
[556.37164307 -213.02412415]
[551.91009521 -198.69854736]
[546.62304688 -184.65661621]
[540.52856445 -170.94586182]
[533.64715576 -157.61267090]
[526.00207520 -144.70214844]
[517.61932373 -132.25799561]
[508.52713013 -120.32231903]
[498.75634766 -108.93549347]
[488.33999634 -98.13606262]
[477.31332397 -87.96055603]
[465.71368408 -78.44340515]
[453.58029175 -69.61682129]
[440.95419312 -61.51066589]
[427.87811279 -54.15237045]
[414.39633179 -47.56683350]
[400.55441284 -41.77633286]
[386.39926147 -36.80046844]
[371.97869873 -32.65607452]
[357.34158325 -29.35717392]
[342.53741455 -26.91493034]
[327.61630249 -25.33760643]
[312.62869263 -24.63054085]
[297.62533569 -24.79612350]
[282.65698242 -25.83379745]
[267.77432251 -27.74004936]
[253.02764893 -30.50842857]
[238.46688843 -34.12957001]
[224.14132690 -38.59121704]
[210.09942627 -43.87827682]
[196.38870239 -49.97285843]
[189.50927734 -36.64342880]
[182.62986755 -23.31400108]
[175.75045776 -9.98457241]
[168.87104797 3.34485722]
[169.59391785 6.05328655]
[169.28750610 9.21124840]
[167.77522278 12.42813683]
[165.02497864 15.25668716]
[161.16471863 17.24473572]
[161.45445251 22.01181984]
[158.75260925 27.01152802]
[153.07916260 30.40615463]
[145.03797913 43.06867981]
[136.99681091 55.73120499]
[128.95564270 68.39373016]
[120.91446686 81.05625153]
[112.87329102 93.71878052]
[112.09181976 107.67875671]
[99.78923035 114.32239532]
[94.54251099 128.37486267]
[92.31739807 143.20890808]
[90.09227753 158.04295349]
[87.86716461 172.87699890]
[85.64204407 187.71104431]
[83.41693115 202.54508972]
[81.19181061 217.37913513]
[78.96669769 232.21316528]
[76.74157715 247.04721069]
[74.51645660 261.88125610]
[72.29134369 276.71530151]
[70.06622314 291.54934692]
[67.84111023 306.38339233]
[81.28461456 313.35122681]
[91.73545837 324.30834961]
[98.06000519 338.06622314]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 207]
[15 206]
[16 205]
[17 204]
[18 203]
[19 202]
[20 201]
[21 200]
[22 199]
[23 198]
[24 197]
[25 196]
[26 195]
[55 194]
[57 192]
[58 191]
[59 190]
[60 189]
[61 188]
[62 187]
[63 184]
[64 179]
[65 178]
[66 177]
[67 176]
[68 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
