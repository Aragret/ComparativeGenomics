%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[75.11955261 455.95916748]
[69.70336151 469.96871948]
[62.57396698 483.18899536]
[53.84381485 495.41140747]
[43.65058899 506.44323730]
[32.15504837 516.11047363]
[19.53849983 524.26068115]
[5.99992323 530.76531982]
[-8.24715996 535.52178955]
[-22.97805214 538.45507812]
[-37.96042633 539.51885986]
[-52.95798874 538.69647217]
[-67.73420715 536.00079346]
[-82.05603790 531.47436523]
[-95.69760132 525.18859863]
[-108.44375610 517.24261475]
[-120.09347534 507.76171875]
[-130.46302795 496.89544678]
[-139.38887024 484.81518555]
[-146.73022461 471.71145630]
[-152.37130737 457.79092407]
[-156.22315979 443.27313232]
[-158.22502136 428.38702393]
[-158.34533691 413.36743164]
[-156.58218384 398.45117188]
[-152.96339417 383.87353516]
[-147.54602051 369.86441040]
[-140.41551208 356.64477539]
[-131.68432617 344.42309570]
[-121.49017334 333.39212036]
[-109.99382019 323.72583008]
[-97.37658691 315.57666016]
[-83.83746338 309.07318115]
[-69.58998108 304.31793213]
[-54.85883713 301.38589478]
[-39.87637329 300.32336426]
[-24.87888145 301.14703369]
[-10.10289097 303.84393311]
[4.21855736 308.37155151]
[10.49591827 294.74826050]
[16.77327919 281.12493896]
[23.05064011 267.50161743]
[29.32799911 253.87829590]
[35.50376892 240.20863342]
[33.58271408 225.43843079]
[46.24531937 215.95323181]
[52.21688461 202.19313049]
[50.07613754 187.45317078]
[62.59611893 177.78048706]
[68.15534210 163.84869385]
[73.40206146 149.79621887]
[78.64878082 135.74374390]
[75.85199738 121.11408234]
[87.92758179 110.89200592]
[83.74028015 100.02426910]
[87.89512634 89.14408112]
[98.26044464 83.83358002]
[103.71580505 69.86078644]
[109.17115784 55.88798904]
[114.62651825 41.91519165]
[120.08187866 27.94239235]
[120.28783417 18.81028366]
[125.72386932 13.80316448]
[123.76894379 -1.89679861]
[135.73849487 -10.76129627]
[141.40127563 -24.65132332]
[147.06405640 -38.54135132]
[145.10913086 -54.24131393]
[157.07867432 -63.10581207]
[146.80590820 -76.06196594]
[144.48200989 -92.33756256]
[150.64755249 -107.47702026]
[163.53199768 -117.38393402]
[179.56098938 -119.42939758]
[185.01634216 -133.40219116]
[190.47169495 -147.37500000]
[190.67765808 -156.50709534]
[196.11369324 -161.51422119]
[201.77647400 -175.40425110]
[207.12767029 -189.41726685]
[212.16458130 -203.54629517]
[217.20149231 -217.67532349]
[222.23841858 -231.80436707]
[208.61622620 -238.10922241]
[195.62380981 -245.62669373]
[183.36885071 -254.29450989]
[171.95286560 -264.04083252]
[161.47047424 -274.78488159]
[152.00852966 -286.43762207]
[143.64543152 -298.90255737]
[136.45050049 -312.07632446]
[130.48335266 -325.84979248]
[125.79341888 -340.10879517]
[122.41957855 -354.73522949]
[120.38977814 -369.60787964]
[119.72084808 -384.60345459]
[120.41831970 -399.59774780]
[122.47641754 -414.46649170]
[125.87809753 -429.08645630]
[130.59515381 -443.33654785]
[136.58851624 -457.09863281]
[143.80850220 -470.25866699]
[152.19529724 -482.70764160]
[161.67939758 -494.34237671]
[172.18223572 -505.06646729]
[183.61674500 -514.79101562]
[195.88818359 -523.43548584]
[208.89488220 -530.92822266]
[222.52903748 -537.20715332]
[236.67768860 -542.22021484]
[251.22358704 -545.92590332]
[266.04620361 -548.29351807]
[281.02270508 -549.30340576]
[296.02896118 -548.94714355]
[310.94067383 -547.22784424]
[325.63424683 -544.15960693]
[339.98794556 -539.76794434]
[353.88281250 -534.08917236]
[367.20367432 -527.17041016]
[379.84020996 -519.06896973]
[391.68768311 -509.85195923]
[402.64788818 -499.59579468]
[412.63006592 -488.38546753]
[421.55142212 -476.31384277]
[429.33810425 -463.48095703]
[435.92553711 -449.99313354]
[441.25915527 -435.96218872]
[445.29476929 -421.50433350]
[447.99893188 -406.73944092]
[449.34921265 -391.78979492]
[449.33444214 -376.77929688]
[447.95477295 -361.83230591]
[445.22155762 -347.07275391]
[441.15753174 -332.62286377]
[435.79632568 -318.60244751]
[429.18237305 -305.12762451]
[421.37045288 -292.31005859]
[412.42535400 -280.25601196]
[402.42117310 -269.06533813]
[391.44079590 -258.83074951]
[379.57522583 -249.63708496]
[366.92279053 -241.56050110]
[353.58831787 -234.66795349]
[339.68231201 -229.01654053]
[325.32003784 -224.65310669]
[310.62045288 -221.61378479]
[295.70538330 -219.92378235]
[280.69842529 -219.59709167]
[265.72393799 -220.63641357]
[250.90602112 -223.03315735]
[236.36744690 -226.76744080]
[231.33052063 -212.63841248]
[226.29360962 -198.50938416]
[221.25669861 -184.38035583]
[222.42947388 -181.05516052]
[222.04994202 -176.99671936]
[219.79098511 -172.94079590]
[215.66650391 -169.74145508]
[210.00372314 -155.85144043]
[204.44448853 -141.91963196]
[198.98913574 -127.94683838]
[193.53378296 -113.97404480]
[202.75207520 -103.89733124]
[206.74859619 -90.76886749]
[204.68887329 -77.13410950]
[196.91850281 -65.66242981]
[184.90667725 -58.62451553]
[170.96870422 -57.44302368]
[173.32867432 -42.73656845]
[160.95408630 -32.87856293]
[155.29130554 -18.98853683]
[149.62850952 -5.09850979]
[151.98847961 9.60794544]
[139.61389160 19.46595192]
[134.05467224 33.39775085]
[128.59931946 47.37054825]
[123.14395905 61.34334564]
[117.68859863 75.31613922]
[112.23324585 89.28894043]
[115.18987274 105.80059052]
[101.98005676 116.13872528]
[104.40155792 131.77352905]
[92.70125580 140.99046326]
[87.45453644 155.04293823]
[82.20781708 169.09541321]
[83.07342529 174.24301147]
[81.98662567 178.75656128]
[79.51588440 181.99855042]
[76.40029907 183.64944458]
[78.12125397 199.37678528]
[66.02105713 208.06208801]
[65.54329681 217.18402100]
[59.96058655 222.02706909]
[61.44720078 237.77827454]
[49.21903610 246.28245544]
[48.60551453 255.39627075]
[42.95131683 260.15567017]
[36.67395401 273.77896118]
[30.39659500 287.40228271]
[24.11923409 301.02560425]
[17.84187317 314.64892578]
[30.58869743 322.59384155]
[42.23921585 332.07376099]
[52.60968399 342.93914795]
[61.53654099 355.01864624]
[68.87899780 368.12176514]
[74.52125549 382.04180908]
[78.37432861 396.55929565]
[80.37744904 411.44522095]
[80.49901581 426.46481323]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 201]
[40 200]
[41 199]
[42 198]
[43 197]
[44 195]
[46 193]
[47 191]
[49 189]
[50 185]
[51 184]
[52 183]
[54 181]
[57 179]
[58 178]
[59 177]
[60 176]
[61 175]
[63 174]
[65 172]
[66 171]
[67 170]
[69 168]
[74 162]
[75 161]
[76 160]
[78 159]
[79 158]
[80 154]
[81 153]
[82 152]
[83 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
