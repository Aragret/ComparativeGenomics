%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[170.07203674 561.36035156]
[182.50942993 552.88702393]
[176.64045715 539.08288574]
[170.77149963 525.27868652]
[164.90254211 511.47451782]
[159.03358459 497.67034912]
[153.16462708 483.86614990]
[147.29565430 470.06198120]
[141.42669678 456.25781250]
[138.02163696 470.86621094]
[127.84091949 481.88226318]
[113.54578400 486.42636108]
[98.87292480 483.31069946]
[87.65779877 473.34973145]
[82.83201599 459.14721680]
[85.65702057 444.41564941]
[95.39436340 433.00579834]
[109.49873352 427.90023804]
[124.28327179 430.43350220]
[135.88281250 439.94268799]
[132.12652588 425.42062378]
[128.37022400 410.89855957]
[124.61391449 396.37652588]
[120.85762024 381.85446167]
[115.77140808 395.96582031]
[104.77246857 406.16500854]
[90.31798553 410.17346191]
[75.63713074 407.09573364]
[64.00963593 397.61938477]
[58.03312302 383.86141968]
[59.04275894 368.89544678]
[66.81298065 356.06488037]
[79.60791016 348.23608398]
[94.56912231 347.15808105]
[108.35424805 353.07165527]
[117.88365936 364.65573120]
[116.54542542 349.71554565]
[104.98664856 340.39190674]
[103.41665649 325.25949097]
[113.27452087 313.19882202]
[111.93628693 298.25863647]
[110.59805298 283.31845093]
[109.25981903 268.37826538]
[93.93640900 265.47338867]
[80.03741455 258.36593628]
[68.69061279 247.62338257]
[60.81929779 234.10864258]
[57.06712341 218.91056824]
[57.74547577 203.25633240]
[62.80766296 188.41230774]
[71.85202789 175.58164978]
[84.15378571 165.80671692]
[98.72314453 159.88447571]
[97.16262054 144.96586609]
[95.60209656 130.04725647]
[94.04157257 115.12865448]
[83.84153748 101.81192017]
[90.83880615 86.56677246]
[89.05633545 71.67305756]
[87.27387238 56.77933884]
[77.95150757 43.99637985]
[84.12158966 30.43985558]
[81.39695740 27.05897522]
[80.02761841 23.35905266]
[79.94743347 19.80532646]
[80.94599915 16.79376793]
[82.70366669 14.61002159]
[81.81085205 -0.36338454]
[80.91802979 -15.33679008]
[72.37304688 -28.65196419]
[79.33908844 -41.81720352]
[78.44627380 -56.79060745]
[69.90129089 -70.10578156]
[76.86733246 -83.27101898]
[68.32234955 -96.58619690]
[75.28839111 -109.75143433]
[74.39557648 -124.72483826]
[73.50276184 -139.69824219]
[72.60994720 -154.67164612]
[57.62257767 -155.66265869]
[42.87760925 -158.52430725]
[28.60758209 -163.21148682]
[15.03756046 -169.65025330]
[2.38156152 -177.73907471]
[-9.16081238 -187.35035706]
[-19.40752029 -198.33253479]
[-28.19695663 -210.51239014]
[-35.39049911 -223.69784546]
[-40.87469482 -237.68093872]
[-44.56305313 -252.24113464]
[-46.39740372 -267.14880371]
[-46.34880829 -282.16882324]
[-44.41804123 -297.06430054]
[-40.63555145 -311.60031128]
[-35.06099319 -325.54763794]
[-27.78228760 -338.68627930]
[-18.91422653 -350.80899048]
[-8.59667587 -361.72463989]
[3.00764441 -371.26104736]
[15.71571636 -379.26782227]
[29.32711411 -385.61865234]
[43.62717056 -390.21337891]
[58.39034653 -392.97958374]
[73.38381195 -393.87359619]
[88.37109375 -392.88131714]
[103.11582184 -390.01843262]
[117.38545227 -385.33004761]
[130.95494080 -378.89013672]
[143.61026001 -370.80026245]
[155.15182495 -361.18798828]
[165.39759827 -350.20495605]
[174.18601990 -338.02435303]
[181.37844849 -324.83828735]
[186.86146545 -310.85473633]
[190.54859924 -296.29425049]
[192.38169861 -281.38641357]
[192.33183289 -266.36642456]
[190.39981079 -251.47109985]
[186.61610413 -236.93539429]
[181.04037476 -222.98854065]
[173.76055908 -209.85052490]
[164.89147949 -197.72853088]
[154.57299805 -186.81375122]
[142.96788025 -177.27832031]
[130.25914001 -169.27264404]
[116.64720154 -162.92295837]
[102.34676361 -158.32942200]
[87.58335114 -155.56446838]
[88.47616577 -140.59106445]
[89.36898041 -125.61765289]
[90.26179504 -110.64424896]
[98.74291992 -98.40007782]
[91.84073639 -84.16383362]
[100.32186127 -71.91966248]
[93.41968536 -57.68342590]
[94.31250000 -42.71001816]
[102.79361725 -30.46584320]
[95.89144135 -16.22960663]
[96.78425598 -1.25620043]
[97.67707062 13.71720505]
[99.01530457 28.65739059]
[108.21017456 40.37504959]
[102.16758728 54.99687576]
[103.95005798 69.89059448]
[105.73252106 84.78430939]
[114.43772125 92.52127838]
[115.73556519 104.09525299]
[108.96018219 113.56813049]
[110.52070618 128.48674011]
[112.08122253 143.40534973]
[113.64174652 158.32394409]
[127.89783478 160.71232605]
[141.03704834 166.70820618]
[152.16444397 175.89627075]
[160.52384949 187.64401245]
[165.54934692 201.14526367]
[166.90353394 215.47552490]
[164.50015259 229.65524292]
[158.50959778 242.71682739]
[149.34678650 253.77062988]
[137.64253235 262.06552124]
[124.19999695 267.04000854]
[125.53823853 281.98019409]
[126.87647247 296.92037964]
[128.21470642 311.86056519]
[140.05906677 321.97732544]
[141.20339966 337.14788818]
[131.48561096 348.37731934]
[132.82383728 363.31750488]
[135.37966919 378.09814453]
[139.13597107 392.62020874]
[142.89227295 407.14227295]
[146.64857483 421.66433716]
[150.40487671 436.18640137]
[155.23088074 450.38885498]
[161.09983826 464.19302368]
[166.96879578 477.99719238]
[172.83775330 491.80136108]
[178.70672607 505.60556030]
[184.57568359 519.40972900]
[190.44464111 533.21392822]
[196.31359863 547.01806641]
[211.04499817 543.94036865]
[226.09376526 543.79608154]
[240.88146973 546.59069824]
[254.83972168 552.21685791]
[267.43197632 560.45831299]
[278.17425537 570.99822998]
[286.65362549 583.43151855]
[292.54418945 597.28021240]
[295.61950684 612.01214600]
[295.76135254 627.06091309]
[292.96432495 641.84814453]
[287.33590698 655.80548096]
[279.09246826 668.39642334]
[268.55081177 679.13702393]
[256.11614990 687.61437988]
[242.26646423 693.50268555]
[227.53407288 696.57562256]
[212.48526001 696.71502686]
[197.69845581 693.91558838]
[183.74203491 688.28491211]
[171.15243530 680.03942871]
[160.41357422 669.49603271]
[151.93823242 657.05999756]
[146.05215454 643.20935059]
[142.98161316 628.47650146]
[142.84460449 613.42767334]
[145.64642334 598.64129639]
[151.27935791 584.68579102]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 182]
[3 181]
[4 180]
[5 179]
[6 178]
[7 177]
[8 176]
[9 175]
[20 174]
[21 173]
[22 172]
[23 171]
[24 170]
[36 169]
[37 168]
[40 165]
[41 164]
[42 163]
[43 162]
[53 151]
[54 150]
[55 149]
[56 148]
[58 145]
[59 144]
[60 143]
[62 141]
[67 140]
[68 139]
[69 138]
[71 136]
[72 135]
[74 133]
[76 131]
[77 130]
[78 129]
[79 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
