%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGGxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[115.40291595 941.41241455]
[100.47259521 939.94586182]
[85.61620331 937.85943604]
[70.85945892 935.15692139]
[56.22791290 931.84277344]
[41.74689102 927.92291260]
[27.44146729 923.40405273]
[13.33640480 918.29400635]
[-0.54387963 912.60162354]
[-14.17535496 906.33679199]
[-27.53442192 899.51031494]
[-40.59795380 892.13403320]
[-53.34333801 884.22076416]
[-65.74850464 875.78411865]
[-77.79198456 866.83868408]
[-89.45292664 857.40008545]
[-100.71113586 847.48449707]
[-111.54712677 837.10925293]
[-121.94214630 826.29217529]
[-131.87818909 815.05206299]
[-141.33807373 803.40832520]
[-150.30538940 791.38116455]
[-158.76463318 778.99139404]
[-166.70117188 766.26043701]
[-174.10124207 753.21038818]
[-180.95204163 739.86376953]
[-187.24171448 726.24377441]
[-192.95936584 712.37384033]
[-198.09510803 698.27813721]
[-202.64004517 683.98095703]
[-206.58630371 669.50714111]
[-209.92704773 654.88165283]
[-212.65650940 640.12982178]
[-214.76995850 625.27728271]
[-216.26373291 610.34967041]
[-217.13523865 595.37280273]
[-217.38298035 580.37268066]
[-217.00653076 565.37524414]
[-216.00651550 550.40643311]
[-214.38470459 535.49212646]
[-212.14387512 520.65826416]
[-209.28791809 505.93045044]
[-205.82179260 491.33416748]
[-201.75146484 476.89471436]
[-197.08401489 462.63708496]
[-191.82749939 448.58593750]
[-185.99102783 434.76562500]
[-179.58470154 421.20007324]
[-172.61961365 407.91275024]
[-165.10783386 394.92666626]
[-157.06233215 382.26431274]
[-148.49707031 369.94760132]
[-139.42686462 357.99783325]
[-129.86743164 346.43572998]
[-119.83528900 335.28128052]
[-109.34782410 324.55380249]
[-98.42319489 314.27191162]
[-87.08030701 304.45333862]
[-75.33879852 295.11511230]
[-63.21899796 286.27340698]
[-50.74188614 277.94351196]
[-37.92906570 270.13986206]
[-24.80271339 262.87597656]
[-11.38555527 256.16439819]
[2.29917979 250.01676941]
[16.22780228 244.44372559]
[30.37619781 239.45491028]
[44.71987534 235.05897522]
[59.23400116 231.26350403]
[73.89344788 228.07510376]
[88.67284393 225.49926758]
[103.54659271 223.54046631]
[102.20835876 208.60028076]
[100.87012482 193.66009521]
[99.53189087 178.71990967]
[98.19365692 163.77972412]
[89.35173798 151.79348755]
[95.82698822 137.35806274]
[94.48875427 122.41787720]
[93.15052032 107.47769165]
[89.35191345 100.36832428]
[91.90528107 92.30537415]
[90.78962708 77.34691620]
[89.67398071 62.38846588]
[88.55833435 47.43001175]
[87.44268799 32.47155762]
[86.32703400 17.51310539]
[75.60898590 2.53963017]
[83.83974457 -12.95945358]
[82.50151062 -27.89963913]
[78.61895752 -36.16786957]
[81.25626373 -43.07195663]
[80.14061737 -58.03041077]
[65.40134430 -61.38382721]
[52.30617142 -68.93418121]
[42.01950455 -80.01009369]
[35.45602798 -93.62670898]
[33.19935989 -108.57324219]
[35.45016479 -123.52066040]
[42.00830078 -137.13984680]
[52.29062271 -148.21978760]
[65.38283539 -155.77528381]
[80.12078857 -159.13447571]
[95.19398499 -157.99868774]
[109.26213837 -152.46890259]
[121.07431030 -143.03683472]
[129.58016968 -130.54116821]
[134.02339172 -116.09301758]
[134.00888062 -100.97708893]
[129.53791809 -86.53749084]
[121.00807953 -74.05818176]
[109.17781067 -64.64881897]
[95.09906769 -59.14606094]
[96.21471405 -44.18760681]
[97.44169617 -29.23787308]
[98.77993011 -14.29768848]
[107.85830688 -6.30333996]
[109.09548187 6.13262224]
[101.28549194 16.39745712]
[102.40113831 31.35590935]
[103.51678467 46.31436157]
[104.63243866 61.27281570]
[105.74808502 76.23126984]
[106.86373138 91.18972015]
[108.09070587 106.13945770]
[109.42893982 121.07964325]
[110.76717377 136.01982117]
[119.70481110 149.07467651]
[113.13384247 162.44148254]
[114.47207642 177.38166809]
[115.81031036 192.32185364]
[117.14854431 207.26203918]
[118.48677826 222.20222473]
[133.47186279 221.48649597]
[148.47377014 221.39472961]
[163.46649170 221.92710876]
[178.42410278 223.08270264]
[193.32069397 224.85951233]
[208.13046265 227.25445557]
[222.82780457 230.26339722]
[237.38725281 233.88111877]
[251.78359985 238.10136414]
[265.99194336 242.91680908]
[279.98764038 248.31915283]
[293.74652100 254.29901123]
[307.24475098 260.84603882]
[320.45892334 267.94891357]
[333.36621094 275.59530640]
[345.94421387 283.77203369]
[358.17120361 292.46490479]
[370.02603149 301.65887451]
[381.48809814 311.33801270]
[392.53762817 321.48559570]
[403.15545654 332.08404541]
[413.32324219 343.11499023]
[423.02331543 354.55935669]
[432.23895264 366.39730835]
[440.95416260 378.60839844]
[449.15386963 391.17144775]
[456.82385254 404.06472778]
[463.95086670 417.26589966]
[470.52258301 430.75210571]
[476.52758789 444.50003052]
[481.95550537 458.48583984]
[486.79693604 472.68536377]
[491.04348755 487.07397461]
[494.68783569 501.62677002]
[497.72363281 516.31860352]
[500.14566040 531.12396240]
[501.94970703 546.01727295]
[503.13262939 560.97271729]
[503.69244385 575.96447754]
[503.62811279 590.96649170]
[502.93975830 605.95288086]
[501.62863159 620.89764404]
[499.69692993 635.77496338]
[497.14804077 650.55902100]
[493.98635864 665.22424316]
[490.21734619 679.74523926]
[485.84756470 694.09692383]
[480.88452148 708.25439453]
[475.33688354 722.19317627]
[469.21420288 735.88909912]
[462.52709961 749.31842041]
[455.28713989 762.45800781]
[447.50683594 775.28503418]
[439.19970703 787.77728271]
[430.38009644 799.91320801]
[421.06329346 811.67169189]
[411.26541138 823.03247070]
[401.00341797 833.97583008]
[390.29510498 844.48278809]
[379.15896606 854.53527832]
[367.61428833 864.11578369]
[355.68109131 873.20770264]
[343.38000488 881.79541016]
[330.73229980 889.86395264]
[317.75994873 897.39941406]
[304.48532104 904.38873291]
[290.93145752 910.81976318]
[277.12182617 916.68139648]
[263.08029175 921.96350098]
[248.83117676 926.65692139]
[234.39916992 930.75354004]
[219.80923462 934.24627686]
[205.08663940 937.12908936]
[190.25686646 939.39697266]
[175.34559631 941.04595947]
[160.37863159 942.07324219]
[145.38188171 942.47698975]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[72 133]
[73 132]
[74 131]
[75 130]
[76 129]
[78 127]
[79 126]
[80 125]
[82 124]
[83 123]
[84 122]
[85 121]
[86 120]
[87 119]
[89 116]
[90 115]
[92 114]
[93 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
