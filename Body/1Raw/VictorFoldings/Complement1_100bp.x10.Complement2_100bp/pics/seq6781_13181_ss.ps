%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[88.76356506 750.56195068]
[73.76071930 750.92535400]
[58.77336121 750.15307617]
[43.88733292 748.24951172]
[29.18790054 745.22558594]
[14.75926590 741.09863281]
[0.68407333 735.89227295]
[-12.95705414 729.63629150]
[-26.08598137 722.36657715]
[-38.62750244 714.12475586]
[-50.50978470 704.95806885]
[-61.66476440 694.91894531]
[-72.02854919 684.06494141]
[-81.54177094 672.45825195]
[-90.14994049 660.16528320]
[-97.80374908 647.25646973]
[-104.45935059 633.80584717]
[-110.07863617 619.89031982]
[-114.62940979 605.58972168]
[-118.08560181 590.98583984]
[-120.42742157 576.16247559]
[-121.64144897 561.20440674]
[-121.72074127 546.19738770]
[-120.66483307 531.22729492]
[-118.47977448 516.38000488]
[-115.17807770 501.74044800]
[-110.77867126 487.39254761]
[-105.30673981 473.41845703]
[-98.79362488 459.89822388]
[-91.27664185 446.90927124]
[-82.79885101 434.52606201]
[-73.40879822 422.81945801]
[-63.16028595 411.85653687]
[-52.11200714 401.70013428]
[-40.32724762 392.40835571]
[-27.87351036 384.03448486]
[-14.82213116 376.62646484]
[-1.24786806 370.22671509]
[12.77152634 364.87188721]
[27.15574837 360.59271240]
[41.82240677 357.41363525]
[56.68749237 355.35287476]
[71.66585541 354.42227173]
[86.67169952 354.62713623]
[88.00993347 339.68695068]
[89.34816742 324.74676514]
[90.68640137 309.80657959]
[92.02463531 294.86639404]
[85.45365906 281.49960327]
[94.39129639 268.44473267]
[95.72953033 253.50454712]
[96.39931488 238.51951599]
[96.17598724 223.52117920]
[95.72938538 208.52783203]
[95.28277588 193.53448486]
[94.83617401 178.54112244]
[94.38956451 163.54777527]
[81.21955109 160.96795654]
[68.88064575 155.69006348]
[57.91889572 147.94766235]
[48.81940460 138.08337402]
[41.98485565 126.53375244]
[37.71771240 113.80990601]
[36.20680618 100.47492218]
[37.51900482 87.11891174]
[41.59623718 74.33294678]
[48.25807190 62.68284607]
[57.20969009 52.68418121]
[68.05495453 44.77943420]
[80.31391144 39.31841278]
[93.44405365 36.54279709]
[93.66738129 21.54445839]
[93.89070892 6.54612112]
[94.11403656 -8.45221615]
[91.11274719 -17.07950211]
[94.45400238 -23.67175293]
[94.90061188 -38.66510391]
[86.39981079 -26.30644608]
[73.42182159 -18.78501892]
[58.47249985 -17.55308914]
[44.43831253 -22.84852409]
[34.02904892 -33.64885712]
[29.25457191 -47.86871719]
[31.03676033 -62.76246643]
[39.03149796 -75.45436096]
[51.69512939 -83.49378967]
[66.58250427 -85.32846832]
[80.81910706 -80.60414886]
[91.65606689 -70.23301697]
[97.00112152 -56.21632385]
[100.10523224 -70.89162445]
[103.20934296 -85.56693268]
[106.31345367 -100.24223328]
[109.19872284 -114.96212006]
[111.86452484 -129.72334290]
[114.53031921 -144.48455811]
[107.90343475 -161.66494751]
[119.75321198 -174.60903931]
[122.19894409 -189.40832520]
[124.64466858 -204.20759583]
[110.96154785 -210.58526611]
[99.50725555 -220.41896057]
[91.13178253 -232.97898865]
[86.45664215 -247.33328247]
[85.82876587 -262.41665649]
[89.29473877 -277.10983276]
[96.59736633 -290.32247925]
[107.19474792 -301.07415771]
[120.30048370 -308.56695557]
[134.94203186 -312.24493408]
[150.03291321 -311.83508301]
[164.45327759 -307.36788940]
[177.13302612 -299.17480469]
[187.13124084 -287.86383057]
[193.70599365 -274.27432251]
[196.36940002 -259.41467285]
[194.92379761 -244.38760376]
[189.47648621 -230.30821228]
[180.43167114 -218.22128296]
[168.46054077 -209.02374268]
[154.45144653 -203.39811707]
[139.44393921 -201.76185608]
[136.99821472 -186.96258545]
[134.55249023 -172.16331482]
[141.33966064 -162.15028381]
[139.42320251 -149.80075073]
[129.29153442 -141.81875610]
[126.62574005 -127.05754852]
[123.95994568 -112.29632568]
[125.89881134 -107.93171692]
[125.11644745 -102.30278015]
[120.98875427 -97.13812256]
[117.88464355 -82.46282196]
[114.78053284 -67.78751373]
[111.67642212 -53.11221313]
[109.89395905 -38.21849823]
[109.44735718 -23.22514725]
[109.11238098 -8.22888851]
[108.88905334 6.76944876]
[108.66572571 21.76778603]
[108.44239044 36.76612473]
[124.42155457 41.06457138]
[138.75765991 49.32810974]
[150.48622131 61.00078201]
[158.81813049 75.29726410]
[163.19284058 91.25571442]
[163.31602478 107.80246735]
[159.17939758 123.82427979]
[151.06126404 138.24322510]
[139.50779724 150.08923340]
[125.29631042 158.56529236]
[109.38291931 163.10116577]
[109.82952118 178.09452820]
[110.27613068 193.08787537]
[110.72273254 208.08122253]
[111.16934204 223.07456970]
[114.31346130 228.89059448]
[114.08300018 234.56895447]
[111.39931488 238.51951599]
[122.74411011 228.70648193]
[137.71427917 229.65200806]
[147.73423767 240.81446838]
[147.06408691 255.79948425]
[136.08773804 266.02297974]
[121.09292603 265.62844849]
[110.66971588 254.84278870]
[109.33148193 269.78295898]
[115.80673981 284.21841431]
[106.96482086 296.20465088]
[105.62658691 311.14480591]
[104.28835297 326.08499146]
[102.95011902 341.02517700]
[101.61188507 355.96536255]
[116.41526031 358.43060303]
[130.98980713 362.00836182]
[145.25201416 366.67810059]
[159.12020874 372.41311646]
[172.51495361 379.18057251]
[185.35952759 386.94165039]
[197.58033752 395.65194702]
[209.10740662 405.26153564]
[219.87467957 415.71539307]
[229.82051086 426.95361328]
[238.88792419 438.91186523]
[247.02497864 451.52160645]
[254.18504333 464.71063232]
[260.32714844 478.40341187]
[265.41607666 492.52148438]
[269.42269897 506.98400879]
[272.32403564 521.70812988]
[274.10351562 536.60949707]
[274.75091553 551.60278320]
[274.26251221 566.60205078]
[272.64114380 581.52148438]
[269.89608765 596.27551270]
[266.04302979 610.77972412]
[261.10409546 624.95092773]
[255.10751343 638.70806885]
[248.08769226 651.97229004]
[240.08479309 664.66760254]
[231.14469910 676.72131348]
[221.31858826 688.06439209]
[210.66275024 698.63177490]
[199.23822021 708.36309814]
[187.11044312 717.20245361]
[174.34889221 725.09930420]
[161.02665710 732.00836182]
[147.22004700 737.89013672]
[133.00814819 742.71081543]
[118.47236633 746.44287109]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 173]
[45 172]
[46 171]
[47 170]
[48 169]
[50 167]
[51 166]
[52 159]
[53 156]
[54 155]
[55 154]
[56 153]
[57 152]
[71 141]
[72 140]
[73 139]
[74 138]
[76 137]
[77 136]
[90 135]
[91 134]
[92 133]
[93 132]
[94 129]
[95 128]
[96 127]
[98 124]
[99 123]
[100 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
