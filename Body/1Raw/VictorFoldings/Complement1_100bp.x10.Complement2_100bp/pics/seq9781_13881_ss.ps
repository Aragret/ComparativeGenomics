%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[118.26307678 161.33256531]
[124.26232147 175.10545349]
[128.37222290 189.55509949]
[130.51945496 204.42361450]
[130.66566467 219.44566345]
[128.80827332 234.35316467]
[124.98041534 248.88006592]
[119.25040436 262.76712036]
[111.72049713 275.76651001]
[102.52507782 287.64624023]
[91.82824707 298.19427490]
[79.82089996 307.22241211]
[66.71733093 314.56951904]
[52.75138092 320.10446167]
[38.17228699 323.72848511]
[23.24023628 325.37689209]
[8.22170544 325.02029419]
[-6.61528206 322.66503906]
[-21.00594139 318.35314941]
[-34.69345856 312.16159058]
[-47.43355560 304.20086670]
[-58.99887848 294.61300659]
[-69.18302917 283.56915283]
[-77.80425262 271.26641846]
[-84.70870209 257.92428589]
[-89.77315521 243.78092957]
[-92.90723419 229.08871460]
[-94.05500031 214.10986328]
[-93.19597626 199.11167908]
[-90.34548950 184.36181641]
[-85.55441284 170.12353516]
[-78.90824890 156.65089417]
[-70.52560425 144.18435669]
[-60.55607224 132.94638062]
[-49.17758179 123.13753510]
[-36.59318924 114.93287659]
[-23.02747917 108.47881317]
[-8.72254753 103.89052582]
[6.06631899 101.24990845]
[21.07519531 100.60408020]
[36.03622818 101.96456146]
[50.68242264 105.30707550]
[64.75239563 110.57198334]
[77.99506378 117.66530609]
[86.77566528 105.50385284]
[88.38666534 91.61514282]
[101.06288147 85.71554565]
[109.84348297 73.55408478]
[118.62408447 61.39263153]
[118.91101074 57.06000900]
[120.41087341 53.41104126]
[122.75980377 50.74309921]
[125.53474426 49.20481491]
[128.30708313 48.78970337]
[137.79597473 37.17243958]
[147.28488159 25.55517769]
[156.77377319 13.93791389]
[166.26268005 2.32065082]
[175.75157166 -9.29661274]
[185.24046326 -20.91387558]
[174.06513977 -30.92339325]
[163.35697937 -41.43117905]
[153.13818359 -52.41545105]
[143.42990112 -63.85344696]
[134.25228882 -75.72145844]
[125.62435913 -87.99488831]
[117.56398773 -100.64829254]
[110.08788300 -113.65544891]
[103.21154022 -126.98940277]
[96.94921875 -140.62251282]
[91.31388855 -154.52651978]
[86.31723785 -168.67260742]
[81.96961975 -183.03144836]
[78.28004456 -197.57328796]
[75.25615692 -212.26800537]
[72.90423584 -227.08511353]
[71.22914124 -241.99391174]
[70.23435211 -256.96350098]
[69.92192841 -271.96286011]
[70.29252625 -286.96090698]
[71.34535980 -301.92651367]
[73.07826233 -316.82870483]
[75.48764038 -331.63659668]
[78.56849670 -346.31945801]
[82.31444550 -360.84689331]
[86.71772003 -375.18875122]
[91.76919556 -389.31536865]
[97.45840454 -403.19738770]
[103.77355957 -416.80612183]
[110.70156097 -430.11331177]
[118.22805786 -443.09136963]
[126.33744049 -455.71340942]
[135.01290894 -467.95327759]
[144.23648071 -479.78561401]
[153.98904419 -491.18588257]
[164.25038147 -502.13043213]
[174.99920654 -512.59661865]
[186.21327209 -522.56268311]
[197.86930847 -532.00805664]
[209.94317627 -540.91314697]
[222.40985107 -549.25939941]
[235.24346924 -557.02966309]
[248.41744995 -564.20770264]
[261.90447998 -570.77868652]
[275.67663574 -576.72906494]
[289.70532227 -582.04638672]
[303.96148682 -586.71972656]
[318.41558838 -590.73931885]
[333.03765869 -594.09686279]
[347.79739380 -596.78546143]
[362.66421509 -598.79943848]
[377.60726929 -600.13470459]
[392.59564209 -600.78845215]
[407.59820557 -600.75933838]
[422.58392334 -600.04742432]
[437.52169800 -598.65417480]
[452.38058472 -596.58245850]
[467.12976074 -593.83660889]
[481.73870850 -590.42230225]
[496.17709351 -586.34655762]
[510.41500854 -581.61791992]
[524.42297363 -576.24615479]
[538.17187500 -570.24243164]
[551.63330078 -563.61907959]
[564.77929688 -556.38995361]
[577.58270264 -548.56994629]
[590.01684570 -540.17535400]
[602.05603027 -531.22344971]
[613.67535400 -521.73291016]
[624.85058594 -511.72335815]
[635.55871582 -501.21551514]
[645.77746582 -490.23120117]
[655.48571777 -478.79318237]
[664.66326904 -466.92514038]
[673.29119873 -454.65167236]
[681.35150146 -441.99822998]
[688.82757568 -428.99105835]
[695.70385742 -415.65707397]
[701.96612549 -402.02392578]
[707.60137939 -388.11990356]
[712.59796143 -373.97381592]
[716.94555664 -359.61492920]
[720.63507080 -345.07308960]
[723.65887451 -330.37835693]
[726.01074219 -315.56124878]
[727.68579102 -300.65243530]
[728.68048096 -285.68283081]
[728.99285889 -270.68347168]
[728.62219238 -255.68544006]
[727.56933594 -240.71983337]
[725.83636475 -225.81764221]
[723.42694092 -211.00978088]
[720.34600830 -196.32691956]
[716.60003662 -181.79951477]
[712.19665527 -167.45764160]
[707.14514160 -153.33106995]
[701.45587158 -139.44905090]
[695.14068604 -125.84035492]
[688.21258545 -112.53319550]
[680.68609619 -99.55516052]
[672.57666016 -86.93314362]
[663.90112305 -74.69330597]
[654.67749023 -62.86101913]
[644.92486572 -51.46080017]
[634.66351318 -40.51628113]
[623.91461182 -30.05014801]
[612.70056152 -20.08409309]
[601.04443359 -10.63877201]
[588.97058105 -1.73376215]
[576.50384521 6.61247969]
[563.67022705 14.38265514]
[550.49621582 21.56065941]
[537.00915527 28.13161278]
[523.23699951 34.08189774]
[509.20825195 39.39918137]
[494.95205688 44.07244110]
[480.49795532 48.09199524]
[465.87585449 51.44950867]
[451.11611938 54.13802338]
[436.24929810 56.15196609]
[421.30621338 57.48716354]
[406.31787109 58.14085007]
[391.31527710 58.11166763]
[376.32958984 57.39967728]
[361.39181519 56.00635529]
[346.53292847 53.93459320]
[331.78375244 51.18867874]
[317.17483521 47.77430725]
[302.73648071 43.69855499]
[288.49856567 38.96986771]
[274.49066162 33.59804916]
[260.74172974 27.59423065]
[247.28034973 20.97085762]
[234.13435364 13.74165726]
[221.33103943 5.92161417]
[208.89689636 -2.47306371]
[196.85772705 -11.42497730]
[187.36883545 0.19228588]
[177.87992859 11.80954933]
[168.39103699 23.42681313]
[158.90214539 35.04407501]
[149.41323853 46.66133881]
[139.92434692 58.27860260]
[130.78553772 70.17323303]
[122.00493622 82.33469391]
[113.22433472 94.49614716]
[111.61333466 108.38485718]
[98.93711853 114.28445435]
[90.15651703 126.44591522]
[101.05664062 136.78373718]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 209]
[45 208]
[47 206]
[48 205]
[49 204]
[54 203]
[55 202]
[56 201]
[57 200]
[58 199]
[59 198]
[60 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
