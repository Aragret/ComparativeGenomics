%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[75.15163422 434.47064209]
[72.05726624 419.72201538]
[72.44817352 404.65737915]
[76.30327606 390.08908081]
[83.41467285 376.80282593]
[93.39885712 365.51510620]
[105.71739197 356.83462524]
[119.70595551 351.22955322]
[117.48084259 336.39550781]
[115.25572205 321.56146240]
[113.03060913 306.72744751]
[110.42771149 304.34893799]
[108.84754944 300.59152222]
[108.92565918 295.94961548]
[111.05274963 291.18280029]
[109.49223328 276.26419067]
[100.47283173 264.41094971]
[106.73245239 249.88070679]
[105.17192841 234.96209717]
[96.15253448 223.10884094]
[102.41214752 208.57859802]
[93.21575165 200.72030640]
[91.79355621 188.30413818]
[99.44985962 177.92416382]
[98.11162567 162.98397827]
[96.77339172 148.04379272]
[95.43515778 133.10360718]
[94.09692383 118.16342163]
[83.04565430 108.79241180]
[81.75296783 94.36067200]
[90.96289062 83.17481232]
[89.62465668 68.23462677]
[88.28642273 53.29444122]
[86.94818878 38.35425568]
[85.60995483 23.41407204]
[76.67231750 10.35921764]
[83.24329376 -3.00759053]
[79.48699188 -17.52964973]
[73.41316223 -31.24491692]
[58.37344360 -29.74012756]
[43.62495041 -32.95328522]
[30.60936165 -40.55741882]
[20.59498978 -51.79696655]
[14.55317974 -65.56283569]
[13.06409931 -80.50183105]
[16.26105881 -95.14968109]
[23.81867409 -108.07456207]
[34.98593903 -118.01705170]
[28.91210747 -131.73231506]
[22.83827209 -145.44758606]
[16.76443863 -159.16285706]
[10.69060516 -172.87812805]
[4.61677074 -186.59338379]
[3.97437310 -171.60714722]
[-0.18849179 -157.19636536]
[-7.63639355 -144.17605591]
[-17.94811630 -133.28254700]
[-30.54048538 -125.13195038]
[-44.70133591 -120.18520355]
[-59.62981033 -118.72208405]
[-74.48162079 -120.82532501]
[-88.41683960 -126.37598419]
[-100.64734650 -135.06013489]
[-110.48146057 -146.38667297]
[-117.36300659 -159.71499634]
[-120.90280151 -174.29133606]
[-120.90065765 -189.29133606]
[-117.35668945 -203.86666870]
[-110.47132874 -217.19303894]
[-100.63397217 -228.51673889]
[-88.40097809 -237.19740295]
[-74.46417999 -242.74407959]
[-59.61176300 -244.84306335]
[-44.68371201 -243.37567139]
[-30.52427483 -238.42488098]
[-17.93424034 -230.27067566]
[-7.62563419 -219.37422180]
[-0.18104056 -206.35078430]
[-1.07385647 -221.32418823]
[-1.96667230 -236.29759216]
[-2.85948825 -251.27099609]
[-3.75230408 -266.24441528]
[-4.64511967 -281.21780396]
[-5.53793573 -296.19122314]
[-6.43075180 -311.16461182]
[-7.32356739 -326.13803101]
[-8.21638298 -341.11141968]
[-19.75427628 -351.57635498]
[-20.44641685 -366.77423096]
[-10.39860058 -377.70938110]
[-11.29141617 -392.68276978]
[-12.18423176 -407.65618896]
[-13.07704830 -422.62957764]
[-27.80138016 -426.00164795]
[-40.97858429 -433.38662720]
[-51.54043961 -444.18588257]
[-58.63074875 -457.52395630]
[-61.67473221 -472.31958008]
[-60.42562103 -487.37335205]
[-54.98468399 -501.46496582]
[-45.79298401 -513.45202637]
[-33.59566116 -522.36279297]
[-19.38149071 -527.47491455]
[-4.30275297 -528.37402344]
[10.41818428 -524.98718262]
[23.58796120 -517.58898926]
[34.13896561 -506.77911377]
[41.21586990 -493.43392944]
[44.24498749 -478.63522339]
[42.98075485 -463.58270264]
[37.52566147 -449.49661255]
[28.32192802 -437.51879883]
[16.11565590 -428.62026978]
[1.89635777 -423.52239990]
[2.78917360 -408.54901123]
[3.68198967 -393.57559204]
[4.57480526 -378.60217285]
[15.85086060 -368.93853760]
[16.96960449 -353.76608276]
[6.75702238 -342.00424194]
[7.64983845 -327.03085327]
[8.54265404 -312.05743408]
[9.43546963 -297.08404541]
[10.32828617 -282.11062622]
[11.22110176 -267.13720703]
[12.11391735 -252.16381836]
[13.00673389 -237.19041443]
[13.89954948 -222.21701050]
[14.79236507 -207.24359131]
[18.33203697 -192.66722107]
[24.40587234 -178.95195007]
[30.47970581 -165.23669434]
[36.55353928 -151.52142334]
[42.62737274 -137.80615234]
[48.70120621 -124.09088898]
[63.56869507 -125.67794037]
[78.21863556 -122.58772278]
[91.21370697 -115.11054230]
[101.27499390 -103.96776581]
[107.40782166 -90.24220276]
[109.00008392 -75.27291107]
[105.88334656 -60.52454376]
[98.35052490 -47.44406128]
[87.12842560 -37.31875229]
[93.20226288 -23.60348320]
[93.91622925 -38.58648300]
[98.43310547 -52.89025116]
[106.45329285 -65.56607819]
[117.44485474 -75.77321625]
[130.67875671 -82.83465576]
[145.27722168 -86.28205109]
[160.27201843 -85.88674164]
[174.66856384 -81.67494965]
[187.51202393 -73.92602539]
[197.95050049 -63.15392685]
[205.29167175 -50.07312775]
[209.04859924 -35.55123520]
[208.97213745 -20.55143166]
[205.06732178 -6.06859779]
[197.59317017 6.93666935]
[187.04539490 17.60177803]
[174.12361145 25.21934891]
[159.68486023 29.28413773]
[144.68681335 29.52653885]
[130.12425232 25.93047714]
[116.96304321 18.73446655]
[106.07612610 8.41579056]
[98.18347931 -4.34582472]
[107.02539825 7.64040709]
[100.55014038 22.07583618]
[101.88837433 37.01602173]
[103.22660828 51.95620728]
[104.56484222 66.89639282]
[105.90307617 81.83657837]
[116.95434570 91.20758820]
[118.24703217 105.63932800]
[109.03710938 116.82518768]
[110.37534332 131.76538086]
[111.71357727 146.70555115]
[113.05181122 161.64573669]
[114.39004517 176.58592224]
[125.32983398 191.39816284]
[117.33074951 207.01808167]
[126.46176910 219.93841553]
[120.09053040 233.40158081]
[121.65105438 248.32017517]
[130.78207397 261.24050903]
[124.41083527 274.70367432]
[125.97135925 289.62228394]
[127.86464691 304.50231934]
[130.08976746 319.33636475]
[132.31488037 334.17041016]
[134.54000854 349.00445557]
[149.55744934 350.25860596]
[163.88069153 354.94277954]
[176.73728943 362.80435181]
[187.43389893 373.41940308]
[195.39367676 386.21545410]
[200.18734741 400.50241089]
[201.55639648 415.50982666]
[199.42700195 430.42834473]
[193.91400146 444.45346069]
[185.31469727 456.82876587]
[174.09283447 466.88693237]
[160.85359192 474.08551025]
[146.31095886 478.03628540]
[131.24919128 478.52618408]
[116.48056793 475.52880859]
[102.80151367 469.20581055]
[90.94974518 459.89816284]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 193]
[9 192]
[10 191]
[11 190]
[15 189]
[16 188]
[18 186]
[19 185]
[21 183]
[24 181]
[25 180]
[26 179]
[27 178]
[28 177]
[31 174]
[32 173]
[33 172]
[34 171]
[35 170]
[37 168]
[38 145]
[39 144]
[48 135]
[49 134]
[50 133]
[51 132]
[52 131]
[53 130]
[78 129]
[79 128]
[80 127]
[81 126]
[82 125]
[83 124]
[84 123]
[85 122]
[86 121]
[87 120]
[90 117]
[91 116]
[92 115]
[93 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
