%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGAxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[99.90274811 311.58401489]
[97.22829437 326.35607910]
[93.11878967 340.79486084]
[87.61380005 354.76132202]
[80.76634979 368.12094116]
[72.64238739 380.74505615]
[63.32015228 392.51205444]
[52.88941956 403.30865479]
[41.45065308 413.03088379]
[29.11400986 421.58505249]
[15.99830818 428.88882446]
[2.22985816 434.87185669]
[-12.05873775 439.47650146]
[-26.72986794 442.65844727]
[-41.64223862 444.38702393]
[-56.65223312 444.64556885]
[-71.61529541 443.43164062]
[-86.38731384 440.75689697]
[-100.82601929 436.64709473]
[-114.79236603 431.14181519]
[-128.15184021 424.29412842]
[-140.77578735 416.16989136]
[-152.54261780 406.84744263]
[-163.33901978 396.41647339]
[-173.06098938 384.97750854]
[-181.61492920 372.64071655]
[-188.91844177 359.52487183]
[-194.90119934 345.75628662]
[-199.50555420 331.46759033]
[-202.68719482 316.79641724]
[-204.41548157 301.88400269]
[-204.67373657 286.87399292]
[-203.45950317 271.91094971]
[-200.78445435 257.13900757]
[-196.67436218 242.70037842]
[-191.16882324 228.73413086]
[-184.32083130 215.37480164]
[-176.19636536 202.75102234]
[-166.87365723 190.98437500]
[-156.44250488 180.18818665]
[-145.00334167 170.46643066]
[-132.66636658 161.91273499]
[-119.55036163 154.60949707]
[-105.78167725 148.62701416]
[-91.49289703 144.02293396]
[-76.82164001 140.84158325]
[-61.90919495 139.11361694]
[-46.89919281 138.85565186]
[-31.93618202 140.07019043]
[-17.16427040 142.74552917]
[-2.72572446 146.85591125]
[11.24040222 152.36172485]
[24.59960365 159.20997620]
[37.22322083 167.33470154]
[46.53810501 155.57745361]
[55.85298538 143.82020569]
[65.16786957 132.06294250]
[74.48274994 120.30569458]
[76.32166290 105.52504730]
[90.95608521 99.51303864]
[91.05946350 95.65795135]
[92.86159515 91.86714935]
[96.29567719 88.89830017]
[100.95886230 87.45104218]
[110.78944397 76.12144470]
[120.62002563 64.79185486]
[130.36599731 53.38939285]
[140.02680969 41.91469193]
[149.68760681 30.43999100]
[159.34841919 18.96529198]
[150.43518066 7.90428829]
[143.72207642 -4.60989571]
[139.43911743 -18.14522743]
[137.73236084 -32.23475266]
[138.65910339 -46.39270401]
[142.18579102 -60.13124466]
[148.18937683 -72.97729492]
[156.46150208 -84.48878479]
[166.71580505 -94.26992798]
[178.59779358 -101.98475647]
[191.69711304 -107.36872864]
[205.56172180 -110.23773956]
[219.71343994 -110.49446869]
[233.66455078 -108.13164520]
[246.93447876 -103.23225403]
[259.06646729 -95.96663666]
[269.06463623 -107.14861298]
[279.06283569 -118.33058929]
[289.06100464 -129.51255798]
[299.05917358 -140.69453430]
[309.05734253 -151.87651062]
[319.05551147 -163.05848694]
[329.05368042 -174.24046326]
[339.05184937 -185.42243958]
[328.76403809 -196.35140991]
[319.45385742 -208.12432861]
[311.19018555 -220.65402222]
[304.03421021 -233.84771729]
[298.03894043 -247.60774231]
[293.24874878 -261.83221436]
[289.69912720 -276.41580200]
[287.41629028 -291.25057983]
[286.41723633 -306.22665405]
[286.70925903 -321.23321533]
[288.29028320 -336.15908813]
[291.14852905 -350.89379883]
[295.26290894 -365.32824707]
[300.60290527 -379.35556030]
[307.12899780 -392.87191772]
[314.79287720 -405.77719116]
[323.53778076 -417.97589111]
[333.29898071 -429.37765503]
[344.00421143 -439.89807129]
[355.57421875 -449.45928955]
[367.92330933 -457.99047852]
[380.96008301 -465.42849731]
[394.58801270 -471.71823120]
[408.70620728 -476.81320190]
[423.21011353 -480.67559814]
[437.99234009 -483.27685547]
[452.94351196 -484.59774780]
[467.95285034 -484.62844849]
[482.90927124 -483.36877441]
[497.70202637 -480.82800293]
[512.22161865 -477.02496338]
[526.36053467 -471.98782349]
[540.01409912 -465.75387573]
[553.08117676 -458.36929321]
[565.46508789 -449.88870239]
[577.07409668 -440.37490845]
[587.82226562 -429.89837646]
[597.63006592 -418.53665161]
[606.42480469 -406.37384033]
[614.14141846 -393.50003052]
[620.72277832 -380.01049805]
[626.12011719 -366.00512695]
[630.29351807 -351.58764648]
[633.21203613 -336.86474609]
[634.85412598 -321.94546509]
[635.20758057 -306.94024658]
[634.26977539 -291.96020508]
[632.04766846 -277.11621094]
[628.55773926 -262.51821899]
[623.82580566 -248.27424622]
[617.88690186 -234.48982239]
[610.78497314 -221.26695251]
[602.57263184 -208.70355225]
[593.31066895 -196.89263916]
[583.06768799 -185.92166138]
[571.91949463 -175.87184143]
[559.94860840 -166.81758118]
[547.24365234 -158.82592773]
[533.89880371 -151.95603943]
[520.01269531 -146.25878906]
[505.68829346 -141.77633667]
[491.03155518 -138.54190063]
[476.15103149 -136.57940674]
[461.15689087 -135.90339661]
[446.16012573 -136.51885986]
[431.27182007 -138.42124939]
[416.60214233 -141.59648132]
[402.25973511 -146.02104187]
[388.35076904 -151.66218567]
[374.97824097 -158.47813416]
[362.24118042 -166.41841125]
[350.23382568 -175.42427063]
[340.23565674 -164.24229431]
[330.23748779 -153.06031799]
[320.23931885 -141.87834167]
[310.24114990 -130.69636536]
[300.24298096 -119.51438904]
[290.24478149 -108.33241272]
[280.24661255 -97.15044403]
[270.24844360 -85.96846771]
[279.70529175 -73.27075195]
[286.33535767 -58.88745117]
[289.85018921 -43.43894577]
[290.09573364 -27.59207726]
[287.05914307 -12.03135395]
[280.86935425 2.57060075]
[271.79168701 15.58213234]
[260.21643066 26.43988037]
[246.64202881 34.67316437]
[231.65373230 39.92439270]
[215.89820862 41.96458817]
[200.05581665 40.70338058]
[184.81105042 36.19299698]
[170.82312012 28.62610245]
[161.16230774 40.10080338]
[151.50151062 51.57550049]
[141.84069824 63.05020142]
[139.93745422 70.19159698]
[131.94961548 74.62243652]
[122.11904144 85.95202637]
[112.28845978 97.28162384]
[102.71334076 108.82792664]
[100.20816803 124.44953156]
[86.24000549 129.62057495]
[76.92511749 141.37782288]
[67.61023712 153.13508606]
[58.29535675 164.89233398]
[48.98047256 176.64958191]
[59.77728271 187.08009338]
[69.49972534 198.51867676]
[78.05415344 210.85514832]
[85.35819244 223.97070312]
[91.34149170 237.73902893]
[95.94642639 252.02752686]
[99.12865448 266.69860840]
[100.85752869 281.61093140]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[54 202]
[55 201]
[56 200]
[57 199]
[58 198]
[60 196]
[64 195]
[65 194]
[66 193]
[67 191]
[68 190]
[69 189]
[70 188]
[86 174]
[87 173]
[88 172]
[89 171]
[90 170]
[91 169]
[92 168]
[93 167]
[94 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
