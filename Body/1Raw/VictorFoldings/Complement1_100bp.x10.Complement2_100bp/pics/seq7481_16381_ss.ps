%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[124.53430176 514.10675049]
[113.58670807 502.70822144]
[113.98907471 486.90905762]
[125.50267792 476.08261108]
[125.72600555 461.08425903]
[125.94933319 446.08593750]
[126.17266083 431.08758545]
[126.39598846 416.08926392]
[118.84903717 403.24819946]
[126.79094696 389.56475830]
[127.01427460 374.56640625]
[127.23760223 359.56808472]
[127.46092987 344.56973267]
[127.68425751 329.57138062]
[127.12604523 314.58178711]
[125.78781128 299.64160156]
[124.44957733 284.70141602]
[115.60765839 272.71517944]
[122.08291626 258.27975464]
[118.35520172 251.89807129]
[120.83766937 243.10743713]
[119.72202301 228.14898682]
[110.76367188 220.02035522]
[109.71178436 207.56735229]
[117.67374420 197.41993713]
[116.78092194 182.44653320]
[114.00531769 167.70556641]
[109.39130402 153.43283081]
[104.77729797 139.16009521]
[93.50021362 129.42990112]
[96.61743927 113.91882324]
[86.37054443 104.40605164]
[89.10983276 90.69518280]
[84.49581909 76.42245483]
[81.17175293 73.62879181]
[79.11629486 70.26136017]
[78.35404968 66.78941345]
[78.75468445 63.64201736]
[80.05948639 61.16096115]
[76.30318451 46.63890076]
[72.43887329 32.14521027]
[68.46678162 17.68068504]
[64.49468231 3.21616077]
[60.52258682 -11.24836349]
[56.55049133 -25.71288681]
[50.01786804 -12.21011543]
[36.85099411 -5.02447605]
[21.96078682 -6.83603382]
[10.90092659 -16.96912193]
[7.79646778 -31.64435196]
[13.80529594 -45.38822174]
[26.68626785 -53.07461166]
[41.63509750 -51.83668518]
[53.07686234 -42.13516998]
[50.85174561 -56.96921158]
[48.62662888 -71.80325317]
[46.40151215 -86.63729858]
[44.17639160 -101.47134399]
[41.95127487 -116.30538940]
[23.30976486 -121.22413635]
[8.73055553 -133.76411438]
[1.11845624 -151.37008667]
[1.96528137 -170.48318481]
[11.05769157 -187.26040649]
[26.52875519 -198.34721375]
[15.92710209 -210.09095764]
[20.65335274 -224.21582031]
[17.33109283 -238.84327698]
[14.00883293 -253.47073364]
[10.68657303 -268.09820557]
[5.55148792 -254.00454712]
[-5.12946749 -243.47282410]
[-19.29396820 -238.53654480]
[-34.20706940 -240.14880371]
[-46.98928452 -247.99832153]
[-55.17257309 -260.56948853]
[-57.17686462 -275.43496704]
[-52.61516190 -289.72451782]
[-42.36826324 -300.67901611]
[-28.41468048 -306.18331909]
[-13.44863129 -305.17465210]
[-0.35982725 -297.84777832]
[8.32498074 -285.61621094]
[7.65519619 -300.60122681]
[6.98541069 -315.58627319]
[-4.98944950 -320.42181396]
[-14.21252823 -329.39453125]
[-19.33831215 -341.14617920]
[-19.63771629 -353.91683960]
[-15.10158825 -365.80850220]
[-6.43681860 -375.06713867]
[5.04357529 -380.34149170]
[4.82024765 -395.33981323]
[4.59692001 -410.33816528]
[4.37359238 -425.33651733]
[4.15026474 -440.33483887]
[-10.24943924 -445.01748657]
[-22.34697151 -454.12399292]
[-30.83008385 -466.66653442]
[-34.77859116 -481.28460693]
[-33.76418686 -496.39254761]
[-27.89690781 -510.35156250]
[-17.81319237 -521.64746094]
[-4.60684776 -529.05499268]
[10.28960323 -531.77056885]
[25.26030350 -529.49969482]
[38.68134308 -522.48864746]
[49.09690857 -511.49801636]
[55.37719727 -497.71987915]
[56.84096909 -482.64886475]
[53.32944870 -467.91970825]
[45.22353745 -455.13012695]
[33.40250015 -445.66748047]
[19.14860153 -440.55816650]
[19.37192917 -425.55984497]
[19.59525681 -410.56149292]
[19.81858444 -395.56314087]
[20.04191208 -380.56481934]
[35.37365723 -372.73052979]
[44.67352676 -358.13513184]
[45.30342484 -340.75103760]
[36.99966431 -325.36407471]
[21.97044945 -316.25607300]
[22.64023399 -301.27102661]
[23.31002045 -286.28598022]
[25.31403351 -271.42047119]
[28.63629341 -256.79299927]
[31.95855331 -242.16554260]
[35.28081131 -227.53807068]
[45.64483643 -216.84059143]
[41.15621567 -201.66946411]
[52.12930298 -200.79740906]
[62.52302170 -197.12561035]
[71.63454437 -190.89389038]
[78.84556580 -182.51542664]
[83.66427612 -172.54942322]
[85.75885010 -161.66374207]
[84.98035431 -150.59016418]
[81.37325287 -140.07522583]
[75.17295837 -130.82981873]
[66.79051208 -123.48123932]
[56.78532028 -118.53050232]
[59.01043701 -103.69645691]
[61.23555374 -88.86241913]
[63.46067047 -74.02837372]
[65.68579102 -59.19432831]
[67.91090393 -44.36028671]
[71.01501465 -29.68498230]
[74.98711395 -15.22045898]
[78.95920563 -0.75593543]
[82.93130493 13.70858860]
[86.90340424 28.17311287]
[91.70592499 33.79072571]
[90.82524109 42.88260269]
[94.58154297 57.40465927]
[98.76855469 71.80844116]
[103.38256073 86.08117676]
[113.62945557 95.59394836]
[110.89016724 109.30481720]
[122.49727631 120.05589294]
[119.05002594 134.54609680]
[123.66403961 148.81881714]
[128.27804565 163.09155273]
[130.99153137 148.33903503]
[138.29066467 135.23472595]
[149.40513611 125.16158295]
[163.16203308 119.18262482]
[178.10954285 117.92884064]
[192.67021179 121.53253937]
[205.30744934 129.61341858]
[214.68757629 141.31867981]
[219.82070923 155.41302490]
[220.16514587 170.40907288]
[215.68450928 184.72424316]
[206.85166931 196.84780884]
[194.59878540 205.50035095]
[180.21890259 209.76875305]
[165.22959900 209.20256042]
[151.21270752 203.86151123]
[139.64747620 194.30926514]
[131.75433350 181.55371094]
[132.64714050 196.52711487]
[143.14106750 211.65850830]
[134.68048096 227.03334045]
[135.79612732 241.99179077]
[137.02310181 256.94152832]
[145.96073914 269.99636841]
[139.38975525 283.36318970]
[140.72799683 298.30337524]
[142.06622314 313.24356079]
[151.61674500 301.67687988]
[166.34442139 298.83166504]
[179.51599121 306.00872803]
[185.10957336 319.92675781]
[180.56785583 334.22265625]
[167.96725464 342.36053467]
[153.06860352 340.61984253]
[142.68258667 329.79470825]
[142.45925903 344.79306030]
[142.23593140 359.79141235]
[142.01260376 374.78973389]
[141.78927612 389.78808594]
[149.32026672 403.70190430]
[141.39433289 416.31259155]
[141.17100525 431.31091309]
[140.94767761 446.30926514]
[140.72434998 461.30758667]
[140.50102234 476.30593872]
[151.68717957 487.47039795]
[151.61895752 503.27453613]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 208]
[5 207]
[6 206]
[7 205]
[8 204]
[10 202]
[11 201]
[12 200]
[13 199]
[14 198]
[15 190]
[16 189]
[17 188]
[19 186]
[21 185]
[22 184]
[25 182]
[26 181]
[27 163]
[28 162]
[29 161]
[31 159]
[33 157]
[34 156]
[39 155]
[40 154]
[41 152]
[42 151]
[43 150]
[44 149]
[45 148]
[54 147]
[55 146]
[56 145]
[57 144]
[58 143]
[59 142]
[65 131]
[67 129]
[68 128]
[69 127]
[70 126]
[83 125]
[84 124]
[85 123]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
