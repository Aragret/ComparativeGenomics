%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[140.01889038 608.86468506]
[136.91517639 594.16015625]
[136.03782654 579.15722656]
[137.40646362 564.19110107]
[140.99049377 549.59613037]
[146.70985413 535.69842529]
[154.43675232 522.80841064]
[163.99859619 511.21405029]
[175.18176270 501.17440796]
[187.73640442 492.91375732]
[201.38204956 486.61660767]
[197.19503784 472.21282959]
[193.00802612 457.80905151]
[188.82101440 443.40527344]
[184.63400269 429.00146484]
[179.80799866 414.79901123]
[174.35264587 400.82623291]
[168.89729309 386.85342407]
[163.44194031 372.88064575]
[157.98657227 358.90783691]
[152.89416504 373.01696777]
[140.54629517 381.53341675]
[125.54841614 381.28079224]
[113.49437714 372.35330200]
[108.88002777 358.08068848]
[113.42640686 343.78625488]
[125.43783569 334.80151367]
[140.43432617 334.47750854]
[152.82330322 342.93603516]
[149.06700134 328.41397095]
[145.31069946 313.89193726]
[141.55439758 299.36987305]
[130.87646484 288.98568726]
[134.91140747 273.68765259]
[131.15510559 259.16558838]
[120.89473724 252.75845337]
[117.64645386 240.69062805]
[123.67826843 229.28974915]
[120.13859558 214.71336365]
[116.59892273 200.13699341]
[113.05924988 185.56062317]
[109.51957703 170.98423767]
[94.55506134 171.41244507]
[79.82845306 168.72039795]
[65.98320770 163.02572632]
[53.62426758 154.57725525]
[43.29164124 143.74411011]
[35.43679810 130.99963379]
[30.40293503 116.90068817]
[28.41000175 102.06329346]
[29.54508018 87.13574219]
[33.75856781 72.77027893]
[40.86637115 59.59457016]
[50.55791855 48.18431091]
[62.40975952 39.03805542]
[75.90404510 32.55543137]
[72.36437225 17.97905540]
[61.58904648 6.39445686]
[66.10447693 -7.79921007]
[62.56480408 -22.37558556]
[59.02513123 -36.95196152]
[55.16082382 -51.44565582]
[50.97381210 -65.84943390]
[46.78680420 -80.25321960]
[42.59979248 -94.65699768]
[38.41278076 -109.06078339]
[27.13092232 -120.15267944]
[31.00806618 -134.53381348]
[26.82105446 -148.93759155]
[22.63404465 -163.34138489]
[11.72695065 -170.22601318]
[8.53611088 -182.30915833]
[14.24474907 -192.97395325]
[10.27265263 -207.43847656]
[6.30055618 -221.90299988]
[2.32846022 -236.36752319]
[-12.59463787 -234.59022522]
[-27.61594772 -235.05703735]
[-42.39988708 -237.75756836]
[-56.61617661 -242.63143921]
[-69.94721985 -249.56980896]
[-82.09519958 -258.41766357]
[-92.78871918 -268.97729492]
[-101.78888702 -281.01284790]
[-108.89463806 -294.25543213]
[-113.94721985 -308.40921021]
[-116.83375549 -323.15795898]
[-117.48976898 -338.17218018]
[-115.90058899 -353.11648560]
[-112.10173798 -367.65701294]
[-106.17806244 -381.46887207]
[-98.26191711 -394.24356079]
[-88.53014374 -405.69561768]
[-77.20015717 -415.56927490]
[-64.52506256 -423.64392090]
[-50.78804398 -429.73916626]
[-36.29597855 -433.71881104]
[-21.37262535 -435.49398804]
[-6.35138321 -435.02502441]
[8.43217182 -432.32241821]
[22.64776802 -427.44650269]
[35.97782516 -420.50622559]
[48.12454224 -411.65667725]
[58.81655884 -401.09548950]
[67.81501007 -389.05865479]
[74.91887665 -375.81506348]
[79.96943665 -361.66058350]
[82.85387421 -346.91140747]
[83.50775146 -331.89709473]
[81.91644287 -316.95300293]
[78.11551666 -302.41305542]
[72.18988037 -288.60202026]
[64.27191162 -275.82846069]
[54.53850937 -264.37777710]
[43.20711517 -254.50573730]
[30.53087425 -246.43290710]
[16.79298401 -240.33963013]
[20.76507950 -225.87510681]
[24.73717690 -211.41056824]
[28.70927238 -196.94604492]
[41.84138870 -185.30499268]
[37.03782654 -167.52839661]
[41.22483826 -153.12460327]
[45.41184998 -138.72082520]
[56.39422226 -128.65917969]
[52.81656265 -113.24779510]
[57.00357437 -98.84400940]
[61.19058609 -84.44023132]
[65.37759399 -70.03644562]
[69.56460571 -55.63266373]
[72.46193695 -53.62323380]
[74.52993011 -50.11061859]
[75.07267761 -45.49990082]
[73.60150909 -40.49163437]
[77.14118195 -25.91525841]
[80.68084717 -11.33888245]
[91.20299530 -0.79688352]
[86.94075012 14.43938351]
[90.48042297 29.01575851]
[105.44493866 28.58755302]
[120.17154694 31.27959824]
[134.01679993 36.97426987]
[146.37573242 45.42274857]
[156.70835876 56.25588989]
[164.56320190 69.00035858]
[169.59706116 83.09931183]
[171.58999634 97.93670654]
[170.45492554 112.86425781]
[166.24142456 127.22972107]
[159.13363647 140.40542603]
[149.44207764 151.81568909]
[137.59024048 160.96194458]
[124.09595490 167.44456482]
[127.63562775 182.02095032]
[131.17529297 196.59732056]
[134.71496582 211.17369080]
[138.25463867 225.75007629]
[151.27066040 238.77560425]
[145.67715454 255.40930176]
[149.43345642 269.93136597]
[160.38006592 281.35424805]
[156.07646179 295.61355591]
[159.83276367 310.13562012]
[163.58906555 324.65768433]
[167.34536743 339.17974854]
[171.95938110 353.45248413]
[177.41473389 367.42526245]
[182.87008667 381.39807129]
[188.32543945 395.37088013]
[193.78080750 409.34365845]
[200.77978516 396.07662964]
[215.06867981 391.51290894]
[228.46214294 398.26678467]
[233.28781128 412.46936035]
[226.78129578 425.98474121]
[212.66984558 431.07070923]
[199.03778076 424.81448364]
[203.22479248 439.21826172]
[207.41180420 453.62203979]
[211.59881592 468.02581787]
[215.78582764 482.42959595]
[230.68081665 480.43029785]
[245.70741272 480.67343140]
[260.52990723 483.15353394]
[274.81719971 487.81521606]
[288.25006104 494.55435181]
[300.52841187 503.22033691]
[311.37799072 513.61962891]
[320.55633545 525.51983643]
[327.85845947 538.65515137]
[333.12121582 552.73211670]
[336.22702026 567.43627930]
[337.10650635 582.43908691]
[335.73999023 597.40539551]
[332.15805054 612.00085449]
[326.44067383 625.89935303]
[318.71560669 638.79046631]
[309.15539551 650.38616943]
[297.97366333 660.42742920]
[285.42022705 668.68988037]
[271.77545166 674.98895264]
[257.34423828 679.18395996]
[242.44898987 681.18109131]
[227.42242432 680.93585205]
[212.60026550 678.45361328]
[198.31365967 673.78991699]
[184.88174438 667.04888916]
[172.60461426 658.38116455]
[161.75654602 647.98034668]
[152.57987976 636.07879639]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 181]
[12 180]
[13 179]
[14 178]
[15 177]
[16 170]
[17 169]
[18 168]
[19 167]
[20 166]
[29 165]
[30 164]
[31 163]
[32 162]
[34 160]
[35 159]
[38 157]
[39 156]
[40 155]
[41 154]
[42 153]
[56 139]
[57 138]
[59 136]
[60 135]
[61 134]
[62 130]
[63 129]
[64 128]
[65 127]
[66 126]
[68 124]
[69 123]
[70 122]
[73 120]
[74 119]
[75 118]
[76 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
