%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[77.14862061 577.84552002]
[67.41639709 589.35119629]
[55.29275894 598.30187988]
[41.43151855 604.21478271]
[26.58019066 606.77111816]
[11.53969097 605.83294678]
[-2.87886453 601.45092773]
[-15.89790154 593.86138916]
[-26.81532097 583.47357178]
[-35.04235840 570.84771729]
[-40.13533783 556.66467285]
[-41.81960678 541.68939209]
[-40.00433350 526.72937012]
[-34.78741074 512.59149170]
[-26.45018387 500.03808594]
[-15.44226456 489.74621582]
[-2.35729933 482.27090454]
[12.09905720 478.01525879]
[27.14719009 477.20880127]
[29.81298637 462.44757080]
[32.47878265 447.68637085]
[35.14457703 432.92514038]
[37.81037140 418.16394043]
[40.47616959 403.40270996]
[33.66099548 387.23114014]
[45.67217255 373.27359009]
[48.11790085 358.47430420]
[50.56362534 343.67504883]
[53.00935364 328.87576294]
[55.45508194 314.07650757]
[57.45909500 299.21096802]
[59.01961899 284.29235840]
[60.58014297 269.37374878]
[62.14066315 254.45515442]
[63.70118713 239.53654480]
[52.10415649 249.05015564]
[37.10421371 249.00935364]
[25.55912781 239.43275452]
[22.74715805 224.69868469]
[29.95389938 211.54335022]
[43.88452911 205.98120117]
[58.17014694 210.55516052]
[66.27997589 223.17588806]
[69.38408661 208.50059509]
[56.66941071 200.65060425]
[47.39024734 188.90214539]
[42.68167496 174.66122437]
[43.13032150 159.64056396]
[48.70132065 145.65364075]
[58.74022675 134.39573669]
[72.04981232 127.23843384]
[87.03283691 125.06258392]
[90.13694763 110.38728333]
[85.98612213 97.03578949]
[95.18775177 86.50860596]
[98.18252563 71.81060791]
[101.06779480 57.09071350]
[103.95307159 42.37082291]
[106.83834076 27.65093040]
[109.72361755 12.93103886]
[112.60888672 -1.78885233]
[115.38449860 -16.52981567]
[118.05029297 -31.29103279]
[120.71608734 -46.05224991]
[115.55451965 -61.00780869]
[125.43053436 -72.15740967]
[120.26896667 -87.11296844]
[130.14498901 -98.26256561]
[132.81077576 -113.02378082]
[135.47657776 -127.78499603]
[137.81207275 -142.60206604]
[139.81608582 -157.46759033]
[141.82009888 -172.33312988]
[143.82411194 -187.19865417]
[145.82812500 -202.06417847]
[147.83213806 -216.92970276]
[133.20008850 -220.27909851]
[118.93324280 -224.94520569]
[105.14982605 -230.88932800]
[91.96405792 -238.06224060]
[79.48518372 -246.40447998]
[67.81662750 -255.84693909]
[57.05507660 -266.31137085]
[47.28969955 -277.71105957]
[38.60142517 -289.95150757]
[31.06224251 -302.93133545]
[24.73462868 -316.54296875]
[19.67101479 -330.67361450]
[15.91336346 -345.20617676]
[13.49281025 -360.02023315]
[12.42941284 -374.99301147]
[12.73198414 -390.00048828]
[14.39801598 -404.91824341]
[17.41370392 -419.62268066]
[21.75405693 -433.99197388]
[27.38311195 -447.90704346]
[34.25421906 -461.25256348]
[42.31044388 -473.91796875]
[51.48503113 -485.79830933]
[61.70195007 -496.79510498]
[72.87654114 -506.81729126]
[84.91620636 -515.78173828]
[97.72118378 -523.61425781]
[111.18535614 -530.24981689]
[125.19715881 -535.63360596]
[139.64047241 -539.72082520]
[154.39562988 -542.47778320]
[169.34036255 -543.88146973]
[184.35081482 -543.92034912]
[199.30261230 -542.59411621]
[214.07185364 -539.91369629]
[228.53616333 -535.90130615]
[242.57568359 -530.59027100]
[256.07406616 -524.02447510]
[268.91943359 -516.25848389]
[281.00540161 -507.35650635]
[292.23175049 -497.39236450]
[302.50552368 -486.44863892]
[311.74154663 -474.61602783]
[319.86328125 -461.99252319]
[326.80346680 -448.68280029]
[332.50454712 -434.79708862]
[336.91928101 -420.45046997]
[340.01113892 -405.76184082]
[341.75442505 -390.85290527]
[342.13476562 -375.84722900]
[341.14895630 -360.86914062]
[338.80520630 -346.04272461]
[335.12289429 -331.49090576]
[330.13256836 -317.33419800]
[323.87557983 -303.68997192]
[316.40374756 -290.67123413]
[307.77902222 -278.38592529]
[298.07284546 -266.93579102]
[287.36566162 -256.41574097]
[275.74618530 -246.91296387]
[263.31069946 -238.50616455]
[250.16227722 -231.26502991]
[236.40983582 -225.24955750]
[222.16737366 -220.50959778]
[207.55287170 -217.08442688]
[192.68745422 -215.00244141]
[177.69430542 -214.28086853]
[162.69766235 -214.92568970]
[160.69364929 -200.06016541]
[158.68963623 -185.19464111]
[156.68562317 -170.32911682]
[154.68161011 -155.46357727]
[152.67759705 -140.59805298]
[154.51310730 -137.58753967]
[154.98164368 -133.53839111]
[153.61091614 -129.10281372]
[150.23779297 -125.11920166]
[147.57200623 -110.35798645]
[144.90620422 -95.59677124]
[150.25845337 -81.69702911]
[140.19175720 -69.49161530]
[145.54400635 -55.59187317]
[135.47731018 -43.38645554]
[132.81150818 -28.62523651]
[130.14572144 -13.86401939]
[132.05044556 -6.72302437]
[127.32878113 1.09642029]
[124.44350433 15.81631184]
[121.55823517 30.53620338]
[118.67295837 45.25609589]
[115.78768921 59.97598648]
[112.90241241 74.69587708]
[114.70060730 81.86444092]
[109.86305237 89.61271667]
[114.01387787 102.96421051]
[104.81224823 113.49139404]
[101.70813751 128.16668701]
[114.52684021 136.22314453]
[123.79832458 148.15676880]
[128.41882324 162.51544189]
[127.84906006 177.56021118]
[122.17707825 191.47604370]
[112.10533142 202.59063721]
[98.86370087 209.57551575]
[84.05938721 211.60470581]
[80.95527649 226.27999878]
[78.61978912 241.09707642]
[77.05927277 256.01568604]
[75.49874878 270.93426514]
[73.93822479 285.85287476]
[72.37770081 300.77148438]
[74.28585052 304.67187500]
[74.80171204 308.58319092]
[74.09280396 312.06640625]
[72.45203400 314.78201294]
[70.25435638 316.52221680]
[67.80862427 331.32150269]
[65.36289978 346.12075806]
[62.91717148 360.92004395]
[60.47144318 375.71929932]
[67.33451080 386.63998413]
[64.99278259 398.91598511]
[55.23738480 406.06851196]
[52.57159042 420.82974243]
[49.90579605 435.59094238]
[47.23999786 450.35217285]
[44.57420349 465.11337280]
[41.90840912 479.87460327]
[55.72388840 485.89367676]
[67.77851105 494.93704224]
[77.42219543 506.51702881]
[84.13485718 520.00915527]
[87.55449677 534.68572998]
[87.49669647 549.75537109]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 204]
[20 203]
[21 202]
[22 201]
[23 200]
[24 199]
[26 196]
[27 195]
[28 194]
[29 193]
[30 192]
[31 187]
[32 186]
[33 185]
[34 184]
[35 183]
[43 182]
[44 181]
[52 173]
[53 172]
[55 170]
[56 168]
[57 167]
[58 166]
[59 165]
[60 164]
[61 163]
[62 161]
[63 160]
[64 159]
[66 157]
[68 155]
[69 154]
[70 153]
[71 149]
[72 148]
[73 147]
[74 146]
[75 145]
[76 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
