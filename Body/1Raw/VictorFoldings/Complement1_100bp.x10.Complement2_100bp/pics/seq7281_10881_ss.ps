%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[67.33730316 757.92749023]
[52.33522034 758.21221924]
[37.34405899 757.57287598]
[22.42069244 756.01184082]
[7.62173033 753.53509521]
[-6.99669218 750.15197754]
[-21.37911987 745.87536621]
[-35.47099686 740.72143555]
[-49.21886444 734.70983887]
[-62.57057571 727.86328125]
[-75.47547913 720.20770264]
[-87.88462830 711.77227783]
[-99.75093842 702.58892822]
[-111.02941132 692.69244385]
[-121.67725372 682.12048340]
[-131.65406799 670.91302490]
[-140.92202759 659.11267090]
[-149.44596863 646.76416016]
[-157.19354248 633.91430664]
[-164.13537598 620.61187744]
[-170.24513245 606.90728760]
[-175.49963379 592.85266113]
[-179.87893677 578.50115967]
[-183.36645508 563.90728760]
[-185.94892883 549.12640381]
[-187.61659241 534.21459961]
[-188.36309814 519.22839355]
[-188.18562317 504.22463989]
[-187.08483887 489.26028442]
[-185.06491089 474.39205933]
[-182.13351440 459.67642212]
[-178.30177307 445.16912842]
[-173.58421326 430.92523193]
[-167.99873352 416.99877930]
[-161.56651306 403.44259644]
[-154.31196594 390.30810547]
[-146.26258850 377.64511108]
[-137.44894409 365.50167847]
[-127.90445709 353.92382812]
[-117.66532135 342.95550537]
[-106.77038574 332.63833618]
[-95.26097870 323.01144409]
[-83.18075562 314.11135864]
[-70.57554626 305.97180176]
[-57.49316788 298.62365723]
[-43.98324203 292.09484863]
[-30.09701729 286.41009521]
[-15.88717079 281.59097290]
[-1.40760672 277.65576172]
[13.28675079 274.61938477]
[28.14015961 272.49337769]
[43.09627533 271.28579712]
[58.09836197 271.00122070]
[73.08951569 271.64074707]
[74.65003967 256.72213745]
[76.21056366 241.80352783]
[77.77108765 226.88491821]
[79.33161163 211.96630859]
[80.89212799 197.04771423]
[78.46155548 190.06816101]
[82.58856201 181.91918945]
[84.37102509 167.02548218]
[86.15348816 152.13175964]
[87.93595886 137.23803711]
[89.71842194 122.34432220]
[91.50089264 107.45060730]
[80.35411072 117.48800659]
[65.44884491 119.17117310]
[52.34438705 111.87232971]
[45.92837143 98.31376648]
[48.59381485 83.55248260]
[59.34657669 73.09408569]
[74.17613983 70.83928680]
[87.55143738 77.62907410]
[94.48402405 90.93218231]
[98.02369690 76.35581207]
[93.76145172 61.11954117]
[104.28359985 50.57754135]
[107.82326508 36.00116730]
[111.36293793 21.42479134]
[114.90261078 6.84841681]
[118.44228363 -7.72795868]
[121.98195648 -22.30433464]
[125.52162933 -36.88071060]
[111.38175964 -41.92865372]
[97.84700775 -48.42698288]
[85.06568146 -56.30450439]
[73.17781067 -65.47489929]
[62.31364441 -75.83769989]
[52.59222031 -87.27936554]
[44.12005234 -99.67453003]
[36.98996353 -112.88738251]
[31.28007507 -126.77316284]
[27.05294800 -141.17973328]
[24.35489845 -155.94923401]
[23.21548843 -170.91984558]
[23.64719772 -185.92756653]
[25.64530182 -200.80792236]
[29.18790245 -215.39791870]
[34.23619080 -229.53765869]
[40.73485184 -243.07225037]
[48.61268234 -255.85339355]
[57.78336716 -267.74102783]
[68.14643097 -278.60494995]
[79.58833313 -288.32611084]
[91.98369598 -296.79797363]
[105.19672394 -303.92773438]
[119.08264923 -309.63729858]
[133.48931885 -313.86407471]
[148.25888062 -316.56173706]
[163.22953796 -317.70080566]
[178.23722839 -317.26873779]
[193.11755371 -315.27026367]
[207.70744324 -311.72729492]
[221.84707642 -306.67868042]
[235.38150024 -300.17968750]
[248.16244507 -292.30154419]
[260.04986572 -283.13055420]
[270.91354370 -272.76724243]
[280.63439941 -261.32510376]
[289.10598755 -248.92953491]
[296.23541260 -235.71632385]
[301.94464111 -221.83027649]
[306.17105103 -207.42350769]
[308.86840820 -192.65386963]
[310.00708008 -177.68319702]
[309.57464600 -162.67550659]
[307.57580566 -147.79522705]
[304.03250122 -133.20541382]
[298.98352051 -119.06591797]
[292.48422241 -105.53163910]
[284.60574341 -92.75088501]
[275.43447876 -80.86368561]
[265.07089233 -70.00027466]
[253.62852478 -60.27968216]
[241.23275757 -51.80841827]
[228.01937866 -44.67929077]
[214.13317871 -38.97041702]
[199.72630310 -34.74433899]
[184.95660400 -32.04736710]
[169.98590088 -30.90904617]
[154.97822571 -31.34185028]
[140.09800720 -33.34103775]
[136.55833435 -18.76466179]
[133.01866150 -4.18828630]
[129.47898865 10.38808918]
[125.93931580 24.96446419]
[122.39964294 39.54084015]
[118.85997009 54.11721420]
[123.37539673 68.31088257]
[112.60007477 79.89547729]
[109.06040192 94.47185516]
[106.39460754 109.23307037]
[104.61213684 124.12679291]
[102.82967377 139.02050781]
[101.04721069 153.91423035]
[99.26473999 168.80793762]
[97.48227692 183.70166016]
[95.81073761 198.60823059]
[94.25021362 213.52684021]
[92.68968964 228.44544983]
[91.12916565 243.36404419]
[89.56864166 258.28265381]
[88.00811768 273.20126343]
[102.80710602 275.67788696]
[117.42556763 279.06082153]
[131.80802917 283.33731079]
[145.89996338 288.49105835]
[159.64788818 294.50256348]
[172.99966431 301.34899902]
[185.90464783 309.00439453]
[198.31387329 317.43972778]
[210.18028259 326.62295532]
[221.45884705 336.51931763]
[232.10679626 347.09121704]
[242.08372498 358.29855347]
[251.35179138 370.09881592]
[259.87585449 382.44726562]
[267.62356567 395.29702759]
[274.56552124 408.59939575]
[280.67541504 422.30389404]
[285.93005371 436.35848999]
[290.30950928 450.70996094]
[293.79714966 465.30377197]
[296.37979126 480.08462524]
[298.04757690 494.99645996]
[298.79425049 509.98263550]
[298.61691284 524.98638916]
[297.51626587 539.95074463]
[295.49649048 554.81896973]
[292.56524658 569.53466797]
[288.73364258 584.04199219]
[284.01623535 598.28594971]
[278.43087769 612.21240234]
[271.99877930 625.76867676]
[264.74438477 638.90325928]
[256.69512939 651.56634521]
[247.88160706 663.70983887]
[238.33721924 675.28778076]
[228.09819031 686.25616455]
[217.20335388 696.57348633]
[205.69404602 706.20050049]
[193.61390686 715.10070801]
[181.00878906 723.24035645]
[167.92648315 730.58862305]
[154.41661072 737.11761475]
[140.53044128 742.80249023]
[126.32064819 747.62176514]
[111.84112549 751.55712891]
[97.14679718 754.59362793]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[54 164]
[55 163]
[56 162]
[57 161]
[58 160]
[59 159]
[61 158]
[62 157]
[63 156]
[64 155]
[65 154]
[66 153]
[75 152]
[76 151]
[78 149]
[79 148]
[80 147]
[81 146]
[82 145]
[83 144]
[84 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
