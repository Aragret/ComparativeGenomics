%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[215.85435486 305.55267334]
[225.81213379 294.31170654]
[215.81396484 283.12973022]
[205.81578064 271.94775391]
[195.81761169 260.76577759]
[185.81944275 249.58381653]
[175.73829651 238.47657776]
[165.49290466 227.52067566]
[155.16624451 216.64134216]
[144.83956909 205.76200867]
[147.62237549 220.50161743]
[143.81799316 235.01113892]
[134.16098022 246.48904419]
[120.51596832 252.71911621]
[105.51759338 252.49841309]
[92.06180573 245.86955261]
[82.74670410 234.11247253]
[79.37088776 219.49728394]
[82.58618164 204.84593201]
[91.77175140 192.98738098]
[105.15402222 186.21133423]
[120.14907074 185.82612610]
[133.86262512 191.90689087]
[125.63381958 179.36549377]
[117.40500641 166.82409668]
[118.69495392 181.76852417]
[115.12649536 196.33787537]
[107.07622528 208.99461365]
[95.39369202 218.40304565]
[81.31179810 223.57026672]
[66.31662750 223.95097351]
[51.99066544 219.50498962]
[39.84576035 210.70152283]
[31.16359138 198.46958923]
[26.86041260 184.10008240]
[27.39034462 169.10945129]
[32.69746399 155.07968140]
[42.22170258 143.49136353]
[54.95793533 135.56745911]
[69.56208801 132.14418030]
[84.49293518 133.58280945]
[98.17480469 139.73150635]
[109.16392517 149.94154358]
[104.33792877 135.73908997]
[99.51193237 121.53663635]
[94.68593597 107.33417511]
[91.50312805 105.15653229]
[89.29565430 101.58652496]
[88.66383362 97.09121704]
[89.97698212 92.38850403]
[85.78997040 77.98472595]
[74.50811005 66.89282227]
[78.38525391 52.51168823]
[74.19824219 38.10790634]
[68.79779053 30.74088860]
[70.05783081 23.45843887]
[66.08573914 8.99391460]
[62.11363983 -5.47060919]
[58.14154434 -19.93513298]
[54.16944885 -34.39965820]
[50.19735336 -48.86418152]
[46.22525787 -63.32870483]
[42.98310089 -48.68328094]
[35.42818069 -35.72476196]
[24.28058815 -25.68827248]
[10.60283566 -19.53042412]
[-4.30139828 -17.83814430]
[-19.01153755 -20.77273178]
[-32.12550354 -28.05447960]
[-42.39336014 -38.98933792]
[-48.83644104 -52.53506470]
[-50.84062576 -67.40057373]
[-48.21489716 -82.16896820]
[-41.20951843 -95.43262482]
[-30.49219704 -105.92733765]
[-17.08444023 -112.65281677]
[-2.26419139 -114.96803284]
[12.55597878 -112.65231323]
[25.96350670 -105.92637634]
[36.68046951 -95.43129730]
[43.68576813 -82.16632843]
[43.68576813 -97.16632843]
[43.68576813 -112.16632843]
[43.68576813 -127.16632843]
[43.68576813 -142.16633606]
[43.68576813 -157.16633606]
[41.07430267 -161.68598938]
[40.51369476 -166.29457092]
[41.69438171 -170.19598389]
[44.03570557 -172.83236694]
[44.70549011 -187.81741333]
[45.37527466 -202.80244446]
[38.26190186 -216.93434143]
[46.55978775 -229.30343628]
[47.22957230 -244.28848267]
[47.89935684 -259.27352905]
[48.56914139 -274.25854492]
[34.33280182 -279.33969116]
[22.22762871 -288.39266968]
[13.33000946 -300.61245728]
[8.43111324 -314.91253662]
[7.96654844 -330.02133179]
[11.97762203 -344.59536743]
[20.10767174 -357.33874512]
[31.63378143 -367.11834717]
[45.53105545 -373.06454468]
[60.56375885 -374.64859009]
[75.39518738 -371.72970581]
[88.70655060 -364.56735229]
[99.31420898 -353.79846191]
[106.27493286 -340.38058472]
[108.96977997 -325.50680542]
[107.15912628 -310.49972534]
[101.00397491 -296.69372559]
[91.05163574 -285.31643677]
[78.18707275 -277.37954712]
[63.55418015 -273.58877563]
[62.88439560 -258.60372925]
[62.21461105 -243.61868286]
[61.54482651 -228.63365173]
[68.70610809 -215.57357788]
[60.36031342 -202.13265991]
[59.69052887 -187.14762878]
[59.02074432 -172.16258240]
[58.68576813 -157.16633606]
[58.68576813 -142.16633606]
[58.68576813 -127.16632843]
[58.68576813 -112.16632843]
[58.68576813 -97.16632843]
[58.68576813 -82.16632843]
[60.68978119 -67.30080414]
[64.66188049 -52.83627701]
[68.63397217 -38.37175369]
[72.60607147 -23.90722847]
[76.57816315 -9.44270515]
[80.55026245 5.02181864]
[84.52235413 19.48634148]
[88.60202789 33.92089462]
[92.78903961 48.32467651]
[103.77140808 58.38632202]
[100.19374847 73.79771423]
[104.38076019 88.20149231]
[108.88838959 102.50817871]
[113.71438599 116.71063995]
[118.54038239 130.91308594]
[123.36637878 145.11555481]
[129.94641113 158.59527588]
[138.17521667 171.13668823]
[146.40402222 183.67808533]
[155.71890259 195.43533325]
[166.04557800 206.31466675]
[176.37223816 217.19400024]
[184.54995728 221.26374817]
[186.77018738 228.31303406]
[194.88639832 232.50408936]
[197.00141907 239.58564758]
[206.99958801 250.76762390]
[216.99775696 261.94958496]
[226.99592590 273.13156128]
[236.99411011 284.31353760]
[249.27470398 275.67044067]
[262.47567749 268.51147461]
[276.41851807 262.93350220]
[290.91467285 259.01196289]
[305.76806641 256.79986572]
[320.77783203 256.32714844]
[335.74096680 257.60015869]
[350.45513916 260.60174561]
[364.72137451 265.29129028]
[378.34667969 271.60534668]
[391.14682007 279.45852661]
[402.94869995 288.74465942]
[413.59268188 299.33816528]
[422.93484497 311.09573364]
[430.84884644 323.85836792]
[437.22766113 337.45349121]
[441.98498535 351.69723511]
[445.05651855 366.39697266]
[446.40069580 381.35391235]
[445.99935913 396.36575317]
[443.85794067 411.22949219]
[440.00540161 425.74411011]
[434.49380493 439.71334839]
[427.39773560 452.94821167]
[418.81314087 465.26980591]
[408.85610962 476.51141357]
[397.66128540 486.52105713]
[385.38012695 495.16336060]
[372.17864990 502.32141113]
[358.23544312 507.89846802]
[343.73904419 511.81903076]
[328.88552856 514.03015137]
[313.87570190 514.50189209]
[298.91265869 513.22784424]
[284.19866943 510.22528076]
[269.93276978 505.53479004]
[256.30789185 499.21981812]
[243.50825500 491.36578369]
[231.70700073 482.07885742]
[221.06372070 471.48464966]
[211.72233582 459.72647095]
[203.80918884 446.96328735]
[197.43130493 433.36773682]
[192.67492676 419.12365723]
[189.60437012 404.42373657]
[188.26118469 389.46670532]
[188.66351318 374.45489502]
[190.80592346 359.59130859]
[194.65945435 345.07693481]
[200.17196655 331.10809326]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 160]
[3 159]
[4 158]
[5 157]
[6 156]
[7 154]
[8 152]
[9 151]
[10 150]
[23 149]
[24 148]
[25 147]
[43 146]
[44 145]
[45 144]
[46 143]
[50 142]
[51 141]
[53 139]
[54 138]
[56 137]
[57 136]
[58 135]
[59 134]
[60 133]
[61 132]
[62 131]
[81 130]
[82 129]
[83 128]
[84 127]
[85 126]
[86 125]
[90 124]
[91 123]
[92 122]
[94 120]
[95 119]
[96 118]
[97 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
