%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[49.38587570 430.45196533]
[47.40174866 445.34521484]
[43.36411285 459.81738281]
[37.35156631 473.58676147]
[29.48114014 486.38528442]
[19.90603638 497.96386719]
[8.81263924 508.09710693]
[-3.58311677 516.58776855]
[-17.03994370 523.27056885]
[-31.29590225 528.01544189]
[-46.07349396 530.73004150]
[-61.08507156 531.36145020]
[-76.03842926 529.89746094]
[-90.64249420 526.36651611]
[-104.61299133 520.83740234]
[-117.67798615 513.41766357]
[-129.58316040 504.25183105]
[-140.09678650 493.51824951]
[-149.01419067 481.42587280]
[-156.16181946 468.21005249]
[-161.40052795 454.12808228]
[-164.62834167 439.45404053]
[-165.78244019 424.47357178]
[-164.84034729 409.47830200]
[-161.82041931 394.76007080]
[-156.78141785 380.60540771]
[-149.82144165 367.28982544]
[-141.07595825 355.07250977]
[-130.71520996 344.19128418]
[-118.94087219 334.85794067]
[-105.98213959 327.25418091]
[-92.09123993 321.52798462]
[-77.53858185 317.79083252]
[-62.60743332 316.11547852]
[-47.58842850 316.53451538]
[-32.77391434 319.03979492]
[-18.45227051 323.58255005]
[-11.97277355 310.05419922]
[-11.91852283 302.66375732]
[-5.29477692 296.37377930]
[1.38541782 282.94338989]
[8.06561279 269.51303101]
[14.64564037 256.03329468]
[21.12513542 242.50494385]
[27.60463142 228.97659302]
[34.08412933 215.44824219]
[40.56362534 201.91990662]
[47.04311752 188.39155579]
[53.52261353 174.86320496]
[60.00210953 161.33486938]
[66.48160553 147.80651855]
[72.96110535 134.27816772]
[72.15790558 131.59246826]
[72.37015533 128.42678833]
[73.78600311 125.16629791]
[76.45080566 122.25711060]
[80.25016785 120.15501404]
[87.52339935 107.03631592]
[87.47257233 93.05458069]
[99.35791016 85.69045258]
[84.96307373 89.90812683]
[71.17491913 84.00162506]
[64.29720306 70.67132568]
[67.47431946 56.01165390]
[79.25373840 46.72481918]
[94.25006866 47.05664062]
[105.60718536 56.85540771]
[108.13245392 71.64308167]
[116.73101044 59.35224533]
[118.30193329 43.60922241]
[131.93754578 37.61594391]
[140.53610229 25.32510567]
[149.13467407 13.03426743]
[149.35705566 8.69785118]
[150.80242920 5.02696037]
[153.11137390 2.32433915]
[155.86311340 0.74491334]
[158.62895203 0.28857124]
[161.13412476 -15.33303833]
[175.10229492 -20.50408363]
[184.41717529 -32.26133347]
[193.73205566 -44.01858521]
[203.04693604 -55.77583694]
[191.95576477 -65.88357544]
[181.58834839 -76.73242950]
[171.99412537 -88.27069092]
[163.21881104 -100.44338226]
[155.30421448 -113.19248962]
[148.28804016 -126.45726013]
[142.20375061 -140.17448425]
[137.08033752 -154.27877808]
[132.94219971 -168.70294189]
[129.80906677 -183.37823486]
[127.69586182 -198.23471069]
[126.61267090 -213.20159912]
[126.56464386 -228.20753479]
[127.55201721 -243.18104553]
[129.57008362 -258.05075073]
[132.60922241 -272.74578857]
[136.65493774 -287.19613647]
[141.68797302 -301.33294678]
[147.68434143 -315.08883667]
[154.61546326 -328.39822388]
[162.44828796 -341.19775391]
[171.14552307 -353.42636108]
[180.66569519 -365.02578735]
[190.96343994 -375.94076538]
[201.98970032 -386.11929321]
[213.69190979 -395.51284790]
[226.01431274 -404.07669067]
[238.89819336 -411.76995850]
[252.28213501 -418.55603027]
[266.10238647 -424.40252686]
[280.29302979 -429.28164673]
[294.78649902 -433.17010498]
[309.51370239 -436.04934692]
[324.40447998 -437.90570068]
[339.38781738 -438.73028564]
[354.39236450 -438.51919556]
[369.34655762 -437.27340698]
[384.17919922 -434.99887085]
[398.81958008 -431.70645142]
[413.19793701 -427.41180420]
[427.24569702 -422.13540649]
[440.89599609 -415.90240479]
[454.08374023 -408.74249268]
[466.74609375 -400.68981934]
[478.82269287 -391.78271484]
[490.25601196 -382.06369019]
[500.99154663 -371.57897949]
[510.97814941 -360.37863159]
[520.16827393 -348.51593018]
[528.51800537 -336.04748535]
[535.98767090 -323.03271484]
[542.54162598 -309.53356934]
[548.14862061 -295.61444092]
[552.78192139 -281.34164429]
[556.41955566 -266.78320312]
[559.04406738 -252.00846863]
[560.64300537 -237.08787537]
[561.20874023 -222.09251404]
[560.73858643 -207.09387207]
[559.23480225 -192.16339111]
[556.70446777 -177.37223816]
[553.15972900 -162.79089355]
[548.61743164 -148.48886108]
[543.09924316 -134.53427124]
[536.63146973 -120.99365234]
[529.24493408 -107.93151093]
[520.97479248 -95.41011047]
[511.86047363 -83.48910522]
[501.94546509 -72.22531891]
[491.27694702 -61.67242050]
[479.90582275 -51.88070679]
[467.88619995 -42.89683151]
[455.27545166 -34.76361465]
[442.13360596 -27.51980972]
[428.52331543 -21.19993973]
[414.50942993 -15.83412361]
[400.15875244 -11.44793034]
[385.53967285 -8.06226158]
[370.72183228 -5.69325256]
[355.77584839 -4.35219288]
[340.77297974 -4.04547310]
[325.78466797 -4.77455521]
[310.88238525 -6.53596401]
[296.13711548 -9.32130623]
[281.61917114 -13.11730862]
[267.39770508 -17.90587997]
[253.54048157 -23.66420364]
[240.11355591 -30.36483383]
[227.18092346 -37.97584152]
[214.80418396 -46.46095657]
[205.48930359 -34.70370483]
[196.17442322 -22.94645309]
[186.85954285 -11.18920135]
[185.02062988 3.59145093]
[170.38619995 9.60345364]
[161.42550659 21.63283157]
[152.82695007 33.92366791]
[144.22837830 46.21450806]
[143.27249146 61.07840729]
[129.02185059 67.95080566]
[120.42328644 80.24164581]
[112.47660065 92.96368408]
[112.52742767 106.94541931]
[100.64208984 114.30954742]
[93.36885834 127.42823792]
[86.48944855 140.75767517]
[80.00994873 154.28601074]
[73.53045654 167.81436157]
[67.05096436 181.34271240]
[60.57146454 194.87104797]
[54.09196854 208.39939880]
[47.61247253 221.92774963]
[41.13297653 235.45608521]
[34.65348053 248.98443604]
[28.17398643 262.51278687]
[27.28938484 271.60427856]
[21.49598885 276.19320679]
[14.81579399 289.62359619]
[8.13559914 303.05395508]
[1.55557168 316.53369141]
[-4.92392445 330.06204224]
[7.59261179 338.37362671]
[18.83053780 348.34634399]
[28.57110405 359.78607178]
[36.62470627 372.47015381]
[42.83457947 386.15167236]
[47.07984924 400.56430054]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 204]
[38 203]
[40 202]
[41 201]
[42 200]
[43 198]
[44 197]
[45 196]
[46 195]
[47 194]
[48 193]
[49 192]
[50 191]
[51 190]
[52 189]
[57 188]
[58 187]
[60 185]
[68 184]
[69 183]
[71 181]
[72 180]
[73 179]
[78 178]
[80 176]
[81 175]
[82 174]
[83 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
