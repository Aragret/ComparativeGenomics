%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[113.56489563 711.88616943]
[99.99198914 705.39208984]
[87.89353180 696.44653320]
[77.70687866 685.37274170]
[69.80026245 672.57110596]
[64.45950317 658.50439453]
[61.87767792 643.68103027]
[62.14810181 628.63702393]
[65.26100922 613.91607666]
[71.10386658 600.05035400]
[79.46546173 587.54113770]
[90.04352570 576.84063721]
[102.45567322 568.33563232]
[116.25319672 562.33355713]
[130.93734741 559.05145264]
[130.49073792 544.05810547]
[122.37792969 531.56683350]
[129.70091248 517.54241943]
[129.25431824 502.54907227]
[128.80770874 487.55572510]
[128.36109924 472.56237793]
[127.24545288 457.60391235]
[125.46298981 442.71020508]
[123.68051910 427.81646729]
[114.48564911 416.09881592]
[120.52823639 401.47698975]
[118.74577332 386.58328247]
[116.96330261 371.68954468]
[114.43238068 369.23461914]
[112.96479034 365.43182373]
[113.18107605 360.79431152]
[115.44915009 356.09292603]
[114.33350372 341.13449097]
[113.21784973 326.17602539]
[112.10220337 311.21755981]
[110.98655701 296.25912476]
[94.67120361 293.44012451]
[79.62081909 286.51431274]
[66.85077667 275.94311523]
[57.22412109 262.43405151]
[51.39323425 246.89337158]
[49.75562668 230.36538696]
[52.42684555 213.96218872]
[59.23233414 198.78884888]
[69.71882629 185.86898804]
[83.18454742 176.07568359]
[98.72615051 170.07249451]
[89.53128052 158.35482788]
[95.57386780 143.73301697]
[93.79140472 128.83929443]
[84.58950806 140.68518066]
[69.95306396 143.96763611]
[56.57365036 137.18594360]
[50.56816101 123.44061279]
[54.68222046 109.01582336]
[67.03493500 100.50639343]
[81.97881317 101.80271912]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[92.09580994 72.91117859]
[91.87248230 57.91284180]
[91.64915466 42.91450500]
[88.39232635 34.38040543]
[91.53582764 27.69159317]
[91.53582764 12.69159317]
[91.53582764 -2.30840707]
[91.08921814 -17.30175781]
[90.19640350 -32.27516174]
[89.30358887 -47.24856949]
[88.41077423 -62.22197342]
[87.51795959 -77.19538116]
[79.40518188 -64.57860565]
[66.11648560 -57.62083817]
[51.12550354 -58.14081192]
[38.35083771 -66.00260925]
[31.13175583 -79.15118408]
[31.35531044 -94.14951324]
[38.96306229 -107.07708740]
[51.96636963 -114.55465698]
[66.96619415 -114.62760925]
[80.04161072 -107.27687836]
[87.77450562 -94.42476654]
[81.29924774 -108.86019897]
[90.14116669 -120.84642792]
[91.47940063 -135.78662109]
[85.00414276 -150.22204590]
[93.84606171 -162.20828247]
[95.18429565 -177.14846802]
[96.52252960 -192.08865356]
[90.04727936 -206.52407837]
[98.88919830 -218.51031494]
[100.22743225 -233.45050049]
[101.56566620 -248.39067078]
[95.09040833 -262.82611084]
[103.93232727 -274.81234741]
[105.27056122 -289.75253296]
[91.09905243 -294.93237305]
[78.75162506 -303.60437012]
[69.07015228 -315.17724609]
[62.71472931 -328.86193848]
[60.11867905 -343.72543335]
[61.45900726 -358.75424194]
[66.64432526 -372.92376709]
[75.32108307 -385.26785278]
[86.89769745 -394.94485474]
[100.58485413 -401.29498291]
[115.44933319 -403.88528442]
[130.47764587 -402.53915405]
[144.64515686 -397.34838867]
[156.98587036 -388.66683960]
[166.65841675 -377.08648682]
[173.00326538 -363.39688110]
[175.58782959 -348.53143311]
[174.23590088 -333.50363159]
[169.03964233 -319.33813477]
[160.35334778 -307.00076294]
[148.76927185 -297.33270264]
[135.07722473 -290.99313354]
[120.21074677 -288.41427612]
[118.87251282 -273.47409058]
[125.44348907 -260.10729980]
[116.50585175 -247.05244446]
[115.16761017 -232.11225891]
[113.82937622 -217.17207336]
[120.40035248 -203.80526733]
[111.46271515 -190.75041199]
[110.12448120 -175.81022644]
[108.78624725 -160.87004089]
[115.35722351 -147.50323486]
[106.41958618 -134.44837952]
[105.08135223 -119.50819397]
[111.65232849 -106.14138794]
[102.71469116 -93.08653259]
[102.49136353 -78.08819580]
[103.38417816 -63.11479187]
[104.27699280 -48.14138412]
[105.16980743 -33.16798019]
[106.06262970 -18.19457245]
[108.06733704 -16.23516464]
[109.41668701 -13.36360550]
[109.75936890 -9.82553005]
[108.83940125 -5.98910379]
[106.53582764 -2.30840707]
[106.53582764 12.69159317]
[106.53582764 27.69159317]
[106.64749146 42.69117737]
[106.87081909 57.68951416]
[107.09414673 72.68785095]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[108.68511963 127.05682373]
[110.46759033 141.95054626]
[119.78995514 154.73350525]
[113.61987305 168.29002380]
[127.05771637 169.71478271]
[139.89364624 173.91790771]
[151.56015015 180.71066284]
[161.54205322 189.78988647]
[169.39923096 200.75151062]
[174.78601074 213.10856628]
[177.46641541 226.31280518]
[177.32446289 239.77900696]
[174.36921692 252.91091919]
[168.73420715 265.12768555]
[160.67147827 275.88955688]
[150.54022217 284.72161865]
[138.79087830 291.23492432]
[125.94500732 295.14346313]
[127.06065369 310.10192871]
[128.17630005 325.06036377]
[129.29196167 340.01882935]
[130.40760803 354.97729492]
[131.85702515 369.90710449]
[133.63948059 384.80081177]
[135.42195129 399.69451904]
[144.74432373 412.47747803]
[138.57423401 426.03399658]
[140.35670471 440.92773438]
[142.13917542 455.82144165]
[152.23748779 444.72982788]
[167.21394348 443.88973999]
[178.48934937 453.78240967]
[179.60462952 468.74090576]
[169.92092896 480.19628906]
[154.98547363 481.58639526]
[143.35444641 472.11575317]
[143.80105591 487.10910034]
[144.24766541 502.10244751]
[144.69427490 517.09582520]
[152.83901978 530.65948486]
[145.48408508 543.61151123]
[145.93069458 558.60485840]
[160.78416443 561.00714111]
[174.91447449 566.17730713]
[187.81083679 573.92846680]
[199.00706482 583.98040771]
[208.09838867 595.96972656]
[214.75619507 609.46307373]
[218.73979187 623.97259521]
[219.90516663 638.97387695]
[218.21022034 653.92462158]
[213.71620178 668.28430176]
[206.58557129 681.53381348]
[197.07609558 693.19427490]
[185.53153992 702.84417725]
[172.36923218 710.13458252]
[158.06498718 714.80200195]
[143.13587952 716.67773438]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 194]
[16 193]
[18 191]
[19 190]
[20 189]
[21 188]
[22 181]
[23 180]
[24 179]
[26 177]
[27 176]
[28 175]
[32 174]
[33 173]
[34 172]
[35 171]
[36 170]
[47 156]
[49 154]
[50 153]
[58 152]
[60 150]
[61 149]
[62 148]
[63 147]
[65 146]
[66 145]
[67 144]
[68 139]
[69 138]
[70 137]
[71 136]
[72 135]
[83 134]
[85 132]
[86 131]
[88 129]
[89 128]
[90 127]
[92 125]
[93 124]
[94 123]
[96 121]
[97 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
