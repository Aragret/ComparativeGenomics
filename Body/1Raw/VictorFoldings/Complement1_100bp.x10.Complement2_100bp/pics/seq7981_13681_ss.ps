%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[208.34068298 203.52201843]
[197.85319519 192.79763794]
[187.36569214 182.07325745]
[176.87818909 171.34887695]
[166.39068604 160.62449646]
[155.90318298 149.90011597]
[144.50071716 140.15415955]
[132.27423096 131.46432495]
[119.98339844 122.86576843]
[107.62889099 114.35894012]
[96.06907654 115.77742004]
[86.52605438 109.10119629]
[83.89591217 97.75555420]
[71.66943359 89.06573486]
[59.44294357 80.37590790]
[47.21645737 71.68608093]
[34.98997116 62.99625778]
[22.76348686 54.30643463]
[16.22832489 53.30484009]
[11.83892918 49.69509888]
[10.30755997 45.17139053]
[-1.65477693 36.12139130]
[-13.61711407 27.07139015]
[-25.57945061 18.02138901]
[-41.25310898 15.86569881]
[-46.73479843 2.01649833]
[-58.69713593 -7.03350163]
[-70.65946960 -16.08350182]
[-82.62181091 -25.13350105]
[-94.71755981 -34.00439835]
[-106.94404602 -42.69422150]
[-119.17053223 -51.38404465]
[-131.39701843 -60.07387161]
[-141.00181580 -48.54257584]
[-151.46113586 -37.78036499]
[-162.71362305 -27.85038948]
[-174.69322205 -18.81092453]
[-187.32963562 -10.71501923]
[-200.54872131 -3.61018348]
[-214.27288818 2.46188855]
[-228.42158508 7.46556282]
[-242.91181946 11.37147522]
[-257.65850830 14.15670490]
[-272.57516479 15.80490589]
[-287.57418823 16.30640602]
[-302.56762695 15.65826130]
[-317.46743774 13.86427784]
[-332.18618774 10.93498135]
[-346.63754272 6.88756275]
[-360.73663330 1.74577498]
[-374.40075684 -4.46020794]
[-387.54974365 -11.69396687]
[-400.10638428 -19.91304970]
[-411.99703979 -29.06922531]
[-423.15188599 -39.10875702]
[-433.50546265 -49.97273254]
[-442.99703979 -61.59739304]
[-451.57089233 -73.91452026]
[-459.17672729 -86.85183716]
[-465.76989746 -100.33341217]
[-471.31170654 -114.28013611]
[-475.76962280 -128.61016846]
[-479.11752319 -143.23939514]
[-481.33572388 -158.08198547]
[-482.41122437 -173.05081177]
[-482.33770752 -188.05805969]
[-481.11560059 -203.01564026]
[-478.75207520 -217.83578491]
[-475.26101685 -232.43150330]
[-470.66290283 -246.71716309]
[-464.98471069 -260.60891724]
[-458.25979614 -274.02526855]
[-450.52758789 -286.88745117]
[-441.83346558 -299.11996460]
[-432.22845459 -310.65109253]
[-421.76892090 -321.41308594]
[-410.51623535 -331.34286499]
[-398.53646851 -340.38211060]
[-385.89990234 -348.47775269]
[-372.68069458 -355.58233643]
[-358.95639038 -361.65417480]
[-344.80758667 -366.65756226]
[-330.31729126 -370.56320190]
[-315.57055664 -373.34814453]
[-300.65386963 -374.99606323]
[-285.65481567 -375.49728394]
[-270.66140747 -374.84884644]
[-255.76162720 -373.05459595]
[-241.04292297 -370.12503052]
[-226.59165955 -366.07733154]
[-212.49266052 -360.93527222]
[-198.82864380 -354.72903442]
[-185.67980957 -347.49502563]
[-173.12332153 -339.27569580]
[-161.23284912 -330.11929321]
[-150.07820129 -320.07955933]
[-139.72482300 -309.21539307]
[-130.23345947 -297.59054565]
[-121.65983582 -285.27325439]
[-114.05425262 -272.33578491]
[-107.46134186 -258.85409546]
[-101.91979980 -244.90725708]
[-97.46214294 -230.57714844]
[-94.11453247 -215.94786072]
[-91.89660645 -201.10522461]
[-90.82139587 -186.13636780]
[-90.89519501 -171.12913513]
[-92.11758423 -156.17156982]
[-94.48137665 -141.35148621]
[-97.97271729 -126.75581360]
[-102.57109833 -112.47024536]
[-108.24954224 -98.57859039]
[-114.97473145 -85.16238403]
[-122.70719147 -72.30035400]
[-110.48070526 -63.61053085]
[-98.25421906 -54.92070770]
[-86.02773285 -46.23088074]
[-81.25292969 -46.12970734]
[-76.49098206 -43.02795029]
[-73.57180786 -37.09583664]
[-61.60947037 -28.04583740]
[-49.64713669 -18.99583817]
[-37.68479919 -9.94583797]
[-22.86676598 -8.43746376]
[-16.52945137 6.05905294]
[-4.56711388 15.10905266]
[7.39522314 24.15905190]
[19.35755920 33.20905304]
[31.45331192 42.07994843]
[43.67979813 50.76977158]
[55.90628433 59.45959854]
[68.13276672 68.14942169]
[80.35925293 76.83924866]
[92.58573914 85.52906799]
[109.32069397 86.67694855]
[116.13571930 102.00443268]
[128.49021912 110.51125336]
[137.33311462 112.80060577]
[140.96406555 119.23784637]
[153.19055176 127.92766571]
[147.62452698 113.99858093]
[148.56694031 99.02821350]
[155.83581543 85.90711212]
[168.02766418 77.16875458]
[182.78840637 74.50037384]
[197.26800537 78.41719818]
[208.67063904 88.16294861]
[214.79467773 101.85588074]
[214.45762634 116.85208893]
[207.72459412 130.25605774]
[195.89561462 139.47967529]
[181.25468445 142.74201965]
[166.62756348 139.41261292]
[177.11506653 150.13699341]
[187.60256958 160.86137390]
[198.09007263 171.58575439]
[208.57757568 182.31013489]
[219.06506348 193.03451538]
[230.92756653 183.82698059]
[243.76234436 176.03170776]
[257.40206909 169.75032043]
[271.66891479 165.06474304]
[286.37689209 162.03602600]
[301.33425903 160.70367432]
[316.34600830 161.08505249]
[331.21640015 163.17518616]
[345.75161743 166.94682312]
[359.76214600 172.35079956]
[373.06533813 179.31666565]
[385.48773193 187.75360107]
[396.86737061 197.55160522]
[407.05593872 208.58296204]
[415.92059326 220.70384216]
[423.34576416 233.75622559]
[429.23464966 247.56994629]
[433.51043701 261.96493530]
[436.11746216 276.75347900]
[437.02166748 291.74279785]
[436.21127319 306.73751831]
[433.69686890 321.54208374]
[429.51126099 335.96353149]
[423.70895386 349.81384277]
[416.36560059 362.91244507]
[407.57699585 375.08856201]
[397.45767212 386.18347168]
[386.13952637 396.05252075]
[373.77020264 404.56701660]
[360.51086426 411.61599731]
[346.53445435 417.10757446]
[332.02310181 420.97009277]
[317.16607666 423.15325928]
[302.15701294 423.62857056]
[287.19161987 422.38986206]
[272.46496582 419.45324707]
[258.16906738 414.85705566]
[244.49029541 408.66116333]
[231.60699463 400.94638062]
[219.68710327 391.81323242]
[208.88601685 381.38085938]
[199.34457397 369.78524780]
[191.18716431 357.17752075]
[184.52012634 343.72210693]
[179.43037415 329.59439087]
[175.98426819 314.97857666]
[174.22673035 300.06521606]
[174.18069458 285.04867554]
[175.84674072 270.12481689]
[179.20315552 255.48814392]
[184.20617676 241.32948303]
[190.79058838 227.83343506]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 158]
[2 157]
[3 156]
[4 155]
[5 154]
[6 153]
[7 140]
[8 139]
[9 137]
[10 136]
[13 134]
[14 133]
[15 132]
[16 131]
[17 130]
[18 129]
[21 128]
[22 127]
[23 126]
[24 125]
[26 123]
[27 122]
[28 121]
[29 120]
[30 117]
[31 116]
[32 115]
[33 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
