%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[64.29965210 746.73791504]
[49.60026550 743.70684814]
[35.20139313 739.47222900]
[21.20139503 734.06298828]
[7.69590569 727.51617432]
[-5.22281504 719.87640381]
[-17.46651840 711.19586182]
[-28.95156670 701.53393555]
[-39.59950256 690.95654297]
[-49.33759308 679.53594971]
[-58.09931183 667.35028076]
[-65.82480621 654.48260498]
[-72.46130371 641.02093506]
[-77.96347046 627.05718994]
[-82.29372406 612.68682861]
[-85.42247772 598.00793457]
[-87.32836151 583.12078857]
[-87.99835205 568.12707520]
[-87.42787933 553.12927246]
[-85.62083435 538.22979736]
[-82.58956146 523.53045654]
[-78.35477448 509.13162231]
[-72.94539642 495.13168335]
[-66.39838409 481.62628174]
[-58.75845337 468.70764160]
[-50.07779694 456.46405029]
[-40.41571426 444.97912598]
[-29.83820724 434.33129883]
[-18.41753197 424.59335327]
[-6.23170519 415.83178711]
[6.63603067 408.10644531]
[20.09777451 401.47009277]
[34.06156921 395.96810913]
[48.43202209 391.63803101]
[63.11096954 388.50942993]
[77.99813843 386.60372925]
[77.32835388 371.61871338]
[76.65856934 356.63366699]
[75.98878479 341.64862061]
[75.31900024 326.66357422]
[74.64921570 311.67855835]
[63.51828766 301.84808350]
[62.62556076 286.66067505]
[73.01213074 275.05218506]
[72.34234619 260.06713867]
[71.67255402 245.08209229]
[71.00276947 230.09706116]
[64.83823395 243.77178955]
[55.25533295 255.31164551]
[42.94587326 263.88351440]
[28.79848099 268.86862183]
[13.83446980 269.90707397]
[-0.86589497 266.92391968]
[-14.24138069 260.13449097]
[-25.32640076 250.02893066]
[-33.32071686 237.33676147]
[-37.64721680 222.97427368]
[-37.99355698 207.97827148]
[-34.33474731 193.43133545]
[-26.93490982 180.38363647]
[-16.32825089 169.77709961]
[-3.28047347 162.37739563]
[11.26649284 158.71875000]
[26.26249123 159.06524658]
[40.62494278 163.39190674]
[53.31701660 171.38635254]
[63.42245865 182.47148132]
[70.21174622 195.84704590]
[73.19483185 210.54859924]
[77.16692352 196.08407593]
[81.13902283 181.61955261]
[85.11111450 167.15502930]
[87.77690887 152.39381409]
[89.11515045 137.45362854]
[90.45338440 122.51344299]
[91.79161835 107.57325745]
[93.01859283 92.62351990]
[94.13423920 77.66506958]
[95.24988556 62.70661545]
[86.87160492 46.30887604]
[97.31044769 32.20222855]
[98.20326233 17.22882462]
[99.09607697 2.25541878]
[99.98889160 -12.71798706]
[100.88170624 -27.69139290]
[93.97953033 -41.92763138]
[102.46065521 -54.17180634]
[103.35346985 -69.14521027]
[104.24628448 -84.11861420]
[105.02760315 -99.09825134]
[105.69738770 -114.08329010]
[95.31082153 -125.69178009]
[96.20355225 -140.87919617]
[107.33448029 -150.70967102]
[108.00426483 -165.69470215]
[108.67404938 -180.67974854]
[94.33000946 -185.38624573]
[81.78833008 -193.78915405]
[71.97968292 -205.26490784]
[65.63193512 -218.96194458]
[63.21612930 -233.86383057]
[64.91153717 -248.86477661]
[70.59234619 -262.85159302]
[79.83701324 -274.78634644]
[91.95950317 -283.78344727]
[106.06026459 -289.17523193]
[121.09291077 -290.56155396]
[135.94194031 -287.83959961]
[149.50543213 -281.21133423]
[160.77691650 -271.16860962]
[168.91993713 -258.45663452]
[173.33026123 -244.01878357]
[173.68058777 -228.92640686]
[169.94493103 -214.29946899]
[162.40051270 -201.22337341]
[151.60716248 -190.66845703]
[138.36581421 -183.41798401]
[123.65908813 -180.00996399]
[122.98930359 -165.02491760]
[122.31951904 -150.03988647]
[132.52902222 -139.25556946]
[132.06323242 -124.04905701]
[120.68242645 -113.41350555]
[120.01264191 -98.42846680]
[122.85433960 -91.60596466]
[119.21968842 -83.22579956]
[118.32687378 -68.25239563]
[117.43405914 -53.27898788]
[124.40010071 -40.11375046]
[115.85511780 -26.79857635]
[114.96230316 -11.82517147]
[114.06948090 3.14823461]
[113.17666626 18.12164116]
[112.28385162 33.09504700]
[120.07589722 42.34764481]
[119.45462036 54.82954025]
[110.20834351 63.82226562]
[109.09268951 78.78071594]
[107.97704315 93.73917389]
[110.56565094 101.37275696]
[106.73179626 108.91149139]
[105.39356232 123.85167694]
[104.05532837 138.79185486]
[102.71709442 153.73204041]
[111.93842316 141.90127563]
[125.34108734 135.16564941]
[140.33723450 134.82569885]
[154.03134155 140.94708252]
[163.77931213 152.34783936]
[167.69894409 166.82666016]
[165.03341675 181.58793640]
[156.29742432 193.78146362]
[143.17771912 201.05288696]
[128.20753479 201.99819946]
[114.27737427 196.43487549]
[104.07693481 185.43711853]
[99.57563782 171.12712097]
[95.60354614 185.59164429]
[91.63144684 200.05616760]
[87.65935516 214.52069092]
[85.98780823 229.42727661]
[86.65760040 244.41230774]
[87.32738495 259.39733887]
[87.99716949 274.38238525]
[99.37797546 285.01794434]
[99.84376526 300.22445679]
[89.63425446 311.00875854]
[90.30403900 325.99380493]
[90.97382355 340.97885132]
[91.64360809 355.96386719]
[92.31339264 370.94891357]
[92.98317719 385.93395996]
[107.98100281 386.50387573]
[122.88053131 388.31039429]
[137.57998657 391.34115601]
[151.97897339 395.57540894]
[165.97909546 400.98428345]
[179.48474121 407.53082275]
[192.40364075 415.17028809]
[204.64755249 423.85052490]
[216.13282776 433.51217651]
[226.78102112 444.08932495]
[236.51937866 455.50964355]
[245.28138733 467.69515991]
[253.00718689 480.56262207]
[259.64401245 494.02410889]
[265.14651489 507.98773193]
[269.47711182 522.35803223]
[272.60620117 537.03686523]
[274.51245117 551.92395020]
[275.18280029 566.91760254]
[274.61267090 581.91546631]
[272.80599976 596.81494141]
[269.77508545 611.51440430]
[265.54061890 625.91333008]
[260.13159180 639.91339111]
[253.58488464 653.41894531]
[245.94526672 666.33776855]
[237.26490784 678.58154297]
[227.60308838 690.06671143]
[217.02584839 700.71478271]
[205.60539246 710.45300293]
[193.41978455 719.21484375]
[180.55223083 726.94049072]
[167.09063721 733.57714844]
[153.12698364 739.07952881]
[138.75663757 743.40991211]
[124.07775879 746.53887939]
[109.19063568 748.44494629]
[94.19695282 749.11511230]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 172]
[37 171]
[38 170]
[39 169]
[40 168]
[41 167]
[44 164]
[45 163]
[46 162]
[47 161]
[69 160]
[70 159]
[71 158]
[72 157]
[73 144]
[74 143]
[75 142]
[76 141]
[77 139]
[78 138]
[79 137]
[81 134]
[82 133]
[83 132]
[84 131]
[85 130]
[87 128]
[88 127]
[89 126]
[90 124]
[91 123]
[94 120]
[95 119]
[96 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
