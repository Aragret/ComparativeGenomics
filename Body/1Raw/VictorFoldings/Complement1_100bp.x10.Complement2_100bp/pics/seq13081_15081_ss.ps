%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCGxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[157.60279846 276.92758179]
[160.67388916 262.23519897]
[165.03149414 247.87174988]
[170.64149475 233.94963074]
[177.46000671 220.57780457]
[185.43363953 207.86093140]
[194.50000000 195.89854431]
[183.39276123 185.81741333]
[172.28553772 175.73626709]
[161.17829895 165.65513611]
[150.07106018 155.57398987]
[138.96383667 145.49285889]
[127.85659790 135.41171265]
[116.74936676 125.33058167]
[105.64212799 115.24944305]
[89.16215515 112.12106323]
[84.21680450 96.09234619]
[72.96070862 86.17769623]
[61.70461273 76.26304626]
[50.44851685 66.34839630]
[39.19242096 56.43374252]
[27.93632317 46.51909256]
[16.68022728 36.60444260]
[6.13069677 47.27370071]
[-5.01599073 57.31745911]
[-16.72280693 66.70234680]
[-28.95086098 75.39720154]
[-41.65953445 83.37312317]
[-54.80661011 90.60362244]
[-68.34841156 97.06468201]
[-82.23995972 102.73484039]
[-96.43509674 107.59526062]
[-110.88668060 111.62979126]
[-125.54669952 114.82503510]
[-140.36645508 117.17037964]
[-155.29670715 118.65802765]
[-170.28787231 119.28304291]
[-185.29014587 119.04334259]
[-200.25370789 117.93972778]
[-215.12881470 115.97586823]
[-229.86607361 113.15828705]
[-244.41653442 109.49633789]
[-258.73184204 105.00218201]
[-272.76446533 99.69075775]
[-286.46777344 93.57971191]
[-299.79626465 86.68933105]
[-312.70565796 79.04251862]
[-325.15301514 70.66467285]
[-337.09707642 61.58361435]
[-348.49810791 51.82952118]
[-359.31823730 41.43479156]
[-369.52151489 30.43395615]
[-379.07409668 18.86355782]
[-387.94421387 6.76203442]
[-396.10238647 -5.83041477]
[-403.52154541 -18.87195969]
[-410.17703247 -32.31927490]
[-416.04672241 -46.12769318]
[-421.11114502 -60.25133896]
[-425.35345459 -74.64329529]
[-428.75955200 -89.25576019]
[-431.31814575 -104.04019165]
[-433.02075195 -118.94746399]
[-433.86166382 -133.92807007]
[-433.83813477 -148.93225098]
[-432.95019531 -163.91014099]
[-431.20083618 -178.81199646]
[-428.59585571 -193.58831787]
[-425.14392090 -208.19003296]
[-420.85644531 -222.56860352]
[-415.74774170 -236.67628479]
[-409.83474731 -250.46621704]
[-403.13711548 -263.89257812]
[-395.67706299 -276.91079712]
[-387.47940063 -289.47756958]
[-378.57135010 -301.55120850]
[-368.98254395 -313.09155273]
[-358.74475098 -324.06033325]
[-347.89205933 -334.42105103]
[-336.46047974 -344.13931274]
[-324.48800659 -353.18286133]
[-312.01440430 -361.52160645]
[-299.08108521 -369.12786865]
[-285.73104858 -375.97637939]
[-272.00863647 -382.04440308]
[-257.95941162 -387.31176758]
[-243.63005066 -391.76095581]
[-229.06817627 -395.37725830]
[-214.32214355 -398.14855957]
[-199.44093323 -400.06573486]
[-184.47399902 -401.12240601]
[-169.47105408 -401.31500244]
[-154.48191833 -400.64294434]
[-139.55639648 -399.10845947]
[-124.74407959 -396.71661377]
[-110.09416199 -393.47540283]
[-95.65531158 -389.39553833]
[-81.47548676 -384.49060059]
[-67.60180664 -378.77688599]
[-54.08034515 -372.27334595]
[-40.95602417 -365.00161743]
[-28.27244377 -356.98587036]
[-16.07173347 -348.25268555]
[-4.39442587 -338.83111572]
[6.72068930 -328.75241089]
[17.23668861 -318.05010986]
[27.11863708 -306.75973511]
[36.33370972 -294.91876221]
[44.85129166 -282.56658936]
[52.64309311 -269.74420166]
[59.68322754 -256.49420166]
[65.94831085 -242.86062622]
[71.41752625 -228.88874817]
[76.07270813 -214.62498474]
[79.89839172 -200.11671448]
[82.88186646 -185.41213989]
[85.01322174 -170.56010437]
[86.28538513 -155.60993958]
[86.69412231 -140.61131287]
[86.23808289 -125.61405945]
[84.91876984 -110.66799164]
[82.74057770 -95.82274628]
[79.71073151 -81.12765503]
[75.83930969 -66.63152313]
[71.13916016 -52.38251114]
[65.62590790 -38.42795181]
[59.31785202 -24.81420326]
[52.23596191 -11.58648491]
[44.40375519 1.21125972]
[35.84725189 13.53651810]
[26.59487915 25.34834671]
[37.85097504 35.26299667]
[49.10707092 45.17764664]
[60.36316681 55.09230042]
[71.61926270 65.00695038]
[82.87535858 74.92160034]
[94.13145447 84.83625031]
[105.77791595 84.80149078]
[114.45998383 92.56440735]
[115.72326660 104.14220428]
[126.83050537 114.22334290]
[137.93772888 124.30448151]
[149.04496765 134.38562012]
[160.15220642 144.46676636]
[171.25942993 154.54789734]
[182.36666870 164.62904358]
[193.47390747 174.71017456]
[204.58113098 184.79132080]
[215.61148071 174.61148071]
[227.49836731 165.44635010]
[240.14875793 157.36766052]
[253.46365356 150.43864441]
[267.33883667 144.71351624]
[281.66571045 140.23710632]
[296.33215332 137.04441833]
[311.22335815 135.16046143]
[326.22280884 134.59999084]
[341.21310425 135.36737061]
[356.07690430 137.45658875]
[370.69790649 140.85133362]
[384.96163940 145.52499390]
[398.75650024 151.44100952]
[411.97451782 158.55308533]
[424.51226807 166.80554199]
[436.27154541 176.13380432]
[447.16040039 186.46485901]
[457.09356689 197.71784973]
[465.99331665 209.80471802]
[473.78997803 222.63084412]
[480.42254639 236.09585571]
[485.83911133 250.09437561]
[489.99728394 264.51681519]
[492.86450195 279.25033569]
[494.41836548 294.17962646]
[494.64666748 309.18780518]
[493.54763794 324.15744019]
[491.12988281 338.97134399]
[487.41232300 353.51361084]
[482.42404175 367.67041016]
[476.20410156 381.33093262]
[468.80114746 394.38827515]
[460.27316284 406.74023438]
[450.68688965 418.29016113]
[440.11730957 428.94763184]
[428.64718628 438.62924194]
[416.36627197 447.25924683]
[403.37069702 454.77008057]
[389.76214600 461.10293579]
[375.64715576 466.20831299]
[361.13619995 470.04617310]
[346.34280396 472.58654785]
[331.38281250 473.80953979]
[316.37322998 473.70553589]
[301.43161011 472.27539062]
[286.67483521 469.53030396]
[272.21844482 465.49172974]
[258.17553711 460.19128418]
[244.65606689 453.67047119]
[231.76579285 445.98028564]
[219.60563660 437.18096924]
[208.27076721 427.34133911]
[197.84986877 416.53845215]
[188.42453003 404.85681152]
[180.06851196 392.38787842]
[172.84721375 379.22918701]
[166.81713867 365.48379517]
[162.02549744 351.25924683]
[158.50978088 336.66687012]
[156.29751587 321.82089233]
[155.40600586 306.83746338]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 148]
[8 147]
[9 146]
[10 145]
[11 144]
[12 143]
[13 142]
[14 141]
[15 140]
[17 137]
[18 136]
[19 135]
[20 134]
[21 133]
[22 132]
[23 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
