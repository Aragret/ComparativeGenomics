%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[74.94107819 857.07867432]
[59.95014954 856.40863037]
[45.03990173 854.71716309]
[30.27984428 852.01208496]
[15.73879910 848.30603027]
[1.48456192 843.61627197]
[-12.41640568 837.96478271]
[-25.89929008 831.37774658]
[-38.90122986 823.88598633]
[-51.36159897 815.52441406]
[-63.22230530 806.33203125]
[-74.42804718 796.35162354]
[-84.92657471 785.62982178]
[-94.66893768 774.21655273]
[-103.60971832 762.16497803]
[-111.70722961 749.53143311]
[-118.92371368 736.37469482]
[-125.22552490 722.75622559]
[-130.58328247 708.73937988]
[-134.97200012 694.38964844]
[-138.37121582 679.77380371]
[-140.76509094 664.96008301]
[-142.14245605 650.01757812]
[-142.49688721 635.01586914]
[-141.82673645 620.02490234]
[-140.13513184 605.11468506]
[-137.42996216 590.35467529]
[-133.72381592 575.81359863]
[-129.03399658 561.55944824]
[-123.38237762 547.65850830]
[-116.79528809 534.17565918]
[-109.30344391 521.17376709]
[-100.94178772 508.71343994]
[-91.74929810 496.85281372]
[-81.76883698 485.64712524]
[-71.04693604 475.14868164]
[-59.63358688 465.40637207]
[-47.58200455 456.46569824]
[-34.94837952 448.36825562]
[-21.79161835 441.15185547]
[-8.17306137 434.85015869]
[5.84379292 429.49249268]
[20.19359207 425.10385132]
[34.80942917 421.70474243]
[49.62315750 419.31097412]
[64.56571198 417.93371582]
[79.56742096 417.57937622]
[80.23720551 402.59432983]
[73.07592010 389.53427124]
[81.42171478 376.09335327]
[82.09149933 361.10830688]
[82.76128387 346.12326050]
[83.43106842 331.13821411]
[84.10085297 316.15319824]
[73.89134979 305.36886597]
[74.35713959 290.16238403]
[85.73794556 279.52682495]
[86.40773010 264.54177856]
[87.07751465 249.55673218]
[87.74729919 234.57170105]
[88.41708374 219.58665466]
[89.08686829 204.60162354]
[77.21779633 192.68675232]
[77.64694214 175.53651428]
[90.59699249 163.77575684]
[83.24205780 150.82376099]
[91.38681030 137.26007080]
[91.83341980 122.26672363]
[92.28002167 107.27336884]
[92.16835785 92.27378845]
[91.49857330 77.28874969]
[90.82878113 62.30371094]
[90.15899658 47.31867218]
[89.37767792 32.33903503]
[87.92826080 17.40922546]
[85.92424774 2.54369736]
[83.92023468 -12.32183075]
[81.91621399 -27.18735886]
[74.76430511 -14.00213337]
[62.02991486 -6.07526636]
[47.04177856 -5.47882223]
[33.71775818 -12.36871052]
[25.54072762 -24.94392967]
[24.64813805 -39.91735077]
[31.27331161 -53.37495422]
[43.68444443 -61.79895401]
[58.63729477 -62.98733902]
[72.22322083 -56.62947083]
[80.89059448 -44.38810730]
[81.11392212 -59.38644409]
[81.33724976 -74.38478088]
[81.56057739 -89.38311768]
[81.78390503 -104.38145447]
[68.11266327 -114.34103394]
[63.12121201 -130.32810974]
[68.58758545 -145.98315430]
[82.17046356 -155.20178223]
[82.17046356 -170.20178223]
[82.17046356 -185.20178223]
[82.17046356 -200.20178223]
[68.82933807 -207.81163025]
[61.09436798 -221.08061218]
[61.04622650 -236.43943787]
[68.69786072 -249.75663757]
[81.99102020 -257.44998169]
[97.34991455 -257.44998169]
[110.64307404 -249.75663757]
[118.29470825 -236.43943787]
[118.24656677 -221.08061218]
[110.51159668 -207.81163025]
[97.17046356 -200.20178223]
[97.17046356 -185.20178223]
[97.17046356 -170.20178223]
[97.17046356 -155.20178223]
[108.65299988 -148.39050293]
[115.32400513 -136.70111084]
[115.34809875 -123.13390350]
[108.61205292 -111.23246765]
[96.78224182 -104.15812683]
[96.55891418 -89.15979004]
[96.33558655 -74.16145325]
[96.11225891 -59.16311646]
[95.88893127 -44.16477966]
[96.78174591 -29.19137192]
[98.78575897 -14.32584476]
[100.78977203 0.53968382]
[102.79378510 15.40521240]
[113.82546234 5.24144745]
[128.67248535 7.37828493]
[136.39016724 20.24052620]
[131.28933716 34.34660721]
[117.13012695 39.29804993]
[104.35108185 31.44621849]
[107.88713837 37.93606567]
[105.14403534 46.64888763]
[105.81381989 61.63392639]
[106.48361206 76.61896515]
[107.15339661 91.60400391]
[119.04784393 82.46496582]
[133.64501953 85.91786957]
[140.18441772 99.41735840]
[133.84544373 113.01211548]
[119.30094910 116.68058777]
[107.27336884 107.71997833]
[106.82676697 122.71332550]
[106.38015747 137.70668030]
[113.70314789 151.73109436]
[105.59033966 164.22236633]
[115.89369202 172.89735413]
[119.27023315 185.73516846]
[114.70395660 197.99205017]
[104.07190704 205.27140808]
[103.40212250 220.25645447]
[102.73233795 235.24148560]
[102.06255341 250.22653198]
[101.39276886 265.21157837]
[100.72298431 280.19659424]
[111.10955048 291.80508423]
[110.21681976 306.99252319]
[99.08589172 316.82296753]
[98.41610718 331.80801392]
[97.74632263 346.79306030]
[97.07653809 361.77807617]
[96.40675354 376.76312256]
[103.52012634 390.89501953]
[95.22224426 403.26409912]
[94.55245972 418.24914551]
[109.46273041 419.94046021]
[124.22282410 422.64535522]
[138.76391602 426.35119629]
[153.01821899 431.04071045]
[166.91926575 436.69207764]
[180.40223694 443.27886963]
[193.40426636 450.77044678]
[205.86476135 459.13186646]
[217.72558594 468.32412720]
[228.93145752 478.30435181]
[239.43013000 489.02606201]
[249.17265320 500.43920898]
[258.11358643 512.49060059]
[266.21127319 525.12408447]
[273.42791748 538.28070068]
[279.72991943 551.89910889]
[285.08786011 565.91583252]
[289.47677612 580.26556396]
[292.87619019 594.88134766]
[295.27026367 609.69500732]
[296.64782715 624.63751221]
[297.00247192 639.63922119]
[296.33251953 654.63018799]
[294.64111328 669.54040527]
[291.93612671 684.30047607]
[288.23019409 698.84155273]
[283.54055786 713.09582520]
[277.88912964 726.99682617]
[271.30221558 740.47979736]
[263.81054688 753.48175049]
[255.44906616 765.94219971]
[246.25672913 777.80297852]
[236.27641296 789.00878906]
[225.55465698 799.50738525]
[214.14143372 809.24981689]
[202.08998108 818.19067383]
[189.45646667 826.28826904]
[176.29978943 833.50482178]
[162.68132019 839.80676270]
[148.66453552 845.16461182]
[134.31480408 849.55340576]
[119.69900513 852.95269775]
[104.88530731 855.34667969]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 167]
[48 166]
[50 164]
[51 163]
[52 162]
[53 161]
[54 160]
[57 157]
[58 156]
[59 155]
[60 154]
[61 153]
[62 152]
[65 148]
[67 146]
[68 145]
[69 144]
[70 138]
[71 137]
[72 136]
[73 135]
[74 133]
[75 127]
[76 126]
[77 125]
[78 124]
[89 123]
[90 122]
[91 121]
[92 120]
[93 119]
[97 114]
[98 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
