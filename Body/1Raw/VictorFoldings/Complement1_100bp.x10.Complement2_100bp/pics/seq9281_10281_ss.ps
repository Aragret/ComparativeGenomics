%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[96.30856323 399.20556641]
[99.28971100 384.43365479]
[105.59768677 370.74765015]
[114.89231110 358.88568115]
[126.67234039 349.48739624]
[140.30247498 343.05966187]
[137.19837952 328.38433838]
[134.09426880 313.70904541]
[130.99015808 299.03375244]
[127.88603973 284.35842896]
[117.92201233 277.49954224]
[115.21582031 265.29870605]
[121.75069427 254.17852783]
[118.86542511 239.45863342]
[108.82450104 228.45730591]
[113.76283264 213.42655945]
[110.87755585 198.70666504]
[107.99228668 183.98678589]
[105.10700989 169.26689148]
[95.24620056 162.26039124]
[92.72196960 150.02061462]
[99.42167664 138.99897766]
[96.75588226 124.23775482]
[94.09008789 109.47653961]
[91.31447601 94.73557281]
[88.42920685 80.01568604]
[85.54393005 65.29579163]
[82.65866089 50.57590103]
[79.77338409 35.85600662]
[63.79706192 35.46229172]
[48.31078720 31.54333878]
[34.08226013 24.29649544]
[21.81613922 14.08400536]
[12.11915588 1.41489816]
[5.47010279 -13.08037758]
[2.19619322 -28.68132973]
[2.45695949 -44.61323166]
[6.23648167 -60.08560181]
[13.34432411 -74.33141327]
[23.42513275 -86.64511871]
[35.97639084 -96.41761780]
[50.37348557 -103.16635132]
[47.05122375 -117.79380798]
[43.72896576 -132.42126465]
[40.40670776 -147.04872131]
[37.08444595 -161.67619324]
[33.76218796 -176.30364990]
[27.48482704 -189.92697144]
[18.52413177 -201.95634460]
[9.56343460 -213.98571777]
[0.60273886 -226.01509094]
[-13.84619808 -232.46015930]
[-15.24421883 -247.28900146]
[-29.69315529 -253.73406982]
[-31.09117699 -268.56292725]
[-40.05187225 -280.59228516]
[-49.01256943 -292.62167358]
[-61.99885941 -285.08151245]
[-75.76003265 -279.07086182]
[-90.11667633 -274.66809082]
[-104.88162994 -271.93057251]
[-119.86238861 -270.89401245]
[-134.86366272 -271.57189941]
[-149.68988037 -273.95544434]
[-164.14773560 -278.01354980]
[-178.04875183 -283.69329834]
[-191.21170044 -290.92062378]
[-203.46496582 -299.60137939]
[-214.64881897 -309.62231445]
[-224.61743164 -320.85281372]
[-233.24085999 -333.14648438]
[-240.40669250 -346.34301758]
[-246.02148438 -360.27041626]
[-250.01203918 -374.74707031]
[-252.32632446 -389.58422852]
[-252.93418884 -404.58850098]
[-251.82771301 -419.56427002]
[-249.02128601 -434.31628418]
[-244.55152893 -448.65222168]
[-238.47669983 -462.38516235]
[-230.87599182 -475.33612061]
[-221.84851074 -487.33621216]
[-211.51193237 -498.22900391]
[-200.00103760 -507.87249756]
[-187.46586609 -516.14093018]
[-174.06985474 -522.92657471]
[-159.98765564 -528.14093018]
[-145.40284729 -531.71600342]
[-130.50556946 -533.60516357]
[-115.49005127 -533.78381348]
[-100.55204010 -532.24969482]
[-85.88629150 -529.02264404]
[-71.68399811 -524.14489746]
[-58.13031769 -517.67993164]
[-45.40195465 -509.71209717]
[-33.66484070 -500.34524536]
[-23.07200241 -489.70150757]
[-13.76153183 -477.91961670]
[-5.85481310 -465.15316772]
[0.54507363 -451.56866455]
[5.35469294 -437.34313965]
[8.51134109 -422.66207886]
[9.97386551 -407.71688843]
[9.72319794 -392.70239258]
[7.76260805 -377.81436157]
[4.11765480 -363.24685669]
[-1.16414213 -349.18981934]
[-8.01392365 -335.82650757]
[-16.34238815 -323.33111572]
[-26.04095650 -311.86660767]
[-36.98319244 -301.58236694]
[-28.02249527 -289.55297852]
[-19.06179810 -277.52362061]
[-5.25379038 -271.93896484]
[-3.21484113 -256.24969482]
[10.59316730 -250.66506958]
[12.63211632 -234.97579956]
[21.59281349 -222.94641113]
[30.55350876 -210.91703796]
[39.51420593 -198.88766479]
[36.79628754 -213.63937378]
[37.16182327 -228.63491821]
[40.59526062 -243.23667908]
[46.95061493 -256.82379150]
[55.95764923 -268.81851196]
[67.23338318 -278.71081543]
[80.29837036 -286.08010864]
[94.59706879 -290.61297607]
[109.52149963 -292.11676025]
[124.43706512 -290.52746582]
[138.70954895 -285.91268921]
[151.73208618 -278.46865845]
[162.95094299 -268.51190186]
[171.88908386 -256.46575928]
[178.16645813 -242.84243774]
[181.51615906 -228.22123718]
[181.79573059 -213.22384644]
[178.99331665 -198.48796082]
[173.22805786 -184.64015198]
[164.74510193 -172.26924133]
[153.90513611 -161.90124512]
[141.16909790 -153.97702026]
[127.07852936 -148.83349609]
[112.23255920 -146.68939209]
[97.26245117 -147.63587952]
[82.80474091 -151.63269043]
[69.47417450 -158.50990295]
[57.83757782 -167.97508240]
[48.38964844 -179.62591553]
[51.71190643 -164.99844360]
[55.03416824 -150.37098694]
[58.35642624 -135.74353027]
[61.67868423 -121.11606598]
[65.00094604 -106.48860931]
[79.06689453 -106.78670502]
[92.92316437 -104.31912994]
[106.03107452 -99.17976379]
[117.88063812 -91.56636810]
[128.01040649 -81.77304077]
[136.02540588 -70.17878723]
[141.61260986 -57.23290634]
[144.55307007 -43.43754959]
[144.73057556 -29.32824516]
[142.13621521 -15.45312309]
[136.86877441 -2.35161138]
[129.13101196 9.46653461]
[119.22186279 19.54106331]
[107.52484894 27.47915649]
[94.49327850 32.97073746]
[97.37854767 47.69062805]
[100.26382446 62.41051865]
[103.14909363 77.13040924]
[106.03437042 91.85030365]
[110.55198669 98.52590179]
[108.85130310 106.81073761]
[111.51709747 121.57196045]
[114.18289948 136.33317566]
[126.40055084 150.11035156]
[119.82690430 166.38160706]
[122.71217346 181.10150146]
[125.59745026 195.82139587]
[128.48272705 210.54129028]
[138.73002625 222.59547424]
[133.58531189 236.57336426]
[136.47058105 251.29325867]
[148.89201355 264.88699341]
[142.56134033 281.25433350]
[145.66545105 295.92962646]
[148.76956177 310.60494995]
[151.87367249 325.28024292]
[154.97778320 339.95553589]
[170.04325867 340.31359863]
[184.61991882 344.13693237]
[197.92164612 351.21936035]
[209.23110962 361.17892456]
[217.93840027 373.47848511]
[223.57394409 387.45480347]
[225.83383179 402.35412598]
[224.59619141 417.37295532]
[219.92773438 431.70132446]
[212.08027649 444.56652832]
[201.47697449 455.27481079]
[188.68968201 463.24862671]
[174.40798950 468.05798340]
[159.40208435 469.44351196]
[144.48123169 467.33050537]
[130.45008850 461.83291626]
[118.06532288 453.24719238]
[107.99485016 442.03637695]
[100.78174591 428.80505371]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 191]
[7 190]
[8 189]
[9 188]
[10 187]
[13 185]
[14 184]
[16 182]
[17 181]
[18 180]
[19 179]
[22 177]
[23 176]
[24 175]
[25 173]
[26 172]
[27 171]
[28 170]
[29 169]
[42 154]
[43 153]
[44 152]
[45 151]
[46 150]
[47 149]
[48 120]
[49 119]
[50 118]
[51 117]
[53 115]
[55 113]
[56 112]
[57 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
