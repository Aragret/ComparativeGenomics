%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[95.09429932 601.70001221]
[80.77860260 596.80957031]
[68.67600250 587.73309326]
[59.97218704 575.35980225]
[55.51986694 560.90185547]
[55.75523376 545.77575684]
[60.65523148 531.46331787]
[69.73980713 519.36682129]
[82.11894989 510.67129517]
[96.57986450 506.22866821]
[96.80319214 491.23031616]
[97.02651978 476.23196411]
[97.24984741 461.23364258]
[97.47317505 446.23529053]
[87.29325104 438.33602905]
[83.46461487 425.82907104]
[87.59928894 413.21499634]
[98.40071869 405.16867065]
[98.84732819 390.17529297]
[91.49239349 377.22329712]
[99.63714600 363.65963745]
[92.28221893 350.70761108]
[100.42697144 337.14395142]
[100.87357330 322.15060425]
[93.51864624 309.19857788]
[101.66339874 295.63491821]
[91.29445648 285.00378418]
[91.53379059 269.79205322]
[102.75498962 258.98822021]
[103.20159149 243.99487305]
[103.64820099 229.00152588]
[103.20159149 214.00816345]
[94.35967255 202.02194214]
[100.83493042 187.58650208]
[99.49669647 172.64631653]
[98.15846252 157.70614624]
[96.82022858 142.76596069]
[95.37081146 127.83614349]
[93.81028748 112.91754150]
[85.75378418 101.49018860]
[91.27111053 88.64298248]
[89.71058655 73.72438049]
[88.15006256 58.80577469]
[86.58953857 43.88716888]
[74.12667084 41.22017288]
[62.93120193 35.16695404]
[53.90059280 26.22419548]
[47.75555420 15.11974716]
[44.98252487 2.75339818]
[45.79516602 -9.87603569]
[50.11795044 -21.75138283]
[57.59304810 -31.91903877]
[67.60993195 -39.56553650]
[79.35522461 -44.08263779]
[78.46240997 -59.05604553]
[77.56959534 -74.02944946]
[76.67678070 -89.00285339]
[75.78396606 -103.97626495]
[67.23898315 -117.29143524]
[74.20502472 -130.45668030]
[68.10025787 -116.75514984]
[58.27339172 -105.42233276]
[45.57455826 -97.43862152]
[31.10233116 -93.49468994]
[16.10869789 -93.93172455]
[1.89076269 -98.71192932]
[-10.32148266 -107.42175293]
[-19.47155762 -119.30771637]
[-24.76788712 -133.34156799]
[-25.75228882 -148.30923462]
[-22.33959770 -162.91584778]
[-14.82505035 -175.89782715]
[-3.85872722 -186.13206482]
[9.61067390 -192.73321533]
[24.41791534 -195.13021851]
[39.28202438 -193.11569214]
[52.91710281 -186.86392212]
[64.14358521 -176.91575623]
[71.99026489 -164.13179016]
[75.77794647 -149.62149048]
[79.10020447 -164.24894714]
[74.61157990 -179.42005920]
[84.97560883 -190.11755371]
[88.29786682 -204.74501038]
[86.71037292 -211.16307068]
[88.35546875 -216.60279846]
[91.94293976 -219.75543213]
[87.90801239 -235.05346680]
[98.58594513 -245.43763733]
[102.34224701 -259.95968628]
[106.09854889 -274.48175049]
[109.85484314 -289.00381470]
[113.61114502 -303.52587891]
[116.05687714 -318.32513428]
[117.17252350 -333.28359985]
[118.28816986 -348.24206543]
[119.29243469 -363.20840454]
[120.18524933 -378.18179321]
[121.07806396 -393.15521240]
[121.97087860 -408.12860107]
[108.28292847 -414.73986816]
[98.17066193 -426.08932495]
[93.17611694 -440.44631958]
[94.06093597 -455.62145996]
[100.69017792 -469.30072021]
[112.05294037 -479.39804077]
[126.41648102 -484.37368774]
[141.59046936 -483.46890259]
[155.26097107 -476.82168579]
[165.34335327 -465.44564819]
[170.30009460 -451.07556152]
[169.37536621 -435.90280151]
[162.71015930 -422.24105835]
[151.32086182 -412.17364502]
[136.94429016 -407.23580933]
[136.05146790 -392.26239014]
[135.15864563 -377.28897095]
[134.26583862 -362.31558228]
[137.00564575 -355.45153809]
[133.24662781 -347.12640381]
[132.13098145 -332.16793823]
[131.01531982 -317.20950317]
[140.05949402 -329.17623901]
[153.36038208 -336.11068726]
[168.34980774 -336.67385864]
[182.13354492 -330.75704956]
[192.05015564 -319.50268555]
[196.18492126 -305.08380127]
[193.73947144 -290.28448486]
[185.18598938 -277.96224976]
[172.17601013 -270.49630737]
[157.22155762 -269.32821655]
[143.21011353 -274.68350220]
[132.84704590 -285.52819824]
[128.13320923 -299.76956177]
[124.37690735 -285.24752808]
[120.62060547 -270.72546387]
[116.86430359 -256.20339966]
[113.10800171 -241.68133545]
[117.41160583 -227.42201233]
[106.46499634 -215.99913025]
[102.92532349 -201.42276001]
[99.60306549 -186.79528809]
[104.32931519 -172.67042542]
[93.72766113 -160.92668152]
[90.40540314 -146.29922485]
[89.17842865 -131.34948730]
[97.65955353 -119.10531616]
[90.75737000 -104.86907959]
[91.65018463 -89.89567566]
[92.54299927 -74.92226410]
[93.43582153 -59.94886017]
[94.32863617 -44.97545624]
[110.90454102 -39.80126953]
[124.24935913 -28.63547897]
[132.29910278 -13.16972828]
[133.79518127 4.23660564]
[128.48120117 20.91634750]
[117.14628601 34.30321503]
[101.50814056 42.32664490]
[103.06866455 57.24525070]
[104.62918854 72.16385651]
[106.18971252 87.08245850]
[114.24621582 98.50981140]
[108.72888947 111.35701752]
[110.28941345 126.27561951]
[114.29463196 134.48513794]
[111.76041412 141.42771912]
[113.09864807 156.36790466]
[114.43688202 171.30809021]
[115.77511597 186.24827576]
[124.71275330 199.30313110]
[118.14177704 212.66993713]
[126.97011566 200.54309082]
[141.20442200 195.81184387]
[155.53564453 200.24085999]
[164.61859131 212.17819214]
[165.06555176 227.17152405]
[156.70982361 239.62872314]
[142.66787720 244.90354919]
[128.17701721 241.02862549]
[118.64154816 229.44812012]
[118.19494629 244.44148254]
[117.74833679 259.43481445]
[128.30657959 270.88739014]
[127.64007568 286.08642578]
[116.65674591 296.08151245]
[123.97973633 310.10592651]
[115.86692047 322.59719849]
[115.42031860 337.59054565]
[122.74330902 351.61495972]
[114.63050079 364.10623169]
[121.95348358 378.13064575]
[113.84067535 390.62191772]
[113.39407349 405.61526489]
[125.62114716 418.12597656]
[125.02872467 435.27136230]
[112.47151184 446.45861816]
[112.24818420 461.45697021]
[112.02485657 476.45529175]
[111.80152893 491.45364380]
[111.57820129 506.45199585]
[125.90043640 511.32321167]
[138.01519775 520.38342285]
[146.73558044 532.74505615]
[151.20727539 547.19702148]
[150.99217224 562.32348633]
[146.11135864 576.64245605]
[137.04301453 588.75109863]
[124.67552948 597.46319580]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 202]
[11 201]
[12 200]
[13 199]
[14 198]
[18 195]
[19 194]
[21 192]
[23 190]
[24 189]
[26 187]
[29 184]
[30 183]
[31 182]
[32 173]
[34 171]
[35 170]
[36 169]
[37 168]
[38 166]
[39 165]
[41 163]
[42 162]
[43 161]
[44 160]
[54 153]
[55 152]
[56 151]
[57 150]
[58 149]
[60 147]
[80 146]
[81 145]
[83 143]
[84 142]
[87 141]
[89 139]
[90 138]
[91 137]
[92 136]
[93 135]
[94 122]
[95 121]
[96 120]
[97 118]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
