%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUAxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[163.35678101 513.91870117]
[166.17037964 499.16177368]
[170.92585754 484.91156006]
[177.53831482 471.42233276]
[185.88977051 458.93487549]
[195.83117676 447.67202759]
[207.18510437 437.83477783]
[219.74894714 429.59866333]
[213.26945496 416.07034302]
[206.78996277 402.54199219]
[194.31401062 394.40563965]
[195.33099365 378.61715698]
[188.85150146 365.08880615]
[182.37200928 351.56045532]
[175.89251709 338.03210449]
[169.41300964 324.50378418]
[156.93707275 316.36743164]
[157.95405579 300.57894897]
[151.47454834 287.05059814]
[144.99505615 273.52224731]
[132.51911926 265.38592529]
[133.53610229 249.59742737]
[121.06015015 241.46107483]
[122.07713318 225.67259216]
[115.59763336 212.14425659]
[109.11814117 198.61590576]
[102.63864136 185.08755493]
[102.46221161 200.08651733]
[98.87768555 214.65193176]
[92.07311249 228.01971436]
[82.40543365 239.48863220]
[70.38180542 248.45704651]
[56.63295746 254.45448303]
[41.88013077 257.16632080]
[26.89722824 256.45031738]
[12.47022343 252.34405518]
[-0.64407241 245.06289673]
[-11.75770950 234.98881531]
[-20.28768921 222.65028381]
[-25.78654671 208.69454956]
[-27.96582031 193.85369873]
[-26.71119118 178.90626526]
[-22.08847427 164.63633728]
[-14.34016895 151.79252625]
[-3.87273455 141.04855347]
[8.76472759 132.96804810]
[22.90928078 127.97489166]
[37.81893158 126.33101654]
[52.71154785 128.12266541]
[66.80589294 133.25582886]
[79.36260986 141.46124268]
[89.72299194 152.30848694]
[97.34423065 165.23001099]
[96.22858429 150.27156067]
[95.11293030 135.31311035]
[80.22574615 129.66273499]
[69.28369141 118.09440613]
[64.46979523 102.91608429]
[66.74446869 87.15598297]
[75.65390015 73.95836639]
[89.42057800 65.95627594]
[88.08234406 51.01609039]
[79.14470673 37.96123886]
[85.71568298 24.59442902]
[84.37744904 9.65424442]
[83.03921509 -5.28594065]
[74.10157776 -18.34079552]
[80.67255402 -31.70760155]
[79.33432007 -46.64778900]
[77.99608612 -61.58797073]
[76.65785217 -76.52816010]
[75.31961823 -91.46834564]
[66.38198090 -104.52319336]
[72.95295715 -117.89000702]
[71.61472321 -132.83018494]
[55.53568649 -144.87776184]
[53.53160477 -164.56245422]
[66.44804382 -179.14601135]
[64.44403076 -194.01153564]
[62.44001770 -208.87705994]
[60.43600464 -223.74258423]
[58.43199158 -238.60812378]
[56.42797852 -253.47364807]
[46.91632462 -266.11639404]
[52.88388443 -279.76327515]
[37.86109543 -280.60726929]
[23.26957893 -284.27932739]
[9.63680458 -290.64672852]
[-2.54440689 -299.47933960]
[-12.83371449 -310.45779419]
[-20.85916519 -323.18527222]
[-26.33064461 -337.20166016]
[-29.05036163 -352.00030518]
[-28.92000008 -367.04620361]
[-25.94427299 -381.79550171]
[-20.23075104 -395.71499634]
[-11.98597527 -408.30151367]
[-1.50798702 -419.10003662]
[10.82443905 -427.72021484]
[24.56549454 -433.85046387]
[39.21844864 -437.26916504]
[54.25360870 -437.85269165]
[69.12745667 -435.58001709]
[83.30231476 -430.53326416]
[96.26577759 -422.89486694]
[107.54921722 -412.94094849]
[116.74474335 -401.03134155]
[123.51995087 -387.59655762]
[127.62991333 -373.12228394]
[128.92605591 -358.13174438]
[127.36153412 -343.16680908]
[122.99289703 -328.76849365]
[115.97806549 -315.45727539]
[106.57063293 -303.71432495]
[95.11065674 -293.96417236]
[82.01242065 -286.55926514]
[67.74941254 -281.76730347]
[77.11772919 -270.18783569]
[71.29350281 -255.47766113]
[73.29751587 -240.61213684]
[75.30152893 -225.74659729]
[77.30554962 -210.88107300]
[79.30956268 -196.01554871]
[81.31357574 -181.15002441]
[90.85145569 -177.35531616]
[98.00952148 -169.88552856]
[101.44775391 -160.04219055]
[100.48248291 -149.57931519]
[95.22113800 -140.39097595]
[86.55490875 -134.16842651]
[87.89314270 -119.22824097]
[96.73506165 -107.24200439]
[90.25980377 -92.80657959]
[91.59803772 -77.86639404]
[92.93627167 -62.92620850]
[94.27450562 -47.98602295]
[95.61273956 -33.04583740]
[104.45465851 -21.05960464]
[97.97940063 -6.62417507]
[99.31763458 8.31601048]
[100.65586853 23.25619507]
[109.49778748 35.24242783]
[103.02252960 49.67785645]
[104.36076355 64.61804199]
[117.49645233 68.93920135]
[127.99963379 77.93374634]
[134.29000854 90.24835968]
[135.42112732 104.03020477]
[131.22280884 117.20566559]
[122.32673645 127.79237366]
[110.07138824 134.19746399]
[111.18703461 149.15591431]
[112.30268097 164.11436462]
[116.16699219 178.60806274]
[122.64648438 192.13641357]
[129.12597656 205.66474915]
[135.60546875 219.19309998]
[148.54487610 228.29707336]
[147.06443787 243.11793518]
[160.00384521 252.22190857]
[158.52340698 267.04275513]
[165.00289917 280.57110596]
[171.48239136 294.09945679]
[184.42179871 303.20343018]
[182.94136047 318.02426147]
[189.42085266 331.55261230]
[195.90036011 345.08096313]
[202.37985229 358.60931396]
[208.85934448 372.13766479]
[221.79875183 381.24163818]
[220.31831360 396.06250000]
[226.79780579 409.59082031]
[233.27729797 423.11917114]
[247.56977844 418.49224854]
[262.35147095 415.81167603]
[277.35852051 415.12527466]
[292.32318115 416.44531250]
[306.97836304 419.74826050]
[321.06253052 424.97509766]
[334.32431030 432.03262329]
[346.52703857 440.79483032]
[357.45297241 451.10537720]
[366.90710449 462.78027344]
[374.72073364 475.61111450]
[380.75439453 489.36895752]
[384.90039062 503.80828857]
[387.08477783 518.67138672]
[387.26855469 533.69305420]
[385.44842529 548.60510254]
[381.65689087 563.14154053]
[375.96160889 577.04290771]
[368.46423340 590.06103516]
[359.29852295 601.96374512]
[348.62811279 612.53845215]
[336.64337158 621.59661865]
[323.55819702 628.97644043]
[309.60614014 634.54626465]
[295.03613281 638.20672607]
[280.10824585 639.89245605]
[265.08886719 639.57342529]
[250.24604797 637.25524902]
[235.84466553 632.97937012]
[222.14170837 626.82202148]
[209.38174438 618.89318848]
[197.79249573 609.33422852]
[187.58076477 598.31591797]
[178.92881775 586.03472900]
[171.99104309 572.70989990]
[166.89125061 558.57928467]
[163.72045898 543.89495850]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 173]
[9 172]
[10 171]
[12 169]
[13 168]
[14 167]
[15 166]
[16 165]
[18 163]
[19 162]
[20 161]
[22 159]
[24 157]
[25 156]
[26 155]
[27 154]
[53 153]
[54 152]
[55 151]
[61 144]
[62 143]
[64 141]
[65 140]
[66 139]
[68 137]
[69 136]
[70 135]
[71 134]
[72 133]
[74 131]
[75 130]
[78 124]
[79 123]
[80 122]
[81 121]
[82 120]
[83 119]
[85 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
