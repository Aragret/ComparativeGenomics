%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCGxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[61.67642975 539.93743896]
[54.27931213 526.86315918]
[48.65207291 512.93518066]
[44.89099884 498.39178467]
[43.06045151 483.48193359]
[43.19175339 468.46069336]
[45.28265762 453.58508301]
[49.29738235 439.10971069]
[55.16723633 425.28219604]
[62.79177475 412.33920288]
[72.04052734 400.50213623]
[82.75524902 389.97363281]
[94.75258636 380.93377686]
[107.82724762 373.53726196]
[121.75551605 367.91070557]
[117.99921417 353.38864136]
[114.24291992 338.86657715]
[110.48661804 324.34451294]
[106.73031616 309.82244873]
[102.32866669 324.16210938]
[92.53667450 335.52505493]
[79.00445557 341.99649048]
[64.01244354 342.48580933]
[50.08703995 336.91058350]
[39.57492447 326.21032715]
[34.24757767 312.18823242]
[35.00274658 297.20724487]
[41.71316910 283.79196167]
[53.24802780 274.20303345]
[67.66349792 270.05642700]
[82.53030396 272.05090332]
[95.34314728 279.85034180]
[103.94348145 292.14190674]
[103.05066681 277.16851807]
[102.15785217 262.19509888]
[93.67672729 249.95092773]
[100.57891083 235.71469116]
[99.68608856 220.74127197]
[91.20497131 208.49710083]
[98.10714722 194.26086426]
[89.62602997 182.01669312]
[96.52820587 167.78045654]
[95.63539124 152.80705261]
[94.74257660 137.83364868]
[80.67655182 132.94889832]
[69.54692841 123.05722046]
[63.04495621 109.66176605]
[62.15868378 94.79810333]
[67.02278900 80.72492981]
[76.89811707 69.58079529]
[90.28401947 63.05917358]
[89.39120483 48.08576584]
[88.49838257 33.11236191]
[87.60556793 18.13895607]
[75.81007385 15.28522587]
[65.16555023 9.48675251]
[56.39177322 1.14409447]
[50.07980347 -9.17044544]
[46.65221405 -20.75207901]
[46.33478165 -32.81168747]
[49.14163208 -44.52958679]
[54.87479782 -55.11125183]
[63.13814545 -63.84117126]
[73.36474609 -70.13123322]
[84.85578156 -73.56035614]
[84.85578156 -88.56035614]
[84.85578156 -103.56035614]
[84.85578156 -118.56035614]
[77.11848450 -132.36053467]
[84.85578156 -145.08779907]
[84.85578156 -160.08779907]
[77.59777832 -146.96067810]
[66.33332825 -137.05552673]
[52.38575363 -131.53599548]
[37.39361191 -131.05050659]
[23.11816216 -135.65611267]
[11.23647118 -144.81173706]
[3.14438677 -157.44178772]
[-0.20744051 -172.06250000]
[1.57475865 -186.95623779]
[8.28161335 -200.37332153]
[19.12520790 -210.73751831]
[32.83164978 -216.83123779]
[47.79071808 -217.93861389]
[62.24503708 -213.92953491]
[74.49652863 -205.27500916]
[83.10589600 -192.99172974]
[87.06187439 -178.52119446]
[90.60154724 -193.09756470]
[94.14122009 -207.67395020]
[97.68089294 -222.25032043]
[86.68463898 -232.88186646]
[82.51384735 -247.49354553]
[86.19232941 -262.13372803]
[96.63507843 -272.89501953]
[110.96566010 -276.95703125]
[114.50533295 -291.53338623]
[118.04500580 -306.10977173]
[121.58467865 -320.68615723]
[108.00958252 -327.19848633]
[96.08536530 -336.39123535]
[86.33329773 -347.86254883]
[79.17971039 -361.11093140]
[74.93731689 -375.55722046]
[73.79157257 -390.56991577]
[75.79257965 -405.49270630]
[80.85285187 -419.67324829]
[88.75118256 -432.49157715]
[99.14228058 -443.38739014]
[111.57189941 -451.88436890]
[125.49667358 -457.61099243]
[140.30786133 -460.31701660]
[155.35798645 -459.88406372]
[169.98912048 -456.33108521]
[183.56164551 -449.81341553]
[195.48225403 -440.61596680]
[205.22979736 -429.14083862]
[212.37817383 -415.88961792]
[216.61489868 -401.44165039]
[217.75473022 -386.42849731]
[215.74784851 -371.50650024]
[210.68199158 -357.32797241]
[202.77862549 -344.51272583]
[192.38323975 -333.62100220]
[179.95027161 -325.12893677]
[166.02325439 -319.40777588]
[151.21101379 -316.70761108]
[136.16105652 -317.14648438]
[132.62138367 -302.57009888]
[129.08171082 -287.99371338]
[125.54203796 -273.41735840]
[136.41365051 -263.23532104]
[140.75796509 -248.88322449]
[137.31237793 -234.18647766]
[126.90476990 -223.11495972]
[112.25726318 -218.71064758]
[108.71759033 -204.13427734]
[105.17792511 -189.55789185]
[101.63825226 -174.98152161]
[99.85578156 -160.08779907]
[99.85578156 -145.08779907]
[107.59308624 -132.36053467]
[99.85578156 -118.56035614]
[99.85578156 -103.56035614]
[99.85578156 -88.56035614]
[99.85578156 -73.56035614]
[116.73127747 -67.28483582]
[129.93214417 -54.99151230]
[137.41987610 -38.54313660]
[138.02455139 -20.44676781]
[131.62756348 -3.47167253]
[119.18375397 9.77447033]
[102.57897186 17.24613953]
[103.47179413 32.21954727]
[104.36460876 47.19295120]
[105.25742340 62.16635513]
[119.32344818 67.05110931]
[130.45307922 76.94277954]
[136.95504761 90.33823395]
[137.84132385 105.20189667]
[132.97721863 119.27507019]
[123.10188293 130.41920471]
[109.71598053 136.94082642]
[110.60879517 151.91423035]
[111.50161743 166.88763428]
[120.04660034 180.20280457]
[113.08055878 193.36805725]
[121.62554169 206.68322754]
[114.65950012 219.84846497]
[115.55231476 234.82186890]
[124.09729767 248.13703918]
[117.13125610 261.30227661]
[118.02407074 276.27569580]
[118.91688538 291.24908447]
[121.25237274 306.06616211]
[125.00867462 320.58822632]
[128.76496887 335.11029053]
[132.52127075 349.63232422]
[136.27757263 364.15438843]
[151.18717957 362.32171631]
[166.20845032 362.45086670]
[181.08433533 364.53964233]
[195.56030273 368.55230713]
[209.38864136 374.42019653]
[222.33273315 382.04287720]
[234.17109680 391.28994751]
[244.70115662 402.00317383]
[253.74272156 413.99920654]
[261.14108276 427.07281494]
[266.76965332 441.00027466]
[270.53210449 455.54327393]
[272.36407471 470.45297241]
[272.23419189 485.47424316]
[270.14471436 500.35003662]
[266.13134766 514.82580566]
[260.26281738 528.65386963]
[252.63952637 541.59759521]
[243.39189148 553.43548584]
[232.67817688 563.96502686]
[220.68170166 573.00604248]
[207.60774231 580.40380859]
[193.68000793 586.03167725]
[179.13682556 589.79345703]
[164.22705078 591.62469482]
[149.20579529 591.49414062]
[134.33010864 589.40393066]
[119.85452271 585.38989258]
[106.02674103 579.52069092]
[93.08336639 571.89678955]
[81.24588776 562.64855957]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 179]
[16 178]
[17 177]
[18 176]
[19 175]
[33 174]
[34 173]
[35 172]
[37 170]
[38 169]
[40 167]
[42 165]
[43 164]
[44 163]
[51 156]
[52 155]
[53 154]
[54 153]
[65 146]
[66 145]
[67 144]
[68 143]
[70 141]
[71 140]
[88 139]
[89 138]
[90 137]
[91 136]
[96 131]
[97 130]
[98 129]
[99 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
