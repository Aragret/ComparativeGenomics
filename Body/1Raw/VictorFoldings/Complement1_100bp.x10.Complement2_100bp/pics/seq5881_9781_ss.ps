%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[106.46664429 535.37609863]
[97.45932770 547.42218018]
[86.44570160 557.66619873]
[73.77982330 565.77880859]
[59.86883163 571.49932861]
[45.15991974 574.64379883]
[30.12591171 575.11114502]
[15.25009155 572.88635254]
[1.01065540 568.04089355]
[-12.13465881 560.73059082]
[-23.76328278 551.19042969]
[-33.50140381 539.72705078]
[-41.03598404 526.70898438]
[-46.12481689 512.55474854]
[-48.60431671 497.71923828]
[-48.39477921 482.67941284]
[-45.50293732 467.91876221]
[-40.02175140 453.91174316]
[-32.12742233 441.10864258]
[-22.07372093 429.92102051]
[-10.18382931 420.70852661]
[3.16004181 413.76727295]
[17.52894020 409.32043457]
[32.46096802 407.51092529]
[47.47612000 408.39691162]
[51.01579285 393.82052612]
[54.55546570 379.24417114]
[50.04003906 365.05050659]
[60.81536102 353.46588135]
[64.35503387 338.88952637]
[59.83960724 324.69586182]
[70.61492920 313.11126709]
[74.15460205 298.53488159]
[71.45238495 293.12658691]
[71.90091705 286.37091064]
[76.07841492 280.14324951]
[75.63181305 265.14990234]
[75.18520355 250.15655518]
[74.73859406 235.16319275]
[74.29199219 220.16984558]
[66.82366180 233.17846680]
[54.75814438 242.09043884]
[40.12870407 245.40396118]
[25.40065193 242.56063843]
[13.05592346 234.03962708]
[5.17482376 221.27685547]
[3.08545613 206.42309570]
[7.13991547 191.98143005]
[16.65495491 180.38557434]
[30.02712059 173.58959961]
[45.00297165 172.73878479]
[59.05881119 177.97647095]
[69.82598114 188.42002869]
[75.49033356 202.31117249]
[77.93605804 187.51190186]
[80.38178253 172.71263123]
[82.82751465 157.91336060]
[73.97185516 145.99224854]
[76.24134827 130.94883728]
[88.80535126 121.74104309]
[91.25107574 106.94177246]
[93.58656311 92.12470245]
[95.81168365 77.29065704]
[98.03679657 62.45661545]
[100.26191711 47.62257004]
[102.48703003 32.78852463]
[103.82526398 17.84834099]
[104.27187347 2.85499120]
[104.71847534 -12.13835907]
[105.16508484 -27.13170815]
[105.61169434 -42.12505722]
[93.97975922 -32.65414810]
[79.04438019 -34.04497910]
[69.36121368 -45.50082016]
[70.47721863 -60.45924759]
[81.75309753 -70.35139465]
[96.72951508 -69.51058197]
[106.82697296 -58.41937256]
[108.60943604 -73.31308746]
[110.39190674 -88.20681000]
[112.17436981 -103.10052490]
[113.95683289 -117.99423981]
[100.73144531 -110.91687775]
[86.89260101 -116.70362091]
[82.64178467 -131.08869934]
[91.11253357 -143.46797180]
[106.06053162 -144.71589661]
[116.46614838 -133.91412354]
[119.35142517 -148.63400269]
[122.23669434 -163.35389709]
[125.12196350 -178.07379150]
[118.75160980 -195.35093689]
[130.79280090 -208.11717224]
[133.45858765 -222.87840271]
[135.24105835 -237.77210999]
[136.13386536 -252.74551392]
[137.02668762 -267.71893311]
[137.91950989 -282.69232178]
[138.81231689 -297.66574097]
[124.89211273 -303.66604614]
[113.86575317 -314.06774902]
[107.06472778 -327.61474609]
[105.31029510 -342.67123413]
[108.81430054 -357.41903687]
[117.15363312 -370.07730103]
[129.32127380 -379.11746216]
[143.84791565 -383.44787598]
[158.97940063 -382.54562378]
[172.88851929 -376.51968384]
[183.89569092 -366.09768677]
[190.67173767 -352.53814697]
[192.39842224 -337.47845459]
[188.86724854 -322.73715210]
[180.50459290 -310.09426880]
[168.32032776 -301.07656860]
[153.78572083 -296.77291870]
[152.89291382 -281.79949951]
[152.00009155 -266.82611084]
[151.10726929 -251.85270691]
[150.21446228 -236.87930298]
[160.74403381 -247.56236267]
[175.52268982 -250.12973022]
[189.03836060 -243.62382507]
[196.25001526 -230.47117615]
[194.46789551 -215.57742310]
[184.35670471 -204.49754333]
[169.68763733 -201.36407471]
[155.93191528 -207.34571838]
[148.21980286 -220.21260071]
[145.55401611 -205.45138550]
[152.19134521 -195.33840942]
[150.09124756 -183.01878357]
[139.84185791 -175.18852234]
[136.95658875 -160.46862793]
[134.07131958 -145.74873352]
[131.18603516 -131.02883911]
[128.85055542 -116.21177673]
[127.06808472 -101.31806183]
[125.28562164 -86.42433929]
[123.50315857 -71.53062439]
[121.72068787 -56.63690567]
[120.60504150 -41.67845154]
[120.15843201 -26.68510246]
[119.71183014 -11.69175243]
[119.26522064 3.30159712]
[118.81861877 18.29494667]
[129.02545166 7.30310631]
[143.72111511 4.29686689]
[157.42448425 10.39748287]
[165.02455139 23.32957458]
[163.68667603 38.26979065]
[153.90985107 49.64580154]
[139.34059143 53.21463776]
[125.41286469 47.64520645]
[117.32107544 35.01364517]
[115.09596252 49.84768677]
[112.87084198 64.68173218]
[110.64572906 79.51577759]
[108.42060852 94.34981537]
[110.43428040 102.15479279]
[106.05034637 109.38749695]
[103.60462189 124.18676758]
[112.53814697 136.94725037]
[109.84700775 151.92097473]
[97.62678528 160.35908508]
[95.18105316 175.15835571]
[92.73532867 189.95762634]
[90.28960419 204.75689697]
[89.28533936 219.72323608]
[89.73194885 234.71659851]
[90.17855072 249.70994568]
[90.62516022 264.70327759]
[91.07176208 279.69665527]
[97.65109253 266.21655273]
[107.69034576 255.07145691]
[120.41211700 247.12435913]
[134.83129883 242.99066162]
[149.83129883 242.99046326]
[164.25057983 247.12377930]
[176.97256470 255.07054138]
[187.01210022 266.21539307]
[193.59178162 279.69528198]
[196.20208740 294.46643066]
[194.64089966 309.38494873]
[189.02908325 323.29565430]
[179.80122375 335.12133789]
[167.67187500 343.94622803]
[153.58030701 349.08700562]
[138.61770630 350.14556885]
[123.94272614 347.03994751]
[110.69174194 340.01062012]
[99.89086914 329.60189819]
[92.37648010 316.61984253]
[88.73097992 302.07455444]
[85.19130707 316.65090942]
[89.45355225 331.88717651]
[78.93141174 342.42919922]
[75.39173889 357.00555420]
[79.65398407 372.24182129]
[69.13184357 382.78384399]
[65.59217072 397.36019897]
[62.05249405 411.93658447]
[75.80172729 418.03561401]
[88.24086761 426.49185181]
[98.97003174 437.03341675]
[107.64433289 449.32147217]
[113.98491669 462.96099854]
[117.78797913 477.51354980]
[118.93125153 492.51129150]
[117.37798309 507.47216797]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 202]
[26 201]
[27 200]
[29 198]
[30 197]
[32 195]
[33 194]
[36 173]
[37 172]
[38 171]
[39 170]
[40 169]
[54 168]
[55 167]
[56 166]
[57 165]
[60 162]
[61 161]
[62 159]
[63 158]
[64 157]
[65 156]
[66 155]
[67 146]
[68 145]
[69 144]
[70 143]
[71 142]
[78 141]
[79 140]
[80 139]
[81 138]
[82 137]
[88 136]
[89 135]
[90 134]
[91 133]
[93 130]
[94 129]
[95 120]
[96 119]
[97 118]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
