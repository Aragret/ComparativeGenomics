%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[10.94405651 295.89413452]
[9.10348606 310.78808594]
[6.14177036 325.50015259]
[2.07587361 339.94613647]
[-3.07091522 354.04321289]
[-9.26911545 367.71069336]
[-16.48322296 380.87023926]
[-24.67191696 393.44653320]
[-33.78829193 405.36746216]
[-43.78012848 416.56481934]
[-54.59019470 426.97442627]
[-66.15657043 436.53665161]
[-78.41300964 445.19674683]
[-91.28929901 452.90509033]
[-104.71168518 459.61755371]
[-118.60328674 465.29565430]
[-132.88453674 469.90686035]
[-147.47361755 473.42480469]
[-162.28698730 475.82931519]
[-177.23977661 477.10659790]
[-192.24633789 477.24935913]
[-207.22071838 476.25680542]
[-222.07714844 474.13455200]
[-236.73052979 470.89483643]
[-251.09692383 466.55615234]
[-265.09405518 461.14337158]
[-278.64169312 454.68750000]
[-291.66232300 447.22555542]
[-304.08129883 438.80020142]
[-315.82751465 429.45974731]
[-326.83367920 419.25772095]
[-337.03674316 408.25250244]
[-346.37826538 396.50714111]
[-354.80474854 384.08892822]
[-362.26791382 371.06903076]
[-368.72503662 357.52194214]
[-374.13909912 343.52532959]
[-378.47909546 329.15933228]
[-381.72018433 314.50625610]
[-383.84381104 299.65002441]
[-384.83776855 284.67572021]
[-384.69638062 269.66915894]
[-383.42047119 254.71624756]
[-381.01733398 239.90266418]
[-377.50073242 225.31324768]
[-372.89083862 211.03157043]
[-367.21401978 197.13945007]
[-360.50280762 183.71644592]
[-352.79565430 170.83944702]
[-344.13668823 158.58221436]
[-334.57553101 147.01495361]
[-324.16693115 136.20391846]
[-312.97048950 126.21105194]
[-301.05038452 117.09357452]
[-288.47485352 108.90371704]
[-275.31597900 101.68839264]
[-261.64907837 95.48893738]
[-247.55245972 90.34084320]
[-233.10687256 86.27361298]
[-218.39505005 83.31053925]
[-203.50128174 81.46859741]
[-188.51084900 80.75833130]
[-173.50964355 81.18380737]
[-158.58357239 82.74260712]
[-143.81814575 85.42578125]
[-129.29792786 89.21796417]
[-115.10609436 94.09744263]
[-101.32393646 100.03627014]
[-88.03040314 107.00041199]
[-75.30163574 114.94999695]
[-63.21053696 123.83946991]
[-51.82637787 133.61793518]
[-41.21435547 144.22935486]
[-31.43526268 155.61297607]
[-22.54511070 167.70356750]
[-9.82307339 159.75688171]
[2.89896274 151.81021118]
[15.62099934 143.86352539]
[28.34303474 135.91683960]
[35.03842926 122.61191559]
[50.84190750 121.86315155]
[63.56394577 113.91646576]
[76.28598022 105.96978760]
[89.00801849 98.02310181]
[101.67053986 89.98192596]
[114.27285767 81.84671021]
[126.87516785 73.71149445]
[139.29266357 65.29687500]
[151.51914978 56.60705185]
[163.74563599 47.91722870]
[155.87107849 35.14406586]
[148.84880066 21.88323212]
[142.70884705 8.19150734]
[137.47753906 -5.87247467]
[133.17724609 -20.24848938]
[129.82641602 -34.87497711]
[127.43936920 -49.68930435]
[126.02635193 -64.62803650]
[125.59339905 -79.62719727]
[126.14236450 -94.62255859]
[127.67090607 -109.54991150]
[130.17247009 -124.34532928]
[133.63635254 -138.94544983]
[138.04771423 -153.28778076]
[143.38768005 -167.31086731]
[149.63336182 -180.95468140]
[156.75801086 -194.16079712]
[164.73114014 -206.87266541]
[173.51860046 -219.03584290]
[183.08274841 -230.59825134]
[193.38264465 -241.51037598]
[204.37417603 -251.72547913]
[216.01028442 -261.19982910]
[228.24111938 -269.89285278]
[241.01432800 -277.76733398]
[254.27520752 -284.78955078]
[267.96697998 -290.92941284]
[282.03097534 -296.16064453]
[296.40701294 -300.46084595]
[311.03353882 -303.81158447]
[325.84786987 -306.19854736]
[340.78659058 -307.61148071]
[355.78576660 -308.04434204]
[370.78112793 -307.49530029]
[385.70846558 -305.96667480]
[400.50387573 -303.46499634]
[415.10397339 -300.00103760]
[429.44628906 -295.58959961]
[443.46932983 -290.24954224]
[457.11312866 -284.00378418]
[470.31918335 -276.87905884]
[483.03100586 -268.90585327]
[495.19412231 -260.11831665]
[506.75646973 -250.55410767]
[517.66851807 -240.25415039]
[527.88360596 -229.26255798]
[537.35784912 -217.62640381]
[546.05084229 -205.39550781]
[553.92523193 -192.62225342]
[560.94738770 -179.36132812]
[567.08715820 -165.66954041]
[572.31829834 -151.60548401]
[576.61840820 -137.22943115]
[579.96905518 -122.60289764]
[582.35595703 -107.78854370]
[583.76879883 -92.84979248]
[584.20153809 -77.85063171]
[583.65240479 -62.85527420]
[582.12371826 -47.92794037]
[579.62194824 -33.13255310]
[576.15789795 -18.53246498]
[571.74639893 -4.19019699]
[566.40625000 9.83283329]
[560.16040039 23.47657776]
[553.03558350 36.68260956]
[545.06231689 49.39437866]
[536.27471924 61.55745316]
[526.71044922 73.11974335]
[516.41040039 84.03174591]
[505.41876221 94.24672699]
[493.78253174 103.72094727]
[481.55160522 112.41382599]
[468.77828979 120.28815460]
[455.51733398 127.31020355]
[441.82550049 133.44990540]
[427.76144409 138.68098450]
[413.38534546 142.98100281]
[398.75878906 146.33158875]
[383.94442749 148.71836853]
[369.00567627 150.13111877]
[354.00650024 150.56381226]
[339.01113892 150.01457214]
[324.08383179 148.48576355]
[309.28845215 145.98393250]
[294.68838501 142.51979065]
[280.34613037 138.10818481]
[266.32315063 132.76797485]
[252.67942810 126.52205658]
[239.47344971 119.39716339]
[226.76171875 111.42381287]
[214.59869385 102.63614655]
[203.03646851 93.07178497]
[192.12452698 82.77169800]
[181.90960693 71.77998352]
[172.43545532 60.14371490]
[160.20896912 68.83354187]
[147.98248291 77.52336121]
[147.03732300 80.92027283]
[144.39987183 84.02816010]
[140.22392273 86.05661011]
[135.01037598 86.31380463]
[122.40807343 94.44902039]
[109.80575562 102.58423615]
[105.27984619 109.25421906]
[96.95470428 110.74514008]
[84.23266602 118.69181824]
[71.51062775 126.63850403]
[58.78859329 134.58518982]
[51.18323135 148.45851135]
[36.28971863 148.63887024]
[23.56768417 156.58555603]
[10.84564686 164.53224182]
[-1.87638915 172.47892761]
[-14.59842587 180.42561340]
[-7.63305235 193.71850586]
[-1.69295824 207.50010681]
[3.18783164 221.69148254]
[6.98136044 236.21134949]
[9.66589928 250.97653198]
[11.22607040 265.90246582]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[75 204]
[76 203]
[77 202]
[78 201]
[79 200]
[81 198]
[82 197]
[83 196]
[84 195]
[85 193]
[86 192]
[87 191]
[88 187]
[89 186]
[90 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
