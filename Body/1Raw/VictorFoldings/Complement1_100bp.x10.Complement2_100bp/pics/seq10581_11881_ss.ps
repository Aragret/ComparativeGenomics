%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCGxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[22.73945999 427.37829590]
[16.21858025 440.89608765]
[8.61756420 453.83740234]
[-0.01300425 466.11608887]
[-9.61568832 477.65045166]
[-20.12658501 488.36370850]
[-31.47574043 498.18457031]
[-43.58763123 507.04766846]
[-56.38165283 514.89404297]
[-69.77265930 521.67150879]
[-83.67153931 527.33489990]
[-97.98578644 531.84655762]
[-112.62015533 535.17645264]
[-127.47724152 537.30242920]
[-142.45819092 538.21026611]
[-157.46327209 537.89404297]
[-172.39266968 536.35583496]
[-187.14698792 533.60577393]
[-201.62806702 529.66229248]
[-215.73953247 524.55157471]
[-229.38746643 518.30767822]
[-242.48104858 510.97207642]
[-254.93313599 502.59362793]
[-266.66085815 493.22808838]
[-277.58618164 482.93777466]
[-287.63638306 471.79119873]
[-296.74459839 459.86251831]
[-304.85018921 447.23114014]
[-311.89923096 433.98107910]
[-317.84478760 420.20056152]
[-322.64733887 405.98126221]
[-326.27487183 391.41781616]
[-328.70330811 376.60717773]
[-329.91641235 361.64785767]
[-329.90615845 346.63943481]
[-328.67260742 331.68179321]
[-326.22396851 316.87445068]
[-322.57653809 302.31597900]
[-317.75457764 288.10327148]
[-311.79016113 274.33087158]
[-304.72305298 261.09045410]
[-296.60018921 248.47015381]
[-287.47570801 236.55392456]
[-277.41027832 225.42108154]
[-266.47091675 215.14572144]
[-254.73040771 205.79621887]
[-242.26689148 197.43478394]
[-229.16329956 190.11708069]
[-215.50685120 183.89179993]
[-201.38842773 178.80036926]
[-186.90197754 174.87666321]
[-172.14390564 172.14680481]
[-157.21241760 170.62896729]
[-142.20690918 170.33323669]
[-127.22722626 171.26158142]
[-112.37305450 173.40783691]
[-97.74325562 176.75770569]
[-83.43518066 181.28890991]
[-69.54405212 186.97128296]
[-56.16231537 193.76701355]
[-43.37902451 201.63087463]
[-31.27925301 210.51052856]
[-21.44867134 199.18093872]
[-11.61809063 187.85133362]
[-1.78751004 176.52174377]
[-16.29460335 180.33543396]
[-30.93273544 177.06051636]
[-42.43170547 167.42860413]
[-48.22262192 153.59150696]
[-47.01176834 138.64045715]
[-39.06966400 125.91555786]
[-26.17058563 118.25959778]
[-11.19622612 117.38291931]
[2.50810575 123.48138428]
[11.88082790 135.19258118]
[14.82804966 149.90019226]
[10.69134331 164.31852722]
[22.23764420 154.74340820]
[33.78394699 145.16828918]
[45.33024979 135.59317017]
[56.87654877 126.01804352]
[68.42285156 116.44292450]
[73.28067780 102.36277008]
[88.84244537 99.50936127]
[100.31714630 89.84854889]
[111.71960449 80.10258484]
[123.12207031 70.35662079]
[124.90546417 57.58233643]
[134.60324097 49.69964218]
[146.67254639 50.51110077]
[158.14724731 40.85028839]
[169.54971313 31.10432243]
[180.95217896 21.35835648]
[192.35462952 11.61239147]
[194.13803101 -1.16189122]
[203.83581543 -9.04458523]
[215.90510559 -8.23312950]
[227.45141602 -17.80824852]
[238.99771118 -27.38336945]
[230.44494629 -39.71753311]
[222.98416138 -52.74128342]
[216.67057800 -66.35819244]
[211.55096436 -80.46743774]
[207.66319275 -94.96456909]
[205.03608704 -109.74224854]
[203.68907166 -124.69105530]
[203.63211060 -139.70033264]
[204.86566162 -154.65893555]
[207.38055420 -169.45611572]
[211.15818787 -183.98233032]
[216.17060852 -198.13002014]
[222.38066101 -211.79444885]
[229.74241638 -224.87443542]
[238.20133972 -237.27314758]
[247.69480896 -248.89878845]
[258.15252686 -259.66528320]
[269.49710083 -269.49291992]
[281.64450073 -278.30892944]
[294.50482178 -286.04803467]
[307.98281860 -292.65295410]
[321.97872925 -298.07476807]
[336.38888550 -302.27337646]
[351.10665894 -305.21765137]
[366.02304077 -306.88580322]
[381.02761841 -307.26547241]
[396.00930786 -306.35385132]
[410.85714722 -304.15771484]
[425.46121216 -300.69332886]
[439.71343994 -295.98629761]
[453.50823975 -290.07147217]
[466.74349976 -282.99270630]
[479.32122803 -274.80233765]
[491.14831543 -265.56103516]
[502.13717651 -255.33723450]
[512.20648193 -244.20661926]
[521.28167725 -232.25160217]
[529.29553223 -219.56066895]
[536.18872070 -206.22781372]
[541.91027832 -192.35173035]
[546.41772461 -178.03517151]
[549.67779541 -163.38410950]
[551.66632080 -148.50703430]
[552.36853027 -133.51409912]
[551.77929688 -118.51628876]
[549.90295410 -103.62465668]
[546.75335693 -88.94945526]
[542.35388184 -74.59932709]
[536.73706055 -60.68053436]
[529.94451904 -47.29611588]
[522.02648926 -34.54517365]
[513.04168701 -22.52210617]
[503.05651855 -11.31593418]
[492.14498901 -1.00962460]
[480.38784790 8.32051659]
[467.87219238 16.60541153]
[454.69064331 23.78372002]
[440.94079590 29.80229759]
[426.72445679 34.61658096]
[412.14691162 38.19092941]
[397.31600952 40.49887466]
[382.34164429 41.52333450]
[367.33462524 41.25672150]
[352.40609741 39.70101166]
[337.66656494 36.86771774]
[323.22515869 32.77782440]
[309.18881226 27.46160507]
[295.66143799 20.95842361]
[282.74316406 13.31642723]
[270.52969360 4.59219599]
[259.11138916 -5.14967728]
[248.57283020 -15.83706665]
[237.02653503 -6.26194715]
[225.48023987 3.31317234]
[220.27832031 20.07345581]
[202.10060120 23.01485443]
[190.69813538 32.76081848]
[179.29566956 42.50678635]
[167.89321899 52.25275040]
[164.85104370 58.98825455]
[156.24766541 62.05739975]
[151.04576111 78.81768036]
[132.86802673 81.75907898]
[121.46556854 91.50505066]
[110.06311035 101.25101471]
[106.46888733 108.46586609]
[98.41756439 111.05566406]
[92.73387146 125.82069397]
[77.99797058 127.98922729]
[66.45166779 137.56434631]
[54.90536880 147.13946533]
[43.35906601 156.71458435]
[31.81276512 166.28970337]
[20.26646233 175.86482239]
[9.54208279 186.35232544]
[-0.28849772 197.68191528]
[-10.11907864 209.01152039]
[-19.94965935 220.34111023]
[-9.45291710 231.06823730]
[0.13453113 242.61524963]
[8.74888134 254.90531921]
[16.33280563 267.85665894]
[22.83583450 281.38305664]
[28.21468735 295.39450073]
[32.43357468 309.79776001]
[35.46441269 324.49694824]
[37.28703690 339.39431763]
[37.88931274 354.39062500]
[37.26723862 369.38616943]
[35.42494965 384.28109741]
[32.37470627 398.97628784]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 197]
[63 196]
[64 195]
[65 194]
[77 193]
[78 192]
[79 191]
[80 190]
[81 189]
[82 188]
[84 186]
[85 184]
[86 183]
[87 182]
[90 180]
[91 178]
[92 177]
[93 176]
[94 175]
[97 173]
[98 172]
[99 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
