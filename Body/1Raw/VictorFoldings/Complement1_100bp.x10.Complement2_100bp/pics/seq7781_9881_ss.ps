%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[62.86015320 439.59600830]
[55.49568558 452.67416382]
[47.04863358 465.08065796]
[37.57985687 476.72610474]
[27.15758705 487.52655029]
[15.85691071 497.40423584]
[3.75925303 506.28796387]
[-9.04821968 514.11370850]
[-22.47323036 520.82513428]
[-36.41904449 526.37384033]
[-50.78518677 530.71984863]
[-65.46814728 533.83184814]
[-80.36212158 535.68743896]
[-95.35981750 536.27325439]
[-110.35314941 535.58502197]
[-125.23410797 533.62774658]
[-139.89546204 530.41552734]
[-154.23159790 525.97149658]
[-168.13917542 520.32763672]
[-181.51803589 513.52471924]
[-194.27175903 505.61163330]
[-206.30845642 496.64550781]
[-217.54139709 486.69085693]
[-227.88964844 475.81945801]
[-237.27867126 464.10961914]
[-245.64077759 451.64572144]
[-252.91574097 438.51754761]
[-259.05114746 424.81970215]
[-264.00277710 410.65090942]
[-267.73495483 396.11322021]
[-270.22082520 381.31137085]
[-271.44241333 366.35205078]
[-271.39096069 351.34298706]
[-270.06683350 336.39239502]
[-267.47955322 321.60794067]
[-263.64779663 307.09619141]
[-258.59912109 292.96166992]
[-252.36994934 279.30621338]
[-245.00514221 266.22824097]
[-236.55776978 253.82196045]
[-227.08869934 242.17677307]
[-216.66613770 231.37657166]
[-205.36520386 221.49917603]
[-193.26731873 212.61576843]
[-180.45965576 204.79034424]
[-167.03446960 198.07928467]
[-153.08850098 192.53094482]
[-138.72225952 188.18530273]
[-124.03921509 185.07368469]
[-109.14518738 183.21847534]
[-94.14748383 182.63307190]
[-79.15415955 183.32167053]
[-64.27325439 185.27934265]
[-49.61197662 188.49194336]
[-35.27597046 192.93635559]
[-21.36852646 198.58053589]
[-7.98984718 205.38381958]
[4.76366997 213.29721069]
[13.72436619 201.26783752]
[22.68506241 189.23844910]
[31.64575768 177.20907593]
[40.60645294 165.17970276]
[42.08125687 157.93768311]
[49.79119873 153.03926086]
[58.93000031 141.14462280]
[68.06880188 129.24998474]
[77.20760345 117.35535431]
[71.58803558 103.66906738]
[73.54639435 89.00417328]
[82.56034088 77.27204895]
[96.22572327 71.60182190]
[110.89775848 73.50584412]
[120.03656006 61.61120987]
[129.17536926 49.71657562]
[138.31416321 37.82194519]
[147.45297241 25.92731094]
[133.43969727 31.27785873]
[118.45749664 30.54748535]
[105.03111267 23.85927200]
[95.42313385 12.34029961]
[91.25267029 -2.06828356]
[93.22252655 -16.93837738]
[101.00074005 -29.76410866]
[113.27654266 -38.38411713]
[127.98125458 -41.34578323]
[142.63687134 -38.15000916]
[154.77366638 -29.33534050]
[162.34635925 -16.38720512]
[164.07884216 -1.48759055]
[159.67834473 12.85410786]
[170.93443298 2.93945694]
[182.19053650 -6.97519445]
[193.44662476 -16.88984489]
[184.40708923 -28.86915779]
[176.29940796 -41.49781799]
[169.17004395 -54.70348358]
[163.05984497 -68.41051483]
[158.00378418 -82.54040527]
[154.03083801 -97.01220703]
[151.16377258 -111.74303436]
[149.41899109 -126.64850616]
[148.80648804 -141.64324951]
[149.32978821 -156.64137268]
[150.98588562 -171.55694580]
[153.76528931 -186.30456543]
[157.65208435 -200.79974365]
[162.62400818 -214.95945740]
[168.65257263 -228.70259094]
[175.70326233 -241.95043945]
[183.73568726 -254.62709045]
[192.70382690 -266.65997314]
[202.55630493 -277.98010254]
[213.23670959 -288.52270508]
[224.68385315 -298.22735596]
[236.83216858 -307.03848267]
[249.61207581 -314.90560913]
[262.95034790 -321.78366089]
[276.77062988 -327.63323975]
[290.99371338 -332.42086792]
[305.53811646 -336.11907959]
[320.32058716 -338.70675659]
[335.25643921 -340.16900635]
[350.26010132 -340.49749756]
[365.24560547 -339.69030762]
[380.12716675 -337.75213623]
[394.81951904 -334.69400024]
[409.23849487 -330.53344727]
[423.30154419 -325.29434204]
[436.92807007 -319.00662231]
[450.04003906 -311.70639038]
[462.56234741 -303.43539429]
[474.42324829 -294.24105835]
[485.55484009 -284.17599487]
[495.89334106 -273.29788208]
[505.37951660 -261.66906738]
[513.95904541 -249.35609436]
[521.58276367 -236.42953491]
[528.20709229 -222.96342468]
[533.79394531 -209.03488159]
[538.31140137 -194.72370911]
[541.73364258 -180.11186218]
[544.04089355 -165.28305054]
[545.22015381 -150.32220459]
[545.26446533 -135.31503296]
[544.17376709 -120.34747314]
[541.95410156 -105.50527954]
[538.61834717 -90.87345886]
[534.18554688 -76.53582764]
[528.68115234 -62.57450867]
[522.13659668 -49.06946945]
[514.58935547 -36.09806824]
[506.08276367 -23.73460579]
[496.66549683 -12.04989815]
[486.39151001 -1.11087656]
[475.31961060 9.01980114]
[463.51324463 18.28410721]
[451.04006958 26.62897491]
[437.97146606 34.00660706]
[424.38235474 40.37474060]
[410.35052490 45.69690323]
[395.95639038 49.94260788]
[381.28237915 53.08753586]
[366.41253662 55.11367035]
[351.43203735 56.00941086]
[336.42672729 55.76962280]
[321.48248291 54.39568329]
[306.68499756 51.89545441]
[292.11895752 48.28326797]
[277.86779785 43.57980728]
[264.01321411 37.81201172]
[250.63450623 31.01292801]
[237.80831909 23.22149467]
[225.60813904 14.48234081]
[214.10382080 4.84552670]
[203.36128235 -5.63374996]
[192.10519409 4.28090143]
[180.84909058 14.19555283]
[169.59300232 24.11020470]
[159.34761047 35.06611252]
[150.20880127 46.96074677]
[141.06999207 58.85537720]
[131.93119812 70.75001526]
[122.79239655 82.64464569]
[128.41195679 96.33093262]
[126.45360565 110.99582672]
[117.43965912 122.72795105]
[103.77427673 128.39817810]
[89.10224152 126.49415588]
[79.96343994 138.38879395]
[70.82463074 150.28341675]
[61.68583298 162.17805481]
[52.63582993 174.14039612]
[43.67513657 186.16976929]
[34.71443939 198.19914246]
[25.75374413 210.22853088]
[16.79304695 222.25790405]
[28.02624893 232.21224976]
[38.37478638 243.08338928]
[47.76409912 254.79298401]
[56.12653351 267.25668335]
[63.40184021 280.38464355]
[69.53759766 294.08233643]
[74.48959351 308.25100708]
[78.22216034 322.78860474]
[80.70838928 337.59039307]
[81.93037415 352.54968262]
[81.87930298 367.55871582]
[80.55555725 382.50933838]
[77.96866608 397.29385376]
[74.13726807 411.80572510]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 196]
[59 195]
[60 194]
[61 193]
[62 192]
[64 191]
[65 190]
[66 189]
[67 188]
[72 183]
[73 182]
[74 181]
[75 180]
[76 179]
[90 178]
[91 177]
[92 176]
[93 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
