%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[104.50514984 639.81677246]
[91.91337585 631.65313721]
[79.94350433 622.60217285]
[68.65793610 612.71112061]
[58.11550903 602.03143311]
[48.37118912 590.61889648]
[39.47577667 578.53302002]
[31.47565079 565.83673096]
[24.41251755 552.59625244]
[18.32320595 538.88061523]
[13.23945999 524.76135254]
[9.18778419 510.31210327]
[6.18930387 495.60812378]
[4.25965071 480.72610474]
[3.40888572 465.74365234]
[3.64144421 450.73886108]
[4.95611382 435.78997803]
[7.34604025 420.97491455]
[10.79876423 406.37094116]
[15.29628277 392.05416870]
[20.81514931 378.09924316]
[27.32659149 364.57891846]
[34.79665756 351.56369019]
[43.18640518 339.12142944]
[52.45209503 327.31698608]
[62.54541397 316.21191406]
[73.41374207 305.86410522]
[85.00041962 296.32751465]
[97.24504089 287.65185547]
[110.08375549 279.88235474]
[123.44963837 273.05953979]
[137.27299500 267.21893311]
[132.44700623 253.01649475]
[127.62100220 238.81404114]
[122.79500580 224.61157227]
[117.96900940 210.40911865]
[113.14300537 196.20666504]
[108.31700897 182.00421143]
[103.49101257 167.80175781]
[100.16809082 182.42906189]
[91.24835205 194.48884583]
[78.23494720 201.94882202]
[63.32084656 203.55184937]
[49.01934814 199.02778625]
[37.74050140 189.13902283]
[31.38499451 175.55198669]
[31.02383614 160.55633545]
[36.71789169 146.67909241]
[47.50761032 136.25883484]
[61.57473755 131.05152893]
[76.54871368 131.93472290]
[89.90616608 138.75958252]
[99.39688110 150.37745667]
[97.39286804 135.51191711]
[95.38885498 120.64639282]
[93.38484192 105.78086853]
[91.12640381 103.73416901]
[89.56276703 100.82048035]
[89.01647186 97.29557037]
[89.71107483 93.53076172]
[91.73139191 89.97389221]
[90.61574554 75.01544189]
[89.50009155 60.05698776]
[73.80171204 50.98403168]
[66.75399780 34.44893646]
[71.00521088 17.14639282]
[84.66983032 5.95935488]
[83.10930634 -8.95924950]
[81.54878998 -23.87785530]
[79.98826599 -38.79645920]
[78.42774200 -53.71506500]
[63.41527939 -53.64704132]
[48.47064972 -55.07413864]
[33.74237823 -57.98216629]
[19.37684441 -62.34222412]
[5.51682806 -68.11097717]
[-7.69992304 -75.23110199]
[-20.14205170 -83.63182068]
[-31.68589783 -93.22964478]
[-42.21673203 -103.92918396]
[-51.62988663 -115.62409973]
[-59.83181381 -128.19816589]
[-66.74099731 -141.52639771]
[-72.28875732 -155.47633362]
[-76.41996765 -169.90934753]
[-79.09356689 -184.68197632]
[-80.28298187 -199.64739990]
[-79.97639465 -214.65687561]
[-78.17684174 -229.56124878]
[-74.90222168 -244.21237183]
[-70.18507385 -258.46463013]
[-64.07228088 -272.17639160]
[-56.62459183 -285.21136475]
[-47.91603088 -297.44000244]
[-38.03315353 -308.74078369]
[-27.07418060 -319.00137329]
[-15.14802837 -328.11978149]
[-2.37322760 -336.00540161]
[11.12325573 -342.57986450]
[25.20728302 -347.77783203]
[39.73888016 -351.54760742]
[54.57361603 -353.85177612]
[69.56405640 -354.66738892]
[84.56121826 -353.98638916]
[99.41604614 -351.81552124]
[113.98090363 -348.17633057]
[128.11102295 -343.10504150]
[141.66600037 -336.65200806]
[154.51107788 -328.88137817]
[166.51861572 -319.87042236]
[177.56925964 -309.70861816]
[187.55320740 -298.49703979]
[196.37120056 -286.34707642]
[203.93560791 -273.37951660]
[210.17126465 -259.72317505]
[215.01617432 -245.51383972]
[218.42219543 -230.89270020]
[220.35548401 -216.00508118]
[220.79681396 -200.99896240]
[219.74180603 -186.02345276]
[217.20094299 -171.22743225]
[213.19947815 -156.75790405]
[207.77717590 -142.75872803]
[200.98794556 -129.36898804]
[192.89923096 -116.72180176]
[183.59144592 -104.94284821]
[173.15710449 -94.14919281]
[161.69989014 -84.44811249]
[149.33367920 -75.93603516]
[136.18139648 -68.69754028]
[122.37372589 -62.80458069]
[108.04791260 -58.31572723]
[93.34634399 -55.27558899]
[94.90686798 -40.35698318]
[96.46739197 -25.43837738]
[98.02791595 -10.51977253]
[99.58843994 4.39883184]
[110.88333893 8.84860039]
[119.26411438 17.73091507]
[123.09568024 29.40225601]
[121.59259033 41.66684723]
[114.97917938 52.18974686]
[104.45854950 58.94134140]
[105.57419586 73.89979553]
[106.68984222 88.85824585]
[108.25036621 103.77684784]
[110.25437927 118.64237976]
[112.25839233 133.50790405]
[114.26240540 148.37344360]
[117.69346619 162.97575378]
[122.51947021 177.17820740]
[127.34546661 191.38067627]
[132.17146301 205.58312988]
[136.99746704 219.78558350]
[141.82345581 233.98803711]
[146.64945984 248.19049072]
[151.47544861 262.39294434]
[165.99543762 258.60244751]
[180.75108337 255.86958313]
[195.66546631 254.20857239]
[210.66082764 253.62808228]
[225.65898132 254.13114929]
[240.58174133 255.71514893]
[255.35130310 258.37179565]
[269.89065552 262.08728027]
[284.12402344 266.84219360]
[297.97717285 272.61178589]
[311.37786865 279.36593628]
[324.25628662 287.06948853]
[336.54525757 295.68218994]
[348.18072510 305.15921021]
[359.10198975 315.45114136]
[369.25216675 326.50427246]
[378.57827759 338.26101685]
[387.03176880 350.66006470]
[394.56851196 363.63677979]
[401.14923096 377.12350464]
[406.73962402 391.04992676]
[411.31054688 405.34344482]
[414.83816528 419.92950439]
[417.30407715 434.73211670]
[418.69543457 449.67407227]
[419.00497437 464.67745972]
[418.23107910 479.66409302]
[416.37780762 494.55581665]
[413.45483398 509.27496338]
[409.47732544 523.74487305]
[404.46609497 537.89001465]
[398.44723511 551.63665771]
[391.45214844 564.91320801]
[383.51724243 577.65039062]
[374.68395996 589.78179932]
[364.99832153 601.24414062]
[354.51083374 611.97778320]
[343.27618408 621.92663574]
[331.35290527 631.03887939]
[318.80319214 639.26702881]
[305.69244385 646.56817627]
[292.08905029 652.90423584]
[278.06393433 658.24212646]
[263.69018555 662.55413818]
[249.04278564 665.81774902]
[234.19805908 668.01586914]
[219.23341370 669.13708496]
[204.22686768 669.17559814]
[189.25666809 668.13116455]
[174.40086365 666.00921631]
[159.73689270 662.82086182]
[145.34121704 658.58264160]
[131.28887939 653.31671143]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 157]
[33 156]
[34 155]
[35 154]
[36 153]
[37 152]
[38 151]
[39 150]
[53 149]
[54 148]
[55 147]
[56 146]
[61 145]
[62 144]
[63 143]
[67 137]
[68 136]
[69 135]
[70 134]
[71 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
