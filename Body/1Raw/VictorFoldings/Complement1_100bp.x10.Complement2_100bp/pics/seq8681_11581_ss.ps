%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[87.47653961 466.65670776]
[78.82549286 478.93338013]
[68.75769043 490.07772827]
[57.41997147 499.92727661]
[44.97765732 508.33834839]
[31.61219788 515.18829346]
[17.51850319 520.37725830]
[2.90210056 523.82952881]
[-12.02386189 525.49475098]
[-27.04171944 525.34869385]
[-41.93246460 523.39343262]
[-56.47895050 519.65747070]
[-70.46904755 514.19537354]
[-83.69873047 507.08673096]
[-95.97507477 498.43524170]
[-107.11906433 488.36700439]
[-116.96817780 477.02893066]
[-125.37879181 464.58630371]
[-132.22824097 451.22058105]
[-137.41665649 437.12667847]
[-140.86837769 422.51016235]
[-142.53305054 407.58413696]
[-142.38641357 392.56628418]
[-140.43060303 377.67559814]
[-136.69413757 363.12927246]
[-131.23150635 349.13937378]
[-124.12236023 335.90994263]
[-115.47039032 323.63394165]
[-105.40176392 312.49032593]
[-94.06330109 302.64163208]
[-81.62036133 294.23147583]
[-68.25439453 287.38253784]
[-54.16030884 282.19464111]
[-39.54364777 278.74346924]
[-24.61755943 277.07934570]
[-9.59971428 277.22656250]
[5.29088640 279.18292236]
[19.83709145 282.91992188]
[25.29244995 268.94714355]
[30.74780655 254.97433472]
[36.20316315 241.00154114]
[41.65851974 227.02874756]
[47.11387634 213.05593872]
[52.56923294 199.08314514]
[46.37223053 185.58749390]
[51.70569229 171.33937073]
[65.90319824 164.93089294]
[71.35855103 150.95809937]
[66.79040527 139.75726318]
[71.22100067 128.07165527]
[82.78514862 122.35909271]
[88.44792938 108.46907043]
[86.73600006 94.59243774]
[97.66204071 85.86814117]
[103.32482910 71.97811890]
[108.98761749 58.08808899]
[114.54683685 44.15629196]
[120.00219727 30.18349457]
[125.45755768 16.21069717]
[123.26909637 0.54157948]
[135.10533142 -8.50014496]
[140.56068420 -22.47294235]
[126.90907288 -28.69792366]
[113.62451172 -35.67197037]
[100.74806213 -43.37352753]
[88.31952667 -51.77878952]
[76.37731934 -60.86177444]
[64.95835876 -70.59441376]
[54.09793091 -80.94661713]
[43.82961273 -91.88638306]
[34.18513870 -103.37990570]
[25.19432259 -115.39165497]
[16.88495255 -127.88450623]
[9.28271294 -140.81983948]
[2.41110301 -154.15768433]
[-3.70863843 -167.85679626]
[-9.05759525 -181.87483215]
[-13.61923409 -196.16848755]
[-17.37945557 -210.69355774]
[-20.32663536 -225.40515137]
[-22.45166588 -240.25779724]
[-23.74797630 -255.20559692]
[-24.21156311 -270.20233154]
[-23.84099197 -285.20166016]
[-22.63740540 -300.15719604]
[-20.60452843 -315.02273560]
[-17.74864197 -329.75231934]
[-14.07857323 -344.30044556]
[-9.60566807 -358.62210083]
[-4.34374952 -372.67306519]
[1.69091618 -386.40985107]
[8.47967720 -399.79003906]
[16.00154877 -412.77227783]
[24.23328209 -425.31643677]
[33.14943314 -437.38369751]
[42.72243881 -448.93682861]
[52.92271805 -459.94006348]
[63.71873474 -470.35940552]
[75.07711792 -480.16268921]
[86.96276855 -489.31954956]
[99.33893585 -497.80172729]
[112.16737366 -505.58300781]
[125.40843201 -512.63928223]
[139.02117920 -518.94879150]
[152.96353149 -524.49206543]
[167.19241333 -529.25189209]
[181.66381836 -533.21362305]
[196.33303833 -536.36492920]
[211.15472412 -538.69616699]
[226.08305359 -540.20007324]
[241.07189941 -540.87207031]
[256.07492065 -540.70996094]
[271.04574585 -539.71429443]
[285.93811035 -537.88824463]
[300.70596313 -535.23730469]
[315.30368042 -531.76977539]
[329.68612671 -527.49633789]
[343.80883789 -522.43017578]
[357.62817383 -516.58697510]
[371.10140991 -509.98483276]
[384.18692017 -502.64407349]
[396.84423828 -494.58746338]
[409.03427124 -485.83987427]
[420.71929932 -476.42834473]
[431.86322021 -466.38195801]
[442.43161011 -455.73178101]
[452.39178467 -444.51074219]
[461.71295166 -432.75347900]
[470.36630249 -420.49639893]
[478.32507324 -407.77731323]
[485.56469727 -394.63558960]
[492.06280518 -381.11184692]
[497.79925537 -367.24786377]
[502.75637817 -353.08651733]
[506.91879272 -338.67156982]
[510.27368164 -324.04754639]
[512.81066895 -309.25970459]
[514.52191162 -294.35369873]
[515.40209961 -279.37564087]
[515.44848633 -264.37182617]
[514.66101074 -249.38859558]
[513.04205322 -234.47230530]
[510.59661865 -219.66903687]
[507.33227539 -205.02455139]
[503.25909424 -190.58410645]
[498.38970947 -176.39234924]
[492.73913574 -162.49314880]
[486.32482910 -148.92945862]
[479.16665649 -135.74319458]
[471.28671265 -122.97512817]
[462.70938110 -110.66472626]
[453.46112061 -98.85002899]
[443.57058716 -87.56756592]
[433.06829834 -76.85220337]
[421.98675537 -66.73706055]
[410.36016846 -57.25341034]
[398.22451782 -48.43056488]
[385.61727905 -40.29578781]
[372.57742310 -32.87423325]
[359.14529419 -26.18883324]
[345.36236572 -20.26025581]
[331.27127075 -15.10682583]
[316.91555786 -10.74447155]
[302.33956909 -7.18667650]
[287.58840942 -4.44443846]
[272.70764160 -2.52623320]
[257.74325562 -1.43798971]
[242.74151611 -1.18307197]
[227.74880981 -1.76226771]
[212.81144714 -3.17378688]
[197.97563171 -5.41326618]
[183.28718567 -8.47378349]
[168.79153442 -12.34587955]
[154.53349304 -17.01758575]
[149.07812500 -3.04478765]
[151.65679932 11.62490177]
[139.43035889 21.66605377]
[133.97499084 35.63885117]
[128.51963806 49.61164856]
[129.01521301 56.98567200]
[122.87763977 63.75087738]
[117.21485138 77.64090729]
[111.55207062 91.53092957]
[113.26399994 105.40756226]
[102.33795929 114.13185883]
[96.67517090 128.02188110]
[99.60328674 146.20175171]
[85.33135223 156.41345215]
[79.87599182 170.38624573]
[85.97547150 184.71922302]
[80.24391937 198.81190491]
[66.54203033 204.53849792]
[61.08667374 218.51130676]
[55.63131714 232.48410034]
[50.17596054 246.45689392]
[44.72060394 260.42968750]
[39.26524734 274.40249634]
[33.80989075 288.37530518]
[47.04010773 295.48294067]
[59.31710052 304.13354492]
[70.46184540 314.20092773]
[80.31180573 325.53826904]
[88.72334290 337.98028564]
[95.57379913 351.34545898]
[100.76326752 365.43896484]
[104.21607971 380.05523682]
[105.88186646 394.98114014]
[105.73635864 409.99902344]
[103.78165436 424.88983154]
[100.04627228 439.43646240]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 198]
[39 197]
[40 196]
[41 195]
[42 194]
[43 193]
[44 192]
[47 189]
[48 188]
[51 186]
[52 185]
[54 183]
[55 182]
[56 181]
[57 179]
[58 178]
[59 177]
[61 175]
[62 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
