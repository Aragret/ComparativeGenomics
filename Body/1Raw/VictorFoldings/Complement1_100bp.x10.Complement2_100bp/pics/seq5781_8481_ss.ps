%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxUUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGC\
) } def
/len { sequence length } bind def

/coor [
[10.66666698 292.35385132]
[18.14325142 305.38513184]
[23.77570724 319.31314087]
[27.45910454 333.87838745]
[29.12482452 348.80953979]
[28.74183464 363.82843018]
[26.31726837 378.65527344]
[21.89629745 393.01385498]
[15.56127930 406.63665771]
[7.43023300 419.26995850]
[-2.34536624 430.67834473]
[-13.58340454 440.64932251]
[-26.07452393 448.99710083]
[-39.58602142 455.56622314]
[-53.86618805 460.23425293]
[-68.64899445 462.91424561]
[-83.65904236 463.55630493]
[-98.61670685 462.14843750]
[-113.24333191 458.71688843]
[-127.26643372 453.32556152]
[-140.42477417 446.07492065]
[-152.47322083 437.10000610]
[-163.18730164 426.56805420]
[-172.36744690 414.67526245]
[-179.84262085 401.64315796]
[-185.47357178 387.71456909]
[-189.15539551 373.14892578]
[-190.81948853 358.21759033]
[-190.43487549 343.19873047]
[-188.00871277 328.37216187]
[-183.58618164 314.01406860]
[-177.24969482 300.39193726]
[-169.11727905 287.75952148]
[-159.34043884 276.35220337]
[-148.10133362 266.38244629]
[-135.60929871 258.03598022]
[-122.09709167 251.46835327]
[-107.81642151 246.80184937]
[-93.03332520 244.12344360]
[-78.02320862 243.48301697]
[-63.06570053 244.89250183]
[-48.43944550 248.32565308]
[-34.41692734 253.71849060]
[-21.25937271 260.97055054]
[-19.86135292 246.14170837]
[-5.41241550 239.69665527]
[3.54828048 227.66726685]
[12.50897694 215.63789368]
[-2.45118523 216.73039246]
[-13.89179802 207.02923584]
[-15.25916004 192.09169006]
[-5.76998281 180.47465515]
[9.13990116 178.83290100]
[20.92943192 188.10688782]
[22.84527779 202.98315430]
[32.84344864 191.80117798]
[42.84162140 180.61920166]
[52.83979416 169.43722534]
[62.83796692 158.25526428]
[72.83613586 147.07328796]
[80.40052032 134.12028503]
[85.22651672 119.91783142]
[90.05251312 105.71537018]
[77.77700043 114.33580017]
[62.84495163 115.76197052]
[49.15957260 109.62108612]
[40.29818726 97.51837158]
[38.57714081 82.61743164]
[44.44631195 68.81333923]
[56.37150955 59.71445847]
[71.23551941 57.69921112]
[85.15292358 63.29437637]
[94.48574066 75.03739166]
[96.79450226 89.85778046]
[103.67391205 76.52835083]
[110.55332184 63.19892120]
[117.43273926 49.86949158]
[124.31214905 36.54006577]
[131.19155884 23.21063423]
[130.64511108 7.39886808]
[143.35777283 -0.36241126]
[144.51268005 -9.42353916]
[150.44012451 -13.83795071]
[157.51724243 -27.06347847]
[164.59434509 -40.28900528]
[171.67144775 -53.51453400]
[178.74855042 -66.74005890]
[168.31062317 -77.67198944]
[161.77154541 -91.27650452]
[159.76037598 -106.21583557]
[162.46159363 -121.02523804]
[169.59829712 -134.25665283]
[180.46047974 -144.62023926]
[193.97567749 -151.11016846]
[208.81488037 -153.10223389]
[223.52314758 -150.41377258]
[230.60026550 -163.63929749]
[237.67736816 -176.86482239]
[244.75447083 -190.09036255]
[251.83157349 -203.31588745]
[239.69865417 -212.17807007]
[228.91723633 -222.64265442]
[219.69720459 -234.50590515]
[212.21800232 -247.53694153]
[206.62524414 -261.48208618]
[203.02775574 -276.06988525]
[201.49560547 -291.01641846]
[202.05859375 -306.03073120]
[204.70574951 -320.82052612]
[209.38557434 -335.09799194]
[216.00697327 -348.58514404]
[224.44102478 -361.01947021]
[234.52359009 -372.15896606]
[246.05839539 -381.78674316]
[258.82092285 -389.71545410]
[272.56271362 -395.79071045]
[287.01632690 -399.89428711]
[301.90039062 -401.94628906]
[316.92520142 -401.90679932]
[331.79827881 -399.77655029]
[346.23010254 -395.59704590]
[359.93978882 -389.44961548]
[372.66043091 -381.45391846]
[384.14447021 -371.76562500]
[394.16830444 -360.57327271]
[402.53686523 -348.09475708]
[409.08724976 -334.57296753]
[413.69195557 -320.27111816]
[416.26132202 -305.46759033]
[416.74536133 -290.45053101]
[415.13461304 -275.51226807]
[411.46051025 -260.94357300]
[405.79449463 -247.02803040]
[398.24688721 -234.03651428]
[388.96459961 -222.22189331]
[378.12829590 -211.81414795]
[365.94894409 -203.01586914]
[352.66360474 -195.99833679]
[338.53088379 -190.89811707]
[323.82586670 -187.81451416]
[308.83480835 -186.80754089]
[293.84948730 -187.89678955]
[279.16162109 -191.06106567]
[265.05709839 -196.23878479]
[257.98001099 -183.01324463]
[250.90289307 -169.78771973]
[243.82579041 -156.56219482]
[236.74868774 -143.33666992]
[247.14552307 -132.59114075]
[253.72090149 -119.13993835]
[255.81954956 -104.29488373]
[253.22348022 -89.50801849]
[246.17454529 -76.22964478]
[235.35195923 -65.76606750]
[221.80685425 -59.15104675]
[206.86021423 -57.04373169]
[191.97407532 -59.66295624]
[184.89697266 -46.43742752]
[177.81987000 -33.21189880]
[170.74276733 -19.98637199]
[163.66566467 -6.76084518]
[156.68721008 6.51700115]
[157.72572327 21.37535858]
[144.52099609 30.09004784]
[137.64158630 43.41947556]
[130.76216125 56.74890518]
[123.88275146 70.07833862]
[117.00334167 83.40776062]
[110.12393188 96.73719025]
[104.25496674 110.54136658]
[99.42897034 124.74382782]
[94.60297394 138.94628906]
[105.20747375 128.33758545]
[117.82060242 120.21914673]
[131.86854553 114.96030426]
[146.71220398 112.80030823]
[161.67631531 113.83742523]
[176.08009338 118.02445984]
[189.26824951 125.17093658]
[200.64085388 134.95175171]
[209.68048096 146.92192078]
[215.97592163 160.53689575]
[219.24075317 175.17727661]
[219.32647705 190.17703247]
[216.22915649 204.85375977]
[210.08972168 218.53979492]
[201.18746948 230.61248779]
[189.92739868 240.52261353]
[176.82174683 247.81935120]
[162.46676636 252.17071533]
[147.51548767 253.37876892]
[132.64811707 251.38854980]
[118.54099274 246.29058838]
[105.83591461 238.31681824]
[95.11087036 227.83000183]
[86.85377502 215.30720520]
[81.44028473 201.31813049]
[79.11666870 186.49920654]
[79.98863220 171.52456665]
[84.01811218 157.07145691]
[74.01994324 168.25343323]
[64.02176666 179.43540955]
[54.02359772 190.61737061]
[44.02542496 201.79934692]
[34.02725220 212.98132324]
[24.53835487 224.59858704]
[15.57765865 236.62797546]
[6.61696243 248.65734863]
[4.57801294 264.34661865]
[-9.22999573 269.93124390]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 210]
[46 208]
[47 207]
[48 206]
[55 205]
[56 204]
[57 203]
[58 202]
[59 201]
[60 200]
[61 172]
[62 171]
[63 170]
[74 169]
[75 168]
[76 167]
[77 166]
[78 165]
[79 164]
[81 162]
[83 161]
[84 160]
[85 159]
[86 158]
[87 157]
[96 148]
[97 147]
[98 146]
[99 145]
[100 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
