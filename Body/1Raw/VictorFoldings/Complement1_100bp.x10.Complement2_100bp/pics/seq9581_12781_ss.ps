%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[107.36466980 659.82867432]
[93.49316406 654.10522461]
[80.04458618 647.44842529]
[67.08162689 639.88946533]
[54.66473770 631.46343994]
[42.85180664 622.20971680]
[31.69791412 612.17144775]
[21.25506592 601.39532471]
[11.57194996 589.93176270]
[2.69371533 577.83410645]
[-5.33824444 565.15875244]
[-12.48647976 551.96484375]
[-18.71766281 538.31384277]
[-24.00273895 524.26947021]
[-28.31706810 509.89715576]
[-31.64053535 495.26391602]
[-33.95764160 480.43801880]
[-35.25758743 465.48852539]
[-35.53430939 450.48519897]
[-34.78651810 435.49795532]
[-33.01769638 420.59667969]
[-30.23609924 405.85083008]
[-26.45468903 391.32922363]
[-21.69110107 377.09948730]
[-15.96754265 363.22802734]
[-9.31070042 349.77947998]
[-1.75161278 336.81658936]
[6.67447662 324.39974976]
[15.92828083 312.58688354]
[25.96665382 301.43304443]
[36.74279404 290.99026489]
[48.20645523 281.30725098]
[60.30418396 272.42907715]
[72.97958374 264.39721680]
[86.17355347 257.24905396]
[99.82456970 251.01797485]
[113.86898804 245.73298645]
[128.24131775 241.41876221]
[117.87730408 230.72126770]
[122.36592102 215.55015564]
[119.04366302 200.92268372]
[115.72140503 186.29522705]
[112.39913940 171.66777039]
[109.07688141 157.04031372]
[105.21257782 142.54661560]
[100.81157684 128.20677185]
[96.41058350 113.86692047]
[86.30645752 104.20264435]
[89.24957275 90.53408051]
[84.84857178 76.19422913]
[80.44757843 61.85438538]
[76.04657745 47.51453781]
[71.64557648 33.17469025]
[67.24458313 18.83484268]
[61.73504639 11.54904652]
[62.88652420 4.24864244]
[58.69951248 -10.15513992]
[54.51250076 -24.55892181]
[43.23064423 -35.65082169]
[47.10778809 -50.03195572]
[42.92077637 -64.43573761]
[38.73376465 -78.83952332]
[34.54675293 -93.24330139]
[30.03912354 -107.54998779]
[25.21312714 -121.75244141]
[10.57060146 -118.43368530]
[-4.33861732 -116.66368103]
[-19.35117722 -116.46184540]
[-34.30259323 -117.83037567]
[-49.02904892 -120.75428009]
[-63.36919403 -125.20153046]
[-77.16590881 -131.12338257]
[-90.26802826 -138.45497131]
[-102.53199768 -147.11596680]
[-113.82344818 -157.01145935]
[-124.01866150 -168.03303528]
[-133.00593567 -180.05995178]
[-140.68681335 -192.96041870]
[-146.97711182 -206.59309387]
[-151.80793762 -220.80860901]
[-155.12634277 -235.45120239]
[-156.89598083 -250.36047363]
[-157.09745789 -265.37304688]
[-155.72856140 -280.32443237]
[-152.80429077 -295.05081177]
[-148.35670471 -309.39083862]
[-142.43450928 -323.18740845]
[-135.10260010 -336.28933716]
[-126.44131470 -348.55310059]
[-116.54554749 -359.84432983]
[-105.52371216 -370.03927612]
[-93.49658966 -379.02624512]
[-80.59593964 -386.70681763]
[-66.96311188 -392.99679565]
[-52.74747849 -397.82727051]
[-38.10479355 -401.14532471]
[-23.19548798 -402.91458130]
[-8.18291664 -403.11569214]
[6.76843262 -401.74642944]
[21.49474525 -398.82180786]
[35.83467484 -394.37387085]
[49.63109970 -388.45135498]
[62.73286057 -381.11911011]
[74.99641418 -372.45751953]
[86.28738403 -362.56149292]
[96.48206329 -351.53939819]
[105.46875763 -339.51205444]
[113.14900208 -326.61123657]
[119.43864441 -312.97824097]
[124.26876831 -298.76251221]
[127.58646393 -284.11972046]
[129.35537720 -269.21038818]
[129.55612183 -254.19781494]
[128.18650818 -239.24649048]
[125.26152802 -224.52024841]
[120.81323242 -210.18043518]
[114.89037323 -196.38415527]
[107.55783081 -183.28256226]
[98.89594269 -171.01922607]
[88.99962616 -159.72850037]
[77.97730255 -149.53408813]
[65.94973755 -140.54768372]
[53.04871368 -132.86775208]
[39.41558075 -126.57844543]
[44.24158096 -112.37598419]
[47.22574615 -110.49793243]
[49.44852066 -107.08116150]
[50.19660568 -102.49927521]
[48.95053482 -97.43031311]
[53.13754654 -83.02653503]
[57.32455826 -68.62274933]
[61.51156998 -54.21896744]
[72.49394226 -44.15732193]
[68.91628265 -28.74593353]
[73.10329437 -14.34215069]
[77.29030609 0.06163136]
[81.58442688 14.43384457]
[85.98542786 28.77369118]
[90.38642120 43.11353683]
[94.78742218 57.45338440]
[99.18842316 71.79323578]
[103.58941650 86.13307953]
[113.69354248 95.79735565]
[110.75042725 109.46591949]
[115.15142822 123.80577087]
[119.55242157 138.14561462]
[128.77929688 126.31916809]
[143.77603149 126.00662231]
[153.48760986 137.43838501]
[150.75502014 152.18737793]
[137.59260559 159.38119507]
[123.70434570 153.71804810]
[127.02660370 168.34550476]
[130.34886169 182.97296143]
[133.67112732 197.60043335]
[136.99337769 212.22789001]
[147.59503174 223.97163391]
[142.86878967 238.09649658]
[157.69465637 235.77909851]
[172.64410400 234.47885132]
[187.64744568 234.20182800]
[202.63470459 234.94931030]
[217.53601074 236.71783447]
[232.28189087 239.49913025]
[246.80360413 243.28025818]
[261.03341675 248.04354858]
[274.90499878 253.76683044]
[288.35366821 260.42340088]
[301.31674194 267.98223877]
[313.73373413 276.40808105]
[325.54678345 285.66165161]
[336.70080566 295.69979858]
[347.14379883 306.47570801]
[356.82708740 317.93917847]
[365.70547485 330.03674316]
[373.73760986 342.71197510]
[380.88601685 355.90579224]
[387.11737061 369.55667114]
[392.40264893 383.60101318]
[396.71716309 397.97323608]
[400.04083252 412.60644531]
[402.35812378 427.43231201]
[403.65829468 442.38177490]
[403.93521118 457.38510132]
[403.18762207 472.37237549]
[401.41900635 487.27368164]
[398.63760376 502.01953125]
[394.85638428 516.54119873]
[390.09298706 530.77099609]
[384.36959839 544.64251709]
[377.71295166 558.09118652]
[370.15402222 571.05419922]
[361.72811890 583.47113037]
[352.47445679 595.28411865]
[342.43624878 606.43804932]
[331.66024780 616.88098145]
[320.19671631 626.56420898]
[308.09909058 635.44250488]
[295.42379761 643.47454834]
[282.22994995 650.62286377]
[268.57901001 656.85412598]
[254.53465271 662.13934326]
[240.16236877 666.45373535]
[225.52917480 669.77728271]
[210.70327759 672.09454346]
[195.75379944 673.39453125]
[180.75047302 673.67138672]
[165.76321411 672.92370605]
[150.86192322 671.15496826]
[136.11607361 668.37347412]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 158]
[40 156]
[41 155]
[42 154]
[43 153]
[44 152]
[45 146]
[46 145]
[47 144]
[49 142]
[50 141]
[51 140]
[52 139]
[53 138]
[54 137]
[56 136]
[57 135]
[58 134]
[60 132]
[61 131]
[62 130]
[63 129]
[64 125]
[65 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
