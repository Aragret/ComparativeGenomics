%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[143.52030945 196.31312561]
[148.96217346 182.32472229]
[155.60252380 168.86384583]
[163.39079285 156.03294373]
[151.29504395 147.16204834]
[139.19929504 138.29115295]
[127.10353851 129.42025757]
[115.00778961 120.54935455]
[102.91203308 111.67845917]
[109.20520020 125.29448700]
[110.53083038 140.23579407]
[106.73319244 154.74710083]
[98.25843048 167.12362671]
[86.10214996 175.91139221]
[71.69245911 180.07801819]
[56.72219467 179.13401794]
[42.95004272 173.19029236]
[31.99395180 162.94508362]
[25.14102554 149.60202026]
[23.19634056 134.72862244]
[26.38835716 120.07218933]
[34.34207916 107.35454559]
[46.12311172 98.06976318]
[60.34743118 93.30859375]
[75.34397888 93.63038635]
[89.35232544 98.99813080]
[79.69151306 87.52342987]
[70.03070068 76.04872894]
[60.36989212 64.57402802]
[50.70907974 53.09932709]
[45.80045700 51.32379913]
[42.40342712 48.15938950]
[40.79390717 44.41445923]
[40.88699722 40.88973618]
[31.74819374 28.99510384]
[22.60939217 17.10047150]
[13.47058964 5.20583868]
[4.33178759 -6.68879414]
[-8.16356564 1.62041068]
[-21.19683266 9.05752754]
[-34.70724487 15.58788204]
[-48.63180923 21.18102455]
[-62.90560150 25.81087875]
[-77.46207428 29.45585823]
[-92.23335266 32.09896469]
[-107.15057373 33.72787857]
[-122.14417267 34.33500671]
[-137.14425659 33.91751099]
[-152.08087158 32.47734451]
[-166.88439941 30.02122116]
[-181.48579407 26.56058884]
[-195.81698608 22.11158752]
[-209.81115723 16.69495773]
[-223.40306091 10.33595467]
[-236.52932739 3.06422877]
[-249.12873840 -5.08631706]
[-261.14257812 -14.07768059]
[-272.51480103 -23.86793900]
[-283.19241333 -34.41144562]
[-293.12561035 -45.65903854]
[-302.26806641 -57.55828094]
[-310.57717896 -70.05369568]
[-318.01422119 -83.08700562]
[-324.54449463 -96.59746552]
[-330.13754272 -110.52206421]
[-334.76730347 -124.79589081]
[-338.41217041 -139.35238647]
[-341.05517578 -154.12368774]
[-342.68399048 -169.04090881]
[-343.29101562 -184.03451538]
[-342.87344360 -199.03460693]
[-341.43316650 -213.97120667]
[-338.97692871 -228.77471924]
[-335.51620483 -243.37608337]
[-331.06710815 -257.70724487]
[-325.65039062 -271.70138550]
[-319.29129028 -285.29324341]
[-312.01947021 -298.41946411]
[-303.86883545 -311.01882935]
[-294.87741089 -323.03259277]
[-285.08706665 -334.40475464]
[-274.54348755 -345.08230591]
[-263.29583740 -355.01541138]
[-251.39653015 -364.15780640]
[-238.90106201 -372.46682739]
[-225.86769104 -379.90377808]
[-212.35719299 -386.43395996]
[-198.43255615 -392.02691650]
[-184.15870667 -396.65658569]
[-169.60218811 -400.30136108]
[-154.83087158 -402.94427490]
[-139.91362000 -404.57296753]
[-124.92001343 -405.17990112]
[-109.91993713 -404.76220703]
[-94.98333740 -403.32183838]
[-80.17984772 -400.86550903]
[-65.57849884 -397.40469360]
[-51.24736404 -392.95550537]
[-37.25326538 -387.53869629]
[-23.66144753 -381.17950439]
[-10.53528404 -373.90759277]
[2.06402564 -365.75686646]
[14.07773590 -356.76535034]
[25.44983292 -346.97494507]
[36.12729645 -336.43130493]
[46.06033707 -325.18356323]
[55.20264816 -313.28421021]
[63.51160431 -300.78866577]
[70.94845581 -287.75527954]
[77.47853851 -274.24472046]
[83.07140350 -260.32003784]
[87.70097351 -246.04615784]
[91.34565735 -231.48960876]
[93.98846436 -216.71827698]
[95.61708069 -201.80102539]
[96.22390747 -186.80741882]
[95.80610657 -171.80734253]
[94.36564636 -156.87074280]
[91.90921783 -142.06727600]
[88.44829559 -127.46595001]
[83.99900818 -113.13484955]
[78.58209229 -99.14078522]
[72.22281647 -85.54900360]
[64.95082855 -72.42288971]
[56.80002975 -59.82363892]
[47.80842209 -47.80998611]
[38.01793671 -36.43795395]
[27.47421646 -25.76056480]
[16.22642136 -15.82759666]
[25.36522293 -3.93296361]
[34.50402451 7.96166945]
[43.64282608 19.85630226]
[52.78163147 31.75093460]
[62.18378067 43.43851471]
[71.84458923 54.91321564]
[81.50540161 66.38791656]
[91.16621399 77.86261749]
[100.82702637 89.33731842]
[111.78292847 99.58271027]
[123.87868500 108.45360565]
[135.97444153 117.32450104]
[148.07019043 126.19539642]
[160.16593933 135.06628418]
[172.26168823 143.93717957]
[182.15908813 132.65309143]
[193.00231934 122.27455902]
[204.70883179 112.88058472]
[217.18954468 104.54265594]
[230.34947205 97.32422638]
[244.08845520 91.28024292]
[258.30194092 86.45669556]
[272.88171387 82.89031219]
[287.71685791 80.60821533]
[302.69445801 79.62777710]
[317.70050049 79.95647430]
[332.62078857 81.59178925]
[347.34176636 84.52128601]
[361.75140381 88.72266388]
[375.74005127 94.16394043]
[389.20120239 100.80371857]
[402.03244019 108.59146118]
[414.13607788 117.46788788]
[425.42004395 127.36544800]
[435.79840088 138.20881653]
[445.19223022 149.91546631]
[453.52999878 162.39630127]
[460.74822998 175.55632019]
[466.79202271 189.29539490]
[471.61535645 203.50892639]
[475.18154907 218.08877563]
[477.46343994 232.92395020]
[478.44366455 247.90155029]
[478.11474609 262.90759277]
[476.47921753 277.82785034]
[473.54953003 292.54879761]
[469.34796143 306.95837402]
[463.90646362 320.94692993]
[457.26651001 334.40798950]
[449.47857666 347.23913574]
[440.60198975 359.34265137]
[430.70425415 370.62646484]
[419.86074829 381.00469971]
[408.15396118 390.39834595]
[395.67303467 398.73593140]
[382.51290894 405.95397949]
[368.77374268 411.99758911]
[354.56015015 416.82070923]
[339.98025513 420.38668823]
[325.14505005 422.66839600]
[310.16741943 423.64840698]
[295.16140747 423.31927490]
[280.24114990 421.68353271]
[265.52023315 418.75363159]
[251.11071777 414.55184937]
[237.12223816 409.11016846]
[223.66127014 402.47003174]
[210.83026123 394.68191528]
[198.72685242 385.80517578]
[187.44317627 375.90728760]
[177.06510925 365.06362915]
[167.67161560 353.35671997]
[159.33421326 340.87564087]
[152.11634827 327.71542358]
[146.07293701 313.97616577]
[141.24998474 299.76251221]
[137.68421936 285.18255615]
[135.40274048 270.34732056]
[134.42294312 255.36970520]
[134.75225830 240.36367798]
[136.38821411 225.44345093]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 144]
[5 143]
[6 142]
[7 141]
[8 140]
[9 139]
[26 138]
[27 137]
[28 136]
[29 135]
[30 134]
[34 133]
[35 132]
[36 131]
[37 130]
[38 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
