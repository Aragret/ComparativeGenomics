%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[156.59384155 870.99438477]
[141.79727173 868.51885986]
[127.11735535 865.42596436]
[112.57982635 861.72100830]
[98.21019745 857.41058350]
[84.03367615 852.50219727]
[70.07513428 847.00439453]
[56.35906219 840.92694092]
[42.90951538 834.28045654]
[29.75009537 827.07659912]
[16.90388489 819.32794189]
[4.39342070 811.04821777]
[-7.75934839 802.25177002]
[-19.53310204 792.95422363]
[-30.90718651 783.17175293]
[-41.86164474 772.92156982]
[-52.37726212 762.22167969]
[-62.43559265 751.09082031]
[-72.01898193 739.54852295]
[-81.11062622 727.61499023]
[-89.69457245 715.31127930]
[-97.75576019 702.65887451]
[-105.28004456 689.67999268]
[-112.25423431 676.39739990]
[-118.66609192 662.83441162]
[-124.50436401 649.01483154]
[-129.75880432 634.96289062]
[-134.42021179 620.70324707]
[-138.48039246 606.26092529]
[-141.93222046 591.66125488]
[-144.76965332 576.92980957]
[-146.98771667 562.09246826]
[-148.58250427 547.17523193]
[-149.55122375 532.20434570]
[-149.89218140 517.20605469]
[-149.60476685 502.20657349]
[-148.68949890 487.23229980]
[-147.14796448 472.30950928]
[-144.98289490 457.46435547]
[-142.19805908 442.72286987]
[-138.79837036 428.11096191]
[-134.78976440 413.65420532]
[-130.17930603 399.37802124]
[-124.97505188 385.30740356]
[-119.18614960 371.46707153]
[-112.82275391 357.88128662]
[-105.89602661 344.57391357]
[-98.41812134 331.56823730]
[-90.40215302 318.88714600]
[-81.86218262 306.55282593]
[-72.81319427 294.58697510]
[-63.27106857 283.01052856]
[-53.25254059 271.84381104]
[-42.77518463 261.10644531]
[-31.85738754 250.81723022]
[-20.51829720 240.99423218]
[-8.77780819 231.65467834]
[3.34348202 222.81497192]
[15.82430935 214.49060059]
[28.64277649 206.69616699]
[41.77639771 199.44535828]
[55.20213318 192.75088501]
[68.89642334 186.62449646]
[82.83525085 181.07695007]
[96.99415588 176.11796570]
[111.34830475 171.75624084]
[107.59200287 157.23417664]
[103.83570099 142.71211243]
[99.97139740 128.21842957]
[95.99930573 113.75389862]
[86.18740082 103.79307556]
[89.53617096 90.21819305]
[85.56407928 75.75366974]
[81.59197998 61.28914642]
[77.61988068 46.82462311]
[73.64778900 32.36009979]
[69.93271637 28.69331360]
[68.17173767 24.39770508]
[68.27715302 20.32291222]
[69.83676147 17.16064072]
[66.51450348 2.53318119]
[63.19224548 -12.09427929]
[59.86998749 -26.72173882]
[44.82056427 -26.40586662]
[30.01568222 -29.12622833]
[16.06159210 -34.77142334]
[3.52970290 -43.11029053]
[-7.06680965 -53.80134964]
[-15.29402637 -66.40681458]
[-20.81504822 -80.41049957]
[-23.40379143 -95.23896790]
[-22.95425034 -110.28498840]
[-19.48483276 -124.93244934]
[-13.13760853 -138.58152771]
[-4.17249346 -150.67333984]
[7.04339743 -160.71269226]
[20.05077934 -168.28849792]
[34.31700897 -173.09053040]
[49.25789642 -174.92216492]
[64.26161194 -173.70837402]
[78.71377563 -169.49887085]
[92.02257538 -162.46601868]
[103.64301300 -152.89784241]
[113.09925842 -141.18611145]
[120.00406647 -127.81045532]
[124.07470703 -113.31856537]
[125.14447784 -98.30388641]
[123.16957092 -83.38127136]
[118.23086548 -69.16177368]
[110.53059387 -56.22768021]
[100.38407898 -45.10863876]
[88.20681000 -36.25996017]
[74.49744415 -30.04399872]
[77.81970215 -15.41653824]
[81.14196777 -0.78907830]
[84.46422577 13.83838177]
[88.11231232 28.38800240]
[92.08441162 42.85252762]
[96.05650330 57.31705093]
[100.02860260 71.78157043]
[104.00069427 86.24610138]
[113.81259918 96.20692444]
[110.46382904 109.78180695]
[114.43592072 124.24633026]
[119.72608948 131.69293213]
[118.35776520 138.95582581]
[122.11406708 153.47787476]
[125.87036896 167.99993896]
[140.53913879 164.85453796]
[155.32675171 162.32617188]
[170.20727539 160.41926575]
[185.15458679 159.13716125]
[200.14248657 158.48211670]
[215.14466858 158.45526123]
[230.13482666 159.05667114]
[245.08663940 160.28526306]
[259.97387695 162.13890076]
[274.77044678 164.61433411]
[289.45037842 167.70719910]
[303.98791504 171.41209412]
[318.35757446 175.72250366]
[332.53411865 180.63087463]
[346.49267578 186.12860107]
[360.20877075 192.20600891]
[373.65832520 198.85246277]
[386.81777954 206.05630493]
[399.66400146 213.80488586]
[412.17449951 222.08460999]
[424.32727051 230.88096619]
[436.10107422 240.17849731]
[447.47518921 249.96092224]
[458.42968750 260.21105957]
[468.94531250 270.91094971]
[479.00369263 282.04177856]
[488.58712769 293.58404541]
[497.67880249 305.51751709]
[506.26278687 317.82122803]
[514.32397461 330.47363281]
[521.84832764 343.45248413]
[528.82257080 356.73504639]
[535.23443604 370.29800415]
[541.07275391 384.11755371]
[546.32727051 398.16949463]
[550.98870850 412.42910767]
[555.04895020 426.87142944]
[558.50079346 441.47113037]
[561.33825684 456.20254517]
[563.55639648 471.03988647]
[565.15124512 485.95706177]
[566.11999512 500.92797852]
[566.46099854 515.92633057]
[566.17364502 530.92578125]
[565.25842285 545.90002441]
[563.71691895 560.82281494]
[561.55187988 575.66796875]
[558.76708984 590.40948486]
[555.36743164 605.02142334]
[551.35888672 619.47814941]
[546.74847412 633.75439453]
[541.54425049 647.82501221]
[535.75543213 661.66534424]
[529.39208984 675.25115967]
[522.46539307 688.55853271]
[514.98748779 701.56420898]
[506.97158813 714.24536133]
[498.43164062 726.57971191]
[489.38269043 738.54559326]
[479.84060669 750.12207031]
[469.82211304 761.28881836]
[459.34478760 772.02624512]
[448.42703247 782.31549072]
[437.08795166 792.13848877]
[425.34750366 801.47808838]
[413.22622681 810.31781006]
[400.74545288 818.64227295]
[387.92700195 826.43670654]
[374.79339600 833.68756104]
[361.36767578 840.38208008]
[347.67340088 846.50848389]
[333.73458862 852.05609131]
[319.57571411 857.01513672]
[305.22158813 861.37689209]
[290.69738770 865.13372803]
[276.02859497 868.27911377]
[261.24096680 870.80743408]
[246.36044312 872.71429443]
[231.41311646 873.99633789]
[216.42521667 874.65136719]
[201.42303467 874.67816162]
[186.43289185 874.07672119]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 128]
[67 127]
[68 126]
[69 124]
[70 123]
[72 121]
[73 120]
[74 119]
[75 118]
[76 117]
[80 116]
[81 115]
[82 114]
[83 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
