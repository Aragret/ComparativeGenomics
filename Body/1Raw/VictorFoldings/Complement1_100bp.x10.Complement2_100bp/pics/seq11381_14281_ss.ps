%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAUxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[12.73162460 605.37823486]
[4.30882263 617.80249023]
[-5.19378471 629.42175293]
[-15.69968796 640.14239502]
[-27.12429619 649.87811279]
[-39.37562561 658.55053711]
[-52.35503387 666.08984375]
[-65.95801544 672.43536377]
[-80.07504272 677.53588867]
[-94.59245300 681.35046387]
[-109.39335632 683.84838867]
[-124.35858917 685.00946045]
[-139.36764526 684.82434082]
[-154.29969788 683.29455566]
[-169.03451538 680.43249512]
[-183.45343018 676.26104736]
[-197.44038391 670.81390381]
[-210.88275146 664.13488770]
[-223.67228699 656.27777100]
[-235.70602417 647.30584717]
[-246.88706970 637.29138184]
[-257.12539673 626.31488037]
[-266.33859253 614.46484375]
[-274.45245361 601.83666992]
[-281.40164185 588.53192139]
[-287.13021851 574.65789795]
[-291.59207153 560.32617188]
[-294.75125122 545.65216064]
[-296.58233643 530.75408936]
[-297.07058716 515.75183105]
[-296.21206665 500.76620483]
[-294.01370239 485.91784668]
[-290.49316406 471.32635498]
[-285.67880249 457.10916138]
[-279.60940552 443.38076782]
[-272.33383179 430.25170898]
[-263.91064453 417.82769775]
[-254.40768433 406.20874023]
[-243.90145874 395.48843384]
[-232.47654724 385.75302124]
[-220.22496033 377.08096313]
[-207.24531555 369.54205322]
[-193.64215088 363.19699097]
[-179.52496338 358.09683228]
[-165.00743103 354.28271484]
[-150.20645142 351.78527832]
[-135.24118042 350.62466431]
[-120.23212433 350.81021118]
[-105.30012512 352.34045410]
[-90.56540680 355.20300293]
[-76.14660645 359.37487793]
[-62.15982056 364.82244873]
[-48.71766281 371.50186157]
[-40.86590576 358.72100830]
[-33.01415253 345.94018555]
[-25.35355377 333.04385376]
[-17.88581276 320.03491211]
[-10.41807175 307.02593994]
[-2.95033026 294.01699829]
[4.51741123 281.00802612]
[4.14339781 266.11813354]
[17.72408295 258.00177002]
[25.19182396 244.99279785]
[24.20270348 227.47171021]
[40.20331955 218.35789490]
[47.47655106 205.23919678]
[54.74977875 192.12049866]
[62.02301025 179.00181580]
[69.29624176 165.88311768]
[75.26779938 152.12301636]
[79.88181305 137.85028076]
[84.49581909 123.57754517]
[89.10983276 109.30481720]
[86.37054443 95.59394836]
[96.61743927 86.08117676]
[101.23144531 71.80844116]
[105.84545898 57.53570938]
[100.67830658 45.71778107]
[104.81516266 33.92498016]
[115.52364349 28.29870415]
[120.34963989 14.09624863]
[125.17563629 -0.10620726]
[124.97361755 -9.23840332]
[130.18064880 -14.48326111]
[135.21757507 -28.61229134]
[140.25448608 -42.74132156]
[145.29141235 -56.87034988]
[134.61141968 -71.52284241]
[134.86276245 -89.49549866]
[145.75604248 -103.59468842]
[162.78018188 -108.29045868]
[167.39419556 -122.56319427]
[172.00820923 -136.83592224]
[176.62220764 -151.10865784]
[169.68043518 -165.05317688]
[174.56301880 -179.46202087]
[187.89976501 -185.99401855]
[192.51376343 -200.26675415]
[197.12777710 -214.53948975]
[183.87025452 -221.64425659]
[172.09451294 -231.00224304]
[162.17910767 -242.31260681]
[154.44277954 -255.21179199]
[149.13421631 -269.28512573]
[146.42405701 -284.08023071]
[146.39942932 -299.12149048]
[149.06114197 -313.92538452]
[154.32359314 -328.01602173]
[162.01765442 -340.94046021]
[171.89596558 -352.28323364]
[183.64100647 -361.67971802]
[196.87519836 -368.82788086]
[211.17312622 -373.49786377]
[226.07516479 -375.53964233]
[241.10229492 -374.88751221]
[255.77143860 -371.56243896]
[269.61105347 -365.67135620]
[282.17623901 -357.40359497]
[293.06307983 -347.02493286]
[301.92163086 -334.86904907]
[308.46710205 -321.32666016]
[312.48910522 -306.83306885]
[313.85830688 -291.85427856]
[312.53073120 -276.87170410]
[308.54907227 -262.36700439]
[302.04125977 -248.80645752]
[293.21655273 -236.62597656]
[282.35861206 -226.21710205]
[269.81643677 -217.91444397]
[255.99327087 -211.98489380]
[241.33343506 -208.61906433]
[226.30818176 -207.92515564]
[211.40051270 -209.92547607]
[206.78649902 -195.65274048]
[202.17248535 -181.38000488]
[209.16178894 -168.27713013]
[204.68583679 -153.73681641]
[190.89494324 -146.49465942]
[186.28094482 -132.22192383]
[181.66693115 -117.94918823]
[177.05291748 -103.67645264]
[185.57861328 -95.03424072]
[189.64494324 -83.51912689]
[188.42234802 -71.29593658]
[182.08178711 -60.69042969]
[171.77386475 -53.74671936]
[159.42044067 -51.83343506]
[154.38351440 -37.70440292]
[149.34660339 -23.57537460]
[144.30969238 -9.44634438]
[139.37809753 4.71979046]
[134.55209351 18.92224693]
[129.72608948 33.12470245]
[134.06695557 50.12834549]
[120.11818695 62.14971924]
[115.50418091 76.42245483]
[110.89016724 90.69518280]
[113.62945557 104.40605164]
[103.38256073 113.91882324]
[98.76855469 128.19155884]
[94.15454102 142.46429443]
[89.54053497 156.73703003]
[100.94344330 146.99157715]
[115.30096436 142.64860535]
[130.19361877 144.43995667]
[143.11172485 152.06378174]
[151.87834167 164.23532104]
[155.01615906 178.90344238]
[151.99639893 193.59634399]
[143.32794189 205.83798218]
[130.47155762 213.56542969]
[115.59379578 215.47650146]
[101.20180511 211.24911499]
[89.72090149 201.59567261]
[83.08581543 188.14295959]
[82.41493225 173.15634155]
[75.14170074 186.27503967]
[67.86847687 199.39373779]
[60.59524536 212.51243591]
[53.32201385 225.63111877]
[56.11947632 238.22227478]
[49.79151154 248.99913025]
[38.20077896 252.46054077]
[30.73303604 265.46951294]
[30.57290649 281.28988647]
[17.52636337 288.47576904]
[10.05862236 301.48474121]
[2.59088111 314.49368286]
[-4.87686014 327.50262451]
[-12.34460163 340.51159668]
[-12.71002865 347.11294556]
[-15.87874031 351.83062744]
[-20.23330879 353.79193115]
[-28.08506393 366.57278442]
[-35.93682098 379.35360718]
[-23.90280724 388.32516479]
[-12.72145367 398.33935547]
[-2.48278570 409.31549072]
[6.73075962 421.16525269]
[14.84499836 433.79321289]
[21.79459953 447.09768677]
[27.52360535 460.97158813]
[31.98588943 475.30316162]
[35.14552307 489.97705078]
[36.97706985 504.87509155]
[37.46577835 519.87731934]
[36.60771561 534.86297607]
[34.40979004 549.71142578]
[30.88969803 564.30303955]
[26.07578278 578.52038574]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 195]
[54 194]
[55 193]
[56 190]
[57 189]
[58 188]
[59 187]
[60 186]
[62 184]
[63 183]
[65 180]
[66 179]
[67 178]
[68 177]
[69 176]
[70 162]
[71 161]
[72 160]
[73 159]
[75 157]
[76 156]
[77 155]
[80 153]
[81 152]
[82 151]
[84 150]
[85 149]
[86 148]
[87 147]
[91 141]
[92 140]
[93 139]
[94 138]
[97 135]
[98 134]
[99 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
