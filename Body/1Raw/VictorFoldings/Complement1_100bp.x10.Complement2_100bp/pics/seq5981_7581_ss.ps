%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxGAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAG\
) } def
/len { sequence length } bind def

/coor [
[190.74118042 375.65722656]
[193.68815613 360.93539429]
[198.15785217 346.60223389]
[204.10131836 332.81481934]
[211.45343018 319.72418213]
[220.13362122 307.47381592]
[230.04679871 296.19787598]
[241.08433533 286.01992798]
[232.12364197 273.99053955]
[223.16294861 261.96118164]
[214.20223999 249.93179321]
[200.39424133 244.34715271]
[198.35528564 228.65788269]
[189.12818909 216.83161926]
[179.63929749 205.21435547]
[170.15039062 193.59709167]
[160.66149902 181.97982788]
[151.08638000 170.43351746]
[141.42556763 158.95883179]
[131.76475525 147.48413086]
[113.15093994 142.24839783]
[109.92308807 122.35005951]
[99.92491913 111.16808319]
[89.84378052 100.06085205]
[79.68023682 89.02897644]
[69.51668549 77.99710083]
[54.47564316 73.09020233]
[51.54249191 58.48726654]
[41.37894440 47.45538712]
[31.21539879 36.42351151]
[29.52079582 51.32748032]
[17.87019348 60.77541351]
[2.93758655 59.35511017]
[-6.72294903 47.88017654]
[-5.57742023 32.92398071]
[5.71796179 23.05411148]
[20.69183350 23.92406654]
[11.55303001 12.02943325]
[6.72858381 10.03649521]
[3.47624087 6.72355652]
[2.03554678 2.91049361]
[2.28592992 -0.60655749]
[-6.31263399 -12.89739513]
[-14.91119766 -25.18823242]
[-23.50976181 -37.47907257]
[-38.54790878 -35.10937119]
[-53.06450272 -39.48607254]
[-64.19572449 -49.68980026]
[-69.76995087 -63.65722656]
[-68.73131561 -78.59812927]
[-61.33926392 -91.55278778]
[-69.93782806 -103.84362030]
[-78.53639221 -116.13446045]
[-87.13495636 -128.42529297]
[-100.23156738 -121.08654022]
[-113.99380493 -115.08826447]
[-128.28491211 -110.49008942]
[-142.96281433 -107.33772278]
[-157.88166809 -105.66248322]
[-172.89318848 -105.48103333]
[-187.84817505 -106.79516602]
[-202.59800720 -109.59182739]
[-216.99606323 -113.84321594]
[-230.89927673 -119.50708008]
[-244.16944885 -126.52713013]
[-256.67471313 -134.83358765]
[-268.29074097 -144.34391785]
[-278.90213013 -154.96357727]
[-288.40338135 -166.58703613]
[-296.70007324 -179.09877014]
[-303.70977783 -192.37442017]
[-309.36276245 -206.28204346]
[-313.60293579 -220.68342590]
[-316.38806152 -235.43542480]
[-317.69052124 -250.39143372]
[-317.49734497 -265.40280151]
[-315.81048584 -280.32034302]
[-312.64663696 -294.99578857]
[-308.03732300 -309.28329468]
[-302.02832031 -323.04086304]
[-294.67932129 -336.13174438]
[-286.06341553 -348.42584229]
[-276.26620483 -359.80093384]
[-265.38507080 -370.14404297]
[-253.52816772 -379.35229492]
[-240.81330872 -387.33422852]
[-227.36689758 -394.01049805]
[-213.32254028 -399.31472778]
[-198.81983948 -403.19421387]
[-184.00294495 -405.61038208]
[-169.01908875 -406.53924561]
[-154.01721191 -405.97158813]
[-139.14640808 -403.91299438]
[-124.55446625 -400.38397217]
[-110.38642120 -395.41958618]
[-96.78308868 -389.06918335]
[-83.87966156 -381.39584351]
[-71.80438232 -372.47586060]
[-60.67726135 -362.39785767]
[-50.60889435 -351.26202393]
[-41.69934845 -339.17904663]
[-34.03716660 -326.26898193]
[-27.69850540 -312.66015625]
[-22.74636269 -298.48782349]
[-19.22995758 -283.89285278]
[-17.18423462 -269.02026367]
[-16.62952995 -254.01791382]
[-17.57135391 -239.03486633]
[-20.00034714 -224.22006226]
[-23.89236832 -209.72071838]
[-29.20873451 -195.68096924]
[-35.89661026 -182.24031067]
[-43.88952255 -169.53236389]
[-53.10803986 -157.68342590]
[-63.46053314 -146.81123352]
[-74.84411621 -137.02386475]
[-66.24555206 -124.73302460]
[-57.64699173 -112.44218445]
[-49.04842758 -100.15135193]
[-34.34472656 -102.65469360]
[-19.95306015 -98.50869751]
[-8.74275970 -88.48421478]
[-2.97303271 -74.52963257]
[-3.83776736 -59.39228439]
[-11.21892452 -46.07763672]
[-2.62036014 -33.78679657]
[5.97820377 -21.49596024]
[14.57676792 -9.20512104]
[23.44766235 2.89063048]
[32.58646393 14.78526306]
[42.24727631 26.25996399]
[52.41082382 37.29183960]
[62.57437134 48.32371902]
[76.88845062 52.44153595]
[80.54856110 67.83354950]
[90.71211243 78.86543274]
[100.87565613 89.89730835]
[108.21926880 93.22054291]
[111.10689545 101.16991425]
[121.10506439 112.35189056]
[131.98202515 112.33020782]
[140.89186096 118.17784882]
[145.02540588 127.76232910]
[143.23945618 137.82331848]
[152.90026855 149.29801941]
[162.56108093 160.77272034]
[170.48205566 165.32199097]
[172.27876282 172.49092102]
[181.76765442 184.10818481]
[191.25656128 195.72544861]
[200.74545288 207.34271240]
[205.62709045 209.19113159]
[208.97663879 212.40576172]
[210.53022766 216.17424011]
[210.38465881 219.69718933]
[224.83360291 226.14224243]
[226.23162842 240.97109985]
[235.19232178 253.00047302]
[244.15301514 265.02984619]
[253.11370850 277.05923462]
[266.02545166 269.39733887]
[279.66735840 263.12707520]
[293.88995361 258.31713867]
[308.53741455 255.02024841]
[323.44924927 253.27252197]
[338.46209717 253.09310913]
[353.41146851 254.48397827]
[368.13354492 257.42987061]
[382.46701050 261.89852905]
[396.25488281 267.84100342]
[409.34600830 275.19213867]
[421.59704590 283.87145996]
[432.87368774 293.78381348]
[443.05242920 304.82058716]
[452.02172852 316.86093140]
[459.68331909 329.77285767]
[465.95327759 343.41488647]
[470.76284790 357.63760376]
[474.05938721 372.28515625]
[475.80673218 387.19705200]
[475.98577881 402.20989990]
[474.59457397 417.15921021]
[471.64831543 431.88122559]
[467.17929077 446.21459961]
[461.23651123 460.00228882]
[453.88504028 473.09326172]
[445.20544434 485.34408569]
[435.29281616 496.62051392]
[424.25576782 506.79898071]
[412.21520996 515.76800537]
[399.30310059 523.42926025]
[385.66091919 529.69885254]
[371.43807983 534.50811768]
[356.79043579 537.80426025]
[341.87850952 539.55126953]
[326.86566162 539.72998047]
[311.91638184 538.33837891]
[297.19445801 535.39172363]
[282.86117554 530.92242432]
[269.07360840 524.97924805]
[255.98281860 517.62750244]
[243.73222351 508.94757080]
[232.45605469 499.03469849]
[222.27784729 487.99737549]
[213.30912781 475.95663452]
[205.64816284 463.04434204]
[199.37889099 449.40197754]
[194.57000732 435.17901611]
[191.27418518 420.53131104]
[189.52754211 405.61935425]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 160]
[9 159]
[10 158]
[11 157]
[13 155]
[14 151]
[15 150]
[16 149]
[17 148]
[18 146]
[19 145]
[20 144]
[22 140]
[23 139]
[24 137]
[25 136]
[26 135]
[28 133]
[29 132]
[30 131]
[37 130]
[38 129]
[42 128]
[43 127]
[44 126]
[45 125]
[51 119]
[52 118]
[53 117]
[54 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
