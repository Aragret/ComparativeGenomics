%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[-71.91743469 307.27133179]
[-69.29753113 322.05084229]
[-67.99411011 337.00405884]
[-68.01736450 352.01394653]
[-69.36711884 366.96307373]
[-72.03279877 381.73437500]
[-75.99356079 396.21228027]
[-81.21839142 410.28350830]
[-87.66639709 423.83786011]
[-95.28712463 436.76928711]
[-104.02091980 448.97662354]
[-113.79943085 460.36425781]
[-124.54612732 470.84310913]
[-136.17689514 480.33111572]
[-148.60070801 488.75408936]
[-161.72035217 496.04608154]
[-175.43310547 502.14999390]
[-189.63168335 507.01806641]
[-204.20492554 510.61221313]
[-219.03880310 512.90429688]
[-234.01721191 513.87640381]
[-249.02291870 513.52087402]
[-263.93847656 511.84054565]
[-278.64715576 508.84851074]
[-293.03384399 504.56823730]
[-306.98596191 499.03317261]
[-320.39425659 492.28671265]
[-333.15383911 484.38159180]
[-345.16479492 475.37969971]
[-356.33319092 465.35150146]
[-366.57156372 454.37545776]
[-375.79980469 442.53750610]
[-383.94567871 429.93026733]
[-390.94543457 416.65243530]
[-396.74432373 402.80792236]
[-401.29690552 388.50506592]
[-404.56756592 373.85580444]
[-406.53070068 358.97482300]
[-407.17098999 343.97857666]
[-406.48336792 328.98440552]
[-404.47323608 314.10971069]
[-401.15634155 299.47085571]
[-396.55862427 285.18243408]
[-390.71609497 271.35629272]
[-383.67443848 258.10061646]
[-375.48880005 245.51918030]
[-366.22323608 233.71041870]
[-355.95025635 222.76675415]
[-344.75027466 212.77386475]
[-332.71093750 203.80995178]
[-319.92645264 195.94514465]
[-306.49691772 189.24102783]
[-292.52743530 183.75006104]
[-278.12728882 179.51522827]
[-263.40924072 176.56965637]
[-248.48844910 174.93640137]
[-233.48168945 174.62825012]
[-218.50642395 175.64762878]
[-203.67985535 177.98654175]
[-189.11802673 181.62667847]
[-174.93489075 186.53956604]
[-161.24147034 192.68673706]
[-148.14492798 200.02009583]
[-135.74777222 208.48225403]
[-124.14701080 218.00695801]
[-113.43344879 228.51968384]
[-103.69094086 239.93812561]
[-91.46445465 231.24830627]
[-79.23796844 222.55848694]
[-67.01148224 213.86865234]
[-54.78499603 205.17883301]
[-42.55850983 196.48901367]
[-30.33202553 187.79917908]
[-18.10553932 179.10935974]
[-5.87905407 170.41954041]
[6.34743166 161.72970581]
[18.57391739 153.03988647]
[30.73537254 144.25929260]
[42.69770813 135.20928955]
[54.52397919 125.98218536]
[66.35025024 116.75508881]
[78.17652130 107.52799225]
[90.00279236 98.30089569]
[93.91558838 91.25372314]
[102.07452393 89.02602386]
[108.41183472 74.52950287]
[123.22986603 73.02113342]
[125.53536987 57.61585999]
[137.79579163 48.60828018]
[152.46817017 50.90115738]
[164.43049622 41.85115814]
[176.39283752 32.80115891]
[168.19580078 20.23162270]
[160.89552307 7.12090778]
[154.52760315 -6.46711302]
[149.12306213 -20.46623993]
[144.70820618 -34.80826950]
[141.30456543 -49.42332840]
[138.92871094 -64.24021149]
[137.59222412 -79.18673706]
[137.30162048 -94.19007874]
[138.05830383 -109.17713928]
[139.85858154 -124.07492065]
[142.69371033 -138.81082153]
[146.54986572 -153.31304932]
[151.40824890 -167.51097107]
[157.24519348 -181.33540344]
[164.03227234 -194.71897888]
[171.73641968 -207.59651184]
[180.32008362 -219.90525818]
[189.74147034 -231.58526611]
[199.95465088 -242.57960510]
[210.90989685 -252.83471680]
[222.55380249 -262.30065918]
[234.82968140 -270.93130493]
[247.67768860 -278.68457031]
[261.03524780 -285.52273560]
[274.83724976 -291.41247559]
[289.01651001 -296.32504272]
[303.50390625 -300.23657227]
[318.22888184 -303.12799072]
[333.11965942 -304.98516846]
[348.10372925 -305.79910278]
[363.10806274 -305.56582642]
[378.05960083 -304.28646851]
[392.88543701 -301.96722412]
[407.51339722 -298.61944580]
[421.87219238 -294.25942993]
[435.89187622 -288.90838623]
[449.50411987 -282.59243774]
[462.64260864 -275.34231567]
[475.24337769 -267.19335938]
[487.24499512 -258.18527222]
[498.58901978 -248.36190796]
[509.22015381 -237.77116394]
[519.08660889 -226.46463013]
[528.14031982 -214.49739075]
[536.33715820 -201.92773438]
[543.63726807 -188.81690979]
[550.00500488 -175.22880554]
[555.40930176 -161.22959900]
[559.82397461 -146.88749695]
[563.22741699 -132.27239990]
[565.60302734 -117.45548248]
[566.93933105 -102.50893402]
[567.22973633 -87.50559235]
[566.47283936 -72.51853180]
[564.67230225 -57.62078857]
[561.83697510 -42.88492584]
[557.98065186 -28.38274574]
[553.12200928 -14.18489838]
[547.28491211 -0.36055648]
[540.49761963 13.02292919]
[532.79327393 25.90035439]
[524.20947266 38.20898056]
[514.78790283 49.88884354]
[504.57455444 60.88303757]
[493.61917114 71.13800049]
[481.97512817 80.60376740]
[469.69912720 89.23422241]
[456.85101318 96.98732758]
[443.49334717 103.82529449]
[429.69125366 109.71482849]
[415.51193237 114.62721252]
[401.02447510 118.53853607]
[386.29946899 121.42972565]
[371.40866089 123.28670502]
[356.42456055 124.10043335]
[341.42022705 123.86692810]
[326.46871948 122.58734131]
[311.64291382 120.26790619]
[297.01501465 116.91991425]
[282.65628052 112.55968475]
[268.63668823 107.20845795]
[255.02452087 100.89229584]
[241.88610840 93.64199066]
[229.28546143 85.49285126]
[217.28398132 76.48458099]
[205.94010925 66.66106415]
[195.30912781 56.07017136]
[185.44284058 44.76349640]
[173.48049927 53.81349564]
[161.51815796 62.86349487]
[159.73405457 77.60637665]
[147.73146057 86.95477295]
[132.27986145 84.98346710]
[126.79817963 98.83267212]
[111.12451935 100.98835754]
[99.22988892 110.12715912]
[87.40361786 119.35426331]
[75.57734680 128.58135986]
[63.75107956 137.80845642]
[51.92480850 147.03555298]
[49.09428024 153.01046753]
[44.37904358 156.18278503]
[39.60626984 156.35504150]
[34.53688431 163.95365906]
[27.26374245 165.26637268]
[15.03725624 173.95619202]
[2.81077027 182.64602661]
[-9.41571522 191.33584595]
[-21.64220047 200.02566528]
[-33.86868668 208.71549988]
[-46.09517288 217.40531921]
[-58.32165909 226.09513855]
[-70.54814148 234.78497314]
[-82.77462769 243.47479248]
[-95.00111389 252.16461182]
[-87.42049408 265.11959839]
[-81.01451874 278.69387817]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 208]
[68 207]
[69 206]
[70 205]
[71 204]
[72 203]
[73 202]
[74 201]
[75 200]
[76 199]
[77 198]
[78 196]
[79 193]
[80 192]
[81 191]
[82 190]
[83 189]
[85 188]
[87 186]
[90 183]
[91 182]
[92 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
