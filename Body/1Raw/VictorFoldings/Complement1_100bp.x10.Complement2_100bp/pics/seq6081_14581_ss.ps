%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[115.68630981 715.12780762]
[122.87158966 701.82879639]
[133.65875244 691.23974609]
[147.08862305 684.30218506]
[144.42283630 669.54095459]
[141.75703430 654.77972412]
[139.09123230 640.01855469]
[134.80905151 633.99487305]
[136.49736023 625.01782227]
[134.05162048 610.21850586]
[131.60589600 595.41925049]
[129.16017151 580.61999512]
[126.71444702 565.82073975]
[118.05067444 578.06567383]
[103.57539368 581.99841309]
[89.90650940 575.82092285]
[83.29325104 562.35742188]
[86.75910187 547.76336670]
[98.71953583 538.71081543]
[113.70639038 539.33856201]
[124.86876678 549.36126709]
[123.97595215 534.38781738]
[123.08313751 519.41442871]
[122.19032288 504.44100952]
[108.80976105 497.89685059]
[100.44574738 485.45098877]
[99.42766571 470.39013672]
[106.12885284 456.75228882]
[118.83948517 448.24423218]
[117.94667053 433.27081299]
[117.05385590 418.29742432]
[102.90067291 415.64935303]
[89.78646088 409.68154907]
[78.47798157 400.73794556]
[69.63761139 389.33660889]
[63.78455734 376.13970947]
[61.26433563 361.91519165]
[62.22841263 347.49182129]
[66.62507629 333.71121216]
[74.20221710 321.37844849]
[84.52175903 311.21524048]
[96.98500061 303.81759644]
[110.86734009 299.62084961]
[110.19755554 284.63580322]
[109.52777100 269.65075684]
[108.85798645 254.66572571]
[100.56010437 242.29664612]
[107.67347717 228.16474915]
[107.00369263 213.17970276]
[106.33390045 198.19467163]
[104.88448334 183.26486206]
[102.65937042 168.43081665]
[100.43424988 153.59677124]
[98.20913696 138.76272583]
[95.98401642 123.92868042]
[93.75889587 109.09464264]
[82.87976837 119.42152405]
[68.00258636 117.50597382]
[60.09424973 104.76006317]
[64.98449707 90.57959747]
[79.06842041 85.41790009]
[91.96295166 93.07859802]
[90.84729767 78.12014008]
[81.60102081 69.12741852]
[80.97974396 56.64552307]
[88.77178955 47.39292526]
[87.87897491 32.41951752]
[86.98616028 17.44611359]
[85.98189545 2.47976899]
[84.64366150 -12.46041584]
[83.08313751 -27.37902069]
[81.52261353 -42.29762650]
[79.96209717 -57.21622849]
[78.40157318 -72.13483429]
[76.84104919 -87.05343628]
[75.28052521 -101.97204590]
[73.72000122 -116.89064789]
[64.58898926 -129.81098938]
[70.96022034 -143.27413940]
[61.82920837 -156.19448853]
[68.20044708 -169.65763855]
[66.63992310 -184.57624817]
[57.50890732 -197.49658203]
[63.88014221 -210.95974731]
[62.31961823 -225.87835693]
[53.18860626 -238.79869080]
[59.55984116 -252.26184082]
[57.99931717 -267.18045044]
[43.03338242 -268.86416626]
[28.77943993 -273.72619629]
[15.90417194 -281.53909302]
[5.00977707 -291.93746948]
[-3.39419413 -304.43496704]
[-8.91467190 -318.44705200]
[-11.29345512 -333.31832886]
[-10.41928101 -348.35330200]
[-6.33303881 -362.84869385]
[0.77415144 -376.12655640]
[10.56987381 -387.56588745]
[22.59596443 -396.63159180]
[36.28993988 -402.89968872]
[51.01131058 -406.07702637]
[66.07153320 -406.01492310]
[80.76620483 -402.71633911]
[94.40804291 -396.33557129]
[106.35897827 -387.17102051]
[116.06005096 -375.65130615]
[123.05753326 -362.31530762]
[127.02412415 -347.78671265]
[127.77431488 -332.74505615]
[125.27300262 -317.89385986]
[119.63719177 -303.92779541]
[111.13046265 -291.50000000]
[100.15071106 -281.19180298]
[87.21146393 -273.48532104]
[72.91792297 -268.74096680]
[74.47844696 -253.82237244]
[83.49784088 -241.96911621]
[77.23822021 -227.43887329]
[78.79874420 -212.52026367]
[87.81813812 -200.66700745]
[81.55852509 -186.13676453]
[83.11904907 -171.21817017]
[92.13844299 -159.36489868]
[85.87882996 -144.83467102]
[94.89822388 -132.98141479]
[88.63860321 -118.45117188]
[90.19912720 -103.53256989]
[91.75965118 -88.61396027]
[93.32017517 -73.69535828]
[94.88069916 -58.77675247]
[96.44122314 -43.85814667]
[98.00174713 -28.93954468]
[99.56227112 -14.02093887]
[102.64238739 -10.37101746]
[103.46234131 -4.74743366]
[100.94035339 1.36412036]
[104.57263184 7.80060244]
[101.95956421 16.55329704]
[102.85237885 31.52670288]
[103.74519348 46.50011063]
[114.18403625 60.60675430]
[105.80575562 77.00449371]
[106.92140198 91.96295166]
[108.59294128 106.86952209]
[110.81806183 121.70356750]
[113.04317474 136.53761292]
[115.26829529 151.37165833]
[117.49340820 166.20570374]
[119.71852875 181.03973389]
[128.56364441 168.92512512]
[143.09587097 165.20835876]
[156.67126465 171.58868408]
[163.08334351 185.14910889]
[159.40058899 199.69000244]
[147.30670166 208.56344604]
[132.33085632 207.71261597]
[121.31893921 197.52488708]
[121.98873138 212.50991821]
[122.65851593 227.49496460]
[131.00430298 240.93588257]
[123.84302521 253.99594116]
[124.51280975 268.98098755]
[125.18259430 283.96603394]
[125.85237885 298.95104980]
[141.14791870 302.27383423]
[155.05523682 309.43148804]
[166.63211060 319.93261719]
[175.09587097 333.05944824]
[179.87631226 347.91708374]
[180.65412903 363.49429321]
[177.38221741 378.73242188]
[170.28852844 392.59747314]
[159.86010742 404.14999390]
[146.80975342 412.60900879]
[132.02726746 417.40460205]
[132.92007446 432.37799072]
[133.81289673 447.35140991]
[147.44448853 454.28875732]
[155.71879578 467.03366089]
[156.49761963 482.10879517]
[149.67182922 495.46038818]
[137.16372681 503.54821777]
[138.05654907 518.52160645]
[138.94935608 533.49499512]
[139.84217834 548.46844482]
[141.51371765 563.37500000]
[143.95944214 578.17425537]
[146.40516663 592.97351074]
[148.85089111 607.77282715]
[151.29663086 622.57208252]
[153.85246277 637.35272217]
[156.51824951 652.11395264]
[159.18405151 666.87518311]
[161.84983826 681.63641357]
[176.85800171 683.43823242]
[190.66761780 689.58520508]
[202.05075073 699.53088379]
[209.99520874 712.39074707]
[213.79460144 727.02142334]
[213.11105347 742.12188721]
[208.00537109 756.34942627]
[198.93154907 768.43902588]
[186.69641113 777.31555176]
[172.38790894 782.18975830]
[157.27835083 782.62829590]
[142.71124268 778.59210205]
[129.98190308 770.44006348]
[120.22220612 758.89709473]
[114.29998779 744.98962402]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 195]
[5 194]
[6 193]
[7 192]
[9 191]
[10 190]
[11 189]
[12 188]
[13 187]
[21 186]
[22 185]
[23 184]
[24 183]
[29 178]
[30 177]
[31 176]
[43 165]
[44 164]
[45 163]
[46 162]
[48 160]
[49 159]
[50 158]
[51 150]
[52 149]
[53 148]
[54 147]
[55 146]
[56 145]
[62 144]
[63 143]
[66 141]
[67 140]
[68 139]
[69 137]
[70 134]
[71 133]
[72 132]
[73 131]
[74 130]
[75 129]
[76 128]
[77 127]
[79 125]
[81 123]
[82 122]
[84 120]
[85 119]
[87 117]
[88 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
