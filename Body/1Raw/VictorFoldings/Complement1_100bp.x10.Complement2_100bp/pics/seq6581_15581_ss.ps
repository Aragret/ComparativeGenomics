%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[149.81843567 529.54473877]
[143.96041870 515.72802734]
[139.16412354 501.50787354]
[135.45703125 486.96572876]
[132.86035156 472.18481445]
[131.38899231 457.24987793]
[131.05136108 442.24642944]
[131.84938049 427.26043701]
[133.77850342 412.37768555]
[136.82768250 397.68347168]
[140.97943115 383.26196289]
[146.20997620 369.19570923]
[152.48936462 355.56536865]
[159.78161621 342.44894409]
[168.04496765 329.92160034]
[177.23208618 318.05508423]
[187.29034424 306.91735840]
[198.16212463 296.57223511]
[188.67323303 284.95498657]
[179.18434143 273.33770752]
[169.69543457 261.72045898]
[160.20654297 250.10317993]
[150.71763611 238.48591614]
[153.78862000 253.16819763]
[152.45529175 268.10882568]
[146.83299255 282.01528931]
[137.40811157 293.68453979]
[124.99598694 302.10708618]
[110.67039490 306.55426025]
[95.67064667 306.64138794]
[81.29437256 302.36087036]
[68.78525543 294.08306885]
[59.22546387 282.52407837]
[53.44201660 268.68386841]
[51.93523788 253.75973511]
[54.83547974 239.04278564]
[61.89184189 225.80618286]
[72.49387360 215.19500732]
[85.72440338 208.12725830]
[100.43885040 205.21435547]
[115.36427307 206.70828247]
[129.20947266 212.47981262]
[140.77433777 222.02703857]
[134.90538025 208.22286987]
[129.03640747 194.41868591]
[125.02096558 191.83309937]
[122.58713531 186.69760132]
[123.20500183 180.11505127]
[117.74964905 166.14225769]
[112.29428864 152.16946411]
[106.83893585 138.19667053]
[101.38357544 124.22386932]
[95.92822266 110.25106812]
[87.60652161 122.73102570]
[72.67456055 124.15811157]
[62.13962555 113.48032379]
[63.76767349 98.56893921]
[76.35857391 90.41606903]
[90.62957764 95.03057861]
[86.22857666 80.69072723]
[81.82758331 66.35088348]
[68.49328613 62.85983276]
[58.70288849 53.31171417]
[54.93896103 40.27705002]
[58.08189774 27.19018364]
[67.20676422 17.44447136]
[63.01975250 3.04068899]
[58.51936722 -1.80266166]
[57.32050323 -7.35781765]
[58.92937851 -11.85454559]
[55.17308044 -26.37660408]
[44.47580338 -33.58292770]
[41.64613724 -45.75571442]
[47.66977692 -56.24582291]
[44.13010406 -70.82219696]
[40.59043121 -85.39857483]
[37.05075836 -99.97494507]
[33.51108551 -114.55132294]
[18.52922249 -113.33057404]
[3.54085088 -114.46865845]
[-11.08492374 -117.93755341]
[-24.98793030 -123.65182495]
[-37.82579422 -131.47076416]
[-49.28236771 -141.20181274]
[-59.07553101 -152.60533142]
[-66.96411133 -165.40052795]
[-72.75384521 -179.27227783]
[-76.30216217 -193.87898254]
[-77.52167511 -208.86094666]
[-76.38235474 -223.84922791]
[-72.91225433 -238.47471619]
[-67.19683838 -252.37724304]
[-59.37684250 -265.21447754]
[-49.64484787 -276.67022705]
[-38.24050903 -286.46246338]
[-25.44467163 -294.34997559]
[-11.57244396 -300.13858032]
[3.03455782 -303.68569946]
[18.01662445 -304.90396118]
[33.00480652 -303.76339722]
[47.63000870 -300.29211426]
[61.53207016 -294.57553101]
[74.36864471 -286.75448608]
[85.82361603 -277.02154541]
[95.61489105 -265.61639404]
[103.50136566 -252.81990051]
[109.28881073 -238.94720459]
[112.83471680 -224.33990479]
[114.05175781 -209.35774231]
[112.90995789 -194.36964417]
[109.43744659 -179.74473572]
[103.71973419 -165.84313965]
[95.89762115 -153.00721741]
[86.16373444 -141.55305481]
[74.75778198 -131.76271057]
[61.96064377 -123.87729645]
[48.08745956 -118.09099579]
[51.62713242 -103.51461792]
[55.16680527 -88.93824768]
[58.70647812 -74.36186981]
[62.24615097 -59.78549576]
[75.02584839 -47.75859833]
[69.69513702 -30.13290596]
[73.45143890 -15.61084652]
[77.42353821 -1.14632225]
[81.61054993 13.25745964]
[97.22676086 18.31821442]
[106.84571838 31.82515335]
[106.51520538 48.57006454]
[96.16742706 61.94988251]
[100.56842804 76.28972626]
[104.96942139 90.62957764]
[109.90101624 104.79571533]
[115.35637665 118.76850891]
[120.81172943 132.74130249]
[126.26708984 146.71411133]
[131.72244263 160.68690491]
[137.17781067 174.65969849]
[142.84059143 188.54972839]
[148.70954895 202.35391235]
[154.57850647 216.15808105]
[162.33489990 228.99702454]
[171.82380676 240.61428833]
[181.31269836 252.23155212]
[190.80160522 263.84881592]
[200.29049683 275.46606445]
[209.77938843 287.08334351]
[222.08680725 278.49584961]
[235.00843811 270.86376953]
[248.47027588 264.23077393]
[262.39520264 258.63488770]
[276.70346069 254.10816956]
[291.31307983 250.67652893]
[306.14041138 248.35963440]
[321.10046387 247.17076111]
[336.10763550 247.11669922]
[351.07586670 248.19778442]
[365.91949463 250.40779114]
[380.55346680 253.73410034]
[394.89398193 258.15762329]
[408.85885620 263.65304565]
[422.36810303 270.18887329]
[435.34439087 277.72769165]
[447.71334839 286.22628784]
[459.40414429 295.63601685]
[470.34979248 305.90292358]
[480.48764038 316.96829224]
[489.75955200 328.76864624]
[498.11248779 341.23645020]
[505.49856567 354.30026245]
[511.87548828 367.88525391]
[517.20672607 381.91363525]
[521.46173096 396.30502319]
[524.61614990 410.97702026]
[526.65185547 425.84555054]
[527.55731201 440.82543945]
[527.32720947 455.83093262]
[525.96295166 470.77603149]
[523.47229004 485.57516479]
[519.86950684 500.14352417]
[515.17523193 514.39770508]
[509.41641235 528.25604248]
[502.62597656 541.63909912]
[494.84283447 554.47033691]
[486.11157227 566.67614746]
[476.48220825 578.18670654]
[466.00985718 588.93603516]
[454.75457764 598.86254883]
[442.78076172 607.90936279]
[430.15704346 616.02478027]
[416.95574951 623.16217041]
[403.25244141 629.28070068]
[389.12564087 634.34539795]
[374.65625000 638.32714844]
[359.92718506 641.20324707]
[345.02276611 642.95709229]
[330.02841187 643.57873535]
[315.02996826 643.06457520]
[300.11337280 641.41760254]
[285.36407471 638.64715576]
[270.86651611 634.76922607]
[256.70379639 629.80590820]
[242.95697021 623.78576660]
[229.70483398 616.74310303]
[217.02328491 608.71844482]
[204.98495483 599.75762939]
[193.65879822 589.91204834]
[183.10968018 579.23809814]
[173.39805603 567.79687500]
[164.57952881 555.65393066]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 147]
[19 146]
[20 145]
[21 144]
[22 143]
[23 142]
[43 141]
[44 140]
[45 139]
[48 138]
[49 137]
[50 136]
[51 135]
[52 134]
[53 133]
[59 132]
[60 131]
[61 130]
[66 126]
[67 125]
[70 124]
[71 123]
[74 121]
[75 120]
[76 119]
[77 118]
[78 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
