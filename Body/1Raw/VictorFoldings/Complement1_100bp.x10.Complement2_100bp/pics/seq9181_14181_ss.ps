%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[66.80783844 469.31469727]
[56.15834808 479.88531494]
[44.86613846 489.76638794]
[32.97576904 498.91891479]
[20.53417206 507.30676270]
[7.59044600 514.89685059]
[-5.80432653 521.65917969]
[-19.59728050 527.56713867]
[-33.73398209 532.59741211]
[-48.15863800 536.73004150]
[-62.81432343 539.94879150]
[-77.64319611 542.24096680]
[-92.58673096 543.59747314]
[-107.58596039 544.01300049]
[-122.58168030 543.48590088]
[-137.51470947 542.01824951]
[-152.32612610 539.61584473]
[-166.95745850 536.28814697]
[-181.35096741 532.04827881]
[-195.44985962 526.91302490]
[-209.19848633 520.90264893]
[-222.54257202 514.04083252]
[-235.42948914 506.35464478]
[-247.80833435 497.87448120]
[-259.63027954 488.63375854]
[-270.84869385 478.66897583]
[-281.41925049 468.01940918]
[-291.30023193 456.72714233]
[-300.45269775 444.83673096]
[-308.84048462 432.39511108]
[-316.43051147 419.45132446]
[-323.19281006 406.05651855]
[-329.10067749 392.26354980]
[-334.13082886 378.12680054]
[-338.26339722 363.70211792]
[-341.48208618 349.04641724]
[-343.77416992 334.21752930]
[-345.13061523 319.27398682]
[-345.54605103 304.27478027]
[-345.01889038 289.27905273]
[-343.55114746 274.34603882]
[-341.14865112 259.53463745]
[-337.82089233 244.90330505]
[-333.58096313 230.50982666]
[-328.44564819 216.41096497]
[-322.43518066 202.66236877]
[-315.57330322 189.31831360]
[-307.88705444 176.43144226]
[-299.40679932 164.05262756]
[-290.16601562 152.23072815]
[-280.20117188 141.01239014]
[-269.55157471 130.44189453]
[-258.25924683 120.56094360]
[-246.36878967 111.40854645]
[-233.92710876 103.02082062]
[-220.98330688 95.43087006]
[-207.58845520 88.66864777]
[-193.79544067 82.76084137]
[-179.65869141 77.73076630]
[-165.23399353 73.59827423]
[-150.57827759 70.37966919]
[-135.74937439 68.08766174]
[-120.80582428 66.73129272]
[-105.80659485 66.31591797]
[-90.81087494 66.84317780]
[-75.87786102 68.31098938]
[-61.06647491 70.71356201]
[-46.43517303 74.04140472]
[-32.04170227 78.28139496]
[-17.94286919 83.41678619]
[-4.19430923 89.42733002]
[9.14971352 96.28929138]
[22.03653717 103.97559357]
[34.41530228 112.45590210]
[46.23715973 121.69674683]
[57.45544434 131.66166687]
[68.10145569 121.09461212]
[78.74745941 110.52756500]
[89.39347076 99.96051788]
[99.63886261 89.00460815]
[109.46944427 77.67501831]
[119.30002594 66.34542084]
[129.13059998 55.01583099]
[138.96118164 43.68623734]
[148.79176331 32.35664368]
[158.62234497 21.02705193]
[168.45292664 9.69745827]
[157.86621094 -0.93851525]
[148.08412170 -12.31889915]
[139.15885925 -24.38297462]
[131.13801575 -37.06637192]
[124.06440735 -50.30141830]
[117.97577667 -64.01750183]
[112.90460205 -78.14144135]
[108.87793732 -92.59786987]
[105.91727448 -107.30966187]
[104.03840637 -122.19832611]
[103.25136566 -137.18441772]
[103.56033325 -152.18798828]
[104.96368408 -167.12896729]
[107.45391083 -181.92765808]
[111.01773834 -196.50508118]
[115.63614655 -210.78349304]
[121.28449249 -224.68667603]
[127.93264771 -238.14045715]
[135.54513550 -251.07307434]
[144.08134460 -263.41549683]
[153.49571228 -275.10189819]
[163.73803711 -286.06991577]
[174.75364685 -296.26101685]
[186.48377991 -305.62084961]
[198.86584473 -314.09945679]
[211.83378601 -321.65161133]
[225.31840515 -328.23703003]
[239.24774170 -333.82055664]
[253.54750061 -338.37237549]
[268.14138794 -341.86825562]
[282.95150757 -344.28952026]
[297.89886475 -345.62322998]
[312.90371704 -345.86230469]
[327.88598633 -345.00546265]
[342.76571655 -343.05725098]
[357.46356201 -340.02807617]
[371.90109253 -335.93411255]
[386.00125122 -330.79718018]
[399.68881226 -324.64471436]
[412.89074707 -317.50952148]
[425.53665161 -309.42968750]
[437.55902100 -300.44830322]
[448.89370728 -290.61331177]
[459.48022461 -279.97717285]
[469.26214600 -268.59661865]
[478.18722534 -256.53237915]
[486.20785522 -243.84886169]
[493.28121948 -230.61369324]
[499.36962891 -216.89752197]
[504.44058228 -202.77349854]
[508.46701050 -188.31700134]
[511.42742920 -173.60516357]
[513.30603027 -158.71646118]
[514.09283447 -143.73036194]
[513.78363037 -128.72679138]
[512.38006592 -113.78583527]
[509.88955688 -98.98719025]
[506.32550049 -84.40981293]
[501.70684814 -70.13149261]
[496.05828857 -56.22840118]
[489.40991211 -42.77471924]
[481.79721069 -29.84223175]
[473.26080322 -17.49994087]
[463.84622192 -5.81369638]
[453.60372925 5.15414953]
[442.58795166 15.34507751]
[430.85766602 24.70471382]
[418.47546387 33.18312073]
[405.50741577 40.73506165]
[392.02267456 47.32024384]
[378.09323120 52.90353394]
[363.79339600 57.45513535]
[349.19946289 60.95077133]
[334.38931274 63.37178802]
[319.44192505 64.70526123]
[304.43707275 64.94409180]
[289.45483398 64.08699036]
[274.57510376 62.13853455]
[259.87731934 59.10912323]
[245.43986511 55.01491928]
[231.33979797 49.87776566]
[217.65232849 43.72507095]
[204.45050049 36.58966446]
[191.80473328 28.50961876]
[179.78251648 19.52803993]
[169.95193481 30.85763168]
[160.12135315 42.18722534]
[150.29078674 53.51681900]
[140.46020508 64.84641266]
[130.62962341 76.17600250]
[120.79903412 87.50559998]
[110.96845245 98.83518982]
[125.88709259 100.39541626]
[134.09712219 112.94911957]
[129.54643250 127.24216461]
[115.58960724 132.73825073]
[102.51510620 125.38587952]
[99.96051788 110.60652924]
[89.31451416 121.17357635]
[78.66850281 131.74063110]
[68.02249146 142.30767822]
[77.90361786 153.59983826]
[87.05619812 165.49015808]
[95.44412231 177.93170166]
[103.03427124 190.87539673]
[109.79670715 204.27012634]
[115.70472717 218.06304932]
[120.73502350 232.19972229]
[124.86774445 246.62435913]
[128.08657837 261.28002930]
[130.37881470 276.10888672]
[131.73541260 291.05242920]
[132.15103149 306.05163574]
[131.62400818 321.04736328]
[130.15641785 335.98040771]
[127.75408936 350.79183960]
[124.42647552 365.42318726]
[120.18670654 379.81671143]
[115.05152893 393.91564941]
[109.04120636 407.66430664]
[102.17945099 421.00842285]
[94.49335480 433.89535522]
[86.01323700 446.27426147]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[76 188]
[77 187]
[78 186]
[79 185]
[80 179]
[81 178]
[82 177]
[83 176]
[84 175]
[85 174]
[86 173]
[87 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
