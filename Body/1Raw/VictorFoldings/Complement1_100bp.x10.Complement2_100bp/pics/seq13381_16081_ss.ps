%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[107.47717285 754.24841309]
[93.12362671 758.64642334]
[78.40810394 761.61633301]
[63.47234344 763.12957764]
[48.46018219 763.17150879]
[33.51619720 761.74176025]
[18.78431320 758.85412598]
[4.40640831 754.53643799]
[-9.47904491 748.83020020]
[-22.73832130 741.79046631]
[-35.24372101 733.48492432]
[-46.87480545 723.99365234]
[-57.51956558 713.40795898]
[-67.07547760 701.82989502]
[-75.45050812 689.37097168]
[-82.56400299 676.15112305]
[-88.34745789 662.29760742]
[-92.74516296 647.94396973]
[-95.71477509 633.22839355]
[-97.22769165 618.29260254]
[-97.26934052 603.28045654]
[-95.83931732 588.33648682]
[-92.95140076 573.60467529]
[-88.63339996 559.22686768]
[-82.92689514 545.34149170]
[-75.88685608 532.08239746]
[-67.58108521 519.57714844]
[-58.08955765 507.94625854]
[-47.50369644 497.30169678]
[-35.92544937 487.74603271]
[-23.46632576 479.37124634]
[-10.24631405 472.25802612]
[3.60726547 466.47482300]
[17.96099281 462.07742310]
[32.67662811 459.10809326]
[47.61244965 457.59548950]
[62.62461472 457.55413818]
[77.56854248 458.98446655]
[80.45381927 444.26455688]
[83.33908844 429.54467773]
[86.22435760 414.82476807]
[89.10963440 400.10488892]
[91.33474731 385.27084351]
[92.89527130 370.35223389]
[94.45579529 355.43362427]
[96.01631927 340.51504517]
[97.57684326 325.59643555]
[98.02344513 310.60308838]
[97.35366058 295.61804199]
[96.68387604 280.63299561]
[96.01409149 265.64794922]
[95.34430695 250.66291809]
[94.67452240 235.67788696]
[94.00473785 220.69284058]
[82.89806366 216.77803040]
[73.73508453 209.32551575]
[67.60379028 199.19012451]
[65.24231720 187.54695129]
[66.95014954 175.75514221]
[72.55033112 165.19923401]
[81.40752411 157.12658691]
[92.50000000 152.50000000]
[92.50000000 137.50000000]
[92.50000000 122.50000000]
[92.50000000 107.50000000]
[91.94178772 92.51039124]
[90.82614136 77.55194092]
[83.65720367 90.72791290]
[71.53212738 99.55868530]
[56.79208755 102.33918762]
[42.28314590 98.53253174]
[30.80675316 88.87372589]
[24.57882500 75.22774506]
[24.80187225 60.22940063]
[31.43282890 46.77464676]
[43.19136429 37.46138382]
[57.80708313 34.08785629]
[72.45792389 37.30543900]
[84.31504059 46.49286652]
[91.08931732 59.87742996]
[92.64984131 44.95882416]
[94.21036530 30.04021835]
[95.77088928 15.12161350]
[97.33140564 0.20300913]
[98.89192963 -14.71559525]
[98.89192963 -29.71559525]
[89.76091766 -42.63593292]
[96.13215637 -56.09909439]
[94.57163239 -71.01770020]
[93.01110840 -85.93630219]
[91.45058441 -100.85490417]
[89.89006042 -115.77351379]
[75.05748749 -118.68659973]
[61.74331284 -125.84371185]
[51.13143539 -136.60844421]
[44.16544724 -150.02360535]
[41.46476746 -164.89631653]
[43.26953506 -179.90412903]
[49.41926956 -193.71253967]
[59.36714172 -205.09371948]
[72.22859192 -213.03565979]
[86.85999298 -216.83216858]
[101.96032715 -216.14566040]
[116.18688965 -211.03720093]
[128.27465820 -201.96099854]
[137.14878845 -189.72412109]
[142.02021790 -175.41467285]
[142.45576477 -160.30500793]
[138.41670227 -145.73869324]
[130.26220703 -133.01095581]
[118.71733093 -123.25352478]
[104.80866241 -117.33403778]
[106.36918640 -102.41542816]
[107.92971039 -87.49682617]
[109.49023438 -72.57822418]
[111.05075836 -57.65961456]
[120.07015228 -45.80635452]
[113.81053925 -31.27611923]
[120.04431915 -44.91943359]
[130.97215271 -55.19476700]
[144.97294617 -60.57783508]
[159.96980286 -60.27009583]
[173.73799133 -54.31719589]
[184.23509216 -43.60221481]
[189.90393066 -29.71465874]
[189.90354919 -14.71465778]
[184.23403931 -0.82737738]
[173.73640442 9.88708782]
[159.96792603 15.83931160]
[144.97106934 16.14631462]
[130.97053528 10.76255798]
[120.04320526 0.48668766]
[113.81053925 -13.15507221]
[112.25001526 1.76353216]
[110.68949127 16.68213654]
[109.12896729 31.60074234]
[107.56844330 46.51934814]
[106.00791931 61.43795013]
[105.78459167 76.43628693]
[106.90024567 91.39474487]
[118.51731873 81.90561676]
[133.21083069 84.92237091]
[140.14926147 98.22117615]
[134.21786499 111.99864197]
[119.78903961 116.09853363]
[107.50000000 107.50000000]
[107.50000000 122.50000000]
[107.50000000 137.50000000]
[107.50000000 152.50000000]
[123.79301453 161.18127441]
[133.37936401 176.85906982]
[133.67878723 195.14787292]
[124.69478607 210.98297119]
[108.98977661 220.02305603]
[109.65956116 235.00810242]
[110.32934570 249.99313354]
[110.99913025 264.97817993]
[111.66891479 279.96322632]
[112.33869934 294.94824219]
[113.00848389 309.93328857]
[121.30820465 297.43872070]
[134.69902039 290.67956543]
[149.68060303 291.42266846]
[162.33680725 299.47378540]
[169.35931396 312.72839355]
[168.91249084 327.72174072]
[161.11309814 340.53460693]
[147.99990845 347.81774902]
[133.00067139 347.66735840]
[120.03613281 340.12277222]
[112.49544525 327.15695190]
[110.93492126 342.07556152]
[109.37440491 356.99417114]
[107.81388092 371.91275024]
[106.25335693 386.83135986]
[118.55747986 378.25183105]
[133.34805298 380.74966431]
[142.15234375 392.89398193]
[139.92687988 407.72796631]
[127.94648743 416.75402832]
[113.07408905 414.80166626]
[103.82952118 402.99017334]
[100.94425201 417.71005249]
[98.05898285 432.42993164]
[95.17370605 447.14984131]
[92.28843689 461.86972046]
[106.66651154 466.18685913]
[120.55219269 471.89254761]
[133.81175232 478.93176270]
[146.31748962 487.23681641]
[157.94894409 496.72763062]
[168.59413147 507.31286621]
[178.15049744 518.89050293]
[186.52603149 531.34912109]
[193.64006042 544.56872559]
[199.42407227 558.42193604]
[203.82234192 572.77545166]
[206.79254150 587.49090576]
[208.30606079 602.42663574]
[208.34831238 617.43878174]
[206.91888428 632.38281250]
[204.03155518 647.11474609]
[199.71412659 661.49273682]
[194.00817871 675.37829590]
[186.96867371 688.63769531]
[178.66340637 701.14324951]
[169.17233276 712.77453613]
[158.58689880 723.41949463]
[147.00904846 732.97564697]
[134.55024719 741.35095215]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 186]
[39 185]
[40 184]
[41 183]
[42 182]
[43 175]
[44 174]
[45 173]
[46 172]
[47 171]
[48 160]
[49 159]
[50 158]
[51 157]
[52 156]
[53 155]
[54 154]
[62 149]
[63 148]
[64 147]
[65 146]
[66 140]
[67 139]
[80 138]
[81 137]
[82 136]
[83 135]
[84 134]
[85 133]
[86 118]
[88 116]
[89 115]
[90 114]
[91 113]
[92 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
