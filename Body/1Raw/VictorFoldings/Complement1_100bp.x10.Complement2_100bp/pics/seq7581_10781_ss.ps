%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[108.95114899 280.08139038]
[107.28916168 265.16729736]
[106.69537354 250.17259216]
[107.17281342 235.17375183]
[108.71904755 220.24717712]
[111.32619476 205.46894836]
[114.98097229 190.91436768]
[119.66475677 176.65760803]
[125.35367584 162.77130127]
[132.01873779 149.32621765]
[139.62599182 136.39088440]
[127.27148438 127.88405609]
[114.91697693 119.37722778]
[102.56246185 110.87039948]
[90.14496613 102.45578003]
[77.66517639 94.13383484]
[65.18537903 85.81188965]
[52.70558929 77.48995209]
[40.22579575 69.16800690]
[24.91893005 72.05550385]
[12.38119411 63.43809509]
[9.72273254 48.82754517]
[-2.75706077 40.50559998]
[-15.23685455 32.18365479]
[-27.71664810 23.86171150]
[-36.84014130 35.77490234]
[-46.72326279 47.06587982]
[-57.32369232 57.68629074]
[-68.59603882 67.59066010]
[-80.49202728 76.73657227]
[-92.96071625 85.08486938]
[-105.94871521 92.59979248]
[-119.40041351 99.24916840]
[-133.25819397 105.00451660]
[-147.46272278 109.84120178]
[-161.95318604 113.73850250]
[-176.66751099 116.67973328]
[-191.54269409 118.65230560]
[-206.51504517 119.64776611]
[-221.52044678 119.66184998]
[-236.49464417 118.69450378]
[-251.37350464 116.74986267]
[-266.09332275 113.83625793]
[-280.59106445 109.96616364]
[-294.80465698 105.15615845]
[-308.67321777 99.42683411]
[-322.13739014 92.80271912]
[-335.13946533 85.31219482]
[-347.62380981 76.98731995]
[-359.53695679 67.86376190]
[-370.82788086 57.98057175]
[-381.44821167 47.38007736]
[-391.35250854 36.10767746]
[-400.49835205 24.21163368]
[-408.84658813 11.74289417]
[-416.36141968 -1.24515152]
[-423.01071167 -14.69688416]
[-428.76599121 -28.55470276]
[-433.60260010 -42.75926208]
[-437.49981689 -57.24974060]
[-440.44094849 -71.96408844]
[-442.41345215 -86.83928680]
[-443.40881348 -101.81164551]
[-443.42282104 -116.81704712]
[-442.45538330 -131.79122925]
[-440.51065063 -146.67008972]
[-437.59695435 -161.38989258]
[-433.72677612 -175.88761902]
[-428.91668701 -190.10116577]
[-423.18728638 -203.96971130]
[-416.56307983 -217.43382263]
[-409.07247925 -230.43586731]
[-400.74752808 -242.92015076]
[-391.62390137 -254.83323669]
[-381.74063110 -266.12408447]
[-371.14007568 -276.74438477]
[-359.86761475 -286.64862061]
[-347.97152710 -295.79440308]
[-335.50274658 -304.14254761]
[-322.51464844 -311.65731812]
[-309.06289673 -318.30651855]
[-295.20501709 -324.06170654]
[-281.00042725 -328.89822388]
[-266.50994873 -332.79534912]
[-251.79557800 -335.73641968]
[-236.92036438 -337.70880127]
[-221.94799805 -338.70410156]
[-206.94259644 -338.71801758]
[-191.96841431 -337.75048828]
[-177.08958435 -335.80566406]
[-162.36979675 -332.89187622]
[-147.87208557 -329.02163696]
[-133.65855408 -324.21145630]
[-119.79006195 -318.48196411]
[-106.32598877 -311.85769653]
[-93.32398987 -304.36700439]
[-80.83974457 -296.04199219]
[-68.92671967 -286.91827393]
[-57.63591385 -277.03497314]
[-47.01568985 -266.43435669]
[-37.11152267 -255.16181946]
[-27.96581841 -243.26567078]
[-19.61774635 -230.79684448]
[-12.10305214 -217.80870056]
[-5.45391512 -204.35688782]
[0.30119130 -190.49900818]
[5.13762331 -176.29438782]
[9.03466988 -161.80386353]
[11.97564316 -147.08949280]
[13.94795036 -132.21426392]
[14.94314384 -117.24189758]
[14.95696354 -102.23649597]
[13.98935032 -87.26231384]
[12.04444599 -72.38348389]
[9.13058090 -57.66371536]
[5.26023197 -43.16603851]
[0.44997260 -28.95253372]
[-5.27959871 -15.08407116]
[-11.90394592 -1.62003517]
[-19.39470482 11.38191891]
[-6.91491079 19.70386314]
[5.56488323 28.02580643]
[18.04467773 36.34775162]
[32.55455399 33.18562317]
[45.32938766 41.44747543]
[48.54773712 56.68821335]
[61.02753067 65.01015472]
[73.50732422 73.33209991]
[85.98712158 81.65404510]
[98.46691132 89.97599030]
[106.38734436 91.47243500]
[111.06929016 98.51589203]
[123.42379761 107.02272034]
[135.77830505 115.52954102]
[148.13281250 124.03636932]
[157.50317383 112.31504059]
[167.68585205 101.29204559]
[178.62896729 91.02357483]
[190.27674866 81.56193542]
[202.56982422 72.95535278]
[215.44558716 65.24768066]
[228.83839417 58.47819519]
[242.68000793 52.68139648]
[256.89990234 47.88682556]
[271.42559814 44.11890793]
[286.18310547 41.39684677]
[301.09719849 39.73451614]
[316.09185791 39.14038467]
[331.09072876 39.61747742]
[346.01733398 41.16336823]
[360.79562378 43.77017593]
[375.35028076 47.42461777]
[389.60714722 52.10807419]
[403.49359131 57.79667282]
[416.93881226 64.46143341]
[429.87432861 72.06838226]
[442.23422241 80.57876587]
[453.95547485 89.94921875]
[464.97839355 100.13198090]
[475.24676514 111.07517242]
[484.70831299 122.72301483]
[493.31481934 135.01617432]
[501.02239990 147.89198303]
[507.79177856 161.28485107]
[513.58843994 175.12651062]
[518.38293457 189.34643555]
[522.15075684 203.87217712]
[524.87268066 218.62968445]
[526.53491211 233.54377747]
[527.12890625 248.53846741]
[526.65173340 263.53732300]
[525.10571289 278.46389771]
[522.49877930 293.24218750]
[518.84423828 307.79681396]
[514.16064453 322.05364990]
[508.47195435 335.94003296]
[501.80709839 349.38522339]
[494.20004272 362.32067871]
[485.68954468 374.68048096]
[476.31903076 386.40167236]
[466.13616943 397.42453003]
[455.19290161 407.69284058]
[443.54498291 417.15429688]
[431.25177002 425.76068115]
[418.37588501 433.46817017]
[404.98297119 440.23742676]
[391.14126587 446.03402710]
[376.92129517 450.82836914]
[362.39553833 454.59606934]
[347.63800049 457.31790161]
[332.72390747 458.98001099]
[317.72921753 459.57391357]
[302.73037720 459.09658813]
[287.80380249 457.55047607]
[273.02554321 454.94342041]
[258.47091675 451.28875732]
[244.21412659 446.60510254]
[230.32777405 440.91629028]
[216.88264465 434.25131226]
[203.94725037 426.64416504]
[191.58749390 418.13357544]
[179.86637878 408.76296997]
[168.84362793 398.58001709]
[158.57540894 387.63668823]
[149.11402893 375.98867798]
[140.50773621 363.69540405]
[132.80035400 350.81945801]
[126.03118134 337.42651367]
[120.23470306 323.58474731]
[115.44045258 309.36474609]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 135]
[12 134]
[13 133]
[14 132]
[15 130]
[16 129]
[17 128]
[18 127]
[19 126]
[22 123]
[23 122]
[24 121]
[25 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
