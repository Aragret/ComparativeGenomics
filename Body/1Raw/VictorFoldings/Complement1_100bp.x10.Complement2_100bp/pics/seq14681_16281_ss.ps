%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUUxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[122.45333099 371.09286499]
[113.91928101 383.45510864]
[103.84458923 394.59762573]
[92.40167236 404.32977295]
[79.78630829 412.48498535]
[66.21437836 418.92376709]
[51.91811371 423.53588867]
[37.14213943 426.24249268]
[22.13929367 426.99719238]
[7.16629171 425.78713989]
[-7.52065563 422.63299561]
[-21.67023659 417.58874512]
[-35.04033279 410.74072266]
[-47.40216446 402.20608521]
[-58.54420471 392.13085938]
[-68.27579498 380.68746948]
[-76.43042755 368.07171631]
[-82.86854553 354.49948120]
[-87.48000336 340.20300293]
[-90.18588257 325.42691040]
[-90.93988037 310.42401123]
[-89.72910309 295.45108032]
[-86.57426453 280.76428223]
[-81.52935028 266.61492920]
[-74.68068695 253.24517822]
[-66.14545441 240.88374329]
[-56.06970596 229.74218750]
[-44.62585449 220.01113892]
[-32.00971985 211.85711670]
[-18.43717766 205.41963196]
[-4.14047337 200.80885315]
[10.63575840 198.10368347]
[25.63867760 197.35038757]
[40.61156464 198.56188965]
[55.29821014 201.71742249]
[60.33512497 187.58839417]
[65.37203979 173.45936584]
[70.40895844 159.33033752]
[67.39466858 144.74392700]
[79.31672668 134.34320068]
[74.41711426 123.28334045]
[78.49781799 111.47099304]
[89.88675690 105.41666412]
[77.36002350 113.66777802]
[62.39213181 114.64873505]
[48.89565659 108.10311127]
[40.39854431 95.74192047]
[39.12191391 80.79634857]
[45.39948273 67.17312622]
[57.59030151 58.43333817]
[72.50772095 56.86153793]
[86.25236511 62.86859512]
[95.23142242 74.88427734]
[97.09789276 89.76683807]
[104.37112427 76.64813995]
[111.64434814 63.52944946]
[118.91757965 50.41075516]
[126.19081116 37.29206085]
[133.46403503 24.17336655]
[140.73727417 11.05467319]
[140.66183472 -4.76635313]
[153.59994507 -12.14568806]
[145.81155396 -25.30958176]
[145.65890503 -40.50410461]
[153.08290100 -53.64757156]
[166.00250244 -61.25938416]
[180.89715576 -61.38155365]
[188.17039490 -74.50024414]
[195.44361877 -87.61894226]
[202.71684265 -100.73763275]
[198.58694458 -115.75701141]
[206.14991760 -128.95762634]
[220.49404907 -132.80229187]
[227.76727295 -145.92098999]
[235.04049683 -159.03968811]
[242.31373596 -172.15837097]
[249.58695984 -185.27706909]
[256.86019897 -198.39576721]
[264.13342285 -211.51446533]
[271.40664673 -224.63314819]
[258.84808350 -232.84806824]
[246.92268372 -241.95779419]
[235.69406128 -251.91372681]
[225.22213745 -262.66275024]
[215.56277466 -274.14746094]
[206.76753235 -286.30667114]
[198.88330078 -299.07543945]
[191.95217896 -312.38565063]
[186.01113892 -326.16632080]
[181.09187317 -340.34387207]
[177.22064209 -354.84268188]
[174.41807556 -369.58541870]
[172.69914246 -384.49340820]
[172.07301331 -399.48706055]
[172.54302979 -414.48645020]
[174.10668945 -429.41152954]
[176.75564575 -444.18261719]
[180.47575378 -458.72094727]
[185.24716187 -472.94894409]
[191.04444885 -486.79071045]
[197.83663940 -500.17236328]
[205.58752441 -513.02252197]
[214.25572205 -525.27258301]
[223.79501343 -536.85723877]
[234.15447998 -547.71466064]
[245.27885437 -557.78692627]
[257.10879517 -567.02032471]
[269.58114624 -575.36553955]
[282.62942505 -582.77801514]
[296.18395996 -589.21832275]
[310.17242432 -594.65197754]
[324.52023315 -599.05004883]
[339.15081787 -602.38903809]
[353.98608398 -604.65118408]
[368.94689941 -605.82434082]
[383.95343018 -605.90234375]
[398.92562866 -604.88470459]
[413.78359985 -602.77685547]
[428.44808960 -599.59008789]
[442.84082031 -595.34136963]
[456.88500977 -590.05340576]
[470.50576782 -583.75433350]
[483.63034058 -576.47784424]
[496.18878174 -568.26269531]
[508.11404419 -559.15277100]
[519.34246826 -549.19665527]
[529.81420898 -538.44750977]
[539.47338867 -526.96258545]
[548.26843262 -514.80328369]
[556.15246582 -502.03436279]
[563.08337402 -488.72402954]
[569.02416992 -474.94326782]
[573.94323730 -460.76562500]
[577.81420898 -446.26675415]
[580.61651611 -431.52398682]
[582.33520508 -416.61596680]
[582.96112061 -401.62228394]
[582.49084473 -386.62292480]
[580.92694092 -371.69787598]
[578.27777100 -356.92681885]
[574.55743408 -342.38854980]
[569.78576660 -328.16061401]
[563.98822021 -314.31896973]
[557.19586182 -300.93743896]
[549.44476318 -288.08740234]
[540.77630615 -275.83746338]
[531.23687744 -264.25296021]
[520.87719727 -253.39570618]
[509.75265503 -243.32362366]
[497.92257690 -234.09043884]
[485.45007324 -225.74545288]
[472.40170288 -218.33314514]
[458.84704590 -211.89311218]
[444.85848999 -206.45967102]
[430.51062012 -202.06184387]
[415.87997437 -198.72306824]
[401.04467773 -196.46118164]
[386.08386230 -195.28823853]
[371.07730103 -195.21049500]
[356.10513306 -196.22837830]
[341.24719238 -198.33645630]
[326.58276367 -201.52346802]
[312.19009399 -205.77243042]
[298.14596558 -211.06065369]
[284.52536011 -217.35992432]
[277.25210571 -204.24122620]
[269.97888184 -191.12252808]
[262.70565796 -178.00384521]
[255.43243408 -164.88514709]
[248.15919495 -151.76644897]
[240.88597107 -138.64776611]
[233.61273193 -125.52906799]
[237.95115662 -111.32646942]
[230.76194763 -97.91864014]
[215.83554077 -93.46440887]
[208.56231689 -80.34571075]
[201.28907776 -67.22702026]
[194.01585388 -54.10832214]
[201.80311584 -41.41091537]
[202.19180298 -26.42075539]
[194.97741699 -13.16107273]
[182.00953674 -5.24079132]
[166.71864319 -4.87245893]
[167.31430054 10.01023102]
[153.85595703 18.32790184]
[146.58273315 31.44659615]
[139.30950928 44.56529236]
[132.03627014 57.68398666]
[124.76304626 70.80268097]
[117.48981476 83.92137146]
[110.21658325 97.04006958]
[103.93922424 110.66338348]
[107.40732574 128.74801636]
[93.44575500 139.38011169]
[96.09976959 154.97712708]
[84.53798676 164.36724854]
[79.50107574 178.49627686]
[74.46415710 192.62530518]
[69.42723846 206.75433350]
[82.79798889 213.60110474]
[95.16062927 222.13456726]
[106.30363464 232.20872498]
[116.03631592 243.65118408]
[124.19213867 256.26614380]
[130.63156128 269.83776855]
[135.24436951 284.13381958]
[137.95166016 298.90966797]
[138.70709229 313.91247559]
[137.49774170 328.88552856]
[134.34429932 343.57263184]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 199]
[36 198]
[37 197]
[38 196]
[40 194]
[43 192]
[54 191]
[55 190]
[56 189]
[57 188]
[58 187]
[59 186]
[60 185]
[62 183]
[67 178]
[68 177]
[69 176]
[70 175]
[73 172]
[74 171]
[75 170]
[76 169]
[77 168]
[78 167]
[79 166]
[80 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
