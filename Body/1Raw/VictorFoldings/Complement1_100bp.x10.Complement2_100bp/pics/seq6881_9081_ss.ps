%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[71.77006531 442.02444458]
[62.61458588 453.91418457]
[52.64321899 465.12850952]
[41.90563965 475.61151123]
[30.45534325 485.31097412]
[18.34937859 494.17858887]
[5.64805365 502.17016602]
[-7.58535194 509.24588013]
[-21.28491020 515.37048340]
[-35.38237000 520.51348877]
[-49.80749512 524.64929199]
[-64.48842621 527.75720215]
[-79.35201263 529.82183838]
[-94.32421875 530.83282471]
[-109.33043671 530.78521729]
[-124.29591370 529.67913818]
[-139.14608765 527.52020264]
[-153.80699158 524.31909180]
[-168.20556641 520.09179688]
[-182.27008057 514.85937500]
[-195.93046570 508.64785767]
[-209.11868286 501.48825073]
[-221.76899719 493.41619873]
[-233.81840515 484.47189331]
[-245.20687866 474.69989014]
[-255.87767029 464.14892578]
[-265.77761841 452.87152100]
[-274.85742188 440.92385864]
[-283.07180786 428.36550903]
[-290.37991333 415.25897217]
[-296.74523926 401.66961670]
[-302.13616943 387.66506958]
[-306.52575684 373.31515503]
[-309.89221191 358.69131470]
[-312.21868896 343.86648560]
[-313.49368286 328.91442871]
[-313.71075439 313.90969849]
[-312.86889648 298.92703247]
[-310.97222900 284.04110718]
[-308.03027344 269.32601929]
[-304.05764771 254.85510254]
[-299.07415771 240.70046997]
[-293.10461426 226.93261719]
[-286.17877197 213.62016296]
[-278.33111572 200.82940674]
[-269.60076904 188.62408447]
[-260.03121948 177.06500244]
[-249.67012024 166.20973206]
[-238.56912231 156.11236572]
[-226.78350830 146.82322693]
[-214.37200928 138.38856506]
[-201.39645386 130.85040283]
[-187.92147827 124.24631500]
[-174.01422119 118.60919189]
[-159.74397278 113.96711731]
[-145.18182373 110.34321594]
[-130.40031433 107.75555420]
[-115.47309113 106.21701050]
[-100.47453308 105.73525238]
[-85.47934723 106.31268311]
[-70.56225586 107.94642639]
[-55.79755783 110.62834930]
[-41.25881958 114.34506989]
[-27.01847458 119.07809448]
[-13.14746475 124.80382538]
[0.28510273 131.49374390]
[13.21230698 139.11453247]
[25.56974602 147.62820435]
[37.29585266 156.99235535]
[47.45940018 145.96047974]
[57.62294769 134.92860413]
[67.78649139 123.89672089]
[77.95004272 112.86484528]
[88.11358643 101.83296967]
[98.11175537 90.65099335]
[107.94233704 79.32139587]
[117.77291870 67.99180603]
[111.68267822 56.26531982]
[109.94409943 43.19872284]
[112.74259949 30.35013962]
[119.72387695 19.24425888]
[130.03860474 11.19141483]
[142.44572449 7.13299513]
[155.46170044 7.53142738]
[167.53797913 12.31759453]
[177.70152283 1.28571761]
[187.86506653 -9.74615955]
[198.02862549 -20.77803612]
[187.76327515 -31.72450066]
[178.32435608 -43.39109039]
[169.76223755 -55.71555328]
[162.12258911 -68.63214111]
[155.44616699 -82.07192993]
[149.76861572 -95.96321106]
[145.12020874 -110.23187256]
[141.52575684 -124.80178070]
[139.00442505 -139.59519958]
[137.56968689 -154.53320312]
[137.22918701 -169.53608704]
[137.98472595 -184.52380371]
[139.83230591 -199.41638184]
[142.76203918 -214.13436890]
[146.75831604 -228.59922791]
[151.79978943 -242.73379517]
[157.85958862 -256.46264648]
[164.90536499 -269.71252441]
[172.89953613 -282.41275024]
[181.79942322 -294.49554443]
[191.55758667 -305.89648438]
[202.12191772 -316.55465698]
[213.43606567 -326.41329956]
[225.43968201 -335.41970825]
[238.06869507 -343.52590942]
[251.25573730 -350.68859863]
[264.93045044 -356.86959839]
[279.01986694 -362.03591919]
[293.44882202 -366.15997314]
[308.14028931 -369.21978760]
[323.01596069 -371.19903564]
[337.99639893 -372.08712769]
[353.00170898 -371.87933350]
[367.95181274 -370.57678223]
[382.76696777 -368.18640137]
[397.36810303 -364.72097778]
[411.67730713 -360.19897461]
[425.61828613 -354.64450073]
[439.11660767 -348.08721924]
[452.10025024 -340.56213379]
[464.49996948 -332.10937500]
[476.24960327 -322.77401733]
[487.28643799 -312.60589600]
[497.55160522 -301.65927124]
[506.99032593 -289.99252319]
[515.55224609 -277.66790771]
[523.19171143 -264.75119019]
[529.86785889 -251.31130981]
[535.54522705 -237.41992188]
[540.19335938 -223.15118408]
[543.78759766 -208.58122253]
[546.30865479 -193.78775024]
[547.74316406 -178.84973145]
[548.08343506 -163.84684753]
[547.32763672 -148.85914612]
[545.47979736 -133.96659851]
[542.54986572 -119.24865723]
[538.55334473 -104.78386688]
[533.51159668 -90.64938354]
[527.45159912 -76.92063141]
[520.40557861 -63.67086411]
[512.41125488 -50.97077179]
[503.51113892 -38.88811111]
[493.75277710 -27.48735428]
[483.18829346 -16.82932854]
[471.87396240 -6.97090006]
[459.87020874 2.03533292]
[447.24105835 10.14131737]
[434.05389404 17.30380249]
[420.37908936 23.48457527]
[406.28958130 28.65065575]
[391.86056519 32.77448273]
[377.16903687 35.83405304]
[362.29333496 37.81303787]
[347.31289673 38.70088577]
[332.30758667 38.49285507]
[317.35748291 37.19005966]
[302.54238892 34.79944229]
[287.94131470 31.33376884]
[273.63217163 26.81152153]
[259.69128418 21.25683403]
[246.19308472 14.69934082]
[233.20954895 7.17402983]
[220.80996704 -1.27894735]
[209.06050110 -10.61449051]
[198.89695740 0.41738716]
[188.73339844 11.44926453]
[178.56985474 22.48114204]
[185.25036621 37.99986649]
[184.47283936 54.93294525]
[176.34538269 69.87141418]
[162.46063232 79.78670502]
[145.58389282 82.64459229]
[129.10250854 77.82238770]
[119.27193451 89.15197754]
[109.44135284 100.48157501]
[108.61785889 105.66190338]
[104.95054626 110.01209259]
[99.14546204 111.99651337]
[88.98191833 123.02838898]
[78.81836700 134.06027222]
[68.65482330 145.09214783]
[58.49127579 156.12402344]
[48.32773209 167.15589905]
[58.61967850 178.07673645]
[68.11563873 189.69636536]
[76.76831055 201.95687866]
[84.53456879 214.79721069]
[91.37574768 228.15338135]
[97.25774384 241.95884705]
[102.15125275 256.14483643]
[106.03191376 270.64068604]
[108.88037872 285.37414551]
[110.68245697 300.27185059]
[111.42916870 315.25955200]
[111.11680603 330.26260376]
[109.74691010 345.20623779]
[107.32631683 360.01602173]
[103.86708832 374.61816406]
[99.38644409 388.93994141]
[93.90671539 402.90994263]
[87.45520020 416.45864868]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 192]
[70 191]
[71 190]
[72 189]
[73 188]
[74 187]
[75 184]
[76 183]
[77 182]
[85 176]
[86 175]
[87 174]
[88 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
