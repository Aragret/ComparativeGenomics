%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[36.12501144 760.59985352]
[21.71955681 764.79583740]
[7.09805202 768.16259766]
[-7.69181204 770.68914795]
[-22.60179138 772.36718750]
[-37.58325577 773.19134521]
[-52.58733368 773.15887451]
[-67.56508636 772.26989746]
[-82.46765900 770.52728271]
[-97.24645233 767.93670654]
[-111.85324097 764.50671387]
[-126.24039459 760.24841309]
[-140.36097717 755.17565918]
[-154.16894531 749.30511475]
[-167.61924744 742.65582275]
[-180.66801453 735.24951172]
[-193.27267456 727.11035156]
[-205.39212036 718.26489258]
[-216.98683167 708.74194336]
[-228.01896667 698.57263184]
[-238.45256042 687.79010010]
[-248.25357056 676.42944336]
[-257.39004517 664.52783203]
[-265.83215332 652.12402344]
[-273.55236816 639.25854492]
[-280.52551270 625.97326660]
[-286.72885132 612.31152344]
[-292.14215088 598.31799316]
[-296.74771118 584.03820801]
[-300.53057861 569.51879883]
[-303.47836304 554.80712891]
[-305.58145142 539.95111084]
[-306.83300781 524.99926758]
[-307.22894287 510.00039673]
[-306.76797485 495.00335693]
[-305.45156860 480.05712891]
[-303.28405762 465.21038818]
[-300.27249146 450.51162720]
[-296.42669678 436.00872803]
[-291.75924683 421.74908447]
[-286.28530884 407.77911377]
[-280.02276611 394.14447021]
[-272.99206543 380.88955688]
[-265.21612549 368.05764771]
[-256.72027588 355.69055176]
[-247.53228760 343.82867432]
[-237.68209839 332.51068115]
[-227.20184326 321.77346802]
[-216.12570190 311.65209961]
[-204.48979187 302.17953491]
[-192.33209229 293.38671875]
[-179.69224548 285.30230713]
[-166.61148071 277.95266724]
[-153.13247681 271.36178589]
[-139.29917908 265.55117798]
[-125.15672302 260.53973389]
[-110.75123596 256.34387207]
[-96.12970734 252.97723389]
[-81.33982086 250.45082092]
[-66.42983246 248.77287292]
[-51.44836044 247.94883728]
[-36.44428253 247.98144531]
[-21.46653366 248.87054443]
[-6.56397295 250.61328125]
[8.21479416 253.20393372]
[22.82155991 256.63406372]
[37.20867920 260.89248657]
[51.32922745 265.96530151]
[57.19818878 252.16113281]
[63.06715012 238.35694885]
[68.93611145 224.55278015]
[74.80506897 210.74859619]
[78.88474274 196.31405640]
[81.10985565 181.48001099]
[83.33497620 166.64596558]
[85.44960022 151.79576111]
[87.45361328 136.93023682]
[89.45762634 122.06470490]
[91.46163940 107.19918060]
[93.35492706 92.31914520]
[95.13739777 77.42543030]
[89.09481049 62.80360413]
[98.28968048 51.08594513]
[100.07214355 36.19222641]
[101.85461426 21.29850960]
[102.07794189 6.30017138]
[100.73970795 -8.64001369]
[99.29029083 -23.56982231]
[97.72976685 -38.48842621]
[96.16924286 -53.40703201]
[94.60871887 -68.32563782]
[79.72521210 -70.85225677]
[66.07579041 -77.30175018]
[54.67333984 -87.19551086]
[46.36398697 -99.79936981]
[41.76434708 -114.17803192]
[41.21574020 -129.26451111]
[44.75888062 -143.93927002]
[52.13084412 -157.11335754]
[62.78458023 -167.80917358]
[75.92950439 -175.23301697]
[90.59019470 -178.83398438]
[105.67871094 -178.34486389]
[120.07539368 -173.80194092]
[132.71191406 -165.54234314]
[142.65054321 -154.17898560]
[149.15379333 -140.55508423]
[151.73907471 -125.68166351]
[150.21452332 -110.66239929]
[144.69329834 -96.61182404]
[135.58508301 -84.57259369]
[123.56579590 -75.43808746]
[109.52732086 -69.88616180]
[111.08784485 -54.96755600]
[112.64836884 -40.04895020]
[114.20889282 -25.13034439]
[118.03120422 -18.80486298]
[115.67989349 -9.97824764]
[117.01812744 4.96193695]
[123.45434570 -8.58705235]
[134.53395081 -18.69854736]
[148.61334229 -23.87257004]
[163.60394287 -23.34158325]
[177.28198242 -17.18435669]
[187.61839294 -6.31427765]
[193.07983398 7.65614223]
[192.85614014 22.65447426]
[186.98048401 36.45580292]
[176.32449341 47.01278687]
[162.46891785 52.75936127]
[147.46916199 52.84304810]
[133.55032349 47.25144196]
[122.77719879 36.81401825]
[116.74832916 23.08097458]
[114.96586609 37.97469330]
[113.18339539 52.86840820]
[119.35347748 66.42493439]
[110.03111267 79.20789337]
[108.24864960 94.10160828]
[110.49381256 101.84317017]
[106.32716370 109.20319366]
[104.32315063 124.06871796]
[102.31913757 138.93424988]
[100.31512451 153.79977417]
[102.26996613 162.72257996]
[98.16901398 168.87107849]
[95.94390106 183.70512390]
[93.71878052 198.53916931]
[102.71830750 186.53880310]
[115.08959198 178.05639648]
[129.52706909 173.98712158]
[144.50712585 174.76039124]
[158.44888306 180.29461670]
[169.88101196 190.00576782]
[177.59706116 202.86898804]
[180.78276062 217.52679443]
[179.10188293 232.43232727]
[172.73184204 246.01254272]
[162.34486389 256.83432007]
[149.03710938 263.75558472]
[134.21299744 266.04592896]
[119.43694305 263.46365356]
[106.26829529 256.28128052]
[96.09677887 245.25674438]
[89.99580383 231.55352783]
[88.60925293 216.61756897]
[82.74028778 230.42173767]
[76.87133026 244.22592163]
[71.00236511 258.03009033]
[65.13340759 271.83425903]
[78.58375549 278.48342896]
[91.63257599 285.88964844]
[104.23730469 294.02868652]
[116.35681915 302.87408447]
[127.95159912 312.39691162]
[138.98382568 322.56616211]
[149.41749573 333.34863281]
[159.21859741 344.70916748]
[168.35516357 356.61071777]
[176.79736328 369.01446533]
[184.51768494 381.87991333]
[191.49093628 395.16513062]
[197.69438171 408.82678223]
[203.10778809 422.82031250]
[207.71347046 437.10003662]
[211.49644470 451.61944580]
[214.44433594 466.33111572]
[216.54756165 481.18707275]
[217.79924011 496.13888550]
[218.19528198 511.13778687]
[217.73442078 526.13482666]
[216.41813660 541.08105469]
[214.25074768 555.92779541]
[211.23928833 570.62664795]
[207.39361572 585.12951660]
[202.72625732 599.38922119]
[197.25244141 613.35919189]
[190.99000549 626.99395752]
[183.95941162 640.24890137]
[176.18356323 653.08087158]
[167.68783569 665.44799805]
[158.49992371 677.30993652]
[148.64982605 688.62805176]
[138.16964722 699.36529541]
[127.09358215 709.48681641]
[115.45775604 718.95947266]
[103.30012512 727.75238037]
[90.66033936 735.83685303]
[77.57963562 743.18658447]
[64.10067749 749.77758789]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 170]
[69 169]
[70 168]
[71 167]
[72 166]
[73 148]
[74 147]
[75 146]
[76 144]
[77 143]
[78 142]
[79 141]
[80 139]
[81 138]
[83 136]
[84 135]
[85 134]
[86 119]
[87 118]
[88 116]
[89 115]
[90 114]
[91 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
