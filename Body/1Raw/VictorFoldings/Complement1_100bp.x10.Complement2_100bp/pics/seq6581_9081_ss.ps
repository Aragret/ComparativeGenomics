%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[69.02892303 477.82037354]
[58.60354614 488.61334229]
[47.46593475 498.66970825]
[35.66801453 507.94256592]
[23.26479530 516.38867188]
[10.31410503 523.96868896]
[-3.12367439 530.64721680]
[-16.98588753 536.39312744]
[-31.20790291 541.17968750]
[-45.72341156 544.98455811]
[-60.46473312 547.78991699]
[-75.36313629 549.58276367]
[-90.34915161 550.35479736]
[-105.35292053 550.10223389]
[-120.30447388 548.82641602]
[-135.13410950 546.53326416]
[-149.77267456 543.23339844]
[-164.15193176 538.94226074]
[-178.20483398 533.67987061]
[-191.86584473 527.47070312]
[-205.07127380 520.34381104]
[-217.75956726 512.33227539]
[-229.87155151 503.47360229]
[-241.35075378 493.80899048]
[-252.14366150 483.38354492]
[-262.19995117 472.24588013]
[-271.47271729 460.44787598]
[-279.91876221 448.04461670]
[-287.49865723 435.09387207]
[-294.17712402 421.65603638]
[-299.92294312 407.79379272]
[-304.70941162 393.57174683]
[-308.51412964 379.05621338]
[-311.31942749 364.31488037]
[-313.11221313 349.41647339]
[-313.88406372 334.43041992]
[-313.63146973 319.42666626]
[-312.35552979 304.47512817]
[-310.06225586 289.64550781]
[-306.76232910 275.00695801]
[-302.47109985 260.62771606]
[-297.20858765 246.57487488]
[-290.99935913 232.91389465]
[-283.87234497 219.70851135]
[-275.86074829 207.02027893]
[-267.00195312 194.90835571]
[-257.33728027 183.42921448]
[-246.91177368 172.63636780]
[-235.77401733 162.58016968]
[-223.97598267 153.30746460]
[-211.57264709 144.86151123]
[-198.62185669 137.28169250]
[-185.18399048 130.60333252]
[-171.32168579 124.85758972]
[-157.09960938 120.07123566]
[-142.58406067 116.26659393]
[-127.84269714 113.46139526]
[-112.94426727 111.66873932]
[-97.95824432 110.89695740]
[-82.95447540 111.14967346]
[-68.00293732 112.42568970]
[-53.17333603 114.71907043]
[-38.53480911 118.01911163]
[-24.15561295 122.31044006]
[-10.10278988 127.57302856]
[3.55813956 133.78236389]
[16.76347923 140.90946960]
[29.45166206 148.92114258]
[41.56352615 157.77999878]
[51.22433853 146.30529785]
[60.88514709 134.83059692]
[70.54595947 123.35590363]
[80.20677185 111.88120270]
[89.86757660 100.40650177]
[92.23733521 92.70216370]
[99.75865173 88.83426666]
[109.58923340 77.50467682]
[119.41981506 66.17507935]
[122.62003326 50.68091583]
[136.80516052 46.13874054]
[146.63574219 34.80914688]
[156.46632385 23.47955322]
[145.79997253 12.92534924]
[135.84674072 1.69612741]
[126.64924622 -10.16002655]
[118.24687958 -22.59234238]
[110.67561340 -35.54758072]
[103.96788025 -48.97027206]
[98.15239716 -62.80292892]
[93.25406647 -76.98632050]
[89.29386902 -91.45970917]
[86.28875732 -106.16112518]
[84.25160217 -121.02760315]
[83.19112396 -135.99549866]
[83.11186981 -151.00068665]
[84.01417542 -165.97894287]
[85.89417267 -180.86611938]
[88.74382019 -195.59844971]
[92.55091095 -210.11286926]
[97.29914093 -224.34721375]
[102.96818542 -238.24053955]
[109.53375244 -251.73332214]
[116.96774292 -264.76782227]
[125.23831177 -277.28820801]
[134.31004333 -289.24084473]
[144.14410400 -300.57458496]
[154.69837952 -311.24087524]
[165.92765808 -321.19403076]
[177.78385925 -330.39147949]
[190.21623230 -338.79376221]
[203.17150879 -346.36495972]
[216.59423828 -353.07260132]
[230.42692566 -358.88800049]
[244.61035156 -363.78625488]
[259.08377075 -367.74636841]
[273.78518677 -370.75137329]
[288.65170288 -372.78845215]
[303.61959839 -373.84884644]
[318.62478638 -373.92800903]
[333.60302734 -373.02560425]
[348.49020386 -371.14553833]
[363.22250366 -368.29580688]
[377.73690796 -364.48861694]
[391.97122192 -359.74029541]
[405.86450195 -354.07119751]
[419.35726929 -347.50552368]
[432.39172363 -340.07147217]
[444.91204834 -331.80081177]
[456.86465454 -322.72900391]
[468.19833374 -312.89489746]
[478.86453247 -302.34057617]
[488.81765747 -291.11123657]
[498.01501465 -279.25497437]
[506.41720581 -266.82254028]
[513.98834229 -253.86721802]
[520.69592285 -240.44444275]
[526.51123047 -226.61172485]
[531.40936279 -212.42826843]
[535.36944580 -197.95483398]
[538.37432861 -183.25338745]
[540.41131592 -168.38688660]
[541.47161865 -153.41897583]
[541.55072021 -138.41378784]
[540.64825439 -123.43553925]
[538.76806641 -108.54838562]
[535.91821289 -93.81608582]
[532.11096191 -79.30171204]
[527.36254883 -65.06742096]
[521.69335938 -51.17417526]
[515.12762451 -37.68145752]
[507.69351196 -24.64704895]
[499.42279053 -12.12676620]
[490.35089111 -0.17422342]
[480.51672363 11.15939617]
[469.96231079 21.82555962]
[458.73291016 31.77859306]
[446.87661743 40.97587585]
[434.44415283 49.37802505]
[421.48876953 56.94905472]
[408.06594849 63.65655136]
[394.23318481 69.47179413]
[380.04971313 74.36987305]
[365.57626343 78.32981110]
[350.87478638 81.33466339]
[336.00827026 83.37155914]
[321.04037476 84.43177032]
[306.03515625 84.51075745]
[291.05694580 83.60819244]
[276.16979980 81.72792816]
[261.43750000 78.87802124]
[246.92315674 75.07067108]
[232.68890381 70.32218933]
[218.79568481 64.65290070]
[205.30299377 58.08709335]
[192.26863098 50.65287399]
[179.74839783 42.38208389]
[167.79591370 33.31013489]
[157.96533203 44.63972855]
[148.13475037 55.96931839]
[145.63768005 70.65311432]
[130.74940491 76.00566101]
[120.91882324 87.33525848]
[111.08824158 98.66484833]
[101.34227753 110.06731415]
[91.68146515 121.54201508]
[82.02066040 133.01670837]
[72.35984802 144.49140930]
[62.69903946 155.96611023]
[53.03822708 167.44081116]
[63.83127213 177.86611938]
[73.88771057 189.00366211]
[83.16064453 200.80151367]
[91.60684204 213.20468140]
[99.18692017 226.15531921]
[105.86554718 239.59304810]
[111.61157990 253.45523071]
[116.39821625 267.67721558]
[120.20315552 282.19268799]
[123.00864410 296.93399048]
[124.80160522 311.83239746]
[125.57368469 326.81838989]
[125.32127380 341.82217407]
[124.04555511 356.77374268]
[121.75247192 371.60339355]
[118.45272064 386.24197388]
[114.16168976 400.62124634]
[108.89937592 414.67419434]
[102.69032288 428.33523560]
[95.56347656 441.54071045]
[87.55207062 454.22906494]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 189]
[70 188]
[71 187]
[72 186]
[73 185]
[74 184]
[76 183]
[77 182]
[78 181]
[80 179]
[81 178]
[82 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
