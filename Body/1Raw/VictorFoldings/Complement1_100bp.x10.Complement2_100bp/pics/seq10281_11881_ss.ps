%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[43.24894333 572.95501709]
[31.14391899 581.86389160]
[17.82077026 588.82049561]
[3.59180713 593.66168213]
[-11.20942116 596.27398682]
[-26.23595238 596.59619141]
[-41.13554382 594.62066650]
[-55.55892563 590.39379883]
[-69.16799927 584.01464844]
[-81.64373779 575.63275146]
[-92.69370270 565.44458008]
[-102.05886078 553.68896484]
[-109.51968384 540.64147949]
[-114.90127563 526.60797119]
[-118.07748413 511.91744995]
[-118.97385406 496.91421509]
[-117.56938171 481.94998169]
[-113.89697266 467.37557983]
[-108.04273224 453.53259277]
[-100.14388275 440.74554443]
[-90.38558197 429.31417847]
[-78.99658203 419.50646973]
[-66.24385834 411.55230713]
[-52.42634964 405.63818359]
[-37.86796188 401.90270996]
[-22.90996361 400.43344116]
[-7.90299225 401.26483154]
[-4.79888201 386.58953857]
[-1.69477201 371.91424561]
[1.40933812 357.23895264]
[-3.52668643 343.18600464]
[6.89894533 331.28573608]
[10.00305557 316.61041260]
[13.10716534 301.93511963]
[16.21127510 287.25982666]
[19.31538582 272.58450317]
[22.41949654 257.90921021]
[25.52360535 243.23390198]
[28.51838112 228.53590393]
[31.40365219 213.81600952]
[34.28892517 199.09611511]
[37.17419815 184.37623596]
[28.07746506 196.30307007]
[16.72786331 206.11053467]
[3.60798573 213.38163757]
[-10.72430611 217.80717468]
[-25.65959549 219.19898987]
[-40.56282425 217.49789429]
[-54.80030441 212.77621460]
[-67.76664734 205.23472595]
[-78.91051483 195.19410706]
[-87.75807190 183.08126831]
[-93.93310547 169.41127014]
[-97.17305756 154.76535034]
[-97.34016418 139.76628113]
[-94.42732239 125.05182648]
[-88.55838013 111.24764252]
[-79.98288727 98.94069672]
[-69.06548309 88.65428162]
[-56.27037811 80.82579041]
[-42.14163208 75.78808594]
[-27.27999878 73.75537109]
[-12.31740856 74.81408691]
[2.10992479 78.91921234]
[15.38854313 85.89620209]
[26.95383263 95.44837952]
[36.31402969 107.16958618]
[43.07113647 120.56142426]
[46.93783951 135.05448914]
[47.74971771 150.03250122]
[45.47221375 164.85876465]
[54.07077789 152.56791687]
[62.66934204 140.27708435]
[71.26790619 127.98624420]
[79.86647034 115.69541168]
[88.46503448 103.40457153]
[96.87965393 90.98707581]
[105.10845947 78.44567108]
[113.33726501 65.90427399]
[121.56607819 53.36287308]
[119.71284485 40.59853363]
[126.82482910 30.32218170]
[138.64091492 27.73242950]
[147.05552673 15.31493378]
[147.42909241 10.10844421]
[149.55029297 5.97882128]
[152.71629333 3.41143751]
[156.13346863 2.54237080]
[158.75032043 -6.20919704]
[165.31822205 -9.59807205]
[174.45701599 -21.49270439]
[183.59582520 -33.38733673]
[192.73461914 -45.28197098]
[201.87342834 -57.17660522]
[211.01222229 -69.07123566]
[200.03138733 -79.30676270]
[190.07322693 -90.53974152]
[181.22793579 -102.66844940]
[173.57562256 -115.58304596]
[167.18559265 -129.16658020]
[162.11569214 -143.29600525]
[158.41186523 -157.84339905]
[156.10763550 -172.67698669]
[155.22387695 -187.66242981]
[155.76860046 -202.66403198]
[157.73686218 -217.54592896]
[161.11083984 -232.17332458]
[165.85998535 -246.41377258]
[171.94128418 -260.13830566]
[179.29965210 -273.22262573]
[187.86845398 -285.54821777]
[197.57009888 -297.00347900]
[208.31671143 -307.48464966]
[220.01098633 -316.89682007]
[232.54698181 -325.15472412]
[245.81120300 -332.18362427]
[259.68350220 -337.91983032]
[274.03823853 -342.31143188]
[288.74545288 -345.31860352]
[303.67190552 -346.91412354]
[318.68243408 -347.08355713]
[333.64108276 -345.82534790]
[348.41241455 -343.15093994]
[362.86264038 -339.08450317]
[376.86090088 -333.66290283]
[390.28039551 -326.93521118]
[402.99960327 -318.96234131]
[414.90335083 -309.81655884]
[425.88381958 -299.58062744]
[435.84155273 -288.34729004]
[444.68640137 -276.21826172]
[452.33825684 -263.30337524]
[458.72778320 -249.71961975]
[463.79718018 -235.58999634]
[467.50045776 -221.04248047]
[469.80416870 -206.20880127]
[470.68737793 -191.22332764]
[470.14208984 -176.22174072]
[468.17330933 -161.33992004]
[464.79876709 -146.71263123]
[460.04913330 -132.47236633]
[453.96731567 -118.74805450]
[446.60848999 -105.66401672]
[438.03921509 -93.33872986]
[428.33715820 -81.88382721]
[417.59014893 -71.40304565]
[405.89556885 -61.99130249]
[393.35925293 -53.73383331]
[380.09478760 -46.70542145]
[366.22229004 -40.96971512]
[351.86737061 -36.57866287]
[337.16006470 -33.57202911]
[322.23355103 -31.97704697]
[307.22302246 -31.80815887]
[292.26437378 -33.06689453]
[277.49316406 -35.74185181]
[263.04309082 -39.80880737]
[249.04502869 -45.23093414]
[235.62577820 -51.95911789]
[222.90686035 -59.93243408]
[213.76805115 -48.03779984]
[204.62925720 -36.14316940]
[195.49044800 -24.24853516]
[186.35165405 -12.35390282]
[177.21284485 -0.45927003]
[168.16284180 11.50306702]
[159.47302246 23.72955322]
[151.05841064 36.14704895]
[150.74162292 53.69317627]
[134.10746765 61.59168243]
[125.87866974 74.13307953]
[117.64985657 86.67448425]
[109.42105103 99.21588135]
[109.29704285 104.45979309]
[106.24378967 109.26094055]
[100.75586700 112.00313568]
[92.15730286 124.29397583]
[83.55873871 136.58480835]
[74.96018219 148.87564087]
[66.36161804 161.16648865]
[57.76305008 173.45732117]
[51.89408875 187.26150513]
[49.00881577 201.98139954]
[46.12354279 216.70127869]
[43.23827362 231.42117310]
[44.65855026 240.44451904]
[40.19890976 246.33801270]
[37.09479904 261.01330566]
[33.99068832 275.68862915]
[30.88657761 290.36392212]
[27.78246880 305.03921509]
[24.67835808 319.71453857]
[21.57424736 334.38983154]
[26.28824615 349.49243164]
[16.08464050 360.34304810]
[12.98053074 375.01834106]
[9.87642002 389.69366455]
[6.77231026 404.36895752]
[20.83060265 409.68542480]
[33.91252899 417.08566284]
[45.71142960 426.39624023]
[55.95071793 437.39883423]
[64.39037323 449.83557129]
[70.83255768 463.41491699]
[75.12625885 477.81857300]
[77.17082214 492.70883179]
[76.91831970 507.73669434]
[74.37467957 522.54986572]
[69.59951782 536.80114746]
[62.70478058 550.15637207]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 198]
[28 197]
[29 196]
[30 195]
[32 193]
[33 192]
[34 191]
[35 190]
[36 189]
[37 188]
[38 187]
[39 185]
[40 184]
[41 183]
[42 182]
[71 181]
[72 180]
[73 179]
[74 178]
[75 177]
[76 176]
[77 173]
[78 172]
[79 171]
[80 170]
[83 168]
[84 167]
[88 166]
[90 165]
[91 164]
[92 163]
[93 162]
[94 161]
[95 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
