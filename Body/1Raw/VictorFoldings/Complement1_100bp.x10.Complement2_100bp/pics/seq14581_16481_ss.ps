%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[153.07003784 655.23535156]
[143.03152466 644.06359863]
[134.44203186 631.74285889]
[127.43175507 618.45996094]
[122.10697174 604.41625977]
[118.54839325 589.82458496]
[116.80998230 574.90625000]
[116.91808319 559.88732910]
[118.87106323 544.99554443]
[122.63931274 530.45660400]
[128.16571045 516.49096680]
[135.36647034 503.31036377]
[144.13243103 491.11456299]
[154.33070374 480.08847046]
[165.80668640 470.39923096]
[178.38641357 462.19372559]
[191.87916565 455.59637451]
[206.08041382 450.70715332]
[202.97630310 436.03186035]
[199.87219238 421.35656738]
[196.76808167 406.68127441]
[193.66397095 392.00595093]
[190.55986023 377.33065796]
[187.45574951 362.65536499]
[183.69944763 348.13330078]
[179.29844666 333.79345703]
[174.89744568 319.45361328]
[170.49645996 305.11373901]
[165.77632141 290.87576294]
[160.73939514 276.74673462]
[155.70248413 262.61770630]
[139.05740356 262.17367554]
[123.82604980 255.35551453]
[112.35657501 243.18334961]
[106.42903900 227.50514221]
[106.97920990 210.71607971]
[113.95089722 195.39262390]
[126.30032349 183.89724731]
[120.84496307 169.92445374]
[115.38960266 155.95166016]
[109.93424988 141.97886658]
[104.47888947 128.00605774]
[98.50733185 114.24595642]
[87.08138275 106.18746185]
[87.96432495 92.23353577]
[81.48483276 78.70519257]
[75.00533295 65.17684937]
[68.52584076 51.64850235]
[62.04634094 38.12015533]
[61.82046127 53.11845398]
[57.92107773 67.60275269]
[50.58663940 80.68731689]
[40.26564789 91.57203674]
[27.58923531 99.59130096]
[13.33257198 104.25473022]
[-1.63254249 105.27715302]
[-16.39098549 102.59604645]
[-30.04027367 96.37535858]
[-41.74574661 86.99549103]
[-50.79161072 75.03002930]
[-56.62471008 61.21065903]
[-58.88834381 46.38244247]
[-57.44409180 31.45213318]
[-52.38027191 17.33272362]
[-44.00653839 4.88762093]
[-32.83494949 -5.12215185]
[-19.54864693 -12.08449364]
[-4.96009827 -15.57365417]
[10.03860283 -15.37626934]
[24.53028107 -11.50441074]
[37.62876129 -4.19484282]
[48.53306961 6.10545063]
[56.57641602 18.76663017]
[55.01589203 3.84802461]
[53.45537186 -11.07058048]
[41.21392441 -15.18477249]
[31.47313309 -23.59262848]
[25.65696526 -35.01835251]
[24.59796906 -47.74854279]
[28.41825104 -59.88910675]
[36.51657486 -69.64707947]
[47.66267776 -75.59540558]
[38.92039871 -88.78187561]
[45.68965912 -102.04936981]
[44.57400894 -117.00782776]
[43.45836258 -131.96627808]
[42.34271240 -146.92472839]
[41.22706223 -161.88319397]
[39.88882828 -176.82337952]
[38.32830811 -191.74197388]
[36.76778412 -206.66058350]
[21.88427734 -209.18719482]
[8.23485756 -215.63668823]
[-3.16759706 -225.53045654]
[-11.47694874 -238.13432312]
[-16.07658958 -252.51296997]
[-16.62519455 -267.59945679]
[-13.08205318 -282.27420044]
[-5.71009111 -295.44830322]
[4.94364357 -306.14413452]
[18.08857346 -313.56796265]
[32.74925613 -317.16894531]
[47.83777237 -316.67980957]
[62.23445511 -312.13687134]
[74.87097168 -303.87728882]
[84.80961609 -292.51391602]
[91.31286621 -278.89004517]
[93.89813995 -264.01660156]
[92.37359619 -248.99734497]
[86.85236359 -234.94676208]
[77.74415588 -222.90753174]
[65.72486115 -213.77304077]
[51.68638992 -208.22109985]
[53.24691010 -193.30250549]
[54.80743408 -178.38389587]
[57.88755035 -174.73397827]
[58.70750809 -169.11038208]
[56.18551636 -162.99884033]
[57.30116653 -148.04037476]
[58.41681290 -133.08192444]
[59.53246307 -118.12347412]
[60.64811325 -103.16502380]
[69.31059265 -91.04847717]
[62.62113190 -76.71105194]
[78.39199829 -69.80322266]
[88.54411316 -55.78723907]
[90.20761108 -38.47144318]
[82.83442688 -22.61752319]
[68.37397766 -12.63110352]
[69.93450165 2.28750181]
[71.49501801 17.20610619]
[75.57468414 31.64065933]
[82.05418396 45.16900635]
[88.53367615 58.69734955]
[95.01317596 72.22569275]
[101.49266815 85.75404358]
[112.91861725 93.81253815]
[112.03567505 107.76646423]
[119.40610504 94.70213318]
[134.19056702 92.16841125]
[145.49050903 102.03307343]
[144.97601318 117.02424622]
[133.02638245 126.09100342]
[118.45169067 122.55070496]
[123.90704346 136.52349854]
[129.36239624 150.49630737]
[134.81776428 164.46910095]
[140.27311707 178.44189453]
[153.70562744 177.96565247]
[166.60937500 181.64538574]
[177.73248291 189.10949707]
[186.00032043 199.61994934]
[190.61932373 212.14523315]
[191.15316772 225.46159363]
[187.56391907 238.27256775]
[180.21440125 249.33523560]
[169.83151245 257.58078003]
[174.86843872 271.70980835]
[179.90534973 285.83883667]
[183.88285828 289.21914673]
[185.95845032 293.37188721]
[186.15638733 297.44323730]
[184.83630371 300.71276855]
[189.23730469 315.05261230]
[193.63829041 329.39245605]
[198.03929138 343.73229980]
[206.00566101 331.02258301]
[220.59440613 327.53424072]
[233.44844055 335.26559448]
[237.20439148 349.78775024]
[229.71067810 362.78173828]
[215.26004028 366.80404663]
[202.13105774 359.55123901]
[205.23515320 374.22653198]
[208.33926392 388.90185547]
[211.44337463 403.57714844]
[214.54748535 418.25244141]
[217.65159607 432.92776489]
[220.75570679 447.60305786]
[235.72038269 446.32312012]
[250.72891235 446.89190674]
[265.55380249 449.30078125]
[279.97024536 453.51327515]
[293.75976562 459.46548462]
[306.71328735 467.06719971]
[318.63442993 476.20318604]
[329.34249878 486.73489380]
[338.67510986 498.50271606]
[346.49084473 511.32824707]
[352.67120361 525.01702881]
[357.12243652 539.36157227]
[359.77716064 554.14440918]
[360.59503174 569.14141846]
[359.56372070 584.12530518]
[356.69885254 598.86883545]
[352.04382324 613.14855957]
[345.66925049 626.74798584]
[337.67172241 639.46093750]
[328.17248535 651.09466553]
[317.31558228 661.47290039]
[305.26559448 670.43823242]
[292.20516968 677.85473633]
[278.33230591 683.61004639]
[263.85733032 687.61688232]
[248.99966431 689.81445312]
[233.98455811 690.16955566]
[219.03962708 688.67669678]
[204.39143372 685.35852051]
[190.26203918 680.26544189]
[176.86566162 673.47448730]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 179]
[19 178]
[20 177]
[21 176]
[22 175]
[23 174]
[24 173]
[25 166]
[26 165]
[27 164]
[28 163]
[29 159]
[30 158]
[31 157]
[38 148]
[39 147]
[40 146]
[41 145]
[42 144]
[43 138]
[45 136]
[46 135]
[47 134]
[48 133]
[49 132]
[73 131]
[74 130]
[75 129]
[82 124]
[84 122]
[85 121]
[86 120]
[87 119]
[88 118]
[89 115]
[90 114]
[91 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
