%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGGxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[114.31593323 221.91418457]
[116.15295410 207.01942444]
[119.13868713 192.31182861]
[123.25518036 177.87982178]
[128.47767639 163.81021118]
[134.77474976 150.18760681]
[142.10855103 137.09396362]
[129.62875366 128.77201843]
[117.14896393 120.45007324]
[104.66916656 112.12812805]
[91.94713593 104.18144226]
[78.99413300 96.61706543]
[66.04113770 89.05268860]
[60.82131577 89.02854156]
[56.55894470 87.18857574]
[53.78535461 84.20156860]
[52.68945694 80.85024261]
[40.08714294 72.71502686]
[27.48483276 64.57981110]
[14.88252068 56.44459915]
[2.28020883 48.30938339]
[-6.61083078 60.39616394]
[-16.22219276 71.91842651]
[-26.51812363 82.83331299]
[-37.46031952 93.10021210]
[-49.00807571 102.68093109]
[-61.11843109 111.53983307]
[-73.74633789 119.64395142]
[-86.84481812 126.96315765]
[-100.36514282 133.47019958]
[-114.25701141 139.14089966]
[-128.46875000 143.95413208]
[-142.94749451 147.89201355]
[-157.63937378 150.93988037]
[-172.48974609 153.08639526]
[-187.44334412 154.32359314]
[-202.44454956 154.64683533]
[-217.43757629 154.05494690]
[-232.36662292 152.55014038]
[-247.17614746 150.13796997]
[-261.81109619 146.82745361]
[-276.21697998 142.63088989]
[-290.34024048 137.56387329]
[-304.12829590 131.64527893]
[-317.52990723 124.89711761]
[-330.49520874 117.34448242]
[-342.97592163 109.01548767]
[-354.92568970 99.94110107]
[-366.29998779 90.15509033]
[-377.05654907 79.69385529]
[-387.15533447 68.59631348]
[-396.55877686 56.90375137]
[-405.23190308 44.65966415]
[-413.14245605 31.90959930]
[-420.26098633 18.70099258]
[-426.56103516 5.08297873]
[-432.01913452 -8.89378166]
[-436.61502075 -23.17729568]
[-440.33157349 -37.71442413]
[-443.15496826 -52.45108795]
[-445.07470703 -67.33246613]
[-446.08361816 -82.30320740]
[-446.17800903 -97.30760193]
[-445.35748291 -112.28984833]
[-443.62509155 -127.19419861]
[-440.98730469 -141.96520996]
[-437.45391846 -156.54794312]
[-433.03808594 -170.88813782]
[-427.75622559 -184.93244934]
[-421.62796021 -198.62864685]
[-414.67614746 -211.92575073]
[-406.92663574 -224.77430725]
[-398.40820312 -237.12654114]
[-389.15258789 -248.93646240]
[-379.19418335 -260.16015625]
[-368.57009888 -270.75588989]
[-357.31979370 -280.68420410]
[-345.48513794 -289.90817261]
[-333.11016846 -298.39352417]
[-320.24090576 -306.10864258]
[-306.92526245 -313.02487183]
[-293.21273804 -319.11645508]
[-279.15432739 -324.36071777]
[-264.80236816 -328.73815918]
[-250.21023560 -332.23251343]
[-235.43222046 -334.83078003]
[-220.52328491 -336.52328491]
[-205.53889465 -337.30374146]
[-190.53480530 -337.16921997]
[-175.56681824 -336.12020874]
[-160.69062805 -334.16067505]
[-145.96157837 -331.29788208]
[-131.43444824 -327.54244995]
[-117.16327667 -322.90835571]
[-103.20117188 -317.41287231]
[-89.60005951 -311.07641602]
[-76.41054535 -303.92254639]
[-63.68169403 -295.97793579]
[-51.46085739 -287.27206421]
[-39.79349518 -277.83737183]
[-28.72301483 -267.70892334]
[-18.29059601 -256.92443848]
[-8.53505135 -245.52397156]
[0.50732899 -233.55000305]
[8.80290699 -221.04702759]
[16.32082176 -208.06158447]
[23.03310585 -194.64196777]
[28.91478920 -180.83810425]
[33.94398880 -166.70133972]
[38.10200119 -152.28427124]
[41.37335587 -137.64053345]
[43.74588013 -122.82460022]
[45.21075439 -107.89157867]
[45.76251984 -92.89703369]
[45.39913177 -77.89674377]
[44.12194061 -62.94650269]
[41.93569565 -48.10193634]
[38.84852982 -33.41826248]
[34.87192535 -18.95010948]
[30.02068329 -4.75129557]
[24.31284523 9.12535477]
[17.76964569 22.62822151]
[10.41542435 35.70706940]
[23.01773643 43.84228516]
[35.62004852 51.97750092]
[48.22235870 60.11271667]
[60.82467270 68.24793243]
[73.60551453 76.09968567]
[86.55850983 83.66407013]
[99.51151276 91.22844696]
[102.51441956 90.70686340]
[105.77347565 91.26638794]
[108.88862610 93.00399017]
[111.42959595 95.86751556]
[112.99111176 99.64833832]
[125.47090912 107.97028351]
[137.95069885 116.29222107]
[150.43049622 124.61416626]
[159.69897461 112.81063080]
[169.85427856 101.76082611]
[180.83532715 91.53121185]
[192.57606506 82.18331146]
[205.00590515 73.77334595]
[218.05007935 66.35189819]
[231.63012695 59.96359253]
[245.66439819 54.64685822]
[260.06848145 50.43367004]
[274.75570679 47.34936142]
[289.63781738 45.41248703]
[304.62524414 44.63469315]
[319.62789917 45.02065659]
[334.55551147 46.56806183]
[349.31832886 49.26759720]
[363.82757568 53.10302734]
[377.99594116 58.05128860]
[391.73828125 64.08261871]
[404.97189331 71.16074371]
[417.61718750 79.24308777]
[429.59817505 88.28105927]
[440.84271240 98.22029114]
[451.28323364 109.00100708]
[460.85693359 120.55836487]
[469.50622559 132.82287598]
[477.17910767 145.72074890]
[483.82940674 159.17443848]
[489.41714478 173.10302734]
[493.90872192 187.42272949]
[497.27713013 202.04743958]
[499.50207520 216.88920593]
[500.57019043 231.85876465]
[500.47506714 246.86607361]
[499.21728516 261.82086182]
[496.80438232 276.63323975]
[493.25088501 291.21408081]
[488.57815552 305.47570801]
[482.81430054 319.33233643]
[475.99401855 332.70065308]
[468.15826416 345.50024414]
[459.35421753 357.65411377]
[449.63476562 369.08920288]
[439.05844116 379.73672485]
[427.68881226 389.53262329]
[415.59423828 398.41799927]
[402.84750366 406.33941650]
[389.52523804 413.24920654]
[375.70755005 419.10586548]
[361.47760010 423.87414551]
[346.92089844 427.52532959]
[332.12506104 430.03753662]
[317.17901611 431.39559937]
[302.17269897 431.59136963]
[287.19631958 430.62365723]
[272.33996582 428.49829102]
[257.69299316 425.22805786]
[243.34347534 420.83264160]
[229.37773132 415.33843994]
[215.87974548 408.77850342]
[202.93069458 401.19232178]
[190.60845947 392.62545776]
[178.98715210 383.12948608]
[168.13665771 372.76150513]
[158.12222290 361.58386230]
[149.00410461 349.66378784]
[140.83712769 337.07296753]
[133.67041016 323.88711548]
[127.54705048 310.18557739]
[122.50387573 296.05068970]
[118.57122040 281.56750488]
[115.77273560 266.82312012]
[114.12525177 251.90621948]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 138]
[8 137]
[9 136]
[10 135]
[11 130]
[12 129]
[13 128]
[17 127]
[18 126]
[19 125]
[20 124]
[21 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
