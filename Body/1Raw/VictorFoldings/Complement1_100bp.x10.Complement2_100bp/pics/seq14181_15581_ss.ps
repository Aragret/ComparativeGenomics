%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUGxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[49.38974380 805.66296387]
[34.39107895 806.02703857]
[19.39276123 805.64886475]
[4.43149662 804.52947998]
[-10.45610523 802.67156982]
[-25.23361015 800.07971191]
[-39.86485291 796.76019287]
[-54.31403351 792.72119141]
[-68.54579163 787.97253418]
[-82.52529144 782.52587891]
[-96.21833038 776.39453125]
[-109.59140015 769.59356689]
[-122.61177063 762.13952637]
[-135.24757385 754.05072021]
[-147.46789551 745.34692383]
[-159.24282837 736.04943848]
[-170.54356384 726.18096924]
[-181.34243774 715.76574707]
[-191.61302185 704.82922363]
[-201.33020020 693.39819336]
[-210.47016907 681.50054932]
[-219.01055908 669.16546631]
[-226.93049622 656.42315674]
[-234.21058655 643.30474854]
[-240.83300781 629.84234619]
[-246.78157043 616.06890869]
[-252.04170227 602.01818848]
[-256.60052490 587.72448730]
[-260.44689941 573.22283936]
[-263.57141113 558.54870605]
[-265.96640015 543.73803711]
[-267.62600708 528.82702637]
[-268.54620361 513.85217285]
[-268.72470093 498.85015869]
[-268.16104126 483.85766602]
[-266.85665894 468.91140747]
[-264.81472778 454.04791260]
[-262.04025269 439.30361938]
[-258.53997803 424.71453857]
[-254.32252502 410.31643677]
[-249.39819336 396.14450073]
[-243.77902222 382.23345947]
[-237.47875977 368.61730957]
[-230.51286316 355.32940674]
[-222.89833069 342.40225220]
[-214.65382385 329.86746216]
[-205.79951477 317.75573730]
[-196.35707092 306.09674072]
[-186.34959412 294.91894531]
[-175.80157471 284.24975586]
[-164.73884583 274.11523438]
[-153.18844604 264.54022217]
[-141.17866516 255.54814148]
[-128.73887634 247.16098022]
[-115.89954376 239.39927673]
[-102.69207764 232.28202820]
[-89.14878845 225.82666016]
[-75.30283356 220.04895020]
[-61.18808746 214.96302795]
[-46.83909607 210.58137512]
[-32.29097366 206.91468811]
[-17.57931900 203.97195435]
[-2.74013472 201.76036072]
[12.19026279 200.28533936]
[27.17533875 199.55047607]
[42.17841721 199.55758667]
[57.16279221 200.30664062]
[72.09178162 201.79582214]
[74.31690216 186.96177673]
[76.54201508 172.12773132]
[63.11177444 178.80819702]
[49.45135880 172.61198425]
[45.63072205 158.10671997]
[54.46629333 145.98513794]
[69.44482422 145.18283081]
[79.52421570 156.28962708]
[82.84647369 141.66217041]
[86.16873169 127.03470612]
[89.49098969 112.40724945]
[84.11772156 96.51686859]
[95.64781189 84.33355713]
[98.75192261 69.65824890]
[101.85603333 54.98294830]
[104.96014404 40.30764771]
[108.06425476 25.63234329]
[109.62477875 10.71373940]
[109.62477875 -4.28626108]
[109.62477875 -19.28626060]
[109.62477875 -34.28626251]
[109.62477875 -49.28626251]
[109.62477875 -64.28626251]
[109.62477875 -79.28626251]
[94.93619537 -82.63188171]
[81.36058044 -89.16260529]
[69.57888031 -98.55086517]
[60.18206406 -110.32573700]
[53.64146805 -123.89659882]
[50.28517151 -138.58274841]
[50.28152084 -153.64753723]
[53.63070297 -168.33531189]
[60.16471863 -181.90934753]
[69.55582428 -193.68876648]
[81.33297729 -203.08273315]
[94.90542603 -209.62002563]
[109.59238434 -212.97277832]
[124.65717316 -212.97277832]
[139.34413147 -209.62002563]
[152.91658020 -203.08273315]
[164.69372559 -193.68876648]
[174.08483887 -181.90934753]
[180.61885071 -168.33531189]
[183.96803284 -153.64753723]
[183.96438599 -138.58274841]
[180.60809326 -123.89659882]
[174.06748962 -110.32573700]
[164.67068481 -98.55086517]
[152.88897705 -89.16260529]
[139.31336975 -82.63188171]
[124.62477875 -79.28626251]
[124.62477875 -64.28626251]
[124.62477875 -49.28626251]
[124.62477875 -34.28626251]
[124.62477875 -19.28626060]
[124.62477875 -4.28626108]
[124.62477875 10.71373940]
[132.24411011 -2.20701027]
[144.18164062 -11.28971100]
[158.66650391 -15.18699932]
[173.54994202 -13.32073498]
[186.62411499 -5.96776676]
[195.94952393 5.78113556]
[200.14280701 20.18309212]
[198.58192444 35.10165787]
[191.49841309 48.32375336]
[179.94306946 57.88795853]
[165.63005066 62.37548065]
[150.68263245 61.12062454]
[137.31816101 54.30953598]
[127.51918793 42.95260239]
[122.73955536 28.73645401]
[119.63544464 43.41175461]
[116.53134155 58.08705902]
[113.42723083 72.76235962]
[110.32312012 87.43766022]
[116.07622528 97.56401825]
[113.58132935 108.94016266]
[104.11845398 115.72950745]
[100.79619598 130.35696411]
[97.47393036 144.98442078]
[94.15167236 159.61189270]
[91.37606049 174.35284424]
[89.15094757 189.18688965]
[86.92582703 204.02093506]
[101.63471985 206.97746277]
[116.17939758 210.65779114]
[130.52427673 215.05288696]
[144.63424683 220.15202332]
[158.47477722 225.94271851]
[172.01200867 232.41079712]
[185.21279907 239.54042053]
[198.04486084 247.31414795]
[210.47677612 255.71295166]
[222.47811890 264.71630859]
[234.01953125 274.30212402]
[245.07276917 284.44702148]
[255.61077881 295.12609863]
[265.60775757 306.31326294]
[275.03927612 317.98110962]
[283.88223267 330.10113525]
[292.11499023 342.64364624]
[299.71737671 355.57794189]
[306.67083740 368.87237549]
[312.95831299 382.49441528]
[318.56445312 396.41073608]
[323.47549438 410.58724976]
[327.67947388 424.98931885]
[331.16604614 439.58163452]
[333.92672729 454.32855225]
[335.95471191 469.19393921]
[337.24508667 484.14141846]
[337.79467773 499.13442993]
[337.60211182 514.13629150]
[336.66790771 529.11022949]
[334.99429321 544.01971436]
[332.58541870 558.82812500]
[329.44717407 573.49932861]
[325.58718872 587.99737549]
[321.01498413 602.28680420]
[315.74166870 616.33258057]
[309.78021240 630.10040283]
[303.14517212 643.55657959]
[295.85278320 656.66821289]
[287.92089844 669.40307617]
[279.36895752 681.73016357]
[270.21783447 693.61920166]
[260.48995972 705.04113770]
[250.20912170 715.96801758]
[239.40048218 726.37316895]
[228.09049988 736.23095703]
[216.30685425 745.51739502]
[204.07838440 754.20977783]
[191.43499756 762.28674316]
[178.40763855 769.72851562]
[165.02821350 776.51702881]
[151.32942200 782.63549805]
[137.34483337 788.06903076]
[123.10862732 792.80432129]
[108.65567017 796.82983398]
[94.02131653 800.13562012]
[79.24138641 802.71362305]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 153]
[69 152]
[70 151]
[76 150]
[77 149]
[78 148]
[79 147]
[81 144]
[82 143]
[83 142]
[84 141]
[85 140]
[86 125]
[87 124]
[88 123]
[89 122]
[90 121]
[91 120]
[92 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
