%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCCxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[122.06685638 909.10650635]
[107.24901581 906.75549316]
[92.56802368 903.66296387]
[78.06095123 899.83666992]
[63.76444626 895.28637695]
[49.71463394 890.02343750]
[35.94699478 884.06127930]
[22.49631310 877.41485596]
[9.39656544 870.10101318]
[-3.31915903 862.13824463]
[-15.61873722 853.54663086]
[-27.47109985 844.34790039]
[-38.84630585 834.56524658]
[-49.71562576 824.22338867]
[-60.05159378 813.34851074]
[-69.82810211 801.96801758]
[-79.02046204 790.11071777]
[-87.60544586 777.80651855]
[-95.56137085 765.08648682]
[-102.86813354 751.98278809]
[-109.50728607 738.52856445]
[-115.46204376 724.75769043]
[-120.71737671 710.70501709]
[-125.26000214 696.40606689]
[-129.07846069 681.89697266]
[-132.16307068 667.21429443]
[-134.50608826 652.39520264]
[-136.10154724 637.47711182]
[-136.94544983 622.49768066]
[-137.03565979 607.49475098]
[-136.37193298 592.50622559]
[-134.95596313 577.57000732]
[-132.79132080 562.72381592]
[-129.88346863 548.00512695]
[-126.23975372 533.45111084]
[-121.86939240 519.09857178]
[-116.78341675 504.98376465]
[-110.99466705 491.14233398]
[-104.51777649 477.60919189]
[-97.36910248 464.41860962]
[-89.56670380 451.60385132]
[-81.13029480 439.19729614]
[-72.08117676 427.23028564]
[-62.44221497 415.73309326]
[-52.23775482 404.73468018]
[-41.49357986 394.26290894]
[-30.23682404 384.34420776]
[-18.49592781 375.00360107]
[-6.30054760 366.26470947]
[6.31851006 358.14959717]
[19.32936668 350.67880249]
[32.69915771 343.87112427]
[46.39410782 337.74383545]
[60.37962341 332.31237793]
[74.62037659 327.59045410]
[89.08039093 323.59002686]
[103.72314453 320.32116699]
[118.51164246 317.79217529]
[116.72917175 302.89846802]
[114.94670868 288.00476074]
[113.16424561 273.11102295]
[111.38177490 258.21731567]
[102.18690491 246.49964905]
[108.22949219 231.87782288]
[106.44702911 216.98411560]
[94.61577606 208.00875854]
[92.59593201 192.92979431]
[102.09033203 180.58094788]
[100.30786133 165.68722534]
[91.11299133 153.96957397]
[97.15557861 139.34774780]
[87.96070862 127.63008881]
[94.00329590 113.00826263]
[85.77754974 101.70213318]
[91.10298920 88.77420044]
[89.32051849 73.88048553]
[87.53805542 58.98676682]
[85.75559235 44.09304810]
[83.86229706 29.21301460]
[74.35064697 16.57026863]
[80.31820679 2.92338324]
[78.31419373 -11.94214535]
[68.80253601 -24.58489227]
[74.77010345 -38.23177719]
[72.76609039 -53.09730530]
[65.10386658 -40.20194244]
[51.73416901 -33.40111923]
[36.79973984 -34.80214691]
[24.92817879 -43.97089767]
[19.79801369 -58.06633759]
[22.99888420 -72.72084045]
[33.53896332 -83.39354706]
[48.15229797 -86.77740479]
[62.31078339 -81.82389069]
[71.62735748 -70.06766510]
[71.62735748 -85.06766510]
[71.62735748 -100.06766510]
[71.62735748 -115.06766510]
[71.62735748 -130.06765747]
[71.62735748 -145.06765747]
[58.28622818 -152.67752075]
[50.55125809 -165.94650269]
[50.50311661 -181.30531311]
[58.15475082 -194.62252808]
[71.44790649 -202.31585693]
[86.80680084 -202.31585693]
[100.09996033 -194.62252808]
[107.75159454 -181.30531311]
[107.70345306 -165.94650269]
[99.96848297 -152.67752075]
[86.62735748 -145.06765747]
[86.62735748 -130.06765747]
[86.62735748 -115.06766510]
[86.62735748 -100.06766510]
[86.62735748 -85.06766510]
[86.62735748 -70.06766510]
[87.63161469 -55.10131836]
[89.63562775 -40.23579025]
[99.00394440 -28.65632629]
[93.17971802 -13.94615841]
[95.18373108 0.91936952]
[104.55204773 12.49883366]
[98.72782135 27.20900154]
[102.73677826 33.41787338]
[100.64930725 42.31058502]
[102.43177032 57.20429993]
[104.21424103 72.09801483]
[105.99670410 86.99173737]
[114.22245026 98.29786682]
[108.89701080 111.22579956]
[118.21938324 124.00875854]
[112.04930115 137.56527710]
[121.37166595 150.34823608]
[115.20158386 163.90476990]
[116.98404694 178.79847717]
[129.12437439 188.55810547]
[130.71987915 203.68785095]
[121.34074402 215.20164490]
[123.12320709 230.09536743]
[132.44557190 242.87832642]
[126.27549744 256.43484497]
[128.05795288 271.32855225]
[129.84042358 286.22229004]
[131.62289429 301.11599731]
[133.40536499 316.00970459]
[148.37298584 314.97753906]
[163.37358093 314.69869995]
[178.36923218 315.17388916]
[193.32208252 316.40194702]
[208.19432068 318.37973022]
[222.94842529 321.10229492]
[237.54708862 324.56271362]
[251.95344543 328.75225830]
[266.13110352 333.66033936]
[280.04425049 339.27459717]
[293.65774536 345.58081055]
[306.93719482 352.56304932]
[319.84906006 360.20370483]
[332.36068726 368.48345947]
[344.44052124 377.38137817]
[356.05804443 386.87500000]
[367.18386841 396.94036865]
[377.78991699 407.55203247]
[387.84939575 418.68316650]
[397.33688354 430.30569458]
[406.22842407 442.39022827]
[414.50155640 454.90625000]
[422.13537598 467.82211304]
[429.11059570 481.10525513]
[435.40963745 494.72207642]
[441.01651001 508.63821411]
[445.91711426 522.81848145]
[450.09906006 537.22705078]
[453.55175781 551.82751465]
[456.26651001 566.58306885]
[458.23645020 581.45635986]
[459.45660400 596.40979004]
[459.92388916 611.40570068]
[459.63711548 626.40618896]
[458.59701538 641.37322998]
[456.80621338 656.26916504]
[454.26925659 671.05633545]
[450.99252319 685.69726562]
[446.98428345 700.15515137]
[442.25469971 714.39337158]
[436.81570435 728.37591553]
[430.68099976 742.06756592]
[423.86614990 755.43371582]
[416.38830566 768.44055176]
[408.26641846 781.05523682]
[399.52096558 793.24591064]
[390.17401123 804.98175049]
[380.24923706 816.23315430]
[369.77166748 826.97167969]
[358.76779175 837.17022705]
[347.26538086 846.80297852]
[335.29351807 855.84564209]
[322.88241577 864.27532959]
[310.06344604 872.07086182]
[296.86898804 879.21240234]
[283.33239746 885.68200684]
[269.48782349 891.46325684]
[255.37023926 896.54162598]
[241.01535034 900.90429688]
[226.45939636 904.54016113]
[211.73913574 907.44006348]
[196.89175415 909.59667969]
[181.95478821 911.00463867]
[166.96594238 911.66027832]
[151.96307373 911.56195068]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 145]
[59 144]
[60 143]
[61 142]
[62 141]
[64 139]
[65 138]
[68 135]
[69 134]
[71 132]
[73 130]
[75 128]
[76 127]
[77 126]
[78 125]
[79 123]
[81 121]
[82 120]
[84 118]
[85 117]
[95 116]
[96 115]
[97 114]
[98 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
