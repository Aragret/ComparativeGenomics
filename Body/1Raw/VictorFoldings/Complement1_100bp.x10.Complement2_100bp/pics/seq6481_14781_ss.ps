%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[-3.15426636 763.97351074]
[-14.14943123 774.20513916]
[-26.31863022 783.00799561]
[-39.47738266 790.24859619]
[-53.42620850 795.81726074]
[-67.95364380 799.62951660]
[-82.83945465 801.62756348]
[-97.85797882 801.78118896]
[-112.78153229 800.08795166]
[-127.38388824 796.57354736]
[-141.44367981 791.29132080]
[-154.74774170 784.32128906]
[-167.09442139 775.76916504]
[-178.29652405 765.76452637]
[-188.18423462 754.45910645]
[-196.60765076 742.02423096]
[-203.43910217 728.64849854]
[-208.57498169 714.53454590]
[-211.93746948 699.89648438]
[-213.47557068 684.95617676]
[-213.16598511 669.94000244]
[-211.01338196 655.07580566]
[-207.05039978 640.58874512]
[-201.33714294 626.69848633]
[-193.96018982 613.61572266]
[-185.03140259 601.53857422]
[-174.68611145 590.65032959]
[-163.08116150 581.11590576]
[-150.39247131 573.07995605]
[-136.81242371 566.66418457]
[-122.54686737 561.96594238]
[-107.81206512 559.05645752]
[-92.83139801 557.97973633]
[-77.83197021 558.75225830]
[-63.04116058 561.36218262]
[-58.64016342 547.02233887]
[-54.23916626 532.68249512]
[-49.83816528 518.34265137]
[-62.45722580 511.82174683]
[-73.74536133 503.19375610]
[-83.35439301 492.72320557]
[-90.98767090 480.73150635]
[-96.40918732 467.58706665]
[-99.45095062 453.69393921]
[-100.01810455 439.47946167]
[-98.09195709 425.38107300]
[-93.73054504 411.83285522]
[-87.06690216 399.25213623]
[-78.30503082 388.02673340]
[-67.71360016 378.50289917]
[-55.61774445 370.97467041]
[-42.38908768 365.67477417]
[-28.43430328 362.76757812]
[-14.18262768 362.34368896]
[-0.07264950 364.41744995]
[4.75334835 350.21499634]
[3.92899895 342.87045288]
[9.75836754 335.83792114]
[14.79528427 321.70889282]
[19.83220100 307.57986450]
[16.81791115 292.99346924]
[28.73996735 282.59274292]
[33.77688599 268.46371460]
[38.81380081 254.33468628]
[43.85071564 240.20564270]
[48.88763428 226.07661438]
[53.92454910 211.94758606]
[58.96146393 197.81855774]
[55.94717407 183.23214722]
[67.86923218 172.83142090]
[72.90615082 158.70239258]
[77.73214722 144.49993896]
[74.28490448 130.00975037]
[85.89200592 119.25866699]
[77.28623962 107.34960175]
[77.28424072 92.65657806]
[85.88676453 80.74517059]
[99.83525848 76.12732697]
[96.71804047 60.61624908]
[107.99511719 50.88605118]
[112.60913086 36.61331940]
[109.49191284 21.10223961]
[120.76898956 11.37204170]
[125.38299561 -2.90069175]
[124.37442017 -9.43478012]
[126.49826813 -14.70605278]
[130.35269165 -17.52605438]
[127.69868469 -33.12306595]
[139.26046753 -42.51319122]
[135.52349854 -60.54418182]
[149.32522583 -71.38297272]
[154.15121460 -85.58542633]
[158.97721863 -99.78787994]
[158.77519226 -108.92007446]
[163.98223877 -114.16493225]
[169.01914978 -128.29396057]
[174.05607605 -142.42298889]
[179.09298706 -156.55201721]
[184.12989807 -170.68104553]
[171.02174377 -178.04882812]
[159.34739685 -187.52604675]
[149.44276428 -198.84002686]
[141.59280396 -211.66525269]
[136.02340698 -225.63270569]
[132.89479065 -240.34051514]
[132.29696655 -255.36550903]
[134.24716187 -270.27539062]
[138.68925476 -284.64120483]
[145.49542236 -298.04956055]
[154.46984863 -310.11468506]
[165.35432434 -320.48947144]
[177.83567810 -328.87539673]
[191.55480957 -335.03118896]
[206.11695862 -338.77972412]
[221.10317993 -340.01315308]
[236.08227539 -338.69598389]
[250.62324524 -334.86611938]
[264.30776978 -328.63375854]
[276.74206543 -320.17822266]
[287.56838989 -309.74276733]
[296.47525024 -297.62765503]
[303.20639038 -284.18148804]
[307.56811523 -269.79110718]
[309.43493652 -254.87054443]
[308.75317383 -239.84912109]
[305.54241943 -225.15901184]
[299.89505005 -211.22290039]
[291.97354126 -198.44175720]
[282.00582886 -187.18330383]
[270.27868652 -177.77146912]
[257.12957764 -170.47706604]
[242.93675232 -165.50996399]
[228.10862732 -163.01307678]
[213.07180786 -163.05822754]
[198.25892639 -165.64413452]
[193.22201538 -151.51510620]
[188.18510437 -137.38607788]
[183.14817810 -123.25704956]
[178.11126709 -109.12802124]
[173.17967224 -94.96188354]
[168.35368347 -80.75942993]
[163.52767944 -66.55696869]
[168.59141541 -55.57129288]
[164.68702698 -43.69949722]
[153.38949585 -37.47627258]
[156.40377808 -22.88986588]
[144.48173523 -12.48913860]
[139.65573120 1.71331751]
[135.04171753 15.98605061]
[138.48896790 30.47624588]
[126.88186646 41.22732544]
[122.26785278 55.50006104]
[125.71509552 69.99025726]
[114.10799408 80.74133301]
[122.71376038 92.65039825]
[122.71575928 107.34342194]
[114.11323547 119.25482941]
[100.16474152 123.87267303]
[103.28195953 139.38374329]
[92.00488281 149.11395264]
[93.01345062 155.64804077]
[90.88961029 160.91931152]
[87.03517914 163.73931885]
[81.99826050 177.86834717]
[84.65227509 193.46534729]
[73.09049225 202.85548401]
[68.05358124 216.98451233]
[63.01666260 231.11354065]
[57.97974777 245.24256897]
[52.94282913 259.37158203]
[47.90591431 273.50061035]
[42.86899567 287.62966919]
[45.52301407 303.22665405]
[33.96123123 312.61679077]
[28.92431450 326.74581909]
[23.88739777 340.87484741]
[18.95580292 355.04098511]
[14.12980652 369.24343872]
[27.88063049 377.09741211]
[39.84445572 387.46536255]
[49.56842422 399.95251465]
[56.68490982 414.08398438]
[60.92541885 429.32266235]
[62.13071442 445.08987427]
[60.25680161 460.78713989]
[55.37651825 475.81893921]
[47.67672729 489.61544800]
[37.45113754 501.65396118]
[25.08911896 511.47875977]
[11.06086922 518.71838379]
[-4.10047150 523.09967041]
[-19.81908035 524.45800781]
[-35.49832153 522.74359131]
[-39.89931870 537.08349609]
[-44.30031586 551.42333984]
[-48.70131302 565.76318359]
[-34.99289703 571.89984131]
[-22.14253426 579.67468262]
[-10.34503269 588.96972656]
[0.22075962 599.64416504]
[9.39466763 611.53613281]
[17.03761864 624.46539307]
[23.03374481 638.23583984]
[27.29214859 652.63885498]
[29.74827385 667.45593262]
[30.36488533 682.46258545]
[29.13263512 697.43127441]
[26.07020378 712.13507080]
[21.22401810 726.35101318]
[14.66754532 739.86370850]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 196]
[36 195]
[37 194]
[38 193]
[55 178]
[56 177]
[58 176]
[59 175]
[60 174]
[62 172]
[63 171]
[64 170]
[65 169]
[66 168]
[67 167]
[68 166]
[70 164]
[71 163]
[72 160]
[74 158]
[78 154]
[80 152]
[81 151]
[83 149]
[84 148]
[87 147]
[89 145]
[91 142]
[92 141]
[93 140]
[95 139]
[96 138]
[97 137]
[98 136]
[99 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
