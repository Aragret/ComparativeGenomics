%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxUUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[76.68009186 472.50814819]
[66.67502594 461.32238770]
[57.55558777 449.40353394]
[49.37528992 436.82159424]
[42.18214035 423.65036011]
[36.01835251 409.96713257]
[30.92009735 395.85223389]
[26.91729164 381.38848877]
[24.03342819 366.66073608]
[22.28543091 351.75546265]
[21.68355751 336.76013184]
[22.23134041 321.76269531]
[23.92556381 306.85122681]
[26.75628471 292.11315918]
[30.70689392 277.63507080]
[35.75420380 263.50186157]
[41.86859894 249.79650879]
[49.01419067 236.59941101]
[57.14905167 223.98803711]
[66.22544098 212.03639221]
[76.19009399 200.81460571]
[86.98452759 190.38853455]
[98.54540253 180.81938171]
[110.80487823 172.16326904]
[123.69099426 164.47102356]
[117.01080322 151.04064941]
[110.33060455 137.61027527]
[103.65041351 124.17990112]
[96.97022247 110.74951935]
[90.19022369 97.36924744]
[83.31081390 84.03981781]
[65.31401062 81.83238220]
[52.35856628 69.37300873]
[49.50100327 51.78650284]
[57.69916916 36.14484024]
[50.42594147 23.02614594]
[43.15271378 9.90745163]
[35.87948227 -3.21124220]
[28.60625267 -16.32993698]
[15.05232143 -9.89251232]
[1.12092590 -4.31885290]
[-13.13295364 0.36904547]
[-27.65306282 4.15268183]
[-42.38209534 7.01712418]
[-57.26192856 8.95106697]
[-72.23382568 9.94687843]
[-87.23871613 10.00062847]
[-102.21736908 9.11210442]
[-117.11067200 7.28481340]
[-131.85984802 4.52596664]
[-146.40669250 0.84645265]
[-160.69378662 -3.73920774]
[-174.66476440 -9.21291637]
[-188.26446533 -15.55307198]
[-201.43922424 -22.73465157]
[-214.13705444 -30.72931290]
[-226.30783081 -39.50550461]
[-237.90353394 -49.02858734]
[-248.87840271 -59.26098633]
[-259.18908691 -70.16230774]
[-268.79495239 -81.68953705]
[-277.65805054 -93.79718018]
[-285.74340820 -106.43745422]
[-293.01913452 -119.56046295]
[-299.45648193 -133.11442566]
[-305.03005981 -147.04585266]
[-309.71789551 -161.29975891]
[-313.50146484 -175.81988525]
[-316.36581421 -190.54893494]
[-318.29968262 -205.42877197]
[-319.29541016 -220.40068054]
[-319.34909058 -235.40556335]
[-318.46047974 -250.38421631]
[-316.63311768 -265.27749634]
[-313.87420654 -280.02667236]
[-310.19461060 -294.57348633]
[-305.60885620 -308.86056519]
[-300.13507080 -322.83151245]
[-293.79486084 -336.43118286]
[-286.61322021 -349.60589600]
[-278.61846924 -362.30371094]
[-269.84222412 -374.47442627]
[-260.31909180 -386.07009888]
[-250.08662415 -397.04489136]
[-239.18525696 -407.35552979]
[-227.65797424 -416.96133423]
[-215.55027771 -425.82437134]
[-202.90997314 -433.90966797]
[-189.78692627 -441.18530273]
[-176.23292542 -447.62258911]
[-162.30146790 -453.19610596]
[-148.04754639 -457.88385010]
[-133.52738953 -461.66732788]
[-118.79832458 -464.53161621]
[-103.91847992 -466.46542358]
[-88.94656372 -467.46105957]
[-73.94168091 -467.51464844]
[-58.96303558 -466.62597656]
[-44.06975174 -464.79852295]
[-29.32060432 -462.03952026]
[-14.77379894 -458.35986328]
[-0.48674765 -453.77404785]
[13.48416424 -448.30020142]
[27.08380127 -441.95989990]
[40.25849152 -434.77819824]
[52.95623398 -426.78338623]
[65.12692261 -418.00708008]
[76.72252655 -408.48388672]
[87.69728088 -398.25137329]
[98.00787354 -387.34991455]
[107.61360931 -375.82260132]
[116.47657776 -363.71487427]
[124.56180573 -351.07452393]
[131.83738708 -337.95141602]
[138.27459717 -324.39739990]
[143.84803772 -310.46591187]
[148.53570557 -296.21194458]
[152.31912231 -281.69177246]
[155.18333435 -266.96270752]
[157.11703491 -252.08283997]
[158.11262512 -237.11093140]
[158.16613770 -222.10604858]
[157.27737427 -207.12741089]
[155.44984436 -192.23413086]
[152.69078064 -177.48500061]
[149.01103210 -162.93821716]
[144.42514038 -148.65118408]
[138.95121765 -134.68029785]
[132.61085510 -121.08069611]
[125.42906952 -107.90604401]
[117.43420410 -95.20834351]
[108.65782166 -83.03769684]
[99.13455963 -71.44213867]
[88.90199280 -60.46744156]
[78.00050354 -50.15690994]
[66.47312164 -40.55123520]
[54.36534500 -31.68832779]
[41.72494888 -23.60316658]
[48.99817657 -10.48447132]
[56.27140427 2.63422227]
[63.54463577 15.75291634]
[70.81786346 28.87161064]
[82.95335388 28.54734802]
[94.14133453 33.44245529]
[102.23400879 42.68418503]
[105.64944458 54.55913162]
[103.68050385 66.83071136]
[96.64024353 77.16040802]
[103.51965332 90.48983765]
[109.72109985 95.63907623]
[110.40059662 104.06932831]
[117.08078766 117.49970245]
[123.76098633 130.93008423]
[130.44117737 144.36045837]
[137.12136841 157.79083252]
[151.03048706 152.15527344]
[165.33016968 147.60099792]
[179.93653870 144.15472412]
[194.76385498 141.83666992]
[209.72511292 140.66044617]
[224.73251343 140.63294983]
[239.69798279 141.75434875]
[254.53369141 144.01806641]
[269.15258789 147.41081238]
[283.46887207 151.91265869]
[297.39852905 157.49722290]
[310.85983276 164.13169861]
[323.77377319 171.77716064]
[336.06454468 180.38876343]
[347.66003418 189.91593933]
[358.49221802 200.30279541]
[368.49746704 211.48838806]
[377.61715698 223.40704346]
[385.79766846 235.98884583]
[392.99108887 249.15992737]
[399.15512085 262.84304810]
[404.25366211 276.95785522]
[408.25674438 291.42153931]
[411.14086914 306.14920044]
[412.88916016 321.05444336]
[413.49130249 336.04977417]
[412.94381714 351.04721069]
[411.24987793 365.95874023]
[408.41943359 380.69683838]
[404.46908569 395.17498779]
[399.42205811 409.30828857]
[393.30792236 423.01376343]
[386.16256714 436.21099854]
[378.02795410 448.82254028]
[368.95178223 460.77435303]
[358.98736572 471.99633789]
[348.19311523 482.42260742]
[336.63241577 491.99197388]
[324.37310791 500.64831543]
[311.48712158 508.34082031]
[298.05010986 515.02429199]
[284.14089966 520.65960693]
[269.84112549 525.21362305]
[255.23468018 528.65960693]
[240.40731812 530.97735596]
[225.44604492 532.15332031]
[210.43864441 532.18054199]
[195.47320557 531.05883789]
[180.63752747 528.79486084]
[166.01869202 525.40185547]
[151.70249939 520.89971924]
[137.77294922 515.31488037]
[124.31177521 508.68014526]
[111.39799500 501.03442383]
[99.10737610 492.42260742]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 155]
[26 154]
[27 153]
[28 152]
[29 151]
[30 149]
[31 148]
[35 142]
[36 141]
[37 140]
[38 139]
[39 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
