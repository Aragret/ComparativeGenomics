%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[126.21564484 591.07836914]
[115.69773102 580.37341309]
[106.03015137 568.89471436]
[97.26962280 556.70965576]
[89.46755981 543.88970947]
[82.66976166 530.51019287]
[76.91610718 516.64947510]
[72.24036407 502.38906860]
[68.66997528 487.81253052]
[66.22588348 473.00546265]
[64.92244720 458.05474854]
[64.76731110 443.04812622]
[65.76137543 428.07366943]
[67.89881897 413.21923828]
[71.16709137 398.57202148]
[75.54701996 384.21795654]
[81.01289368 370.24130249]
[87.53263092 356.72406006]
[95.06798553 343.74557495]
[103.57472992 331.38198853]
[113.00293732 319.70587158]
[123.29728699 308.78576660]
[134.39735413 298.68569946]
[146.23802185 289.46499634]
[158.74978638 281.17773438]
[171.85922241 273.87255859]
[165.58184814 260.24923706]
[159.30448914 246.62593079]
[153.02713013 233.00260925]
[146.74977112 219.37930298]
[134.39634705 211.05810547]
[135.64828491 195.28651428]
[129.37092590 181.66320801]
[123.09355927 168.03988647]
[109.07511139 163.13899231]
[102.51490784 149.41244507]
[107.75046539 134.74183655]
[101.47309875 121.11851501]
[85.86410522 115.75875092]
[78.84612274 100.82169342]
[84.68429565 85.38525391]
[78.20479584 71.85691071]
[71.72530365 58.32856369]
[65.24580383 44.80021667]
[60.93820953 41.85204697]
[58.44185257 37.93777847]
[57.82142258 33.90911865]
[58.79420471 30.52001381]
[46.27422333 20.84733963]
[48.41497040 6.10737753]
[42.54600906 -7.69679928]
[36.67704773 -21.50097656]
[30.39968872 -35.12429047]
[23.71949387 -48.55466843]
[17.03929901 -61.98504257]
[10.35910416 -75.41542053]
[3.67890930 -88.84579468]
[-3.00128531 -102.27616882]
[-9.68147945 -115.70655060]
[-23.72183228 -110.39174652]
[-38.22160339 -106.50134277]
[-53.03668594 -104.07400513]
[-68.01983643 -103.13385010]
[-83.02213287 -103.69022369]
[-97.89448547 -105.73760986]
[-112.48907471 -109.25563812]
[-126.66085052 -114.20936584]
[-140.26896667 -120.54954529]
[-153.17817688 -128.21316528]
[-165.26016235 -137.12405396]
[-176.39486694 -147.19366455]
[-186.47161865 -158.32189941]
[-195.39025879 -170.39817810]
[-203.06214905 -183.30245972]
[-209.41105652 -196.90650940]
[-214.37387085 -211.07510376]
[-217.90126038 -225.66743469]
[-219.95819092 -240.53846741]
[-220.52418518 -255.54042053]
[-219.59364319 -270.52416992]
[-217.17581177 -285.34078979]
[-213.29470825 -299.84304810]
[-207.98890686 -313.88681030]
[-201.31115723 -327.33248901]
[-193.32781982 -340.04644775]
[-184.11822510 -351.90234375]
[-173.77391052 -362.78231812]
[-162.39770508 -372.57827759]
[-150.10264587 -381.19281006]
[-137.01095581 -388.54031372]
[-123.25273132 -394.54779053]
[-108.96471405 -399.15554810]
[-94.28890991 -402.31771851]
[-79.37117767 -404.00292969]
[-64.35978699 -404.19442749]
[-49.40392303 -402.89031982]
[-34.65222931 -400.10351562]
[-20.25132370 -395.86175537]
[-6.34432793 -390.20721436]
[6.93053961 -383.19604492]
[19.44134331 -374.89794922]
[31.06373978 -365.39538574]
[41.68222046 -354.78283691]
[51.19124985 -343.16574097]
[59.49632263 -330.65954590]
[66.51489258 -317.38861084]
[72.17720795 -303.48477173]
[76.42699432 -289.08621216]
[79.22200775 -274.33609009]
[80.53446960 -259.38095093]
[80.35134125 -244.36944580]
[78.67444611 -229.45077515]
[75.52043915 -214.77322388]
[70.92066956 -200.48263550]
[64.92086792 -186.72105408]
[57.58064270 -173.62527466]
[48.97296143 -161.32540894]
[39.18336487 -149.94374084]
[28.30915451 -139.59336853]
[16.45840454 -130.37718201]
[3.74889612 -122.38674164]
[10.42909050 -108.95636749]
[17.10928535 -95.52599335]
[23.78948021 -82.09561157]
[30.46967506 -68.66523743]
[37.14986801 -55.23486328]
[43.83006287 -41.80448532]
[46.44160080 -40.78565598]
[48.80691910 -38.67097473]
[50.50660324 -35.54904175]
[51.16102982 -31.65850639]
[50.48122406 -27.36993599]
[56.35018539 -13.56575966]
[62.21914673 0.23841690]
[74.31934357 8.92372322]
[72.59838104 24.65105247]
[78.77415466 38.32072449]
[85.25364685 51.84906769]
[91.73313904 65.37741089]
[98.21263885 78.90576172]
[110.58345795 81.66555023]
[119.16040039 90.99773407]
[120.86886597 103.55698395]
[115.09642029 114.84115601]
[121.37377930 128.46446228]
[135.92755127 134.01654053]
[142.09962463 147.92193604]
[136.71687317 161.76252747]
[142.99423218 175.38583374]
[149.27160645 189.00915527]
[162.07402039 198.30477905]
[160.37309265 213.10194397]
[166.65045166 226.72525024]
[172.92781067 240.34857178]
[179.20516968 253.97189331]
[185.48252869 267.59521484]
[199.55326843 262.37628174]
[213.98222351 258.24978638]
[228.68472290 255.23991394]
[243.57447815 253.36434937]
[258.56411743 252.63409424]
[273.56567383 253.05343628]
[288.49111938 254.61991882]
[303.25286865 257.32434082]
[317.76428223 261.15084839]
[331.94015503 266.07696533]
[345.69738770 272.07376099]
[358.95516968 279.10610962]
[371.63574219 287.13269043]
[383.66467285 296.10638428]
[394.97137451 305.97457886]
[405.48947144 316.67935181]
[415.15728760 328.15786743]
[423.91802979 340.34277344]
[431.72033691 353.16256714]
[438.51840210 366.54199219]
[444.27230835 380.40255737]
[448.94833374 394.66290283]
[452.51901245 409.23937988]
[454.96337891 424.04638672]
[456.26708984 438.99707031]
[456.42251587 454.00369263]
[455.42871094 468.97817993]
[453.29156494 483.83264160]
[450.02355957 498.47991943]
[445.64392090 512.83404541]
[440.17831421 526.81085205]
[433.65881348 540.32818604]
[426.12371826 553.30682373]
[417.61721802 565.67059326]
[408.18920898 577.34686279]
[397.89508057 588.26721191]
[386.79519653 598.36743164]
[374.95471191 607.58837891]
[362.44311523 615.87585449]
[349.33380127 623.18127441]
[335.70376587 629.46173096]
[321.63293457 634.68041992]
[307.20388794 638.80664062]
[292.50134277 641.81622314]
[277.61154175 643.69152832]
[262.62188721 644.42150879]
[247.62031555 644.00183105]
[232.69490051 642.43505859]
[217.93322754 639.73040771]
[203.42189026 635.90362549]
[189.24609375 630.97723389]
[175.48898315 624.98016357]
[162.23132324 617.94757080]
[149.55091858 609.92077637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 156]
[27 155]
[28 154]
[29 153]
[30 152]
[32 150]
[33 149]
[34 148]
[37 145]
[38 144]
[41 140]
[42 139]
[43 138]
[44 137]
[48 136]
[50 134]
[51 133]
[52 132]
[53 127]
[54 126]
[55 125]
[56 124]
[57 123]
[58 122]
[59 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
