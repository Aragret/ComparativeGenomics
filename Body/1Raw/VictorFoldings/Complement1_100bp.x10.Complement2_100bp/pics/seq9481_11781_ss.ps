%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[6.85626841 402.03128052]
[3.34291387 416.62365723]
[-1.41187668 430.86001587]
[-7.37290001 444.63488770]
[-14.49602222 457.84634399]
[-22.72850609 470.39654541]
[-32.00939941 482.19259644]
[-42.26998520 493.14712524]
[-53.43430328 503.17904663]
[-65.41969299 512.21411133]
[-78.13741302 520.18536377]
[-91.49330902 527.03381348]
[-105.38849640 532.70880127]
[-119.72009277 537.16821289]
[-134.38198853 540.37915039]
[-149.26565552 542.31774902]
[-164.26086426 542.96972656]
[-179.25660706 542.33020020]
[-194.14186096 540.40393066]
[-208.80642700 537.20513916]
[-223.14172363 532.75756836]
[-237.04161072 527.09417725]
[-250.40316772 520.25677490]
[-263.12750244 512.29602051]
[-275.12036133 503.27093506]
[-286.29299927 493.24829102]
[-296.56268311 482.30227661]
[-305.85333252 470.51391602]
[-314.09622192 457.97055054]
[-321.23031616 444.76501465]
[-327.20275879 430.99505615]
[-331.96932983 416.76266479]
[-335.49478149 402.17318726]
[-337.75299072 387.33465576]
[-338.72723389 372.35693359]
[-338.41030884 357.35092163]
[-336.80456543 342.42767334]
[-333.92187500 327.69772339]
[-329.78356934 313.27011108]
[-324.42031860 299.25164795]
[-317.87182617 285.74615479]
[-310.18655396 272.85357666]
[-301.42141724 260.66943359]
[-291.64132690 249.28385925]
[-280.91867065 238.78120422]
[-269.33282471 229.23919678]
[-256.96960449 220.72850037]
[-243.92051697 213.31211853]
[-230.28218079 207.04496765]
[-216.15556335 201.97343445]
[-201.64527893 198.13508606]
[-186.85873413 195.55831909]
[-171.90542603 194.26223755]
[-156.89604187 194.25642395]
[-141.94172668 195.54090881]
[-127.15319824 198.10620117]
[-112.63993835 201.93330383]
[-98.50939941 206.99388123]
[-84.86621094 213.25045776]
[-71.81137085 220.65672302]
[-59.44154739 229.15783691]
[-47.84832001 238.69085693]
[-37.36081696 227.96647644]
[-26.87331581 217.24209595]
[-16.38581467 206.51771545]
[-5.89831400 195.79333496]
[4.58918715 185.06895447]
[15.07668781 174.34457397]
[25.56418991 163.62019348]
[25.74270248 151.52496338]
[34.39224243 142.50447083]
[47.26959610 141.77195740]
[57.91560364 131.20491028]
[68.56161499 120.63787079]
[62.70629501 104.84492493]
[64.33194733 88.08010101]
[73.11248016 73.70636749]
[87.28654480 64.60704041]
[104.01087952 62.60739899]
[119.93064880 68.10857391]
[130.25730896 57.22924042]
[140.50270081 46.27333069]
[150.66625977 35.24145508]
[160.82980347 24.20957565]
[170.99334717 13.17769909]
[156.00070190 12.70789433]
[145.63143921 1.86916018]
[145.82551575 -13.12958431]
[156.47178650 -23.69637680]
[171.47155762 -23.77807808]
[182.23229980 -13.32788849]
[182.59010315 1.66696453]
[193.69732666 -8.41417408]
[204.80456543 -18.49531364]
[215.91180420 -28.57645226]
[227.01902771 -38.65758896]
[238.12626648 -48.73873138]
[229.01756287 -60.66791534]
[220.95335388 -73.32659912]
[213.99172974 -86.62358093]
[208.18286133 -100.46305084]
[203.56860352 -114.74529266]
[200.18218994 -129.36740112]
[198.04803467 -144.22402954]
[197.18150330 -159.20811462]
[197.58885193 -174.21171570]
[199.26712036 -189.12670898]
[202.20425415 -203.84564209]
[206.37905884 -218.26246643]
[211.76145935 -232.27331543]
[218.31269836 -245.77720642]
[225.98553467 -258.67687988]
[234.72471619 -270.87933350]
[244.46726990 -282.29672241]
[255.14299011 -292.84674072]
[266.67495728 -302.45336914]
[278.98010254 -311.04742432]
[291.96972656 -318.56695557]
[305.55026245 -324.95776367]
[319.62387085 -330.17385864]
[334.08914185 -334.17761230]
[348.84182739 -336.94018555]
[363.77566528 -338.44171143]
[378.78305054 -338.67129517]
[393.75579834 -337.62734985]
[408.58612061 -335.31738281]
[423.16708374 -331.75802612]
[437.39367676 -326.97491455]
[451.16336060 -321.00256348]
[464.37695312 -313.88394165]
[476.93923950 -305.67034912]
[488.75970459 -296.42098999]
[499.75317383 -286.20251465]
[509.84045410 -275.08853149]
[518.94885254 -263.15908813]
[527.01275635 -250.50021362]
[533.97399902 -237.20304871]
[539.78253174 -223.36343384]
[544.39642334 -209.08106995]
[547.78247070 -194.45887756]
[549.91619873 -179.60218811]
[550.78234863 -164.61808777]
[550.37463379 -149.61450195]
[548.69598389 -134.69953918]
[545.75848389 -119.98067474]
[541.58331299 -105.56395721]
[536.20050049 -91.55326080]
[529.64892578 -78.04953003]
[521.97576904 -65.15007019]
[513.23626709 -52.94781494]
[503.49340820 -41.53068542]
[492.81741333 -30.98094749]
[481.28521729 -21.37460899]
[468.97985840 -12.78088570]
[455.99002075 -5.26169825]
[442.40930176 1.12877715]
[428.33557129 6.34449625]
[413.87020874 10.34787941]
[399.11743164 13.11008167]
[384.18356323 14.61120033]
[369.17620850 14.84041977]
[354.20346069 13.79608917]
[339.37319946 11.48573303]
[324.79232788 7.92599678]
[310.56585693 3.14252925]
[296.79632568 -2.83020353]
[283.58291626 -9.94916725]
[271.02084351 -18.16306877]
[259.20062256 -27.41272736]
[248.20739746 -37.63149643]
[237.10017395 -27.55035782]
[225.99293518 -17.46921730]
[214.88569641 -7.38807917]
[203.77847290 2.69305944]
[192.67123413 12.77419853]
[182.02522278 23.34124565]
[171.86167908 34.37312317]
[161.69813538 45.40499878]
[151.53459167 56.43687820]
[149.31436157 63.48616028]
[141.13665771 67.55590820]
[130.80998230 78.43524170]
[136.29974365 90.17031097]
[137.48141479 103.07196808]
[134.21478271 115.60904694]
[126.88751984 126.29363251]
[116.36922455 133.85768127]
[103.90822601 137.40347290]
[90.98339844 136.51019287]
[79.12866211 131.28387451]
[68.48265076 141.85092163]
[57.83664322 152.41796875]
[53.41819382 170.29417419]
[36.28857040 174.10769653]
[25.80106735 184.83207703]
[15.31356716 195.55645752]
[4.82606602 206.28083801]
[-5.66143513 217.00521851]
[-16.14893723 227.72958374]
[-26.63643837 238.45396423]
[-37.12393951 249.17834473]
[-27.33440018 260.55578613]
[-18.55916977 272.73269653]
[-10.86321831 285.61886597]
[-4.30352354 299.11895752]
[1.07134736 313.13296509]
[5.22160006 327.55712891]
[8.11650658 342.28469849]
[9.73463440 357.20657349]
[10.06400299 372.21234131]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 201]
[63 200]
[64 199]
[65 198]
[66 197]
[67 196]
[68 195]
[69 194]
[72 192]
[73 191]
[74 190]
[80 182]
[81 181]
[82 179]
[83 178]
[84 177]
[85 176]
[92 175]
[93 174]
[94 173]
[95 172]
[96 171]
[97 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
