%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[123.05023956 403.82723999]
[118.51381683 389.52145386]
[115.11380005 374.90386963]
[112.87116241 360.06457520]
[111.79971313 345.09506226]
[111.90607452 330.08764648]
[113.18959045 315.13482666]
[115.64233398 300.32882690]
[119.24919128 285.76089478]
[123.98792267 271.52084351]
[129.82931519 257.69650269]
[136.73735046 244.37310791]
[144.66944885 231.63278198]
[153.57669067 219.55407715]
[163.40415955 208.21145630]
[174.09127808 197.67486572]
[164.43046570 186.20016479]
[154.76965332 174.72546387]
[137.97109985 169.64848328]
[134.89447021 151.49314880]
[120.70933533 146.95097351]
[117.50911713 131.45681763]
[107.67853546 120.12722015]
[97.84796143 108.79762268]
[94.07857513 107.98268890]
[90.68670654 105.51022339]
[88.40456390 101.58608246]
[87.84517670 96.73562622]
[78.53029633 84.97837067]
[70.74828339 80.19527435]
[69.16581726 72.97602081]
[60.02701569 61.08139038]
[50.88821411 49.18675613]
[41.66111374 37.36048889]
[32.34622955 25.60323524]
[23.03134918 13.84598446]
[13.71646595 2.08873343]
[1.35255075 10.59205914]
[-11.55721664 18.24129868]
[-24.95393181 25.00154686]
[-38.77647018 30.84195900]
[-52.96175766 35.73588943]
[-67.44507599 39.66100311]
[-82.16033173 42.59939575]
[-97.04039001 44.53765488]
[-112.01734924 45.46693802]
[-127.02288055 45.38301086]
[-141.98851013 44.28624725]
[-156.84594727 42.18165588]
[-171.52742004 39.07884216]
[-185.96591187 34.99195862]
[-200.09558105 29.93965721]
[-213.85191345 23.94498634]
[-227.17216492 17.03530312]
[-239.99555969 9.24213123]
[-252.26358032 0.60103232]
[-263.92025757 -8.84856796]
[-274.91238403 -19.06355095]
[-285.18984985 -29.99731064]
[-294.70568848 -41.59995651]
[-303.41656494 -53.81854630]
[-311.28265381 -66.59732819]
[-318.26812744 -79.87800598]
[-324.34106445 -93.59996796]
[-329.47378540 -107.70060730]
[-333.64285278 -122.11559296]
[-336.82928467 -136.77914429]
[-339.01849365 -151.62435913]
[-340.20050049 -166.58349609]
[-340.36990356 -181.58830261]
[-339.52597046 -196.57031250]
[-337.67251587 -211.46116638]
[-334.81802368 -226.19293213]
[-330.97549438 -240.69837952]
[-326.16244507 -254.91131592]
[-320.40087891 -268.76690674]
[-313.71707153 -282.20190430]
[-306.14151001 -295.15505981]
[-297.70877075 -307.56719971]
[-288.45730591 -319.38177490]
[-278.42935181 -330.54479980]
[-267.67068481 -341.00537109]
[-256.23034668 -350.71575928]
[-244.16056824 -359.63165283]
[-231.51640320 -367.71237183]
[-218.35556030 -374.92108154]
[-204.73808289 -381.22482300]
[-190.72610474 -386.59487915]
[-176.38356018 -391.00671387]
[-161.77589417 -394.44024658]
[-146.96975708 -396.87976074]
[-132.03271484 -398.31417847]
[-117.03290558 -398.73690796]
[-102.03878021 -398.14602661]
[-87.11875153 -396.54425049]
[-72.34089661 -393.93884277]
[-57.77265167 -390.34176636]
[-43.48047638 -385.76937866]
[-29.52959251 -380.24255371]
[-15.98365021 -373.78652954]
[-2.90445876 -366.43072510]
[9.64830399 -358.20874023]
[21.61736107 -349.15808105]
[32.94810104 -339.32000732]
[43.58882523 -328.73947144]
[53.49098206 -317.46472168]
[62.60938644 -305.54718018]
[70.90243530 -293.04125977]
[78.33229065 -280.00399780]
[84.86504364 -266.49487305]
[90.47089386 -252.57556152]
[95.12426758 -238.30953979]
[98.80392456 -223.76193237]
[101.49307251 -208.99909973]
[103.17945099 -194.08839417]
[103.85535431 -179.09785461]
[103.51770782 -164.09588623]
[102.16804504 -149.15093994]
[99.81253052 -134.33120728]
[96.46191406 -119.70430756]
[92.13146973 -105.33697510]
[86.84097290 -91.29476929]
[80.61455536 -77.64176178]
[73.48062897 -64.44024658]
[65.47174072 -51.75046158]
[56.62443542 -39.63030624]
[46.97908401 -28.13508415]
[36.57969284 -17.31724548]
[25.47371674 -7.22614908]
[34.78860092 4.53110218]
[44.10348129 16.28835297]
[53.41836548 28.04560471]
[60.03599167 31.33631706]
[62.78284454 40.04795456]
[71.92164612 51.94258881]
[81.06044769 63.83721924]
[90.28755188 75.66349030]
[99.60243225 87.42073822]
[109.17755127 98.96704102]
[119.00813293 110.29663849]
[128.83871460 121.62622833]
[143.72698975 126.97877502]
[146.22406006 141.66256714]
[159.01126099 143.35081482]
[166.96592712 152.98965454]
[166.24435425 165.06466675]
[175.90516663 176.53935242]
[185.56596375 188.01405334]
[197.76943970 179.27853394]
[210.62068176 171.52743530]
[224.04046631 164.80851746]
[237.94602966 159.16322327]
[252.25164795 154.62637329]
[266.86914062 151.22590637]
[281.70837402 148.98281860]
[296.67785645 147.91090393]
[311.68527222 148.01681519]
[326.63812256 149.29986572]
[341.44421387 151.75215149]
[356.01226807 155.35856628]
[370.25244141 160.09686279]
[384.07693481 165.93783569]
[397.40057373 172.84545898]
[410.14114380 180.77716064]
[422.22012329 189.68403625]
[433.56301880 199.51115417]
[444.09994507 210.19795227]
[453.76589966 221.67851257]
[462.50128174 233.88208008]
[470.25225830 246.73339844]
[476.97103882 260.15322876]
[482.61618042 274.05886841]
[487.15292358 288.36453247]
[490.55322266 302.98205566]
[492.79617310 317.82131958]
[493.86791992 332.79080200]
[493.76187134 347.79821777]
[492.47866821 362.75106812]
[490.02621460 377.55712891]
[486.41964722 392.12515259]
[481.68121338 406.36526489]
[475.84008789 420.18972778]
[468.93234253 433.51327515]
[461.00051880 446.25375366]
[452.09350586 458.33264160]
[442.26626587 469.67547607]
[431.57937622 480.21228027]
[420.09869385 489.87811279]
[407.89505005 498.61337280]
[395.04364014 506.36422729]
[381.62374878 513.08288574]
[367.71804810 518.72784424]
[353.41235352 523.26440430]
[338.79476929 526.66461182]
[323.95550537 528.90740967]
[308.98602295 529.97900391]
[293.97857666 529.87280273]
[279.02575684 528.58941650]
[264.21972656 526.13684082]
[249.65174866 522.53009033]
[235.41166687 517.79150391]
[221.58728027 511.95028687]
[208.26379395 505.04238892]
[195.52339172 497.11041260]
[183.44459534 488.20330811]
[172.10188293 478.37594604]
[161.56518555 467.68893433]
[151.89945984 456.20816040]
[143.16432190 444.00442505]
[135.41360474 431.15295410]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 148]
[17 147]
[18 146]
[20 143]
[22 141]
[23 140]
[24 139]
[28 138]
[29 137]
[31 136]
[32 135]
[33 134]
[34 132]
[35 131]
[36 130]
[37 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
