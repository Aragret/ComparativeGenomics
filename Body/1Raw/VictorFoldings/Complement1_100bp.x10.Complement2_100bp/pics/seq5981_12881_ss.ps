%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[248.26847839 209.85140991]
[235.78868103 201.52946472]
[223.30889893 193.20751953]
[210.82910156 184.88558960]
[198.34930420 176.56364441]
[186.42991638 178.62632751]
[175.96467590 171.79530334]
[172.86199951 159.27587891]
[160.50747681 150.76905823]
[148.15296936 142.26222229]
[135.79846191 133.75540161]
[122.10360718 143.95892334]
[105.74585724 148.86657715]
[88.69587708 147.88710022]
[73.00774384 141.13848877]
[60.57146454 129.43377686]
[52.88527679 114.18308258]
[50.87516785 97.22370148]
[54.78329849 80.59879303]
[42.06126022 72.65210724]
[29.33922577 64.70542145]
[16.61718941 56.75873947]
[3.89515281 48.81205368]
[11.79695225 61.56201935]
[16.81505966 75.69773865]
[18.72118568 90.57613373]
[17.42861366 105.52033997]
[12.99614811 119.85049438]
[5.62543488 132.91465759]
[-4.34820652 144.11853027]
[-16.47104263 152.95237732]
[-30.19156456 159.01432800]
[-44.88558197 162.02861023]
[-59.88461304 161.85807800]
[-74.50630188 158.51051331]
[-88.08545685 152.13819885]
[-100.00432587 143.03102112]
[-109.72067261 131.60330200]
[-116.79247284 118.37493896]
[-120.89799500 103.94772339]
[-121.85047913 88.97799683]
[-119.60659027 74.14678192]
[-114.26840973 60.12879944]
[-106.07878113 47.56177521]
[-95.41028595 37.01742935]
[-82.74827576 28.97545242]
[-68.66876984 23.80170631]
[-53.81230927 21.73155785]
[-38.85475540 22.85918617]
[-24.47657776 27.13329315]
[-11.32833481 34.36191559]
[-19.92689896 22.07107544]
[-34.17753601 15.19867516]
[-35.13342667 0.33477503]
[-43.73199081 -11.95606327]
[-52.33055496 -24.24690056]
[-65.47798157 -16.99588394]
[-79.32167053 -11.18345642]
[-93.70476532 -6.87547588]
[-108.46429443 -4.12075615]
[-123.43301392 -2.95050931]
[-138.44132996 -3.37799621]
[-153.31916809 -5.39837217]
[-167.89796448 -8.98874569]
[-182.01252747 -14.10843372]
[-195.50292969 -20.69942856]
[-208.21630859 -28.68704605]
[-220.00862122 -37.98078537]
[-230.74623108 -48.47533417]
[-240.30751038 -60.05178452]
[-248.58409119 -72.57897186]
[-255.48219299 -85.91494751]
[-260.92367554 -99.90859985]
[-264.84686279 -114.40138245]
[-267.20730591 -129.22906494]
[-267.97827148 -144.22366333]
[-267.15103149 -159.21524048]
[-264.73492432 -174.03396606]
[-260.75735474 -188.51191711]
[-255.26338196 -202.48504639]
[-248.31526184 -215.79502869]
[-239.99169922 -228.29106140]
[-230.38703918 -239.83152771]
[-219.61010742 -250.28570557]
[-207.78298950 -259.53509521]
[-195.03970337 -267.47494507]
[-181.52465820 -274.01522827]
[-167.39097595 -279.08190918]
[-152.79879761 -282.61752319]
[-137.91348267 -284.58203125]
[-122.90367126 -284.95315552]
[-107.93945312 -283.72674561]
[-93.19036865 -280.91662598]
[-78.82354736 -276.55468750]
[-65.00177765 -270.69030762]
[-51.88166428 -263.38998413]
[-39.61186981 -254.73641968]
[-28.33142090 -244.82766724]
[-18.16813469 -233.77597046]
[-9.23716927 -221.70658875]
[-1.63971865 -208.75627136]
[4.53813267 -195.07174683]
[9.22638512 -180.80807495]
[12.37191582 -166.12687683]
[13.93908405 -151.19448853]
[13.91013432 -136.18011475]
[12.28539181 -121.25389099]
[9.08326817 -106.58492279]
[4.34004498 -92.33943939]
[-1.89053309 -78.67884064]
[-9.53786850 -65.75791168]
[-18.51531219 -53.72306061]
[-28.72114182 -42.71065140]
[-40.03971863 -32.84546661]
[-31.44115448 -20.55462646]
[-22.84259033 -8.26378918]
[-9.20697880 -2.27051115]
[-7.63606119 13.47251225]
[0.96250284 25.76334953]
[11.84183693 36.09001923]
[24.56387329 44.03670502]
[37.28591156 51.98338699]
[50.00794601 59.93007278]
[62.72998047 67.87675476]
[72.31556702 59.32409286]
[83.78834534 53.54421997]
[96.36624146 50.93114090]
[109.19184113 51.66298294]
[121.39084625 55.68985748]
[132.13168335 62.73726273]
[140.68217468 72.32479095]
[146.45945740 83.79887390]
[149.06968689 96.37735748]
[148.33493042 109.20278931]
[144.30529785 121.40088654]
[156.65980530 129.90771484]
[169.01431274 138.41453552]
[181.36882019 146.92137146]
[199.75392151 147.95568848]
[206.67124939 164.08384705]
[219.15104675 172.40579224]
[231.63082886 180.72773743]
[244.11062622 189.04968262]
[256.59042358 197.37162781]
[266.01898193 185.69181824]
[276.47058105 174.91781616]
[287.85861206 165.13885498]
[300.08871460 156.43600464]
[313.05953979 148.88136292]
[326.66363525 142.53753662]
[340.78823853 137.45709229]
[355.31631470 133.68212891]
[370.12747192 131.24392700]
[385.09896851 130.16268921]
[400.10678101 130.44738770]
[415.02651978 132.09564209]
[429.73455811 135.09381104]
[444.10900879 139.41703796]
[458.03076172 145.02951050]
[471.38446045 151.88470459]
[484.05947876 159.92584229]
[495.95071411 169.08625793]
[506.95968628 179.29006958]
[516.99517822 190.45271301]
[525.97393799 202.48168945]
[533.82171631 215.27732849]
[540.47332764 228.73358154]
[545.87377930 242.73896790]
[549.97827148 257.17739868]
[552.75274658 271.92926025]
[554.17425537 286.87231445]
[554.23101807 301.88272095]
[552.92260742 316.83609009]
[550.25976562 331.60848999]
[546.26464844 346.07757568]
[540.97027588 360.12341309]
[534.42065430 373.62960815]
[526.66992188 386.48422241]
[517.78234863 398.58078003]
[507.83160400 409.81900024]
[496.90014648 420.10580444]
[485.07852173 429.35592651]
[472.46472168 437.49270630]
[459.16323853 444.44873047]
[445.28433228 450.16635132]
[430.94299316 454.59817505]
[416.25805664 457.70751953]
[401.35122681 459.46859741]
[386.34600830 459.86679077]
[371.36672974 458.89883423]
[356.53756714 456.57275391]
[341.98135376 452.90777588]
[327.81872559 447.93432617]
[314.16705322 441.69357300]
[301.13943481 434.23727417]
[288.84384155 425.62719727]
[277.38214111 415.93466187]
[266.84936523 405.24002075]
[257.33273315 393.63186646]
[248.91111755 381.20642090]
[241.65432739 368.06661987]
[235.62248230 354.32138062]
[230.86555481 340.08456421]
[227.42297363 325.47415161]
[225.32327271 310.61123657]
[224.58383179 295.61895752]
[225.21080017 280.62155151]
[227.19895935 265.74328613]
[230.53186035 251.10746765]
[235.18186951 236.83537292]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 144]
[2 143]
[3 142]
[4 141]
[5 140]
[8 138]
[9 137]
[10 136]
[11 135]
[19 124]
[20 123]
[21 122]
[22 121]
[23 120]
[51 119]
[52 118]
[54 116]
[55 115]
[56 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
