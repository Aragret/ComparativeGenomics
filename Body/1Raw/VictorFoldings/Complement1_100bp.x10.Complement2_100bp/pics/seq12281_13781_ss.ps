%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAUxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[101.42093658 508.23071289]
[98.48087311 493.50030518]
[97.44868469 478.51489258]
[98.34131622 463.52050781]
[101.14411163 448.76339722]
[105.81105042 434.48583984]
[112.26549530 420.92236328]
[120.40145111 408.29562378]
[130.08532715 396.81298828]
[141.15809631 386.66299438]
[153.43795776 378.01235962]
[166.72322083 371.00311279]
[161.47651672 356.95062256]
[156.22979736 342.89816284]
[150.98307800 328.84570312]
[145.73635864 314.79321289]
[134.03604126 305.57626343]
[136.45755005 289.94146729]
[131.21083069 275.88900757]
[125.96411896 261.83651733]
[120.71739960 247.78405762]
[118.09880066 262.55371094]
[110.09231567 275.23822021]
[97.88563538 283.95584106]
[83.28957367 287.41342163]
[68.46935272 285.09802246]
[55.62346649 277.35314941]
[46.65753174 265.32766724]
[42.90158844 250.80551147]
[44.91280746 235.94094849]
[52.39283752 222.93907166]
[64.23205566 213.72859192]
[78.67419434 209.67585754]
[93.57684326 211.38204956]
[106.72927856 218.59408569]
[116.17952728 230.24040222]
[113.95440674 215.40635681]
[111.72929382 200.57231140]
[109.17346191 185.79165649]
[106.28818512 171.07176208]
[96.24726105 160.07044983]
[101.18559265 145.03968811]
[98.30032349 130.31980896]
[95.41504669 115.59991455]
[86.15850830 108.53182983]
[84.00343323 97.08644867]
[90.05548859 87.13587189]
[79.98879242 74.93045807]
[85.34103394 61.03071594]
[82.67523956 46.26950073]
[80.00944519 31.50828362]
[77.34365082 16.74706650]
[74.67785645 1.98584831]
[72.01206207 -12.77536869]
[69.34626770 -27.53658676]
[66.68046570 -42.29780197]
[56.61377335 -54.50322342]
[61.96601868 -68.40296173]
[59.30022430 -83.16417694]
[56.63442993 -97.92539215]
[46.56773376 -110.13081360]
[51.91997910 -124.03055573]
[39.70232773 -137.80772400]
[46.27597427 -154.07899475]
[43.39070129 -168.79888916]
[28.45902252 -167.26257324]
[13.44950390 -167.09046936]
[-1.51347673 -168.28396606]
[-16.30593109 -170.83319092]
[-30.80528069 -174.71701050]
[-44.89137650 -179.90325928]
[-58.44749451 -186.34895325]
[-71.36130524 -194.00067139]
[-83.52579498 -202.79501343]
[-94.84016418 -212.65910339]
[-105.21065521 -223.51119995]
[-114.55133057 -235.26139832]
[-122.78479767 -247.81230164]
[-129.84281921 -261.05993652]
[-135.66691589 -274.89450073]
[-140.20883179 -289.20135498]
[-143.43092346 -303.86196899]
[-145.30648804 -318.75482178]
[-145.81999207 -333.75653076]
[-144.96716309 -348.74279785]
[-142.75509644 -363.58941650]
[-139.20208740 -378.17337036]
[-134.33761597 -392.37377930]
[-128.20196533 -406.07302856]
[-120.84598541 -419.15753174]
[-112.33062744 -431.51892090]
[-102.72646332 -443.05474854]
[-92.11306763 -453.66943359]
[-80.57839203 -463.27496338]
[-68.21802521 -471.79180908]
[-55.13438416 -479.14935303]
[-41.43588638 -485.28665161]
[-27.23604202 -490.15283203]
[-12.65252399 -493.70758057]
[2.19382524 -495.92144775]
[17.17998123 -496.77606201]
[32.18176270 -496.26434326]
[47.07485199 -494.39056396]
[61.73584747 -491.17025757]
[76.04325104 -486.63003540]
[89.87850952 -480.80761719]
[103.12698364 -473.75115967]
[115.67887878 -465.51919556]
[127.43018341 -456.17993164]
[138.28353882 -445.81076050]
[148.14898682 -434.49755859]
[156.94477844 -422.33413696]
[164.59805298 -409.42123413]
[171.04536438 -395.86590576]
[176.23329163 -381.78042603]
[180.11886597 -367.28152466]
[182.66986084 -352.48937988]
[183.86515808 -337.52655029]
[183.69483948 -322.51699829]
[182.16032410 -307.58514404]
[179.27432251 -292.85470581]
[175.06076050 -278.44772339]
[169.55455017 -264.48358154]
[162.80130005 -251.07803345]
[154.85699463 -238.34213257]
[145.78746033 -226.38140869]
[135.66783142 -215.29499817]
[124.58199310 -205.17475891]
[112.62178802 -196.10455322]
[99.88632965 -188.15953064]
[86.48115540 -181.40553284]
[72.51733398 -175.89852905]
[58.11059189 -171.68415833]
[60.99586487 -156.96426392]
[70.85667419 -149.95776367]
[73.38090515 -137.71798706]
[66.68119812 -126.69635010]
[76.55721283 -115.54675293]
[71.39564514 -100.59119415]
[74.06143951 -85.82997131]
[76.72723389 -71.06875610]
[86.60325623 -59.91915894]
[81.44168854 -44.96360016]
[84.10748291 -30.20238113]
[86.77327728 -15.44116402]
[89.43907166 -0.67994714]
[92.10486603 14.08127022]
[94.77066040 28.84248734]
[97.43646240 43.60370636]
[100.10225677 58.36492157]
[109.97827148 69.51451874]
[104.81670380 84.47007751]
[115.97894287 96.99128723]
[110.13494110 112.71463776]
[113.02021027 127.43453217]
[115.90548706 142.15441895]
[126.15278625 154.20860291]
[121.00807953 168.18649292]
[123.89334869 182.90638733]
[127.32540894 186.83932495]
[128.76202393 191.25401306]
[128.35382080 195.30967712]
[126.56333923 198.34719849]
[128.78845215 213.18124390]
[131.01356506 228.01528931]
[134.76986694 242.53733826]
[140.01658630 256.58981323]
[145.26330566 270.64227295]
[150.51002502 284.69476318]
[162.58561707 294.91683960]
[159.78883362 309.54650879]
[165.03553772 323.59896851]
[170.28225708 337.65142822]
[175.52897644 351.70391846]
[180.77569580 365.75637817]
[195.40382385 362.34371948]
[210.34826660 360.82974243]
[225.36360168 361.23928833]
[240.20329285 363.56564331]
[254.62364197 367.77062988]
[268.38787842 373.78515625]
[281.26992798 381.51049805]
[293.05831909 390.81976318]
[303.55941772 401.56011963]
[312.60083008 413.55514526]
[320.03405762 426.60794067]
[325.73706055 440.50415039]
[329.61618042 455.01553345]
[331.60772705 469.90386963]
[331.67901611 484.92462158]
[329.82882690 499.83117676]
[326.08755493 514.37872314]
[320.51666260 528.32836914]
[313.20764160 541.45111084]
[304.28045654 553.53143311]
[293.88171387 564.37091064]
[282.18222046 573.79162598]
[269.37402344 581.63885498]
[255.66751099 587.78375244]
[241.28770447 592.12536621]
[226.47076416 594.59240723]
[211.45997620 595.14440918]
[196.50184631 593.77233887]
[181.84199524 590.49859619]
[167.72116089 585.37707520]
[154.37120056 578.49182129]
[142.01133728 569.95587158]
[130.84455872 559.90942383]
[121.05419159 548.51745605]
[112.80103302 535.96697998]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 175]
[13 174]
[14 173]
[15 172]
[16 171]
[18 169]
[19 168]
[20 167]
[21 166]
[36 165]
[37 164]
[38 163]
[39 159]
[40 158]
[42 156]
[43 155]
[44 154]
[47 152]
[49 150]
[50 149]
[51 148]
[52 147]
[53 146]
[54 145]
[55 144]
[56 143]
[58 141]
[59 140]
[60 139]
[62 137]
[64 134]
[65 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
