%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUUxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[194.55223083 382.96453857]
[190.58013916 368.50003052]
[186.60804749 354.03549194]
[182.52838135 339.60095215]
[178.34136963 325.19717407]
[173.51536560 310.99472046]
[168.06001282 297.02191162]
[162.60466003 283.04910278]
[157.14929199 269.07632446]
[151.69393921 255.10351562]
[137.42199707 244.89181519]
[140.35011292 226.71194458]
[134.68733215 212.82191467]
[129.02455139 198.93190002]
[123.36175537 185.04187012]
[117.69897461 171.15184021]
[112.03618622 157.26181030]
[109.50765991 156.05157471]
[107.30617523 153.76681519]
[105.84339142 150.52711487]
[105.48014832 146.59867859]
[106.47703552 142.37255859]
[101.65103912 128.17010498]
[96.82504272 113.96764374]
[86.43765259 104.60848999]
[88.97250366 90.85835266]
[84.14650726 76.65589905]
[79.32050323 62.45344543]
[74.49450684 48.25098801]
[69.66851044 34.04853058]
[63.94449234 26.93000603]
[64.87809753 19.59855461]
[60.26409149 5.32582140]
[48.65698624 -5.42525864]
[52.10423279 -19.91545486]
[37.16972351 -23.21813583]
[25.96747971 -33.48490524]
[21.43834496 -47.88467407]
[24.70315552 -62.52014542]
[34.78736115 -73.48255157]
[30.17335129 -87.75528717]
[25.55934143 -102.02802277]
[20.31262398 -116.08049011]
[14.44366264 -129.88467407]
[8.57470226 -143.68884277]
[2.70574117 -157.49302673]
[-3.16321969 -171.29719543]
[-9.03218079 -185.10137939]
[-14.90114117 -198.90554810]
[-20.77010155 -212.70973206]
[-26.63906288 -226.51390076]
[-32.50802231 -240.31808472]
[-40.45445633 -227.59588623]
[-55.33730698 -225.72485352]
[-66.18549347 -236.08424377]
[-65.00213623 -251.03749084]
[-52.65955734 -259.56161499]
[-38.25748825 -255.37406921]
[-43.08348465 -269.57653809]
[-47.90948486 -283.77899170]
[-52.73548126 -297.98144531]
[-67.33304596 -294.48345947]
[-82.19109344 -292.34732056]
[-97.18285370 -291.59124756]
[-112.18042755 -292.22167969]
[-127.05585480 -294.23321533]
[-141.68222046 -297.60873413]
[-155.93473816 -302.31942749]
[-169.69180298 -308.32507324]
[-182.83602905 -315.57446289]
[-195.25531006 -324.00573730]
[-206.84364319 -333.54696655]
[-217.50218201 -344.11672974]
[-227.13999939 -355.62487793]
[-235.67485046 -367.97320557]
[-243.03390503 -381.05633545]
[-249.15441895 -394.76269531]
[-253.98413086 -408.97531128]
[-257.48184204 -423.57293701]
[-259.61773682 -438.43103027]
[-260.37356567 -453.42279053]
[-259.74288940 -468.42034912]
[-257.73110962 -483.29574585]
[-254.35534668 -497.92205811]
[-249.64442444 -512.17449951]
[-243.63853455 -525.93145752]
[-236.38893127 -539.07556152]
[-227.95744324 -551.49468994]
[-218.41603088 -563.08288574]
[-207.84608459 -573.74127197]
[-196.33778381 -583.37884521]
[-183.98931885 -591.91351318]
[-170.90605164 -599.27233887]
[-157.19958496 -605.39263916]
[-142.98689270 -610.22210693]
[-128.38920593 -613.71960449]
[-113.53108978 -615.85522461]
[-98.53930664 -616.61083984]
[-83.54174805 -615.97991943]
[-68.66638947 -613.96783447]
[-54.04013824 -610.59185791]
[-39.78778458 -605.88067627]
[-26.03092194 -599.87457275]
[-12.88692570 -592.62475586]
[-0.46793756 -584.19305420]
[11.12008572 -574.65142822]
[21.77827835 -564.08129883]
[31.41570473 -552.57287598]
[39.95013809 -540.22424316]
[47.30876923 -527.14086914]
[53.42881393 -513.43432617]
[58.25805664 -499.22152710]
[61.75529099 -484.62377930]
[63.89068604 -469.76562500]
[64.64601898 -454.77383423]
[64.01484680 -439.77627563]
[62.00255203 -424.90097046]
[58.62630463 -410.27478027]
[53.91491318 -396.02249146]
[47.90856934 -382.26571655]
[40.65852356 -369.12185669]
[32.22662735 -356.70300293]
[22.68482208 -345.11514282]
[12.11451817 -334.45712280]
[0.60589707 -324.81988525]
[-11.74285030 -316.28567505]
[-24.82636642 -308.92724609]
[-38.53302383 -302.80743408]
[-33.70702744 -288.60498047]
[-28.88103104 -274.40252686]
[-24.05503273 -260.20007324]
[-18.70384598 -246.18704224]
[-12.83488560 -232.38287354]
[-6.96592522 -218.57868958]
[-1.09696448 -204.77450562]
[4.77199650 -190.97033691]
[10.64095688 -177.16615295]
[16.50991821 -163.36198425]
[22.37887955 -149.55780029]
[28.24783897 -135.75363159]
[34.11680222 -121.94944763]
[40.71767807 -135.41899109]
[54.86435318 -140.40612793]
[68.45297241 -134.05400085]
[73.69935608 -120.00140381]
[67.59813690 -106.29830170]
[53.64436722 -100.79444885]
[39.83207321 -106.64202881]
[44.44608307 -92.36929321]
[49.06009293 -78.09656525]
[63.65310669 -75.11166382]
[74.86730957 -65.15689087]
[79.62449646 -50.83084488]
[76.55201721 -35.94942474]
[66.37696838 -24.52946281]
[77.65404510 -14.79926491]
[74.53681946 0.71181220]
[79.15083313 14.98454571]
[83.87096405 29.22253418]
[88.69696045 43.42499161]
[93.52296448 57.62744522]
[98.34896088 71.82990265]
[103.17495728 86.03235626]
[113.56234741 95.39151001]
[111.02749634 109.14164734]
[115.85349274 123.34410095]
[120.67949677 137.54655457]
[125.92620850 151.59902954]
[131.58900452 165.48905945]
[137.25178528 179.37907410]
[142.91456604 193.26910400]
[148.57736206 207.15913391]
[154.24014282 221.04916382]
[165.80429077 226.76171875]
[170.23489380 238.44732666]
[165.66673279 249.64816284]
[171.12210083 263.62097168]
[176.57745361 277.59375000]
[182.03280640 291.56655884]
[187.48815918 305.53933716]
[194.48715210 292.27230835]
[208.77604675 287.70858765]
[222.16950989 294.46249390]
[226.99516296 308.66506958]
[220.48866272 322.18041992]
[206.37721252 327.26638794]
[192.74514771 321.01016235]
[196.93215942 335.41394043]
[202.33261108 342.78094482]
[201.07257080 350.06341553]
[205.04466248 364.52792358]
[209.01675415 378.99246216]
[224.12582397 379.44812012]
[238.42878723 384.33859253]
[250.65382385 393.22903442]
[259.71389771 405.32888794]
[264.80343628 419.56222534]
[265.46981812 434.66345215]
[261.65380859 449.28979492]
[253.69474792 462.14065552]
[242.30032349 472.07336426]
[228.48373413 478.20471191]
[213.47354126 479.98947144]
[198.60443115 477.26898193]
[185.19856262 470.28512573]
[174.44798279 459.65893555]
[167.30860901 446.33523560]
[164.41528320 431.49877930]
[166.02526855 416.46884155]
[171.99542236 402.58184814]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 192]
[2 191]
[3 190]
[4 188]
[5 187]
[6 180]
[7 179]
[8 178]
[9 177]
[10 176]
[12 173]
[13 172]
[14 171]
[15 170]
[16 169]
[17 168]
[22 167]
[23 166]
[24 165]
[26 163]
[27 162]
[28 161]
[29 160]
[30 159]
[32 158]
[33 157]
[35 155]
[40 150]
[41 149]
[42 148]
[43 141]
[44 140]
[45 139]
[46 138]
[47 137]
[48 136]
[49 135]
[50 134]
[51 133]
[52 132]
[58 131]
[59 130]
[60 129]
[61 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
