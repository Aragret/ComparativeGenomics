%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[18.58228493 873.29364014]
[3.85468054 876.16009521]
[-11.01047993 878.19628906]
[-25.96642494 879.39575195]
[-40.96609879 879.75476074]
[-55.96229935 879.27221680]
[-70.90785217 877.94952393]
[-85.75572968 875.79089355]
[-100.45921326 872.80316162]
[-114.97203827 868.99566650]
[-129.24855042 864.38043213]
[-143.24382019 858.97198486]
[-156.91381836 852.78729248]
[-170.21553040 845.84588623]
[-183.10710144 838.16955566]
[-195.54798889 829.78240967]
[-207.49902344 820.71093750]
[-218.92262268 810.98364258]
[-229.78282166 800.63110352]
[-240.04547119 789.68591309]
[-249.67826843 778.18249512]
[-258.65090942 766.15710449]
[-266.93518066 753.64746094]
[-274.50497437 740.69305420]
[-281.33651733 727.33459473]
[-287.40826416 713.61407471]
[-292.70117188 699.57464600]
[-297.19854736 685.26062012]
[-300.88623047 670.71685791]
[-303.75265503 655.98925781]
[-305.78878784 641.12408447]
[-306.98822021 626.16815186]
[-307.34716797 611.16845703]
[-306.86450195 596.17224121]
[-305.54177856 581.22668457]
[-303.38308716 566.37884521]
[-300.39529419 551.67535400]
[-296.58776855 537.16253662]
[-291.97247314 522.88604736]
[-286.56396484 508.89080811]
[-280.37924194 495.22085571]
[-273.43777466 481.91915894]
[-265.76138306 469.02761841]
[-257.37420654 456.58676147]
[-248.30270386 444.63574219]
[-238.57534790 433.21218872]
[-228.22276306 422.35202026]
[-217.27754211 412.08941650]
[-205.77410889 402.45666504]
[-193.74865723 393.48406982]
[-181.23902893 385.19985962]
[-168.28457642 377.63009644]
[-154.92605591 370.79861450]
[-141.20550537 364.72689819]
[-127.16610718 359.43405151]
[-112.85202026 354.93673706]
[-98.30828094 351.24908447]
[-83.58065796 348.38272095]
[-68.71547699 346.34664917]
[-53.75952530 345.14727783]
[-38.75984955 344.78839111]
[-23.76364899 345.27111816]
[-8.81810665 346.59390259]
[6.02975368 348.75262451]
[20.73321533 351.74047852]
[35.24601364 355.54806519]
[39.86002350 341.27532959]
[44.47403336 327.00259399]
[49.08804321 312.72985840]
[53.70205307 298.45712280]
[58.31605911 284.18438721]
[53.72252274 267.24725342]
[67.49076080 255.01954651]
[71.89176178 240.67970276]
[76.29276276 226.33985901]
[80.26485443 211.87533569]
[83.80452728 197.29895020]
[87.34420013 182.72257996]
[89.45882416 167.87237549]
[90.12860870 152.88734436]
[90.79839325 137.90229797]
[91.46817780 122.91726685]
[92.13796234 107.93222809]
[92.69617462 92.94261932]
[93.14278412 77.94926453]
[93.58938599 62.95591736]
[94.03599548 47.96256638]
[94.14765930 32.96298218]
[93.92433167 17.96464539]
[93.70100403 2.96630788]
[85.75910187 -10.71713829]
[93.30605316 -23.55819511]
[85.36414337 -37.24164200]
[92.91109467 -50.08269882]
[92.68776703 -65.08103943]
[92.46443939 -80.07937622]
[78.06473541 -84.76203156]
[65.96720886 -93.86853027]
[57.48409271 -106.41107941]
[53.53558731 -121.02915192]
[54.54999161 -136.13708496]
[60.41727066 -150.09609985]
[70.50098419 -161.39199829]
[83.70732880 -168.79949951]
[98.60378265 -171.51510620]
[113.57447815 -169.24423218]
[126.99552155 -162.23321533]
[137.41108704 -151.24253845]
[143.69137573 -137.46441650]
[145.15515137 -122.39338684]
[141.64363098 -107.66423035]
[133.53771973 -94.87467194]
[121.71668243 -85.41201019]
[107.46277618 -80.30270386]
[107.68610382 -65.30436707]
[107.90943146 -50.30602646]
[115.83536530 -37.69536209]
[108.30438995 -23.78152466]
[116.23032379 -11.17085934]
[108.69934082 2.74298024]
[108.92266846 17.74131775]
[109.14599609 32.73965454]
[111.40779114 35.44458389]
[112.47179413 39.37942123]
[111.77421570 43.96926880]
[109.02934265 48.40917206]
[108.58274078 63.40252304]
[108.13613129 78.39587402]
[107.68952942 93.38922119]
[110.61640930 100.89961243]
[107.12300110 108.60201263]
[106.45321655 123.58705139]
[105.78343201 138.57208252]
[105.11364746 153.55712891]
[104.44386292 168.54216003]
[112.85904694 156.12506104]
[125.55398560 148.13514709]
[140.38935852 145.91888428]
[154.86514282 149.84976196]
[166.54191589 159.26533508]
[173.45193481 172.57891846]
[174.43074036 187.54695129]
[169.31338501 201.64704895]
[158.96223450 212.50309753]
[145.12165833 218.28565979]
[130.12399292 218.02027893]
[116.49665070 211.75167847]
[106.53605652 200.53620911]
[101.92057800 186.26225281]
[98.38090515 200.83862305]
[94.84123230 215.41500854]
[96.21118164 219.53533936]
[96.19985962 223.48051453]
[95.03195190 226.83779907]
[93.04307556 229.30984497]
[90.63260651 230.74084473]
[86.23160553 245.08070374]
[81.83061218 259.42053223]
[87.17314148 271.16021729]
[83.21232605 283.01330566]
[72.58879089 288.79840088]
[67.97478485 303.07113647]
[63.36077499 317.34387207]
[58.74676514 331.61660767]
[54.13275528 345.88934326]
[49.51874924 360.16207886]
[63.51405716 365.57043457]
[77.18410492 371.75500488]
[90.48587036 378.69631958]
[103.37750244 386.37258911]
[115.81844330 394.75961304]
[127.76954651 403.83099365]
[139.19320679 413.55822754]
[150.05349731 423.91067505]
[160.31622314 434.85577393]
[169.94911194 446.35910034]
[178.92184448 458.38446045]
[187.20619202 470.89401245]
[194.77609253 483.84835815]
[201.60771179 497.20681763]
[207.67958069 510.92727661]
[212.97257996 524.96661377]
[217.47006226 539.28063965]
[221.15786743 553.82434082]
[224.02439880 568.55194092]
[226.06063843 583.41711426]
[227.26017761 598.37304688]
[227.61923218 613.37274170]
[227.13668823 628.36895752]
[225.81405640 643.31451416]
[223.65550232 658.16235352]
[220.66781616 672.86584473]
[216.86039734 687.37872314]
[212.24522400 701.65521240]
[206.83680725 715.65051270]
[200.65219116 729.32055664]
[193.71080017 742.62231445]
[186.03450012 755.51391602]
[177.64744568 767.95477295]
[168.57600403 779.90588379]
[158.84873962 791.32952881]
[148.49624634 802.18975830]
[137.55110168 812.45245361]
[126.04773712 822.08526611]
[114.02234650 831.05798340]
[101.51277924 839.34228516]
[88.55838013 846.91210938]
[75.19991302 853.74371338]
[61.47941589 859.81549072]
[47.44005203 865.10845947]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 166]
[67 165]
[68 164]
[69 163]
[70 162]
[71 161]
[73 158]
[74 157]
[75 156]
[76 151]
[77 150]
[78 149]
[79 135]
[80 134]
[81 133]
[82 132]
[83 131]
[84 129]
[85 128]
[86 127]
[87 126]
[88 122]
[89 121]
[90 120]
[92 118]
[94 116]
[95 115]
[96 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
