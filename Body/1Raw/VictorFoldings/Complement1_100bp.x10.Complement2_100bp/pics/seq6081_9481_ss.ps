%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[77.34787750 712.10760498]
[62.61721039 709.20495605]
[48.27065277 704.77844238]
[34.46539688 698.87652588]
[21.35269547 691.56390381]
[9.07622051 682.92065430]
[-2.22951937 673.04150391]
[-12.44065380 662.03466797]
[-21.44530296 650.02075195]
[-29.14480782 637.13140869]
[-35.45480728 623.50781250]
[-40.30616760 609.29931641]
[-43.64573288 594.66149902]
[-45.43691254 579.75482178]
[-45.66008377 564.74255371]
[-44.31279755 549.78918457]
[-41.40982056 535.05859375]
[-36.98295593 520.71215820]
[-31.08070564 506.90704346]
[-23.76774216 493.79452515]
[-15.12418652 481.51828003]
[-5.24474478 470.21276855]
[5.76233959 460.00189209]
[17.77646637 450.99752808]
[30.66600418 443.29833984]
[44.28972626 436.98867798]
[58.49836349 432.13766479]
[73.13623810 428.79846191]
[88.04296875 427.00762939]
[87.81964111 412.00930786]
[87.59631348 397.01095581]
[85.33452606 394.30603027]
[84.27052307 390.37118530]
[84.96809387 385.78134155]
[87.71296692 381.34143066]
[88.15957642 366.34808350]
[88.60617828 351.35473633]
[89.05278778 336.36138916]
[86.10983276 329.58197021]
[89.61930847 321.14862061]
[90.28909302 306.16357422]
[83.12781525 293.10351562]
[91.47360992 279.66256714]
[92.14339447 264.67755127]
[92.81317902 249.69250488]
[93.48296356 234.70745850]
[94.15274811 219.72242737]
[94.82253265 204.73738098]
[95.49231720 189.75234985]
[96.16210175 174.76730347]
[96.05043793 159.76773071]
[95.15762329 144.79432678]
[94.26480103 129.82090759]
[93.37198639 114.84751129]
[85.14273071 106.60610962]
[84.53608704 94.97541046]
[91.86329651 85.92259979]
[91.19351196 70.93756104]
[90.52372742 55.95252609]
[84.40947723 69.64982605]
[74.99977112 81.33132172]
[62.91872787 90.22223663]
[48.96763611 95.73286438]
[34.07181931 97.49770355]
[19.21926308 95.39968872]
[5.39508915 89.57798767]
[-6.48379850 80.41873169]
[-15.62951469 68.52941132]
[-21.43545723 54.69861221]
[-23.51653862 39.84367752]
[-21.73472977 24.94988251]
[-16.20820999 11.00507736]
[-7.30353260 -1.06582701]
[4.38868523 -10.46221161]
[18.09294128 -16.56084824]
[32.90028000 -18.95723534]
[47.82858658 -17.49243164]
[61.88772202 -12.26358891]
[74.14518738 -3.61751914]
[83.78799438 7.87231445]
[90.17656708 21.44383240]
[92.88745117 36.20201111]
[89.30978394 20.79062271]
[100.29216003 10.72897720]
[104.37182617 -3.70557618]
[108.34392548 -18.17009926]
[112.31602478 -32.63462448]
[114.20931244 -47.51465988]
[113.98598480 -62.51299667]
[113.76265717 -77.51133728]
[105.82074738 -91.19477844]
[113.36770630 -104.03583527]
[113.14437866 -119.03417206]
[112.92105103 -134.03251648]
[98.32230377 -137.87689209]
[85.30271149 -145.51841736]
[74.82840729 -156.38999939]
[67.67665100 -169.68492126]
[64.37815094 -184.41661072]
[65.17768097 -199.49186707]
[70.01591492 -213.79200745]
[78.53381348 -226.25587463]
[90.09929657 -235.95855713]
[103.85413361 -242.18006897]
[118.77761841 -244.45870972]
[133.76232910 -242.62539673]
[147.69630432 -236.81619263]
[159.54554749 -227.46214294]
[168.43075562 -215.25741577]
[173.69261169 -201.10766602]
[174.94064331 -186.06289673]
[172.08222961 -171.23954773]
[165.32948303 -157.73757935]
[155.18350220 -146.55894470]
[142.39720154 -138.53318787]
[127.91938782 -134.25584412]
[128.14271545 -119.25749969]
[128.36604309 -104.25916290]
[136.29197693 -91.64849854]
[128.76100159 -77.73466492]
[128.98432922 -62.73632431]
[129.20765686 -47.73798752]
[135.91813660 -61.15325546]
[146.24122620 -72.03598022]
[159.28388977 -79.44469452]
[173.91778564 -82.73847198]
[188.87695312 -81.63236237]
[202.86726379 -76.22206879]
[214.67840576 -66.97562408]
[223.28862000 -54.69294739]
[227.95303345 -40.43660355]
[228.26811218 -25.43991280]
[224.20660400 -11.00023842]
[216.11987305 1.63324153]
[204.70750427 11.36760616]
[190.95677185 17.36073494]
[176.05728149 19.09416199]
[161.29794312 16.41793060]
[147.95562744 9.56355858]
[137.18455505 -0.87597984]
[129.91653442 -13.99756145]
[126.78054810 -28.66252708]
[122.80844879 -14.19800377]
[118.83634949 0.26652014]
[120.09639740 7.54897070]
[114.69594574 14.91598797]
[118.57308960 29.29712296]
[107.29122925 40.38902283]
[105.50876617 55.28274155]
[106.17855072 70.26777649]
[106.84833527 85.25281525]
[116.23766327 99.15306091]
[108.34539032 113.95469666]
[109.23821259 128.92810059]
[110.13102722 143.90150452]
[111.02384186 158.87490845]
[120.91449738 147.59773254]
[135.72036743 145.19227600]
[148.67240906 152.75830078]
[153.84912109 166.83671570]
[148.88377380 180.99105835]
[136.04646301 188.75015259]
[121.20623779 186.56665039]
[111.14714050 175.43710327]
[110.47735596 190.42213440]
[109.80757141 205.40718079]
[109.13778687 220.39221191]
[108.46800232 235.37725830]
[107.79821777 250.36228943]
[107.12843323 265.34732056]
[106.45864868 280.33236694]
[113.57202148 294.46426392]
[105.27413177 306.83334351]
[104.60434723 321.81838989]
[104.04613495 336.80801392]
[103.59953308 351.80136108]
[103.15292358 366.79470825]
[102.70632172 381.78805542]
[102.59465027 396.78762817]
[102.81797791 411.78598022]
[103.04130554 426.78430176]
[117.99475098 428.13049316]
[132.72555542 431.03240967]
[147.07232666 435.45822144]
[160.87786865 441.35946655]
[173.99092102 448.67147827]
[186.26782227 457.31414795]
[197.57403564 467.19274902]
[207.78570557 478.19909668]
[216.79093933 490.21258545]
[224.49107361 503.10153198]
[230.80174255 516.72479248]
[235.65379333 530.93310547]
[238.99406433 545.57073975]
[240.78596497 560.47735596]
[241.00987244 575.48956299]
[239.66331482 590.44299316]
[236.76104736 605.17370605]
[232.33488464 619.52038574]
[226.43330383 633.32580566]
[219.12097168 646.43865967]
[210.47801208 658.71533203]
[200.59912109 670.02130127]
[189.59252930 680.23272705]
[177.57884216 689.23767090]
[164.68968201 696.93750000]
[151.06626892 703.24780273]
[136.85786438 708.09954834]
[122.22015381 711.43945312]
[107.31350708 713.23095703]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 181]
[30 180]
[31 179]
[35 178]
[36 177]
[37 176]
[38 175]
[40 174]
[41 173]
[43 171]
[44 170]
[45 169]
[46 168]
[47 167]
[48 166]
[49 165]
[50 164]
[51 156]
[52 155]
[53 154]
[54 153]
[57 151]
[58 150]
[59 149]
[82 148]
[84 146]
[85 144]
[86 143]
[87 142]
[88 122]
[89 121]
[90 120]
[92 118]
[93 117]
[94 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
