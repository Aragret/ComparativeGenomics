%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[-16.78126335 326.10354614]
[-19.48042297 340.86572266]
[-23.26244164 355.38824463]
[-28.10666275 369.59179688]
[-33.98662949 383.39877319]
[-40.87022400 396.73382568]
[-48.71985245 409.52407837]
[-57.49264526 421.69967651]
[-67.14067841 433.19415283]
[-77.61127472 443.94467163]
[-88.84722900 453.89257812]
[-100.78717804 462.98348999]
[-113.36591339 471.16778564]
[-126.51473236 478.40075684]
[-140.16181946 484.64288330]
[-154.23263550 489.86007690]
[-168.65034485 494.02386475]
[-183.33616638 497.11151123]
[-198.20993042 499.10610962]
[-213.19038391 499.99679565]
[-228.19570923 499.77871704]
[-243.14393616 498.45303345]
[-257.95346069 496.02700806]
[-272.54333496 492.51385498]
[-286.83395386 487.93280029]
[-300.74719238 482.30886841]
[-314.20712280 475.67276001]
[-327.14016724 468.06069946]
[-339.47573853 459.51431274]
[-351.14642334 450.08023071]
[-362.08853149 439.80999756]
[-372.24224854 428.75970459]
[-381.55215454 416.98968506]
[-389.96740723 404.56427002]
[-397.44198608 391.55130005]
[-403.93511963 378.02182007]
[-409.41134644 364.04977417]
[-413.84072876 349.71142578]
[-417.19909668 335.08514404]
[-419.46807861 320.25076294]
[-420.63531494 305.28930664]
[-420.69439697 290.28253174]
[-419.64505005 275.31234741]
[-417.49298096 260.46054077]
[-414.24990845 245.80825806]
[-409.93359375 231.43548584]
[-404.56759644 217.42073059]
[-398.18124390 203.84054565]
[-390.80935669 190.76908875]
[-382.49227905 178.27777100]
[-373.27536011 166.43481445]
[-363.20898438 155.30488586]
[-352.34811401 144.94879150]
[-340.75207520 135.42306519]
[-328.48422241 126.77976990]
[-315.61151123 119.06609344]
[-302.20428467 112.32417297]
[-288.33575439 106.59082031]
[-274.08169556 101.89735413]
[-259.51992798 98.26941681]
[-244.72998047 95.72680664]
[-229.79264832 94.28343201]
[-214.78950500 93.94715881]
[-199.80250549 94.71982574]
[-184.91349792 96.59722137]
[-170.20379639 99.56908417]
[-155.75375366 103.61918640]
[-141.64227295 108.72541046]
[-127.94644165 114.85986328]
[-114.74106598 121.98903656]
[-102.09825134 130.07400513]
[-90.08706665 139.07058716]
[-78.77310944 148.92967224]
[-68.21817017 159.59741211]
[-58.47990036 171.01551819]
[-49.61148071 183.12164307]
[-36.88944626 175.17495728]
[-24.16740799 167.22828674]
[-11.44537163 159.28160095]
[1.27666450 151.33491516]
[13.99870110 143.38822937]
[18.00636101 137.17851257]
[26.96983719 135.41957092]
[39.80877686 127.66317749]
[52.64771652 119.90678406]
[65.48665619 112.15039062]
[78.32559967 104.39399719]
[91.16453552 96.63761139]
[93.54157257 91.96175385]
[98.36920166 88.95054626]
[104.50324249 88.84798431]
[117.56742096 81.47729492]
[125.78467560 67.95741272]
[140.67138672 68.44226074]
[153.73556519 61.07157135]
[147.26100159 47.53447723]
[141.71508789 33.59117126]
[137.12313843 19.30527115]
[133.50610352 4.74195910]
[130.88050842 -10.03231335]
[129.25830078 -24.95013428]
[128.64689636 -39.94343567]
[129.04908752 -54.94380951]
[130.46302795 -69.88281250]
[132.88227844 -84.69226837]
[136.29580688 -99.30461884]
[140.68801880 -113.65319061]
[146.03889465 -127.67250061]
[152.32398987 -141.29859924]
[159.51464844 -154.46929932]
[167.57806396 -167.12451172]
[176.47743225 -179.20648193]
[186.17214966 -190.66009521]
[196.61799622 -201.43309021]
[207.76728821 -211.47631836]
[219.56915283 -220.74392700]
[231.96975708 -229.19366455]
[244.91252136 -236.78694153]
[258.33837891 -243.48915100]
[272.18606567 -249.26966858]
[286.39239502 -254.10215759]
[300.89257812 -257.96453857]
[315.62039185 -260.83920288]
[330.50872803 -262.71304321]
[345.48956299 -263.57748413]
[360.49456787 -263.42861938]
[375.45532227 -262.26708984]
[390.30352783 -260.09820557]
[404.97140503 -256.93185425]
[419.39208984 -252.78253174]
[433.49975586 -247.66911316]
[447.23001099 -241.61495972]
[460.52023315 -234.64767456]
[473.30978394 -226.79907227]
[485.54028320 -218.10494995]
[497.15594482 -208.60498047]
[508.10375977 -198.34251404]
[518.33380127 -187.36437988]
[527.79931641 -175.72065735]
[536.45721436 -163.46447754]
[544.26794434 -150.65176392]
[551.19586182 -137.34097290]
[557.20935059 -123.59285736]
[562.28100586 -109.47012329]
[566.38763428 -95.03723145]
[569.51055908 -80.36002350]
[571.63543701 -65.50547791]
[572.75268555 -50.54136276]
[572.85717773 -35.53596497]
[571.94842529 -20.55774498]
[570.03051758 -5.67504835]
[567.11224365 9.04421806]
[563.20697021 23.53289223]
[558.33245850 37.72486496]
[552.51098633 51.55538559]
[545.76910400 64.96134186]
[538.13751221 77.88156891]
[529.65112305 90.25711060]
[520.34863281 102.03150940]
[510.27246094 113.15102386]
[499.46859741 123.56493378]
[487.98632812 133.22570801]
[475.87808228 142.08929443]
[463.19906616 150.11520386]
[450.00714111 157.26686096]
[436.36248779 163.51161194]
[422.32739258 168.82096863]
[407.96591187 173.17068481]
[393.34350586 176.54095459]
[378.52694702 178.91636658]
[363.58383179 180.28610229]
[348.58233643 180.64389038]
[333.59091187 179.98811340]
[318.67794800 178.32176208]
[303.91152954 175.65245056]
[289.35897827 171.99232483]
[275.08673096 167.35812378]
[261.15991211 161.77096558]
[247.64202881 155.25636292]
[234.59480286 147.84402466]
[222.07774353 139.56777954]
[210.14797974 130.46537781]
[198.85992432 120.57837677]
[188.26509094 109.95187378]
[178.41183472 98.63435364]
[169.34510803 86.67746735]
[161.10626221 74.13575745]
[148.04208374 81.50644684]
[140.75926208 94.49913025]
[124.93811035 94.54148102]
[111.87393188 101.91217041]
[98.92092896 109.47654724]
[86.08199310 117.23294067]
[73.24304962 124.98933411]
[60.40410995 132.74572754]
[47.56516647 140.50212097]
[34.72622681 148.25851440]
[21.94538498 156.11026001]
[9.22334862 164.05694580]
[-3.49868751 172.00363159]
[-16.22072411 179.95031738]
[-28.94276047 187.89700317]
[-41.66479492 195.84368896]
[-34.67593002 209.12385559]
[-28.68692970 222.88391113]
[-23.73050499 237.04869080]
[-19.83372688 251.54084778]
[-17.01787567 266.28118896]
[-15.29833508 281.18927002]
[-14.68449306 296.18362427]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[76 203]
[77 202]
[78 201]
[79 200]
[80 199]
[81 198]
[83 197]
[84 196]
[85 195]
[86 194]
[87 193]
[88 192]
[91 191]
[92 190]
[94 188]
[95 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
