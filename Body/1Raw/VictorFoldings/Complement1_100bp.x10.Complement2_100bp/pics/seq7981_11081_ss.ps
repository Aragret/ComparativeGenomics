%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[66.16983795 582.13031006]
[52.16546249 587.71069336]
[37.23245621 589.77679443]
[22.23899841 588.20843506]
[8.05679607 583.09686279]
[-4.48962021 574.73913574]
[-14.67081738 563.62127686]
[-21.89487457 550.38964844]
[-25.74179268 535.81347656]
[-25.98791885 520.74023438]
[-22.61894226 506.04623413]
[-15.83073235 492.58581543]
[-6.01794624 481.14147949]
[6.24891424 472.37863159]
[20.25667000 466.80670166]
[35.19092941 464.74966431]
[36.75144958 449.83108521]
[38.31197357 434.91247559]
[39.87249756 419.99386597]
[33.50126266 406.53070068]
[42.63227463 393.61035156]
[34.63319016 377.99044800]
[45.57298660 363.17822266]
[46.91122055 348.23803711]
[48.24945450 333.29785156]
[49.58768845 318.35766602]
[50.92592239 303.41748047]
[52.26415634 288.47729492]
[53.60239029 273.53710938]
[43.27435303 284.41513062]
[28.73043060 288.08587646]
[14.47721958 283.41192627]
[4.93123007 271.84152222]
[3.05039191 256.95989990]
[9.41750240 243.37829590]
[22.05964470 235.30511475]
[37.05950928 235.24192810]
[49.76922989 243.20828247]
[56.25060272 256.73602295]
[59.57286072 242.10855103]
[62.89512253 227.48109436]
[61.31115723 220.26216125]
[66.37726593 212.66136169]
[69.91693878 198.08497620]
[73.34799957 183.48265076]
[76.67025757 168.85519409]
[79.99252319 154.22773743]
[83.31478119 139.60028076]
[70.78400421 131.51196289]
[61.77262497 119.62769318]
[57.36615753 105.37904358]
[58.09541321 90.48242950]
[63.87254333 76.73230743]
[74.00162506 65.78504181]
[87.26250458 58.95935059]
[102.05776215 57.07746124]
[97.56913757 41.90634537]
[107.93316650 31.20885468]
[111.25542450 16.58139420]
[114.57768250 1.95393348]
[117.89994049 -12.67352676]
[104.82966614 -19.05247307]
[93.51700592 -28.18091393]
[84.52968597 -39.59643555]
[78.31775665 -52.72197342]
[75.19107819 -66.89495850]
[75.30387878 -81.40077209]
[78.64710999 -95.50879669]
[85.04912567 -108.50917053]
[94.18444061 -119.74855804]
[105.59030914 -128.66294861]
[118.69015503 -134.80595398]
[132.82272339 -137.87120056]
[147.27543640 -137.70756531]
[150.81510925 -152.28393555]
[154.35478210 -166.86030579]
[157.89445496 -181.43669128]
[153.63220215 -196.67295837]
[164.15435791 -207.21495056]
[151.75923157 -214.53967285]
[141.94200134 -225.04940796]
[135.49212646 -237.88584900]
[132.92459106 -252.00413513]
[134.43875122 -266.25784302]
[139.90289307 -279.49221802]
[148.86569214 -290.63751221]
[160.59338379 -298.79568481]
[174.12991333 -303.31259155]
[188.37483215 -303.83047485]
[192.13113403 -318.35253906]
[195.88743591 -332.87457275]
[199.64373779 -347.39663696]
[203.40003967 -361.91870117]
[205.95587158 -376.69937134]
[207.29409790 -391.63955688]
[208.63233948 -406.57974243]
[209.97056580 -421.51992798]
[211.30880737 -436.46011353]
[197.24758911 -441.97906494]
[185.31167603 -451.23706055]
[176.46864319 -463.48358154]
[171.43536377 -477.72589111]
[170.61985779 -492.80938721]
[174.08824158 -507.51132202]
[181.55935669 -520.63989258]
[192.42752075 -531.13079834]
[205.81173706 -538.13360596]
[220.62698364 -541.08068848]
[235.67227173 -539.73303223]
[249.72793579 -534.19995117]
[261.65454102 -524.92993164]
[270.48526001 -512.67456055]
[275.50424194 -498.42718506]
[276.30456543 -483.34289551]
[272.82144165 -468.64443970]
[265.33712769 -455.52340698]
[254.45843506 -445.04339600]
[241.06718445 -438.05401611]
[226.24899292 -435.12185669]
[224.91075134 -420.18167114]
[223.57252502 -405.24148560]
[222.23428345 -390.30130005]
[220.89604187 -375.36111450]
[230.42544556 -386.94519043]
[244.21055603 -392.85879517]
[259.17178345 -391.78076172]
[271.96670532 -383.95199585]
[279.73693848 -371.12142944]
[280.74658203 -356.15545654]
[274.77008057 -342.39749146]
[263.14260864 -332.92111206]
[248.46174622 -329.84338379]
[234.00726318 -333.85186768]
[223.00831604 -344.05102539]
[217.92208862 -358.16241455]
[214.16578674 -343.64035034]
[210.40948486 -329.11828613]
[206.65318298 -314.59622192]
[202.89688110 -300.07415771]
[216.19432068 -291.79739380]
[226.29573059 -279.80169678]
[232.20310974 -265.25357056]
[233.32705688 -249.57260132]
[229.54559326 -234.29293823]
[221.21719360 -220.91319275]
[209.14692688 -210.74946594]
[194.50863647 -204.80584717]
[178.73072815 -203.67527771]
[183.24615479 -189.48161316]
[172.47082520 -177.89701843]
[168.93115234 -163.32063293]
[165.39147949 -148.74426270]
[161.85180664 -134.16789246]
[175.64306641 -127.10616302]
[187.35519409 -116.94924164]
[196.30757141 -104.28186035]
[201.97863770 -89.83480072]
[204.03625488 -74.44274139]
[202.35722351 -58.99600601]
[197.03454590 -44.38911819]
[188.37242126 -31.46894646]
[176.86871338 -20.98563576]
[163.18646240 -13.54903889]
[148.11561584 -9.59325123]
[132.52740479 -9.35126686]
[129.20513916 5.27619314]
[125.88288116 19.90365410]
[122.56062317 34.53111267]
[127.28687286 48.65597916]
[116.68521881 60.39972305]
[129.21598816 68.48802948]
[138.22737122 80.37230682]
[142.63383484 94.62095642]
[141.90458679 109.51757050]
[136.12745667 123.26769257]
[125.99837494 134.21495056]
[112.73749542 141.04064941]
[97.94223785 142.92253113]
[94.61997986 157.55000305]
[91.29772186 172.17745972]
[87.97546387 186.80491638]
[89.12644958 195.86654663]
[84.49331665 201.62464905]
[80.95364380 216.20103455]
[77.52258301 230.80334473]
[74.20032501 245.43081665]
[70.87805939 260.05825806]
[68.54257202 274.87533569]
[67.20433807 289.81552124]
[65.86610413 304.75570679]
[64.52787018 319.69589233]
[63.18964005 334.63607788]
[61.85140610 349.57626343]
[60.51317215 364.51644897]
[68.16947174 374.89642334]
[66.74727631 387.31259155]
[57.55088043 395.17089844]
[63.81049728 409.70111084]
[54.79109955 421.55438232]
[53.23057938 436.47299194]
[51.67005539 451.39160156]
[50.10953140 466.31021118]
[64.29483032 471.41320801]
[76.84631348 479.76327515]
[87.03424835 490.87496948]
[94.26632690 504.10223389]
[98.12207794 518.67608643]
[98.37734222 533.74914551]
[95.01728058 548.44519043]
[88.23722839 561.90972900]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 202]
[17 201]
[18 200]
[19 199]
[21 197]
[23 194]
[24 193]
[25 192]
[26 191]
[27 190]
[28 189]
[29 188]
[39 187]
[40 186]
[41 185]
[43 184]
[44 183]
[45 181]
[46 180]
[47 179]
[48 178]
[56 170]
[58 168]
[59 167]
[60 166]
[61 165]
[74 153]
[75 152]
[76 151]
[77 150]
[79 148]
[89 139]
[90 138]
[91 137]
[92 136]
[93 135]
[94 123]
[95 122]
[96 121]
[97 120]
[98 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
