%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAUxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[101.47377777 906.76409912]
[86.55195618 905.19934082]
[71.73563385 902.83593750]
[57.06753159 899.68066406]
[42.58993912 895.74261475]
[28.34460449 891.03308105]
[14.37259674 885.56573486]
[0.71420085 879.35626221]
[-12.59120178 872.42266846]
[-25.50524712 864.78479004]
[-37.99069977 856.46484375]
[-50.01156616 847.48663330]
[-61.53318024 837.87615967]
[-72.52232361 827.66107178]
[-82.94731903 816.87084961]
[-92.77809143 805.53662109]
[-101.98631287 793.69104004]
[-110.54543304 781.36828613]
[-118.43076324 768.60382080]
[-125.61956787 755.43457031]
[-132.09112549 741.89837646]
[-137.82678223 728.03436279]
[-142.80999756 713.88244629]
[-147.02638245 699.48345947]
[-150.46382141 684.87890625]
[-153.11236572 670.11090088]
[-154.96438599 655.22198486]
[-156.01455688 640.25512695]
[-156.25985718 625.25354004]
[-155.69953918 610.26037598]
[-154.33526611 595.31890869]
[-152.17094421 580.47216797]
[-149.21281433 565.76306152]
[-145.46940613 551.23388672]
[-140.95152283 536.92663574]
[-135.67219543 522.88250732]
[-129.64662170 509.14199829]
[-122.89219666 495.74472046]
[-115.42838287 482.72933960]
[-107.27671051 470.13333130]
[-98.46067810 457.99304199]
[-89.00569916 446.34347534]
[-78.93904114 435.21820068]
[-68.28972626 424.64932251]
[-57.08846283 414.66729736]
[-45.36754608 405.30093384]
[-33.16076660 396.57717896]
[-20.50332642 388.52124023]
[-7.43171501 381.15634155]
[6.01637602 374.50366211]
[19.80217361 368.58245850]
[33.88592911 363.40972900]
[48.22703171 359.00045776]
[62.78414154 355.36730957]
[77.51527405 352.52078247]
[92.37796783 350.46908569]
[107.32936096 349.21813965]
[106.88275146 334.22479248]
[106.43614960 319.23144531]
[105.98954010 304.23809814]
[89.56907654 297.64382935]
[77.65306854 284.49075317]
[72.67783356 267.39907837]
[75.69078064 249.80108643]
[86.13028717 235.25186157]
[101.92968750 226.71121216]
[100.81404114 211.75274658]
[99.69839478 196.79429626]
[98.58274841 181.83584595]
[97.46709442 166.87739563]
[96.35144806 151.91894531]
[95.23580170 136.96047974]
[94.12014771 122.00202942]
[84.29093933 116.48901367]
[78.30847168 106.93827057]
[77.63768005 95.68852234]
[82.44284058 85.49454498]
[91.54728699 78.85256958]
[90.87750244 63.86753464]
[90.20771790 48.88249588]
[76.63086700 45.98324585]
[64.15555573 39.91463470]
[53.50893021 31.03567123]
[45.31027985 19.86901474]
[40.03501129 7.07021761]
[37.98709106 -6.61077356]
[39.28152466 -20.37354660]
[43.83790970 -33.41406250]
[51.38542175 -44.97161865]
[61.47890091 -54.37323380]
[73.52510071 -61.07283020]
[86.81756592 -64.68293762]
[86.59423828 -79.68127441]
[86.37091064 -94.67961884]
[78.42900085 -108.36306000]
[85.97595215 -121.20411682]
[85.75262451 -136.20245361]
[85.52929688 -151.20079041]
[71.50977325 -157.14830017]
[61.12612534 -168.28831482]
[56.17737579 -182.69073486]
[57.52092743 -197.86026001]
[64.92400360 -211.16870117]
[77.10397339 -220.31025696]
[91.95058441 -223.70112610]
[106.89157867 -220.75379944]
[119.33832550 -211.97894287]
[127.13436127 -198.89682007]
[128.92897034 -183.77401733]
[124.41123199 -169.23063660]
[114.36386108 -157.78640747]
[100.52763367 -151.42411804]
[100.75096130 -136.42578125]
[100.97428894 -121.42744446]
[108.90022278 -108.81678009]
[101.36924744 -94.90294647]
[101.59257507 -79.90460205]
[101.81590271 -64.90626526]
[117.46252441 -60.80053329]
[131.33656311 -52.45568466]
[142.31561279 -40.53768539]
[149.50883484 -26.00193024]
[152.32936096 -10.01667881]
[150.54209900 6.13085270]
[144.28332520 21.13813972]
[134.05032349 33.79241562]
[120.66187286 43.06867599]
[105.19275665 48.21271133]
[105.86254120 63.19775009]
[106.53232574 78.18278503]
[120.34242249 89.76047516]
[121.41506195 107.74966431]
[109.07860565 120.88638306]
[110.19425201 135.84483337]
[111.30989838 150.80328369]
[112.42555237 165.76174927]
[113.54119873 180.72019958]
[114.65684509 195.67864990]
[115.77249908 210.63710022]
[116.88814545 225.59555054]
[128.84664917 228.98289490]
[139.16900635 235.86201477]
[146.86799622 245.55700684]
[151.21289062 257.12356567]
[151.79869080 269.44088745]
[148.58386230 281.32037354]
[141.89292908 291.62030029]
[132.38375854 299.35543823]
[120.98288727 303.79147339]
[121.42949677 318.78482056]
[121.87609863 333.77816772]
[122.32270813 348.77151489]
[137.32205200 349.13034058]
[152.28051758 350.29376221]
[167.15495300 352.25842285]
[181.90249634 355.01867676]
[196.48062134 358.56652832]
[210.84729004 362.89178467]
[224.96109009 367.98196411]
[238.78131104 373.82238770]
[252.26811218 380.39620972]
[265.38259888 387.68450928]
[278.08700562 395.66619873]
[290.34463501 404.31835938]
[302.12017822 413.61596680]
[313.37966919 423.53222656]
[324.09066772 434.03860474]
[334.22229004 445.10473633]
[343.74530029 456.69876099]
[352.63223267 468.78723145]
[360.85751343 481.33529663]
[368.39736938 494.30679321]
[375.23010254 507.66427612]
[381.33602905 521.36926270]
[386.69747925 535.38226318]
[391.29901123 549.66284180]
[395.12741089 564.16986084]
[398.17160034 578.86138916]
[400.42279053 593.69519043]
[401.87451172 608.62841797]
[402.52255249 623.61804199]
[402.36511230 638.62084961]
[401.40255737 653.59356689]
[399.63772583 668.49304199]
[397.07565308 683.27630615]
[393.72378540 697.90075684]
[389.59173584 712.32415771]
[384.69146729 726.50500488]
[379.03704834 740.40240479]
[372.64483643 753.97619629]
[365.53326416 767.18737793]
[357.72277832 779.99774170]
[349.23593140 792.37036133]
[340.09722900 804.26965332]
[330.33294678 815.66125488]
[319.97131348 826.51226807]
[309.04214478 836.79150391]
[297.57699585 846.46929932]
[285.60888672 855.51770020]
[273.17233276 863.91064453]
[260.30322266 871.62390137]
[247.03863525 878.63531494]
[233.41682434 884.92462158]
[219.47706604 890.47369385]
[205.25953674 895.26647949]
[190.80525208 899.28924561]
[176.15586853 902.53033447]
[161.35363770 904.98040771]
[146.44122314 906.63244629]
[131.46163940 907.48162842]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 152]
[58 151]
[59 150]
[60 149]
[66 140]
[67 139]
[68 138]
[69 137]
[70 136]
[71 135]
[72 134]
[73 133]
[78 130]
[79 129]
[80 128]
[92 118]
[93 117]
[94 116]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
