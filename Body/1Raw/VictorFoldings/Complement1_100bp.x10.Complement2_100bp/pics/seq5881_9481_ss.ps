%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[84.15436554 352.45874023]
[86.87081909 367.26800537]
[86.44849396 382.31845093]
[82.90585327 396.95208740]
[76.39777374 410.52920532]
[67.20874786 422.45629883]
[55.74048996 432.21194458]
[42.49433899 439.36968994]
[28.04935837 443.61660767]
[13.03702354 444.76702881]
[-1.88639128 442.77069092]
[-16.06849861 437.71484375]
[-28.88931847 429.82052612]
[-39.78837967 419.43283081]
[-48.28922272 407.00588989]
[-54.02022171 393.08291626]
[-56.73085022 378.27255249]
[-56.30260468 363.22232056]
[-52.75421143 348.59005737]
[-46.24078751 335.01550293]
[-37.04707336 323.09201050]
[-25.57497597 313.34088135]
[-12.32600975 306.18835449]
[2.12063932 301.94711304]
[17.13342476 300.80261230]
[32.05605316 302.80480957]
[37.09297180 288.67578125]
[34.07868195 274.08935547]
[46.00073624 263.68862915]
[51.03765488 249.55961609]
[48.02336502 234.97320557]
[59.94542313 224.57247925]
[64.34642029 210.23263550]
[68.10272217 195.71057129]
[71.85902405 181.18850708]
[75.50711060 166.63888550]
[79.04678345 152.06251526]
[82.58645630 137.48614502]
[86.12612915 122.90976715]
[89.66580200 108.33338928]
[80.05004883 119.84587097]
[68.21150970 129.05722046]
[54.68875504 135.54838562]
[40.09698486 139.02406311]
[25.10002708 139.32611084]
[10.38014126 136.44081116]
[-3.39301634 130.49942017]
[-15.59285831 121.77223206]
[-25.66437340 110.65627289]
[-33.14937592 97.65724182]
[-37.70734406 83.36650848]
[-39.13092422 68.43421936]
[-37.35535431 53.53967667]
[-32.46141052 39.36049271]
[-24.67173004 26.54172134]
[-14.34069538 15.66653156]
[-1.93829894 7.22967434]
[11.97123337 1.61496830]
[26.75510979 -0.92215413]
[41.74076462 -0.26627102]
[56.24644852 3.55277944]
[69.61225128 10.36125565]
[81.23011017 19.84941864]
[90.57150269 31.58561707]
[97.21145630 45.03593445]
[100.84788513 59.58847427]
[101.31536865 74.58118439]
[98.59140015 89.33615875]
[107.55209351 77.30677795]
[97.63191986 64.37059784]
[91.75226593 49.18082428]
[90.37977600 32.96474075]
[93.61726379 17.03020096]
[101.19606781 2.66013408]
[112.49831390 -8.99073887]
[126.60729218 -16.98870087]
[142.38179016 -20.69585609]
[158.54843140 -19.82100677]
[173.80444336 -14.44251442]
[182.40299988 -26.73335266]
[191.00157166 -39.02418900]
[199.60012817 -51.31502914]
[200.55305481 -57.85746765]
[204.13000488 -62.27361298]
[208.64219666 -63.83861542]
[217.60289001 -75.86799622]
[226.56358337 -87.89736938]
[228.60253906 -103.58664703]
[242.41053772 -109.17127991]
[251.37124634 -121.20066071]
[253.08903503 -139.53453064]
[269.46343994 -145.84687805]
[278.24404907 -158.00833130]
[287.02462769 -170.16978455]
[288.82977295 -185.88768005]
[302.55310059 -191.67727661]
[311.33370972 -203.83872986]
[320.11431885 -216.00018311]
[328.89492798 -228.16163635]
[337.67550659 -240.32310486]
[326.60232544 -250.46710205]
[316.78167725 -261.82806396]
[308.34637451 -274.25231934]
[301.41052246 -287.57186890]
[296.06793213 -301.60659790]
[292.39080811 -316.16665649]
[290.42889404 -331.05514526]
[290.20874023 -346.07073975]
[291.73333740 -361.01034546]
[294.98202515 -375.67196655]
[299.91088867 -389.85726929]
[306.45327759 -403.37442017]
[314.52069092 -416.04064941]
[324.00405884 -427.68463135]
[334.77511597 -438.14889526]
[346.68820190 -447.29193115]
[359.58218384 -454.99011230]
[373.28268433 -461.13928223]
[387.60446167 -465.65631104]
[402.35379028 -468.48010254]
[417.33120728 -469.57247925]
[432.33416748 -468.91867065]
[447.15979004 -466.52749634]
[461.60754395 -462.43130493]
[475.48205566 -456.68548584]
[488.59570312 -449.36776733]
[500.77111816 -440.57708740]
[511.84362793 -430.43234253]
[521.66351318 -419.07073975]
[530.09796143 -406.64590454]
[537.03295898 -393.32586670]
[542.37463379 -379.29080200]
[546.05078125 -364.73049927]
[548.01165771 -349.84188843]
[548.23083496 -334.82626343]
[546.70526123 -319.88674927]
[543.45556641 -305.22537231]
[538.52575684 -291.04040527]
[531.98248291 -277.52368164]
[523.91418457 -264.85800171]
[514.43005371 -253.21464539]
[503.65829468 -242.75109863]
[491.74462891 -233.60884094]
[478.85012817 -225.91154480]
[465.14920044 -219.76327515]
[450.82711792 -215.24720764]
[436.07760620 -212.42439270]
[421.10012817 -211.33300781]
[406.09719849 -211.98783875]
[391.27172852 -214.38000488]
[376.82424927 -218.47715759]
[362.95013428 -224.22389221]
[349.83697510 -231.54249573]
[341.05636597 -219.38104248]
[332.27575684 -207.21958923]
[323.49517822 -195.05813599]
[314.71456909 -182.89666748]
[313.53747559 -168.04864502]
[299.18609619 -161.38919067]
[290.40548706 -149.22772217]
[281.62487793 -137.06626892]
[283.24258423 -125.07837677]
[276.02682495 -114.87460327]
[263.40060425 -112.23995972]
[254.43992615 -100.21058655]
[253.04190063 -85.38173676]
[238.59297180 -78.93667603]
[229.63226318 -66.90729523]
[220.67156982 -54.87791824]
[211.89097595 -42.71646500]
[203.29240417 -30.42562675]
[194.69384766 -18.13478851]
[186.09527588 -5.84395027]
[195.07403564 4.60135221]
[201.28797913 16.90510941]
[204.36962891 30.35026169]
[204.13420105 44.15195084]
[200.59074402 57.50333786]
[193.94174194 69.62275696]
[184.57171631 79.79950714]
[173.02488708 87.43548584]
[159.97355652 92.08037567]
[146.17906189 93.45818329]
[132.44723511 91.48365021]
[119.58147430 86.26747894]
[110.62078094 98.29685211]
[104.24217224 111.87306213]
[100.70249939 126.44944000]
[97.16282654 141.02581787]
[93.62315369 155.60218811]
[90.08348083 170.17855835]
[91.09943390 179.25631714]
[86.38108063 184.94480896]
[82.62477875 199.46687317]
[78.86847687 213.98893738]
[92.30917358 207.32952881]
[106.56557465 211.99375916]
[113.47096252 225.30975342]
[109.06961823 239.64949036]
[95.88283539 246.79853821]
[81.46459961 242.66157532]
[74.07444763 229.60939026]
[76.72846985 245.20640564]
[65.16668701 254.59652710]
[60.12976837 268.72555542]
[62.78378296 284.32257080]
[51.22200012 293.71270752]
[46.18508530 307.84173584]
[59.00900650 315.73098755]
[69.91215515 326.11441040]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 208]
[27 207]
[29 205]
[30 204]
[32 202]
[33 195]
[34 194]
[35 193]
[36 191]
[37 190]
[38 189]
[39 188]
[40 187]
[68 186]
[69 185]
[79 173]
[80 172]
[81 171]
[82 170]
[85 169]
[86 168]
[87 167]
[89 165]
[90 164]
[92 161]
[93 160]
[94 159]
[96 157]
[97 156]
[98 155]
[99 154]
[100 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
