%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[134.01818848 606.56152344]
[124.21048737 595.19781494]
[115.49314880 582.97766113]
[107.94053650 570.00524902]
[101.61710358 556.39135742]
[96.57678986 542.25201416]
[92.86260223 527.70800781]
[90.50623322 512.88330078]
[89.52777863 497.90438843]
[89.93558502 482.89910889]
[91.72618866 467.99545288]
[94.88429260 453.32061768]
[99.38297272 438.99978638]
[105.18383026 425.15512085]
[112.23738098 411.90475464]
[120.48344421 399.36175537]
[129.85166931 387.63311768]
[140.26211548 376.81887817]
[151.62597656 367.01138306]
[163.84629822 358.29425049]
[176.81880188 350.74185181]
[190.43283081 344.41864014]
[185.39591980 330.28961182]
[180.35899353 316.16058350]
[175.32208252 302.03155518]
[170.28517151 287.90252686]
[165.14320374 273.81137085]
[159.89648438 259.75891113]
[154.64976501 245.70643616]
[148.98698425 231.81640625]
[142.91314697 218.10115051]
[136.83930969 204.38587952]
[130.76547241 190.67060852]
[124.69164276 176.95535278]
[119.10893250 172.11228943]
[118.63117218 162.99037170]
[106.53097534 154.30506897]
[108.25193787 138.57772827]
[96.15174103 129.89242554]
[97.87270355 114.16510010]
[86.81798553 105.60444641]
[88.32312012 91.70386505]
[82.45416260 77.89968872]
[76.58519745 64.09551239]
[70.40943146 50.42583847]
[63.92993546 36.89749146]
[57.45043945 23.36914825]
[50.87041092 9.88941383]
[44.19021606 -3.54096270]
[37.41022491 -16.92123604]
[30.53081322 -30.25066566]
[23.65139961 -43.58009338]
[16.77198792 -56.90952301]
[9.30424690 -69.91847229]
[1.26307380 -82.58100128]
[-6.77809906 -95.24352264]
[-14.02027893 -100.81027222]
[-14.84310150 -108.15497589]
[-22.69485664 -120.93582153]
[-36.27549362 -114.53039551]
[-50.47836304 -109.65785217]
[-65.13105774 -106.37734222]
[-80.05570984 -104.72869873]
[-95.07113647 -104.73191833]
[-109.99507904 -106.38696289]
[-124.64636230 -109.67375946]
[-138.84713745 -114.55239105]
[-152.42503357 -120.96364594]
[-165.21520996 -128.82968140]
[-177.06240845 -138.05503845]
[-187.82281494 -148.52770996]
[-197.36579895 -160.12057495]
[-205.57554626 -172.69290161]
[-212.35237122 -186.09207153]
[-217.61402893 -200.15542603]
[-221.29663086 -214.71228027]
[-223.35546875 -229.58589172]
[-223.76557922 -244.59571838]
[-222.52195740 -259.55957031]
[-219.63970947 -274.29577637]
[-215.15382385 -288.62545776]
[-209.11875916 -302.37466431]
[-201.60775757 -315.37652588]
[-192.71202087 -327.47317505]
[-182.53950500 -338.51779175]
[-171.21372986 -348.37628174]
[-158.87214661 -356.92898560]
[-145.66459656 -364.07208252]
[-131.75140381 -369.71884155]
[-117.30144501 -373.80075073]
[-102.49014282 -376.26824951]
[-87.49728394 -377.09133911]
[-72.50488281 -376.26010132]
[-57.69491577 -373.78457642]
[-43.24717712 -369.69485474]
[-29.33703995 -364.04052734]
[-16.13336372 -356.89025879]
[-3.79642963 -348.33087158]
[7.52400446 -338.46624756]
[17.69051933 -327.41613770]
[26.57970047 -315.31466675]
[34.08364487 -302.30874634]
[40.11125946 -288.55624390]
[44.58937454 -274.22412109]
[47.46363068 -259.48635864]
[48.69913483 -244.52183533]
[48.28089142 -229.51222229]
[46.21397781 -214.63973999]
[42.52347946 -200.08489990]
[37.25420380 -186.02438354]
[30.47010994 -172.62889099]
[22.25355148 -160.06101990]
[12.70426941 -148.47334290]
[1.93818438 -138.00650024]
[-9.91401386 -128.78758240]
[-2.06225872 -116.00673676]
[5.88442564 -103.28469849]
[13.92559910 -90.62217712]
[21.96677208 -77.95964813]
[26.28312874 -92.32520294]
[39.42734909 -99.55219269]
[53.86983109 -95.50067902]
[61.33726120 -82.49154663]
[57.55195618 -67.97702026]
[44.68231201 -60.27167892]
[30.10141754 -63.78893661]
[36.98083115 -50.45950699]
[43.86024094 -37.13007736]
[50.73965454 -23.80064774]
[56.60073090 -19.29847527]
[57.62059402 -10.22115707]
[64.30078888 3.20921874]
[70.09418488 7.79815578]
[70.97878265 16.88965225]
[77.45828247 30.41799736]
[83.93777466 43.94634247]
[87.12397003 45.45647812]
[89.73701477 48.58490753]
[91.02426910 53.04542923]
[90.38937378 58.22654724]
[96.25833893 72.03072357]
[102.12729645 85.83489990]
[113.18201447 94.39555359]
[111.67687988 108.29613495]
[124.19686127 117.96881104]
[122.05611420 132.70877075]
[134.57609558 142.38143921]
[132.43534851 157.12141418]
[138.40690613 170.88151550]
[144.48074341 184.59677124]
[150.55458069 198.31204224]
[156.62841797 212.02731323]
[162.70225525 225.74258423]
[166.29891968 228.17526245]
[168.69355774 231.31057739]
[169.81286621 234.68438721]
[169.74183655 237.85638428]
[168.70223999 240.45971680]
[173.94895935 254.51219177]
[179.19567871 268.56466675]
[185.12910461 275.50961304]
[184.41419983 282.86560059]
[189.45111084 296.99462891]
[194.48802185 311.12365723]
[199.52494812 325.25268555]
[204.56185913 339.38171387]
[219.10572815 335.66680908]
[233.93032837 333.30969238]
[248.90916443 332.33050537]
[263.91445923 332.73754883]
[278.81817627 334.52740479]
[293.49319458 337.68478394]
[307.81427002 342.18273926]
[321.65921021 347.98291016]
[334.90991211 355.03579712]
[347.45333862 363.28125000]
[359.18246460 372.64886475]
[369.99719238 383.05877686]
[379.80526733 394.42214966]
[388.52301025 406.64202881]
[396.07604980 419.61416626]
[402.39996338 433.22787476]
[407.44073486 447.36700439]
[411.15539551 461.91094971]
[413.51226807 476.73556519]
[414.49121094 491.71444702]
[414.08392334 506.71972656]
[412.29382324 521.62341309]
[409.13619995 536.29840088]
[404.63800049 550.61938477]
[398.83758545 564.46423340]
[391.78448486 577.71484375]
[383.53884888 590.25811768]
[374.17102051 601.98706055]
[363.76092529 612.80163574]
[352.39736938 622.60949707]
[340.17736816 631.32702637]
[327.20510864 638.87988281]
[313.59127808 645.20355225]
[299.45205688 650.24407959]
[284.90808105 653.95849609]
[270.08340454 656.31512451]
[255.10452271 657.29382324]
[240.09924316 656.88629150]
[225.19557190 655.09594727]
[210.52067566 651.93804932]
[196.19975281 647.43963623]
[182.35499573 641.63897705]
[169.10452271 634.58569336]
[156.56137085 626.33978271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 166]
[23 165]
[24 164]
[25 163]
[26 162]
[27 160]
[28 159]
[29 158]
[30 153]
[31 152]
[32 151]
[33 150]
[34 149]
[36 148]
[38 146]
[40 144]
[42 142]
[43 141]
[44 140]
[45 136]
[46 135]
[47 134]
[48 132]
[49 131]
[50 129]
[51 128]
[52 127]
[53 126]
[54 119]
[55 118]
[56 117]
[58 116]
[59 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
