%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAG\
) } def
/len { sequence length } bind def

/coor [
[180.44055176 454.33654785]
[191.93154907 444.65075684]
[184.07980347 431.86990356]
[176.22804260 419.08908081]
[170.04833984 415.03530884]
[168.35617065 406.05895996]
[160.69557190 393.16265869]
[153.03497314 380.26632690]
[145.37437439 367.36999512]
[145.64927673 382.36746216]
[140.55638123 396.47640991]
[130.76576233 407.84057617]
[117.56553650 414.96475220]
[102.69242096 416.91168213]
[88.10323334 413.42517090]
[75.71743011 404.96398926]
[67.16458130 392.64129639]
[63.56995010 378.07836914]
[65.40648651 363.19122314]
[72.43254852 349.93850708]
[83.72374725 340.06384277]
[97.79452515 334.86642456]
[112.79363251 335.03005981]
[126.74768066 340.53320312]
[137.82220459 350.65374756]
[133.20819092 336.38101196]
[128.59417725 322.10827637]
[123.98017120 307.83554077]
[119.36616516 293.56280518]
[113.44298553 307.34381104]
[100.61009979 315.11019897]
[85.65385437 313.96533203]
[74.15256500 304.33621216]
[70.39591217 289.81423950]
[75.78505707 275.81576538]
[88.30995941 267.56188965]
[103.29916382 268.13107300]
[115.16270447 277.31201172]
[105.12178040 266.31066895]
[110.06011200 251.27993774]
[107.17484283 236.56004333]
[104.28956604 221.84014893]
[101.40429688 207.12025452]
[93.88547516 220.09974670]
[80.22062683 226.28617859]
[65.50640106 223.37216187]
[55.23083878 212.44454956]
[53.22647095 197.57907104]
[60.24087906 184.32017517]
[73.65785980 177.61311340]
[88.47321320 179.95945740]
[99.16172028 190.48510742]
[98.04607391 175.52665710]
[96.93041992 160.56819153]
[85.51174164 151.07350159]
[84.16722107 135.91938782]
[94.20355988 124.00680542]
[93.08790588 109.04835510]
[84.67173004 121.46479034]
[70.92094421 127.45777130]
[56.09638214 125.17031860]
[44.79160309 115.31121826]
[40.50950623 100.93541718]
[44.57695389 86.49741364]
[55.73360062 76.47098541]
[70.52243042 73.96292877]
[84.36097717 79.75038910]
[92.96128845 92.04030609]
[93.85410309 77.06689453]
[94.74692535 62.09349060]
[95.63973999 47.12008667]
[96.53255463 32.14668274]
[97.31387329 17.16704369]
[97.98365784 2.18200493]
[98.65344238 -12.80303383]
[99.32323456 -27.78807259]
[88.93666840 -39.39656067]
[89.82939148 -54.58398056]
[100.96031952 -64.41444397]
[101.63010406 -79.39948273]
[102.29988861 -94.38452148]
[94.18773651 -104.41226959]
[95.05410004 -116.87955475]
[103.89043427 -125.14065552]
[96.98825073 -139.37689209]
[105.46937561 -151.62106323]
[103.13155365 -156.28816223]
[102.84624481 -160.92193604]
[104.25705719 -164.74615479]
[106.75115204 -167.23851013]
[108.31166840 -182.15711975]
[109.87219238 -197.07571411]
[103.61257935 -211.60595703]
[112.63197327 -223.45921326]
[114.19249725 -238.37782288]
[99.89895630 -243.12216187]
[86.95970917 -250.82864380]
[75.97994995 -261.13684082]
[67.47322845 -273.56463623]
[61.83741379 -287.53073120]
[59.33610535 -302.38189697]
[60.08629227 -317.42355347]
[64.05288696 -331.95214844]
[71.05036163 -345.28817749]
[80.75144196 -356.80786133]
[92.70237732 -365.97241211]
[106.34421539 -372.35321045]
[121.03888702 -375.65176392]
[136.09910583 -375.71386719]
[150.82048035 -372.53656006]
[164.51445007 -366.26846313]
[176.54054260 -357.20272827]
[186.33627319 -345.76342773]
[193.44345093 -332.48553467]
[197.52969360 -317.99014282]
[198.40386963 -302.95520020]
[196.02508545 -288.08389282]
[190.50460815 -274.07180786]
[182.10064697 -261.57431030]
[171.20625305 -251.17593384]
[158.33097839 -243.36303711]
[144.07704163 -238.50102234]
[129.11109924 -236.81730652]
[127.55057526 -221.89869690]
[133.92181396 -208.43553162]
[124.79080200 -195.51519775]
[123.23027802 -180.59658813]
[121.66975403 -165.67799377]
[120.44277954 -150.72825623]
[127.40882111 -137.56301880]
[118.86383820 -124.24784088]
[127.55240631 -109.00068665]
[117.28492737 -93.71473694]
[116.61514282 -78.72969818]
[115.94535828 -63.74465942]
[126.15486908 -52.96034241]
[125.68907928 -37.75384140]
[114.30827332 -27.11828804]
[113.63848877 -12.13324928]
[112.96869659 2.85178995]
[112.29891205 17.83682823]
[115.14060974 24.65933418]
[111.50595856 33.03949738]
[110.61314392 48.01290131]
[109.72032928 62.98630905]
[108.82751465 77.95971680]
[107.93469238 92.93312073]
[108.04636383 107.93270111]
[109.16201019 122.89115906]
[120.85443115 133.18315125]
[121.77277374 148.36903381]
[111.88887787 159.45254517]
[113.00452423 174.41099548]
[114.12017059 189.36946106]
[116.12418365 204.23498535]
[119.00946045 218.95487976]
[121.89472961 233.67477417]
[124.78000641 248.39465332]
[135.02729797 260.44885254]
[129.88259888 274.42672729]
[133.63890076 288.94879150]
[138.25291443 303.22152710]
[142.86691284 317.49426270]
[147.48092651 331.76699829]
[152.09494019 346.03973389]
[158.27070618 359.70938110]
[165.93130493 372.60571289]
[173.59190369 385.50204468]
[181.25250244 398.39837646]
[189.00889587 411.23730469]
[196.86064148 424.01815796]
[204.71240234 436.79901123]
[218.54623413 430.92678833]
[233.10078430 427.18209839]
[248.05090332 425.64859009]
[263.06259155 426.36047363]
[277.80047607 429.30191040]
[291.93533325 434.40716553]
[305.15136719 441.56216431]
[317.15335083 450.60708618]
[327.67309570 461.33984375]
[336.47564697 473.52066040]
[343.36434937 486.87747192]
[348.18527222 501.11178589]
[350.83071899 515.90570068]
[351.24160767 530.92864990]
[349.40875244 545.84503174]
[345.37310791 560.32159424]
[339.22482300 574.03491211]
[331.10122681 586.67871094]
[321.18386841 597.97045898]
[309.69424438 607.65789795]
[296.88906860 615.52459717]
[283.05441284 621.39483643]
[268.49932861 625.13745117]
[253.54898071 626.66882324]
[238.53739929 625.95483398]
[223.79991150 623.01129150]
[209.66578674 617.90399170]
[196.45077515 610.74713135]
[184.45008850 601.70050049]
[173.93185425 590.96624756]
[165.13104248 578.78417969]
[158.24426270 565.42639160]
[153.42536926 551.19134521]
[150.78202820 536.39709473]
[150.37327576 521.37408447]
[152.20825195 506.45797729]
[156.24595642 491.98199463]
[162.39619446 478.26950073]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 172]
[3 171]
[4 170]
[6 169]
[7 168]
[8 167]
[9 166]
[25 165]
[26 164]
[27 163]
[28 162]
[29 161]
[38 160]
[40 158]
[41 157]
[42 156]
[43 155]
[52 154]
[53 153]
[54 152]
[57 149]
[58 148]
[68 147]
[69 146]
[70 145]
[71 144]
[72 143]
[73 141]
[74 140]
[75 139]
[76 138]
[79 135]
[80 134]
[81 133]
[84 131]
[86 129]
[90 128]
[91 127]
[92 126]
[94 124]
[95 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
