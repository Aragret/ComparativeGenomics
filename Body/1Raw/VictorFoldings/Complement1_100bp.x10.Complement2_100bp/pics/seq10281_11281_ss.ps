%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[4.79381847 679.21166992]
[-8.20610714 686.70489502]
[-21.64673805 693.37542725]
[-35.47607803 699.19744873]
[-49.64061737 704.14843750]
[-64.08555603 708.20922852]
[-78.75502014 711.36413574]
[-93.59223938 713.60095215]
[-108.53982544 714.91101074]
[-123.53993988 715.28924561]
[-138.53454590 714.73419189]
[-153.46565247 713.24804688]
[-168.27546692 710.83642578]
[-182.90672302 707.50878906]
[-197.30278015 703.27801514]
[-211.40797424 698.16033936]
[-225.16770935 692.17565918]
[-238.52876282 685.34716797]
[-251.43943787 677.70117188]
[-263.84979248 669.26739502]
[-275.71182251 660.07830811]
[-286.97961426 650.16955566]
[-297.60958862 639.57946777]
[-307.56060791 628.34893799]
[-316.79418945 616.52154541]
[-325.27459717 604.14300537]
[-332.96902466 591.26110840]
[-339.84771729 577.92584229]
[-345.88403320 564.18865967]
[-351.05462646 550.10278320]
[-355.33950806 535.72271729]
[-358.72210693 521.10412598]
[-361.18933105 506.30346680]
[-362.73162842 491.37805176]
[-363.34301758 476.38562012]
[-363.02114868 461.38418579]
[-361.76727295 446.43179321]
[-359.58621216 431.58627319]
[-356.48645020 416.90505981]
[-352.47994995 402.44494629]
[-347.58221436 388.26190186]
[-341.81219482 374.41079712]
[-335.19223022 360.94519043]
[-327.74789429 347.91720581]
[-319.50802612 335.37722778]
[-310.50448608 323.37377930]
[-300.77212524 311.95330811]
[-290.34857178 301.15997314]
[-279.27413940 291.03555298]
[-267.59170532 281.61920166]
[-255.34648132 272.94738770]
[-242.58580017 265.05361938]
[-229.35905457 257.96844482]
[-215.71740723 251.71928406]
[-201.71363831 246.33030701]
[-187.40193176 241.82237244]
[-172.83764648 238.21290588]
[-158.07713318 235.51589966]
[-143.17750549 233.74174500]
[-128.19641113 232.89733887]
[-113.19178772 232.98594666]
[-98.22169495 234.00721741]
[-83.34406281 235.95719910]
[-68.61643219 238.82833862]
[-54.09579086 242.60954285]
[-39.83831787 247.28619385]
[-25.89916992 252.84016418]
[-12.33227444 259.25000000]
[0.80987763 266.49087524]
[8.85105038 253.82835388]
[16.89222336 241.16581726]
[24.93339729 228.50329590]
[32.97457123 215.84077454]
[41.01574326 203.17825317]
[48.77213287 190.33930969]
[56.23987579 177.33035278]
[63.70761490 164.32141113]
[71.17535400 151.31245422]
[78.64309692 138.30349731]
[86.11083984 125.29454803]
[90.93683624 111.09209442]
[85.80446625 98.08631134]
[94.19763184 86.90389252]
[96.20164490 72.03836823]
[98.20566559 57.17284012]
[85.01572418 47.20201111]
[78.69014740 32.02694702]
[80.86800385 15.82590199]
[90.86102295 3.00812817]
[105.86706543 -2.98614478]
[107.64952850 -17.87986183]
[109.43199158 -32.77357864]
[111.21446228 -47.66729736]
[112.99692535 -62.56101227]
[114.77939606 -77.45473480]
[108.73680115 -92.07655334]
[117.93167877 -103.79421234]
[119.71414185 -118.68793488]
[105.70314026 -124.28742218]
[93.61939240 -133.32319641]
[84.28677368 -145.17919922]
[78.34161377 -159.04705811]
[76.18925476 -173.98123169]
[77.97644806 -188.96350098]
[83.58134460 -202.97235107]
[92.62179565 -215.05261230]
[104.48139954 -224.38064575]
[118.35154724 -230.32044983]
[133.28656006 -232.46704102]
[148.26814270 -230.67405701]
[162.27481079 -225.06375122]
[174.35157776 -216.01864624]
[183.67503357 -204.15544128]
[189.60948181 -190.28300476]
[191.75030518 -175.34715271]
[189.95155334 -160.36627197]
[184.33583069 -146.36177063]
[175.28605652 -134.28849792]
[163.41926575 -124.96961975]
[149.54452515 -119.04052734]
[134.60786438 -116.90546417]
[132.82539368 -102.01174927]
[138.99548340 -88.45522308]
[129.67311096 -75.67226410]
[127.89064026 -60.77854919]
[126.10817719 -45.88483047]
[124.32571411 -30.99111366]
[122.54324341 -16.09739685]
[120.76078033 -1.20367885]
[132.20877075 6.24351358]
[139.36558533 17.95285797]
[140.78590393 31.66897392]
[136.13584900 44.72099304]
[126.26918793 54.54265976]
[113.07118988 59.17685318]
[111.06717682 74.04238129]
[109.06316376 88.90790558]
[114.19553375 101.91368866]
[105.80236816 113.09610748]
[114.16977692 100.64675140]
[125.06616211 90.33808136]
[137.95986938 82.67307281]
[152.22178650 78.02572632]
[167.15603638 76.62278748]
[182.03393555 78.53271484]
[196.12957764 83.66232300]
[208.75520325 91.76131439]
[219.29476929 102.43453217]
[227.23402405 115.16120911]
[232.18560791 129.32037354]
[233.90791321 144.22116089]
[232.31690979 159.13655090]
[227.49021912 173.33876038]
[219.66336060 186.13485718]
[209.21820068 196.90049744]
[196.66439819 205.11036682]
[182.61447144 210.36390686]
[167.75396729 212.40480042]
[152.80793762 211.13343811]
[138.50564575 206.61187744]
[125.54493713 199.06072998]
[114.55818176 188.84841919]
[106.08145142 176.47323608]
[100.52835083 162.53900146]
[98.16981506 147.72558594]
[99.11978912 132.76228333]
[91.65205383 145.77124023]
[84.18431091 158.78019714]
[76.71656799 171.78913879]
[69.24882507 184.79809570]
[61.78108597 197.80705261]
[61.79580307 203.02690125]
[59.98761749 207.30285645]
[57.02133560 210.09860229]
[53.67826843 211.21942139]
[45.63709259 223.88194275]
[37.59592056 236.54446411]
[29.55474854 249.20700073]
[21.51357460 261.86950684]
[13.47240257 274.53204346]
[25.61455536 283.34762573]
[37.18515778 292.90106201]
[48.13943863 303.15533447]
[58.43502808 314.07080078]
[68.03208923 325.60522461]
[76.89348602 337.71398926]
[84.98494720 350.35021973]
[92.27516174 363.46508789]
[98.73592377 377.00778198]
[104.34223938 390.92596436]
[109.07241821 405.16577148]
[112.90816498 419.67208862]
[115.83463287 434.38882446]
[117.84050751 449.25903320]
[118.91802216 464.22518921]
[119.06300354 479.22937012]
[118.27490234 494.21353149]
[116.55676270 509.11972046]
[113.91522980 523.89025879]
[110.36051941 538.46801758]
[105.90639496 552.79656982]
[100.57008362 566.82049561]
[94.37223053 580.48553467]
[87.33680725 593.73876953]
[79.49104309 606.52905273]
[70.86529541 618.80676270]
[61.49291992 630.52453613]
[51.41018677 641.63690186]
[40.65610504 652.10095215]
[29.27227592 661.87615967]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 180]
[70 179]
[71 178]
[72 177]
[73 176]
[74 175]
[75 171]
[76 170]
[77 169]
[78 168]
[79 167]
[80 166]
[81 139]
[83 137]
[84 136]
[85 135]
[90 129]
[91 128]
[92 127]
[93 126]
[94 125]
[95 124]
[97 122]
[98 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
