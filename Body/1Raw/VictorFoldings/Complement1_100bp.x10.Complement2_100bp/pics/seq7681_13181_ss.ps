%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[185.33866882 622.33361816]
[172.88014221 613.83447266]
[162.92729187 602.50347900]
[156.10575867 589.05291748]
[152.84437561 574.32830811]
[153.34812927 559.25524902]
[157.58537292 544.78125000]
[165.28973389 531.81616211]
[175.97691345 521.17498779]
[188.97511292 513.52661133]
[203.46725464 509.35183716]
[203.02066040 494.35848999]
[202.57405090 479.36514282]
[202.12744141 464.37176514]
[201.68083191 449.37841797]
[201.23422241 434.38507080]
[200.78762817 419.39172363]
[200.34101868 404.39837646]
[196.69293213 389.84875488]
[190.01274109 376.41839600]
[183.33253479 362.98800659]
[177.53913879 358.39907837]
[176.65454102 349.30758667]
[170.17504883 335.77923584]
[163.69555664 322.25088501]
[157.21604919 308.72253418]
[150.73655701 295.19418335]
[138.26062012 287.05786133]
[139.27760315 271.26937866]
[132.79809570 257.74102783]
[126.31860352 244.21267700]
[119.83911133 230.68432617]
[108.53792572 226.37042236]
[103.02902985 215.15275574]
[106.75523376 202.80455017]
[100.47787476 189.18122864]
[100.08819580 204.17617798]
[96.41606903 218.71974182]
[89.64064789 232.10234070]
[80.09253693 243.67097473]
[68.23760223 252.86122131]
[54.65427017 259.22463989]
[40.00530624 262.45074463]
[25.00546265 262.38217163]
[10.38661575 259.02218628]
[-3.13794684 252.53480530]
[-14.90833282 243.23652649]
[-24.35024071 231.58103943]
[-31.00297546 218.13703918]
[-34.54193878 203.56050110]
[-34.79445267 188.56262207]
[-31.74820137 173.87519836]
[-25.55181503 160.21485901]
[-16.50762939 148.24812317]
[-5.05693102 138.55888367]
[8.24157524 131.61987305]
[22.73902512 127.76969147]
[37.72805786 127.19618225]
[52.47732544 129.92732239]
[66.26717377 135.82987976]
[78.42476654 144.61581421]
[88.35691833 155.85647583]
[95.57647705 168.99728394]
[94.90669250 154.01223755]
[94.23690796 139.02720642]
[85.93902588 126.65811920]
[93.05239868 112.52622223]
[85.69034576 100.63959503]
[91.96256256 88.14356232]
[83.61677551 74.70264435]
[90.77805328 61.64257812]
[90.10826874 46.65753937]
[89.43848419 31.67250252]
[88.76869965 16.68746376]
[88.09891510 1.70242453]
[87.31758881 -13.27721310]
[86.42477417 -28.25061798]
[85.53195953 -43.22402573]
[74.49574280 -50.94520187]
[69.98733521 -63.43058395]
[73.44190216 -76.04597473]
[83.38211823 -84.24485016]
[82.71233368 -99.22988892]
[82.04254913 -114.21492767]
[73.06811523 -123.47895813]
[72.81874847 -135.97381592]
[80.88282013 -144.99032593]
[80.43621826 -159.98367310]
[79.98960876 -174.97702026]
[77.57747650 -178.58749390]
[76.54367828 -182.39483643]
[76.78086853 -185.94154358]
[78.04412842 -188.85200500]
[79.98960876 -190.87022400]
[80.43621826 -205.86358643]
[71.33409119 -221.87084961]
[81.13262939 -236.42955017]
[81.35595703 -251.42788696]
[81.57928467 -266.42623901]
[67.74305725 -272.78851318]
[57.69569016 -284.23272705]
[53.17794800 -298.77612305]
[54.97255707 -313.89892578]
[62.76859283 -326.98104858]
[75.21533966 -335.75592041]
[90.15633392 -338.70321655]
[105.00294495 -335.31237793]
[117.18291473 -326.17080688]
[124.58599091 -312.86236572]
[125.92954254 -297.69284058]
[120.98079681 -283.29040527]
[110.59714508 -272.15042114]
[96.57762146 -266.20291138]
[96.35429382 -251.20455933]
[96.13096619 -236.20622253]
[104.32839203 -227.31079102]
[104.26508331 -214.81359863]
[95.42956543 -205.41697693]
[94.98296356 -190.42362976]
[94.98296356 -175.42362976]
[95.42956543 -160.43026733]
[95.87617493 -145.43692017]
[105.89038086 -131.02572632]
[97.02758789 -114.88471222]
[97.69737244 -99.89967346]
[98.36715698 -84.91463470]
[111.25189209 -74.10618591]
[112.35453033 -56.98605347]
[100.50536346 -44.11684036]
[101.39817810 -29.14343452]
[102.29099274 -14.17002869]
[105.82704926 -7.68018055]
[103.08395386 1.03263938]
[103.75373840 16.01767731]
[104.42352295 31.00271606]
[105.09330750 45.98775482]
[105.76309204 60.97279358]
[114.06097412 73.34188080]
[106.94760132 87.47377777]
[114.30965424 99.36040497]
[108.03743744 111.85643768]
[116.38322449 125.29735565]
[109.22194672 138.35742188]
[109.89173126 153.34245300]
[110.56151581 168.32749939]
[114.10118866 182.90386963]
[120.37854767 196.52719116]
[135.65699768 206.80583191]
[133.36744690 224.20483398]
[139.84695435 237.73316956]
[146.32644653 251.26152039]
[152.80593872 264.78985596]
[165.74534607 273.89385986]
[164.26490784 288.71469116]
[170.74440002 302.24304199]
[177.22389221 315.77139282]
[183.70339966 329.29974365]
[190.18289185 342.82806396]
[196.76292419 356.30780029]
[203.44311523 369.73818970]
[210.12330627 383.16857910]
[210.08294678 368.16860962]
[213.02204895 353.45938110]
[218.82354736 339.62670898]
[227.25636292 327.22155762]
[237.98461914 316.73803711]
[250.58102417 308.59365845]
[264.54385376 303.11285400]
[279.31698608 300.51391602]
[294.31201172 300.90032959]
[308.93167114 304.25671387]
[322.59368896 310.44940186]
[334.75390625 319.23171997]
[344.92797852 330.25390625]
[352.71066284 343.07690430]
[357.79202271 357.19003296]
[359.96963501 372.03112793]
[359.15676880 387.00906372]
[355.38580322 401.52734375]
[348.80694580 415.00762939]
[339.68218994 426.91305542]
[328.37503052 436.76943970]
[315.33578491 444.18417358]
[301.08383179 448.86193848]
[286.18679810 450.61642456]
[271.23803711 449.37777710]
[256.83291626 445.19528198]
[243.54525757 438.23556519]
[231.90423584 428.77581787]
[222.37355042 417.19281006]
[215.33436584 403.95178223]
[215.78097534 418.94512939]
[216.22758484 433.93847656]
[216.67417908 448.93182373]
[217.12078857 463.92517090]
[217.56739807 478.91851807]
[218.01400757 493.91186523]
[218.46061707 508.90521240]
[233.17553711 512.21002197]
[246.60594177 519.07116699]
[257.90756226 529.05737305]
[266.36993408 541.54089355]
[271.46118164 555.73699951]
[272.86120605 570.75335693]
[270.48202515 585.64599609]
[264.47320557 599.47875977]
[255.21241760 611.38208008]
[243.28186035 620.60772705]
[229.43145752 626.57574463]
[214.53189087 628.91101074]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 198]
[12 197]
[13 196]
[14 195]
[15 194]
[16 193]
[17 192]
[18 191]
[19 161]
[20 160]
[21 159]
[23 158]
[24 157]
[25 156]
[26 155]
[27 154]
[29 152]
[30 151]
[31 150]
[32 149]
[35 147]
[36 146]
[63 145]
[64 144]
[65 143]
[67 141]
[69 139]
[71 137]
[72 136]
[73 135]
[74 134]
[75 133]
[76 131]
[77 130]
[78 129]
[82 126]
[83 125]
[84 124]
[87 122]
[88 121]
[89 120]
[94 119]
[95 118]
[97 115]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
