%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUGxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[31.74550056 344.82708740]
[36.21242523 359.17645264]
[38.49069977 374.03134155]
[38.52941895 389.05984497]
[36.32772446 403.92626953]
[31.93479729 418.29843140]
[25.44878006 431.85534668]
[17.01457214 444.29406738]
[6.82059860 455.33673096]
[-4.90540552 464.73663330]
[-17.90147591 472.28381348]
[-31.87727737 477.80963135]
[-46.52058411 481.19064331]
[-61.50425720 482.35131836]
[-76.49356079 481.26574707]
[-91.15361786 477.95812988]
[-105.15692902 472.50241089]
[-118.19065857 465.02044678]
[-129.96360779 455.67941284]
[-140.21278381 444.68795776]
[-148.70921326 432.29165649]
[-155.26307678 418.76742554]
[-159.72795105 404.41741943]
[-162.00410461 389.56222534]
[-162.04069519 374.53372192]
[-159.83688354 359.66760254]
[-155.44190979 345.29605103]
[-148.95396423 331.74008179]
[-140.51797485 319.30255127]
[-130.32243347 308.26135254]
[-118.59508514 298.86309814]
[-105.59794617 291.31777954]
[-91.62135315 285.79394531]
[-76.97756958 282.41500854]
[-61.99372864 281.25646973]
[-47.00458145 282.34420776]
[-32.34499359 285.65390015]
[-18.34245682 291.11160278]
[-10.87471581 278.10266113]
[-3.40697455 265.09371948]
[4.06076670 252.08474731]
[11.52850819 239.07580566]
[18.99624825 226.06684875]
[26.46398926 213.05789185]
[33.93173218 200.04893494]
[26.33438110 187.23699951]
[26.16891861 172.24272156]
[33.57991028 159.09191895]
[46.66427612 151.36558533]
[61.95896530 151.22494507]
[69.42670441 138.21600342]
[76.89444733 125.20704651]
[76.52043152 110.31713867]
[90.10112000 102.20075989]
[91.06393433 94.19791412]
[97.77812195 89.05490875]
[105.43872070 76.15857697]
[113.09931946 63.26225281]
[120.47000885 50.19806671]
[127.54711151 36.97254181]
[134.62422180 23.74701309]
[141.70132446 10.52148533]
[148.77842712 -2.70404243]
[155.85552979 -15.92957020]
[162.63552856 -29.30984306]
[169.11502075 -42.83818817]
[160.55690002 -55.51516724]
[159.50013733 -70.67366791]
[166.12864685 -84.23571777]
[178.57229614 -92.60301971]
[193.43325806 -93.61151886]
[199.91276550 -107.13986206]
[206.39225769 -120.66821289]
[212.87174988 -134.19656372]
[199.80139160 -141.56777954]
[187.25257874 -149.79556274]
[175.28132629 -158.84313965]
[163.94113159 -168.67010498]
[153.28263855 -179.23257446]
[143.35343933 -190.48335266]
[134.19787598 -202.37222290]
[125.85686493 -214.84605408]
[118.36763763 -227.84916687]
[111.76364899 -241.32345581]
[106.07440186 -255.20877075]
[101.32529449 -269.44305420]
[97.53754425 -283.96276855]
[94.72806549 -298.70306396]
[92.90940094 -313.59808350]
[92.08969116 -328.58132935]
[92.27257538 -343.58584595]
[93.45725250 -358.54464722]
[95.63842773 -373.39093018]
[98.80635834 -388.05834961]
[102.94689178 -402.48144531]
[108.04153442 -416.59576416]
[114.06754303 -430.33825684]
[120.99799347 -443.64758301]
[128.80194092 -456.46429443]
[137.44451904 -468.73110962]
[146.88713074 -480.39328003]
[157.08761597 -491.39871216]
[168.00039673 -501.69824219]
[179.57675171 -511.24588013]
[191.76495361 -519.99896240]
[204.51060486 -527.91845703]
[217.75674438 -534.96893311]
[231.44422913 -541.11889648]
[245.51191711 -546.34088135]
[259.89697266 -550.61163330]
[274.53518677 -553.91198730]
[289.36114502 -556.22723389]
[304.30862427 -557.54705811]
[319.31088257 -557.86553955]
[334.30090332 -557.18133545]
[349.21176147 -555.49737549]
[363.97683716 -552.82122803]
[378.53021240 -549.16485596]
[392.80685425 -544.54461670]
[406.74301147 -538.98107910]
[420.27642822 -532.49914551]
[433.34671021 -525.12774658]
[445.89541626 -516.89978027]
[457.86654663 -507.85208130]
[469.20660400 -498.02496338]
[479.86499023 -487.46237183]
[489.79403687 -476.21145630]
[498.94946289 -464.32247925]
[507.29031372 -451.84854126]
[514.77935791 -438.84533691]
[521.38317871 -425.37094116]
[527.07226562 -411.48556519]
[531.82116699 -397.25122070]
[535.60876465 -382.73144531]
[538.41802979 -367.99111938]
[540.23651123 -353.09609985]
[541.05603027 -338.11285400]
[540.87298584 -323.10830688]
[539.68811035 -308.14953613]
[537.50677490 -293.30328369]
[534.33862305 -278.63589478]
[530.19793701 -264.21286011]
[525.10308838 -250.09861755]
[519.07690430 -236.35618591]
[512.14630127 -223.04695129]
[504.34219360 -210.23034668]
[495.69946289 -197.96362305]
[486.25671387 -186.30157471]
[476.05609131 -175.29626465]
[465.14315796 -164.99687195]
[453.56671143 -155.44938660]
[441.37838745 -146.69644165]
[428.63262939 -138.77713013]
[415.38641357 -131.72683716]
[401.69885254 -125.57704926]
[387.63110352 -120.35521698]
[373.24597168 -116.08467865]
[358.60772705 -112.78449249]
[343.78173828 -110.46941376]
[328.83425903 -109.14977264]
[313.83197021 -108.83145905]
[298.84194946 -109.51590729]
[283.93112183 -111.20005798]
[269.16607666 -113.87638092]
[254.61276245 -117.53292847]
[240.33618164 -122.15336609]
[226.40010071 -127.71706390]
[219.92060852 -114.18871307]
[213.44110107 -100.66036987]
[206.96160889 -87.13202667]
[215.49082947 -74.92063141]
[216.77105713 -59.98018265]
[210.35870361 -46.31460571]
[197.88523865 -37.63650131]
[182.64337158 -36.35869217]
[176.16387939 -22.83034706]
[176.98435974 -19.40118599]
[176.18464661 -15.40424633]
[173.51600647 -11.60535145]
[169.08106995 -8.85246468]
[162.00395203 4.37306309]
[154.92684937 17.59859085]
[147.84974670 30.82411766]
[140.77264404 44.04964447]
[133.69554138 57.27517319]
[134.36207581 60.73755264]
[133.38470459 64.69479370]
[130.54908752 68.37074280]
[125.99564362 70.92285156]
[118.33504486 83.81917572]
[110.67445374 96.71550751]
[103.11006927 109.66850281]
[102.94994354 125.48889923]
[89.90339661 132.67478943]
[82.43566132 145.68374634]
[74.96791840 158.69268799]
[82.55946350 171.97108459]
[82.48586273 187.16619873]
[74.86701202 200.19767761]
[61.83550262 207.61628723]
[46.94068527 207.51667786]
[39.47294235 220.52563477]
[32.00520325 233.53459167]
[24.53746033 246.54353333]
[17.06971931 259.55249023]
[9.60197830 272.56143188]
[2.13423657 285.57040405]
[-5.33350468 298.57934570]
[6.44078064 307.91873169]
[16.69152069 318.90872192]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 208]
[39 207]
[40 206]
[41 205]
[42 204]
[43 203]
[44 202]
[45 201]
[50 196]
[51 195]
[52 194]
[54 192]
[56 191]
[57 190]
[58 189]
[59 185]
[60 184]
[61 183]
[62 182]
[63 181]
[64 180]
[65 176]
[66 175]
[71 170]
[72 169]
[73 168]
[74 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
