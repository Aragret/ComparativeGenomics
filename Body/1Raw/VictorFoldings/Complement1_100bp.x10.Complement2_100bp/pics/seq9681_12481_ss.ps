%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[46.10371780 746.24169922]
[31.27945518 749.05303955]
[16.23275948 747.93084717]
[1.98954403 742.95153809]
[-10.47906685 734.45471191]
[-20.32294273 723.01965332]
[-26.87091064 709.42602539]
[-29.67652130 694.60070801]
[-28.54848289 679.55444336]
[-23.56370354 665.31311035]
[-15.06205940 652.84777832]
[-3.62320232 643.00836182]
[9.97294521 636.46563721]
[24.79937553 633.66571045]
[25.91502571 618.70727539]
[27.03067398 603.74884033]
[28.14632225 588.79040527]
[29.26197052 573.83190918]
[18.05781174 569.55761719]
[8.32736588 562.52435303]
[0.73620802 553.20404053]
[-4.19404984 542.22528076]
[-6.12159061 530.33105469]
[-4.90808487 518.32849121]
[-0.62858671 507.03384399]
[6.43306017 497.21731567]
[15.80303955 489.55035400]
[26.84934807 484.55963135]
[38.82442093 482.59112549]
[40.82843781 467.72558594]
[42.83245087 452.86004639]
[44.83646393 437.99453735]
[46.84047699 423.12899780]
[48.84449005 408.26348877]
[50.84850311 393.39794922]
[35.90673065 387.96057129]
[22.53366089 379.34680176]
[11.39447689 367.98156738]
[3.04402924 354.42669678]
[-2.10079813 339.35321045]
[-3.78189921 323.50811768]
[-1.91289353 307.67730713]
[3.41644073 292.64660645]
[11.94447422 279.16290283]
[23.25056839 267.89682007]
[36.77582550 259.40945435]
[51.85071182 254.12452698]
[67.72820282 252.30703735]
[69.28872681 237.38842773]
[70.84925079 222.46983337]
[57.73070145 229.74331665]
[43.80723190 224.16325378]
[39.34271240 209.84304810]
[47.62821579 197.33903503]
[62.55597687 195.86869812]
[73.12126160 206.51435852]
[75.78705597 191.75314331]
[78.45285034 176.99192810]
[73.10060883 163.09217834]
[83.16730499 150.88676453]
[85.83309937 136.12554932]
[88.49889374 121.36432648]
[91.16468811 106.60311127]
[77.54149628 112.88074493]
[64.07162476 106.28055573]
[60.68455124 91.66796875]
[69.87711334 79.81482697]
[84.87288666 79.45883942]
[94.61711884 90.86081696]
[98.37342072 76.33876038]
[102.12972260 61.81669998]
[105.88602448 47.29464340]
[109.64232635 32.77258301]
[113.39862061 18.25052261]
[100.07994080 7.41067171]
[92.86263275 -8.11034489]
[93.15485382 -25.16947937]
[100.84942627 -40.33546066]
[114.35513306 -50.57897186]
[130.92553711 -53.87768555]
[134.24780273 -68.50514984]
[137.57006836 -83.13260651]
[140.89231873 -97.76007080]
[127.65586090 -90.70343781]
[113.26690674 -94.94113922]
[105.96811676 -108.04562378]
[109.94055939 -122.51005554]
[122.90864563 -130.04853821]
[137.44366455 -126.34269714]
[145.21914673 -113.51634216]
[149.83316040 -127.78907776]
[146.71592712 -143.30015564]
[157.99301147 -153.03034973]
[154.87579346 -168.54142761]
[166.15287781 -178.27162170]
[170.55386353 -192.61148071]
[174.74087524 -207.01525879]
[178.92788696 -221.41903687]
[183.11489868 -235.82281494]
[169.72055054 -242.67756653]
[157.86567688 -251.94355774]
[147.97883606 -263.28582764]
[140.41744995 -276.29437256]
[135.45483398 -290.49890137]
[133.27038574 -305.38595581]
[133.94308472 -320.41738892]
[137.44860840 -335.04983521]
[143.66023254 -348.75427246]
[152.35340881 -361.03536987]
[163.21388245 -371.44915771]
[175.84906006 -379.61914062]
[189.80218506 -385.25000000]
[204.56886292 -388.13821411]
[219.61528015 -388.17935181]
[234.39753723 -385.37194824]
[248.38124084 -379.81744385]
[261.06091309 -371.71664429]
[271.97814941 -361.36242676]
[280.73834229 -349.12905884]
[287.02481079 -335.45874023]
[290.61029053 -320.84570312]
[291.36517334 -305.81817627]
[289.26214600 -290.91940308]
[284.37728882 -276.68792725]
[276.88711548 -263.63824463]
[267.06246948 -252.24209595]
[255.25843811 -242.91142273]
[241.90174866 -235.98353577]
[227.47526550 -231.70887756]
[212.50045776 -230.24195862]
[197.51867676 -231.63580322]
[193.33168030 -217.23202515]
[189.14466858 -202.82824707]
[184.95765686 -188.42446899]
[186.43193054 -183.88182068]
[185.06820679 -178.36482239]
[180.42559814 -173.65762329]
[183.87284851 -159.16741943]
[172.26574707 -148.41633606]
[175.71299744 -133.92614746]
[164.10588074 -123.17506409]
[159.49188232 -108.90232849]
[155.51977539 -94.43780518]
[152.19752502 -79.81034851]
[148.87525940 -65.18288422]
[145.55300903 -50.55542755]
[156.34376526 -43.32333755]
[164.05357361 -32.82889175]
[167.74726868 -20.30835533]
[166.96438599 -7.24584723]
[161.77644348 4.80255795]
[152.78100586 14.39420891]
[141.03292847 20.37260628]
[127.92068481 22.00682449]
[124.16438293 36.52888489]
[120.40808105 51.05094147]
[116.65177917 65.57299805]
[112.89547729 80.09506226]
[109.13918304 94.61711884]
[105.92590332 109.26890564]
[103.26010895 124.03012848]
[100.59431458 138.79133606]
[97.92852020 153.55256653]
[103.09008789 168.50811768]
[93.21407318 179.65771484]
[90.54827118 194.41893005]
[87.88247681 209.18014526]
[85.76785278 224.03034973]
[84.20732880 238.94895935]
[82.64681244 253.86755371]
[96.11635590 258.17462158]
[108.47492218 265.03750610]
[119.24336243 274.18780518]
[128.00462341 285.26849365]
[134.41992188 297.84783936]
[138.24182129 311.43615723]
[139.32379150 325.50503540]
[137.62582397 339.50772095]
[133.21586609 352.90045166]
[126.26721191 365.16351318]
[117.05155945 375.82153320]
[105.92848206 384.46173096]
[93.33135223 390.75003052]
[79.75048828 394.44396973]
[65.71403503 395.40194702]
[63.71001816 410.26748657]
[61.70600510 425.13302612]
[59.70199203 439.99853516]
[57.69797897 454.86407471]
[55.69396591 469.72961426]
[53.68994904 484.59512329]
[69.69302368 493.28109741]
[81.11716461 507.41610718]
[86.23388672 524.81994629]
[84.28493500 542.82122803]
[75.59456635 558.66711426]
[61.51592636 569.94458008]
[44.22042465 574.94757080]
[43.10477448 589.90600586]
[41.98912811 604.86450195]
[40.87347794 619.82293701]
[39.75783157 634.78137207]
[54.00488663 639.74969482]
[66.48005676 648.23687744]
[76.33275604 659.66430664]
[82.89122009 673.25286865]
[85.70828247 688.07604980]
[84.59185791 703.12316895]
[79.61808014 717.36834717]
[71.12606812 729.84020996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 202]
[15 201]
[16 200]
[17 199]
[18 198]
[29 191]
[30 190]
[31 189]
[32 188]
[33 187]
[34 186]
[35 185]
[48 170]
[49 169]
[50 168]
[56 167]
[57 166]
[58 165]
[60 163]
[61 162]
[62 161]
[63 160]
[69 159]
[70 158]
[71 157]
[72 156]
[73 155]
[74 154]
[80 146]
[81 145]
[82 144]
[83 143]
[90 142]
[91 141]
[93 139]
[95 137]
[96 134]
[97 133]
[98 132]
[99 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
