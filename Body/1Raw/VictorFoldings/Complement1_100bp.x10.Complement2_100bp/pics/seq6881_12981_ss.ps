%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[140.74592590 730.25195312]
[127.45243835 723.28002930]
[114.85895538 715.11126709]
[103.07292938 705.81536865]
[92.19490051 695.47161865]
[82.31769562 684.16827393]
[73.52557373 672.00177002]
[65.89355469 659.07592773]
[59.48674774 645.50103760]
[54.35981750 631.39294434]
[50.55650330 616.87194824]
[48.10926056 602.06195068]
[47.03896332 587.08935547]
[47.35474396 572.08184814]
[49.05390930 557.16748047]
[52.12196350 542.47357178]
[56.53272629 528.12542725]
[62.24857330 514.24542236]
[69.22072601 500.95205688]
[77.38971710 488.35873413]
[86.68582916 476.57284546]
[97.02976990 465.69500732]
[108.33326721 455.81796265]
[120.49989319 447.02606201]
[133.42584229 439.39425659]
[147.00083923 432.98767090]
[161.10903931 427.86096191]
[175.63011169 424.05789185]
[173.18438721 409.25863647]
[170.73866272 394.45935059]
[168.29292297 379.66009521]
[164.97067261 365.03262329]
[160.78366089 350.62884521]
[156.59664917 336.22506714]
[145.61427307 326.16342163]
[149.19192505 310.75204468]
[138.20956421 300.69039917]
[141.78721619 285.27899170]
[131.34063721 279.18017578]
[127.73449707 267.21441650]
[133.42419434 255.63899231]
[129.45208740 241.17446899]
[125.47999573 226.70994568]
[114.64864349 216.48591614]
[118.45536041 201.12950134]
[114.48326111 186.66496277]
[110.51116180 172.20043945]
[106.53907013 157.73591614]
[102.90505981 154.63705444]
[101.17915344 149.22241211]
[102.67091370 142.78143311]
[99.13124084 128.20506287]
[95.59156799 113.62868500]
[86.08058929 103.38013458]
[89.83205414 89.91098022]
[79.05672455 78.32638550]
[83.57215881 64.13272095]
[80.03248596 49.55634308]
[67.79975128 43.91942978]
[61.14421082 32.43403244]
[62.30177689 19.40552139]
[70.62665558 9.57059193]
[67.30439758 -5.05686855]
[63.98213959 -19.68432808]
[58.84705353 -5.59068155]
[48.16609955 4.94104147]
[34.00159836 9.87732983]
[19.08849716 8.26506329]
[6.30628014 0.41554487]
[-1.87700605 -12.15560532]
[-3.88129735 -27.02109718]
[0.68040335 -41.31063461]
[10.92730331 -52.26513290]
[24.88088608 -57.76945114]
[39.84693527 -56.76078796]
[52.93573761 -49.43390656]
[61.62054825 -37.20233154]
[60.95076370 -52.18737030]
[60.28097534 -67.17240906]
[59.61119080 -82.15744781]
[58.94140625 -97.14248657]
[55.43193054 -105.57583618]
[58.37488556 -112.35527802]
[57.92827988 -127.34862518]
[57.48167419 -142.34197998]
[56.81188583 -157.32701111]
[55.91907120 -172.30041504]
[46.02841187 -161.02323914]
[31.22254181 -158.61778259]
[18.27050400 -166.18380737]
[13.09379673 -180.26222229]
[18.05914116 -194.41656494]
[30.89644814 -202.17565918]
[45.73667526 -199.99215698]
[55.79577255 -188.86260986]
[56.46555710 -203.84764099]
[57.13534164 -218.83268738]
[50.02196884 -232.96458435]
[58.31985474 -245.33366394]
[44.41416931 -251.41613770]
[33.64749908 -262.11395264]
[27.47595024 -275.98031616]
[26.73417091 -291.13995361]
[31.52248192 -305.54260254]
[41.19330215 -317.24044800]
[54.43873596 -324.65145874]
[69.46744537 -326.77334595]
[84.24691772 -323.31912231]
[96.77835846 -314.75598145]
[105.36698151 -302.24197388]
[108.85125732 -287.46957397]
[106.75996399 -272.43658447]
[99.37592316 -259.17608643]
[87.69777679 -249.48149109]
[73.30489349 -244.66387939]
[80.46617126 -231.60382080]
[72.12038422 -218.16290283]
[71.45059204 -203.17785645]
[70.78080750 -188.19282532]
[70.89247894 -173.19323730]
[71.78529358 -158.21983337]
[74.69936371 -154.43601990]
[75.26739502 -148.78143311]
[72.47502136 -142.78857422]
[72.92163086 -127.79523468]
[73.36823273 -112.80187988]
[73.92644501 -97.81227112]
[74.59622955 -82.82723236]
[75.26601410 -67.84219360]
[75.93579865 -52.85715485]
[76.60558319 -37.87211609]
[78.60959625 -23.00658798]
[81.93186188 -8.37912846]
[85.25411987 6.24833202]
[99.85461426 14.59484863]
[103.98228455 31.24649048]
[94.60885620 46.01667023]
[98.14852905 60.59304428]
[108.67067719 71.13504791]
[104.40843201 86.37131500]
[113.91941071 96.61986542]
[110.16794586 110.08901978]
[113.70761871 124.66539001]
[117.24729156 139.24176025]
[121.00359344 153.76382446]
[124.97568512 168.22834778]
[128.94778442 182.69287109]
[132.91987610 197.15739441]
[144.03533936 208.41604614]
[139.94451904 222.73785400]
[143.91661072 237.20237732]
[147.88871765 251.66690063]
[161.28678894 264.29913330]
[156.19099426 281.09197998]
[167.47285461 292.18389893]
[163.59571838 306.56503296]
[174.87757874 317.65692139]
[171.00042725 332.03805542]
[175.18743896 346.44183350]
[179.37445068 360.84561157]
[185.70530701 347.24707031]
[198.76374817 339.86621094]
[213.67927551 341.45587158]
[224.88877869 351.42315674]
[228.21138000 366.05053711]
[222.40785217 379.88235474]
[209.64274597 387.75967407]
[194.67713928 386.74444580]
[183.09219360 377.21435547]
[185.53793335 392.01364136]
[187.98365784 406.81289673]
[190.42938232 421.61218262]
[205.40194702 420.54113770]
[220.40945435 420.85617065]
[235.32386780 422.55459595]
[250.01795959 425.62188721]
[264.36633301 430.03195190]
[278.24661255 435.74710083]
[291.54031372 442.71859741]
[304.13406372 450.88696289]
[315.92041016 460.18246460]
[326.79879761 470.52587891]
[336.67636108 481.82888794]
[345.46890259 493.99505615]
[353.10134888 506.92062378]
[359.50860596 520.49530029]
[364.63601685 534.60327148]
[368.43981934 549.12414551]
[370.88754272 563.93402100]
[371.95834351 578.90661621]
[371.64306641 593.91412354]
[369.94439697 608.82849121]
[366.87683105 623.52252197]
[362.46655273 637.87084961]
[356.75115967 651.75103760]
[349.77944946 665.04461670]
[341.61087036 677.63824463]
[332.31515503 689.42443848]
[321.97158813 700.30261230]
[310.66839600 710.17999268]
[298.50207520 718.97235107]
[285.57638550 726.60455322]
[272.00158691 733.01159668]
[257.89355469 738.13879395]
[243.37261963 741.94232178]
[228.56268311 744.38983154]
[213.59008789 745.46038818]
[198.58258057 745.14483643]
[183.66821289 743.44592285]
[168.97422791 740.37811279]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 172]
[29 171]
[30 170]
[31 169]
[32 160]
[33 159]
[34 158]
[36 156]
[38 154]
[41 152]
[42 151]
[43 150]
[45 148]
[46 147]
[47 146]
[48 145]
[51 144]
[52 143]
[53 142]
[55 140]
[57 138]
[58 137]
[62 134]
[63 133]
[64 132]
[77 131]
[78 130]
[79 129]
[80 128]
[81 127]
[83 126]
[84 125]
[85 124]
[86 121]
[87 120]
[95 119]
[96 118]
[97 117]
[99 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
