%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[107.00078583 543.19506836]
[93.30168915 549.36096191]
[78.90296936 553.64587402]
[64.06159210 555.97332764]
[49.04241943 556.30175781]
[34.11348343 554.62536621]
[19.54121208 550.97399902]
[5.58566284 545.41290283]
[-7.50411081 538.04125977]
[-19.49450684 528.99060059]
[-30.17154312 518.42254639]
[-39.34467316 506.52557373]
[-46.85019684 493.51211548]
[-52.55416107 479.61431885]
[-56.35477829 465.08026123]
[-58.18421936 450.16931152]
[-58.00983810 435.14758301]
[-55.83474350 420.28311157]
[-51.69775772 405.84118652]
[-45.67270279 392.07955933]
[-37.86710739 379.24383545]
[-28.42027092 367.56304932]
[-17.50078392 357.24566650]
[-5.30351639 348.47583008]
[7.95385647 341.41003418]
[22.03474236 336.17437744]
[36.68785095 332.86230469]
[51.65167618 331.53289795]
[66.65917969 332.20993042]
[69.32497406 317.44869995]
[71.99076843 302.68746948]
[66.63852692 288.78775024]
[76.70521545 276.58233643]
[79.37101746 261.82110596]
[82.03681183 247.05989075]
[84.70260620 232.29867554]
[86.37414551 217.39210510]
[87.04393005 202.40705872]
[87.71371460 187.42202759]
[88.38349915 172.43698120]
[80.45455933 163.30142212]
[80.88993073 150.81166077]
[90.00129700 141.68226624]
[90.89411926 126.70886230]
[91.78693390 111.73545837]
[85.70145416 99.14742279]
[93.23966217 87.37172699]
[93.90944672 72.38668823]
[94.35605621 57.39334106]
[94.80265808 42.39999008]
[91.93014526 33.72897720]
[95.36917877 27.18720055]
[96.03896332 12.20216274]
[88.92559052 -1.92973399]
[97.22348022 -14.29882336]
[97.89326477 -29.28386116]
[98.56304932 -44.26890182]
[99.23283386 -59.25394058]
[99.90261841 -74.23897552]
[100.57240295 -89.22401428]
[93.45903015 -103.35591125]
[101.75691986 -115.72500610]
[86.84778595 -117.42750549]
[72.09164429 -120.15455627]
[57.55879974 -123.89315796]
[43.31851578 -128.62548828]
[29.43865204 -134.32901001]
[15.98535728 -140.97653198]
[3.02273893 -148.53637695]
[-9.38742828 -156.97250366]
[-21.18600273 -166.24473572]
[-32.31676102 -176.30888367]
[-42.72665787 -187.11697388]
[-52.36608505 -198.61749268]
[-61.18910217 -210.75566101]
[-69.15367126 -223.47361755]
[-76.22183228 -236.71075439]
[-82.35990143 -250.40399170]
[-87.53862762 -264.48806763]
[-91.73333740 -278.89587402]
[-94.92402649 -293.55877686]
[-97.09551239 -308.40682983]
[-98.23742676 -323.36935425]
[-98.34432983 -338.37500000]
[-97.41572571 -353.35226440]
[-95.45603180 -368.22976685]
[-92.47457886 -382.93661499]
[-88.48558807 -397.40274048]
[-83.50806427 -411.55917358]
[-77.56572723 -425.33850098]
[-70.68688965 -438.67498779]
[-62.90434265 -451.50512695]
[-54.25516891 -463.76779175]
[-44.78058243 -475.40447998]
[-34.52574158 -486.35980225]
[-23.53951263 -496.58151245]
[-11.87425041 -506.02090454]
[0.41445470 -514.63299561]
[13.26804066 -522.37677002]
[26.62525368 -529.21533203]
[40.42243958 -535.11602783]
[54.59384918 -540.05078125]
[69.07195282 -543.99609375]
[83.78774261 -546.93310547]
[98.67109680 -548.84790039]
[113.65110016 -549.73126221]
[128.65634155 -549.57904053]
[143.61534119 -548.39196777]
[158.45678711 -546.17565918]
[173.10997009 -542.94067383]
[187.50505066 -538.70251465]
[201.57344055 -533.48126221]
[215.24807739 -527.30187988]
[228.46380615 -520.19378662]
[241.15765381 -512.19085693]
[253.26911926 -503.33120728]
[264.74047852 -493.65710449]
[275.51708984 -483.21459961]
[285.54757690 -472.05349731]
[294.78414917 -460.22698975]
[303.18276978 -447.79141235]
[310.70343018 -434.80603027]
[317.31030273 -421.33270264]
[322.97186279 -407.43569946]
[327.66119385 -393.18118286]
[331.35589600 -378.63711548]
[334.03836060 -363.87280273]
[335.69586182 -348.95858765]
[336.32043457 -333.96557617]
[335.90911865 -318.96520996]
[334.46389771 -304.02893066]
[331.99166870 -289.22796631]
[328.50415039 -274.63284302]
[324.01803589 -260.31307983]
[318.55465698 -246.33694458]
[312.14004517 -232.77105713]
[304.80480957 -219.68002319]
[296.58386230 -207.12626648]
[287.51641846 -195.16958618]
[277.64566040 -183.86698914]
[267.01864624 -173.27230835]
[255.68601990 -163.43605042]
[243.70176697 -154.40507507]
[231.12301636 -146.22242737]
[218.00970459 -138.92710876]
[204.42431641 -132.55389404]
[190.43161011 -127.13312531]
[176.09825134 -122.69065094]
[161.49255371 -119.24764252]
[146.68412781 -116.82050323]
[131.74353027 -115.42080688]
[116.74195862 -115.05521393]
[123.90323639 -101.99514771]
[115.55744171 -88.55422974]
[114.88765717 -73.56919098]
[114.21787262 -58.58415604]
[113.54808807 -43.59911728]
[112.87830353 -28.61407661]
[112.20851898 -13.62903786]
[119.36979675 -0.56897175]
[111.02400208 12.87194729]
[110.35421753 27.85698700]
[109.79601288 42.84659576]
[109.34940338 57.83994675]
[108.90279388 72.83329773]
[111.46766663 76.86199951]
[111.52896118 82.54472351]
[108.21306610 88.26454163]
[114.29854584 100.85257721]
[106.76033783 112.62827301]
[105.86752319 127.60167694]
[104.97470856 142.57508850]
[113.59619904 158.84626770]
[103.36853790 173.10676575]
[102.69875336 188.09181213]
[102.02896881 203.07684326]
[101.35918427 218.06188965]
[111.19119263 206.73352051]
[125.55670166 202.41702271]
[140.00439453 206.44989014]
[150.05751038 217.58248901]
[152.60096741 232.36528015]
[146.84666443 246.21765137]
[134.57762146 254.84727478]
[119.59553528 255.58018494]
[106.54277039 248.18928528]
[99.46382141 234.96446228]
[96.79802704 249.72567749]
[94.13223267 264.48690796]
[91.46643829 279.24810791]
[96.62800598 294.20367432]
[86.75198364 305.35327148]
[84.08618927 320.11450195]
[81.42039490 334.87570190]
[95.71669769 339.49081421]
[109.27028656 345.97030640]
[121.83927917 354.19854736]
[133.19935608 364.02868652]
[143.14779663 375.28533936]
[151.50704956 387.76757812]
[158.12794495 401.25265503]
[162.89231873 415.49990845]
[165.71514893 430.25506592]
[166.54605103 445.25482178]
[165.37020874 460.23150635]
[162.20858765 474.91781616]
[157.11763000 489.05166626]
[150.18818665 502.38079834]
[141.54389954 514.66735840]
[131.33906555 525.69213867]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 194]
[30 193]
[31 192]
[33 190]
[34 189]
[35 188]
[36 187]
[37 177]
[38 176]
[39 175]
[40 174]
[43 172]
[44 171]
[45 170]
[47 168]
[48 165]
[49 164]
[50 163]
[52 162]
[53 161]
[55 159]
[56 158]
[57 157]
[58 156]
[59 155]
[60 154]
[62 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
