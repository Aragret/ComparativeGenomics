%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[192.91987610 467.81567383]
[191.59980774 452.86196899]
[191.72914124 437.85067749]
[193.30670166 422.92196655]
[196.31774902 408.21517944]
[200.73414612 393.86767578]
[206.51469421 380.01339722]
[213.60539246 366.78173828]
[221.94004822 354.29617310]
[231.44082642 342.67333984]
[242.01904297 332.02169800]
[253.57591248 322.44079590]
[245.16130066 310.02328491]
[236.74668884 297.60580444]
[228.33206177 285.18829346]
[219.73350525 272.89746094]
[210.95289612 260.73599243]
[202.17228699 248.57453918]
[193.39169312 236.41308594]
[184.61108398 224.25163269]
[175.83049011 212.09017944]
[167.04988098 199.92872620]
[158.26927185 187.76727295]
[149.48867798 175.60580444]
[140.52798462 163.57643127]
[123.97289276 157.75440979]
[121.70999146 139.47981262]
[112.39511108 127.72256470]
[103.08023071 115.96531677]
[87.33086395 110.19176483]
[85.06514740 93.57121277]
[75.57624817 81.95394897]
[66.08734894 70.33668518]
[56.59845352 58.71942520]
[41.87614059 52.92597198]
[39.81737137 38.17433548]
[30.32847404 26.55707359]
[20.83957481 14.93981075]
[6.11726332 9.14635849]
[4.05849409 -5.60527658]
[-5.43040419 -17.22253990]
[-24.58349037 -23.50917435]
[-26.85721779 -42.71118546]
[-36.68779755 -54.04077911]
[-46.51837921 -65.37036896]
[-56.34896088 -76.69996643]
[-66.17954254 -88.02955627]
[-78.35274506 -79.24779510]
[-91.26414490 -71.59259796]
[-104.80977631 -65.12559509]
[-118.88057709 -59.89886475]
[-133.36326599 -55.95448303]
[-148.14122009 -53.32421112]
[-163.09545898 -52.02922821]
[-178.10557556 -52.07995605]
[-193.05072021 -53.47599411]
[-207.81056213 -56.20609283]
[-222.26625061 -60.24827576]
[-236.30139160 -65.56999969]
[-249.80300903 -72.12841034]
[-262.66235352 -79.87070465]
[-274.77593994 -88.73454285]
[-286.04617310 -98.64856720]
[-296.38235474 -109.53294373]
[-305.70126343 -121.30003357]
[-313.92782593 -133.85510254]
[-320.99584961 -147.09706116]
[-326.84838867 -160.91928101]
[-331.43835449 -175.21049500]
[-334.72875977 -189.85560608]
[-336.69314575 -204.73670959]
[-337.31567383 -219.73400879]
[-336.59133911 -234.72671509]
[-334.52597046 -249.59414673]
[-331.13616943 -264.21658325]
[-326.44927979 -278.47628784]
[-320.50302124 -292.25845337]
[-313.34527588 -305.45211792]
[-305.03363037 -317.95104980]
[-295.63507080 -329.65460205]
[-285.22521973 -340.46853638]
[-273.88790894 -350.30581665]
[-261.71444702 -359.08718872]
[-248.80281067 -366.74200439]
[-235.25698853 -373.20858765]
[-221.18601990 -378.43490601]
[-206.70321655 -382.37884521]
[-191.92518616 -385.00866699]
[-176.97090149 -386.30319214]
[-161.96078491 -386.25198364]
[-147.01568604 -384.85549927]
[-132.25593567 -382.12493896]
[-117.80036926 -378.08233643]
[-103.76537323 -372.76019287]
[-90.26396179 -366.20135498]
[-77.40483856 -358.45867920]
[-65.29154205 -349.59445190]
[-54.02159882 -339.68008423]
[-43.68575287 -328.79541016]
[-34.36721802 -317.02801514]
[-26.14103127 -304.47271729]
[-19.07342148 -291.23052979]
[-13.22129536 -277.40811157]
[-8.63177013 -263.11679077]
[-5.34180117 -248.47157288]
[-3.37787604 -233.59039307]
[-2.75580812 -218.59309387]
[-3.48060584 -203.60038757]
[-5.54643393 -188.73303223]
[-8.93665886 -174.11068726]
[-13.62398338 -159.85112000]
[-19.57066727 -146.06913757]
[-26.72883224 -132.87570190]
[-35.04084396 -120.37702942]
[-44.43977356 -108.67376709]
[-54.84994888 -97.86013794]
[-45.01936722 -86.53054810]
[-35.18878555 -75.20095062]
[-25.35820580 -63.87135696]
[-15.52762413 -52.54176712]
[-5.31126928 -52.73944473]
[3.51273489 -47.16402435]
[7.90181160 -37.45236969]
[6.18685913 -26.71143913]
[15.67575741 -15.09417534]
[29.71936035 -10.13166714]
[32.45684052 5.45091200]
[41.94573593 17.06817436]
[51.43463516 28.68543816]
[65.47824097 33.64794540]
[68.21571350 49.23052597]
[77.70461273 60.84778976]
[87.19351196 72.46504974]
[96.68241119 84.08231354]
[108.17868805 85.94695282]
[115.47884369 95.02159119]
[114.83747864 106.65042877]
[124.15236664 118.40768433]
[133.46723938 130.16493225]
[146.16630554 132.42248535]
[153.68264771 142.40689087]
[152.42260742 154.43763733]
[158.37629700 157.31256104]
[161.51341248 162.05128479]
[161.65013123 166.82521057]
[170.43074036 178.98666382]
[179.21133423 191.14811707]
[187.99194336 203.30957031]
[196.77253723 215.47103882]
[205.55314636 227.63249207]
[214.33375549 239.79394531]
[223.11434937 251.95539856]
[231.89495850 264.11685181]
[237.76040649 267.16778564]
[240.75503540 271.99780273]
[240.74955750 276.77368164]
[249.16418457 289.19116211]
[257.57879639 301.60867310]
[265.99340820 314.02615356]
[279.17520142 306.84313965]
[292.98873901 300.96588135]
[307.30499268 296.44927979]
[321.99035645 293.33547974]
[336.90771484 291.65359497]
[351.91772461 291.41931152]
[366.88027954 292.63482666]
[381.65567017 295.28875732]
[396.10592651 299.35635376]
[410.09616089 304.79962158]
[423.49569702 311.56777954]
[436.17947388 319.59756470]
[448.02902222 328.81405640]
[458.93371582 339.13116455]
[468.79177856 350.45257568]
[477.51110840 362.67257690]
[485.01031494 375.67709351]
[491.21939087 389.34469604]
[496.08032227 403.54772949]
[499.54779053 418.15365601]
[501.58935547 433.02603149]
[502.18600464 448.02600098]
[501.33212280 463.01354980]
[499.03570557 477.84869385]
[495.31817627 492.39297485]
[490.21429443 506.51052856]
[483.77166748 520.06958008]
[476.05047607 532.94354248]
[467.12277222 545.01220703]
[457.07196045 556.16284180]
[445.99185181 566.29132080]
[433.98593140 575.30316162]
[421.16629028 583.11419678]
[407.65258789 589.65142822]
[393.57104492 594.85394287]
[379.05313110 598.67303467]
[364.23440552 601.07312012]
[349.25317383 602.03173828]
[334.24938965 601.53997803]
[319.36312866 599.60241699]
[304.73333740 596.23718262]
[290.49664307 591.47564697]
[276.78598022 585.36224365]
[263.72937012 577.95416260]
[251.44868469 569.32043457]
[240.05862427 559.54180908]
[229.66552734 548.70947266]
[220.36642456 536.92468262]
[212.24815369 524.29736328]
[205.38652039 510.94543457]
[199.84556580 496.99362183]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 159]
[13 158]
[14 157]
[15 156]
[16 153]
[17 152]
[18 151]
[19 150]
[20 149]
[21 148]
[22 147]
[23 146]
[24 145]
[25 142]
[27 139]
[28 138]
[29 137]
[31 134]
[32 133]
[33 132]
[34 131]
[36 129]
[37 128]
[38 127]
[40 125]
[41 124]
[43 120]
[44 119]
[45 118]
[46 117]
[47 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
