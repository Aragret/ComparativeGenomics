%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCGxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[62.37377167 972.09387207]
[47.38092041 971.54962158]
[32.42962646 970.30841064]
[17.55226898 968.37292480]
[2.78107381 965.74731445]
[-11.85197067 962.43737793]
[-26.31517220 958.45019531]
[-40.57720947 953.79443359]
[-54.60718536 948.48016357]
[-68.37472534 942.51885986]
[-81.85000610 935.92352295]
[-95.00383759 928.70837402]
[-107.80773926 920.88903809]
[-120.23397827 912.48248291]
[-132.25564575 903.50689697]
[-143.84669495 893.98168945]
[-154.98204041 883.92755127]
[-165.63754272 873.36621094]
[-175.79014587 862.32055664]
[-185.41784668 850.81451416]
[-194.49980164 838.87298584]
[-203.01634216 826.52185059]
[-210.94900513 813.78784180]
[-218.28062439 800.69854736]
[-224.99533081 787.28234863]
[-231.07856750 773.56829834]
[-236.51716614 759.58599854]
[-241.29934692 745.36590576]
[-245.41474915 730.93865967]
[-248.85446167 716.33557129]
[-251.61103821 701.58825684]
[-253.67849731 686.72863770]
[-255.05238342 671.78894043]
[-255.72969055 656.80151367]
[-255.70898438 641.79882812]
[-254.99028015 626.81329346]
[-253.57516479 611.87750244]
[-251.46667480 597.02368164]
[-248.66938782 582.28399658]
[-245.18936157 567.69049072]
[-241.03413391 553.27465820]
[-236.21270752 539.06774902]
[-230.73551941 525.10058594]
[-224.61444092 511.40335083]
[-217.86271667 498.00573730]
[-210.49497986 484.93676758]
[-202.52717590 472.22473145]
[-193.97656250 459.89715576]
[-184.86167908 447.98074341]
[-175.20223999 436.50134277]
[-165.01918030 425.48376465]
[-154.33454895 414.95187378]
[-143.17149353 404.92849731]
[-131.55416870 395.43536377]
[-119.50777435 386.49298096]
[-107.05836487 378.12075806]
[-94.23291779 370.33682251]
[-81.05921173 363.15802002]
[-67.56577301 356.59991455]
[-53.78182602 350.67666626]
[-39.73722839 345.40115356]
[-25.46239090 340.78479004]
[-10.98823357 336.83755493]
[3.65389538 333.56802368]
[18.43228531 330.98324585]
[33.31492996 329.08886719]
[48.26959229 327.88894653]
[63.26388931 327.38607788]
[78.26534271 327.58139038]
[79.15816498 312.60797119]
[80.05097961 297.63458252]
[80.94379425 282.66116333]
[81.83660889 267.68774414]
[82.72942352 252.71435547]
[83.62223816 237.74095154]
[84.51506042 222.76754761]
[85.40787506 207.79412842]
[86.30068970 192.82072449]
[87.19350433 177.84732056]
[80.22746277 164.68208313]
[88.77244568 151.36691284]
[86.03264618 144.50285339]
[89.79165649 136.17773438]
[90.90731049 121.21928406]
[92.02295685 106.26082611]
[89.43434906 98.62724304]
[93.26820374 91.08850861]
[94.60643768 76.14832306]
[86.47321320 59.62766266]
[97.12092590 45.67799759]
[98.23657990 30.71954346]
[91.54711914 16.38212204]
[100.20960236 4.26557493]
[101.32524872 -10.69287872]
[94.63578796 -25.03030205]
[103.29827118 -37.14684677]
[104.41391754 -52.10530090]
[105.52956390 -67.06375122]
[106.64521027 -82.02220917]
[92.72069550 -87.97087097]
[81.48384857 -98.12034607]
[74.15355682 -111.36970520]
[71.52495575 -126.28175354]
[73.88317871 -141.23893738]
[80.97241974 -154.61883545]
[92.02369690 -164.97006226]
[105.83824158 -171.16981506]
[120.91756439 -172.54559326]
[135.62597656 -168.94815063]
[148.36799622 -160.76773071]
[157.76148987 -148.89166260]
[162.78750610 -134.60818481]
[162.90087891 -119.46665192]
[158.08929443 -105.10951233]
[148.87466431 -93.09412384]
[136.25656128 -84.72382355]
[121.60366821 -80.90656281]
[120.48802185 -65.94810486]
[119.37236786 -50.98965073]
[118.25672150 -36.03120041]
[125.02597809 -22.76370430]
[116.28369904 -9.57722950]
[115.16805267 5.38122368]
[121.93730927 18.64871788]
[113.19503021 31.83519363]
[112.07938385 46.79364777]
[119.73281097 56.16123199]
[118.92576599 68.63249207]
[109.54661560 77.48655701]
[108.20838165 92.42674255]
[106.98140717 107.37648010]
[105.86576080 122.33493042]
[104.75011444 137.29338074]
[103.74584961 152.25973511]
[110.64803314 166.49597168]
[102.16690826 178.74014282]
[101.27409363 193.71354675]
[100.38127899 208.68695068]
[99.48846436 223.66035461]
[98.59564972 238.63375854]
[97.70282745 253.60716248]
[96.81001282 268.58056641]
[95.91719818 283.55398560]
[95.02438354 298.52737427]
[94.13156891 313.50079346]
[93.23875427 328.47421265]
[108.15711975 330.06292725]
[122.98542023 332.34399414]
[137.69154358 335.31250000]
[152.24362183 338.96200562]
[166.61013794 343.28457642]
[180.76000977 348.27090454]
[194.66255188 353.91012573]
[208.28767395 360.19009399]
[221.60586548 367.09713745]
[234.58828735 374.61636353]
[247.20680237 382.73147583]
[259.43411255 391.42483521]
[271.24371338 400.67770386]
[282.61001587 410.46997070]
[293.50842285 420.78045654]
[303.91534424 431.58685303]
[313.80822754 442.86572266]
[323.16564941 454.59265137]
[331.96731567 466.74221802]
[340.19418335 479.28814697]
[347.82846069 492.20324707]
[354.85357666 505.45953369]
[361.25436401 519.02832031]
[367.01687622 532.88024902]
[372.12872314 546.98522949]
[376.57876587 561.31280518]
[380.35742188 575.83184814]
[383.45645142 590.51104736]
[385.86920166 605.31848145]
[387.59039307 620.22210693]
[388.61633301 635.18975830]
[388.94479370 650.18890381]
[388.57504272 665.18707275]
[387.50790405 680.15179443]
[385.74569702 695.05065918]
[383.29220581 709.85137939]
[380.15277100 724.52197266]
[376.33416748 739.03057861]
[371.84466553 753.34582520]
[366.69403076 767.43670654]
[360.89340210 781.27270508]
[354.45529175 794.82379150]
[347.39370728 808.06072998]
[339.72390747 820.95477295]
[331.46252441 833.47796631]
[322.62744141 845.60327148]
[313.23779297 857.30438232]
[303.31390381 868.55596924]
[292.87725830 879.33367920]
[281.95050049 889.61413574]
[270.55728149 899.37506104]
[258.72225952 908.59539795]
[246.47106934 917.25506592]
[233.83026123 925.33538818]
[220.82719421 932.81884766]
[207.49003601 939.68927002]
[193.84767151 945.93164062]
[179.92965698 951.53259277]
[165.76612854 956.47998047]
[151.38775635 960.76300049]
[136.82568359 964.37237549]
[122.11145020 967.30041504]
[107.27693176 969.54064941]
[92.35424042 971.08831787]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 146]
[70 145]
[71 144]
[72 143]
[73 142]
[74 141]
[75 140]
[76 139]
[77 138]
[78 137]
[79 136]
[81 134]
[83 133]
[84 132]
[85 131]
[87 130]
[88 129]
[90 126]
[91 125]
[93 123]
[94 122]
[96 120]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
