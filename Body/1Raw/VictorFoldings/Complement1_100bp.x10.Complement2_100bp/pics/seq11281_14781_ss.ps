%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUGxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[83.68765259 562.92193604]
[70.47107697 555.79876709]
[58.07149124 547.33306885]
[46.62475586 537.61761475]
[36.25628281 526.75885010]
[27.07967758 514.87573242]
[19.19548416 502.09854126]
[12.69008446 488.56719971]
[7.63475800 474.42996216]
[4.08489132 459.84173584]
[2.07937980 444.96237183]
[1.64019668 429.95486450]
[2.77215362 414.98370361]
[5.46284866 400.21286011]
[9.68280029 385.80416870]
[15.38577366 371.91555786]
[22.50928307 358.69915771]
[30.97527885 346.29977417]
[40.69100571 334.85327148]
[51.55000687 324.48507690]
[63.43331146 315.30874634]
[76.21071625 307.42486572]
[89.74223328 300.91979980]
[103.87958527 295.86480713]
[118.46789551 292.31530762]
[116.46387482 277.44976807]
[114.45986176 262.58425903]
[105.09155273 251.00477600]
[110.91577148 236.29461670]
[108.91175842 221.42909241]
[106.90774536 206.56355286]
[93.07751465 201.03271484]
[83.81098175 189.24342346]
[81.67555237 174.29998779]
[87.34383392 160.20149231]
[99.38646698 150.77163696]
[97.38245392 135.90611267]
[95.37844086 121.04058075]
[93.37442780 106.17504883]
[90.66993713 103.42584991]
[89.19037628 99.49790192]
[89.43502808 94.96500397]
[91.62822723 90.60269928]
[82.69058990 77.54784393]
[89.26156616 64.18103790]
[80.32392883 51.12618256]
[86.89490509 37.75937653]
[85.55667114 22.81919098]
[84.21843719 7.87900496]
[69.22145844 8.34653568]
[54.22266006 7.94127560]
[39.27280807 6.66459703]
[24.42247772 4.52081871]
[9.72192192 1.51719570]
[-4.77911568 -2.33610916]
[-19.03157043 -7.02605724]
[-32.98721313 -12.53677940]
[-46.59882736 -18.84963036]
[-59.82035065 -25.94324493]
[-72.60704803 -33.79362488]
[-84.91564941 -42.37420654]
[-96.70450592 -51.65595245]
[-107.93373871 -61.60746002]
[-118.56533813 -72.19505310]
[-128.56333923 -83.38291168]
[-137.89390564 -95.13317108]
[-146.52546692 -107.40607452]
[-154.42880249 -120.16010284]
[-161.57720947 -133.35208130]
[-167.94645691 -146.93739319]
[-173.51501465 -160.87007141]
[-178.26403809 -175.10293579]
[-182.17745972 -189.58787537]
[-185.24203491 -204.27584839]
[-187.44738770 -219.11715698]
[-188.78607178 -234.06158447]
[-189.25354004 -249.05856323]
[-188.84822083 -264.05737305]
[-187.57147217 -279.00720215]
[-185.42762756 -293.85754395]
[-182.42395020 -308.55807495]
[-178.57058716 -323.05908203]
[-173.88056946 -337.31152344]
[-168.36979675 -351.26715088]
[-162.05688477 -364.87872314]
[-154.96322632 -378.10021973]
[-147.11279297 -390.88690186]
[-138.53215027 -403.19546509]
[-129.25036621 -414.98428345]
[-119.29880524 -426.21347046]
[-108.71116638 -436.84503174]
[-97.52326965 -446.84298706]
[-85.77297211 -456.17349243]
[-73.50003052 -464.80499268]
[-60.74597549 -472.70831299]
[-47.55395889 -479.85662842]
[-33.96862030 -486.22583008]
[-20.03593063 -491.79434204]
[-5.80303288 -496.54330444]
[8.68191433 -500.45666504]
[23.36989594 -503.52117920]
[38.21121597 -505.72647095]
[53.15565109 -507.06509399]
[68.15264130 -507.53250122]
[83.15142822 -507.12710571]
[98.10127258 -505.85031128]
[112.95158386 -503.70639038]
[127.65211487 -500.70266724]
[142.15312195 -496.84924316]
[156.40553284 -492.15917969]
[170.36112976 -486.64834595]
[183.97270203 -480.33535767]
[197.19415283 -473.24163818]
[209.98078918 -465.39114380]
[222.28932190 -456.81048584]
[234.07810974 -447.52862549]
[245.30725098 -437.57702637]
[255.93876648 -426.98934937]
[265.93667603 -415.80142212]
[275.26715088 -404.05108643]
[283.89859009 -391.77810669]
[291.80184937 -379.02401733]
[298.95013428 -365.83197021]
[305.31927490 -352.24658203]
[310.88772583 -338.31387329]
[315.63662720 -324.08096313]
[319.54992676 -309.59600830]
[322.61437988 -294.90802002]
[324.81961060 -280.06668091]
[326.15814209 -265.12225342]
[326.62548828 -250.12524414]
[326.22006226 -235.12646484]
[324.94317627 -220.17662048]
[322.79922485 -205.32632446]
[319.79541016 -190.62580872]
[315.94192505 -176.12481689]
[311.25180054 -161.87242126]
[305.74090576 -147.91683960]
[299.42788696 -134.30531311]
[292.33410645 -121.08386993]
[284.48358154 -108.29727173]
[275.90283203 -95.98877716]
[266.62094116 -84.20002747]
[256.66931152 -72.97092438]
[246.08157349 -62.33945847]
[234.89360046 -52.34159851]
[223.14321899 -43.01118088]
[210.87020874 -34.37977219]
[198.11608887 -26.47657967]
[184.92401123 -19.32834816]
[171.33862305 -12.95926380]
[157.40588379 -7.39087677]
[143.17294312 -2.64202952]
[128.68797302 1.27120984]
[113.99996185 4.33559942]
[99.15862274 6.54077101]
[100.49685669 21.48095512]
[101.83509064 36.42114258]
[110.67700958 48.40737152]
[104.20175171 62.84280396]
[113.04367065 74.82903290]
[106.56841278 89.26446533]
[108.23995972 104.17103577]
[110.24397278 119.03656769]
[112.24798584 133.90209961]
[114.25199890 148.76762390]
[128.36181641 154.67189026]
[137.56112671 166.76608276]
[139.45903015 181.74153137]
[133.64518738 195.56381226]
[121.77327728 204.55953979]
[123.77729034 219.42507935]
[125.78130341 234.29060364]
[135.29295349 246.93334961]
[129.32539368 260.58023071]
[131.32940674 275.44577026]
[133.33341980 290.31127930]
[148.34088135 289.87100220]
[163.31214905 291.00189209]
[178.08319092 293.69149780]
[192.49217224 297.91040039]
[206.38119507 303.61236572]
[219.59812927 310.73489380]
[231.99812317 319.20001221]
[243.44532776 328.91488647]
[253.81433105 339.77313232]
[262.99151611 351.65576172]
[270.87631226 364.43261719]
[277.38238525 377.96365356]
[282.43838501 392.10061646]
[285.98898315 406.68869019]
[287.99520874 421.56796265]
[288.43511963 436.57540894]
[287.30389404 451.54666138]
[284.61392212 466.31762695]
[280.39465332 480.72650146]
[274.69235229 494.61541748]
[267.56948853 507.83215332]
[259.10409546 520.23193359]
[249.38893127 531.67889404]
[238.53042603 542.04766846]
[226.64756775 551.22454834]
[213.87054443 559.10906982]
[200.33935547 565.61480713]
[186.20223999 570.67047119]
[171.61410522 574.22070312]
[156.73478699 576.22656250]
[141.72731018 576.66607666]
[126.75609589 575.53448486]
[111.98518372 572.84417725]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 177]
[26 176]
[27 175]
[29 173]
[30 172]
[31 171]
[36 166]
[37 165]
[38 164]
[39 163]
[43 162]
[45 160]
[47 158]
[48 157]
[49 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
