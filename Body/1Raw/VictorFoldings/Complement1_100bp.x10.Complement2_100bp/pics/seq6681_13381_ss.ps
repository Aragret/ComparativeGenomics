%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[104.15310669 707.01953125]
[90.08293915 701.79858398]
[76.45967102 695.50292969]
[63.36523819 688.17053223]
[50.87838745 679.84545898]
[39.07421875 670.57775879]
[28.02372742 660.42321777]
[17.79337120 649.44287109]
[8.44467926 637.70275879]
[0.03387437 625.27349854]
[-7.38845825 612.22979736]
[-13.77767944 598.65020752]
[-19.09536362 584.61627197]
[-23.30952644 570.21252441]
[-26.39482880 555.52545166]
[-28.33270836 540.64349365]
[-29.11151695 525.65612793]
[-28.72656441 510.65344238]
[-27.18017197 495.72570801]
[-24.48163414 480.96270752]
[-20.64718437 466.45321655]
[-15.69988251 452.28451538]
[-9.66948318 438.54177856]
[-2.59225345 425.30767822]
[5.48924255 412.66183472]
[14.52640057 400.68026733]
[24.46487045 389.43502808]
[35.24488068 378.99377441]
[46.80159378 369.41931152]
[59.06551361 360.76916504]
[71.96287537 353.09542847]
[85.41611481 346.44421387]
[99.34432220 340.85552979]
[113.66372681 336.36297607]
[128.28820801 332.99359131]
[126.06309509 318.15957642]
[123.83797455 303.32553101]
[121.61286163 288.49148560]
[119.38774109 273.65744019]
[117.16262817 258.82339478]
[114.93750763 243.98934937]
[112.71238708 229.15530396]
[110.48727417 214.32125854]
[98.83152008 201.20216370]
[105.71346283 184.12234497]
[103.26773834 169.32307434]
[100.82200623 154.52380371]
[98.37628174 139.72453308]
[94.18424988 133.63777161]
[96.00601959 124.68685150]
[93.78090668 109.85281372]
[87.61180115 123.52548981]
[76.17711639 133.23362732]
[61.68470764 137.10273743]
[46.93282700 134.38575745]
[34.76983643 125.60727692]
[27.54421425 112.46230316]
[26.65111732 97.48891449]
[32.26298904 83.57823944]
[43.29626846 73.41621399]
[57.62059402 68.96495819]
[72.47016907 71.08394623]
[84.97777557 79.36403656]
[92.72878265 92.20767975]
[93.17539215 77.21433258]
[84.07326508 61.20705795]
[93.87180328 46.64836121]
[94.09513092 31.65002441]
[94.31845856 16.65168762]
[94.54178619 1.65334976]
[94.76511383 -13.34498787]
[92.22122955 -17.90302849]
[91.72929382 -22.51944542]
[92.96794128 -26.40284729]
[95.34825134 -29.00408554]
[96.24106598 -43.97748947]
[97.13388824 -58.95089722]
[90.23170471 -73.18713379]
[98.71282959 -85.43131256]
[99.60564423 -100.40471649]
[100.49845886 -115.37812042]
[85.71283722 -118.00526428]
[71.33219147 -122.33119202]
[57.55101013 -128.29739380]
[44.55566406 -135.82318115]
[32.52190018 -144.80677795]
[21.61245918 -155.12669373]
[11.97488403 -166.64335632]
[3.73950839 -179.20103455]
[-2.98229218 -192.62988281]
[-8.09961414 -206.74829102]
[-11.54325008 -221.36532593]
[-13.26663017 -236.28332520]
[-13.24644661 -251.30052185]
[-11.48297310 -266.21383667]
[-8.00005817 -280.82156372]
[-2.84480476 -294.92614746]
[3.91306853 -308.33688354]
[12.18216896 -320.87237549]
[21.85066795 -332.36309814]
[32.78780746 -342.65365601]
[44.84567642 -351.60485840]
[57.86120605 -359.09570312]
[71.65837860 -365.02484131]
[86.05059814 -369.31207275]
[100.84322357 -371.89947510]
[115.83621216 -372.75201416]
[130.82679749 -371.85818481]
[145.61224365 -369.23004150]
[159.99259949 -364.90316772]
[173.77337646 -358.93603516]
[186.76823425 -351.40939331]
[198.80139160 -342.42498779]
[209.71014404 -332.10433960]
[219.34695435 -320.58703613]
[227.58148193 -308.02880859]
[234.30239868 -294.59951782]
[239.41877747 -280.48077393]
[242.86143494 -265.86349487]
[244.58381653 -250.94538879]
[244.56263733 -235.92819214]
[242.79815674 -221.01499939]
[239.31427002 -206.40750122]
[234.15808105 -192.30323792]
[227.39930725 -178.89295959]
[219.12936401 -166.35803223]
[209.46011353 -154.86795044]
[198.52227783 -144.57812500]
[186.46380615 -135.62771606]
[173.44778442 -128.13775635]
[159.65022278 -122.20954132]
[145.25770569 -117.92324829]
[130.46490479 -115.33684540]
[115.47186279 -114.48530579]
[114.57904816 -99.51190186]
[113.68623352 -84.53849030]
[120.65227509 -71.37325287]
[112.10729218 -58.05808258]
[111.21447754 -43.08467484]
[110.32166290 -28.11126900]
[109.76345062 -13.12166023]
[109.54012299 1.87667751]
[109.31679535 16.87501526]
[109.09346771 31.87335205]
[108.87014008 46.87168884]
[117.06756592 55.76712418]
[117.00424957 68.26431274]
[108.16873932 77.66093445]
[107.72212982 92.65428925]
[108.61495209 107.62769318]
[110.84006500 122.46173859]
[113.17555237 137.27880859]
[115.62127686 152.07807922]
[118.06700897 166.87734985]
[120.51273346 181.67662048]
[130.52444458 189.80856323]
[132.25682068 202.18527222]
[125.32131958 212.09614563]
[127.54643250 226.93017578]
[129.77154541 241.76422119]
[131.99667358 256.59826660]
[134.22178650 271.43231201]
[136.44689941 286.26635742]
[138.67202759 301.10040283]
[140.89714050 315.93444824]
[143.12225342 330.76849365]
[158.09169006 329.69876099]
[173.09901428 329.79226685]
[188.05395508 331.04846191]
[202.86657715 333.45977783]
[217.44779968 337.01171875]
[231.70991516 341.68292236]
[245.56716919 347.44528198]
[258.93621826 354.26416016]
[271.73663330 362.09854126]
[283.89144897 370.90130615]
[295.32757568 380.61950684]
[305.97622681 391.19470215]
[315.77334595 402.56329346]
[324.66000366 414.65689087]
[332.58279419 427.40280151]
[339.49401855 440.72433472]
[345.35214233 454.54135132]
[350.12194824 468.77081299]
[353.77471924 483.32711792]
[356.28848267 498.12268066]
[357.64813232 513.06860352]
[357.84552002 528.07489014]
[356.87939453 543.05139160]
[354.75564575 557.90795898]
[351.48696899 572.55529785]
[347.09307861 586.90527344]
[341.60037231 600.87158203]
[335.04190063 614.37030029]
[327.45706177 627.32012939]
[318.89154053 639.64331055]
[309.39682007 651.26562500]
[299.02999878 662.11724854]
[287.85342407 672.13287354]
[275.93432617 681.25225830]
[263.34439087 689.42059326]
[250.15930176 696.58868408]
[236.45840454 702.71350098]
[222.32406616 707.75817871]
[207.84130859 711.69238281]
[193.09721375 714.49249268]
[178.18049622 716.14154053]
[163.18081665 716.62976074]
[148.18843079 715.95410156]
[133.29348755 714.11865234]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 166]
[36 165]
[37 164]
[38 163]
[39 162]
[40 161]
[41 160]
[42 159]
[43 158]
[45 155]
[46 154]
[47 153]
[48 152]
[50 151]
[51 150]
[64 149]
[65 148]
[67 145]
[68 144]
[69 143]
[70 142]
[71 141]
[75 140]
[76 139]
[77 138]
[79 136]
[80 135]
[81 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
