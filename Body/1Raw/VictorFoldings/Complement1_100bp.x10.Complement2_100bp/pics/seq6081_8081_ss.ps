%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUA\
) } def
/len { sequence length } bind def

/coor [
[82.60662079 665.07696533]
[68.22715759 669.43719482]
[53.37351227 671.70654297]
[38.34809113 671.83880615]
[23.45679283 669.83135986]
[9.00278568 665.72497559]
[-4.71966696 659.60327148]
[-17.43119240 651.59088135]
[-28.87300110 641.85101318]
[-38.81214905 630.58184814]
[-47.04629517 618.01281738]
[-53.40779495 604.39990234]
[-57.76714325 590.02014160]
[-60.03558350 575.16638184]
[-60.16693497 560.14093018]
[-58.15852737 545.24975586]
[-54.05124283 530.79602051]
[-47.92870712 517.07397461]
[-39.91556168 504.36291504]
[-30.17494774 492.92172241]
[-18.90516853 482.98324585]
[-6.33566332 474.74987793]
[7.27766752 468.38922119]
[21.65767479 464.03079224]
[36.51160049 461.76324463]
[51.53703690 461.63284302]
[53.54104996 446.76730347]
[55.54506302 431.90176392]
[57.54907990 417.03625488]
[59.55309296 402.17071533]
[61.55710602 387.30520630]
[63.56111908 372.43966675]
[61.33943176 365.39083862]
[65.70722961 357.36834717]
[67.93234253 342.53433228]
[70.15746307 327.70028687]
[72.38257599 312.86624146]
[74.60769653 298.03219604]
[76.50099182 283.15216064]
[78.06150818 268.23355103]
[79.62203217 253.31494141]
[81.18255615 238.39633179]
[82.74308014 223.47773743]
[84.30360413 208.55912781]
[73.16476440 195.95892334]
[74.61394501 178.86463928]
[88.24104309 167.89552307]
[89.57927704 152.95533752]
[90.91751099 138.01515198]
[91.81033325 123.04174805]
[92.25693512 108.04840088]
[92.59191132 93.05213928]
[85.06093597 79.13830566]
[92.98686981 66.52764130]
[93.21019745 51.52930069]
[93.43352509 36.53096390]
[93.65685272 21.53262520]
[91.76355743 6.65259123]
[87.79145813 -7.81193304]
[83.81936646 -22.27645683]
[72.70390320 -33.53509903]
[76.79473114 -47.85691452]
[72.82263184 -62.32143784]
[68.85053253 -76.78596497]
[54.45838547 -77.18184662]
[40.77645493 -81.61325073]
[28.91137314 -89.71231079]
[19.82016182 -100.81491089]
[14.23303890 -114.01511383]
[12.59477139 -128.23908997]
[15.02928352 -142.33244324]
[21.33033180 -155.15396118]
[30.97894287 -165.66796875]
[43.18614960 -173.02799988]
[39.42984772 -187.55004883]
[35.67354584 -202.07211304]
[31.91724586 -216.59417725]
[28.16094589 -231.11622620]
[24.40464592 -245.63829041]
[14.65890408 -234.23564148]
[-0.33683690 -234.59304810]
[-9.52827644 -246.44705200]
[-6.13982677 -261.05932617]
[7.33067274 -267.65823364]
[20.95221329 -261.38058472]
[18.28641701 -276.14178467]
[15.62062263 -290.90301514]
[0.57473415 -291.84359741]
[-13.80864239 -296.35821533]
[-26.69327736 -304.18444824]
[-37.33007431 -314.86721802]
[-45.10062408 -327.78552246]
[-49.55315781 -342.18823242]
[-50.42881012 -357.23803711]
[-47.67667389 -372.05993652]
[-41.45674896 -385.79223633]
[-32.13066101 -397.63653564]
[-20.24061203 -406.90423584]
[-6.47787333 -413.05651855]
[8.35740471 -415.73568726]
[23.40271950 -414.78598022]
[37.78335571 -410.26263428]
[50.66324615 -402.42861938]
[61.29356384 -391.73937988]
[69.05628204 -378.81640625]
[73.50008392 -364.41098022]
[74.36660767 -349.36062622]
[71.60548401 -334.54040527]
[65.37724304 -320.81185913]
[56.04397202 -308.97323608]
[44.14830399 -299.71273804]
[30.38183975 -293.56881714]
[33.04763412 -278.80758667]
[35.71343231 -264.04638672]
[38.92670441 -249.39459229]
[42.68300629 -234.87252808]
[46.43930435 -220.35047913]
[50.19560623 -205.82841492]
[53.95190811 -191.30635071]
[57.70820618 -176.78428650]
[73.35112000 -175.99328613]
[88.00210571 -170.40008545]
[100.22270966 -160.54095459]
[108.80912018 -147.37168884]
[112.91074371 -132.17485046]
[112.11449432 -116.43490601]
[106.48630524 -101.69326019]
[96.56591034 -89.39724731]
[83.31505585 -80.75805664]
[87.28715515 -66.29353333]
[91.25925446 -51.82901001]
[102.09060669 -41.60496902]
[98.28388977 -26.24855232]
[102.25598145 -11.78402901]
[106.22808075 2.68049479]
[109.36530304 -11.98776531]
[116.63422394 -25.10884666]
[127.40601349 -35.54764175]
[140.74880981 -42.40109253]
[155.50833130 -45.07630539]
[170.40771484 -43.34185028]
[184.15802002 -37.34777451]
[195.56971741 -27.61262321]
[203.65557861 -14.97858524]
[207.71607971 -0.53863126]
[207.39997864 14.45803738]
[202.73458862 28.71405983]
[194.12353516 40.99614716]
[182.31173706 50.24177551]
[168.32106018 55.65110397]
[153.36181641 56.75617599]
[138.72814941 53.46139145]
[125.68599701 46.05177689]
[115.36365509 35.16834259]
[108.65518951 21.75595474]
[108.43186188 36.75429153]
[108.20853424 51.75262833]
[107.98520660 66.75096893]
[115.53215790 79.59202576]
[107.59024811 93.27546692]
[110.62862396 100.74144745]
[107.25028992 108.49501038]
[106.80368042 123.48835754]
[108.99664307 127.23600769]
[109.80198669 131.09812927]
[109.35411072 134.62443542]
[107.91986084 137.45454407]
[105.85769653 139.35339355]
[104.51946259 154.29357910]
[103.18122864 169.23376465]
[112.94997406 178.50663757]
[115.55640411 191.52267456]
[110.26868439 203.48603821]
[99.22220612 210.11964417]
[97.66168213 225.03825378]
[96.10116577 239.95686340]
[94.54064178 254.87545776]
[92.98011780 269.79406738]
[91.41959381 284.71267700]
[93.54668427 289.47949219]
[93.62480164 294.12139893]
[92.04463196 297.87881470]
[89.44174194 300.25729370]
[87.21662140 315.09133911]
[84.99150848 329.92538452]
[82.76638794 344.75942993]
[80.54127502 359.59347534]
[78.42665100 374.44366455]
[76.42263031 389.30920410]
[74.41861725 404.17474365]
[72.41460419 419.04025269]
[70.41059113 433.90579224]
[68.40657806 448.77133179]
[66.40256500 463.63684082]
[80.85707855 467.74145508]
[94.58029175 473.86141968]
[107.29280853 481.87222290]
[118.73582458 491.61071777]
[128.67636108 502.87863159]
[136.91206360 515.44659424]
[143.27525330 529.05877686]
[147.63638306 543.43798828]
[149.90666199 558.29144287]
[150.03987122 573.31689453]
[148.03330994 588.20831299]
[143.92781067 602.66259766]
[137.80697632 616.38537598]
[129.79539490 629.09741211]
[120.05620575 640.53985596]
[108.78765106 650.47967529]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 194]
[27 193]
[28 192]
[29 191]
[30 190]
[31 189]
[32 188]
[34 187]
[35 186]
[36 185]
[37 184]
[38 183]
[39 179]
[40 178]
[41 177]
[42 176]
[43 175]
[44 174]
[47 170]
[48 169]
[49 168]
[50 163]
[51 162]
[52 160]
[54 158]
[55 157]
[56 156]
[57 155]
[58 135]
[59 134]
[60 133]
[62 131]
[63 130]
[64 129]
[74 120]
[75 119]
[76 118]
[77 117]
[78 116]
[79 115]
[85 114]
[86 113]
[87 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
