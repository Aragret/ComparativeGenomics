%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUUxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[153.96928406 736.15234375]
[140.17996216 730.23901367]
[126.73413849 723.58148193]
[113.67194366 716.19964600]
[101.03236389 708.11547852]
[88.85311127 699.35308838]
[77.17053986 689.93872070]
[66.01950836 679.90045166]
[55.43330765 669.26818848]
[45.44352341 658.07366943]
[36.07997131 646.35034180]
[27.37059402 634.13311768]
[19.34138680 621.45855713]
[12.01630878 608.36444092]
[5.41722441 594.88983154]
[-0.43617436 581.07495117]
[-5.52641773 566.96105957]
[-9.83831406 552.59020996]
[-13.35899639 538.00537109]
[-16.07795525 523.25006104]
[-17.98707771 508.36825562]
[-19.08066750 493.40438843]
[-19.35545731 478.40313721]
[-18.81062889 463.40927124]
[-17.44780922 448.46752930]
[-15.27106476 433.62252808]
[-12.28689194 418.91851807]
[-8.50419617 404.39941406]
[-3.93426657 390.10855103]
[1.40925789 376.08859253]
[7.51042986 362.38134766]
[14.35104179 349.02774048]
[21.91067696 336.06762695]
[30.16677666 323.53964233]
[39.09469986 311.48126221]
[48.66780090 299.92837524]
[58.85750961 288.91555786]
[69.63342285 278.47558594]
[80.96337128 268.63967896]
[92.81354523 259.43716431]
[105.14858246 250.89552307]
[117.93166351 243.04022217]
[131.12464905 235.89471436]
[144.68814087 229.48034668]
[139.02536011 215.59031677]
[133.36257935 201.70028687]
[119.57694244 196.17832947]
[113.63620758 182.17253113]
[119.52161407 167.75033569]
[113.85882568 153.86032104]
[108.19603729 139.97029114]
[102.53325653 126.08026123]
[96.87046814 112.19023132]
[90.89890289 98.43013000]
[84.62154388 84.80681610]
[78.34418488 71.18350220]
[65.54175568 61.88787842]
[67.24269104 47.09071350]
[60.96533203 33.46739960]
[54.68797302 19.84408379]
[40.49560165 24.73849487]
[25.88642693 28.19546127]
[11.00564384 30.18062592]
[-3.99885368 30.67425728]
[-18.97793961 29.67145157]
[-33.78273773 27.18217468]
[-48.26611328 23.23116493]
[-62.28411484 17.85769081]
[-75.69742584 11.11515999]
[-88.37273407 3.07058239]
[-100.18405914 -6.19608831]
[-111.01401520 -16.59275436]
[-120.75496674 -28.01608467]
[-129.31010437 -40.35254669]
[-136.59439087 -53.47953033]
[-142.53543091 -67.26657867]
[-147.07418823 -81.57665253]
[-150.16555786 -96.26753235]
[-151.77879333 -111.19322205]
[-151.89788818 -126.20536041]
[-150.52163696 -141.15476990]
[-147.66372681 -155.89283752]
[-143.35255432 -170.27311707]
[-137.63098145 -184.15267944]
[-130.55586243 -197.39356995]
[-122.19750977 -209.86421204]
[-112.63900757 -221.44062805]
[-101.97534943 -232.00779724]
[-90.31252289 -241.46067810]
[-77.76643372 -249.70533752]
[-64.46177673 -256.65982056]
[-50.53078461 -262.25500488]
[-36.11191177 -266.43527222]
[-21.34846497 -269.15911865]
[-6.38717413 -270.39941406]
[8.62326622 -270.14389038]
[23.53367043 -268.39505005]
[38.19585037 -265.17028809]
[52.46408081 -260.50164795]
[66.19655609 -254.43551636]
[79.25678253 -247.03221130]
[91.51497650 -238.36531067]
[102.84929657 -228.52091980]
[113.14709473 -217.59690857]
[122.30602264 -205.70184326]
[130.23506165 -192.95394897]
[136.85539246 -179.47990417]
[142.10122681 -165.41363525]
[145.92042542 -150.89494324]
[148.27503967 -136.06813049]
[149.14164734 -121.08055115]
[148.51165771 -106.08116150]
[146.39131165 -91.21903992]
[142.80169678 -76.64189148]
[137.77848816 -62.49459076]
[131.37161255 -48.91775513]
[123.64472961 -36.04631805]
[114.67465210 -24.00819969]
[104.55052185 -12.92304611]
[93.37296295 -2.90102983]
[81.25306702 5.95824289]
[68.31128693 13.56672192]
[74.58864594 27.19003868]
[80.86601257 40.81335449]
[93.21943665 49.13454437]
[91.96749878 64.90613556]
[98.24485779 78.52945709]
[104.52221680 92.15277100]
[107.91429901 93.98748016]
[110.48120117 97.30845642]
[111.57727051 101.71363831]
[110.76049042 106.52745056]
[116.42327881 120.41747284]
[122.08606720 134.30749512]
[127.74885559 148.19752502]
[133.41163635 162.08755493]
[147.70298767 168.28395081]
[153.24798584 182.45108032]
[147.25259399 196.03750610]
[152.91539001 209.92753601]
[158.57817078 223.81755066]
[172.76023865 218.92042542]
[187.18856812 214.80506897]
[201.82009888 211.48376465]
[216.61119080 208.96644592]
[231.51765442 207.26062012]
[246.49504089 206.37136841]
[261.49865723 206.30134583]
[276.48367310 207.05076599]
[291.40542603 208.61738586]
[306.21936035 210.99653625]
[320.88125610 214.18112183]
[335.34738159 218.16163635]
[349.57452393 222.92617798]
[363.52026367 228.46055603]
[377.14297485 234.74824524]
[390.40197754 241.77047729]
[403.25769043 249.50628662]
[415.67181396 257.93261719]
[427.60723877 267.02429199]
[439.02838135 276.75418091]
[449.90112305 287.09323120]
[460.19302368 298.01062012]
[469.87338257 309.47375488]
[478.91329956 321.44842529]
[487.28579712 333.89889526]
[494.96588135 346.78802490]
[501.93066406 360.07730103]
[508.15933228 373.72708130]
[513.63330078 387.69662476]
[518.33618164 401.94427490]
[522.25402832 416.42749023]
[525.37512207 431.10302734]
[527.69012451 445.92712402]
[529.19213867 460.85552979]
[529.87670898 475.84365845]
[529.74176025 490.84680176]
[528.78765869 505.82022095]
[527.01733398 520.71917725]
[524.43603516 535.49920654]
[521.05139160 550.11621094]
[516.87365723 564.52661133]
[511.91516113 578.68731689]
[506.19076538 592.55615234]
[499.71755981 606.09167480]
[492.51483154 619.25354004]
[484.60409546 632.00238037]
[476.00897217 644.30017090]
[466.75509644 656.11029053]
[456.87005615 667.39739990]
[446.38342285 678.12792969]
[435.32644653 688.26971436]
[423.73211670 697.79254150]
[411.63504028 706.66802979]
[399.07135010 714.86962891]
[386.07852173 722.37292480]
[372.69534302 729.15545654]
[358.96173096 735.19708252]
[344.91870117 740.47967529]
[330.60812378 744.98748779]
[316.07275391 748.70709229]
[301.35592651 751.62738037]
[286.50158691 753.73968506]
[271.55407715 755.03759766]
[256.55798340 755.51733398]
[241.55807495 755.17736816]
[226.59910583 754.01879883]
[211.72572327 752.04510498]
[196.98233032 749.26208496]
[182.41291809 745.67810059]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 141]
[45 140]
[46 139]
[49 136]
[50 135]
[51 134]
[52 133]
[53 132]
[54 128]
[55 127]
[56 126]
[58 124]
[59 123]
[60 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
