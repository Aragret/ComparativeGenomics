%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[181.63470459 496.82760620]
[179.85223389 481.93389893]
[178.06977844 467.04019165]
[176.28730774 452.14645386]
[174.50483704 437.25274658]
[172.61155701 422.37271118]
[170.60754395 407.50717163]
[168.60351562 392.64166260]
[166.59950256 377.77612305]
[163.71423340 363.05624390]
[153.03630066 352.67205811]
[157.07122803 337.37402344]
[153.31492615 322.85195923]
[149.45062256 308.35827637]
[145.47853088 293.89373779]
[141.50643921 279.42922974]
[126.68160248 277.65338135]
[113.63074493 270.31713867]
[104.35787201 258.51126099]
[100.30051422 244.01556396]
[102.10694122 229.03054810]
[109.53278351 215.84344482]
[121.47360992 206.47901917]
[117.50151062 192.01449585]
[113.52941895 177.54997253]
[109.55731964 163.08544922]
[105.58522797 148.62092590]
[94.75386810 138.39688110]
[98.56058502 123.04046631]
[94.58849335 108.57594299]
[89.58687592 102.25483704]
[90.66664886 93.86645508]
[86.91034698 79.34439087]
[82.19021606 65.10640717]
[76.52742767 51.21637726]
[70.86463928 37.32635117]
[65.20185852 23.43632317]
[59.53907013 9.54629707]
[53.36330032 -4.12337351]
[46.68310547 -17.55374908]
[40.00291061 -30.98412514]
[33.32271576 -44.41450119]
[17.74501228 -54.23369598]
[19.51550484 -71.69314575]
[12.63609219 -85.02257538]
[5.75668001 -98.35200500]
[-1.12273252 -111.68143463]
[-8.00214481 -125.01086426]
[-14.88155746 -138.34028625]
[-28.08628273 -147.05497742]
[-27.04777336 -161.91333008]
[-26.77755356 -146.91577148]
[-29.92682076 -132.25009155]
[-36.33037186 -118.68563080]
[-45.65229034 -106.93395996]
[-57.40356827 -97.61154175]
[-70.96775055 -91.20741272]
[-85.63329315 -88.05751801]
[-100.63087463 -88.32709503]
[-115.17374420 -92.00200653]
[-128.49900818 -98.88947296]
[-139.90766907 -108.62819672]
[-148.80122375 -120.70729065]
[-154.71316528 -134.49311829]
[-157.33332825 -149.26249695]
[-156.52430725 -164.24066162]
[-152.32850647 -178.64189148]
[-144.96603394 -191.71070862]
[-134.82313538 -202.76156616]
[-122.43186188 -211.21476746]
[-108.44224548 -216.62684631]
[-93.58815002 -218.71389771]
[-78.64878845 -217.36647034]
[-64.40785980 -212.65521240]
[-51.61240768 -204.82728577]
[-40.93365479 -194.29333496]
[-32.93107224 -181.60444641]
[-34.49159622 -196.52304077]
[-36.05212021 -211.44165039]
[-37.61264038 -226.36026001]
[-46.25945282 -214.10330200]
[-60.42173767 -209.16065979]
[-74.81731415 -213.37580872]
[-84.07698059 -225.17658997]
[-84.74712372 -240.16160583]
[-76.57778931 -252.74183655]
[-62.61593628 -258.22512817]
[-48.06899261 -254.56639099]
[-38.36215973 -243.12913513]
[-38.13883209 -258.12747192]
[-37.91550446 -273.12582397]
[-37.69217682 -288.12414551]
[-37.46884918 -303.12249756]
[-52.08085251 -306.80841064]
[-65.44866943 -313.76528931]
[-76.85140228 -323.61795044]
[-85.67410278 -335.83499146]
[-91.44097900 -349.75762939]
[-93.84103394 -364.63500977]
[-92.74483490 -379.66482544]
[-88.21149445 -394.03652954]
[-80.48548889 -406.97503662]
[-69.98347473 -417.78265381]
[-57.27182007 -425.87652588]
[-43.03603363 -430.82009888]
[-28.04384422 -432.34686279]
[-13.10375786 -430.37442017]
[0.97852498 -425.00915527]
[13.44356441 -416.54040527]
[23.61913681 -405.42492676]
[30.95648575 -392.26208496]
[35.05991745 -377.76177979]
[35.70814133 -362.70602417]
[32.86619568 -347.90667725]
[26.68734550 -334.16192627]
[17.50480652 -322.21295166]
[5.81378365 -312.70419312]
[-7.75524282 -306.14840698]
[-22.47051048 -302.89916992]
[-22.69383812 -287.90081787]
[-22.91716576 -272.90249634]
[-23.14049339 -257.90414429]
[-23.36382103 -242.90580750]
[-22.69403648 -227.92077637]
[-21.13351440 -213.00216675]
[-19.57299042 -198.08357239]
[-18.01246834 -183.16496277]
[-13.71834373 -168.79275513]
[-1.00568056 -161.03146362]
[-1.55212843 -145.21969604]
[5.32728434 -131.89027405]
[12.20669651 -118.56084442]
[19.08610916 -105.23141479]
[25.96552086 -91.90198517]
[32.84493256 -78.57255554]
[44.26955032 -74.59703827]
[50.10998917 -63.54837036]
[46.75309372 -51.09469604]
[53.43328857 -37.66431808]
[60.11348343 -24.23394394]
[66.79367828 -10.80356789]
[73.96878052 -23.97618484]
[88.71388245 -26.72974014]
[100.15943146 -17.03441620]
[99.86820984 -2.03724360]
[88.05487823 7.20641947]
[73.42910004 3.88351035]
[79.09188080 17.77353668]
[84.75466919 31.66356468]
[90.41745758 45.55359268]
[96.08024597 59.44361877]
[100.26906586 45.04036331]
[111.50971222 35.10819244]
[126.31912994 32.72469711]
[140.10847473 38.62843323]
[148.60494995 50.99005508]
[149.17585754 65.97918701]
[141.64427185 78.95127869]
[128.34394836 85.88679504]
[113.39612579 84.63668060]
[101.43241119 75.58809662]
[105.18871307 90.11015320]
[109.05301666 104.60384369]
[113.02510834 119.06836700]
[124.14057922 130.32701111]
[120.04975128 144.64881897]
[124.02184296 159.11335754]
[127.99394226 173.57788086]
[131.96603394 188.04240417]
[135.93814087 202.50692749]
[150.98678589 204.45977783]
[164.10594177 212.00503540]
[173.31196594 223.96591187]
[177.22668457 238.50079346]
[175.28361511 253.38667297]
[167.80975342 266.35919189]
[155.97096252 275.45712280]
[159.94305420 289.92166138]
[163.91514587 304.38616943]
[169.20532227 311.83279419]
[167.83699036 319.09567261]
[171.59329224 333.61773682]
[182.53990173 345.04061890]
[178.23629761 359.29992676]
[184.96923828 345.89593506]
[198.24162292 338.90710449]
[213.10321045 340.94015503]
[224.01098633 351.23678589]
[226.89660645 365.95660400]
[220.68382263 379.60949707]
[207.68983459 387.10327148]
[192.76109314 385.64291382]
[181.46504211 375.77212524]
[183.46905518 390.63763428]
[185.47306824 405.50317383]
[187.47708130 420.36871338]
[191.72494507 428.45532227]
[189.39855957 435.47027588]
[191.18103027 450.36401367]
[192.96348572 465.25772095]
[194.74595642 480.15142822]
[196.52842712 495.04516602]
[210.45053101 501.69183350]
[218.54963684 514.82226562]
[218.24136353 530.24652100]
[209.62405396 543.04284668]
[195.44747925 549.12792969]
[180.23532104 546.56005859]
[168.84173584 536.15863037]
[164.90237427 521.24273682]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 202]
[2 201]
[3 200]
[4 199]
[5 198]
[6 196]
[7 195]
[8 194]
[9 193]
[10 184]
[12 182]
[13 181]
[14 179]
[15 178]
[16 177]
[23 170]
[24 169]
[25 168]
[26 167]
[27 166]
[29 164]
[30 163]
[32 162]
[33 161]
[34 151]
[35 150]
[36 149]
[37 148]
[38 147]
[39 141]
[40 140]
[41 139]
[42 138]
[44 135]
[45 134]
[46 133]
[47 132]
[48 131]
[49 130]
[51 128]
[77 127]
[78 126]
[79 125]
[80 124]
[89 123]
[90 122]
[91 121]
[92 120]
[93 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
