%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[163.83653259 734.51593018]
[150.53152466 727.57965088]
[137.66514587 719.86010742]
[125.28345490 711.38488770]
[113.43078613 702.18432617]
[102.14955902 692.29144287]
[91.48016357 681.74157715]
[81.46079254 670.57250977]
[72.12731171 658.82427979]
[63.51313782 646.53881836]
[55.64910126 633.76025391]
[48.56335831 620.53424072]
[42.28126526 606.90808105]
[36.82532120 592.93066406]
[32.21505356 578.65197754]
[28.46696091 564.12316895]
[25.59446716 549.39617920]
[23.60785294 534.52374268]
[22.51422882 519.55914307]
[22.31751060 504.55590820]
[23.01840210 489.56777954]
[24.61439514 474.64837646]
[27.09977531 459.85113525]
[30.46564674 445.22900391]
[34.69995880 430.83435059]
[39.78755569 416.71868896]
[45.71022034 402.93255615]
[52.44675827 389.52529907]
[59.97305298 376.54492188]
[68.26215363 364.03787231]
[77.28440094 352.04891968]
[87.00748444 340.62103271]
[97.39660645 329.79504395]
[108.41456604 319.60977173]
[120.02193451 310.10162354]
[132.17715454 301.30468750]
[144.83671570 293.25042725]
[157.95529175 285.96768188]
[171.48593140 279.48251343]
[165.82313538 265.59249878]
[160.16035461 251.70246887]
[154.49757385 237.81243896]
[148.83477783 223.92240906]
[143.06875610 210.07492065]
[136.89297485 196.40525818]
[130.41348267 182.87690735]
[123.93399048 169.34857178]
[112.63280487 165.03465271]
[107.12391663 153.81700134]
[110.85011292 141.46878052]
[104.57275391 127.84547424]
[98.29539490 114.22215271]
[86.99069214 105.99443817]
[88.08129120 92.05520630]
[81.80393219 78.43189240]
[75.52657318 64.80857086]
[62.43799973 61.62990570]
[53.69751358 51.63919067]
[52.32740784 38.63131332]
[58.60506821 27.37873650]
[45.94246292 17.89353943]
[47.86351776 3.12333822]
[41.78968048 -10.59192848]
[29.12707520 -20.07712555]
[31.04813004 -34.84732819]
[24.97429466 -48.56259537]
[18.90046120 -62.27785873]
[4.51319075 -57.96396637]
[-10.30131435 -55.48734283]
[-25.30940819 -54.88704681]
[-40.27439117 -56.17255020]
[-54.96024323 -59.32357407]
[-69.13535309 -64.29042816]
[-82.57614899 -70.99476624]
[-95.07065582 -79.33086395]
[-106.42181396 -89.16724396]
[-116.45060730 -100.34877777]
[-124.99885559 -112.69910431]
[-131.93174744 -126.02345276]
[-137.13995361 -140.11166382]
[-140.54130554 -154.74157715]
[-142.08218384 -169.68241882]
[-141.73826599 -184.69857788]
[-139.51498413 -199.55322266]
[-135.44741821 -214.01205444]
[-129.59970093 -227.84706116]
[-122.06406403 -240.84004211]
[-112.95935822 -252.78607178]
[-102.42916870 -263.49673462]
[-90.63958740 -272.80313110]
[-77.77654266 -280.55847168]
[-64.04290009 -286.64044189]
[-49.65526581 -290.95312500]
[-34.84055328 -293.42849731]
[-19.83240700 -294.02752686]
[-4.86753225 -292.74075317]
[9.81805515 -289.58850098]
[23.99274254 -284.62045288]
[37.43297577 -277.91497803]
[49.92678070 -269.57785034]
[61.27711487 -259.74050903]
[71.30496216 -248.55812073]
[79.85217285 -236.20707703]
[86.78395081 -222.88214111]
[91.99095917 -208.79348755]
[95.39108276 -194.16329956]
[96.93070221 -179.22232056]
[96.58552551 -164.20619202]
[94.36100006 -149.35174561]
[90.29220581 -134.89324951]
[84.44332886 -121.05873108]
[76.90659332 -108.06639099]
[67.80088043 -96.12113190]
[57.26979828 -85.41134644]
[45.47942734 -76.10594940]
[32.61572647 -68.35169220]
[38.68956375 -54.63642883]
[44.76339722 -40.92116165]
[56.99156189 -32.41696930]
[55.50494766 -16.66576195]
[61.57878113 -2.95049572]
[73.80694580 5.55369425]
[72.32033539 21.30490303]
[88.25364685 26.68712997]
[95.50720978 42.23385620]
[89.14988708 58.53121185]
[95.42724609 72.15452576]
[101.70460510 85.77784729]
[113.00930786 94.00556183]
[111.91870880 107.94479370]
[118.19606781 121.56810760]
[124.47342682 135.19142151]
[139.75187683 145.47007751]
[137.46234131 162.86906433]
[143.94183350 176.39741516]
[150.42132568 189.92576599]
[154.72892761 192.87393188]
[157.22528076 196.78819275]
[157.84570312 200.81686401]
[156.87292480 204.20596313]
[163.11054993 210.87904358]
[162.72480774 218.25962830]
[168.38760376 232.14965820]
[174.05038452 246.03967285]
[179.71316528 259.92971802]
[185.37596130 273.81973267]
[199.58401489 268.99618530]
[214.05511475 265.03097534]
[228.73744202 261.93829346]
[243.57844543 259.72921753]
[258.52499390 258.41165161]
[273.52359009 257.99032593]
[288.52056885 258.46670532]
[303.46218872 259.83914185]
[318.29498291 262.10269165]
[332.96585083 265.24923706]
[347.42230225 269.26754761]
[361.61254883 274.14321899]
[375.48580933 279.85879517]
[388.99243164 286.39382935]
[402.08407593 293.72494507]
[414.71383667 301.82583618]
[426.83651733 310.66757202]
[438.40872192 320.21844482]
[449.38903809 330.44430542]
[459.73815918 341.30853271]
[469.41900635 352.77221680]
[478.39697266 364.79437256]
[486.63986206 377.33190918]
[494.11822510 390.33996582]
[500.80526733 403.77200317]
[506.67703247 417.57989502]
[511.71252441 431.71423340]
[515.89367676 446.12438965]
[519.20562744 460.75885010]
[521.63635254 475.56515503]
[523.17730713 490.49032593]
[523.82293701 505.48095703]
[523.57086182 520.48333740]
[522.42205811 535.44384766]
[520.38055420 550.30883789]
[517.45373535 565.02508545]
[513.65209961 579.54003906]
[508.98919678 593.80163574]
[503.48171997 607.75878906]
[497.14941406 621.36163330]
[490.01492310 634.56146240]
[482.10379028 647.31091309]
[473.44436646 659.56451416]
[464.06759644 671.27825928]
[454.00708008 682.41027832]
[443.29885864 692.92071533]
[431.98120117 702.77191162]
[420.09466553 711.92864990]
[407.68179321 720.35815430]
[394.78704834 728.03021240]
[381.45651245 734.91735840]
[367.73797607 740.99493408]
[353.68054199 746.24127197]
[339.33450317 750.63745117]
[324.75122070 754.16784668]
[309.98294067 756.81982422]
[295.08245850 758.58380127]
[280.10317993 759.45349121]
[265.09869385 759.42578125]
[250.12269592 758.50085449]
[235.22885132 756.68188477]
[220.47042847 753.97552490]
[205.90026855 750.39135742]
[191.57055664 745.94226074]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 146]
[40 145]
[41 144]
[42 143]
[43 142]
[44 140]
[45 136]
[46 135]
[47 134]
[50 132]
[51 131]
[52 130]
[54 128]
[55 127]
[56 126]
[60 123]
[62 121]
[63 120]
[65 118]
[66 117]
[67 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
