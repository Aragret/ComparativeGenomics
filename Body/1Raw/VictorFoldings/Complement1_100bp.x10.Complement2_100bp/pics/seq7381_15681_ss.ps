%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[33.45000076 765.40441895]
[19.83209991 758.84362793]
[8.75416756 748.55908203]
[1.20124793 735.46539307]
[-2.15505981 720.72680664]
[-1.01631498 705.65380859]
[4.51622629 691.58673096]
[13.95061398 679.77642822]
[26.44794846 671.27301025]
[40.89697647 666.83264160]
[40.89697647 651.83264160]
[40.89697647 636.83264160]
[33.15967560 624.10534668]
[40.89697647 610.30517578]
[40.89697647 595.30517578]
[40.89697647 580.30517578]
[40.89697647 565.30517578]
[40.89697647 550.30517578]
[40.89697647 535.30517578]
[40.89697647 520.30517578]
[40.89697647 505.30517578]
[40.89697647 490.30517578]
[32.43906021 502.69323730]
[19.23649788 509.81307983]
[4.23876953 510.07415771]
[-9.20359135 503.41812134]
[-18.08752823 491.33193970]
[-20.42834473 476.51571655]
[-15.70309925 462.27941895]
[-4.96742153 451.80346680]
[9.38031006 447.42825317]
[24.13477516 450.13116455]
[35.99978638 459.30838013]
[42.32468033 472.90972900]
[44.77040863 458.11047363]
[47.21613693 443.31118774]
[49.66186142 428.51190186]
[51.99734879 413.69485474]
[54.22246552 398.86080933]
[56.22647858 383.99526978]
[58.00894547 369.10156250]
[59.79141235 354.20785522]
[61.57387924 339.31411743]
[63.35634232 324.42041016]
[49.45656967 320.03384399]
[36.59984970 313.15850830]
[25.22747421 304.02859497]
[15.73010063 292.95581055]
[8.43433762 280.31863403]
[3.59151244 266.54931641]
[1.36901140 252.11920166]
[1.84449768 237.52256775]
[5.00319672 223.25962830]
[10.73835182 209.81951904]
[18.85482788 197.66334534]
[29.07575798 187.20855713]
[41.05197906 178.81446838]
[54.37396240 172.76995850]
[68.58582306 169.28356934]
[83.20091248 168.47622681]
[85.20492554 153.61068726]
[87.20893860 138.74516296]
[89.21295166 123.87963867]
[91.21697235 109.01410675]
[92.88851166 94.10753632]
[94.22674561 79.16735077]
[95.56497955 64.22716522]
[89.08972168 49.79173660]
[97.93164062 37.80550385]
[99.26987457 22.86531830]
[100.60810852 7.92513323]
[101.94634247 -7.01505184]
[103.17331696 -21.96478462]
[104.28896332 -36.92324066]
[104.28896332 -51.92324066]
[103.17331696 -66.88169098]
[102.05767059 -81.84014893]
[99.11727905 -86.15305328]
[98.21545410 -90.70717621]
[99.10269928 -94.68560028]
[101.24144745 -97.48882294]
[100.79484558 -112.48217773]
[100.34823608 -127.47552490]
[99.90163422 -142.46887207]
[86.79190826 -146.16061401]
[75.26680756 -153.38615417]
[66.25434113 -163.55250549]
[60.47705078 -175.83035278]
[58.39406967 -189.22169495]
[60.16468048 -202.64094543]
[65.63614655 -215.00296021]
[74.35686493 -225.31080627]
[85.61360168 -232.73606873]
[98.48982239 -236.68556213]
[98.48982239 -251.68556213]
[98.48982239 -266.68554688]
[84.09664917 -271.34298706]
[71.84834290 -280.22186279]
[62.94487762 -292.45230103]
[58.25851059 -306.83609009]
[58.24837494 -321.96401978]
[62.91545868 -336.35409546]
[71.80252838 -348.59643555]
[84.03892517 -357.49169922]
[98.42584229 -362.16842651]
[113.55380249 -362.16842651]
[127.94071960 -357.49169922]
[140.17710876 -348.59643555]
[149.06417847 -336.35409546]
[153.73126221 -321.96401978]
[153.72113037 -306.83609009]
[149.03477478 -292.45230103]
[140.13130188 -280.22186279]
[127.88299561 -271.34298706]
[113.48982239 -266.68554688]
[113.48982239 -251.68556213]
[113.48982239 -236.68556213]
[129.06324768 -231.35989380]
[141.89222717 -221.00820923]
[150.41519165 -206.86798096]
[153.58697510 -190.63912964]
[151.00695801 -174.27975464]
[142.96961975 -159.76983643]
[130.43098450 -148.87159729]
[114.89498138 -142.91548157]
[115.34159088 -127.92213440]
[115.78819275 -112.92877960]
[116.23480225 -97.93543243]
[117.01612091 -82.95579529]
[118.13177490 -67.99733734]
[119.24742126 -53.03888702]
[127.17144775 -65.77504730]
[140.35508728 -72.92989349]
[155.35214233 -72.63317108]
[168.24244690 -64.96244049]
[175.65649414 -51.92280960]
[175.65626526 -36.92280960]
[168.24182129 -23.88340378]
[155.35128784 -16.21306229]
[140.35421753 -15.91679192]
[127.17080688 -23.07203865]
[119.24742126 -35.80759048]
[118.13177490 -20.84913635]
[120.76907349 -13.94504929]
[116.88652802 -5.67681789]
[115.54829407 9.26336765]
[114.21006012 24.20355225]
[112.87182617 39.14373779]
[119.44280243 52.51054382]
[110.50516510 65.56539917]
[109.16693115 80.50558472]
[107.82869720 95.44577026]
[109.85711670 98.72569275]
[110.42994690 102.88378143]
[109.18740845 107.24991608]
[106.08249664 111.01811981]
[104.07848358 125.88365173]
[102.07447052 140.74917603]
[100.07045746 155.61470032]
[98.06644440 170.48023987]
[112.69439697 175.46435547]
[126.06951141 183.19621277]
[137.68177795 193.37887573]
[147.08885193 205.62203979]
[153.93281555 219.45695496]
[157.95387268 234.35435486]
[159.00016785 249.74472046]
[157.03355408 265.04006958]
[152.13092041 279.65634155]
[144.48126221 293.03585815]
[134.37835693 304.66839600]
[122.20944214 314.11087036]
[108.44048309 321.00396729]
[93.59821320 325.08602905]
[78.25006104 326.20288086]
[76.46759796 341.09658813]
[74.68512726 355.99029541]
[72.90266418 370.88403320]
[71.12020111 385.77774048]
[73.36677551 391.99581909]
[72.29653168 397.57717896]
[69.05651093 401.08593750]
[66.83139038 415.91995239]
[68.65316772 424.87088013]
[64.46113586 430.95764160]
[62.01540756 445.75692749]
[59.56967926 460.55618286]
[57.12395096 475.35546875]
[55.89697647 490.30517578]
[55.89697647 505.30517578]
[55.89697647 520.30517578]
[55.89697647 535.30517578]
[55.89697647 550.30517578]
[55.89697647 565.30517578]
[55.89697647 580.30517578]
[55.89697647 595.30517578]
[55.89697647 610.30517578]
[63.63427734 624.10534668]
[55.89697647 636.83264160]
[55.89697647 651.83264160]
[55.89697647 666.83264160]
[70.34600067 671.27301025]
[82.84333801 679.77642822]
[92.27772522 691.58673096]
[97.81026459 705.65380859]
[98.94901276 720.72680664]
[95.59270477 735.46539307]
[88.03978729 748.55908203]
[76.96185303 758.84362793]
[63.34395218 765.40441895]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 201]
[11 200]
[12 199]
[14 197]
[15 196]
[16 195]
[17 194]
[18 193]
[19 192]
[20 191]
[21 190]
[22 189]
[34 188]
[35 187]
[36 186]
[37 185]
[38 183]
[39 182]
[40 179]
[41 178]
[42 177]
[43 176]
[44 175]
[60 160]
[61 159]
[62 158]
[63 157]
[64 156]
[65 152]
[66 151]
[67 150]
[69 148]
[70 147]
[71 146]
[72 145]
[73 143]
[74 142]
[75 131]
[76 130]
[77 129]
[81 128]
[82 127]
[83 126]
[84 125]
[94 117]
[95 116]
[96 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
