%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[54.29207230 759.08880615]
[39.52278137 761.74157715]
[24.60928345 763.40197754]
[9.61818886 764.06250000]
[-5.38354921 763.72027588]
[-20.32892799 762.37683105]
[-35.15119934 760.03814697]
[-49.78416061 756.71459961]
[-64.16246033 752.42114258]
[-78.22187042 747.17694092]
[-91.89961243 741.00531006]
[-105.13459015 733.93389893]
[-117.86769104 725.99432373]
[-130.04205322 717.22192383]
[-141.60328674 707.65600586]
[-152.49977112 697.33923340]
[-162.68284607 686.31768799]
[-172.10700989 674.64062500]
[-180.73017883 662.36010742]
[-188.51383972 649.53112793]
[-195.42323303 636.21081543]
[-201.42750549 622.45880127]
[-206.49983215 608.33648682]
[-210.61755371 593.90686035]
[-213.76228333 579.23443604]
[-215.91996765 564.38470459]
[-217.08099365 549.42407227]
[-217.24015808 534.41925049]
[-216.39674377 519.43737793]
[-214.55453491 504.54522705]
[-211.72175598 489.80938721]
[-207.91105652 475.29568481]
[-203.13943481 461.06890869]
[-197.42823792 447.19262695]
[-190.80296326 433.72879028]
[-183.29318237 420.73754883]
[-174.93244934 408.27691650]
[-165.75810242 396.40252686]
[-155.81112671 385.16744995]
[-145.13594055 374.62185669]
[-133.78021240 364.81283569]
[-121.79468536 355.78421021]
[-109.23286438 347.57629395]
[-96.15087128 340.22573853]
[-82.60712433 333.76538086]
[-68.66211700 328.22409058]
[-54.37812805 323.62658691]
[-39.81895828 319.99340820]
[-25.04963493 317.34082031]
[-10.13611603 315.68063354]
[4.85498762 315.02026367]
[19.85672188 315.36267090]
[34.80208588 316.70632935]
[49.62432480 319.04519653]
[52.94658661 304.41775513]
[56.26884460 289.79028320]
[51.54259491 275.66543579]
[62.14424896 263.92169189]
[65.46650696 249.29421997]
[68.78876495 234.66676331]
[72.11103058 220.03930664]
[74.77682495 205.27809143]
[68.80925751 191.63119507]
[78.32091522 178.98844910]
[80.32492828 164.12292480]
[78.73455048 161.81449890]
[77.96273804 158.73701477]
[78.30701447 155.19909668]
[79.94774628 151.61126709]
[82.91629028 148.44239807]
[85.80156708 133.72250366]
[88.68683624 119.00260925]
[91.57210541 104.28272247]
[89.70726776 99.38003540]
[90.72205353 93.78150940]
[94.76865387 89.17043304]
[98.09091187 74.54296875]
[101.30418396 59.89118195]
[95.19176483 42.52109909]
[107.42168427 29.93555450]
[110.30695343 15.21566391]
[113.19223022 0.49577266]
[116.07749939 -14.22411823]
[109.54262543 -25.34429169]
[112.24881744 -37.54512405]
[122.21284485 -44.40403366]
[125.31695557 -59.07933426]
[128.42106628 -73.75463867]
[131.52517700 -88.42993927]
[134.41044617 -103.14983368]
[137.07624817 -117.91104889]
[139.74203491 -132.67227173]
[125.54904938 -137.62255859]
[112.30525208 -144.73229980]
[100.33679199 -153.82638550]
[89.93839264 -164.68087769]
[81.36614227 -177.02845764]
[74.83113098 -190.56507874]
[70.49428558 -204.95738220]
[68.46240997 -219.85093689]
[68.78553772 -234.87898254]
[71.45571136 -249.67143250]
[76.40718079 -263.86401367]
[83.51800537 -277.10723877]
[92.61307526 -289.07495117]
[103.46842194 -299.47244263]
[115.81671906 -308.04367065]
[129.35388184 -314.57757568]
[143.74653625 -318.91323853]
[158.64025879 -320.94387817]
[173.66827393 -320.61950684]
[188.46051025 -317.94812012]
[202.65267944 -312.99545288]
[215.89530945 -305.88354492]
[227.86227417 -296.78747559]
[238.25886536 -285.93127441]
[246.82908630 -273.58227539]
[253.36186218 -260.04458618]
[257.69635010 -245.65156555]
[259.72576904 -230.75767517]
[259.40014648 -215.72969055]
[256.72753906 -200.93768311]
[251.77372742 -186.74591064]
[244.66070557 -173.50387573]
[235.56365967 -161.53765869]
[224.70660400 -151.14195251]
[212.35688782 -142.57275391]
[198.81864929 -136.04109192]
[184.42527771 -131.70780945]
[169.53121948 -129.67962646]
[154.50326538 -130.00646973]
[151.83746338 -115.24525452]
[149.17166138 -100.48403931]
[151.11053467 -96.11942291]
[150.32817078 -90.49048615]
[146.20048523 -85.32582855]
[143.09637451 -70.65052795]
[139.99226379 -55.97522736]
[136.88815308 -41.29992294]
[143.21881104 -24.93258858]
[130.79739380 -11.33884621]
[127.91211700 3.38104534]
[125.02684784 18.10093689]
[122.14157104 32.82082748]
[128.62760925 43.03150177]
[126.34431458 55.31850052]
[115.97948456 62.99529266]
[117.67075348 70.18983459]
[112.71836853 77.86523438]
[109.39611053 92.49269104]
[106.29199982 107.16799164]
[103.40673065 121.88788605]
[100.52145386 136.60777283]
[97.63618469 151.32766724]
[95.19045258 166.12693787]
[93.18643951 180.99246216]
[99.01066589 195.70263672]
[89.64234924 207.28210449]
[102.19647217 199.07270813]
[116.90611267 202.00979614]
[125.34492493 214.41085815]
[122.67877197 229.17201233]
[110.43495178 237.83738708]
[95.62727356 235.44308472]
[86.73848724 223.36155701]
[83.41622925 237.98901367]
[80.09397125 252.61648560]
[76.77170563 267.24392700]
[81.26033020 282.41506958]
[70.89630127 293.11254883]
[67.57404327 307.74002075]
[64.25178528 322.36746216]
[78.63013458 326.66076660]
[92.68962097 331.90481567]
[106.36743927 338.07626343]
[119.60250092 345.14749146]
[132.33570862 353.08694458]
[144.51017761 361.85913086]
[156.07153320 371.42492676]
[166.96813965 381.74157715]
[177.15135193 392.76296997]
[186.57565308 404.43994141]
[195.19898987 416.72033691]
[202.98281860 429.54925537]
[209.89237976 442.86941528]
[215.89682007 456.62136841]
[220.96931458 470.74365234]
[225.08721924 485.17321777]
[228.23213196 499.84561157]
[230.39001465 514.69525146]
[231.55122375 529.65594482]
[231.71057129 544.66070557]
[230.86735535 559.64263916]
[229.02532959 574.53479004]
[226.19273376 589.27062988]
[222.38221741 603.78442383]
[217.61077881 618.01123047]
[211.89974976 631.88763428]
[205.27464294 645.35150146]
[197.76502991 658.34289551]
[189.40444946 670.80358887]
[180.23025513 682.67810059]
[170.28341675 693.91326904]
[159.60836792 704.45904541]
[148.25276184 714.26818848]
[136.26734924 723.29699707]
[123.70563507 731.50506592]
[110.62372589 738.85577393]
[97.08006287 745.31628418]
[83.13512421 750.85778809]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[54 172]
[55 171]
[56 170]
[58 168]
[59 167]
[60 166]
[61 165]
[62 158]
[64 156]
[65 155]
[70 154]
[71 153]
[72 152]
[73 151]
[76 150]
[77 149]
[78 147]
[80 144]
[81 143]
[82 142]
[83 141]
[86 139]
[87 138]
[88 137]
[89 136]
[90 133]
[91 132]
[92 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
