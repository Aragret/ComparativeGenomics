%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[181.33448792 590.17797852]
[173.34475708 577.47320557]
[166.40324402 564.16674805]
[160.55497742 550.34490967]
[155.83787537 536.09729004]
[152.28253174 521.51623535]
[149.91201782 506.69644165]
[148.74169922 491.73391724]
[148.77915955 476.72576904]
[150.02415466 461.76928711]
[152.46864319 446.96148682]
[156.09672546 432.39840698]
[160.88490295 418.17449951]
[166.80209351 404.38198853]
[173.80995178 391.11035156]
[181.86302185 378.44567871]
[190.90905762 366.47006226]
[200.88941956 355.26116943]
[211.73934937 344.89172363]
[223.38848877 335.42898560]
[235.76130676 326.93429565]
[228.29356384 313.92532349]
[220.82582092 300.91638184]
[213.35807800 287.90744019]
[205.89035034 274.89846802]
[198.42260742 261.88952637]
[190.95486450 248.88056946]
[183.10310364 236.09973145]
[174.87429810 223.55833435]
[166.64549255 211.01693726]
[158.41668701 198.47552490]
[142.34046936 191.43832397]
[141.44303894 173.04603577]
[133.02842712 160.62854004]
[124.52159882 148.27403259]
[115.92303467 135.98320007]
[107.32447052 123.69235992]
[98.72590637 111.40151978]
[98.41762543 126.39835358]
[90.73695374 139.28273010]
[77.69161224 146.68672180]
[62.69161606 146.67494202]
[49.65793228 139.25044250]
[41.99752808 126.35400391]
[41.71282196 111.35670471]
[48.87823105 98.17881012]
[61.62073517 90.26499176]
[76.60947418 89.68389130]
[89.92577362 96.58682251]
[76.85225677 87.67650604]
[78.11186981 72.83525085]
[71.43167877 59.40488052]
[64.75148010 45.97450256]
[51.67797089 37.06418228]
[52.93758392 22.22293282]
[46.25738907 8.79255676]
[39.57719421 -4.63781929]
[32.89699936 -18.06819534]
[26.21680450 -31.49857140]
[19.53660965 -44.92894745]
[12.85641575 -58.35932159]
[6.17622137 -71.78969574]
[-0.50397348 -85.22007751]
[-7.28396511 -98.60034943]
[-14.16337776 -111.92977905]
[-21.04278946 -125.25920868]
[-27.92220306 -138.58863831]
[-42.08612061 -133.57893372]
[-56.80028534 -130.54461670]
[-71.79058075 -129.54220581]
[-86.77774811 -130.59037781]
[-101.48257446 -133.66960144]
[-115.63113403 -138.72253418]
[-128.95983887 -145.65502930]
[-141.22038269 -154.33792114]
[-152.18437195 -164.60948181]
[-161.64752197 -176.27833557]
[-169.43357849 -189.12712097]
[-175.39747620 -202.91645813]
[-179.42810059 -217.38945007]
[-181.45037842 -232.27650452]
[-181.42663574 -247.30026245]
[-179.35729980 -262.18084717]
[-175.28092957 -276.64102173]
[-169.27348328 -290.41143799]
[-161.44683838 -303.23553467]
[-151.94683838 -314.87442017]
[-140.95043945 -325.11126709]
[-128.66250610 -333.75537109]
[-115.31195068 -340.64569092]
[-101.14749146 -345.65383911]
[-86.43299103 -348.68658447]
[-71.44258881 -349.68737793]
[-56.45553970 -348.63757324]
[-41.75104141 -345.55673218]
[-27.60303116 -340.50228882]
[-14.27507782 -333.56835938]
[-2.01547194 -324.88412476]
[8.94739628 -314.61138916]
[18.40929604 -302.94149780]
[26.19395828 -290.09188843]
[32.15635681 -276.30191040]
[36.18542099 -261.82846069]
[38.20608521 -246.94119263]
[38.18070984 -231.91743469]
[36.10976791 -217.03707886]
[32.03183746 -202.57734680]
[26.02289200 -188.80758667]
[18.19487000 -175.98432922]
[8.69360352 -164.34646606]
[-2.30390286 -154.11080933]
[-14.59277344 -145.46804810]
[-7.71336079 -132.13862610]
[-0.83394825 -118.80918884]
[6.04546404 -105.47975922]
[11.90654182 -100.97758484]
[12.92640209 -91.90026855]
[19.60659790 -78.46989441]
[26.28679276 -65.03952026]
[32.96698761 -51.60914230]
[39.64718246 -38.17876434]
[46.32737732 -24.74839020]
[53.00757217 -11.31801414]
[59.68776321 2.11236191]
[66.36795807 15.54273796]
[78.96366119 23.49242973]
[78.18186188 39.29430771]
[84.86205292 52.72468567]
[91.54225159 66.15505981]
[104.13794708 74.10475159]
[103.35614777 89.90663147]
[111.01674652 102.80295563]
[119.61531067 115.09379578]
[128.21386719 127.38463593]
[136.81243896 139.67547607]
[144.29595947 144.91328430]
[145.44592285 152.21392822]
[153.86053467 164.63142395]
[166.35652161 167.82722473]
[173.10943604 178.34301758]
[170.95808411 190.24671936]
[179.18688965 202.78813171]
[187.41569519 215.32952881]
[195.64450073 227.87092590]
[199.58969116 229.68461609]
[202.46348572 232.38754272]
[204.11791992 235.53369141]
[204.56503296 238.67483521]
[203.96382141 241.41282654]
[211.43154907 254.42178345]
[218.89929199 267.43072510]
[226.36703491 280.43969727]
[233.83477783 293.44863892]
[241.30252075 306.45761108]
[248.77026367 319.46655273]
[262.34521484 313.06600952]
[276.39120483 307.77856445]
[290.81707764 303.63851929]
[305.52932739 300.67269897]
[320.43252563 298.90036011]
[335.42999268 298.33297729]
[350.42449951 298.97424316]
[365.31878662 300.81997681]
[380.01623535 303.85824585]
[394.42156982 308.06930542]
[408.44131470 313.42587280]
[421.98458862 319.89318848]
[434.96350098 327.42935181]
[447.29394531 335.98544312]
[458.89593506 345.50595093]
[469.69418335 355.92919922]
[479.61871338 367.18756104]
[488.60510254 379.20797729]
[496.59512329 391.91253662]
[503.53692627 405.21884155]
[509.38549805 419.04058838]
[514.10290527 433.28811646]
[517.65856934 447.86904907]
[520.02941895 462.68881226]
[521.20007324 477.65130615]
[521.16296387 492.65945435]
[519.91827393 507.61596680]
[517.47412109 522.42382812]
[513.84637451 536.98699951]
[509.05850220 551.21099854]
[503.14160156 565.00366211]
[496.13403320 578.27539062]
[488.08123779 590.94030762]
[479.03546143 602.91613770]
[469.05535889 614.12518311]
[458.20565796 624.49487305]
[446.55673218 633.95788574]
[434.18408203 642.45288086]
[421.16802979 649.92468262]
[407.59292603 656.32489014]
[393.54684448 661.61206055]
[379.12084961 665.75177002]
[364.40853882 668.71728516]
[349.50531006 670.48931885]
[334.50781250 671.05633545]
[319.51333618 670.41473389]
[304.61907959 668.56866455]
[289.92169189 665.53009033]
[275.51647949 661.31872559]
[261.49682617 655.96185303]
[247.95372009 649.49420166]
[234.97494507 641.95776367]
[222.64469910 633.40142822]
[211.04292297 623.88061523]
[200.24490356 613.45715332]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 155]
[22 154]
[23 153]
[24 152]
[25 151]
[26 150]
[27 149]
[28 144]
[29 143]
[30 142]
[31 141]
[33 138]
[34 137]
[35 135]
[36 134]
[37 133]
[38 132]
[49 131]
[51 129]
[52 128]
[53 127]
[55 125]
[56 124]
[57 123]
[58 122]
[59 121]
[60 120]
[61 119]
[62 118]
[63 117]
[64 115]
[65 114]
[66 113]
[67 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
