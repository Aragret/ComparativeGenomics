%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGUxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[74.26640320 424.16146851]
[64.71571350 435.73446655]
[54.45719147 446.68490601]
[43.53133011 456.96960449]
[31.98124504 466.54797363]
[19.85251808 475.38217163]
[7.19301653 483.43740845]
[-5.94729614 490.68182373]
[-19.51656151 497.08685303]
[-33.46122742 502.62722778]
[-47.72626114 507.28106689]
[-62.25536728 511.03002930]
[-76.99119568 513.85931396]
[-91.87560272 515.75769043]
[-106.84983826 516.71777344]
[-121.85481262 516.73565674]
[-136.83129883 515.81140137]
[-151.72019958 513.94854736]
[-166.46273804 511.15444946]
[-181.00076294 507.44021606]
[-195.27687073 502.82046509]
[-209.23472595 497.31338501]
[-222.81924438 490.94076538]
[-235.97682190 483.72775269]
[-248.65551758 475.70278931]
[-260.80529785 466.89755249]
[-272.37823486 457.34680176]
[-283.32864380 447.08822632]
[-293.61328125 436.16232300]
[-303.19155884 424.61218262]
[-312.02572632 412.48339844]
[-320.08087158 399.82388306]
[-327.32522583 386.68353271]
[-333.73019409 373.11422729]
[-339.27050781 359.16952515]
[-343.92428589 344.90447998]
[-347.67315674 330.37533569]
[-350.50231934 315.63949585]
[-352.40066528 300.75506592]
[-353.36062622 285.78082275]
[-353.37847900 270.77587891]
[-352.45410156 255.79937744]
[-350.59118652 240.91049194]
[-347.79702759 226.16796875]
[-344.08270264 211.62997437]
[-339.46286011 197.35388184]
[-333.95574951 183.39605713]
[-327.58306885 169.81156921]
[-320.36996460 156.65402222]
[-312.34494019 143.97537231]
[-303.53964233 131.82562256]
[-293.98883057 120.25274658]
[-283.73019409 109.30241394]
[-272.80422974 99.01782990]
[-261.25405884 89.43959045]
[-249.12522888 80.60549164]
[-236.46563721 72.55040741]
[-223.32525635 65.30612183]
[-209.75592041 58.90122604]
[-195.81120300 53.36100006]
[-181.54611206 48.70730209]
[-167.01696777 44.95850372]
[-152.28111267 42.12939835]
[-137.39668274 40.23114777]
[-122.42243958 39.27125168]
[-107.41746521 39.25349045]
[-92.44098663 40.17794037]
[-77.55210876 42.04094696]
[-62.80959320 44.83516312]
[-48.27161789 48.54955673]
[-33.99555969 53.16947174]
[-20.03775787 58.67667389]
[-6.45330095 65.04943085]
[6.70419931 72.26258850]
[19.38281631 80.28768158]
[31.53251457 89.09304047]
[43.10534286 98.64391327]
[54.05562592 108.90260315]
[64.34015656 119.82862854]
[75.88645172 110.25350952]
[87.43275452 100.67838287]
[98.76235199 90.84780884]
[109.86958313 80.76667023]
[114.88831329 65.76257324]
[129.51268005 62.93820953]
[140.61991882 52.85707092]
[151.72715759 42.77593231]
[162.83438110 32.69479370]
[173.94161987 22.61365509]
[164.65586853 10.82554722]
[156.21502686 -1.58158946]
[148.66024780 -14.54730797]
[142.02830505 -28.00844002]
[136.35151672 -41.89940643]
[131.65756226 -56.15252686]
[127.96928406 -70.69836426]
[125.30466461 -85.46604919]
[123.67668152 -100.38363647]
[123.09326172 -115.37844849]
[123.55725861 -130.37742615]
[125.06640625 -145.30751038]
[127.61334991 -160.09593201]
[131.18568420 -174.67068481]
[135.76600647 -188.96072388]
[141.33200073 -202.89645386]
[147.85653687 -216.40997314]
[155.30784607 -229.43542480]
[163.64962769 -241.90939331]
[172.84121704 -253.77105713]
[182.83786011 -264.96267700]
[193.59083557 -275.42965698]
[205.04776001 -285.12109375]
[217.15281677 -293.98968506]
[229.84703064 -301.99230957]
[243.06855774 -309.08990479]
[256.75299072 -315.24789429]
[270.83364868 -320.43634033]
[285.24194336 -324.62991333]
[299.90765381 -327.80819702]
[314.75933838 -329.95568848]
[329.72467041 -331.06195068]
[344.73071289 -331.12158203]
[359.70434570 -330.13430786]
[374.57266235 -328.10491943]
[389.26318359 -325.04330444]
[403.70434570 -320.96438599]
[417.82577515 -315.88806152]
[431.55871582 -309.83898926]
[444.83624268 -302.84671021]
[457.59368896 -294.94528198]
[469.76885986 -286.17315674]
[481.30245972 -276.57312012]
[492.13827515 -266.19189453]
[502.22354126 -255.08010864]
[511.50915527 -243.29187012]
[519.94976807 -230.88461304]
[527.50439453 -217.91879272]
[534.13616943 -204.45756531]
[539.81274414 -190.56651306]
[544.50646973 -176.31332397]
[548.19458008 -161.76744080]
[550.85894775 -146.99971008]
[552.48675537 -132.08210754]
[553.06994629 -117.08728027]
[552.60571289 -102.08831024]
[551.09637451 -87.15825653]
[548.54919434 -72.36985779]
[544.97668457 -57.79516220]
[540.39611816 -43.50518417]
[534.82995605 -29.56953621]
[528.30523682 -16.05611610]
[520.85369873 -3.03075790]
[512.51177979 9.44307804]
[503.32000732 21.30462074]
[493.32321167 32.49607849]
[482.57006836 42.96293259]
[471.11300659 52.65418625]
[459.00781250 61.52262497]
[446.31347656 69.52503967]
[433.09185791 76.62244415]
[419.40734863 82.78025818]
[405.32659912 87.96849060]
[390.91827393 92.16185760]
[376.25250244 95.33992004]
[361.40078735 97.48721313]
[346.43542480 98.59326172]
[331.42938232 98.65268707]
[316.45578003 97.66519165]
[301.58749390 95.63558960]
[286.89703369 92.57376862]
[272.45593262 88.49465179]
[258.33453369 83.41809845]
[244.60168457 77.36885071]
[231.32424927 70.37638092]
[218.56694031 62.47475433]
[206.39190674 53.70246506]
[194.85844421 44.10225296]
[184.02276611 33.72089005]
[172.91552734 43.80202866]
[161.80828857 53.88316727]
[150.70106506 63.96430588]
[139.59382629 74.04544067]
[135.36955261 88.32846832]
[119.95072174 91.87390137]
[108.84349060 101.95503998]
[108.11293030 105.74168396]
[105.71682739 109.18791962]
[101.84463501 111.55712128]
[97.00787354 112.22468567]
[85.46157837 121.79980469]
[73.91527557 131.37492371]
[82.74955750 143.50360107]
[90.80484009 156.16307068]
[98.04933167 169.30334473]
[104.45443726 182.87257385]
[109.99488831 196.81721497]
[114.64880371 211.08222961]
[118.39783478 225.61131287]
[121.22717285 240.34712219]
[123.12564850 255.23152161]
[124.08578491 270.20574951]
[124.10377502 285.21072388]
[123.17956543 300.18722534]
[121.31678772 315.07611084]
[118.52280426 329.81869507]
[114.80863953 344.35671997]
[110.18894958 358.63284302]
[104.68196106 372.59072876]
[98.30941772 386.17529297]
[91.09646606 399.33291626]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[79 191]
[80 190]
[81 189]
[82 185]
[83 184]
[85 182]
[86 181]
[87 180]
[88 179]
[89 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
