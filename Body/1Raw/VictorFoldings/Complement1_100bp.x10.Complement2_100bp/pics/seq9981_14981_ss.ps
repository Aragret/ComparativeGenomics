%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[30.07246780 520.44061279]
[19.07945824 530.65350342]
[7.46686697 540.15594482]
[-4.71947765 548.91052246]
[-17.43148041 556.88262939]
[-30.61897469 564.04083252]
[-44.22991180 570.35681152]
[-58.21057510 575.80572510]
[-72.50579834 580.36602783]
[-87.05915070 584.01971436]
[-101.81320190 586.75231934]
[-116.70972443 588.55316162]
[-131.68992615 589.41510010]
[-146.69470215 589.33471680]
[-161.66481018 588.31231689]
[-176.54118347 586.35198975]
[-191.26510620 583.46136475]
[-205.77847290 579.65197754]
[-220.02400208 574.93878174]
[-233.94548035 569.34039307]
[-247.48796082 562.87890625]
[-260.59799194 555.57983398]
[-273.22384644 547.47198486]
[-285.31570435 538.58734131]
[-296.82580566 528.96099854]
[-307.70874023 518.63092041]
[-317.92160034 507.63781738]
[-327.42401123 496.02517700]
[-336.17852783 483.83880615]
[-344.15054321 471.12673950]
[-351.30865479 457.93920898]
[-357.62460327 444.32824707]
[-363.07342529 430.34756470]
[-367.63363647 416.05230713]
[-371.28723145 401.49893188]
[-374.01980591 386.74487305]
[-375.82058716 371.84835815]
[-376.68243408 356.86813354]
[-376.60195923 341.86337280]
[-375.57949829 326.89324951]
[-373.61904907 312.01690674]
[-370.72839355 297.29299927]
[-366.91891479 282.77963257]
[-362.20562744 268.53411865]
[-356.60717773 254.61268616]
[-350.14562988 241.07023621]
[-342.84649658 227.96023560]
[-334.73858643 215.33442688]
[-325.85388184 203.24263000]
[-316.22744751 191.73257446]
[-305.89727783 180.84968567]
[-294.90417480 170.63690186]
[-283.29147339 161.13453674]
[-271.10504150 152.38009644]
[-258.39297485 144.40812683]
[-245.20539856 137.25009155]
[-231.59439087 130.93421936]
[-217.61366272 125.48547363]
[-203.31840515 120.92533875]
[-188.76501465 117.27181244]
[-174.01092529 114.53930664]
[-159.11437988 112.73861694]
[-144.13417053 111.87684631]
[-129.12940979 111.95738983]
[-114.15930939 112.97993469]
[-99.28295135 114.94045258]
[-84.55905914 117.83119202]
[-70.04573059 121.64075470]
[-55.80024719 126.35409546]
[-41.87882614 131.95262146]
[-28.33641243 138.41424561]
[-15.22645092 145.71345520]
[-2.60068274 153.82144165]
[9.49106503 162.70620728]
[21.00107193 172.33268738]
[31.32773972 161.45335388]
[41.65440750 150.57402039]
[51.98107529 139.69468689]
[62.30774689 128.81535339]
[72.63441467 117.93601990]
[67.32176208 101.64593506]
[70.97068787 84.90447235]
[82.58050537 72.30275726]
[98.96739197 67.29663849]
[115.63745880 71.25897980]
[125.63562775 60.07700729]
[135.63380432 48.89503098]
[145.63197327 37.71305847]
[155.63014221 26.53108406]
[145.23112488 15.71082878]
[135.68022156 4.13509512]
[127.03214264 -8.12981319]
[119.33641052 -21.01364326]
[112.63710785 -34.44259644]
[106.97261810 -48.33975220]
[102.37537384 -62.62550354]
[98.87172699 -77.21803284]
[96.48172760 -92.03374481]
[95.21907043 -106.98777771]
[95.09099579 -121.99446869]
[96.09823608 -136.96788025]
[98.23501587 -151.82221985]
[101.48909760 -166.47242737]
[105.84183502 -180.83456421]
[111.26831055 -194.82637024]
[117.73743439 -208.36770630]
[125.21215057 -221.38101196]
[133.64964294 -233.79173279]
[143.00158691 -245.52879333]
[153.21440125 -256.52496338]
[164.22961426 -266.71725464]
[175.98410034 -276.04727173]
[188.41055298 -284.46157837]
[201.43777466 -291.91201782]
[214.99116516 -298.35586548]
[228.99307251 -303.75622559]
[243.36331177 -308.08215332]
[258.01956177 -311.30889893]
[272.87786865 -313.41793823]
[287.85311890 -314.39724731]
[302.85955811 -314.24118042]
[317.81118774 -312.95062256]
[332.62243652 -310.53295898]
[347.20837402 -307.00210571]
[361.48553467 -302.37820435]
[375.37210083 -296.68780518]
[388.78851318 -289.96343994]
[401.65798950 -282.24368286]
[413.90673828 -273.57272339]
[425.46463013 -264.00024414]
[436.26544189 -253.58105469]
[446.24734497 -242.37486267]
[455.35314941 -230.44583130]
[463.53070068 -217.86228943]
[470.73312378 -204.69635010]
[476.91918945 -191.02337646]
[482.05349731 -176.92173767]
[486.10656738 -162.47216797]
[489.05523682 -147.75746155]
[490.88259888 -132.86187744]
[491.57818604 -117.87076569]
[491.13803101 -102.86997986]
[489.56460571 -87.94544220]
[486.86697388 -73.18264771]
[483.06057739 -58.66615295]
[478.16720581 -44.47910690]
[472.21490479 -30.70277214]
[465.23773193 -17.41606331]
[457.27569580 -4.69508314]
[448.37438965 7.38730097]
[438.58477783 18.76188278]
[427.96295166 29.36350822]
[416.56979370 39.13145065]
[404.47048950 48.00976181]
[391.73437500 55.94758224]
[378.43441772 62.89945221]
[364.64678955 68.82554626]
[350.45046997 73.69191742]
[335.92675781 77.47069550]
[321.15884399 80.14023590]
[306.23135376 81.68524933]
[291.22973633 82.09687805]
[276.23999023 81.37277222]
[261.34790039 79.51707458]
[246.63882446 76.54042053]
[232.19700623 72.45984650]
[218.10514832 67.29874420]
[204.44398499 61.08666611]
[191.29176331 53.85919571]
[178.72380066 45.65773392]
[166.81211853 36.52925491]
[156.81394958 47.71123123]
[146.81578064 58.89320374]
[136.81759644 70.07518005]
[126.81943512 81.25715637]
[131.90960693 92.76441956]
[132.28067017 105.34175110]
[127.87777710 117.12908936]
[119.35205078 126.38322449]
[107.96435547 131.73554993]
[95.39881897 132.39453125]
[83.51374817 128.26269531]
[73.18708038 139.14202881]
[62.86041260 150.02136230]
[52.53374481 160.90069580]
[42.20707321 171.78002930]
[31.88040543 182.65936279]
[42.09335709 193.65231323]
[51.59590149 205.26486206]
[60.35053635 217.45115662]
[68.32270813 230.16311646]
[75.48094940 243.35057068]
[81.79701996 256.96148682]
[87.24599457 270.94210815]
[91.80635071 285.23730469]
[95.46011353 299.79064941]
[98.19284821 314.54467773]
[99.99376678 329.44119263]
[100.85577393 344.42138672]
[100.77546692 359.42617798]
[99.75315094 374.39627075]
[97.79286957 389.27267456]
[94.90235901 403.99661255]
[91.09302521 418.50997925]
[86.37990570 432.75555420]
[80.78159332 446.67706299]
[74.32018280 460.21957397]
[67.02117920 473.32965088]
[58.91339493 485.95553589]
[50.02881622 498.04742432]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[75 187]
[76 186]
[77 185]
[78 184]
[79 183]
[80 182]
[85 175]
[86 174]
[87 173]
[88 172]
[89 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
