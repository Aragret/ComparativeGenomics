%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[9.72738457 688.71282959]
[-5.27663469 689.34210205]
[-20.25224686 688.22515869]
[-34.99692535 685.37719727]
[-49.31126785 680.83666992]
[-63.00168228 674.66503906]
[-75.88302612 666.94573975]
[-87.78108978 657.78320312]
[-98.53497314 647.30126953]
[-107.99923706 635.64172363]
[-116.04589081 622.96234131]
[-122.56610870 609.43444824]
[-127.47171021 595.24108887]
[-130.69636536 580.57415771]
[-132.19644165 565.63208008]
[-131.95167542 550.61688232]
[-129.96537781 535.73162842]
[-126.26438141 521.17761230]
[-120.89876556 507.15167236]
[-113.94109344 493.84350586]
[-105.48544312 481.43307495]
[-95.64617920 470.08822632]
[-84.55636597 459.96240234]
[-72.36597443 451.19250488]
[-59.23987579 443.89718628]
[-45.35557556 438.17504883]
[-30.90085030 434.10351562]
[-16.07117844 431.73764038]
[-1.06711686 431.10940552]
[0.04853186 416.15097046]
[1.16418052 401.19250488]
[2.27982926 386.23403931]
[3.39547801 371.27560425]
[-8.11357880 359.01263428]
[-7.17400169 341.88278198]
[6.12046766 330.51278687]
[7.01328325 315.53939819]
[7.90609932 300.56597900]
[0.46214530 313.58856201]
[-9.84627533 324.48516846]
[-22.43617058 332.63958740]
[-36.59552383 337.59063721]
[-51.52355194 339.05828857]
[-66.37599945 336.95953369]
[-80.31289673 331.41311646]
[-92.54604340 322.73266602]
[-102.38358307 311.40911865]
[-109.26917267 298.08288574]
[-112.81338501 283.50759888]
[-112.81578827 268.50759888]
[-109.27623749 253.93119812]
[-102.39492035 240.60275269]
[-92.56100464 229.27606201]
[-80.33064270 220.59169006]
[-66.39552307 215.04080200]
[-51.54374313 212.93730164]
[-36.61524582 214.40017700]
[-22.45430946 219.34667969]
[-9.86180305 227.49705505]
[0.45010620 238.39038086]
[7.89822960 251.41058350]
[12.06133938 265.82128906]
[12.70391083 280.80859375]
[18.77774429 267.09332275]
[24.85157776 253.37805176]
[22.93052483 238.60784912]
[35.59313202 229.12265015]
[41.66696548 215.40739441]
[34.04667664 202.63752747]
[35.42328644 187.65190125]
[45.47756195 176.21665955]
[60.51115036 172.85551453]
[66.58498383 159.14024353]
[72.55654907 145.38014221]
[78.42550659 131.57595825]
[84.29447174 117.77178192]
[90.16342926 103.96760559]
[95.41014862 89.91513824]
[100.02415466 75.64240265]
[104.63816833 61.36967087]
[109.25217438 47.09693527]
[113.86618805 32.82420349]
[110.74896240 17.31312561]
[122.02604675 7.58292770]
[126.64005280 -6.68980598]
[126.30209351 -15.81798172]
[131.43046570 -21.13978386]
[130.51928711 -27.68816376]
[132.72137451 -32.92723083]
[136.61737061 -35.68953323]
[141.86408997 -49.74200439]
[147.11080933 -63.79447556]
[143.64270020 -81.87910461]
[157.60427856 -92.51120758]
[160.59904480 -107.20921326]
[161.49186707 -122.18261719]
[162.38467407 -137.15602112]
[163.27749634 -152.12942505]
[164.17030334 -167.10282898]
[150.25010681 -173.10313416]
[139.22373962 -183.50483704]
[132.42271423 -197.05184937]
[130.66828918 -212.10833740]
[134.17228699 -226.85614014]
[142.51162720 -239.51440430]
[154.67926025 -248.55455017]
[169.20590210 -252.88496399]
[184.33738708 -251.98272705]
[198.24650574 -245.95678711]
[209.25367737 -235.53479004]
[216.02972412 -221.97525024]
[217.75640869 -206.91555786]
[214.22523499 -192.17424011]
[205.86259460 -179.53137207]
[193.67831421 -170.51365662]
[179.14372253 -166.21002197]
[178.25090027 -151.23661804]
[177.35807800 -136.26319885]
[176.46527100 -121.28980255]
[175.57244873 -106.31639099]
[183.26213074 -119.19540405]
[194.36605835 -129.28018188]
[207.92362976 -135.69830322]
[222.76197815 -137.89454651]
[237.59742737 -135.67889404]
[251.14659119 -129.24302673]
[262.23730469 -119.14373016]
[269.91012573 -106.25466919]
[273.50128174 -91.69088745]
[272.70007324 -76.71230316]
[267.57583618 -62.61470413]
[258.57186890 -50.61767960]
[246.46711731 -41.75909042]
[232.30873108 -36.80529404]
[217.32156372 -36.18484116]
[202.80216980 -39.95140839]
[190.00660706 -47.77915192]
[180.04182434 -58.99089050]
[173.76986694 -72.61669922]
[171.73330688 -87.47428894]
[176.63291931 -76.41443634]
[172.55221558 -64.60208893]
[161.16326904 -58.54775620]
[155.91654968 -44.49528503]
[150.66983032 -30.44281578]
[145.63291931 -16.31378555]
[140.91278076 -2.07579637]
[136.29878235 12.19693661]
[139.74601746 26.68713188]
[128.13891602 37.43821335]
[123.52490997 51.71094513]
[118.91090393 65.98368073]
[114.29689026 80.25641632]
[109.68288422 94.52914429]
[123.49612427 88.68154907]
[137.44963074 94.18607330]
[143.55018616 107.88947296]
[138.30313110 121.94181824]
[124.71421051 128.29328918]
[110.56777191 123.30547333]
[103.96760559 109.83657074]
[98.09864807 123.64074707]
[92.22968292 137.44491577]
[86.36072540 151.24909973]
[85.88296509 160.37103271]
[80.30025482 165.21408081]
[74.22641754 178.92933655]
[81.84126282 192.32040405]
[80.13089752 207.45075989]
[69.95949554 218.54159546]
[55.38223267 221.48121643]
[49.30839920 235.19648743]
[50.79500961 250.94769287]
[38.56684494 259.45187378]
[32.49301147 273.16714478]
[26.41917801 286.88241577]
[22.87950516 301.45880127]
[21.98668861 316.43218994]
[21.09387398 331.40560913]
[31.13437271 340.38351440]
[34.12718582 353.31616211]
[29.19799995 365.43167114]
[18.35393143 372.39123535]
[17.23828316 387.34970093]
[16.12263298 402.30813599]
[15.00698566 417.26660156]
[13.89133644 432.22506714]
[28.63620567 435.07205200]
[42.95084763 439.61160278]
[56.64167404 445.78231812]
[69.52353668 453.50076294]
[81.42221069 462.66250610]
[92.17679596 473.14370728]
[101.64183807 484.80261230]
[109.68933105 497.48150635]
[116.21045685 511.00894165]
[121.11700439 525.20196533]
[124.34263611 539.86865234]
[125.84371948 554.81066895]
[125.59995270 569.82586670]
[123.61463928 584.71130371]
[119.91461945 599.26556396]
[114.54994202 613.29180908]
[107.59315491 626.60046387]
[99.13833618 639.01141357]
[89.29982758 650.35693359]
[78.21068573 660.48352051]
[66.02088165 669.25421143]
[52.89527130 676.55041504]
[39.01135254 682.27349854]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 187]
[30 186]
[31 185]
[32 184]
[33 183]
[36 179]
[37 178]
[38 177]
[63 176]
[64 175]
[65 174]
[67 172]
[68 171]
[72 167]
[73 166]
[74 164]
[75 163]
[76 162]
[77 161]
[78 154]
[79 153]
[80 152]
[81 151]
[82 150]
[84 148]
[85 147]
[87 146]
[90 145]
[91 144]
[92 143]
[94 140]
[95 120]
[96 119]
[97 118]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
