%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGUxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[202.06445312 383.98968506]
[203.65141296 369.06265259]
[206.62919617 354.34982300]
[210.97164917 339.98049927]
[216.64060974 326.08093262]
[223.58622742 312.77331543]
[231.74749756 300.17459106]
[241.05268860 288.39544678]
[251.42001343 277.53942871]
[241.58943176 266.20983887]
[231.75885010 254.88024902]
[221.92826843 243.55065918]
[212.09768677 232.22106934]
[202.26710510 220.89147949]
[192.26893616 209.70950317]
[182.10539246 198.67762756]
[171.94183350 187.64575195]
[161.77828979 176.61386108]
[151.61474609 165.58198547]
[134.60626221 161.26016235]
[130.72201538 143.26031494]
[120.39533997 132.38098145]
[110.06867218 121.50165558]
[99.74200439 110.62231445]
[88.71012115 100.45877075]
[77.02254486 91.05661774]
[65.12791443 81.91781616]
[53.03215790 73.04692078]
[40.93640518 64.17602539]
[28.84065437 55.30513000]
[16.74490356 46.43423462]
[1.04088688 44.51214218]
[-4.64638901 30.74608994]
[-16.74214172 21.87519455]
[-28.83789253 13.00429916]
[-40.93364334 4.13340378]
[-50.76620483 15.47243118]
[-61.49029160 25.97227859]
[-73.03453064 35.56306839]
[-85.32210541 44.18097687]
[-98.27124023 51.76865005]
[-111.79575348 58.27559280]
[-125.80564880 63.65850067]
[-140.20768738 67.88155365]
[-154.90602112 70.91664886]
[-169.80282593 72.74358368]
[-184.79899597 73.35020447]
[-199.79469299 72.73246765]
[-214.69015503 70.89449310]
[-229.38623047 67.84850311]
[-243.78514099 63.61477280]
[-257.79104614 58.22147751]
[-271.31072998 51.70450974]
[-284.25421143 44.10723877]
[-296.53540039 35.48022461]
[-308.07254028 25.88088036]
[-318.78881836 15.37308693]
[-328.61297607 4.02677250]
[-337.47961426 -8.08255196]
[-345.32971191 -20.87430191]
[-352.11102295 -34.26334763]
[-357.77844238 -48.16058350]
[-362.29421997 -62.47352982]
[-365.62835693 -77.10693359]
[-367.75860596 -91.96340179]
[-368.67083740 -106.94407654]
[-368.35894775 -121.94926453]
[-366.82504272 -136.87908936]
[-364.07928467 -151.63421631]
[-360.13998413 -166.11643982]
[-355.03335571 -180.22938538]
[-348.79336548 -193.87911987]
[-341.46157837 -206.97482300]
[-333.08673096 -219.42933655]
[-323.72457886 -231.15977478]
[-313.43743896 -242.08807373]
[-302.29379272 -252.14149475]
[-290.36773682 -261.25314331]
[-277.73867798 -269.36239624]
[-264.49069214 -276.41528320]
[-250.71186829 -282.36483765]
[-236.49397278 -287.17150879]
[-221.93157959 -290.80325317]
[-207.12162781 -293.23596191]
[-192.16265869 -294.45339966]
[-177.15423584 -294.44750977]
[-162.19624329 -293.21829224]
[-147.38819885 -290.77392578]
[-132.82867432 -287.13070679]
[-118.61456299 -282.31283569]
[-104.84043884 -276.35244751]
[-91.59798431 -269.28915405]
[-78.97532654 -261.16995239]
[-67.05645752 -252.04891968]
[-55.92070770 -241.98670959]
[-45.64217758 -231.05032349]
[-36.28927612 -219.31251526]
[-27.92423820 -206.85142517]
[-20.60274124 -193.74995422]
[-14.37350273 -180.09530640]
[-9.27798176 -165.97834778]
[-5.35008764 -151.49302673]
[-2.61595917 -136.73574829]
[-1.09379303 -121.80471802]
[-0.79371846 -106.79929352]
[-1.71773267 -91.81933594]
[-3.85968637 -76.96454620]
[-7.20532513 -62.33377457]
[-11.73238373 -48.02439117]
[-17.41073608 -34.13161850]
[-24.20259094 -20.74791336]
[-32.06274796 -7.96234798]
[-19.96699715 0.90854728]
[-7.87124586 9.77944279]
[4.22450638 18.65033722]
[19.06335258 19.93792725]
[25.61579895 34.33848190]
[37.71155167 43.20937729]
[49.80730057 52.08027267]
[61.90305328 60.95117188]
[73.99880981 69.82206726]
[77.52056885 69.65028381]
[81.30051422 71.17577362]
[84.53999329 74.50128937]
[86.42469788 79.36904144]
[98.11227417 88.77118683]
[94.79185486 74.14331055]
[99.80676270 60.00645447]
[111.60306549 50.74107742]
[126.52555847 49.21815872]
[139.95033264 55.90959167]
[147.71759033 68.74195862]
[147.42056274 83.73902130]
[139.15127563 96.25376129]
[125.47205353 102.40836334]
[110.62133789 100.29564667]
[120.94800568 111.17498016]
[131.27467346 122.05432129]
[141.60134888 132.93365479]
[154.45117188 134.04924011]
[162.82830811 143.32325745]
[162.64662170 155.41844177]
[172.81016541 166.45031738]
[182.97372437 177.48219299]
[193.13726807 188.51406860]
[203.30081177 199.54595947]
[209.48724365 201.87825012]
[213.03462219 206.31820679]
[213.59669495 211.06089783]
[223.42727661 222.39048767]
[233.25785828 233.72007751]
[243.08843994 245.04966736]
[252.91902161 256.37927246]
[262.74960327 267.70886230]
[274.95874023 258.97549438]
[287.93203735 251.42381287]
[301.55548096 245.12014771]
[315.70935059 240.11991882]
[330.26928711 236.46707153]
[345.10726929 234.19371033]
[360.09295654 233.31979370]
[375.09463501 233.85302734]
[389.98043823 235.78869629]
[404.61959839 239.10981750]
[418.88342285 243.78718567]
[432.64657593 249.77970886]
[445.78808594 257.03469849]
[458.19247437 265.48843384]
[469.75073242 275.06658936]
[480.36126709 285.68499756]
[489.93087769 297.25036621]
[498.37539673 309.66101074]
[505.62066650 322.80792236]
[511.60296631 336.57550049]
[516.26977539 350.84277344]
[519.58001709 365.48440552]
[521.50463867 380.37164307]
[522.02679443 395.37371826]
[521.14172363 410.35873413]
[518.85736084 425.19503784]
[515.19372559 439.75225830]
[510.18301392 453.90243530]
[503.86926270 467.52117920]
[496.30795288 480.48889160]
[487.56555176 492.69152832]
[477.71887207 504.02191162]
[466.85443115 514.38043213]
[455.06777954 523.67602539]
[442.46240234 531.82708740]
[429.14916992 538.76196289]
[415.24502563 544.41961670]
[400.87216187 548.75042725]
[386.15695190 551.71624756]
[371.22863770 553.29113770]
[356.21844482 553.46112061]
[341.25830078 552.22479248]
[326.47967529 549.59295654]
[312.01242065 545.58886719]
[297.98370361 540.24755859]
[284.51681519 533.61602783]
[271.73007202 525.75256348]
[259.73587036 516.72625732]
[248.63963318 506.61648560]
[238.53884888 495.51205444]
[229.52229309 483.51052856]
[221.66921997 470.71743774]
[215.04861450 457.24514771]
[209.71870422 443.21209717]
[205.72628784 428.74160767]
[203.10646057 413.96084595]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 154]
[10 153]
[11 152]
[12 151]
[13 150]
[14 149]
[15 146]
[16 145]
[17 144]
[18 143]
[19 142]
[21 139]
[22 138]
[23 137]
[24 136]
[25 126]
[26 125]
[27 121]
[28 120]
[29 119]
[30 118]
[31 117]
[33 115]
[34 114]
[35 113]
[36 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
