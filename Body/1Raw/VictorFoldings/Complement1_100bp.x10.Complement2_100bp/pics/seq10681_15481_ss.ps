%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUUxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[187.43354797 202.99140930]
[177.10687256 192.11207581]
[162.73307800 188.20782471]
[158.84420776 172.87200928]
[148.51753235 161.99267578]
[138.19087219 151.11334229]
[123.81706238 147.20909119]
[119.92819214 131.87327576]
[109.60152435 120.99394226]
[99.27485657 110.11460876]
[91.88257599 106.90107727]
[88.87691498 98.99558258]
[78.71337128 87.96369934]
[68.54982758 76.93182373]
[54.20259476 83.59348297]
[38.51828766 85.49315643]
[23.03367805 82.45681000]
[9.26223660 74.79345703]
[-1.45379555 63.26374817]
[-8.07422733 49.00450897]
[-9.96187973 33.41662216]
[-6.94389439 18.02742958]
[0.67251164 4.34105968]
[-9.65415668 -6.53827477]
[-19.98082542 -17.41760826]
[-30.30749321 -28.29694366]
[-45.41992569 -32.97935486]
[-48.57016754 -47.53700638]
[-58.89683914 -58.41633987]
[-69.22350311 -69.29567719]
[-79.55017853 -80.17501068]
[-76.44673157 -65.49956512]
[-79.50091553 -50.81378937]
[-88.19803619 -38.59249878]
[-101.07248688 -30.89518547]
[-115.95468903 -29.01898956]
[-130.33673096 -33.28008270]
[-141.79498291 -42.96039200]
[-148.39852905 -56.42861557]
[-149.03457642 -71.41512299]
[-143.59590149 -85.39442444]
[-132.99905396 -96.01076508]
[-119.02975464 -101.47509766]
[-104.04210663 -100.86659241]
[-90.56046295 -94.28677368]
[-98.60163879 -106.94930267]
[-106.64280701 -119.61182404]
[-114.68398285 -132.27435303]
[-122.72515869 -144.93687439]
[-130.76632690 -157.59939575]
[-144.07308960 -150.65649414]
[-157.92071533 -144.86711121]
[-172.20944214 -140.27294922]
[-186.83630371 -136.90711975]
[-201.69590759 -134.79385376]
[-216.68119812 -133.94841003]
[-231.68421936 -134.37686157]
[-246.59683228 -136.07612610]
[-261.31161499 -139.03396606]
[-275.72256470 -143.22904968]
[-289.72579956 -148.63116455]
[-303.22048950 -155.20138550]
[-316.10934448 -162.89237976]
[-328.29949951 -171.64871216]
[-339.70315552 -181.40731812]
[-350.23815918 -192.09786987]
[-359.82855225 -203.64335632]
[-368.40527344 -215.96057129]
[-375.90649414 -228.96076965]
[-382.27822876 -242.55029297]
[-387.47448730 -256.63122559]
[-391.45788574 -271.10211182]
[-394.19970703 -285.85867310]
[-395.68020630 -300.79458618]
[-395.88870239 -315.80227661]
[-394.82369995 -330.77355957]
[-392.49285889 -345.60061646]
[-388.91296387 -360.17654419]
[-384.10986328 -374.39639282]
[-378.11813354 -388.15768433]
[-370.98092651 -401.36123657]
[-362.74966431 -413.91195679]
[-353.48370361 -425.71939087]
[-343.24975586 -436.69848633]
[-332.12158203 -446.77011108]
[-320.17935181 -455.86169434]
[-307.50912476 -463.90777588]
[-294.20217896 -470.85031128]
[-280.35440063 -476.63934326]
[-266.06558228 -481.23315430]
[-251.43861389 -484.59860229]
[-236.57896423 -486.71145630]
[-221.59364319 -487.55651855]
[-206.59063721 -487.12768555]
[-191.67807007 -485.42803955]
[-176.96334839 -482.46981812]
[-162.55252075 -478.27438354]
[-148.54940796 -472.87188721]
[-135.05491638 -466.30133057]
[-122.16625977 -458.61001587]
[-109.97631073 -449.85333252]
[-98.57290649 -440.09445190]
[-88.03820038 -429.40362549]
[-78.44809723 -417.85787964]
[-69.87169647 -405.54046631]
[-62.37079239 -392.54006958]
[-55.99943161 -378.95037842]
[-50.80352020 -364.86932373]
[-46.82049179 -350.39831543]
[-44.07905197 -335.64169312]
[-42.59894562 -320.70571899]
[-42.39084244 -305.69802856]
[-43.45623779 -290.72677612]
[-45.78746033 -275.89981079]
[-49.36770630 -261.32394409]
[-54.17118835 -247.10421753]
[-60.16328812 -233.34309387]
[-67.30083466 -220.13970947]
[-75.53240967 -207.58921814]
[-84.79868317 -195.78201294]
[-95.03291321 -184.80319214]
[-106.16134644 -174.73185730]
[-118.10380554 -165.64057922]
[-110.06262970 -152.97804260]
[-102.02145386 -140.31552124]
[-93.98028564 -127.65299988]
[-85.93910980 -114.99047089]
[-77.89794159 -102.32794952]
[-68.67083740 -90.50167847]
[-58.34417343 -79.62234497]
[-48.01750183 -68.74301147]
[-37.69083405 -57.86367416]
[-23.31703568 -53.95942688]
[-19.42815971 -38.62361145]
[-9.10149097 -27.74427795]
[1.22517741 -16.86494255]
[11.55184555 -5.98560905]
[24.26127052 -12.43978786]
[38.29020309 -15.05302238]
[52.50275421 -13.60459614]
[65.74559021 -8.20302773]
[76.94152832 0.72200429]
[85.17714691 12.45383263]
[89.77732849 26.04633713]
[90.36056519 40.40024948]
[86.87059784 54.35205078]
[79.58170319 66.76828003]
[89.74524689 77.80015564]
[99.90879822 88.83203125]
[110.15419006 99.78794098]
[120.48085785 110.66727448]
[130.80752563 121.54660797]
[145.91995239 126.22901917]
[149.07020569 140.78666687]
[159.39686584 151.66600037]
[169.72354126 162.54534912]
[184.83596802 167.22775269]
[187.98620605 181.78540039]
[198.31288147 192.66473389]
[210.33070374 183.65982056]
[223.31268311 176.11100769]
[237.08326721 170.12037659]
[251.45622253 165.76896667]
[266.23715210 163.11561584]
[281.22619629 162.19619751]
[296.22061157 163.02314758]
[311.01763916 165.58529663]
[325.41714478 169.84799194]
[339.22442627 175.75357056]
[352.25271606 183.22218323]
[364.32583618 192.15281677]
[375.28051758 202.42469788]
[384.96859741 213.89889526]
[393.25909424 226.42025757]
[400.03982544 239.81944275]
[405.21914673 253.91522217]
[408.72698975 268.51699829]
[410.51589966 283.42727661]
[410.56170654 298.44439697]
[408.86376953 313.36532593]
[405.44509888 327.98822021]
[400.35186768 342.11532593]
[393.65298462 355.55563354]
[385.43905640 368.12734985]
[375.82113647 379.66043091]
[364.92932129 389.99896240]
[352.91088867 399.00308228]
[339.92840576 406.55102539]
[326.15744019 412.54071045]
[311.78417969 416.89117432]
[297.00308228 419.54354858]
[282.01397705 420.46197510]
[267.01959229 419.63400269]
[252.22274780 417.07086182]
[237.82353210 412.80722046]
[224.01664734 406.90072632]
[210.98886108 399.43124390]
[198.91633606 390.49978638]
[187.96234131 380.22717285]
[178.27500916 368.75231934]
[169.98536682 356.23040771]
[163.20552063 342.83078003]
[158.02714539 328.73464966]
[154.52027893 314.13265991]
[152.73236084 299.22225952]
[152.68756104 284.20510864]
[154.38647461 269.28433228]
[157.80615234 254.66165161]
[162.90031433 240.53486633]
[169.60008240 227.09501648]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 159]
[2 158]
[4 156]
[5 155]
[6 154]
[8 152]
[9 151]
[10 150]
[12 149]
[13 148]
[14 147]
[23 137]
[24 136]
[25 135]
[26 134]
[28 132]
[29 131]
[30 130]
[31 129]
[45 128]
[46 127]
[47 126]
[48 125]
[49 124]
[50 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
