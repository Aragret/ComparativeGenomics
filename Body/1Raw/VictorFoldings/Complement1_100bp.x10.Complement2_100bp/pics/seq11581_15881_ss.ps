%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[115.90866089 227.61824036]
[115.54944611 212.61665344]
[116.21481323 197.62551880]
[117.90167236 182.71473694]
[120.60214233 167.95384216]
[124.30364990 153.41163635]
[128.98892212 139.15594482]
[134.63612366 125.25321198]
[121.15637970 118.67318726]
[107.67665100 112.09315491]
[93.71653748 112.87220001]
[85.74332428 101.38657379]
[72.26358795 94.80654907]
[58.78385544 88.22652435]
[45.30412292 81.64649200]
[31.72791481 75.26789093]
[18.05824471 69.09211731]
[4.38857365 62.91635132]
[-9.28109646 56.74058151]
[-22.95076752 50.56481552]
[-36.62043762 44.38904572]
[-50.29010773 38.21327591]
[-57.39691925 51.42970276]
[-65.39862061 64.12432861]
[-74.25707245 76.23665619]
[-83.93006134 87.70896149]
[-94.37149811 98.48658752]
[-105.53161621 108.51815796]
[-117.35723877 117.75586700]
[-129.79200745 126.15570831]
[-142.77665710 133.67762756]
[-156.24932861 140.28581238]
[-170.14579773 145.94874573]
[-184.39984131 150.63945007]
[-198.94355774 154.33555603]
[-213.70761108 157.01948547]
[-228.62164307 158.67840576]
[-243.61460876 159.30444336]
[-258.61502075 158.89460754]
[-273.55142212 157.45083618]
[-288.35263062 154.98002625]
[-302.94812012 151.49394226]
[-317.26831055 147.00921631]
[-331.24496460 141.54719543]
[-344.81149292 135.13391113]
[-357.90322876 127.79994202]
[-370.45779419 119.58023071]
[-382.41534424 110.51394653]
[-393.71890259 100.64430237]
[-404.31463623 90.01831818]
[-414.15197754 78.68663788]
[-423.18411255 66.70326996]
[-431.36798096 54.12530899]
[-438.66458130 41.01270676]
[-445.03912354 27.42794418]
[-450.46127319 13.43576050]
[-454.90512085 -0.89716357]
[-458.34954834 -15.50252438]
[-460.77813721 -30.31072044]
[-462.17929077 -45.25118256]
[-462.54632568 -60.25271606]
[-461.87753296 -75.24382782]
[-460.17605591 -90.15307617]
[-457.45004272 -104.90940857]
[-453.71246338 -119.44251251]
[-448.98110962 -133.68312073]
[-443.27856445 -147.56338501]
[-436.63198853 -161.01715088]
[-429.07302856 -173.98028564]
[-420.63775635 -186.39103699]
[-411.36636353 -198.19026184]
[-401.30297852 -209.32171631]
[-390.49563599 -219.73237610]
[-378.99578857 -229.37260437]
[-366.85821533 -238.19645691]
[-354.14083862 -246.16191101]
[-340.90417480 -253.23100281]
[-327.21136475 -259.37002563]
[-313.12765503 -264.54971313]
[-298.72012329 -268.74542236]
[-284.05746460 -271.93716431]
[-269.20953369 -274.10968018]
[-254.24711609 -275.25262451]
[-239.24148560 -275.36056519]
[-224.26416016 -274.43301392]
[-209.38650513 -272.47436523]
[-194.67944336 -269.49392700]
[-180.21304321 -265.50595093]
[-166.05625916 -260.52938843]
[-152.27653503 -254.58802795]
[-138.93955994 -247.71011353]
[-126.10887146 -239.92846680]
[-113.84561920 -231.28013611]
[-102.20825958 -221.80636597]
[-91.25222778 -211.55229187]
[-81.02974701 -200.56677246]
[-71.58953857 -188.90216064]
[-62.97657394 -176.61405945]
[-55.23190689 -163.76101685]
[-48.39244461 -150.40428162]
[-42.49077988 -136.60749817]
[-37.55503845 -122.43643951]
[-33.60873795 -107.95861053]
[-30.67068672 -93.24302673]
[-28.75488472 -78.35980225]
[-27.87046432 -63.37986374]
[-28.02163887 -48.37460327]
[-29.20768738 -33.41552734]
[-31.42295837 -18.57392311]
[-34.65689468 -3.92051649]
[-38.89408493 10.47486115]
[-44.11433792 24.54360771]
[-30.44466782 30.71937561]
[-16.77499771 36.89514542]
[-3.10532784 43.07091141]
[10.56434250 49.24668121]
[24.23401260 55.42245102]
[37.90368271 61.59821701]
[42.60878754 60.77906036]
[47.87843704 62.90692902]
[51.88414764 68.16675568]
[65.36388397 74.74678802]
[78.84362030 81.32681274]
[92.32334900 87.90684509]
[106.28346252 87.12779999]
[114.25667572 98.61342621]
[127.73641205 105.19345093]
[141.21614075 111.77347565]
[148.70349121 98.76900482]
[157.06083679 86.30580139]
[166.24923706 74.44197845]
[176.22583008 63.23286057]
[186.94409180 52.73070145]
[198.35408020 42.98446655]
[210.40257263 34.03960419]
[223.03340149 25.93781281]
[236.18766785 18.71687126]
[249.80404663 12.41044712]
[263.81903076 7.04794312]
[278.16732788 2.65436244]
[292.78198242 -0.74981058]
[307.59487915 -3.14870334]
[322.53695679 -4.53113127]
[337.53854370 -4.89064884]
[352.52969360 -4.22557974]
[367.44049072 -2.53902459]
[382.20144653 0.16115257]
[396.74374390 3.86236262]
[410.99954224 8.54734802]
[424.90237427 14.19426632]
[438.38745117 20.77678680]
[451.39187622 28.26422119]
[463.85501099 36.62165451]
[475.71878052 45.81012726]
[486.92782593 55.78679276]
[497.42990112 66.50513458]
[507.17608643 77.91518402]
[516.12084961 89.96372986]
[524.22253418 102.59461212]
[531.44342041 115.74893188]
[537.74975586 129.36535645]
[543.11218262 143.38038635]
[547.50561523 157.72869873]
[550.90972900 172.34338379]
[553.30853271 187.15629578]
[554.69085693 202.09838867]
[555.05023193 217.09997559]
[554.38507080 232.09111023]
[552.69842529 247.00190735]
[549.99816895 261.76284790]
[546.29687500 276.30511475]
[541.61175537 290.56085205]
[535.96478271 304.46365356]
[529.38214111 317.94869995]
[521.89459229 330.95306396]
[513.53710938 343.41616821]
[504.34854126 355.27984619]
[494.37182617 366.48883057]
[483.65341187 376.99087524]
[472.24328613 386.73693848]
[460.19467163 395.68164062]
[447.56375122 403.78326416]
[434.40936279 411.00402832]
[420.79290771 417.31027222]
[406.77783203 422.67257690]
[392.42950439 427.06597900]
[377.81478882 430.46994019]
[363.00186157 432.86865234]
[348.05975342 434.25088501]
[333.05816650 434.61019897]
[318.06704712 433.94491577]
[303.15625000 432.25817871]
[288.39532471 429.55780029]
[273.85311890 425.85638428]
[259.59738159 421.17120361]
[245.69461060 415.52410889]
[232.20962524 408.94140625]
[219.20529175 401.45379639]
[206.74226379 393.09619141]
[194.87863159 383.90756226]
[183.66970825 373.93075562]
[173.16777039 363.21224976]
[163.42176819 351.80209351]
[154.47714233 339.75341797]
[146.37561035 327.12243652]
[139.15492249 313.96801758]
[132.84877014 300.35150146]
[127.48655701 286.33639526]
[123.09326172 271.98803711]
[119.68938446 257.37329102]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 128]
[9 127]
[10 126]
[12 124]
[13 123]
[14 122]
[15 121]
[16 118]
[17 117]
[18 116]
[19 115]
[20 114]
[21 113]
[22 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
