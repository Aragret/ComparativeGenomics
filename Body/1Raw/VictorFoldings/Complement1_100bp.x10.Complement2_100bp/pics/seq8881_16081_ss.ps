%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[119.29836273 674.29217529]
[104.39068604 676.09246826]
[89.37516785 676.21228027]
[74.44065857 674.65008545]
[59.77497101 671.42553711]
[45.56254196 666.57922363]
[31.98210526 660.17205811]
[19.20445061 652.28460693]
[7.39027309 643.01611328]
[-3.31185460 632.48309326]
[-12.76734066 620.81805420]
[-20.85727119 608.16760254]
[-27.47990990 594.69097900]
[-32.55196762 580.55749512]
[-36.00965881 565.94506836]
[-37.80949783 551.03729248]
[-37.92885208 536.02178955]
[-36.36621857 521.08734131]
[-33.14125061 506.42172241]
[-28.29450226 492.20944214]
[-21.88693237 478.62921143]
[-13.99911785 465.85177612]
[-4.73025894 454.03787231]
[5.80307961 443.33605957]
[17.46842957 433.88092041]
[30.11908722 425.79138184]
[43.59595871 419.16915894]
[57.72955322 414.09750366]
[72.34213257 410.64025879]
[87.24991608 408.84085083]
[102.26544189 408.72195435]
[103.82596588 393.80334473]
[105.38648987 378.88473511]
[106.94700623 363.96615601]
[108.50753021 349.04754639]
[110.06805420 334.12893677]
[111.62857819 319.21032715]
[113.18910217 304.29171753]
[112.96577454 289.29339600]
[110.96176147 274.42785645]
[108.95774841 259.56231689]
[106.95373535 244.69680786]
[104.94972229 229.83126831]
[100.94076538 223.62240601]
[103.02823639 214.72969055]
[93.83336639 203.01202393]
[99.87595367 188.39021301]
[98.09349060 173.49649048]
[96.31101990 158.60276794]
[94.52855682 143.70906067]
[84.43024445 154.80067444]
[69.45378876 155.64076233]
[58.17837906 145.74807739]
[57.06309128 130.78959656]
[66.74680328 119.33422089]
[81.68225098 117.94410706]
[93.31327820 127.41474152]
[92.86666870 112.42139435]
[85.68240356 100.42647552]
[92.13998413 88.02521515]
[91.69337463 73.03186035]
[91.24677277 58.03851318]
[90.80016327 43.04516220]
[90.35356140 28.05181313]
[89.46073914 13.07840824]
[88.12250519 -1.86177683]
[86.78427124 -16.80196190]
[85.11273193 -31.70853615]
[83.10871887 -46.57406235]
[81.10470581 -61.43959427]
[66.45185852 -65.38545227]
[54.45837021 -74.61579895]
[46.93286514 -87.69938660]
[44.99511719 -102.62697601]
[48.90952682 -117.11980438]
[58.04953384 -128.97752380]
[70.99768829 -136.41223145]
[68.99367523 -151.27775574]
[66.98966217 -166.14328003]
[64.98564148 -181.00880432]
[62.98163223 -195.87434387]
[51.39134979 -210.18331909]
[58.68498993 -226.14482117]
[56.45986938 -240.97886658]
[54.23475266 -255.81291199]
[49.86695862 -263.83538818]
[52.08864594 -270.88421631]
[50.08463287 -285.74972534]
[48.08061600 -300.61526489]
[33.10172272 -302.37124634]
[19.03040695 -307.79794312]
[6.75120735 -316.55419922]
[-2.96399522 -328.08959961]
[-9.50449562 -341.67904663]
[-12.45915127 -356.46826172]
[-11.64223099 -371.52758789]
[-7.10508776 -385.91040039]
[0.86707115 -398.71255493]
[11.77310848 -409.12933350]
[24.92746162 -416.50588989]
[39.50323486 -420.37857056]
[54.58418655 -420.50390625]
[69.22231293 -416.87402344]
[82.49745178 -409.71710205]
[93.57511139 -399.48303223]
[101.75894928 -386.81512451]
[106.53451538 -372.50973511]
[107.60161591 -357.46603394]
[104.89316559 -342.62976074]
[98.57942963 -328.93350220]
[89.05729675 -317.23822021]
[76.92532349 -308.27908325]
[62.94614792 -302.61929321]
[64.95015717 -287.75375366]
[66.95417023 -272.88821411]
[69.06879425 -258.03802490]
[71.29391479 -243.20397949]
[73.51903534 -228.36993408]
[83.05714417 -220.93011475]
[85.03233337 -208.58984375]
[77.84716034 -197.87835693]
[79.85117340 -183.01281738]
[81.85518646 -168.14729309]
[83.85919952 -153.28176880]
[85.86321259 -138.41624451]
[100.31789398 -134.67570496]
[112.27162170 -125.66161346]
[119.88408661 -112.72270966]
[121.96842957 -97.81489563]
[118.17619324 -83.20555878]
[109.05510712 -71.12876892]
[95.97023010 -63.44360733]
[97.97425079 -48.57807922]
[99.97826385 -33.71255112]
[102.54545593 -31.29555702]
[104.06950378 -27.51503563]
[103.92228699 -22.87481880]
[101.72445679 -18.14019585]
[103.06269073 -3.20001101]
[104.40092468 11.74017429]
[106.46308899 13.63902473]
[107.89733887 16.46913719]
[108.34521484 19.99543953]
[107.53987122 23.85755730]
[105.34690857 27.60520744]
[105.79351044 42.59855652]
[106.24011993 57.59190750]
[106.68672180 72.58525848]
[107.13333130 87.57860565]
[114.31759644 99.57352448]
[107.86001587 111.97478485]
[108.30662537 126.96813965]
[109.42227173 141.92658997]
[111.20474243 156.82031250]
[112.98720551 171.71401978]
[114.76966858 186.60774231]
[124.09204102 199.39070129]
[117.92195892 212.94721985]
[119.81524658 227.82725525]
[121.81925964 242.69279480]
[123.82327271 257.55831909]
[125.82728577 272.42385864]
[127.83129883 287.28936768]
[133.27044678 273.31024170]
[143.11058044 261.98895264]
[156.19569397 254.65550232]
[170.98857117 252.17140198]
[185.75135803 254.82850647]
[198.74974060 262.31463623]
[208.45666504 273.75036621]
[213.73178101 287.79220581]
[213.95538330 302.79052734]
[209.10118103 316.98336792]
[199.73947144 328.70336914]
[186.97003174 336.57363892]
[172.29301453 339.66964722]
[157.43264771 337.62762451]
[144.13473511 330.68746948]
[133.96150208 319.66455078]
[128.10771179 305.85223389]
[126.54718018 320.77084351]
[124.98666382 335.68945312]
[123.42613983 350.60806274]
[121.86561584 365.52667236]
[120.30509186 380.44528198]
[118.74456787 395.36386108]
[117.18404388 410.28247070]
[131.84992981 413.50613403]
[146.06265259 418.35159302]
[159.64346313 424.75796509]
[172.42158508 432.64462280]
[184.23632812 441.91241455]
[194.93908691 452.44479370]
[204.39526367 464.10931396]
[212.48594666 476.75924683]
[219.10940552 490.23550415]
[224.18229675 504.36865234]
[227.64086914 518.98089600]
[229.44158936 533.88854980]
[229.56184387 548.90405273]
[228.00010681 563.83862305]
[224.77601624 578.50439453]
[219.93011475 592.71697998]
[213.52336121 606.29760742]
[205.63630676 619.07550049]
[196.36816406 630.88995361]
[185.83546448 641.59240723]
[174.17066956 651.04821777]
[161.52050781 659.13854980]
[148.04402161 665.76159668]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 187]
[32 186]
[33 185]
[34 184]
[35 183]
[36 182]
[37 181]
[38 180]
[39 163]
[40 162]
[41 161]
[42 160]
[43 159]
[45 158]
[47 156]
[48 155]
[49 154]
[50 153]
[57 152]
[58 151]
[60 149]
[61 148]
[62 147]
[63 146]
[64 145]
[65 140]
[66 139]
[67 138]
[68 134]
[69 133]
[70 132]
[77 125]
[78 124]
[79 123]
[80 122]
[81 121]
[83 118]
[84 117]
[85 116]
[87 115]
[88 114]
[89 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
