%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[78.47999573 659.89929199]
[65.31863403 652.63470459]
[53.49312210 643.35278320]
[43.30976868 632.29406738]
[35.03234482 619.74499512]
[28.87525558 606.03051758]
[24.99798775 591.50592041]
[23.50097084 576.54748535]
[24.42297935 561.54260254]
[27.74013138 546.88000488]
[33.36650848 532.93939209]
[41.15636826 520.08197021]
[50.90793610 508.64065552]
[62.36862564 498.91189575]
[75.24157715 491.14767456]
[89.19335175 485.54907227]
[103.86255646 482.26113892]
[102.96974182 467.28771973]
[94.48861694 455.04354858]
[101.39080048 440.80731201]
[100.49798584 425.83392334]
[99.60516357 410.86050415]
[98.71234894 395.88711548]
[90.23122406 383.64291382]
[97.13340759 369.40667725]
[96.24059296 354.43328857]
[93.86027527 351.83203125]
[92.62163544 347.94863892]
[93.11356354 343.33221436]
[95.65744781 338.77416992]
[95.43412018 323.77584839]
[95.21079254 308.77749634]
[85.41226196 294.21881104]
[94.51438141 278.21154785]
[94.06777954 263.21820068]
[93.62117004 248.22483826]
[93.17456818 233.23149109]
[92.72795868 218.23814392]
[92.28135681 203.24479675]
[91.83474731 188.25143433]
[88.49349213 181.65919495]
[91.49478149 173.03190613]
[91.27145386 158.03356934]
[91.04812622 143.03523254]
[90.82479858 128.03689575]
[80.44045258 138.86119080]
[65.54193878 140.60311890]
[52.94066238 132.46629333]
[48.39775467 118.17077637]
[53.99016953 104.25226593]
[67.16113281 97.07412720]
[81.88906097 99.91810608]
[91.44116211 111.48571777]
[85.73317719 98.72208405]
[93.61865234 87.17604828]
[87.14339447 72.74061584]
[95.98531342 60.75438690]
[97.32354736 45.81420135]
[89.19033051 29.29353714]
[99.83804321 15.34387398]
[100.95368958 0.38542041]
[102.06933594 -14.57303333]
[103.18498993 -29.53148651]
[104.30063629 -44.48994064]
[101.77864838 -50.60149384]
[102.59860229 -56.22507858]
[105.67871857 -59.87500000]
[107.23924255 -74.79360199]
[108.68865967 -89.72341156]
[110.02689362 -104.66359711]
[111.36512756 -119.60378265]
[98.33502960 -127.47638702]
[90.04895782 -140.17395020]
[88.10555267 -155.14869690]
[92.83715820 -169.42361450]
[103.25444031 -180.18417358]
[117.25270844 -185.33332825]
[118.59094238 -200.27351379]
[112.11568451 -214.70895386]
[120.95760345 -226.69517517]
[122.29583740 -241.63536072]
[123.63407135 -256.57556152]
[124.97230530 -271.51574707]
[126.31053925 -286.45593262]
[127.64877319 -301.39611816]
[127.98374939 -316.39236450]
[127.31396484 -331.37741089]
[126.64418030 -346.36245728]
[125.97439575 -361.34747314]
[125.30461121 -376.33251953]
[124.63482666 -391.31756592]
[109.82933807 -394.12722778]
[96.07113647 -400.27612305]
[84.10218811 -409.43258667]
[74.56795502 -421.10284424]
[67.98261261 -434.65756226]
[64.70129395 -449.36569214]
[64.90096283 -464.43411255]
[68.57084656 -479.05014038]
[75.51303864 -492.42559814]
[85.35314941 -503.83914185]
[97.56051636 -512.67523193]
[111.47681427 -518.45739746]
[126.35154724 -520.87377930]
[141.38255310 -519.79412842]
[155.75921631 -515.27655029]
[168.70622253 -507.56475830]
[179.52536011 -497.07461548]
[187.63316345 -484.37185669]
[192.59239197 -470.14151001]
[194.13560486 -455.15100098]
[192.17956543 -440.20877075]
[186.82977295 -426.12060547]
[178.37472534 -413.64627075]
[167.27040100 -403.45849609]
[154.11564636 -396.10668945]
[139.61987305 -391.98733521]
[140.28965759 -377.00231934]
[140.95944214 -362.01727295]
[141.62922668 -347.03222656]
[142.29901123 -332.04718018]
[142.96879578 -317.06216431]
[151.75093079 -329.22250366]
[165.67404175 -334.80340576]
[180.42393494 -332.07559204]
[191.43016052 -321.88427734]
[195.28233337 -307.38735962]
[190.78681946 -293.07684326]
[179.33659363 -283.38705444]
[164.47964478 -281.32043457]
[150.81954956 -287.51733398]
[142.58895874 -300.05786133]
[141.25073242 -285.11767578]
[139.91249084 -270.17749023]
[138.57426453 -255.23731995]
[137.23602295 -240.29713440]
[135.89779663 -225.35694885]
[142.46876526 -211.99014282]
[133.53112793 -198.93528748]
[132.19290161 -183.99510193]
[145.05322266 -176.44013977]
[153.39230347 -163.99951172]
[155.51165771 -149.11094666]
[150.93788147 -134.71995544]
[140.52709961 -123.69712830]
[126.30531311 -118.26554871]
[124.96707916 -103.32536316]
[123.62884521 -88.38517761]
[126.16306305 -81.44258881]
[122.15784454 -73.23307800]
[120.59732056 -58.31447601]
[119.25908661 -43.37429047]
[118.14344025 -28.41583824]
[117.02779388 -13.45738411]
[115.91214752 1.50106907]
[114.79649353 16.45952225]
[122.44992065 25.82710648]
[121.64287567 38.29837036]
[112.26373291 47.15243530]
[110.92549896 62.09262085]
[117.49647522 75.45942688]
[108.55883789 88.51428223]
[114.26682281 101.27791595]
[106.38134766 112.82395172]
[105.82313538 127.81356049]
[106.04646301 142.81190491]
[106.26979065 157.81024170]
[106.49311829 172.80857849]
[106.82809448 187.80484009]
[107.27470398 202.79818726]
[107.72131348 217.79153442]
[108.16791534 232.78488159]
[108.61452484 247.77822876]
[109.06112671 262.77157593]
[109.50773621 277.76492310]
[118.34324646 287.16156006]
[118.40655518 299.65875244]
[110.20912933 308.55416870]
[110.43245697 323.55252075]
[110.65578461 338.55084229]
[111.21399689 353.54046631]
[112.10681152 368.51388550]
[120.65179443 381.82904053]
[113.68575287 394.99429321]
[114.57857513 409.96768188]
[115.47138977 424.94110107]
[116.36420441 439.91448975]
[124.90918732 453.22967529]
[117.94314575 466.39492798]
[118.83596039 481.36831665]
[133.79193115 482.88980103]
[148.31013489 486.79083252]
[162.01451111 492.97033691]
[174.55007935 501.26828003]
[185.59213257 511.46969604]
[194.85466003 523.31036377]
[202.09774780 536.48364258]
[207.13377380 550.64819336]
[209.83229065 565.43713379]
[210.12341309 580.46752930]
[207.99958801 595.34991455]
[203.51582336 609.69885254]
[196.78826904 623.14263916]
[187.99119568 635.33312988]
[177.35244751 645.95446777]
[165.14761353 654.73162842]
[151.69279480 661.43713379]
[137.33654785 665.89746094]
[122.45069885 667.99694824]
[107.42084503 667.68121338]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 190]
[18 189]
[20 187]
[21 186]
[22 185]
[23 184]
[25 182]
[26 181]
[30 180]
[31 179]
[32 178]
[34 175]
[35 174]
[36 173]
[37 172]
[38 171]
[39 170]
[40 169]
[42 168]
[43 167]
[44 166]
[45 165]
[53 164]
[55 162]
[57 160]
[58 159]
[60 156]
[61 155]
[62 154]
[63 153]
[64 152]
[67 151]
[68 150]
[69 148]
[70 147]
[71 146]
[77 140]
[78 139]
[80 137]
[81 136]
[82 135]
[83 134]
[84 133]
[85 132]
[86 122]
[87 121]
[88 120]
[89 119]
[90 118]
[91 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
