%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[178.48806763 575.26196289]
[167.56712341 564.97338867]
[157.24574280 554.08349609]
[147.55700684 542.62707520]
[138.53192139 530.64086914]
[130.19941711 518.16326904]
[122.58618927 505.23422241]
[115.71660614 491.89520264]
[109.61269379 478.18887329]
[104.29399109 464.15914917]
[99.77753448 449.85101318]
[96.07780457 435.31027222]
[93.20664978 420.58349609]
[91.17325592 405.71789551]
[89.98414612 390.76104736]
[89.64312744 375.76089478]
[90.15129089 360.76544189]
[91.50701141 345.82278442]
[93.70594025 330.98074341]
[96.74104309 316.28689575]
[100.60259247 301.78829956]
[105.27821350 287.53137207]
[110.75293732 273.56182861]
[117.00922394 259.92437744]
[124.02703094 246.66270447]
[131.78387451 233.81932068]
[140.25491333 221.43534851]
[149.41300964 209.55046082]
[159.22883606 198.20274353]
[169.67092896 187.42851257]
[159.50738525 176.39663696]
[149.34384155 165.36476135]
[139.18028259 154.33288574]
[129.01673889 143.30101013]
[116.94722748 142.49272156]
[108.38951874 133.38505554]
[108.32876587 120.48703766]
[98.33059692 109.30506134]
[93.29563904 107.83429718]
[89.44312286 103.64723206]
[88.20729065 97.63810730]
[78.54647827 86.16340637]
[68.88566589 74.68870544]
[59.22485733 63.21400452]
[49.56404877 51.73930359]
[39.90323639 40.26460266]
[25.09630013 34.69098663]
[22.81813049 19.97163963]
[13.15731907 8.49693966]
[3.49650884 -2.97776031]
[-6.16430140 -14.45246029]
[-18.55395508 -5.97454119]
[-31.72617722 1.22762072]
[-45.55005646 7.08244514]
[-59.88820267 11.53174305]
[-74.59810638 14.53129292]
[-89.53357697 16.05128479]
[-104.54616547 16.07661057]
[-119.48667908 14.60701847]
[-134.20661926 11.65711498]
[-148.55969238 7.25621843]
[-162.40324402 1.44806790]
[-175.59970093 -5.70961094]
[-188.01788330 -14.14568043]
[-199.53439331 -23.77629662]
[-210.03474426 -34.50574493]
[-219.41461182 -46.22738266]
[-227.58074951 -58.82471848]
[-234.45199585 -72.17255402]
[-239.96005249 -86.13821411]
[-244.05020142 -100.58291626]
[-246.68177795 -115.36308289]
[-247.82862854 -130.33183289]
[-247.47935486 -145.34037781]
[-245.63742065 -160.23957825]
[-242.32115173 -174.88133240]
[-237.56347656 -189.12011719]
[-231.41171265 -202.81443787]
[-223.92698669 -215.82818604]
[-215.18368530 -228.03199768]
[-205.26870728 -239.30461121]
[-194.28059387 -249.53398132]
[-182.32855225 -258.61843872]
[-169.53138733 -266.46771240]
[-156.01626587 -273.00375366]
[-141.91751099 -278.16165161]
[-127.37524414 -281.89010620]
[-112.53401184 -284.15206909]
[-97.54131317 -284.92504883]
[-82.54615021 -284.20138550]
[-67.69755554 -281.98825073]
[-53.14311218 -278.30767822]
[-39.02746201 -273.19619751]
[-25.49090767 -266.70465088]
[-12.66797638 -258.89755249]
[-0.68611586 -249.85244751]
[10.33559036 -239.65928650]
[20.28760147 -228.41935730]
[29.07100677 -216.24436951]
[36.59851074 -203.25532532]
[42.79529572 -189.58131409]
[47.59978104 -175.35824585]
[50.96421051 -160.72749329]
[52.85515213 -145.83444214]
[53.25380325 -130.82711792]
[52.15620804 -115.85467529]
[49.57327652 -101.06593323]
[45.53067398 -86.60785675]
[40.06858444 -72.62414551]
[33.24129105 -59.25377655]
[25.11664581 -46.62964249]
[15.77540302 -34.87720490]
[5.31039858 -24.11326981]
[14.97120857 -12.63857079]
[24.63201904 -1.16387057]
[34.29283142 10.31082916]
[48.40876007 15.06369877]
[51.37793732 30.60379410]
[61.03874588 42.07849503]
[70.69955444 53.55319595]
[80.36036682 65.02789307]
[90.02117920 76.50259399]
[99.68199158 87.97729492]
[109.51257324 99.30688477]
[119.51074219 110.48886108]
[137.13253784 115.83245087]
[140.04861450 133.13746643]
[150.21215820 144.16934204]
[160.37571716 155.20121765]
[170.53926086 166.23309326]
[180.70280457 177.26496887]
[192.29507446 167.73918152]
[204.40768433 158.88447571]
[217.00186157 150.72923279]
[230.03724670 143.29957581]
[243.47209167 136.61929321]
[257.26333618 130.70977783]
[271.36685181 125.58998108]
[285.73742676 121.27629089]
[300.32904053 117.78253174]
[315.09490967 115.11988831]
[329.98779297 113.29689026]
[344.95996094 112.31938171]
[359.96343994 112.19049072]
[374.95019531 112.91062927]
[389.87219238 114.47749329]
[404.68164062 116.88606262]
[419.33111572 120.12862396]
[433.77368164 124.19479370]
[447.96307373 129.07153320]
[461.85382080 134.74322510]
[475.40145874 141.19171143]
[488.56256104 148.39633179]
[501.29498291 156.33399963]
[513.55792236 164.97929382]
[525.31213379 174.30451965]
[536.51995850 184.27981567]
[547.14544678 194.87321472]
[557.15460205 206.05078125]
[566.51531982 217.77670288]
[575.19769287 230.01344299]
[583.17388916 242.72180176]
[590.41827393 255.86103821]
[596.90771484 269.38909912]
[602.62145996 283.26263428]
[607.54107666 297.43719482]
[611.65093994 311.86737061]
[614.93780518 326.50695801]
[617.39117432 341.30908203]
[619.00317383 356.22625732]
[619.76867676 371.21075439]
[619.68518066 386.21456909]
[618.75299072 401.18960571]
[616.97503662 416.08795166]
[614.35711670 430.86181641]
[610.90753174 445.46392822]
[606.63732910 459.84750366]
[601.56024170 473.96643066]
[595.69244385 487.77551270]
[589.05285645 501.23049927]
[581.66265869 514.28833008]
[573.54559326 526.90710449]
[564.72760010 539.04644775]
[555.23687744 550.66748047]
[545.10400391 561.73297119]
[534.36126709 572.20745850]
[523.04309082 582.05737305]
[511.18585205 591.25122070]
[498.82745361 599.75952148]
[486.00747681 607.55499268]
[472.76699829 614.61267090]
[459.14843750 620.91003418]
[445.19543457 626.42675781]
[430.95266724 631.14526367]
[416.46572876 635.05047607]
[401.78109741 638.12982178]
[386.94573975 640.37341309]
[372.00723267 641.77410889]
[357.01339722 642.32739258]
[342.01226807 642.03155518]
[327.05191040 640.88745117]
[312.18023682 638.89886475]
[297.44491577 636.07202148]
[282.89309692 632.41607666]
[268.57141113 627.94274902]
[254.52575684 622.66632080]
[240.80111694 616.60369873]
[227.44145203 609.77429199]
[214.48956299 602.20001221]
[201.98692322 593.90515137]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 131]
[31 130]
[32 129]
[33 128]
[34 127]
[37 125]
[38 124]
[41 123]
[42 122]
[43 121]
[44 120]
[45 119]
[46 118]
[48 116]
[49 115]
[50 114]
[51 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
