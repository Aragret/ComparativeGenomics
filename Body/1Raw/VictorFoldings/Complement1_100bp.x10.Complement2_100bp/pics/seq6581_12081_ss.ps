%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[95.62661743 594.50109863]
[81.19919586 598.78314209]
[66.21358490 600.16790771]
[51.24578857 598.60229492]
[36.87112808 594.14630127]
[23.64213562 586.97137451]
[12.06729031 577.35321045]
[2.59150171 565.66149902]
[-4.42100763 552.34570312]
[-8.70069408 537.91760254]
[-10.08305931 522.93176270]
[-8.51496792 507.96420288]
[-4.05669403 493.59027100]
[3.12039900 480.36242676]
[12.74044228 468.78915405]
[24.43366814 459.31524658]
[37.75061798 452.30490112]
[52.17942429 448.02752686]
[67.16548920 446.64761353]
[68.72600555 431.72900391]
[70.28652954 416.81039429]
[61.35199356 409.71530151]
[56.90590668 399.07818604]
[58.15955734 387.49707031]
[64.91650391 377.86148071]
[75.59285736 372.63156128]
[77.59687042 357.76605225]
[79.60088348 342.90051270]
[81.60490417 328.03500366]
[83.60891724 313.16946411]
[85.61293030 298.30392456]
[79.64536285 284.65704346]
[89.15702057 272.01431274]
[91.16103363 257.14877319]
[93.16504669 242.28324890]
[95.16905975 227.41772461]
[97.17307281 212.55218506]
[99.17708588 197.68666077]
[101.18109894 182.82113647]
[103.18511200 167.95561218]
[102.73851013 152.96224976]
[99.85323334 138.24237061]
[96.96796417 123.52247620]
[94.08268738 108.80258179]
[90.65162659 94.20025635]
[86.67953491 79.73573303]
[82.70743561 65.27120972]
[71.59197235 54.01256943]
[75.68280029 39.69075394]
[71.71070099 25.22623062]
[68.18795013 39.80670547]
[59.94856262 52.34115982]
[47.96050262 61.35705948]
[33.63211823 65.79522705]
[18.64668655 65.13426971]
[4.76468515 59.45183563]
[-6.38304329 49.41549301]
[-13.48687363 36.20430374]
[-15.71225739 21.37029839]
[-12.79775620 6.65616655]
[-5.08576393 -6.20949221]
[6.51772261 -15.71523285]
[20.64953613 -20.74433136]
[35.64948654 -20.70597267]
[49.75539780 -15.60466385]
[61.31011200 -6.03970146]
[68.95675659 6.86669731]
[60.81200790 -6.69698858]
[68.16693878 -19.64898682]
[67.72033691 -34.64233780]
[67.27372742 -49.63568497]
[66.82711792 -64.62903595]
[66.38051605 -79.62238312]
[55.15931702 -90.42620087]
[54.91998291 -105.63795471]
[65.28892517 -116.26907349]
[64.84231567 -131.26242065]
[64.39571381 -146.25576782]
[63.94910431 -161.24911499]
[63.50249863 -176.24247742]
[63.05589294 -191.23582458]
[48.11067581 -192.75090027]
[33.49108505 -196.20381165]
[19.44728661 -201.53549194]
[6.21958637 -208.65467834]
[-5.96567345 -217.43959045]
[-16.89998627 -227.73986816]
[-26.39625168 -239.37927246]
[-34.29197693 -252.15866089]
[-40.45205688 -265.85934448]
[-44.77108002 -280.24685669]
[-47.17514420 -295.07507324]
[-47.62311554 -310.09020996]
[-46.10732269 -325.03533936]
[-42.65370941 -339.65478516]
[-37.32136917 -353.69830322]
[-30.20154572 -366.92568970]
[-21.41606522 -379.11053467]
[-11.11526299 -390.04434204]
[0.52460229 -399.54006958]
[13.30435753 -407.43518066]
[27.00532532 -413.59460449]
[41.39306259 -417.91293335]
[56.22137451 -420.31628418]
[71.23653412 -420.76354980]
[86.18161011 -419.24703979]
[100.80086517 -415.79275513]
[114.84416199 -410.45971680]
[128.07118225 -403.33926392]
[140.25559998 -394.55322266]
[151.18893433 -384.25189209]
[160.68409729 -372.61157227]
[168.57859802 -359.83145142]
[174.73738098 -346.13018799]
[179.05503845 -331.74224854]
[181.45768738 -316.91381836]
[181.90422058 -301.89862061]
[180.38700867 -286.95364380]
[176.93200684 -272.33453369]
[171.59832764 -258.29150391]
[164.47724915 -245.06481934]
[155.69061279 -232.88081360]
[145.38876343 -221.94796753]
[133.74800110 -212.45336914]
[120.96748352 -204.55946350]
[107.26593018 -198.40133667]
[92.87778473 -194.08438110]
[78.04924011 -191.68243408]
[78.49584961 -176.68907166]
[78.94245911 -161.69572449]
[79.38906097 -146.70237732]
[79.83567047 -131.70903015]
[80.28227234 -116.71567535]
[91.26560974 -106.72058105]
[91.93211365 -91.52155304]
[81.37386322 -80.06899261]
[81.82047272 -65.07564545]
[82.26707458 -50.08229065]
[82.71368408 -35.08894348]
[83.16028595 -20.09559250]
[91.27309418 -7.60433102]
[83.95011139 6.42009163]
[86.17522430 21.25413513]
[90.14732361 35.71865845]
[100.97867584 45.94269943]
[97.17195892 61.29911423]
[101.14405823 75.76364136]
[105.11614990 90.22816467]
[114.69104767 78.68167114]
[129.69044495 78.81578064]
[139.05735779 90.53162384]
[135.88684082 105.19271851]
[122.51607513 111.99145508]
[108.80258179 105.91731262]
[111.68785095 120.63719940]
[114.57312775 135.35708618]
[117.45839691 150.07698059]
[121.47312927 135.62423706]
[129.04588318 122.67613220]
[139.67437744 112.09146118]
[152.65367126 104.57228851]
[167.12287903 100.61731720]
[182.12232971 100.48886871]
[196.65715027 104.19546509]
[209.76330566 111.49125671]
[220.57151794 121.89234924]
[228.36489868 134.70887756]
[232.62655640 149.09074402]
[233.07382202 164.08407593]
[229.67703247 178.69441223]
[222.66148376 191.95269775]
[212.49250793 202.97955322]
[199.84454346 211.04362488]
[185.55651855 215.61003113]
[170.57608032 216.37591553]
[155.89683533 213.29048157]
[142.49241638 206.55834961]
[131.25187683 196.62606812]
[122.92077637 184.15238953]
[118.05064392 169.95962524]
[116.04663086 184.82514954]
[114.04261780 199.69067383]
[112.03860474 214.55619812]
[110.03459167 229.42173767]
[108.03057098 244.28726196]
[106.02655792 259.15280151]
[104.02254486 274.01831055]
[109.84677124 288.72848511]
[100.47845459 300.30795288]
[98.47444153 315.17349243]
[96.47042847 330.03900146]
[94.46641541 344.90454102]
[92.46240234 359.77005005]
[90.45838928 374.63558960]
[102.51115417 389.25219727]
[100.09405518 407.72027588]
[85.20513916 418.37091064]
[83.64461517 433.28952026]
[82.08409119 448.20812988]
[96.46018982 452.65942383]
[109.69150543 459.83007812]
[121.26946259 469.44451904]
[130.74903870 481.13314819]
[137.76585388 494.44668579]
[142.05021667 508.87341309]
[143.43742371 523.85882568]
[141.87419128 538.82684326]
[137.42056274 553.20220947]
[130.24775696 566.43237305]
[120.63145447 578.00878906]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 199]
[20 198]
[21 197]
[26 194]
[27 193]
[28 192]
[29 191]
[30 190]
[31 189]
[33 187]
[34 186]
[35 185]
[36 184]
[37 183]
[38 182]
[39 181]
[40 180]
[41 157]
[42 156]
[43 155]
[44 154]
[45 148]
[46 147]
[47 146]
[49 144]
[50 143]
[67 142]
[69 140]
[70 139]
[71 138]
[72 137]
[73 136]
[76 133]
[77 132]
[78 131]
[79 130]
[80 129]
[81 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
