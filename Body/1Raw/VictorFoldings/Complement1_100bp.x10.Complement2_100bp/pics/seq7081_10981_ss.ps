%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[84.34370422 852.46508789]
[69.38314819 851.33496094]
[54.49826813 849.45452881]
[39.72666931 846.82861328]
[25.10566711 843.46386719]
[10.67219257 839.36871338]
[-3.53729343 834.55352783]
[-17.48689651 829.03045654]
[-31.14137840 822.81347656]
[-44.46624374 815.91833496]
[-57.42784119 808.36236572]
[-69.99341583 800.16467285]
[-82.13124084 791.34600830]
[-93.81063843 781.92864990]
[-105.00212097 771.93634033]
[-115.67740631 761.39434814]
[-125.80953217 750.32928467]
[-135.37289429 738.76910400]
[-144.34335327 726.74304199]
[-152.69824219 714.28143311]
[-160.41645813 701.41583252]
[-167.47848511 688.17864990]
[-173.86650085 674.60333252]
[-179.56437683 660.72418213]
[-184.55769348 646.57635498]
[-188.83386230 632.19543457]
[-192.38206482 617.61785889]
[-195.19334412 602.88043213]
[-197.26060486 588.02038574]
[-198.57861328 573.07519531]
[-199.14404297 558.08264160]
[-198.95547485 543.08062744]
[-198.01338196 528.10705566]
[-196.32012939 513.19976807]
[-193.88000488 498.39633179]
[-190.69918823 483.73422241]
[-186.78569031 469.25042725]
[-182.14939880 454.98156738]
[-176.80204773 440.96368408]
[-170.75711060 427.23217773]
[-164.02989197 413.82171631]
[-156.63737488 400.76623535]
[-148.59822083 388.09863281]
[-139.93273926 375.85098267]
[-130.66284180 364.05419922]
[-120.81192017 352.73806763]
[-110.40486908 341.93118286]
[-99.46797943 331.66082764]
[-88.02887726 321.95300293]
[-76.11645508 312.83215332]
[-63.76080704 304.32135010]
[-50.99314499 296.44213867]
[-37.84572220 289.21435547]
[-24.35175323 282.65628052]
[-10.54531956 276.78448486]
[3.53870082 271.61383057]
[17.86472893 267.15731812]
[32.39657593 263.42623901]
[47.09753799 260.43005371]
[61.93046951 258.17626953]
[76.85791016 256.67059326]
[91.84214783 255.91683960]
[91.84214783 240.91683960]
[91.84214783 225.91683960]
[91.84214783 210.91683960]
[91.84214783 195.91683960]
[91.84214783 180.91683960]
[91.84214783 165.91683960]
[83.51319122 157.14443970]
[83.39042664 144.64768982]
[92.08506012 135.12055969]
[92.30838776 120.12222290]
[92.53171539 105.12388611]
[90.26496887 102.00392151]
[89.38445282 97.89994812]
[90.29881287 93.45349121]
[93.11486053 89.46479034]
[86.21267700 75.22855377]
[94.69380188 62.98437881]
[95.58661652 48.01097107]
[96.47943115 33.03756714]
[97.37224579 18.06416130]
[98.26506805 3.09075475]
[99.15788269 -11.88265133]
[84.40742493 -14.72503471]
[70.15419006 -19.46847916]
[56.64206314 -26.03181648]
[44.10225296 -34.30273819]
[32.74933243 -44.13972473]
[22.77756882 -55.37444305]
[14.35758781 -67.81465912]
[7.63346863 -81.24749756]
[2.72026896 -95.44311523]
[-0.29793933 -110.15859985]
[-1.36951113 -125.14214325]
[-0.47611043 -140.13737488]
[2.36697555 -154.88769531]
[7.11109781 -169.14070129]
[13.67507839 -182.65251160]
[21.94659996 -195.19194031]
[31.78412247 -206.54438782]
[43.01931763 -216.51560974]
[55.45993423 -224.93499756]
[68.89309692 -231.65847778]
[83.08894348 -236.57101440]
[97.80457306 -239.58851624]
[112.78816986 -240.65937805]
[127.78335571 -239.76525879]
[142.53353882 -236.92147827]
[156.78631592 -232.17666626]
[170.29782104 -225.61204529]
[182.83685303 -217.33993530]
[194.18882751 -207.50186157]
[204.15953064 -196.26620483]
[212.57832336 -183.82518005]
[219.30116272 -170.39169312]
[224.21301270 -156.19561768]
[227.22981262 -141.47984314]
[228.29995728 -126.49619293]
[227.40513611 -111.50105286]
[224.56063843 -96.75100708]
[219.81517029 -82.49844360]
[213.24989319 -68.98725891]
[204.97718811 -56.44862747]
[195.13858032 -45.09711075]
[183.90243530 -35.12695312]
[171.46101379 -26.70874786]
[158.02722168 -19.98654747]
[143.83090210 -15.07537460]
[129.11499023 -12.05926704]
[114.13128662 -10.98983479]
[113.23847198 3.98357058]
[112.34565735 18.95697594]
[111.45283508 33.93038177]
[110.56002045 48.90378952]
[109.66720581 63.87719345]
[116.63324738 77.04243469]
[108.08826447 90.35760498]
[107.53005219 105.34721375]
[107.30672455 120.34555054]
[107.08339691 135.34388733]
[116.42284393 151.21386719]
[106.84214783 165.91683960]
[106.84214783 180.91683960]
[106.84214783 195.91683960]
[106.84214783 210.91683960]
[106.84214783 225.91683960]
[106.84214783 240.91683960]
[106.84214783 255.91683960]
[121.82638550 256.67059326]
[136.75382996 258.17626953]
[151.58676147 260.43005371]
[166.28771973 263.42623901]
[180.81956482 267.15731812]
[195.14559937 271.61383057]
[209.22961426 276.78448486]
[223.03604126 282.65628052]
[236.53001404 289.21435547]
[249.67744446 296.44213867]
[262.44509888 304.32135010]
[274.80075073 312.83215332]
[286.71316528 321.95300293]
[298.15228271 331.66082764]
[309.08917236 341.93118286]
[319.49621582 352.73806763]
[329.34713745 364.05419922]
[338.61703491 375.85098267]
[347.28250122 388.09863281]
[355.32165527 400.76623535]
[362.71420288 413.82171631]
[369.44140625 427.23217773]
[375.48632812 440.96368408]
[380.83370972 454.98156738]
[385.46997070 469.25042725]
[389.38348389 483.73422241]
[392.56430054 498.39633179]
[395.00442505 513.19976807]
[396.69766235 528.10705566]
[397.63977051 543.08062744]
[397.82833862 558.08264160]
[397.26290894 573.07519531]
[395.94488525 588.02038574]
[393.87762451 602.88043213]
[391.06634521 617.61785889]
[387.51815796 632.19543457]
[383.24197388 646.57635498]
[378.24865723 660.72418213]
[372.55081177 674.60333252]
[366.16278076 688.17864990]
[359.10073853 701.41583252]
[351.38253784 714.28143311]
[343.02764893 726.74304199]
[334.05718994 738.76910400]
[324.49383545 750.32928467]
[314.36169434 761.39434814]
[303.68640137 771.93634033]
[292.49493408 781.92864990]
[280.81552124 791.34600830]
[268.67770386 800.16467285]
[256.11212158 808.36236572]
[243.15054321 815.91833496]
[229.82566833 822.81347656]
[216.17118835 829.03045654]
[202.22158813 834.55352783]
[188.01210022 839.36871338]
[173.57862854 843.46386719]
[158.95762634 846.82861328]
[144.18601990 849.45452881]
[129.30114746 851.33496094]
[114.34059143 852.46508789]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 149]
[63 148]
[64 147]
[65 146]
[66 145]
[67 144]
[68 143]
[71 141]
[72 140]
[73 139]
[77 138]
[79 136]
[80 135]
[81 134]
[82 133]
[83 132]
[84 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
