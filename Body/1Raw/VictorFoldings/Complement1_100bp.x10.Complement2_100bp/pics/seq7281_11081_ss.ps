%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[86.69196320 738.16210938]
[71.87514496 735.77893066]
[57.28100586 732.28204346]
[42.99312973 727.69134521]
[29.09336090 722.03332520]
[15.66131687 715.34020996]
[2.77393579 707.65039062]
[-9.49496365 699.00799561]
[-21.07510567 689.46240234]
[-31.90015984 679.06842041]
[-41.90811920 667.88549805]
[-51.04166031 655.97766113]
[-59.24846649 643.41320801]
[-66.48152924 630.26403809]
[-72.69941711 616.60552979]
[-77.86650848 602.51586914]
[-81.95321655 588.07580566]
[-84.93612671 573.36798096]
[-86.79814911 558.47668457]
[-87.52863312 543.48724365]
[-87.12338257 528.48547363]
[-85.58471680 513.55731201]
[-82.92145538 498.78826904]
[-79.14884949 484.26293945]
[-74.28851318 470.06454468]
[-68.36827850 456.27441406]
[-61.42206573 442.97149658]
[-53.48965836 430.23202515]
[-44.61649323 418.12893677]
[-34.85339355 406.73159790]
[-24.25628471 396.10528564]
[-12.88586617 386.31085205]
[-0.80726743 377.40438843]
[11.91032600 369.43695068]
[25.19406891 362.45416260]
[38.96786880 356.49597168]
[53.15283585 351.59658813]
[67.66770935 347.78399658]
[82.42935944 345.08007812]
[97.35322571 343.50033569]
[96.90662384 328.50698853]
[88.79380798 316.01571655]
[96.11679840 301.99130249]
[95.67019653 286.99795532]
[95.22358704 272.00460815]
[94.77698517 257.01126099]
[86.19052887 248.49072266]
[85.69574738 236.00317383]
[94.10286713 226.22140503]
[86.17693329 213.61073303]
[93.70791626 199.69689941]
[93.48458862 184.69856262]
[93.26126099 169.70022583]
[93.03793335 154.70188904]
[92.81460571 139.70355225]
[92.59127808 124.70520782]
[92.36795044 109.70687103]
[85.65746307 123.12213898]
[75.33436584 134.00486755]
[62.29170609 141.41357422]
[47.65780640 144.70735168]
[32.69864655 143.60125732]
[18.70833778 138.19096375]
[6.89718628 128.94451904]
[-1.71302581 116.66183472]
[-6.37742949 102.40548706]
[-6.69250679 87.40879822]
[-2.63100076 72.96912384]
[5.45572805 60.33564377]
[16.86809540 50.60128021]
[30.61882019 44.60815048]
[45.51832581 42.87472153]
[60.27765274 45.55095673]
[73.61997986 52.40532684]
[84.39105225 62.84486389]
[91.65906525 75.96644592]
[94.79505157 90.63141632]
[98.76715088 76.16689301]
[102.73924255 61.70236588]
[106.71134186 47.23784256]
[110.68344116 32.77331924]
[114.65553284 18.30879402]
[101.11717987 24.76734924]
[86.93180084 19.89137459]
[80.22543335 6.47404861]
[84.83979034 -7.79857397]
[98.13154602 -14.75048733]
[112.48659515 -10.39931965]
[119.68159485 2.76143861]
[124.92831421 -11.29103279]
[130.17503357 -25.34350395]
[135.42175293 -39.39597321]
[140.66847229 -53.44844818]
[145.91519165 -67.50091553]
[149.77949524 -81.99461365]
[144.39582825 -96.87166595]
[154.10475159 -108.16706848]
[156.55047607 -122.96633911]
[158.99620056 -137.76560974]
[145.19174194 -143.83911133]
[133.33189392 -153.15548706]
[124.16219330 -165.12910461]
[118.25904083 -179.00727844]
[115.99353027 -193.91761780]
[117.50806427 -208.92285156]
[122.70743561 -223.07972717]
[131.26481628 -235.49835205]
[142.64227295 -245.39807129]
[156.12460327 -252.15657043]
[170.86431885 -255.34899902]
[185.93486023 -254.77470398]
[200.38887024 -250.46978760]
[213.31776428 -242.70481873]
[223.90881348 -231.96795654]
[231.49627686 -218.93409729]
[235.60317993 -204.42257690]
[235.97135925 -189.34561157]
[232.57768250 -174.65092468]
[225.63546753 -161.26225281]
[215.58113098 -150.02120972]
[203.04666138 -141.63442993]
[188.82002258 -136.62910461]
[173.79547119 -135.31988525]
[171.34974670 -120.52060699]
[168.90402222 -105.72133636]
[174.46261597 -91.90282440]
[164.57876587 -79.54888153]
[174.40986633 -90.87802887]
[187.96429443 -97.30277252]
[202.95791626 -97.74041748]
[216.86401367 -92.11723328]
[227.33918762 -81.38081360]
[232.61817932 -67.34043121]
[231.81138611 -52.36214447]
[225.05476379 -38.97005463]
[213.48692322 -29.42096519]
[199.05725098 -25.32406235]
[184.19740295 -27.36974907]
[171.41151428 -35.21329117]
[162.85424805 -47.53291321]
[159.96765137 -62.25419998]
[154.72094727 -48.20172882]
[149.47422791 -34.14925766]
[144.22750854 -20.09678650]
[138.98078918 -6.04431438]
[133.73406982 8.00815678]
[129.12005615 22.28088951]
[125.14796448 36.74541473]
[121.17586517 51.20993805]
[117.20377350 65.67446136]
[113.23167419 80.13898468]
[109.25957489 94.60350800]
[107.36628723 109.48354340]
[107.58961487 124.48188019]
[107.81294250 139.48022461]
[108.03627014 154.47856140]
[108.25959778 169.47689819]
[108.48292542 184.47523499]
[108.70625305 199.47357178]
[116.64815521 213.15701294]
[109.10120392 225.99807739]
[118.90901184 241.58294678]
[109.77033234 256.56466675]
[110.21693420 271.55801392]
[110.66354370 286.55136108]
[111.11014557 301.54470825]
[119.25489807 315.10839844]
[111.89997101 328.06039429]
[112.34657288 343.05374146]
[127.33801270 343.74240112]
[142.23442078 345.56289673]
[156.95050049 348.50476074]
[171.40193176 352.55117798]
[185.50595093 357.67895508]
[199.18176270 363.85870361]
[212.35104370 371.05505371]
[224.93833923 379.22680664]
[236.87158203 388.32708740]
[248.08239746 398.30380249]
[258.50656128 409.09982300]
[268.08438110 420.65332031]
[276.76098633 432.89804077]
[284.48669434 445.76394653]
[291.21722412 459.17724609]
[296.91406250 473.06118774]
[301.54452515 487.33621216]
[305.08215332 501.92053223]
[307.50662231 516.73065186]
[308.80407715 531.68170166]
[308.96707153 546.68804932]
[307.99468994 561.66375732]
[305.89251709 576.52307129]
[302.67254639 591.18078613]
[298.35324097 605.55297852]
[292.95935059 619.55743408]
[286.52175903 633.11376953]
[279.07736206 646.14440918]
[270.66876221 658.57476807]
[261.34417725 670.33355713]
[251.15696716 681.35345459]
[240.16552734 691.57135010]
[228.43278503 700.92871094]
[216.02595520 709.37194824]
[203.01609802 716.85266113]
[189.47775269 723.32806396]
[175.48844910 728.76098633]
[161.12832642 733.12036133]
[146.47962952 736.38122559]
[131.62626648 738.52484131]
[116.65332794 739.53900146]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 169]
[41 168]
[43 166]
[44 165]
[45 164]
[46 163]
[49 161]
[51 159]
[52 158]
[53 157]
[54 156]
[55 155]
[56 154]
[57 153]
[77 152]
[78 151]
[79 150]
[80 149]
[81 148]
[82 147]
[89 146]
[90 145]
[91 144]
[92 143]
[93 142]
[94 141]
[95 127]
[97 125]
[98 124]
[99 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
