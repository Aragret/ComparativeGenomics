%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[89.19199371 575.61755371]
[91.57552338 560.16265869]
[103.36961365 549.89459229]
[102.92300415 534.90124512]
[102.47640228 519.90789795]
[102.02979279 504.91455078]
[100.08431244 502.89633179]
[98.82105255 499.98587036]
[98.58386230 496.43914795]
[99.61765289 492.63183594]
[102.02979279 489.02136230]
[102.47640228 474.02798462]
[102.92300415 459.03463745]
[103.36961365 444.04129028]
[103.81621552 429.04794312]
[103.81621552 414.04794312]
[103.36961365 399.05459595]
[102.92300415 384.06124878]
[94.81019592 371.56997681]
[102.13318634 357.54556274]
[94.02037811 345.05429077]
[101.34336853 331.02987671]
[100.89675903 316.03652954]
[100.45014954 301.04318237]
[92.33734131 288.55191040]
[99.66033173 274.52749634]
[99.21372986 259.53414917]
[95.87246704 252.94189453]
[98.87376404 244.31460571]
[98.65043640 229.31626892]
[98.42710876 214.31793213]
[88.62857056 199.75924683]
[97.73069763 183.75196838]
[97.28408813 168.75862122]
[96.83748627 153.76527405]
[95.94467163 138.79185486]
[94.60643768 123.85167694]
[93.26820374 108.91149139]
[91.81877899 93.98168182]
[90.25825500 79.06307983]
[81.12724304 66.14273834]
[87.49848175 52.67958069]
[85.93795776 37.76097488]
[74.77883911 23.11325645]
[82.54447937 7.37598228]
[80.76201630 -7.51773500]
[78.97955322 -22.41145134]
[77.19708252 -37.30516815]
[75.41461945 -52.19888687]
[73.63215637 -67.09260559]
[71.84968567 -81.98632050]
[60.66791153 -71.98793030]
[45.85435104 -74.34558105]
[38.32901764 -87.32130432]
[43.63930511 -101.34987640]
[57.87066269 -106.08995819]
[70.53138733 -98.04873657]
[69.86160278 -113.03377533]
[69.19181824 -128.01881409]
[68.52203369 -143.00384521]
[59.16100693 -131.28330994]
[44.72964096 -127.19238281]
[30.61047935 -132.25688171]
[22.06961823 -144.58789062]
[22.29258919 -159.58624268]
[31.19622993 -171.65791321]
[45.45970154 -176.30046082]
[59.76308060 -171.78236389]
[68.77194977 -159.78762817]
[69.88759613 -174.74607849]
[71.00324249 -189.70452881]
[72.11889648 -204.66297913]
[73.23454285 -219.62142944]
[66.54508209 -233.95886230]
[75.20756531 -246.07540894]
[75.31922913 -261.07498169]
[66.77424622 -274.39016724]
[73.74028778 -287.55538940]
[72.73603058 -302.52175903]
[71.62037659 -317.48019409]
[55.72249603 -329.76583862]
[54.01171112 -349.47817993]
[67.14385223 -363.86779785]
[65.36138153 -378.76153564]
[63.57891846 -393.65524292]
[61.79645157 -408.54895020]
[60.01398468 -423.44268799]
[45.01852036 -424.79531860]
[30.63208389 -429.23651123]
[17.48359489 -436.57211304]
[6.14784908 -446.48141479]
[-2.87960529 -458.53125000]
[-9.20412636 -472.19485474]
[-12.54923344 -486.87490845]
[-12.76869202 -501.92968750]
[-9.85290909 -516.70098877]
[-3.92935038 -530.54315186]
[4.74303246 -542.85101318]
[15.78512001 -553.08654785]
[28.71419907 -560.80224609]
[42.96506500 -565.66088867]
[57.91473389 -567.45007324]
[72.90966797 -566.09155273]
[87.29435730 -561.64471436]
[100.43995667 -554.30389404]
[111.77180481 -544.39013672]
[120.79451752 -532.33673096]
[127.11366272 -518.67065430]
[130.45298767 -503.98928833]
[130.66653442 -488.93444824]
[127.74493408 -474.16427612]
[121.81593323 -460.32446289]
[113.13871002 -448.02001953]
[102.09259796 -437.78884888]
[89.16048431 -430.07818604]
[74.90770721 -425.22512817]
[76.69017029 -410.33142090]
[78.47263336 -395.43771362]
[80.25510406 -380.54397583]
[82.03756714 -365.65026855]
[91.51789093 -361.71398926]
[98.56394958 -354.13845825]
[101.85524750 -344.24502563]
[100.73430634 -333.79766846]
[95.33674622 -324.68869019]
[86.57883453 -318.59585571]
[87.69448090 -303.63739014]
[91.32676697 -297.20092773]
[88.71369171 -288.44821167]
[97.19481659 -276.20404053]
[90.29263306 -261.96780396]
[98.89274597 -274.25756836]
[112.73123932 -280.04516602]
[127.52009583 -277.53723145]
[138.67683411 -267.51092529]
[142.74441528 -253.07295227]
[138.46246338 -238.69711304]
[127.15777588 -228.83790588]
[112.33324432 -226.55030823]
[98.58239746 -232.54315186]
[90.16601562 -244.95976257]
[96.93527222 -231.69226074]
[88.19299316 -218.50578308]
[87.07734680 -203.54733276]
[85.96170044 -188.58888245]
[84.84604645 -173.63043213]
[83.73040009 -158.67198181]
[83.50707245 -143.67362976]
[84.17685699 -128.68859863]
[84.84664154 -113.70355988]
[85.51642609 -98.71852112]
[86.74340820 -83.76878357]
[88.52587128 -68.87506866]
[90.30833435 -53.98135376]
[92.09080505 -39.08763504]
[93.87326813 -24.19391823]
[95.65573120 -9.30020046]
[97.43820190 5.59351635]
[106.75057220 13.31402302]
[108.35746765 25.70763588]
[100.85655975 36.20045090]
[102.41708374 51.11905670]
[111.43647766 62.97231674]
[105.17686462 77.50255585]
[106.73738861 92.42115784]
[110.64142609 99.47318268]
[108.20838165 107.57325745]
[109.54661560 122.51344299]
[110.88484955 137.45362854]
[113.50761414 140.91413879]
[114.76618958 144.65318298]
[114.74052429 148.20771790]
[113.65274048 151.18821716]
[111.83083344 153.31866455]
[112.27744293 168.31201172]
[112.72404480 183.30535889]
[121.55956268 192.70198059]
[121.62287140 205.19917297]
[113.42544556 214.09460449]
[113.64877319 229.09294128]
[113.87210083 244.09127808]
[114.20707703 259.08755493]
[114.65367889 274.08090210]
[122.79843140 287.64459229]
[115.44350433 300.59658813]
[115.89010620 315.58993530]
[116.33671570 330.58328247]
[124.48146820 344.14697266]
[117.12653351 357.09896851]
[125.27128601 370.66265869]
[117.91635895 383.61465454]
[118.36296082 398.60800171]
[118.80957031 413.60134888]
[121.22171021 417.21182251]
[122.25550079 421.01916504]
[122.01831055 424.56585693]
[120.75505066 427.47631836]
[118.80957031 429.49456787]
[118.36296082 444.48791504]
[117.91635895 459.48126221]
[117.46974945 474.47460938]
[117.02314758 489.46795654]
[117.02314758 504.46795654]
[117.46974945 519.46130371]
[117.91635895 534.45465088]
[118.36296082 549.44799805]
[130.74731445 558.99591064]
[134.04650879 574.28149414]
[126.70275879 588.08740234]
[112.18357086 593.89489746]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 206]
[4 205]
[5 204]
[6 203]
[11 202]
[12 201]
[13 200]
[14 199]
[15 198]
[16 193]
[17 192]
[18 191]
[20 189]
[22 187]
[23 186]
[24 185]
[26 183]
[27 182]
[29 181]
[30 180]
[31 179]
[33 176]
[34 175]
[35 174]
[36 169]
[37 168]
[38 167]
[39 165]
[40 164]
[42 162]
[43 161]
[45 158]
[46 157]
[47 156]
[48 155]
[49 154]
[50 153]
[51 152]
[57 151]
[58 150]
[59 149]
[60 148]
[69 147]
[70 146]
[71 145]
[72 144]
[73 143]
[75 141]
[76 131]
[78 129]
[79 127]
[80 126]
[83 120]
[84 119]
[85 118]
[86 117]
[87 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
