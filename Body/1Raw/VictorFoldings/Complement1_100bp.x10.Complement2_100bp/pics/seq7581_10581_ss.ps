%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[135.92570496 604.67077637]
[120.86801147 606.94805908]
[106.18761444 602.89764404]
[94.42798615 593.22131348]
[87.62654877 579.59558105]
[86.96169281 564.38116455]
[92.54860687 550.21411133]
[103.41932678 539.54888916]
[117.69043732 534.23327637]
[118.58325195 519.25988770]
[119.47606659 504.28646851]
[120.36888123 489.31307983]
[113.40283966 476.14782715]
[121.94782257 462.83267212]
[122.84063721 447.85925293]
[123.73345947 432.88586426]
[124.62627411 417.91244507]
[125.51908875 402.93902588]
[124.96087646 387.94943237]
[122.95686340 373.08389282]
[120.95285034 358.21838379]
[118.94883728 343.35284424]
[114.93988800 337.14398193]
[117.02735138 328.25125122]
[115.24488831 313.35754395]
[113.46242523 298.46383667]
[111.67995453 283.57009888]
[107.76389313 277.30224609]
[109.98352814 268.44158936]
[106.16121674 262.11611938]
[108.51252747 253.28948975]
[107.17429352 238.34930420]
[105.83605957 223.40911865]
[104.49782562 208.46893311]
[88.93653870 200.11921692]
[81.43653870 183.95750427]
[85.17208862 166.37554932]
[98.83212280 154.45240784]
[97.04965973 139.55870056]
[95.26719666 124.66497803]
[93.48472595 109.77126312]
[87.20674896 123.39429474]
[75.98443604 133.34716797]
[61.70895004 137.95265198]
[46.78596115 136.43464661]
[33.73025131 129.04895020]
[24.74193954 117.04019165]
[21.33571625 102.43205261]
[24.08558655 87.68626404]
[32.52814865 75.28775787]
[45.24068832 67.32588196]
[60.08090973 65.14236450]
[74.54798126 69.10517120]
[86.20394897 78.54648590]
[93.08501434 91.87688446]
[94.20066833 76.91843414]
[95.31631470 61.95998001]
[93.86689758 47.03017044]
[89.89479828 32.56564713]
[85.92269897 18.10112381]
[81.95060730 3.63659978]
[77.97850800 -10.82792377]
[68.40361786 0.71856654]
[53.40421677 0.58446056]
[44.03730774 -11.13138390]
[47.20782852 -25.79248238]
[60.57858658 -32.59121704]
[74.29208374 -26.51707077]
[64.04478455 -38.57125854]
[69.18949127 -52.54914474]
[66.30421448 -67.26903534]
[56.05691528 -79.32321930]
[61.20162201 -93.30110931]
[50.95432281 -105.35529327]
[56.09902573 -119.33318329]
[53.21375656 -134.05307007]
[50.32848358 -148.77296448]
[47.44321060 -163.49285889]
[37.19591141 -175.54704285]
[42.34061432 -189.52493286]
[39.45534134 -204.24481201]
[36.46056747 -218.94282532]
[33.35645676 -233.61813354]
[18.30815697 -233.43150330]
[3.51265049 -236.18453979]
[-10.46135902 -241.77143860]
[-23.07674789 -249.97741699]
[-33.84861374 -260.48709106]
[-42.36291885 -272.89648438]
[-48.29239273 -286.72860718]
[-51.40911865 -301.45178223]
[-51.59330368 -316.50012207]
[-48.83786774 -331.29516602]
[-43.24872208 -345.26828003]
[-35.04069519 -357.88232422]
[-24.52928352 -368.65249634]
[-12.11851978 -377.16479492]
[1.71456122 -383.09204102]
[16.43825340 -386.20639038]
[31.48661423 -386.38812256]
[46.28122711 -383.63031006]
[60.25342941 -378.03887939]
[72.86615753 -369.82882690]
[83.63462830 -359.31567383]
[92.14491272 -346.90353394]
[98.06990814 -333.06948853]
[101.18186951 -318.34527588]
[101.36118317 -303.29690552]
[98.60095215 -288.50271606]
[93.00728607 -274.53143311]
[84.79517365 -261.92004395]
[74.28028107 -251.15327454]
[61.86676025 -242.64498901]
[48.03176117 -236.72222900]
[51.13587189 -222.04693604]
[55.59551239 -216.15342712]
[54.17523575 -207.13009644]
[57.06050873 -192.41020203]
[67.10143280 -181.40887451]
[62.16310120 -166.37812805]
[65.04837036 -151.65823364]
[67.93364716 -136.93833923]
[70.81891632 -122.21845245]
[80.85984039 -111.21713257]
[75.92151642 -96.18637848]
[85.96244049 -85.18505859]
[81.02410889 -70.15430450]
[83.90937805 -55.43441772]
[93.95030212 -44.43309402]
[89.01197052 -29.40234184]
[92.44303131 -14.80002022]
[96.41513062 -0.33549634]
[100.38722992 14.12902737]
[104.35932159 28.59355164]
[108.33142090 43.05807495]
[111.21919250 28.33867455]
[117.63065338 14.77795124]
[127.17372131 3.20514584]
[139.26484680 -5.67205811]
[153.16464233 -11.31081676]
[168.02313232 -13.36631775]
[182.93173218 -11.71286678]
[196.97874451 -6.45157242]
[209.30522156 2.09583473]
[219.15736389 13.40667725]
[225.93273926 26.78929329]
[229.21699524 41.42533112]
[228.80934143 56.41979218]
[224.73466492 70.85575104]
[217.24215698 83.85045624]
[206.78997803 94.60927582]
[194.01730347 102.47428894]
[179.70515442 106.96456146]
[164.72874451 107.80550385]
[150.00389099 104.94570160]
[136.43099976 98.56002045]
[124.84008789 89.03895569]
[115.93993378 76.96471405]
[110.27476501 63.07563019]
[109.15911865 78.03408051]
[108.04347229 92.99253845]
[108.37844849 107.98879242]
[110.16091156 122.88251495]
[111.94337463 137.77622986]
[113.72584534 152.66995239]
[125.34870148 157.27180481]
[133.86270142 166.32609558]
[137.69683838 178.07254028]
[136.18182373 190.26293945]
[129.66607666 200.59144592]
[119.43801117 207.13070679]
[120.77624512 222.07089233]
[122.11447906 237.01107788]
[123.45271301 251.95126343]
[124.90213013 266.88107300]
[126.57367706 281.78765869]
[128.35614014 296.68136597]
[130.13861084 311.57507324]
[131.92106628 326.46878052]
[133.81436157 341.34881592]
[135.81837463 356.21435547]
[137.82238770 371.07989502]
[139.82640076 385.94540405]
[145.90086365 372.23043823]
[156.97375488 362.11157227]
[171.17907715 357.29406738]
[186.12301636 358.58972168]
[199.28724670 365.78021240]
[208.45335388 377.65380859]
[212.07669067 392.20962524]
[209.54666138 406.99472046]
[201.28964233 419.51754761]
[188.69705200 427.66781616]
[173.89097595 430.07202148]
[159.36650085 426.32507324]
[147.57127380 417.05831909]
[140.49249268 403.83184814]
[139.59967041 418.80526733]
[138.70686340 433.77865601]
[137.81404114 448.75207520]
[136.92123413 463.72546387]
[143.82341003 477.96170044]
[135.34228516 490.20590210]
[134.44947815 505.17929077]
[133.55665588 520.15270996]
[132.66384888 535.12609863]
[146.20217896 542.09985352]
[155.72851562 553.98132324]
[159.59234619 568.71191406]
[157.12426758 583.73950195]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 206]
[10 205]
[11 204]
[12 203]
[14 201]
[15 200]
[16 199]
[17 198]
[18 197]
[19 183]
[20 182]
[21 181]
[22 180]
[24 179]
[25 178]
[26 177]
[27 176]
[29 175]
[31 174]
[32 173]
[33 172]
[34 171]
[38 165]
[39 164]
[40 163]
[41 162]
[55 161]
[56 160]
[57 159]
[58 135]
[59 134]
[60 133]
[61 132]
[62 131]
[68 130]
[70 128]
[71 127]
[73 125]
[75 123]
[76 122]
[77 121]
[78 120]
[80 118]
[81 117]
[82 115]
[83 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
