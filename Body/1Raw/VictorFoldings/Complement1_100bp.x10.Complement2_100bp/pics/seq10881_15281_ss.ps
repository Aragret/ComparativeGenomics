%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGGxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[96.05108643 450.81869507]
[88.34448242 463.75320435]
[78.11675262 474.80252075]
[65.81501770 483.48358154]
[51.97705460 489.41693115]
[37.20779419 492.34313965]
[22.15289307 492.13430786]
[7.47048283 488.79956055]
[-6.19758558 482.48471069]
[-18.25380135 473.46575928]
[-28.17111969 462.13699341]
[-35.51599503 448.99371338]
[-39.96734619 434.61041260]
[-41.33057404 419.61590576]
[-39.54608536 404.66567993]
[-34.69189453 390.41329956]
[-26.98019981 377.48178101]
[-16.74812889 366.43649292]
[-4.44297886 357.76028442]
[9.39731884 351.83239746]
[24.16772652 348.91198730]
[39.22254562 349.12673950]
[42.54480362 334.49926758]
[45.86706543 319.87182617]
[49.18932343 305.24435425]
[38.16731262 295.22534180]
[33.60980988 280.93948364]
[36.83620071 266.19308472]
[47.07781601 254.96783447]
[61.65811920 250.34593201]
[64.98037720 235.71847534]
[68.30263519 221.09100342]
[71.62490082 206.46354675]
[74.94715881 191.83609009]
[78.26941681 177.20863342]
[81.26419067 162.51062012]
[83.92998505 147.74940491]
[86.59577942 132.98818970]
[89.26158142 118.22697449]
[91.92737579 103.46575165]
[90.40800476 100.82359314]
[89.81642914 97.57019806]
[90.38088226 94.04814911]
[92.19986725 90.67953491]
[95.21632385 87.91657257]
[98.75599670 73.34020233]
[102.29566956 58.76382446]
[105.83534241 44.18745041]
[101.57309723 28.95118332]
[112.09523773 18.40918350]
[107.83299255 3.17291760]
[118.35514069 -7.36908150]
[103.97363281 -11.64333630]
[89.82706451 -16.64051819]
[75.95176697 -22.34779739]
[62.38334274 -28.75052643]
[49.15662766 -35.83226776]
[36.30557632 -43.57484436]
[23.86317253 -51.95837784]
[11.86135864 -60.96134949]
[0.33094338 -70.56065369]
[-10.69847488 -80.73163605]
[-21.19858551 -91.44819641]
[-31.14243126 -102.68283081]
[-40.50448990 -114.40669250]
[-49.26072693 -126.58968353]
[-57.38866425 -139.20054626]
[-64.86743927 -152.20687866]
[-71.67785645 -165.57533264]
[-77.80242920 -179.27156067]
[-83.22544098 -193.26040649]
[-87.93296051 -207.50598145]
[-91.91291809 -221.97169495]
[-95.15508270 -236.62042236]
[-97.65113831 -251.41458130]
[-99.39468384 -266.31616211]
[-100.38123322 -281.28692627]
[-100.60826111 -296.28842163]
[-100.07518005 -311.28219604]
[-98.78335571 -326.22970581]
[-96.73611450 -341.09262085]
[-93.93870544 -355.83273315]
[-90.39830780 -370.41226196]
[-86.12401581 -384.79376221]
[-81.12679291 -398.94030762]
[-75.41947937 -412.81561279]
[-69.01670837 -426.38400269]
[-61.93493271 -439.61071777]
[-54.19232559 -452.46173096]
[-45.80875778 -464.90411377]
[-36.80575180 -476.90591431]
[-27.20641899 -488.43630981]
[-17.03540230 -499.46569824]
[-6.31881046 -509.96575928]
[4.91584826 -519.90960693]
[16.63973427 -529.27160645]
[28.82275200 -538.02783203]
[41.43362808 -546.15570068]
[54.43999100 -553.63446045]
[67.80845642 -560.44482422]
[81.50469971 -566.56939697]
[95.49356842 -571.99237061]
[109.73915100 -576.69982910]
[124.20487976 -580.67974854]
[138.85362244 -583.92187500]
[153.64776611 -586.41790771]
[168.54936218 -588.16137695]
[183.52012634 -589.14788818]
[198.52163696 -589.37487793]
[213.51539612 -588.84173584]
[228.46290588 -587.54992676]
[243.32580566 -585.50262451]
[258.06594849 -582.70513916]
[272.64544678 -579.16473389]
[287.02694702 -574.89038086]
[301.17346191 -569.89312744]
[315.04873657 -564.18579102]
[328.61712646 -557.78295898]
[341.84381104 -550.70117188]
[354.69482422 -542.95849609]
[367.13717651 -534.57489014]
[379.13894653 -525.57189941]
[390.66931152 -515.97253418]
[401.69866943 -505.80148315]
[412.19873047 -495.08483887]
[422.14251709 -483.85015869]
[431.50448608 -472.12625122]
[440.26068115 -459.94320679]
[448.38854980 -447.33230591]
[455.86724854 -434.32592773]
[462.67758179 -420.95745850]
[468.80209351 -407.26119995]
[474.22500610 -393.27230835]
[478.93246460 -379.02670288]
[482.91232300 -364.56097412]
[486.15441895 -349.91223145]
[488.65039062 -335.11807251]
[490.39385986 -320.21646118]
[491.38034058 -305.24569702]
[491.60726929 -290.24417114]
[491.07409668 -275.25042725]
[489.78219604 -260.30291748]
[487.73489380 -245.44001770]
[484.93740845 -230.69990540]
[481.39691162 -216.12039185]
[477.12255859 -201.73892212]
[472.12524414 -187.59240723]
[466.41784668 -173.71714783]
[460.01501465 -160.14877319]
[452.93316650 -146.92211914]
[445.19049072 -134.07113647]
[436.80685425 -121.62879944]
[427.80377197 -109.62705994]
[418.20437622 -98.09671783]
[408.03329468 -87.06738281]
[397.31665039 -76.56736755]
[386.08193970 -66.62361145]
[374.35800171 -57.26164627]
[362.17492676 -48.50550842]
[349.56402588 -40.37767410]
[336.55761719 -32.89900589]
[323.18911743 -26.08869743]
[309.49282837 -19.96423721]
[295.50393677 -14.54134369]
[281.25833130 -9.83393764]
[266.79257202 -5.85410357]
[252.14381409 -2.61205626]
[237.34965515 -0.11611935]
[222.44805908 1.62730062]
[207.47729492 2.61372828]
[192.47576904 2.84063125]
[177.48200989 2.30742741]
[162.53451538 1.01548529]
[147.67163086 -1.03187871]
[132.93151855 -3.82940888]
[137.44694519 10.36425781]
[126.67161560 21.94885635]
[131.18704224 36.14252472]
[120.41172028 47.72712326]
[116.87204742 62.30349731]
[113.33237457 76.87987518]
[109.79270172 91.45624542]
[106.68859100 106.13155365]
[104.02279663 120.89276886]
[101.35700226 135.65399170]
[98.69120789 150.41520691]
[96.02540588 165.17642212]
[97.79206848 170.08824158]
[97.52471924 174.72308350]
[95.66946411 178.35256958]
[92.89687347 180.53088379]
[89.57461548 195.15835571]
[86.25235748 209.78581238]
[82.93009949 224.41326904]
[79.60784149 239.04072571]
[76.28557587 253.66818237]
[87.43889618 264.13482666]
[91.82677460 278.68280029]
[88.36666870 293.37612915]
[78.08530426 304.29168701]
[63.81678391 308.56661987]
[60.49452591 323.19406128]
[57.17226410 337.82153320]
[53.85000610 352.44900513]
[67.52055359 358.75848389]
[79.58032227 367.77267456]
[89.50209045 379.09753418]
[96.85214233 392.23794556]
[101.30915070 406.61947632]
[102.67827606 421.61346436]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 204]
[23 203]
[24 202]
[25 201]
[30 196]
[31 195]
[32 194]
[33 193]
[34 192]
[35 191]
[36 187]
[37 186]
[38 185]
[39 184]
[40 183]
[45 182]
[46 181]
[47 180]
[48 179]
[50 177]
[52 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
