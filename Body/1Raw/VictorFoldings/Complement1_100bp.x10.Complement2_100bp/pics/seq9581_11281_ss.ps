%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[129.28713989 869.12860107]
[115.11994934 864.18048096]
[101.34185028 858.23425293]
[88.02306366 851.32031250]
[75.23144531 843.47375488]
[63.03218842 834.73468018]
[51.48745346 825.14758301]
[40.65607452 814.76135254]
[30.59324265 803.62884521]
[21.35023880 791.80682373]
[12.97416210 779.35552979]
[5.50769567 766.33843994]
[-1.01111209 752.82183838]
[-6.54904270 738.87463379]
[-11.07787609 724.56787109]
[-14.57453442 709.97448730]
[-17.02119827 695.16882324]
[-18.40540123 680.22637939]
[-18.72008896 665.22326660]
[-17.96365738 650.23590088]
[-16.13996124 635.34063721]
[-13.25829411 620.61352539]
[-9.33334064 606.12945557]
[-4.38510180 591.96228027]
[1.56120718 578.18426514]
[8.47528553 564.86547852]
[16.32189941 552.07397461]
[25.06106567 539.87475586]
[34.64824677 528.33007812]
[45.03459549 517.49877930]
[56.16717911 507.43606567]
[67.98926544 498.19314575]
[80.44062042 489.81716919]
[93.45778656 482.35079956]
[106.97443390 475.83209229]
[120.92168427 470.29425049]
[135.22846985 465.76553345]
[149.82186890 462.26898193]
[140.11294556 450.97360229]
[145.49661255 436.09652710]
[143.05087280 421.29727173]
[138.85884094 415.21051025]
[140.68061829 406.25958252]
[138.45550537 391.42553711]
[136.23039246 376.59149170]
[134.00526428 361.75744629]
[131.78015137 346.92340088]
[129.55503845 332.08935547]
[127.32991791 317.25531006]
[125.10479736 302.42129517]
[109.62906647 300.00717163]
[95.63946533 292.92007446]
[84.51086426 281.84310913]
[77.34111786 267.85198975]
[74.84275055 252.31091309]
[77.27218628 236.73922729]
[84.40347290 222.66310120]
[95.54925537 211.46586609]
[109.62697601 204.25210571]
[107.18125153 189.45283508]
[104.73551941 174.65356445]
[102.28979492 159.85429382]
[99.84407043 145.05502319]
[97.39833832 130.25575256]
[94.95261383 115.45648193]
[85.91062164 108.11593628]
[84.09726715 96.61145782]
[90.44290924 86.84548950]
[88.21778870 72.01145172]
[78.51895905 59.51171875]
[84.28267670 45.77749634]
[74.58384705 33.27776718]
[80.34756470 19.54354668]
[78.12245178 4.70950317]
[75.89733124 -10.12454033]
[62.64099503 -25.31111336]
[70.49273682 -42.98134613]
[67.82694244 -57.74256516]
[65.16114807 -72.50378418]
[62.49534988 -87.26499939]
[59.82955551 -102.02621460]
[57.16376114 -116.78742981]
[54.49796295 -131.54864502]
[51.83216858 -146.30986023]
[36.78498077 -146.57136536]
[22.07800293 -149.76371765]
[8.27653217 -155.76417542]
[-4.08894157 -164.34213257]
[-14.54312134 -175.16786194]
[-22.68417740 -187.82524109]
[-28.19918633 -201.82777405]
[-30.87616920 -216.63723755]
[-30.61222839 -231.68437195]
[-27.41750908 -246.39083862]
[-21.41480827 -260.19134521]
[-12.83485222 -272.55541992]
[-2.00743389 -283.00784302]
[10.65127087 -291.14685059]
[24.65469551 -296.65960693]
[39.46458435 -299.33419800]
[54.51168823 -299.06781006]
[69.21762848 -295.87069702]
[83.01715851 -289.86578369]
[95.37985229 -281.28381348]
[105.83052826 -270.45471191]
[113.96748352 -257.79467773]
[119.47796631 -243.79037476]
[122.15015411 -228.98005676]
[121.88134003 -213.93299866]
[118.68186188 -199.22756958]
[112.67469025 -185.42901611]
[104.09073639 -173.06770325]
[93.25993347 -162.61877441]
[80.59859467 -154.48387146]
[66.59338379 -148.97566223]
[69.25917816 -134.21444702]
[71.92498016 -119.45322418]
[74.59077454 -104.69200897]
[77.25656891 -89.93079376]
[79.92236328 -75.16957855]
[82.58815765 -60.40835953]
[85.25395203 -45.64714050]
[94.13847351 -40.59953690]
[98.87755585 -31.29956627]
[97.69127655 -20.70839119]
[90.73137665 -12.34965801]
[92.95649719 2.48438597]
[95.18161011 17.31842995]
[104.72128296 28.75712967]
[99.11672211 43.55237961]
[108.65639496 54.99108124]
[103.05183411 69.78633118]
[105.27695465 84.62037659]
[116.06143951 97.46837616]
[109.75188446 113.01075745]
[112.19760895 127.81002808]
[114.64334106 142.60929871]
[117.08906555 157.40856934]
[119.53479004 172.20783997]
[121.98052216 187.00711060]
[124.42624664 201.80638123]
[138.69911194 203.69740295]
[151.84577942 209.52815247]
[162.80389404 218.81765747]
[170.69071960 230.80581665]
[174.87423706 244.51564026]
[175.02383423 258.83285522]
[171.13632202 272.59646606]
[163.53558350 284.69290161]
[152.84550476 294.14605713]
[139.93884277 300.19616699]
[142.16395569 315.03021240]
[144.38908386 329.86425781]
[146.61419678 344.69830322]
[148.83930969 359.53234863]
[151.06442261 374.36639404]
[153.28955078 389.20043945]
[155.51466370 404.03445435]
[157.85015869 418.85153198]
[160.29588318 433.65081787]
[170.17973328 446.00476074]
[164.62113953 459.82327271]
[179.56356812 458.43872070]
[194.56671143 458.12368774]
[209.55409241 458.87976074]
[224.44934082 460.70312500]
[239.17657471 463.58444214]
[253.66072083 467.50906372]
[267.82797241 472.45700073]
[281.60617065 478.40298462]
[294.92507935 485.31674194]
[307.71679688 493.16308594]
[319.91619873 501.90194702]
[331.46109009 511.48886108]
[342.29260254 521.87500000]
[352.35562134 533.00732422]
[361.59881592 544.82922363]
[369.97506714 557.28033447]
[377.44174194 570.29736328]
[383.96075439 583.81384277]
[389.49890137 597.76098633]
[394.02795410 612.06762695]
[397.52484131 626.66094971]
[399.97171021 641.46655273]
[401.35614014 656.40899658]
[401.67108154 671.41217041]
[400.91485596 686.39953613]
[399.09140015 701.29479980]
[396.20996094 716.02197266]
[392.28521729 730.50610352]
[387.33721924 744.67333984]
[381.39111328 758.45147705]
[374.47723389 771.77032471]
[366.63082886 784.56201172]
[357.89184570 796.76129150]
[348.30484009 808.30615234]
[337.91864014 819.13757324]
[326.78622437 829.20050049]
[314.96426392 838.44360352]
[302.51306152 846.81976318]
[289.49600220 854.28631592]
[275.97946167 860.80523682]
[262.03228760 866.34326172]
[247.72557068 870.87225342]
[233.13223267 874.36901855]
[218.32659912 876.81579590]
[203.38415527 878.20007324]
[188.38101196 878.51489258]
[173.39364624 877.75860596]
[158.49841309 875.93499756]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 162]
[40 160]
[41 159]
[43 158]
[44 157]
[45 156]
[46 155]
[47 154]
[48 153]
[49 152]
[50 151]
[59 141]
[60 140]
[61 139]
[62 138]
[63 137]
[64 136]
[65 135]
[68 133]
[69 132]
[71 130]
[73 128]
[74 127]
[75 126]
[77 122]
[78 121]
[79 120]
[80 119]
[81 118]
[82 117]
[83 116]
[84 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
