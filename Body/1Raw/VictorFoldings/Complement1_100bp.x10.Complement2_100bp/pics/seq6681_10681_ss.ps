%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[105.09158325 687.30047607]
[90.08474731 686.62969971]
[75.29386139 684.00585938]
[60.97201157 679.47381592]
[47.36426926 673.11108398]
[34.70347595 665.02655029]
[23.20627594 655.35858154]
[13.06940365 644.27264404]
[4.46631289 631.95831299]
[-2.45578718 618.62640381]
[-7.57844925 604.50506592]
[-10.81401825 589.83581543]
[-12.10712910 574.86975098]
[-11.43565559 559.86297607]
[-8.81108665 545.07220459]
[-4.27833319 530.75054932]
[2.08504438 517.14312744]
[10.17016029 504.48272705]
[19.83866692 492.98596191]
[30.92512321 482.84963989]
[43.23982620 474.24713135]
[56.57205582 467.32565308]
[70.69367981 462.20367432]
[85.36306000 458.96881104]
[100.32917786 457.67639160]
[100.99896240 442.69137573]
[101.66874695 427.70632935]
[102.33853149 412.72128296]
[103.00831604 397.73623657]
[103.56652832 382.74664307]
[104.01313019 367.75329590]
[96.65820312 354.80130005]
[104.80295563 341.23760986]
[105.02628326 326.23925781]
[105.02628326 311.23925781]
[105.02628326 296.23925781]
[105.02628326 281.23925781]
[105.02628326 266.23925781]
[104.91461182 251.23968506]
[104.69128418 236.24134827]
[104.46795654 221.24301147]
[103.57514191 206.26960754]
[102.01461792 191.35099792]
[100.45410156 176.43238831]
[98.89357758 161.51379395]
[87.19726562 152.36328125]
[85.40214539 137.25592041]
[95.07935333 125.04979706]
[93.51882935 110.13118744]
[91.73635864 95.23747253]
[89.73234558 80.37194061]
[87.72833252 65.50641632]
[85.72431946 50.64088821]
[69.34986877 46.57527542]
[55.82250595 36.55415344]
[47.20062256 22.13753510]
[44.78264618 5.55154610]
[48.91155624 -10.65531826]
[58.92657471 -24.00376892]
[73.26873016 -32.46299362]
[70.82299805 -47.26226425]
[68.37727356 -62.06153488]
[65.93154907 -76.86080933]
[63.37571335 -91.64146423]
[60.60010529 -106.38242340]
[57.71483231 -121.10231781]
[45.74599838 -127.27982330]
[39.60995102 -139.05094910]
[41.34811401 -152.01478577]
[50.10384750 -161.46817017]
[47.43804932 -176.22938538]
[44.77225494 -190.99061584]
[42.10646057 -205.75183105]
[39.44066238 -220.51304626]
[29.30899811 -228.49504089]
[27.39253998 -240.84457397]
[34.17971420 -250.85760498]
[31.73398590 -265.65686035]
[23.07021713 -253.41191101]
[8.59493828 -249.47918701]
[-5.07394791 -255.65669250]
[-11.68721008 -269.12014771]
[-8.22135448 -283.71426392]
[3.73907638 -292.76678467]
[18.72593498 -292.13900757]
[29.88830948 -282.11636353]
[28.99549484 -297.08975220]
[28.10267830 -312.06317139]
[19.55769539 -325.37835693]
[26.52373695 -338.54357910]
[25.63092041 -353.51699829]
[24.73810577 -368.49038696]
[23.84528923 -383.46380615]
[22.95247269 -398.43719482]
[8.30760288 -402.22970581]
[-4.44746447 -410.36376953]
[-14.06311703 -422.04257202]
[-19.59730911 -436.12191772]
[-20.50786018 -451.22247314]
[-16.70556259 -465.86477661]
[-8.56292629 -478.61441040]
[3.12231708 -488.22222900]
[17.20536423 -493.74697876]
[32.30650330 -494.64739990]
[46.94627762 -490.83529663]
[59.69043350 -482.68411255]
[69.29042816 -470.99246216]
[74.80574799 -456.90570068]
[75.69606018 -441.80395508]
[71.87414551 -427.16674805]
[63.71442795 -414.42807007]
[52.01631927 -404.83590698]
[37.92588043 -399.33001709]
[38.81869507 -384.35662842]
[39.71150970 -369.38320923]
[40.60432816 -354.40979004]
[41.49714279 -339.43640137]
[49.97826385 -327.19223022]
[43.07608414 -312.95599365]
[43.96889877 -297.98257446]
[44.86171722 -283.00918579]
[46.53325653 -268.10260010]
[48.97898483 -253.30332947]
[60.82876587 -240.35923767]
[54.20188141 -223.17883301]
[56.86767578 -208.41761780]
[59.53347015 -193.65640259]
[62.19926834 -178.89518738]
[64.86506653 -164.13397217]
[79.07830048 -155.14382935]
[82.45832062 -138.32449341]
[72.43472290 -123.98758698]
[75.31999207 -109.26769257]
[79.69139862 -103.30844879]
[78.13693237 -94.30725861]
[82.41912842 -88.28358459]
[80.73081970 -79.30653381]
[83.17654419 -64.50726318]
[85.62227631 -49.70799255]
[88.06800079 -34.90872192]
[101.14678192 -32.73180008]
[112.93861389 -26.62026787]
[122.28950500 -17.15641212]
[128.27947998 -5.25134659]
[130.31307983 7.94268560]
[128.17852783 21.14383698]
[122.06968689 33.06518936]
[112.56856537 42.54020309]
[100.58985138 48.63687134]
[102.59386444 63.50240326]
[104.59787750 78.36792755]
[106.60189056 93.23345947]
[109.94493866 97.27548981]
[110.78533173 102.90283966]
[108.43743134 108.57066345]
[109.99795532 123.48927307]
[121.99162292 133.42857361]
[123.36169434 148.58038330]
[113.81217957 159.95326233]
[115.37270355 174.87187195]
[116.93322754 189.79046631]
[118.49375153 204.70907593]
[128.75607300 193.76902771]
[143.74337769 193.15202332]
[154.87025452 203.21148682]
[155.76271057 218.18490601]
[145.90951538 229.49484253]
[130.95503235 230.66242981]
[119.46629333 221.01968384]
[119.68962860 236.01802063]
[119.91295624 251.01635742]
[123.16978455 259.55044556]
[120.02628326 266.23925781]
[120.02628326 281.23925781]
[120.02628326 296.23925781]
[120.02628326 311.23925781]
[120.02628326 326.23925781]
[122.99584198 332.14630127]
[122.59642029 337.81530762]
[119.79630280 341.68420410]
[127.11929321 355.70861816]
[119.00648499 368.19989014]
[118.55987549 383.19323730]
[121.43238831 391.86425781]
[117.99335480 398.40603638]
[117.32357025 413.39108276]
[116.65378571 428.37609863]
[115.98400116 443.36114502]
[115.31421661 458.34619141]
[130.10534668 460.96865845]
[144.42762756 465.49935913]
[158.03598022 471.86077881]
[170.69754028 479.94409180]
[182.19566345 489.61096191]
[192.33358765 500.69598389]
[200.93785095 513.00946045]
[207.86122131 526.34069824]
[212.98522949 540.46154785]
[216.22219849 555.13049316]
[217.51672363 570.09643555]
[216.84667969 585.10327148]
[214.22352600 599.89428711]
[209.69213867 614.21636963]
[203.33004761 627.82440186]
[195.24613953 640.48559570]
[185.57873535 651.98327637]
[174.49324036 662.12066650]
[162.17935181 670.72430420]
[148.84777832 677.64703369]
[134.72665405 682.77038574]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 189]
[26 188]
[27 187]
[28 186]
[29 185]
[30 183]
[31 182]
[33 180]
[34 177]
[35 176]
[36 175]
[37 174]
[38 173]
[39 171]
[40 170]
[41 169]
[42 162]
[43 161]
[44 160]
[45 159]
[48 156]
[49 155]
[50 152]
[51 151]
[52 150]
[53 149]
[60 140]
[61 139]
[62 138]
[63 137]
[64 135]
[65 133]
[66 132]
[70 129]
[71 128]
[72 127]
[73 126]
[74 125]
[77 123]
[78 122]
[86 121]
[87 120]
[88 119]
[90 117]
[91 116]
[92 115]
[93 114]
[94 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
