%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[71.27384186 457.48822021]
[65.44751740 471.39880371]
[56.34415436 483.42294312]
[44.53599930 492.80474854]
[30.76532364 498.95449829]
[15.89776230 501.48559570]
[0.86790287 500.23892212]
[-13.37946415 495.29287720]
[-25.94873810 486.95837402]
[-36.04980469 475.75930786]
[-43.04770279 462.39965820]
[-46.50253296 447.71920776]
[-46.19712830 432.64083862]
[-42.15068817 418.11233521]
[-34.61756516 405.04702759]
[-24.07130814 394.26614380]
[-11.17486000 386.44741821]
[3.26109934 382.08233643]
[18.32911110 381.44531250]
[21.43322182 366.76998901]
[24.53733253 352.09469604]
[27.64144135 337.41940308]
[30.74555206 322.74407959]
[33.84966278 308.06878662]
[20.04560089 313.93801880]
[6.77820921 306.93969727]
[3.82771444 292.23275757]
[13.36911106 280.65856934]
[28.36883736 280.74920654]
[37.76927185 292.43627930]
[41.95627975 278.03247070]
[46.14329147 263.62869263]
[50.33030319 249.22491455]
[54.51731491 234.82113647]
[47.14100266 221.93215942]
[51.18203735 207.26502991]
[64.75119019 199.61546326]
[68.83085632 185.18092346]
[72.80295563 170.71640015]
[65.23555756 157.93867493]
[69.05777740 143.21299744]
[82.51153564 135.36225891]
[78.42070770 121.04044342]
[89.53617096 109.78180695]
[86.18740082 96.20692444]
[95.99930573 86.24610138]
[99.86360931 71.75240326]
[103.61991119 57.23034668]
[107.37621307 42.70828629]
[111.13250732 28.18622780]
[103.00642395 17.44465828]
[102.55711365 4.17783689]
[109.72468567 -6.76327848]
[121.70493317 -11.50701714]
[125.67703247 -25.97154045]
[129.64912415 -40.43606567]
[133.62123108 -54.90058899]
[124.59572601 -63.54976654]
[120.12992096 -75.14825439]
[121.01400757 -87.47294617]
[127.01902008 -98.18932343]
[136.95182800 -105.29371643]
[148.89172363 -107.48780060]
[153.29272461 -121.82765198]
[149.94491577 -137.29060364]
[161.07586670 -147.18762207]
[165.47686768 -161.52746582]
[162.12905884 -176.99041748]
[173.26000977 -186.88743591]
[177.23211670 -201.35195923]
[180.77178955 -215.92832947]
[184.31146240 -230.50469971]
[187.85113525 -245.08108521]
[191.39080811 -259.65744019]
[194.93048096 -274.23382568]
[198.47015381 -288.81021118]
[184.22753906 -293.54388428]
[170.42449951 -299.43756104]
[157.15528870 -306.45095825]
[144.51057434 -314.53619385]
[132.57672119 -323.63796997]
[121.43526459 -333.69418335]
[111.16229248 -344.63610840]
[101.82799530 -356.38900757]
[93.49613953 -368.87255859]
[86.22362518 -382.00155640]
[80.06015015 -395.68624878]
[75.04779816 -409.83319092]
[71.22083282 -424.34573364]
[68.60537720 -439.12472534]
[67.21929932 -454.06924438]
[67.07208252 -469.07717896]
[68.16471863 -484.04598999]
[70.48974609 -498.87347412]
[74.03128815 -513.45831299]
[78.76514435 -527.70080566]
[84.65898132 -541.50378418]
[91.67253876 -554.77294922]
[99.75790405 -567.41754150]
[108.85984039 -579.35131836]
[118.91618347 -590.49261475]
[129.85823059 -600.76550293]
[141.61123657 -610.09960938]
[154.09490967 -618.43133545]
[167.22396851 -625.70367432]
[180.90875244 -631.86700439]
[195.05574036 -636.87921143]
[209.56832886 -640.70599365]
[224.34736633 -643.32128906]
[239.29188538 -644.70715332]
[254.29981995 -644.85418701]
[269.26864624 -643.76141357]
[284.09606934 -641.43615723]
[298.68084717 -637.89447021]
[312.92333984 -633.16046143]
[326.72625732 -627.26641846]
[339.99530029 -620.25274658]
[352.63980103 -612.16723633]
[364.57345581 -603.06512451]
[375.71466064 -593.00866699]
[385.98736572 -582.06646729]
[395.32138062 -570.31335449]
[403.65295410 -557.82958984]
[410.92514038 -544.70043945]
[417.08831787 -531.01562500]
[422.10031128 -516.86853027]
[425.92694092 -502.35589600]
[428.54205322 -487.57684326]
[429.92776489 -472.63229370]
[430.07461548 -457.62435913]
[428.98162842 -442.65557861]
[426.65625000 -427.82815552]
[423.11434937 -413.24343872]
[418.38015747 -399.00097656]
[412.48599243 -385.19815063]
[405.47213745 -371.92919922]
[397.38644409 -359.28475952]
[388.28424072 -347.35125732]
[378.22763062 -336.21014404]
[367.28533936 -325.93756104]
[355.53210449 -316.60369873]
[343.04824829 -308.27227783]
[329.91900635 -301.00024414]
[316.23406982 -294.83724976]
[302.08694458 -289.82540894]
[287.57427979 -285.99896240]
[272.79519653 -283.38403320]
[257.85061646 -281.99847412]
[242.84269714 -281.85180664]
[227.87390137 -282.94497681]
[213.04652405 -285.27053833]
[209.50685120 -270.69415283]
[205.96717834 -256.11776733]
[202.42750549 -241.54141235]
[198.88783264 -226.96502686]
[195.34815979 -212.38865662]
[191.80848694 -197.81228638]
[193.15008545 -195.35092163]
[193.59753418 -192.20983887]
[192.88706970 -188.72694397]
[190.88197327 -185.32926941]
[187.59986877 -182.48643494]
[191.26246643 -168.04916382]
[179.81671143 -157.12646484]
[175.41571045 -142.78662109]
[179.07832336 -128.34934998]
[167.63256836 -117.42665100]
[163.23156738 -103.08680725]
[174.48918152 -89.48026276]
[175.33282471 -71.68309784]
[165.23617554 -56.81241608]
[148.08575439 -50.92849350]
[144.11364746 -36.46397018]
[140.14155579 -21.99944496]
[136.16946411 -7.53492117]
[145.10479736 6.71283388]
[140.88781738 23.34208298]
[125.65457153 31.94252777]
[121.89826965 46.46458817]
[118.14196777 60.98664474]
[114.38566589 75.50870514]
[115.75399780 82.77159119]
[110.46382904 90.21819305]
[113.81259918 103.79307556]
[104.00069427 113.75389862]
[107.80741119 129.11032104]
[96.97605896 139.33436584]
[104.53356934 152.95500183]
[100.29924774 167.56748962]
[87.26747894 174.68849182]
[83.29537964 189.15301514]
[84.04060364 198.25698853]
[79.15497589 203.80247498]
[86.50885773 217.53413391]
[82.05744171 232.08197021]
[68.92109680 239.00814819]
[64.73408508 253.41192627]
[60.54707336 267.81570435]
[56.36006546 282.21948242]
[52.17305374 296.62326050]
[48.52496338 311.17288208]
[45.42085648 325.84820557]
[42.31674576 340.52349854]
[39.21263504 355.19879150]
[36.10852432 369.87411499]
[33.00441360 384.54940796]
[46.52391434 391.23324585]
[57.95593262 401.06991577]
[66.58184052 413.44104004]
[71.85940552 427.56893921]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 206]
[20 205]
[21 204]
[22 203]
[23 202]
[24 201]
[30 200]
[31 199]
[32 198]
[33 197]
[34 196]
[37 193]
[38 191]
[39 190]
[42 187]
[44 185]
[46 183]
[47 181]
[48 180]
[49 179]
[50 178]
[54 175]
[55 174]
[56 173]
[57 172]
[63 168]
[64 167]
[66 165]
[67 164]
[69 162]
[70 157]
[71 156]
[72 155]
[73 154]
[74 153]
[75 152]
[76 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
