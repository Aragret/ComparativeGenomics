%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxUUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUG\
) } def
/len { sequence length } bind def

/coor [
[148.64924622 777.54010010]
[147.08549500 762.49316406]
[150.25001526 747.69989014]
[157.83277893 734.60955811]
[169.09091187 724.50457764]
[182.92144775 718.37506104]
[181.36093140 703.45642090]
[179.80039978 688.53784180]
[178.23988342 673.61926270]
[176.67935181 658.70062256]
[175.11883545 643.78204346]
[173.55830383 628.86340332]
[171.99778748 613.94482422]
[169.77267456 599.11077881]
[166.88739014 584.39086914]
[156.84646606 573.38952637]
[161.78480530 558.35882568]
[158.89953613 543.63891602]
[156.01425171 528.91900635]
[145.39123535 524.75756836]
[138.01989746 515.89312744]
[135.82046509 504.45385742]
[139.45295715 493.25982666]
[148.12500000 485.12765503]
[145.67926025 470.32836914]
[135.97033691 459.03298950]
[141.35400391 444.15591431]
[138.90827942 429.35665894]
[136.46255493 414.55737305]
[121.53583527 413.42535400]
[107.30527496 408.75082397]
[94.59942627 400.80142212]
[84.15916443 390.03549194]
[76.59449005 377.07586670]
[72.34886932 362.67370605]
[71.67326355 347.66488647]
[74.61127472 332.92169189]
[80.99639130 319.30200195]
[90.46137238 307.59927368]
[102.45941925 298.49658203]
[116.29572296 292.52645874]
[113.84999847 277.72720337]
[111.40426636 262.92791748]
[108.95854187 248.12866211]
[106.51281738 233.32937622]
[103.87479401 230.98989868]
[102.23886871 227.25642395]
[102.24785614 222.61389160]
[104.30374146 217.81591797]
[102.52127838 202.92221069]
[100.73881531 188.02848816]
[98.95634460 173.13476562]
[97.17388153 158.24105835]
[94.64295959 155.78610229]
[93.17536926 151.98332214]
[93.39165497 147.34580994]
[95.65972900 142.64442444]
[94.54407501 127.68597412]
[93.42842865 112.72752380]
[85.71572876 101.06536865]
[91.61312103 88.38812256]
[90.49746704 73.42967224]
[89.38182068 58.47121811]
[80.63954163 45.28474426]
[87.40879822 32.01725006]
[86.29315186 17.05879593]
[85.17750549 2.10034299]
[84.06185150 -12.85811043]
[82.94620514 -27.81656456]
[74.20392609 -41.00304031]
[80.97318268 -54.27053452]
[79.85753632 -69.22898865]
[70.61125183 -78.22171021]
[69.98997498 -90.70360565]
[77.78202820 -99.95620728]
[76.88921356 -114.92961121]
[75.99639130 -129.90301514]
[72.68050385 -135.62284851]
[72.74179077 -141.30555725]
[75.30666351 -145.33425903]
[74.86006165 -160.32762146]
[74.41345215 -175.32096863]
[62.51191330 -180.33424377]
[53.42344666 -189.44329834]
[48.47319794 -201.26995850]
[48.36396027 -214.04365540]
[53.07663727 -225.86645508]
[61.87829208 -234.99507141]
[73.43594360 -240.09791565]
[73.43594360 -255.09791565]
[64.88411713 -264.75341797]
[65.19292450 -277.24697876]
[73.65156555 -285.89437866]
[66.12058258 -299.80822754]
[74.04651642 -312.41888428]
[74.26984406 -327.41723633]
[74.49317169 -342.41555786]
[74.71649933 -357.41390991]
[60.63588333 -363.07965088]
[49.55547333 -373.45214844]
[42.97380829 -387.12863159]
[41.78099823 -402.25946045]
[46.13836670 -416.79830933]
[55.45661163 -428.77890015]
[68.47551727 -436.58096313]
[83.43438721 -439.14938354]
[98.31015778 -436.13671875]
[111.09099579 -427.95050049]
[120.04840088 -415.69775391]
[123.97096252 -401.03564453]
[122.32817841 -385.94705200]
[115.34223175 -372.47259521]
[103.95790863 -362.43457031]
[89.71483612 -357.19058228]
[89.49150848 -342.19223022]
[89.26818085 -327.19390869]
[89.04485321 -312.19555664]
[96.59181213 -299.35452271]
[88.64990234 -285.67105103]
[98.01062775 -270.82708740]
[88.43594360 -255.09791565]
[88.43594360 -240.09791565]
[103.64934540 -232.03622437]
[112.73088074 -217.30398560]
[113.10188293 -199.91242981]
[104.56995392 -184.65081787]
[89.40679932 -175.76757812]
[89.85340881 -160.77421570]
[90.30001831 -145.78086853]
[90.96980286 -130.79583740]
[91.86261749 -115.82242584]
[92.75543213 -100.84902191]
[103.19427490 -86.74237823]
[94.81598663 -70.34463501]
[95.93164062 -55.38618088]
[104.59411621 -43.26963425]
[97.90466309 -28.93221283]
[99.02030945 -13.97375870]
[100.13595581 0.98469442]
[101.25160217 15.94314766]
[102.36725616 30.90160179]
[111.02973175 43.01814651]
[104.34027100 57.35557175]
[105.45592499 72.31402588]
[106.57157135 87.27247620]
[114.28427124 98.93463135]
[108.38687897 111.61187744]
[109.50253296 126.57032776]
[110.61817932 141.52877808]
[112.06759644 156.45858765]
[113.85005951 171.35231018]
[115.63253021 186.24601746]
[117.41499329 201.13973999]
[119.19746399 216.03346252]
[121.31208801 230.88365173]
[123.75781250 245.68292236]
[126.20353699 260.48220825]
[128.64926147 275.28146362]
[131.09500122 290.08074951]
[146.11640930 291.28182983]
[160.40516663 296.04037476]
[173.13204956 304.07565308]
[183.55958557 314.91690063]
[191.08474731 327.93093872]
[195.27389526 342.35910034]
[195.88768005 357.36148071]
[192.89474487 372.06585693]
[186.47334290 385.61831665]
[177.00065613 397.23297119]
[165.03068542 406.23739624]
[151.26182556 412.11166382]
[153.70755005 426.91091919]
[156.15327454 441.71020508]
[166.03713989 454.06414795]
[160.47853088 467.88265991]
[162.92427063 482.68191528]
[178.73509216 493.11895752]
[181.84291077 511.48345947]
[170.73414612 526.03375244]
[173.61941528 540.75366211]
[176.50469971 555.47351074]
[186.75199890 567.52770996]
[181.60728455 581.50561523]
[184.49255371 596.22552490]
[193.73794556 584.41351318]
[208.61044312 582.46185303]
[220.59039307 591.48852539]
[222.81515503 606.32263184]
[214.01028442 618.46649170]
[199.21958923 620.96362305]
[186.91639709 612.38427734]
[188.47691345 627.30291748]
[190.03742981 642.22149658]
[191.59796143 657.14007568]
[193.15847778 672.05871582]
[194.71900940 686.97729492]
[196.27952576 701.89593506]
[197.84005737 716.81451416]
[212.63966370 719.94927979]
[225.74520874 727.50573730]
[235.87275696 738.74353027]
[242.03010559 752.56170654]
[243.61402893 767.60650635]
[240.46932983 782.40405273]
[232.90411377 795.50451660]
[221.65954590 805.62451172]
[207.83723450 811.77264404]
[192.79136658 813.34643555]
[177.99597168 810.19183350]
[164.90055847 802.61785889]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 198]
[7 197]
[8 196]
[9 195]
[10 194]
[11 193]
[12 192]
[13 191]
[14 184]
[15 183]
[17 181]
[18 180]
[19 179]
[24 176]
[25 175]
[27 173]
[28 172]
[29 171]
[41 159]
[42 158]
[43 157]
[44 156]
[45 155]
[49 154]
[50 153]
[51 152]
[52 151]
[53 150]
[57 149]
[58 148]
[59 147]
[61 145]
[62 144]
[63 143]
[65 141]
[66 140]
[67 139]
[68 138]
[69 137]
[71 135]
[72 134]
[75 132]
[76 131]
[77 130]
[80 129]
[81 128]
[82 127]
[89 122]
[90 121]
[93 119]
[95 117]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
