%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGAxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[193.44827271 383.40649414]
[179.09069824 387.74377441]
[164.53332520 391.35421753]
[149.81294250 394.22863770]
[134.96672058 396.35983276]
[120.03216553 397.74240112]
[105.04701233 398.37283325]
[90.04911041 398.24957275]
[75.07634735 397.37289429]
[60.16654205 395.74502563]
[45.35735703 393.37008667]
[30.68620682 390.25405884]
[16.19014740 386.40484619]
[1.90579951 381.83212280]
[-12.13075447 376.54748535]
[-25.88405800 370.56427002]
[-39.31936646 363.89758301]
[-52.40274429 356.56427002]
[-65.10113525 348.58285522]
[-77.38247681 339.97351074]
[-89.21572876 330.75793457]
[-100.57100677 320.95947266]
[-111.41962433 310.60284424]
[-121.73418427 299.71423340]
[-131.48861694 288.32110596]
[-140.65829468 276.45227051]
[-149.22004700 264.13769531]
[-157.15225220 251.40850830]
[-164.43487549 238.29684448]
[-171.04951477 224.83583069]
[-176.97944641 211.05947876]
[-182.20971680 197.00257874]
[-186.72709656 182.70063782]
[-190.52018738 168.18978882]
[-193.57939148 153.50668335]
[-195.89698792 138.68841553]
[-197.46713257 123.77242279]
[-198.28584290 108.79637146]
[-198.35105896 93.79811096]
[-197.66262817 78.81550598]
[-196.22225952 63.88642120]
[-194.03363037 49.04856110]
[-191.10223389 34.33940887]
[-187.43548584 19.79611969]
[-183.04266357 5.45543289]
[-177.93484497 -8.64642715]
[-172.12493896 -22.47383690]
[-165.62762451 -35.99186707]
[-158.45930481 -49.16637039]
[-150.63810730 -61.96406937]
[-142.18377686 -74.35263062]
[-133.11766052 -86.30076599]
[-123.46268463 -97.77828979]
[-113.24320984 -108.75621033]
[-102.48507690 -119.20678711]
[-91.21543884 -129.10363770]
[-79.46278381 -138.42175293]
[-67.25678253 -147.13758850]
[-54.62828064 -155.22914124]
[-41.60917664 -162.67596436]
[-28.23235512 -169.45924377]
[-14.53160763 -175.56184387]
[-0.54154378 -180.96835327]
[13.70249653 -185.66511536]
[28.16452980 -189.64027405]
[42.80802917 -192.88375854]
[57.59599686 -195.38740540]
[72.49108124 -197.14488220]
[87.45565796 -198.15174866]
[102.45191956 -198.40544128]
[117.44198608 -197.90534973]
[132.38800049 -196.65272522]
[147.25218201 -194.65072632]
[161.99702454 -191.90441895]
[176.58523560 -188.42074585]
[190.97999573 -184.20848083]
[205.14494324 -179.27828979]
[219.04426575 -173.64262390]
[232.64288330 -167.31570435]
[245.90643311 -160.31352234]
[253.56703186 -173.20985413]
[261.22763062 -186.10618591]
[268.88824463 -199.00250244]
[276.54882812 -211.89883423]
[284.20941162 -224.79516602]
[291.87002563 -237.69148254]
[299.53060913 -250.58781433]
[307.19122314 -263.48413086]
[314.85180664 -276.38046265]
[322.51242065 -289.27679443]
[310.36889648 -298.10061646]
[299.09133911 -308.00723267]
[288.77597046 -318.91220093]
[279.51083374 -330.72241211]
[271.37490845 -343.33715820]
[264.43765259 -356.64877319]
[258.75823975 -370.54370117]
[254.38513184 -384.90338135]
[251.35563660 -399.60531616]
[249.69560242 -414.52404785]
[249.41920471 -429.53231812]
[250.52877808 -444.50207520]
[253.01486206 -459.30560303]
[256.85626221 -473.81655884]
[262.02017212 -487.91119385]
[268.46258545 -501.46923828]
[276.12847900 -514.37500000]
[284.95251465 -526.51837158]
[294.85934448 -537.79571533]
[305.76446533 -548.11090088]
[317.57482910 -557.37585449]
[330.18969727 -565.51159668]
[343.50143433 -572.44860840]
[357.39645386 -578.12780762]
[371.75622559 -582.50067139]
[386.45819092 -585.52990723]
[401.37695312 -587.18969727]
[416.38525391 -587.46588135]
[431.35498047 -586.35601807]
[446.15844727 -583.86968994]
[460.66937256 -580.02807617]
[474.76388550 -574.86389160]
[488.32180786 -568.42126465]
[501.22744751 -560.75512695]
[513.37066650 -551.93090820]
[524.64788818 -542.02392578]
[534.96289062 -531.11865234]
[544.22766113 -519.30810547]
[552.36315918 -506.69308472]
[559.29998779 -493.38125610]
[564.97894287 -479.48611450]
[569.35156250 -465.12628174]
[572.38055420 -450.42425537]
[574.04010010 -435.50546265]
[574.31597900 -420.49719238]
[573.20593262 -405.52746582]
[570.71936035 -390.72402954]
[566.87744141 -376.21319580]
[561.71307373 -362.11874390]
[555.27020264 -348.56091309]
[547.60388184 -335.65542603]
[538.77947998 -323.51232910]
[528.87225342 -312.23529053]
[517.96679688 -301.92047119]
[506.15609741 -292.65591431]
[493.54095459 -284.52059937]
[480.22900391 -277.58401489]
[466.33377075 -271.90530396]
[451.97387695 -267.53292847]
[437.27178955 -264.50415039]
[422.35296631 -262.84487915]
[407.34469604 -262.56921387]
[392.37500000 -263.67953491]
[377.57159424 -266.16638184]
[363.06082153 -270.00848389]
[348.96646118 -275.17312622]
[335.40875244 -281.61621094]
[327.74813843 -268.71987915]
[320.08755493 -255.82354736]
[312.42694092 -242.92721558]
[304.76635742 -230.03088379]
[297.10574341 -217.13456726]
[289.44515991 -204.23823547]
[281.78454590 -191.34190369]
[274.12396240 -178.44558716]
[266.46337891 -165.54925537]
[258.80276489 -152.65292358]
[271.29656982 -144.35488892]
[283.35763550 -135.43959045]
[294.95553589 -125.92954254]
[306.06097412 -115.84878540]
[316.64587402 -105.22277832]
[326.68350220 -94.07836151]
[336.14852905 -82.44367981]
[345.01699829 -70.34813690]
[353.26657104 -57.82227707]
[360.87634277 -44.89774704]
[367.82711792 -31.60719109]
[374.10134888 -17.98418617]
[379.68319702 -4.06314278]
[384.55850220 10.12077236]
[388.71502686 24.53172874]
[392.14221191 39.13332748]
[394.83142090 53.88867569]
[396.77587891 68.76050568]
[397.97064209 83.71125031]
[398.41268921 98.70314789]
[398.10095215 113.69831085]
[397.03616333 128.65887451]
[395.22106934 143.54704285]
[392.66018677 158.32521057]
[389.36004639 172.95605469]
[385.32894897 187.40258789]
[380.57708740 201.62834167]
[375.11645508 215.59736633]
[368.96087646 229.27439880]
[362.12585449 242.62486267]
[354.62872314 255.61505127]
[346.48834229 268.21212769]
[337.72531128 280.38430786]
[328.36178589 292.10079956]
[318.42138672 303.33203125]
[307.92922974 314.04965210]
[296.91183472 324.22656250]
[285.39703369 333.83703613]
[273.41390991 342.85684204]
[260.99270630 351.26315308]
[248.16482544 359.03475952]
[234.96267700 366.15200806]
[221.41960144 372.59695435]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[80 167]
[81 166]
[82 165]
[83 164]
[84 163]
[85 162]
[86 161]
[87 160]
[88 159]
[89 158]
[90 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
