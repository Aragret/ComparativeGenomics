%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[97.75643158 309.27139282]
[102.69267273 295.06054688]
[110.15630341 281.99880981]
[119.89312744 270.53109741]
[131.57150269 261.04794312]
[144.79367065 253.87234497]
[140.17965698 239.59960938]
[135.56564331 225.32687378]
[130.95164490 211.05415344]
[114.18096161 203.71519470]
[107.99439240 186.14706421]
[116.76148224 169.35264587]
[111.72456360 155.22361755]
[106.68765259 141.09458923]
[95.12586975 131.70446777]
[97.77988434 116.10745239]
[84.72544861 105.57379150]
[87.92758179 89.10799408]
[82.68086243 75.05551910]
[77.43414307 61.00305176]
[72.18743134 46.95058060]
[66.94071198 32.89810944]
[61.69399261 18.84563637]
[56.44727325 4.79316568]
[51.09608841 -9.21985722]
[45.64073181 -23.19265556]
[42.15627289 -25.78351021]
[39.90402985 -29.02263260]
[38.93648148 -32.44305038]
[39.14907074 -35.60871124]
[40.30387878 -38.16303253]
[35.68986893 -52.43576431]
[31.07586098 -66.70849609]
[16.58627319 -62.81653976]
[1.91943824 -59.65751648]
[-12.88759518 -57.23941040]
[-27.79742432 -55.56832886]
[-42.77238083 -54.64849091]
[-57.77464294 -54.48222733]
[-72.76631165 -55.06995010]
[-87.70951080 -56.41017914]
[-102.56649780 -58.49952698]
[-117.29974365 -61.33271408]
[-131.87202454 -64.90258789]
[-146.24653625 -69.20013428]
[-160.38697815 -74.21448517]
[-174.25759888 -79.93297577]
[-187.82337952 -86.34117126]
[-201.05006409 -93.42288208]
[-213.90422058 -101.16020966]
[-226.35337830 -109.53361511]
[-238.36608887 -118.52194214]
[-249.91203308 -128.10249329]
[-260.96200562 -138.25105286]
[-271.48812866 -148.94200134]
[-281.46377563 -160.14833069]
[-290.86380005 -171.84172058]
[-299.66439819 -183.99263000]
[-307.84338379 -196.57038879]
[-315.38006592 -209.54319763]
[-322.25540161 -222.87829590]
[-328.45205688 -236.54200745]
[-333.95437622 -250.49981689]
[-338.74841309 -264.71643066]
[-342.82211304 -279.15597534]
[-346.16516113 -293.78198242]
[-348.76910400 -308.55746460]
[-350.62734985 -323.44512939]
[-351.73526001 -338.40734863]
[-352.08999634 -353.40634155]
[-351.69067383 -368.40420532]
[-350.53826904 -383.36306763]
[-348.63574219 -398.24511719]
[-345.98788452 -413.01278687]
[-342.60137939 -427.62878418]
[-338.48474121 -442.05615234]
[-333.64843750 -456.25845337]
[-328.10467529 -470.19982910]
[-321.86740112 -483.84506226]
[-314.95242310 -497.15966797]
[-307.37719727 -510.11001587]
[-299.16085815 -522.66339111]
[-290.32418823 -534.78808594]
[-280.88943481 -546.45349121]
[-270.88049316 -557.63006592]
[-260.32263184 -568.28967285]
[-249.24252319 -578.40533447]
[-237.66815186 -587.95153809]
[-225.62876892 -596.90411377]
[-213.15475464 -605.24041748]
[-200.27764893 -612.93951416]
[-187.02998352 -619.98187256]
[-173.44520569 -626.34967041]
[-159.55763245 -632.02691650]
[-145.40235901 -636.99920654]
[-131.01512146 -641.25396729]
[-116.43228912 -644.78051758]
[-101.69068909 -647.56988525]
[-86.82755280 -649.61499023]
[-71.88043213 -650.91082764]
[-56.88708115 -651.45397949]
[-41.88537979 -651.24310303]
[-26.91322327 -650.27868652]
[-12.00843048 -648.56329346]
[2.79134774 -646.10119629]
[17.44872475 -642.89855957]
[31.92667580 -638.96350098]
[46.18862534 -634.30603027]
[60.19855118 -628.93786621]
[73.92105865 -622.87249756]
[87.32148743 -616.12536621]
[100.36597443 -608.71343994]
[113.02159119 -600.65545654]
[125.25634766 -591.97180176]
[137.03933716 -582.68432617]
[148.34082031 -572.81658936]
[159.13221741 -562.39349365]
[169.38629150 -551.44134521]
[179.07711792 -539.98785400]
[188.18023682 -528.06188965]
[196.67265320 -515.69360352]
[204.53289795 -502.91421509]
[211.74111938 -489.75607300]
[218.27911377 -476.25234985]
[224.13037109 -462.43719482]
[229.28009033 -448.34552002]
[233.71528625 -434.01287842]
[237.42474365 -419.47549438]
[240.39909363 -404.77011108]
[242.63082886 -389.93383789]
[244.11430359 -375.00418091]
[244.84576416 -360.01882935]
[244.82337952 -345.01565552]
[244.04719543 -330.03256226]
[242.51918030 -315.10739136]
[240.24317932 -300.27786255]
[237.22496033 -285.58139038]
[233.47213745 -271.05514526]
[228.99418640 -256.73580933]
[223.80242920 -242.65956116]
[217.90997314 -228.86193848]
[211.33171082 -215.37779236]
[204.08425903 -202.24121094]
[196.18591309 -189.48536682]
[187.65663147 -177.14247131]
[178.51795959 -165.24372864]
[168.79299927 -153.81916809]
[158.50628662 -142.89767456]
[147.68382263 -132.50682068]
[136.35295105 -122.67285156]
[124.54229736 -113.42062378]
[112.28167725 -104.77349854]
[99.60208130 -96.75332642]
[86.53552246 -89.38035583]
[73.11502075 -82.67322540]
[59.37447739 -76.64887238]
[45.34859467 -71.32250977]
[49.96260452 -57.04977417]
[54.57661438 -42.77704239]
[59.61352921 -28.64801216]
[65.06888580 -14.67521381]
[70.42977905 -9.58771515]
[70.49974823 -0.45355251]
[75.74645996 13.59891891]
[80.99317932 27.65139008]
[86.23989868 41.70386124]
[91.48661804 55.75633240]
[96.73333740 69.80880737]
[101.98005676 83.86127472]
[112.26515961 89.32550812]
[116.25755310 100.26634979]
[111.90891266 111.07054138]
[123.83097076 121.47126770]
[120.81668091 136.05767822]
[125.85359955 150.18670654]
[130.89051819 164.31573486]
[142.41804504 167.22306824]
[151.02272034 175.25180054]
[154.64584351 186.32278442]
[152.49723816 197.64971924]
[145.22436523 206.44013977]
[149.83837891 220.71287537]
[154.45239258 234.98561096]
[159.06639099 249.25833130]
[173.98684692 247.33613586]
[189.00643921 248.18852234]
[203.61360168 251.78646851]
[217.31083679 258.00744629]
[229.63162231 266.63952637]
[240.15629578 277.38876343]
[248.52641296 289.88897705]
[254.45687866 303.71447754]
[257.74569702 318.39434814]
[258.28088379 333.42855835]
[256.04415894 348.30511475]
[251.11177063 362.51730347]
[243.65165710 375.58105469]
[233.91792297 387.05139160]
[222.24211121 396.53771973]
[209.02188110 403.71685791]
[194.70750427 408.34432983]
[179.78654480 410.26251221]
[164.76718140 409.40606689]
[150.16098022 405.80419922]
[136.46542358 399.57952881]
[124.14697266 390.94412231]
[113.62519073 380.19204712]
[105.25844574 367.68957520]
[99.33171082 353.86248779]
[96.04683685 339.18173218]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 184]
[7 183]
[8 182]
[9 181]
[12 176]
[13 175]
[14 174]
[16 172]
[18 169]
[19 168]
[20 167]
[21 166]
[22 165]
[23 164]
[24 163]
[25 161]
[26 160]
[31 159]
[32 158]
[33 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
