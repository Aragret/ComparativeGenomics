%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[49.84296799 263.06790161]
[49.22173691 278.06323242]
[47.39588547 292.95996094]
[44.37725830 307.66146851]
[40.18543625 322.07238770]
[34.84759521 336.09930420]
[28.39836311 349.65118408]
[20.87956047 362.64016724]
[12.33995342 374.98202515]
[2.83492351 386.59671021]
[-7.57388353 397.40887451]
[-18.81896210 407.34841919]
[-30.82738304 416.35089111]
[-43.52126312 424.35784912]
[-56.81828308 431.31744385]
[-70.63219452 437.18444824]
[-84.87342072 441.92089844]
[-99.44959259 445.49603271]
[-114.26617432 447.88665771]
[-129.22708130 449.07730103]
[-144.23527527 449.06021118]
[-159.19343567 447.83551025]
[-174.00454712 445.41116333]
[-188.57252502 441.80282593]
[-202.80293274 437.03399658]
[-216.60345459 431.13549805]
[-229.88458252 424.14569092]
[-242.56021118 416.10980225]
[-254.54809570 407.08004761]
[-265.77050781 397.11492920]
[-276.15466309 386.27908325]
[-285.63323975 374.64279175]
[-294.14471436 362.28152466]
[-301.63391113 349.27542114]
[-308.05227661 335.70889282]
[-313.35815430 321.66989136]
[-317.51715088 307.24945068]
[-320.50228882 292.54110718]
[-322.29421997 277.64025879]
[-322.88131714 262.64352417]
[-322.25973511 247.64819336]
[-320.43356323 232.75151062]
[-317.41461182 218.05006409]
[-313.22247314 203.63923645]
[-307.88433838 189.61245728]
[-301.43478394 176.06069946]
[-293.91571045 163.07188416]
[-285.37582397 150.73020935]
[-275.87054443 139.11573792]
[-265.46148682 128.30380249]
[-254.21620178 118.36450195]
[-242.20758057 109.36231232]
[-229.51351929 101.35562134]
[-216.21635437 94.39633942]
[-202.40231323 88.52960968]
[-188.16098022 83.79348755]
[-173.58473206 80.21867371]
[-158.76809692 77.82836914]
[-143.80715942 76.63806152]
[-128.79896545 76.65547943]
[-113.84083557 77.88050842]
[-99.02978516 80.30519867]
[-84.46187592 83.91383362]
[-70.23157501 88.68300629]
[-56.43118668 94.58177948]
[-43.15020370 101.57190704]
[-30.47476578 109.60804749]
[-18.48707390 118.63808441]
[-7.26487780 128.60345459]
[3.11904335 139.43952942]
[12.59734440 151.07603455]
[24.95185280 142.56919861]
[31.04647446 128.97859192]
[46.80075836 127.52490997]
[59.15526581 119.01808167]
[71.50977325 110.51125336]
[83.86428070 102.00443268]
[86.66304779 90.69920349]
[96.30442047 84.16580200]
[107.84182739 85.75623322]
[120.32161713 77.43429565]
[132.80140686 69.11235046]
[139.99034119 55.01873779]
[154.87188721 54.39501953]
[167.35166931 46.07307816]
[179.83146667 37.75113297]
[192.31126404 29.42918968]
[204.79106140 21.10724640]
[197.25064087 8.13474941]
[190.52311707 -5.27733850]
[184.63401794 -19.07814217]
[179.60568237 -33.21530914]
[175.45718384 -47.63521194]
[172.20425415 -62.28314972]
[169.85925293 -77.10356140]
[168.43104553 -92.04022217]
[167.92506409 -107.03647614]
[168.34323120 -122.03543854]
[169.68395996 -136.98020935]
[171.94216919 -151.81408691]
[175.10926819 -166.48081970]
[179.17327881 -180.92477417]
[184.11874390 -195.09114075]
[189.92694092 -208.92617798]
[196.57582092 -222.37742615]
[204.04016113 -235.39384460]
[212.29165649 -247.92607117]
[221.29899597 -259.92654419]
[231.02801514 -271.34976196]
[241.44180298 -282.15240479]
[252.50085449 -292.29342651]
[264.16323853 -301.73443604]
[276.38470459 -310.43960571]
[289.11886597 -318.37588501]
[302.31744385 -325.51315308]
[315.93038940 -331.82440186]
[329.90603638 -337.28564453]
[344.19134521 -341.87615967]
[358.73220825 -345.57855225]
[373.47338867 -348.37878418]
[388.35897827 -350.26620483]
[403.33255005 -351.23367310]
[418.33728027 -351.27752686]
[433.31622314 -350.39761353]
[448.21261597 -348.59719849]
[462.96990967 -345.88320923]
[477.53213501 -342.26583862]
[491.84405518 -337.75891113]
[505.85137939 -332.37945557]
[519.50097656 -326.14788818]
[532.74102783 -319.08786011]
[545.52142334 -311.22616577]
[557.79351807 -302.59259033]
[569.51086426 -293.21990967]
[580.62902832 -283.14367676]
[591.10577393 -272.40209961]
[600.90136719 -261.03594971]
[609.97869873 -249.08831787]
[618.30334473 -236.60453796]
[625.84362793 -223.63197327]
[632.57098389 -210.21981812]
[638.45996094 -196.41896057]
[643.48815918 -182.28173828]
[647.63653564 -167.86180115]
[650.88928223 -153.21382141]
[653.23419189 -138.39338684]
[654.66223145 -123.45671082]
[655.16802979 -108.46045685]
[654.74975586 -93.46150208]
[653.40887451 -78.51674652]
[651.15051270 -63.68288040]
[647.98327637 -49.01617813]
[643.91912842 -34.57227325]
[638.97351074 -20.40595627]
[633.16516113 -6.57096767]
[626.51617432 6.88021421]
[619.05169678 19.89656258]
[610.80004883 32.42870331]
[601.79260254 44.42909241]
[592.06347656 55.85221481]
[581.64959717 66.65473938]
[570.59045410 76.79567719]
[558.92797852 86.23656464]
[546.70642090 94.94159698]
[533.97216797 102.87774658]
[520.77349854 110.01490784]
[507.16052246 116.32601166]
[493.18484497 121.78710938]
[478.89944458 126.37749481]
[464.35858154 130.07974243]
[449.61737061 132.87982178]
[434.73175049 134.76710510]
[419.75817871 135.73443604]
[404.75344849 135.77813721]
[389.77450562 134.89805603]
[374.87814331 133.09751892]
[360.12084961 130.38336182]
[345.55865479 126.76587677]
[331.24679565 122.25878906]
[317.23953247 116.87919617]
[303.58999634 110.64749908]
[290.34997559 103.58734131]
[277.56973267 95.72550964]
[265.29766846 87.09181976]
[253.58041382 77.71902466]
[242.46235657 67.64268494]
[231.98571777 56.90100861]
[222.19021606 45.53475571]
[213.11300659 33.58703995]
[200.63320923 41.90898514]
[188.15341187 50.23092651]
[175.67361450 58.55287170]
[163.19383240 66.87481689]
[156.89753723 80.37318420]
[141.12335205 81.59214020]
[128.64356995 89.91408539]
[116.16377258 98.23603058]
[109.12129974 113.46035004]
[92.37110901 114.35894012]
[80.01660156 122.86576843]
[67.66209412 131.37258911]
[55.30758286 139.87942505]
[48.32928467 154.07850647]
[33.45867920 154.92370605]
[21.10417175 163.43054199]
[28.59366417 176.43644714]
[35.01232147 190.00285339]
[40.31851578 204.04174805]
[44.47783279 218.46209717]
[47.46329880 233.17036438]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[71 205]
[72 204]
[74 202]
[75 201]
[76 200]
[77 199]
[80 197]
[81 196]
[82 195]
[84 193]
[85 192]
[86 191]
[87 190]
[88 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
