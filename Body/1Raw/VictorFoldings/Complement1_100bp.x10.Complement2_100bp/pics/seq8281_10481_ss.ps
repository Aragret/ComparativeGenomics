%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[124.92401886 425.61636353]
[137.40106201 416.65985107]
[135.84054565 401.74127197]
[134.28001404 386.82266235]
[132.71949768 371.90405273]
[131.15896606 356.98544312]
[129.59844971 342.06683350]
[128.03791809 327.14822388]
[126.47740173 312.22964478]
[122.65509033 305.90414429]
[125.00640106 297.07754517]
[123.66816711 282.13735962]
[114.82624817 270.15112305]
[121.30150604 255.71568298]
[119.96327209 240.77549744]
[116.93783569 237.08012390]
[116.20169830 231.44496155]
[118.81439972 225.37162781]
[117.92158508 210.39822388]
[117.02877045 195.42481995]
[116.13595581 180.45141602]
[113.36034393 165.71044922]
[108.74633789 151.43771362]
[104.13232422 137.16497803]
[92.85524750 127.43478394]
[95.97246552 111.92370605]
[91.04087067 97.75756836]
[85.79415131 83.70510101]
[80.54743958 69.65262604]
[74.61401367 62.70768356]
[75.32891846 55.35168457]
[70.29199982 41.22265625]
[65.25508881 27.09362793]
[60.21817017 12.96459770]
[55.18125534 -1.16443205]
[50.14433670 -15.29346180]
[45.36364746 -19.86035728]
[43.83626175 -25.33430672]
[45.17463684 -29.91882324]
[40.56062698 -44.19155884]
[35.94661713 -58.46429062]
[23.32851028 -63.17576218]
[15.83716393 -74.13433075]
[16.02250671 -87.21285248]
[23.59284210 -97.63971710]
[19.19184494 -111.97956848]
[14.79084587 -126.31941223]
[10.38984776 -140.65925598]
[5.81784868 -145.43507385]
[4.53641224 -150.97175598]
[6.07815981 -155.49194336]
[2.10606360 -169.95646667]
[-1.86603248 -184.42098999]
[-5.83812857 -198.88551331]
[-9.81022453 -213.35003662]
[-12.69800186 -198.63064575]
[-19.10945702 -185.06991577]
[-28.65252686 -173.49711609]
[-40.74364853 -164.61990356]
[-54.64344788 -158.98114014]
[-69.50194550 -156.92564392]
[-84.41053772 -158.57910156]
[-98.45755768 -163.84039307]
[-110.78402710 -172.38780212]
[-120.63617706 -183.69863892]
[-127.41153717 -197.08125305]
[-130.69580078 -211.71730042]
[-130.28814697 -226.71174622]
[-126.21347046 -241.14772034]
[-118.72096252 -254.14242554]
[-108.26879120 -264.90124512]
[-95.49610138 -272.76626587]
[-81.18395996 -277.25653076]
[-66.20755005 -278.09747314]
[-51.48269272 -275.23767090]
[-37.90981293 -268.85198975]
[-26.31889725 -259.33090210]
[-17.41873741 -247.25668335]
[-11.75357342 -233.36759949]
[-10.63792419 -248.32604980]
[-9.52227592 -263.28448486]
[-12.00474358 -272.07513428]
[-8.27703190 -278.45681763]
[-6.93879795 -293.39700317]
[-5.60056353 -308.33718872]
[-4.26232958 -323.27737427]
[-2.92409539 -338.21755981]
[-1.58586121 -353.15774536]
[-16.18795586 -356.71252441]
[-30.09710503 -362.40402222]
[-43.00257492 -370.10510254]
[-54.61604691 -379.64370728]
[-64.67807770 -390.80673218]
[-72.96388245 -403.34478760]
[-79.28833771 -416.97781372]
[-83.51016998 -431.40118408]
[-85.53504944 -446.29272461]
[-85.31774139 -461.31970215]
[-82.86310577 -476.14645386]
[-78.22598267 -490.44171143]
[-71.50995636 -503.88613892]
[-62.86507034 -516.17938232]
[-52.48445892 -527.04681396]
[-40.60002136 -536.24560547]
[-27.47726631 -543.57025146]
[-13.40935802 -548.85717773]
[1.28942025 -551.98828125]
[16.29069328 -552.89349365]
[31.25932503 -551.55273438]
[45.86091232 -547.99584961]
[59.76925278 -542.30236816]
[72.67362213 -534.59948730]
[84.28573608 -525.05920410]
[94.34618378 -513.89477539]
[102.63019562 -501.35549927]
[108.95271301 -487.72158813]
[113.17248535 -473.29760742]
[115.19524384 -458.40579224]
[114.97579956 -443.37884521]
[112.51905060 -428.55245972]
[107.87989044 -414.25784302]
[101.16194916 -400.81436157]
[92.51531219 -388.52236938]
[82.13315582 -377.65643311]
[70.24740601 -368.45935059]
[57.12361145 -361.13653564]
[43.05495071 -355.85159302]
[28.35572433 -352.72262573]
[13.35432339 -351.81951904]
[12.01608944 -336.87933350]
[10.67785549 -321.93914795]
[9.33962154 -306.99896240]
[8.00138760 -292.05877686]
[6.66315317 -277.11859131]
[5.43617773 -262.16885376]
[4.32052898 -247.21040344]
[3.20488024 -232.25193787]
[4.65429878 -217.32212830]
[8.62639523 -202.85760498]
[12.59849167 -188.39308167]
[16.57058716 -173.92855835]
[20.54268456 -159.46403503]
[24.72969437 -145.06025696]
[29.13069344 -130.72041321]
[33.53169250 -116.38056183]
[37.93268967 -102.04071808]
[53.11352921 -94.80325317]
[58.46826172 -78.50473022]
[50.21935272 -63.07830048]
[54.83335876 -48.80556870]
[59.44736862 -34.53283310]
[64.27336884 -20.33037758]
[69.31027985 -6.20134830]
[74.34719849 7.92768145]
[79.38411713 22.05671120]
[84.42103577 36.18574142]
[89.45794678 50.31476974]
[94.59990692 64.40591431]
[99.84662628 78.45838165]
[105.09334564 92.51085663]
[108.33956909 94.59277344]
[110.65235901 98.09546661]
[111.41774750 102.56997681]
[110.24520111 107.30970001]
[121.85230255 118.06077576]
[118.40505981 132.55097961]
[123.01906586 146.82369995]
[127.63307953 161.09643555]
[130.34655762 146.34391785]
[137.64569092 133.23960876]
[148.76016235 123.16646576]
[162.51705933 117.18750763]
[177.46456909 115.93372345]
[192.02525330 119.53742218]
[204.66247559 127.61829376]
[214.04260254 139.32356262]
[219.17575073 153.41790771]
[219.52017212 168.41395569]
[215.03953552 182.72912598]
[206.20669556 194.85269165]
[193.95381165 203.50523376]
[179.57392883 207.77363586]
[164.58462524 207.20744324]
[150.56773376 201.86639404]
[139.00250244 192.31414795]
[131.10935974 179.55859375]
[132.00218201 194.53199768]
[132.89498901 209.50540161]
[133.78781128 224.47882080]
[134.90345764 239.43727112]
[136.24168396 254.37745667]
[145.17932129 267.43231201]
[138.60835266 280.79910278]
[139.94659424 295.73928833]
[141.39601135 310.66909790]
[142.95652771 325.58770752]
[144.51705933 340.50631714]
[146.07757568 355.42492676]
[147.63809204 370.34353638]
[149.19862366 385.26214600]
[150.75914001 400.18072510]
[152.31967163 415.09933472]
[166.38009644 421.27996826]
[175.45352173 433.67224121]
[177.09925842 448.94268799]
[170.87460327 462.98367310]
[158.45394897 472.01821899]
[143.17840576 473.61608887]
[129.15699768 467.34744263]
[120.16143036 454.89852905]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 202]
[3 201]
[4 200]
[5 199]
[6 198]
[7 197]
[8 196]
[9 195]
[11 194]
[12 193]
[14 191]
[15 190]
[18 189]
[19 188]
[20 187]
[21 186]
[22 168]
[23 167]
[24 166]
[26 164]
[27 160]
[28 159]
[29 158]
[31 157]
[32 156]
[33 155]
[34 154]
[35 153]
[36 152]
[39 151]
[40 150]
[41 149]
[45 146]
[46 145]
[47 144]
[48 143]
[51 142]
[52 141]
[53 140]
[54 139]
[55 138]
[79 137]
[80 136]
[81 135]
[83 134]
[84 133]
[85 132]
[86 131]
[87 130]
[88 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
