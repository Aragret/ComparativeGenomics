%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[186.54766846 299.39505005]
[192.47860718 285.60321045]
[199.77444458 272.48217773]
[208.36029053 260.16656494]
[218.14805603 248.78277588]
[207.82138062 237.90344238]
[200.93656921 235.21624756]
[197.42344666 226.78440857]
[187.25990295 215.75253296]
[177.09635925 204.72065735]
[166.93281555 193.68878174]
[156.76925659 182.65690613]
[144.69975281 181.84861755]
[136.14204407 172.74095154]
[136.08128357 159.84292603]
[126.08311462 148.66094971]
[126.24748993 163.66004944]
[117.65851593 175.95759583]
[103.51966858 180.96688843]
[89.10440063 176.81961060]
[79.78923798 165.06259155]
[79.04850769 150.08088684]
[87.15849304 137.46232605]
[101.09435272 131.91329956]
[115.65937042 135.50408936]
[107.06080627 123.21324921]
[98.46224213 110.92241669]
[93.32056427 125.01365662]
[79.14706421 129.92405701]
[66.38992310 122.03383636]
[64.45323181 107.15939331]
[74.76464844 96.26559448]
[89.72153473 97.38213348]
[82.06094360 84.48580933]
[74.40034485 71.58947754]
[66.73974609 58.69315338]
[59.07914734 45.79682922]
[51.41855240 32.90050125]
[52.36506653 47.87060928]
[49.11188507 62.51358795]
[41.91557312 75.67462921]
[31.34365654 86.31580353]
[18.22988319 93.59790039]
[3.60845876 96.94662476]
[-11.36750984 96.09787750]
[-25.51695442 91.11860657]
[-37.72399139 82.40148163]
[-47.02592468 70.63397980]
[-52.68916321 56.74413681]
[-54.26707840 41.82736206]
[-51.63523483 27.06005478]
[-45.00118256 13.60682583]
[-34.88811874 2.52865243]
[-22.09359741 -5.30079365]
[-7.62664986 -9.26404953]
[7.37180233 -9.04855633]
[21.71891785 -4.67130899]
[34.28322220 3.52248454]
[44.07571411 14.88954830]
[40.53604126 0.31317320]
[36.99637222 -14.26320171]
[33.45669937 -28.83957672]
[23.85623360 -33.95228195]
[18.75937080 -43.31188965]
[19.63685226 -53.71277237]
[25.95836449 -61.74094009]
[22.85425568 -76.41624451]
[19.75014496 -91.09154510]
[16.64603424 -105.76684570]
[13.54192448 -120.44214630]
[3.11629295 -132.34243774]
[8.05231762 -146.39537048]
[-2.37331438 -158.29565430]
[2.56271005 -172.34858704]
[-12.40584660 -171.10537720]
[-27.41218376 -171.74809265]
[-42.21963120 -174.26657104]
[-56.59465027 -178.62110901]
[-70.31053162 -184.74302673]
[-83.15095520 -192.53578186]
[-94.91339874 -201.87643433]
[-105.41236877 -212.61770630]
[-114.48226929 -224.59017944]
[-121.98005676 -237.60504150]
[-127.78748322 -251.45700073]
[-131.81295776 -265.92761230]
[-133.99299622 -280.78866577]
[-134.29319763 -295.80575562]
[-132.70884705 -310.74206543]
[-129.26492310 -325.36199951]
[-124.01574707 -339.43499756]
[-117.04409790 -352.73910522]
[-108.45993805 -365.06451416]
[-98.39865112 -376.21679688]
[-87.01890564 -386.02011108]
[-74.50019073 -394.31982422]
[-61.03993607 -400.98501587]
[-46.85043716 -405.91058350]
[-32.15547562 -409.01885986]
[-17.18681335 -410.26080322]
[-2.18052959 -409.61682129]
[12.62670517 -407.09707642]
[27.00135994 -402.74133301]
[40.71672440 -396.61825562]
[53.55648804 -388.82443237]
[65.31815338 -379.48278809]
[75.81621552 -368.74063110]
[84.88510895 -356.76739502]
[92.38180542 -343.75192261]
[98.18806458 -329.89944458]
[102.21231842 -315.42849731]
[104.39109802 -300.56726074]
[104.69004059 -285.55014038]
[103.10443115 -270.61398315]
[99.65927887 -255.99432373]
[94.40892029 -241.92176819]
[87.43614960 -228.61824036]
[78.85095215 -216.29356384]
[68.78872681 -205.14212036]
[57.40815735 -195.33978271]
[44.88874435 -187.04113770]
[31.42792892 -180.37707520]
[17.23801231 -175.45269775]
[27.44161797 -164.60208130]
[22.72761917 -149.49948120]
[32.93122482 -138.64886475]
[28.21722794 -123.54625702]
[31.32133675 -108.87095642]
[34.42544556 -94.19565582]
[37.52955627 -79.52035522]
[40.63366699 -64.84504700]
[54.57524490 -51.44656372]
[48.03307343 -32.37924957]
[51.57274628 -17.80287552]
[55.11241913 -3.22649932]
[58.65209198 11.34987640]
[64.31488037 25.23990250]
[71.97547150 38.13623047]
[79.63607025 51.03255844]
[87.29666901 63.92888260]
[94.95726776 76.82521057]
[102.61786652 89.72153473]
[110.75308228 102.32385254]
[119.35164642 114.61468506]
[127.95021057 126.90552521]
[137.26509094 138.66278076]
[147.26325989 149.84475708]
[164.88505554 155.18833923]
[167.80113220 172.49334717]
[177.96469116 183.52522278]
[188.12823486 194.55711365]
[198.29177856 205.58898926]
[208.45532227 216.62086487]
[218.70071411 227.57676697]
[229.02738953 238.45610046]
[240.90554810 229.27459717]
[253.65165710 221.34188843]
[267.13491821 214.73942566]
[281.21697998 209.53492737]
[295.75332642 205.78179932]
[310.59475708 203.51858521]
[325.58905029 202.76847839]
[340.58227539 203.53918457]
[355.42062378 205.82279968]
[369.95178223 209.59588623]
[384.02667236 214.81973267]
[397.50085449 221.44073486]
[410.23605347 229.39093018]
[422.10159302 238.58876038]
[432.97570801 248.93983459]
[442.74679565 260.33792114]
[451.31463623 272.66607666]
[458.59127808 285.79776001]
[464.50204468 299.59826660]
[468.98629761 313.92596436]
[471.99801636 328.63378906]
[473.50628662 343.57086182]
[473.49563599 358.58389282]
[471.96618652 373.51879883]
[468.93359375 388.22238159]
[464.42904663 402.54367065]
[458.49871826 416.33578491]
[451.20346069 429.45715332]
[442.61816406 441.77313232]
[432.83090210 453.15734863]
[421.94210815 463.49301147]
[410.06353760 472.67398071]
[397.31707764 480.60610962]
[383.83352661 487.20800781]
[369.75125122 492.41189575]
[355.21475220 496.16436768]
[340.37316895 498.42694092]
[325.37887573 499.17639160]
[310.38568115 498.40499878]
[295.54745483 496.12072754]
[281.01644897 492.34701538]
[266.94177246 487.12255859]
[253.46789551 480.50094604]
[240.73304749 472.55020142]
[228.86791992 463.35183716]
[217.99426270 453.00030518]
[208.22364807 441.60177612]
[199.65637207 429.27325439]
[192.38031006 416.14123535]
[186.47013855 402.34045410]
[181.98652649 388.01257324]
[178.97546387 373.30462646]
[177.46784973 358.36746216]
[177.47915649 343.35446167]
[179.00926208 328.41958618]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 155]
[6 154]
[8 153]
[9 152]
[10 151]
[11 150]
[12 149]
[15 147]
[16 146]
[25 145]
[26 144]
[27 143]
[33 142]
[34 141]
[35 140]
[36 139]
[37 138]
[38 137]
[59 136]
[60 135]
[61 134]
[62 133]
[66 131]
[67 130]
[68 129]
[69 128]
[70 127]
[72 125]
[74 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
