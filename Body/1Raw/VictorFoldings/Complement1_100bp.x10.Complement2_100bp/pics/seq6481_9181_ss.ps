%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[107.86482239 822.07623291]
[92.83041382 822.53057861]
[77.95652008 820.29284668]
[63.72128296 815.43511963]
[50.58229828 808.11346436]
[38.96192932 798.56323242]
[29.23372459 787.09143066]
[21.71040726 774.06689453]
[16.63381958 759.90820312]
[14.16715145 745.07055664]
[14.38969898 730.03094482]
[17.29430580 715.27282715]
[22.78760338 701.27050781]
[30.69300079 688.47424316]
[40.75637817 677.29534912]
[52.65423203 668.09313965]
[66.00410461 661.16345215]
[80.37683868 656.72900391]
[95.31043243 654.93243408]
[96.20324707 639.95898438]
[97.09606171 624.98559570]
[97.09606171 609.98559570]
[96.20324707 595.01220703]
[95.31043243 580.03875732]
[94.41761017 565.06536865]
[85.93649292 552.82122803]
[92.83866882 538.58496094]
[91.94585419 523.61157227]
[91.05303955 508.63815308]
[88.13896942 504.85433960]
[87.57093811 499.19973755]
[90.36331177 493.20690918]
[89.91670227 478.21356201]
[89.47010040 463.22021484]
[89.02349091 448.22686768]
[88.57688904 433.23348999]
[74.72555542 424.42337036]
[68.79549408 408.93801880]
[73.30873871 392.80941772]
[86.67738342 382.44720459]
[86.00759888 367.46218872]
[85.33781433 352.47714233]
[84.66802979 337.49209595]
[83.99824524 322.50704956]
[83.32846069 307.52203369]
[82.65867615 292.53698730]
[81.98889160 277.55194092]
[72.62786102 289.27249146]
[58.19649506 293.36340332]
[44.07733536 288.29891968]
[35.53647232 275.96789551]
[35.75944519 260.96957397]
[44.66308212 248.89788818]
[58.92655563 244.25532532]
[73.22993469 248.77343750]
[82.23880005 260.76818848]
[83.35445404 245.80972290]
[84.47010040 230.85127258]
[76.00949860 215.47644043]
[86.50342560 200.34506226]
[87.39624023 185.37164307]
[88.28906250 170.39823914]
[72.99863434 166.06047058]
[59.04747009 158.44612122]
[47.12752914 147.93287659]
[37.83003998 135.04219055]
[31.61614799 120.41342163]
[28.79406357 104.77215576]
[29.50375938 88.89419556]
[33.71003723 73.56707764]
[41.20426178 59.55101776]
[51.61473083 47.54121399]
[64.42507935 38.13333511]
[78.99993896 31.79401779]
[94.61637878 28.83768272]
[87.29339600 14.81326008]
[95.40620422 2.32199883]
[95.85280609 -12.67135143]
[88.52982330 -26.69577408]
[96.64263153 -39.18703461]
[96.41930389 -54.18537140]
[95.52648163 -69.15877533]
[94.63366699 -84.13218689]
[92.11510468 -87.66924286]
[90.96841431 -91.44410706]
[91.09989929 -94.99630737]
[92.27593994 -97.94309235]
[94.16046906 -100.01834869]
[94.16046906 -115.01834869]
[94.16046906 -130.01835632]
[86.42317200 -143.81852722]
[94.16046906 -156.54579163]
[94.16046906 -171.54579163]
[83.26591492 -182.67892456]
[83.47959900 -197.89105225]
[94.16046906 -208.20874023]
[94.16046906 -223.20874023]
[94.16046906 -238.20874023]
[94.16046906 -253.20874023]
[80.38659668 -259.78469849]
[70.83666992 -271.69107056]
[67.40683746 -286.56381226]
[70.77807617 -301.44998169]
[80.28104401 -313.39385986]
[94.02890778 -320.02401733]
[109.29203033 -320.02401733]
[123.03989410 -313.39385986]
[132.54286194 -301.44998169]
[135.91410828 -286.56381226]
[132.48426819 -271.69107056]
[122.93434143 -259.78469849]
[109.16046906 -253.20874023]
[109.16046906 -238.20874023]
[109.16046906 -223.20874023]
[109.16046906 -208.20874023]
[119.84133911 -197.89105225]
[120.05502319 -182.67892456]
[109.16046906 -171.54579163]
[109.16046906 -156.54579163]
[116.89776611 -143.81852722]
[109.16046906 -130.01835632]
[109.16046906 -115.01834869]
[109.16046906 -100.01834869]
[109.60707855 -85.02500153]
[110.49989319 -70.05159760]
[111.39270782 -55.07818985]
[122.13330078 -65.54907990]
[137.13320923 -65.49626923]
[147.79980469 -54.94999695]
[148.02276611 -39.95165253]
[137.67439270 -29.09296989]
[122.68267822 -28.59429359]
[111.63597870 -38.74042892]
[118.99091339 -25.78843117]
[110.84616089 -12.22474480]
[110.39955139 2.76860476]
[117.75448608 15.72060204]
[109.60973358 29.28428841]
[123.29099274 32.54195023]
[136.06774902 38.41935349]
[147.44381714 46.68824387]
[156.97738647 57.02750015]
[164.29824829 69.03559875]
[169.12207031 82.24620056]
[171.26155090 96.14627075]
[170.63356018 110.19600677]
[167.26252747 123.84976959]
[161.27934265 136.57733154]
[152.91636658 147.88441467]
[142.49838257 157.33189392]
[130.42996216 164.55288696]
[117.17980957 169.26696777]
[103.26246643 171.29106140]
[102.36965179 186.26446533]
[101.47682953 201.23786926]
[109.43878937 211.38528442]
[108.38690186 223.83828735]
[99.42855072 231.96691895]
[98.31290436 246.92536926]
[97.19725800 261.88381958]
[96.97393036 276.88217163]
[97.64371490 291.86718750]
[98.31349945 306.85223389]
[98.98328400 321.83728027]
[99.65306854 336.82232666]
[100.32285309 351.80734253]
[100.99263763 366.79238892]
[101.66242218 381.77743530]
[113.69762421 388.49642944]
[120.78503418 400.19201660]
[121.16489410 413.75393677]
[114.84487915 425.63674927]
[103.57023621 432.78689575]
[104.01684570 447.78024292]
[104.46344757 462.77359009]
[104.91005707 477.76693726]
[105.35665894 492.76028442]
[106.02644348 507.74533081]
[106.91925812 522.71875000]
[107.81208038 537.69213867]
[116.35706329 551.00732422]
[109.39102173 564.17254639]
[110.28383636 579.14593506]
[111.17665100 594.11938477]
[112.06946564 609.09277344]
[121.25495148 597.23413086]
[135.62380981 592.92883301]
[149.81681824 597.78253174]
[158.54031372 609.98504639]
[158.54067993 624.98504639]
[149.81774902 637.18792725]
[135.62498474 642.04235840]
[121.25592041 637.73767090]
[112.06946564 625.87841797]
[111.17665100 640.85180664]
[110.28383636 655.82519531]
[124.89811707 659.38366699]
[138.64207458 665.49456787]
[151.07388306 673.96154785]
[161.79393005 684.51245117]
[170.45759583 696.80798340]
[176.78639221 710.45300293]
[180.57685852 725.00878906]
[181.70715332 740.00756836]
[180.14096069 754.96704102]
[175.92858887 769.40643311]
[169.20549011 782.86151123]
[160.18775940 794.89984131]
[149.16526794 805.13427734]
[136.49237061 813.23602295]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 196]
[20 195]
[21 194]
[22 185]
[23 184]
[24 183]
[25 182]
[27 180]
[28 179]
[29 178]
[32 177]
[33 176]
[34 175]
[35 174]
[36 173]
[40 168]
[41 167]
[42 166]
[43 165]
[44 164]
[45 163]
[46 162]
[47 161]
[56 160]
[57 159]
[58 158]
[60 155]
[61 154]
[62 153]
[75 138]
[77 136]
[78 135]
[80 133]
[81 126]
[82 125]
[83 124]
[88 123]
[89 122]
[90 121]
[92 119]
[93 118]
[96 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
