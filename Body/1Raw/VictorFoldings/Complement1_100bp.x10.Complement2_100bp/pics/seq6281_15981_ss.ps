%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[39.87789917 631.51654053]
[25.16078186 634.52233887]
[10.18011475 635.62139893]
[-4.81810379 634.79571533]
[-19.58759117 632.05883789]
[-33.88581848 627.45568848]
[-47.47800064 621.06188965]
[-60.14093399 612.98236084]
[-71.66668701 603.34985352]
[-81.86598969 592.32250977]
[-90.57136536 580.08135986]
[-97.63986969 566.82751465]
[-102.95542145 552.77856445]
[-106.43074036 538.16522217]
[-108.00875854 523.22741699]
[-107.66355896 508.21044922]
[-105.40081024 493.36090088]
[-101.25766754 478.92266846]
[-95.30217743 465.13281250]
[-87.63212585 452.21774292]
[-78.37345886 440.38958740]
[-67.67820740 429.84255981]
[-55.72201538 420.74981689]
[-42.70120239 413.26071167]
[-28.82958031 407.49822998]
[-14.33493805 403.55694580]
[0.54471058 401.50161743]
[15.56502819 401.36596680]
[17.34749413 386.47225952]
[19.12995911 371.57852173]
[20.91242599 356.68481445]
[9.17503643 366.02471924]
[-5.82263756 365.76058960]
[-17.22386169 356.01315308]
[-19.81615067 341.23886108]
[-12.41434383 328.19229126]
[1.59755158 322.83813477]
[15.81348610 327.62429810]
[23.73451424 340.36437988]
[27.05677414 325.73690796]
[30.37903404 311.10943604]
[33.70129395 296.48199463]
[32.32320404 294.04089355]
[31.82903481 290.90679932]
[32.48757172 287.41369629]
[34.44185638 283.98657227]
[37.68127060 281.09518433]
[33.80412674 266.71405029]
[45.08598709 255.62214661]
[49.27299881 241.21835327]
[53.46000671 226.81457520]
[47.91078568 216.06596375]
[51.28117371 204.03166199]
[62.28955841 197.31019592]
[66.69055939 182.97035217]
[63.02795792 168.53308105]
[74.47370911 157.61038208]
[78.87470245 143.27053833]
[83.27570343 128.93067932]
[87.67669678 114.59083557]
[80.98094177 101.74120331]
[85.23217010 87.88936615]
[97.98345184 81.00816345]
[102.38445282 66.66831970]
[106.78544617 52.32847214]
[111.18644714 37.98862457]
[110.71261597 28.86649132]
[115.76119232 23.46892548]
[120.37519836 9.19619179]
[122.15766144 -5.69752502]
[121.04201508 -20.65597916]
[119.92636871 -35.61443329]
[111.18408966 -48.80090714]
[117.95334625 -62.06840134]
[116.61511230 -77.00858307]
[115.05458832 -91.92719269]
[113.49406433 -106.84579468]
[111.93354034 -121.76440430]
[110.37302399 -136.68299866]
[108.81250000 -151.60160828]
[106.91920471 -166.48164368]
[104.69409180 -181.31568909]
[102.46897125 -196.14973450]
[100.24385071 -210.98377991]
[98.01873779 -225.81782532]
[93.65093994 -233.84030151]
[95.87262726 -240.88911438]
[93.86861420 -255.75465393]
[78.87149811 -257.23223877]
[64.61959076 -262.12915039]
[51.88146591 -270.18127441]
[41.34408188 -280.95440674]
[33.57570648 -293.86755371]
[28.99527740 -308.22430420]
[27.84981155 -323.25042725]
[30.20108414 -338.13558960]
[35.92229080 -352.07705688]
[44.70489883 -364.32299805]
[56.07526779 -374.21295166]
[69.42021179 -381.21362305]
[84.02005005 -384.94741821]
[99.08744049 -385.21304321]
[113.80980682 -381.99612427]
[127.39320374 -375.47015381]
[139.10507202 -365.98709106]
[148.31384277 -354.05831909]
[154.52285767 -340.32714844]
[157.39730835 -325.53411865]
[156.78215027 -310.47692871]
[152.71057129 -295.96768188]
[145.40216064 -282.78875732]
[135.25102234 -271.65093994]
[122.80461121 -263.15484619]
[108.73414612 -257.75866699]
[110.73815918 -242.89312744]
[112.85278320 -228.04293823]
[115.07789612 -213.20889282]
[117.30301666 -198.37484741]
[119.52812958 -183.54080200]
[121.75325012 -168.70675659]
[124.35614777 -166.32826233]
[125.93630981 -162.57084656]
[125.85819244 -157.92895508]
[123.73110199 -153.16213989]
[125.29162598 -138.24353027]
[126.85214996 -123.32492065]
[128.41267395 -108.40631866]
[129.97319031 -93.48771667]
[131.53372192 -78.56910706]
[134.61383057 -74.91918945]
[135.43379211 -69.29560089]
[132.91180420 -63.18405151]
[141.57427979 -51.06750488]
[134.88482666 -36.73007965]
[136.00047302 -21.77162743]
[137.11611938 -6.81317377]
[142.72612000 -20.72460175]
[151.25335693 -33.06503296]
[162.28176880 -43.23234940]
[175.27322388 -50.73046875]
[189.59388733 -55.19353867]
[204.54498291 -56.40379715]
[219.39701843 -54.30219269]
[233.42535400 -48.99126816]
[245.94549561 -40.73015213]
[256.34655762 -29.92192650]
[264.12106323 -17.09394455]
[268.88967896 -2.87211609]
[270.41970825 12.04964638]
[268.63650513 26.94327736]
[263.62710571 41.08208084]
[255.63589478 53.77619934]
[245.05279541 64.40625000]
[232.39418030 72.45357513]
[218.27769470 77.52552795]
[203.39210510 79.37463379]
[188.46371460 77.91067505]
[174.22091675 73.20507812]
[161.35864258 65.48743439]
[150.50447083 55.13431549]
[142.18801880 42.65086746]
[136.81503296 28.64618492]
[134.64793396 13.81020164]
[130.03392029 28.08293533]
[125.52629089 42.38962173]
[121.12529755 56.72946930]
[116.72429657 71.06931305]
[112.32330322 85.40916443]
[119.01905823 98.25879669]
[114.76782990 112.11063385]
[102.01654816 118.99183655]
[97.61554718 133.33168030]
[93.21455383 147.67152405]
[88.81355286 162.01138306]
[92.16136169 177.47431946]
[81.03040314 187.37133789]
[76.62940216 201.71119690]
[81.16777039 219.55732727]
[67.86379242 231.00158691]
[63.67678070 245.40536499]
[59.48976898 259.80914307]
[63.06742859 275.22055054]
[52.08505249 285.28219604]
[48.32875443 299.80426025]
[45.00649261 314.43170166]
[41.68423462 329.05917358]
[38.36197662 343.68661499]
[35.80614471 358.46728516]
[34.02367783 373.36099243]
[32.24121094 388.25473022]
[30.45874596 403.14843750]
[45.02285767 406.82470703]
[58.99726486 412.33325195]
[72.15249634 419.58364868]
[84.27253723 428.45681763]
[95.15835571 438.80703735]
[104.63120270 450.46438599]
[112.53553009 463.23739624]
[118.74152374 476.91635132]
[123.14729309 491.27664185]
[125.68048859 506.08242798]
[126.29950714 521.09057617]
[124.99418640 536.05468750]
[121.78596497 550.72900391]
[116.72751617 564.87255859]
[109.90191650 578.25311279]
[101.42123413 590.65100098]
[91.42473602 601.86248779]
[80.07658386 611.70361328]
[67.56310272 620.01275635]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 191]
[29 190]
[30 189]
[31 188]
[39 187]
[40 186]
[41 185]
[42 184]
[47 183]
[49 181]
[50 180]
[51 179]
[54 177]
[55 176]
[57 174]
[58 173]
[59 172]
[60 171]
[63 168]
[64 167]
[65 166]
[66 165]
[68 164]
[69 163]
[70 136]
[71 135]
[72 134]
[74 132]
[75 129]
[76 128]
[77 127]
[78 126]
[79 125]
[80 124]
[81 120]
[82 119]
[83 118]
[84 117]
[85 116]
[87 115]
[88 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
