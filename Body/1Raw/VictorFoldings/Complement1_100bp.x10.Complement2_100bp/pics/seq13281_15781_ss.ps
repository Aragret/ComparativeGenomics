%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[63.53048706 891.36682129]
[48.53688431 890.86218262]
[33.57634354 889.74639893]
[18.67376328 888.02130127]
[3.85394955 885.68975830]
[-10.85843086 882.75567627]
[-25.43889236 879.22399902]
[-39.86316299 875.10052490]
[-54.10724258 870.39208984]
[-68.14741516 865.10662842]
[-81.96031952 859.25286865]
[-95.52296448 852.84057617]
[-108.81276703 845.88037109]
[-121.80761719 838.38397217]
[-134.48588562 830.36370850]
[-146.82646179 821.83300781]
[-158.80882263 812.80603027]
[-170.41299438 803.29785156]
[-181.61970520 793.32421875]
[-192.41026306 782.90185547]
[-202.76673889 772.04797363]
[-212.67187500 760.78070068]
[-222.10919189 749.11883545]
[-231.06298828 737.08172607]
[-239.51835632 724.68939209]
[-247.46121216 711.96246338]
[-254.87835693 698.92218018]
[-261.75741577 685.59027100]
[-268.08697510 671.98876953]
[-273.85647583 658.14050293]
[-279.05633545 644.06835938]
[-283.67785645 629.79583740]
[-287.71340942 615.34674072]
[-291.15621948 600.74505615]
[-294.00057983 586.01507568]
[-296.24179077 571.18133545]
[-297.87606812 556.26849365]
[-298.90069580 541.30145264]
[-299.31399536 526.30505371]
[-299.11526489 511.30426025]
[-298.30484009 496.32406616]
[-296.88409424 481.38940430]
[-294.85534668 466.52511597]
[-292.22198486 451.75595093]
[-288.98840332 437.10647583]
[-285.15997314 422.60110474]
[-280.74310303 408.26394653]
[-275.74508667 394.11889648]
[-270.17428589 380.18945312]
[-264.03997803 366.49884033]
[-257.35232544 353.06985474]
[-250.12249756 339.92480469]
[-242.36251831 327.08557129]
[-234.08529663 314.57354736]
[-225.30462646 302.40957642]
[-216.03511047 290.61386108]
[-206.29216003 279.20605469]
[-196.09202576 268.20513916]
[-185.45166016 257.62945557]
[-174.38879395 247.49655151]
[-162.92181396 237.82331848]
[-151.06982422 228.62586975]
[-138.85253906 219.91949463]
[-126.29031372 211.71870422]
[-113.40403748 204.03712463]
[-100.21516418 196.88754272]
[-86.74564362 190.28187561]
[-73.01789856 184.23110962]
[-59.05477142 178.74531555]
[-44.87950897 173.83361816]
[-30.51569939 169.50419617]
[-15.98725510 165.76426697]
[-1.31835449 162.62004089]
[13.46658802 160.07675171]
[28.34296227 158.13864136]
[43.28601074 156.80892944]
[58.27085876 156.08982849]
[73.27256775 155.98252869]
[88.26617432 156.48722839]
[89.38182068 141.52877808]
[90.49746704 126.57032776]
[91.61312103 111.61187744]
[85.71572876 98.93463135]
[93.42842865 87.27247620]
[83.39209747 75.35988617]
[84.73661041 60.20578384]
[96.15528870 50.71108627]
[97.27094269 35.75263214]
[98.38658905 20.79417992]
[99.50223541 5.83572578]
[100.61788940 -9.12272739]
[86.05820465 -12.89836121]
[72.40675354 -19.21324348]
[60.10237885 -27.86437607]
[49.54060745 -38.57366180]
[41.06096268 -50.99684143]
[34.93602753 -64.73455811]
[31.36269379 -79.34520721]
[30.45582771 -94.35911560]
[32.24458313 -109.29364777]
[36.67145920 -123.66870880]
[43.59414673 -137.02221680]
[52.79011536 -148.92491150]
[63.96374893 -158.99415588]
[76.75585938 -166.90626526]
[90.75524139 -172.40692139]
[105.51186371 -175.31927490]
[120.55136871 -175.54972839]
[135.39028931 -173.09085083]
[149.55163574 -168.02169800]
[162.58015442 -160.50521851]
[174.05703735 -150.78305054]
[183.61337280 -139.16769409]
[190.94194031 -126.03255463]
[195.80715942 -111.79986572]
[198.05264282 -96.92715454]
[197.60620117 -81.89250946]
[194.48219299 -67.17924500]
[188.78103638 -53.26031494]
[180.68598938 -40.58316422]
[170.45729065 -29.55531311]
[158.42375183 -20.53125763]
[144.97218323 -13.80108356]
[130.53501892 -9.58113956]
[115.57633972 -8.00707912]
[114.46069336 6.95137405]
[113.34503937 21.90982819]
[112.22939301 36.86828232]
[111.11374664 51.82673264]
[120.99764252 62.91024399]
[120.07929993 78.09613800]
[108.38687897 88.38812256]
[114.28427124 101.06536865]
[106.57157135 112.72752380]
[105.45592499 127.68597412]
[104.34027100 142.64442444]
[103.22462463 157.60289001]
[118.12721252 159.32794189]
[132.94703674 161.65940857]
[147.65942383 164.59342957]
[162.23988342 168.12509155]
[176.66416931 172.24853516]
[190.90826416 176.95690918]
[204.94845581 182.24234009]
[218.76136780 188.09606934]
[232.32403564 194.50833130]
[245.61386108 201.46846008]
[258.60873413 208.96487427]
[271.28701782 216.98507690]
[283.62762451 225.51574707]
[295.61001587 234.54267883]
[307.21420288 244.05082703]
[318.42095947 254.02439880]
[329.21154785 264.44677734]
[339.56805420 275.30059814]
[349.47320557 286.56784058]
[358.91055298 298.22970581]
[367.86437988 310.26681519]
[376.31979370 322.65908813]
[384.26269531 335.38595581]
[391.67987061 348.42623901]
[398.55899048 361.75817871]
[404.88858032 375.35961914]
[410.65811157 389.20788574]
[415.85800171 403.27999878]
[420.47958374 417.55249023]
[424.51516724 432.00158691]
[427.95800781 446.60330200]
[430.80242920 461.33328247]
[433.04367065 476.16699219]
[434.67797852 491.07980347]
[435.70266724 506.04687500]
[436.11599731 521.04327393]
[435.91732788 536.04406738]
[435.10693359 551.02423096]
[433.68621826 565.95892334]
[431.65750122 580.82318115]
[429.02420044 595.59234619]
[425.79064941 610.24182129]
[421.96228027 624.74725342]
[417.54544067 639.08441162]
[412.54748535 653.22949219]
[406.97671509 667.15893555]
[400.84243774 680.84954834]
[394.15481567 694.27856445]
[386.92501831 707.42364502]
[379.16510010 720.26287842]
[370.88790894 732.77490234]
[362.10726929 744.93896484]
[352.83776855 756.73468018]
[343.09487915 768.14251709]
[332.89477539 779.14343262]
[322.25442505 789.71917725]
[311.19158936 799.85211182]
[299.72463989 809.52539062]
[287.87268066 818.72283936]
[275.65542603 827.42926025]
[263.09320068 835.63012695]
[250.20695496 843.31170654]
[237.01809692 850.46130371]
[223.54859924 857.06701660]
[209.82087708 863.11785889]
[195.85775757 868.60369873]
[181.68251038 873.51544189]
[167.31872559 877.84484863]
[152.79028320 881.58483887]
[138.12139893 884.72912598]
[123.33645630 887.27246094]
[108.46009064 889.21057129]
[93.51704407 890.54034424]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[79 137]
[80 136]
[81 135]
[82 134]
[84 132]
[87 129]
[88 128]
[89 127]
[90 126]
[91 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
