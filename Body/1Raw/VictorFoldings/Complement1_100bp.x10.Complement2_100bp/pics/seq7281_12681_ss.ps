%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[58.12224960 297.46206665]
[62.59420395 311.80099487]
[65.23370361 326.58734131]
[65.99911499 341.58792114]
[64.87836456 356.56616211]
[61.88913727 371.28579712]
[57.07857513 385.51467896]
[50.52254105 399.02844238]
[42.32444000 411.61392212]
[32.61356735 423.07266235]
[21.54307365 433.22387695]
[9.28755951 441.90750122]
[-3.95968938 448.98660278]
[-17.98974419 454.34951782]
[-32.58132935 457.91165161]
[-47.50431824 459.61685181]
[-62.52334976 459.43820190]
[-77.40155029 457.37854004]
[-91.90428162 453.47030640]
[-105.80280304 447.77520752]
[-118.87791443 440.38299561]
[-130.92340088 431.41027832]
[-141.74929810 420.99859619]
[-151.18486023 409.31213379]
[-159.08128357 396.53521729]
[-165.31401062 382.86932373]
[-169.78475952 368.53002930]
[-172.42300415 353.74343872]
[-173.18716431 338.74279785]
[-172.06515503 323.76467896]
[-169.07467651 309.04528809]
[-164.26292419 294.81680298]
[-157.70574951 281.30358887]
[-149.50659180 268.71878052]
[-139.79475403 257.26089478]
[-128.72340393 247.11059570]
[-116.46716309 238.42799377]
[-103.21931458 231.35000610]
[-89.18881226 225.98828125]
[-74.59692383 222.42736816]
[-59.67379379 220.72343445]
[-44.65477753 220.90335083]
[-29.77674675 222.96427917]
[-15.27434921 226.87371826]
[-1.37630904 232.57000732]
[11.69818115 239.96330261]
[20.65887642 227.93392944]
[29.61957359 215.90455627]
[31.01759338 201.07569885]
[45.46652985 194.63064575]
[54.42722702 182.60125732]
[63.38792419 170.57188416]
[70.56328583 157.39941406]
[75.81000519 143.34693909]
[73.01322174 128.71726990]
[85.08880615 118.49519348]
[90.33552551 104.44272614]
[94.52253723 90.03894043]
[97.62664795 75.36363983]
[100.73075867 60.68833923]
[103.83486938 46.01303482]
[106.93898010 31.33773422]
[102.22498322 16.23512459]
[112.42858887 5.38451576]
[115.53269958 -9.29078674]
[113.91306305 -14.25303173]
[114.31829071 -18.87786484]
[116.28078461 -22.45049477]
[119.11699677 -24.54529953]
[122.87329865 -39.06735992]
[126.62960052 -53.58941650]
[130.38591003 -68.11148071]
[133.81697083 -82.71379852]
[136.92106628 -97.38909912]
[140.02517700 -112.06440735]
[143.12928772 -126.73970795]
[146.23339844 -141.41500854]
[146.23339844 -156.41500854]
[143.12928772 -171.09031677]
[140.02517700 -185.76560974]
[136.92106628 -200.44091797]
[133.81697083 -215.11622620]
[130.71286011 -229.79151917]
[127.60874176 -244.46682739]
[112.55239868 -244.47624207]
[97.82710266 -247.61622620]
[84.07659912 -253.74952698]
[71.90199280 -262.60800171]
[61.83549881 -273.80441284]
[54.31719208 -286.84927368]
[49.67573547 -301.17236328]
[48.11403275 -316.14749146]
[49.70035553 -331.12002563]
[54.36535645 -345.43545532]
[61.90510559 -358.46795654]
[71.98999023 -369.64779663]
[84.17914581 -378.48623657]
[97.93972015 -384.59692383]
[112.67015076 -387.71267700]
[127.72649384 -387.69735718]
[142.45054626 -384.55157471]
[156.19863892 -378.41287231]
[168.36976624 -369.54959106]
[178.43185425 -358.34924316]
[185.94502258 -345.30142212]
[190.58085632 -330.97650146]
[192.13665771 -316.00076294]
[190.54444885 -301.02883911]
[185.87380981 -286.71524048]
[178.32893372 -273.68569946]
[168.23965454 -262.50985718]
[156.04702759 -253.67619324]
[142.28404236 -247.57093811]
[145.38815308 -232.89562988]
[148.49226379 -218.22032166]
[151.59637451 -203.54502869]
[154.70048523 -188.86972046]
[157.80459595 -174.19442749]
[160.90870667 -159.51911926]
[164.61369324 -174.05435181]
[171.22117615 -187.52066040]
[180.45019531 -199.34541321]
[191.90834045 -209.02586365]
[205.10839844 -216.15036011]
[219.48910522 -220.41596985]
[234.43896484 -221.64132690]
[249.32232666 -219.77432251]
[263.50631714 -214.89434814]
[276.38784790 -207.20890808]
[287.41918945 -197.04476929]
[296.13125610 -184.83412170]
[302.15365601 -171.09619141]
[305.23025513 -156.41510010]
[305.23028564 -141.41510010]
[302.15368652 -126.73399353]
[296.13134766 -112.99604034]
[287.41931152 -100.78538513]
[276.38800049 -90.62122345]
[263.50646973 -82.93573761]
[249.32249451 -78.05573273]
[234.43913269 -76.18869019]
[219.48927307 -77.41401672]
[205.10856628 -81.67959595]
[191.90847778 -88.80406189]
[180.45031738 -98.48447418]
[171.22126770 -110.30921936]
[164.61375427 -123.77549744]
[160.90870667 -138.31089783]
[157.80459595 -123.63559723]
[154.70048523 -108.96029663]
[151.59637451 -94.28498840]
[148.49226379 -79.60968781]
[150.09878540 -76.47098541]
[150.26486206 -72.39821625]
[148.56802368 -68.07686615]
[144.90795898 -64.35517883]
[141.15165710 -49.83311844]
[137.39535522 -35.31105804]
[133.63905334 -20.78899956]
[130.20799255 -6.18667650]
[127.10388947 8.48862553]
[132.03991699 22.54155922]
[121.61428070 34.44184494]
[118.51016998 49.11714554]
[115.40605927 63.79244995]
[112.30194855 78.46775055]
[109.19783783 93.14305115]
[120.36199951 83.12499237]
[135.01876831 79.93453979]
[149.33691406 84.40566254]
[159.57368469 95.36962128]
[163.05323792 109.96046448]
[158.86601257 124.36418152]
[148.10653687 134.81567383]
[133.58731079 138.58294678]
[119.10364532 134.68125916]
[108.44152069 124.13047028]
[104.38800049 109.68944550]
[99.14128113 123.74191284]
[101.56278229 139.37670898]
[89.86248016 148.59365845]
[84.61576080 162.64613342]
[95.74571228 152.59008789]
[109.31982422 146.20701599]
[124.16380310 144.04914856]
[138.99348450 146.30313110]
[152.52597046 152.77400208]
[163.59054565 162.90193176]
[171.23001099 175.81079102]
[174.78350830 190.38380432]
[173.94360352 205.36026001]
[168.78294373 219.44456482]
[159.74800110 231.41828918]
[147.62037659 240.24555969]
[133.44923401 245.16273499]
[118.46051788 245.74444580]
[103.95089722 241.94036865]
[91.17561340 234.07957458]
[81.23984528 222.84211731]
[75.00313568 209.20013428]
[73.00502777 194.33381653]
[75.41729736 179.53257751]
[66.45660400 191.56196594]
[57.49590683 203.59133911]
[55.45695877 219.28060913]
[41.64895248 224.86524963]
[32.68825531 236.89462280]
[23.72755814 248.92399597]
[34.55433273 259.33477783]
[43.99087906 271.02044678]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 208]
[47 207]
[48 206]
[50 204]
[51 203]
[52 202]
[53 182]
[54 181]
[56 179]
[57 178]
[58 167]
[59 166]
[60 165]
[61 164]
[62 163]
[64 161]
[65 160]
[69 159]
[70 158]
[71 157]
[72 156]
[73 152]
[74 151]
[75 150]
[76 149]
[77 148]
[78 119]
[79 118]
[80 117]
[81 116]
[82 115]
[83 114]
[84 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
