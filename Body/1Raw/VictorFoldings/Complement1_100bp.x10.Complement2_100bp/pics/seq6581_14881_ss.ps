%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[141.04409790 985.07324219]
[126.15265656 983.25378418]
[111.34979248 980.81646729]
[96.66113281 977.76544189]
[82.11209869 974.10607910]
[67.72789001 969.84460449]
[53.53339767 964.98852539]
[39.55320358 959.54614258]
[25.81150055 953.52691650]
[12.33208466 946.94128418]
[-0.86171031 939.80059814]
[-13.74704361 932.11730957]
[-26.30160904 923.90460205]
[-38.50366974 915.17675781]
[-50.33210373 905.94891357]
[-61.76643753 896.23699951]
[-72.78686523 886.05780029]
[-83.37432098 875.42901611]
[-93.51046753 864.36901855]
[-103.17776489 852.89691162]
[-112.35946655 841.03265381]
[-121.03968048 828.79663086]
[-129.20338440 816.21020508]
[-136.83645630 803.29498291]
[-143.92564392 790.07348633]
[-150.45872498 776.56848145]
[-156.42434692 762.80346680]
[-161.81221008 748.80218506]
[-166.61296082 734.58886719]
[-170.81831360 720.18817139]
[-174.42097473 705.62493896]
[-177.41471863 690.92449951]
[-179.79434204 676.11230469]
[-181.55575562 661.21386719]
[-182.69587708 646.25506592]
[-183.21275330 631.26177979]
[-183.10548401 616.26000977]
[-182.37425232 601.27563477]
[-181.02032471 586.33471680]
[-179.04605103 571.46301270]
[-176.45484924 556.68627930]
[-173.25119019 542.03015137]
[-169.44064331 527.52001953]
[-165.02978516 513.18090820]
[-160.02626038 499.03768921]
[-154.43873596 485.11486816]
[-148.27687073 471.43655396]
[-141.55134583 458.02636719]
[-134.27380371 444.90759277]
[-126.45682526 432.10287476]
[-118.11396790 419.63446045]
[-109.25965881 407.52386475]
[-99.90923309 395.79205322]
[-90.07887268 384.45938110]
[-79.78559875 373.54547119]
[-69.04723358 363.06915283]
[-57.88236618 353.04864502]
[-46.31031799 343.50122070]
[-34.35113525 334.44345093]
[-22.02550888 325.89099121]
[-9.35478401 317.85867310]
[3.63910532 310.36041260]
[16.93366432 303.40914917]
[30.50587845 297.01693726]
[44.33225250 291.19485474]
[58.38884735 285.95294189]
[72.65132904 281.30032349]
[87.09500885 277.24502563]
[101.69488525 273.79406738]
[116.42567444 270.95343018]
[114.20055389 256.11938477]
[111.97543335 241.28533936]
[109.75032043 226.45129395]
[100.21220398 219.01147461]
[98.23702240 206.67120361]
[105.42219543 195.95971680]
[103.41817474 181.09417725]
[101.41416168 166.22865295]
[99.41014862 151.36312866]
[97.40613556 136.49760437]
[95.40212250 121.63207245]
[93.39810944 106.76654053]
[90.05506134 102.72451019]
[89.21466827 97.09716034]
[91.56256866 91.42933655]
[90.00204468 76.51072693]
[88.44152069 61.59212494]
[77.11212158 71.42292786]
[62.33530807 68.84498596]
[55.00399780 55.75866318]
[60.52256012 41.81070709]
[74.82291412 37.28303528]
[87.36251831 45.51186371]
[86.91590881 30.51851273]
[86.46930695 15.52516365]
[86.02269745 0.53181344]
[71.62268066 -4.20266628]
[59.71229935 -13.57915783]
[51.72978592 -26.46540260]
[48.63907242 -41.30532455]
[50.81337738 -56.30693054]
[57.99013901 -69.65870667]
[69.30273438 -79.74835968]
[83.38510132 -85.35750580]
[98.53674316 -85.80883026]
[112.92800903 -81.04782104]
[124.82109070 -71.64939880]
[132.77984619 -58.74846268]
[135.84320068 -43.90287018]
[133.64126587 -28.90529442]
[126.43990326 -15.56676865]
[115.10873413 -5.49798250]
[101.01604462 0.08520748]
[101.46265411 15.07855701]
[101.90926361 30.07190704]
[102.35586548 45.06525803]
[103.36012268 60.03160095]
[104.92064667 74.95020294]
[106.48117065 89.86881256]
[108.26364136 104.76252747]
[110.26765442 119.62805939]
[112.27166748 134.49359131]
[114.27568054 149.35911560]
[116.27969360 164.22463989]
[118.28370667 179.09016418]
[120.28771973 193.95570374]
[131.87800598 208.26467896]
[124.58436584 224.22618103]
[126.80947876 239.06022644]
[129.03459167 253.89427185]
[131.25971985 268.72830200]
[146.17564392 267.12191772]
[161.14547729 266.13739014]
[176.14331055 265.77645874]
[191.14318848 266.03970337]
[206.11911011 266.92669678]
[221.04519653 268.43591309]
[235.89556885 270.56469727]
[250.64453125 273.30941772]
[265.26654053 276.66528320]
[279.73629761 280.62652588]
[294.02877808 285.18621826]
[308.11917114 290.33654785]
[321.98315430 296.06854248]
[335.59667969 302.37228394]
[348.93618774 309.23687744]
[361.97857666 316.65045166]
[374.70132446 324.60012817]
[387.08233643 333.07220459]
[399.10021973 342.05194092]
[410.73413086 351.52386475]
[421.96398926 361.47152710]
[432.77029419 371.87771606]
[443.13436890 382.72442627]
[453.03826904 393.99288940]
[462.46484375 405.66360474]
[471.39776611 417.71630859]
[479.82159424 430.13018799]
[487.72174072 442.88375854]
[495.08450317 455.95489502]
[501.89712524 469.32101440]
[508.14788818 482.95898438]
[513.82586670 496.84512329]
[518.92132568 510.95547485]
[523.42541504 525.26556396]
[527.33032227 539.75061035]
[530.62927246 554.38562012]
[533.31658936 569.14514160]
[535.38757324 584.00366211]
[536.83874512 598.93548584]
[537.66741943 613.91479492]
[537.87231445 628.91552734]
[537.45306396 643.91186523]
[536.41027832 658.87774658]
[534.74584961 673.78735352]
[532.46270752 688.61474609]
[529.56469727 703.33435059]
[526.05682373 717.92065430]
[521.94531250 732.34844971]
[517.23712158 746.59271240]
[511.94049072 760.62872314]
[506.06457520 774.43231201]
[499.61953735 787.97955322]
[492.61651611 801.24688721]
[485.06765747 814.21148682]
[476.98605347 826.85083008]
[468.38562012 839.14300537]
[459.28134155 851.06683350]
[449.68890381 862.60156250]
[439.62493896 873.72729492]
[429.10687256 884.42474365]
[418.15292358 894.67541504]
[406.78201294 904.46154785]
[395.01388550 913.76617432]
[382.86889648 922.57324219]
[370.36804199 930.86749268]
[357.53295898 938.63446045]
[344.38592529 945.86083984]
[330.94964600 952.53405762]
[317.24740601 958.64257812]
[303.30291748 964.17584229]
[289.14031982 969.12420654]
[274.78414917 973.47912598]
[260.25924683 977.23315430]
[245.59074402 980.37963867]
[230.80406189 982.91326904]
[215.92477417 984.82958984]
[200.97865295 986.12524414]
[185.99157715 986.79809570]
[170.98947144 986.84692383]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 131]
[71 130]
[72 129]
[73 128]
[76 126]
[77 125]
[78 124]
[79 123]
[80 122]
[81 121]
[82 120]
[85 119]
[86 118]
[87 117]
[93 116]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
