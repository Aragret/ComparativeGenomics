%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50559235 92.05125427]
[62.53131485 91.15413666]
[47.59057999 89.80946350]
[32.69675827 88.01843262]
[17.86318016 85.78264618]
[3.10312748 83.10411072]
[-11.57018948 79.98521423]
[-26.14363670 76.42875671]
[-40.60416794 72.43791962]
[-54.93883896 68.01627350]
[-69.13481903 63.16778183]
[-83.17939758 57.89677811]
[-97.06000519 52.20798492]
[-110.76422119 46.10649109]
[-124.27977753 39.59775925]
[-137.59455872 32.68761826]
[-150.69667053 25.38224983]
[-163.57438660 17.68819618]
[-176.21615601 9.61234283]
[-188.61067200 1.16191983]
[-200.74684143 -7.65550900]
[-212.61380005 -16.83205032]
[-224.20094299 -26.35949135]
[-235.49786377 -36.22930145]
[-246.49447632 -46.43264771]
[-257.18093872 -56.96039581]
[-267.54763794 -67.80312347]
[-277.58535767 -78.95112610]
[-287.28509521 -90.39441681]
[-296.63815308 -102.12275696]
[-305.63616943 -114.12565613]
[-314.27108765 -126.39235687]
[-322.53515625 -138.91189575]
[-330.42102051 -151.67303467]
[-337.92160034 -164.66438293]
[-345.03018188 -177.87431335]
[-351.74038696 -191.29096985]
[-358.04623413 -204.90235901]
[-363.94204712 -218.69630432]
[-369.42257690 -232.66046143]
[-374.48291016 -246.78231812]
[-379.11853027 -261.04922485]
[-383.32525635 -275.44842529]
[-387.09936523 -289.96704102]
[-390.43743896 -304.59204102]
[-393.33648682 -319.31036377]
[-395.79397583 -334.10885620]
[-397.80761719 -348.97421265]
[-399.37567139 -363.89315796]
[-400.49673462 -378.85232544]
[-401.16973877 -393.83834839]
[-401.39416504 -408.83779907]
[-401.16976929 -423.83724976]
[-400.49676514 -438.82324219]
[-399.37573242 -453.78244019]
[-397.80767822 -468.70138550]
[-395.79403687 -483.56674194]
[-393.33660889 -498.36520386]
[-390.43756104 -513.08355713]
[-387.09948730 -527.70855713]
[-383.32540894 -542.22717285]
[-379.11871338 -556.62640381]
[-374.48309326 -570.89331055]
[-369.42279053 -585.01513672]
[-363.94226074 -598.97930908]
[-358.04644775 -612.77325439]
[-351.74063110 -626.38464355]
[-345.03042603 -639.80133057]
[-337.92187500 -653.01129150]
[-330.42132568 -666.00262451]
[-322.53546143 -678.76379395]
[-314.27139282 -691.28332520]
[-305.63650513 -703.55004883]
[-296.63848877 -715.55291748]
[-287.28546143 -727.28131104]
[-277.58575439 -738.72460938]
[-267.54803467 -749.87261963]
[-257.18130493 -760.71533203]
[-246.49487305 -771.24310303]
[-235.49827576 -781.44647217]
[-224.20137024 -791.31628418]
[-212.61424255 -800.84375000]
[-200.74729919 -810.02032471]
[-188.61112976 -818.83776855]
[-176.21661377 -827.28814697]
[-163.57485962 -835.36401367]
[-150.69715881 -843.05810547]
[-137.59506226 -850.36346436]
[-124.28028107 -857.27362061]
[-110.76473236 -863.78240967]
[-97.06052399 -869.88391113]
[-83.17992401 -875.57269287]
[-69.13534546 -880.84375000]
[-54.93937302 -885.69226074]
[-40.60470581 -890.11389160]
[-26.14418030 -894.10473633]
[-11.57073784 -897.66125488]
[3.10257578 -900.78015137]
[17.86262512 -903.45867920]
[32.69620132 -905.69451904]
[47.59001923 -907.48553467]
[62.53075409 -908.83026123]
[77.50502777 -909.72735596]
[92.49943542 -910.17614746]
[107.50056458 -910.17614746]
[122.49497223 -909.72735596]
[137.46925354 -908.83026123]
[152.40997314 -907.48553467]
[167.30380249 -905.69451904]
[182.13737488 -903.45867920]
[196.89743042 -900.78015137]
[211.57073975 -897.66125488]
[226.14418030 -894.10473633]
[240.60470581 -890.11389160]
[254.93937683 -885.69226074]
[269.13534546 -880.84375000]
[283.17993164 -875.57269287]
[297.06051636 -869.88391113]
[310.76473999 -863.78240967]
[324.28027344 -857.27362061]
[337.59506226 -850.36346436]
[350.69717407 -843.05810547]
[363.57485962 -835.36401367]
[376.21661377 -827.28814697]
[388.61111450 -818.83776855]
[400.74728394 -810.02032471]
[412.61425781 -800.84375000]
[424.20135498 -791.31628418]
[435.49829102 -781.44647217]
[446.49487305 -771.24310303]
[457.18130493 -760.71533203]
[467.54803467 -749.87261963]
[477.58575439 -738.72460938]
[487.28546143 -727.28131104]
[496.63848877 -715.55291748]
[505.63650513 -703.55004883]
[514.27142334 -691.28332520]
[522.53546143 -678.76379395]
[530.42132568 -666.00262451]
[537.92187500 -653.01129150]
[545.03045654 -639.80133057]
[551.74060059 -626.38464355]
[558.04644775 -612.77325439]
[563.94226074 -598.97930908]
[569.42279053 -585.01513672]
[574.48309326 -570.89331055]
[579.11871338 -556.62640381]
[583.32543945 -542.22717285]
[587.09948730 -527.70855713]
[590.43756104 -513.08355713]
[593.33660889 -498.36520386]
[595.79406738 -483.56674194]
[597.80767822 -468.70138550]
[599.37573242 -453.78244019]
[600.49676514 -438.82324219]
[601.16973877 -423.83724976]
[601.39416504 -408.83779907]
[601.16973877 -393.83834839]
[600.49670410 -378.85232544]
[599.37567139 -363.89315796]
[597.80761719 -348.97421265]
[595.79394531 -334.10885620]
[593.33648682 -319.31036377]
[590.43743896 -304.59204102]
[587.09936523 -289.96704102]
[583.32525635 -275.44842529]
[579.11853027 -261.04922485]
[574.48291016 -246.78231812]
[569.42260742 -232.66046143]
[563.94201660 -218.69630432]
[558.04620361 -204.90235901]
[551.74035645 -191.29096985]
[545.03015137 -177.87431335]
[537.92156982 -164.66438293]
[530.42102051 -151.67303467]
[522.53515625 -138.91189575]
[514.27105713 -126.39235687]
[505.63616943 -114.12565613]
[496.63815308 -102.12275696]
[487.28509521 -90.39441681]
[477.58535767 -78.95112610]
[467.54763794 -67.80312347]
[457.18093872 -56.96039581]
[446.49447632 -46.43264771]
[435.49786377 -36.22930145]
[424.20092773 -26.35949135]
[412.61380005 -16.83205032]
[400.74685669 -7.65550900]
[388.61065674 1.16191983]
[376.21615601 9.61234283]
[363.57437134 17.68819618]
[350.69668579 25.38224983]
[337.59457397 32.68761826]
[324.27978516 39.59775925]
[310.76422119 46.10649109]
[297.05999756 52.20798492]
[283.17941284 57.89677811]
[269.13482666 63.16778183]
[254.93884277 68.01627350]
[240.60417175 72.43791962]
[226.14363098 76.42875671]
[211.57019043 79.98521423]
[196.89686584 83.10411072]
[182.13682556 85.78264618]
[167.30323792 88.01843262]
[152.40942383 89.80946350]
[137.46868896 91.15413666]
[122.49440765 92.05125427]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
