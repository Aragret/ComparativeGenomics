%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[187.02754211 641.02105713]
[176.37496948 630.45245361]
[166.46017456 619.18884277]
[157.32841492 607.28149414]
[149.02134705 594.78491211]
[141.57688904 581.75598145]
[135.02897644 568.25421143]
[129.40753174 554.34118652]
[124.73816681 540.08038330]
[121.04219818 525.53692627]
[118.33649445 510.77709961]
[116.63340759 495.86828613]
[115.94068909 480.87850952]
[116.26152039 465.87619019]
[117.59442139 450.92974854]
[119.93331146 436.10736084]
[123.26753235 421.47671509]
[127.58186340 407.10455322]
[132.85661316 393.05639648]
[139.06771851 379.39642334]
[146.18684387 366.18692017]
[154.18148804 353.48815918]
[163.01519775 341.35809326]
[172.64765930 329.85208130]
[183.03491211 319.02258301]
[194.12956238 308.91903687]
[205.88099670 299.58755493]
[218.23559570 291.07067871]
[210.57499695 278.17434692]
[202.91439819 265.27801514]
[195.25379944 252.38169861]
[187.59320068 239.48536682]
[179.93261719 226.58905029]
[172.27201843 213.69271851]
[164.61141968 200.79638672]
[156.95082092 187.90007019]
[148.53619385 175.48257446]
[139.39739990 163.58793640]
[130.25859070 151.69329834]
[121.11978912 139.79867554]
[111.98098755 127.90403748]
[102.84218597 116.00940704]
[87.18053436 110.00201416]
[85.16252136 93.34957123]
[75.84763336 81.59231567]
[66.53275299 69.83506775]
[51.89833069 63.82306290]
[50.05941772 49.04241180]
[40.74453354 37.28516006]
[31.42965317 25.52790833]
[18.84273529 33.70739365]
[5.54517698 40.67226410]
[-8.34615707 46.36131668]
[-22.70918846 50.72454834]
[-37.41769028 53.72361755]
[-52.34240341 55.33216858]
[-67.35216522 55.53606415]
[-82.31506348 54.33350754]
[-97.09960175 51.73507690]
[-111.57585144 47.76359940]
[-125.61659241 42.45397949]
[-139.09843445 35.85288239]
[-151.90289307 28.01831818]
[-163.91743469 19.01913643]
[-175.03646851 8.93442822]
[-185.16230774 -2.14718342]
[-194.20591736 -14.12830830]
[-202.08786011 -26.90365601]
[-208.73886108 -40.36095047]
[-214.10044861 -54.38192749]
[-218.12551880 -68.84336853]
[-220.77870178 -83.61817932]
[-222.03666687 -98.57652283]
[-221.88836670 -113.58693695]
[-220.33511353 -128.51750183]
[-217.39054871 -143.23701477]
[-213.08055115 -157.61610413]
[-207.44299316 -171.52842712]
[-200.52742004 -184.85168457]
[-192.39462280 -197.46881104]
[-183.11605835 -209.26893616]
[-172.77326965 -220.14831543]
[-161.45715332 -230.01138306]
[-149.26715088 -238.77143860]
[-136.31040955 -246.35150146]
[-122.70078278 -252.68495178]
[-108.55788422 -257.71612549]
[-94.00599670 -261.40081787]
[-79.17300415 -263.70663452]
[-64.18926239 -264.61334229]
[-49.18646240 -264.11294556]
[-34.29644394 -262.20983887]
[-19.65006447 -258.92074585]
[-5.37604046 -254.27461243]
[8.40018463 -248.31222534]
[21.55754089 -241.08598328]
[33.98040009 -232.65942383]
[45.55958939 -223.10656738]
[56.19334030 -212.51139832]
[65.78820801 -200.96701050]
[74.25987244 -188.57485962]
[81.53387451 -175.44384766]
[87.54629517 -161.68937683]
[92.24429321 -147.43234253]
[95.58658600 -132.79800415]
[97.54379272 -117.91500854]
[98.09871674 -102.91412354]
[97.24648285 -87.92719269]
[94.99458313 -73.08591461]
[91.36280060 -58.52072906]
[86.38305664 -44.35963440]
[80.09911346 -30.72708130]
[72.56619263 -17.74287415]
[63.85050201 -5.52112389]
[54.02863312 5.83076382]
[43.18690491 16.21302605]
[52.50178528 27.97027779]
[61.81666946 39.72752762]
[75.78482819 44.89857483]
[78.29000854 60.52018356]
[87.60488892 72.27743530]
[96.91976929 84.03468323]
[108.38700867 86.07028198]
[115.55124664 95.25260162]
[114.73682404 106.87060547]
[123.87562561 118.76523590]
[133.01441956 130.65986633]
[142.15322876 142.55450439]
[151.29202271 154.44912720]
[160.43083191 166.34376526]
[161.38249207 151.37399292]
[170.86233521 139.74932861]
[185.33459473 135.80549622]
[199.40147400 141.01344299]
[207.81639099 153.43074036]
[207.44078064 168.42604065]
[198.41473389 180.40646362]
[184.10475159 184.90361023]
[169.84715271 180.23947144]
[177.50773621 193.13578796]
[185.16833496 206.03211975]
[192.82893372 218.92845154]
[200.48953247 231.82476807]
[208.15013123 244.72109985]
[215.81072998 257.61743164]
[223.47132874 270.51376343]
[231.13192749 283.41009521]
[244.52105713 276.63482666]
[258.33703613 270.77890015]
[272.51681519 265.86907959]
[286.99572754 261.92773438]
[301.70767212 258.97283936]
[316.58557129 257.01788330]
[331.56146240 256.07180786]
[346.56707764 256.13891602]
[361.53393555 257.21890259]
[376.39373779 259.30682373]
[391.07867432 262.39318848]
[405.52172852 266.46386719]
[419.65704346 271.50033569]
[433.42010498 277.47958374]
[446.74810791 284.37432861]
[459.58023071 292.15310669]
[471.85791016 300.78045654]
[483.52517700 310.21697998]
[494.52877808 320.41961670]
[504.81845093 331.34185791]
[514.34735107 342.93380737]
[523.07189941 355.14263916]
[530.95227051 367.91259766]
[537.95263672 381.18542480]
[544.04095459 394.90057373]
[549.18951416 408.99545288]
[553.37475586 423.40573120]
[556.57757568 438.06570435]
[558.78344727 452.90847778]
[559.98223877 467.86627197]
[560.16845703 482.87088013]
[559.34130859 497.85382080]
[557.50457764 512.74676514]
[554.66656494 527.48168945]
[550.84033203 541.99145508]
[546.04321289 556.20977783]
[540.29718018 570.07183838]
[533.62847900 583.51428223]
[526.06744385 596.47595215]
[517.64862061 608.89752197]
[508.41040039 620.72247314]
[498.39498901 631.89672852]
[487.64804077 642.36938477]
[476.21859741 652.09259033]
[464.15881348 661.02197266]
[451.52371216 669.11688232]
[438.37097168 676.34033203]
[424.76055908 682.65936279]
[410.75460815 688.04510498]
[396.41702271 692.47302246]
[381.81323242 695.92291260]
[367.00982666 698.37908936]
[352.07440186 699.83020020]
[337.07507324 700.26977539]
[322.08029175 699.69567871]
[307.15847778 698.11065674]
[292.37771606 695.52185059]
[277.80545044 691.94104004]
[263.50814819 687.38470459]
[249.55108643 681.87353516]
[235.99790955 675.43267822]
[222.91047668 668.09155273]
[210.34851074 659.88366699]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 147]
[29 146]
[30 145]
[31 144]
[32 143]
[33 142]
[34 141]
[35 140]
[36 139]
[37 130]
[38 129]
[39 128]
[40 127]
[41 126]
[42 125]
[44 122]
[45 121]
[46 120]
[48 118]
[49 117]
[50 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
