%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAGxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[118.97251892 828.86547852]
[104.12706757 826.69598389]
[89.40821075 823.78924561]
[74.85253906 820.15240479]
[60.49624634 815.79461670]
[46.37501907 810.72656250]
[32.52396393 804.96093750]
[18.97751999 798.51208496]
[5.76936674 791.39599609]
[-7.06766033 783.63037109]
[-19.50164604 775.23455811]
[-31.50167656 766.22937012]
[-43.03791809 756.63726807]
[-54.08168793 746.48199463]
[-64.60553741 735.78887939]
[-74.58329010 724.58447266]
[-83.99014282 712.89666748]
[-92.80271912 700.75451660]
[-100.99909973 688.18817139]
[-108.55890656 675.22888184]
[-115.46334839 661.90887451]
[-121.69526672 648.26123047]
[-127.23915100 634.31994629]
[-132.08122253 620.11968994]
[-136.20945740 605.69567871]
[-139.61358643 591.08380127]
[-142.28512573 576.32049561]
[-144.21746826 561.44232178]
[-145.40577698 546.48626709]
[-145.84712219 531.48968506]
[-145.54039001 516.48968506]
[-144.48635864 501.52359009]
[-142.68763733 486.62869263]
[-140.14869690 471.84194946]
[-136.87585449 457.20013428]
[-132.87724304 442.73965454]
[-128.16281128 428.49649048]
[-122.74427032 414.50601196]
[-116.63509369 400.80300903]
[-109.85047913 387.42156982]
[-102.40727997 374.39495850]
[-94.32401276 361.75555420]
[-85.62077332 349.53475952]
[-76.31919098 337.76300049]
[-66.44239807 326.46951294]
[-56.01494980 315.68237305]
[-45.06276703 305.42840576]
[-33.61308289 295.73312378]
[-21.69435692 286.62060547]
[-9.33622551 278.11352539]
[3.43058801 270.23300171]
[16.57434273 262.99865723]
[30.06236076 256.42846680]
[43.86111069 250.53878784]
[57.93628311 245.34422302]
[72.25289154 240.85771179]
[86.77532959 237.09040833]
[101.46750641 234.05166626]
[116.29288483 231.74903870]
[114.73236847 216.83044434]
[113.17184448 201.91183472]
[111.61132050 186.99322510]
[109.05548859 172.21257019]
[105.51581573 157.63619995]
[100.88267517 151.87808228]
[102.03366852 142.81646729]
[98.71141052 128.18901062]
[95.38915253 113.56154633]
[86.03180695 103.17252350]
[89.98339081 89.76071930]
[86.66113281 75.13325500]
[83.33887482 60.50579453]
[80.01660919 45.87833405]
[76.46897125 42.04932022]
[74.90155792 37.67936707]
[75.18882751 33.61334610]
[76.88807678 30.52386665]
[74.22228241 15.76265049]
[71.55648804 1.00143313]
[61.48979568 -11.20398521]
[66.84204102 -25.10372543]
[64.17624664 -39.86494064]
[61.51044846 -54.62615967]
[52.09022522 -42.95314026]
[37.19032288 -41.22312546]
[25.34608650 -50.42715073]
[23.34242821 -65.29272461]
[32.32713699 -77.30417633]
[47.15336227 -79.58080292]
[59.32746887 -70.81925201]
[57.98923492 -85.75943756]
[56.65100098 -100.69961548]
[41.83279800 -103.63177490]
[28.44155693 -110.62114716]
[17.56284714 -121.10115051]
[10.07855701 -134.22219849]
[6.59540462 -148.92065430]
[7.39575291 -164.00494385]
[12.41472054 -178.25228882]
[21.24544334 -190.50769043]
[33.17205429 -199.77767944]
[47.22771454 -205.31077576]
[62.27299881 -206.65841675]
[77.08824921 -203.71138000]
[90.47245789 -196.70855713]
[101.34063721 -186.21763611]
[108.81173706 -173.08906555]
[112.28012085 -158.38713074]
[111.46462250 -143.30363464]
[106.43134308 -129.06135559]
[97.58831787 -116.81481934]
[85.65239716 -107.55681610]
[71.59118652 -102.03784943]
[72.92942047 -87.09767151]
[74.26765442 -72.15748596]
[76.27166748 -57.29195404]
[78.93746185 -42.53073883]
[81.60325623 -27.76951981]
[91.47927856 -16.61992264]
[86.31770325 -1.66436243]
[88.98350525 13.09685516]
[91.64929962 27.85807228]
[94.64407349 42.55607605]
[97.96633148 57.18353653]
[101.28858948 71.81099701]
[104.61084747 86.43845367]
[113.96819305 96.82747650]
[110.01660919 110.23928070]
[113.33886719 124.86674500]
[116.66112518 139.49420166]
[120.09218597 154.09652710]
[123.63185883 168.67289734]
[129.91093445 155.05036926]
[142.50056458 146.89553833]
[157.49971008 146.73526001]
[170.26072693 154.61920166]
[176.82946777 168.10444641]
[175.17054749 183.01242065]
[165.79798889 194.72375488]
[151.61599731 199.60954285]
[137.01899719 196.15588379]
[126.52992249 185.43270874]
[128.09045410 200.35130310]
[129.65097046 215.26991272]
[131.21148682 230.18852234]
[146.19245911 229.37332153]
[161.19543457 229.30587769]
[176.18313599 229.98635864]
[191.11827087 231.41305542]
[205.96374512 233.58244324]
[220.68260193 236.48913574]
[235.23829651 240.12586975]
[249.59461975 244.48364258]
[263.71588135 249.55158997]
[277.56695557 255.31712341]
[291.11343384 261.76593018]
[304.32162476 268.88192749]
[317.15869141 276.64749146]
[329.59271240 285.04324341]
[341.59280396 294.04837036]
[353.12908936 303.64044189]
[364.17291260 313.79562378]
[374.69680786 324.48867798]
[384.67462158 335.69302368]
[394.08154297 347.38079834]
[402.89416504 359.52291870]
[411.09063721 372.08923340]
[418.65051270 385.04849243]
[425.55502319 398.36846924]
[431.78698730 412.01605225]
[437.33096313 425.95730591]
[442.17309570 440.15756226]
[446.30142212 454.58154297]
[449.70562744 469.19335938]
[452.37722778 483.95669556]
[454.30966187 498.83486938]
[455.49804688 513.79089355]
[455.93945312 528.78747559]
[455.63281250 543.78747559]
[454.57885742 558.75354004]
[452.78021240 573.64849854]
[450.24133301 588.43524170]
[446.96856689 603.07708740]
[442.97003174 617.53753662]
[438.25567627 631.78076172]
[432.83721924 645.77124023]
[426.72811890 659.47430420]
[419.94357300 672.85577393]
[412.50042725 685.88244629]
[404.41723633 698.52185059]
[395.71405029 710.74267578]
[386.41253662 722.51452637]
[376.53579712 733.80804443]
[366.10842896 744.59527588]
[355.15628052 754.84924316]
[343.70666504 764.54461670]
[331.78796387 773.65722656]
[319.42987061 782.16436768]
[306.66311646 790.04492188]
[293.51940918 797.27935791]
[280.03140259 803.84960938]
[266.23269653 809.73937988]
[252.15754700 814.93402100]
[237.84095764 819.42059326]
[223.31854248 823.18798828]
[208.62638855 826.22680664]
[193.80101013 828.52947998]
[178.87928772 830.09033203]
[163.89831543 830.90545654]
[148.89533997 830.97283936]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 145]
[60 144]
[61 143]
[62 142]
[63 132]
[64 131]
[66 130]
[67 129]
[68 128]
[70 126]
[71 125]
[72 124]
[73 123]
[77 122]
[78 121]
[79 120]
[81 118]
[82 117]
[83 116]
[90 115]
[91 114]
[92 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
