%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[87.02903748 552.14654541]
[72.06023407 551.03643799]
[57.24811172 548.60766602]
[42.70860672 544.87933350]
[28.55551338 539.88061523]
[14.89960003 533.65051270]
[1.84774339 526.23791504]
[-10.49790573 517.70080566]
[-22.04072380 508.10595703]
[-32.69036865 497.52850342]
[-42.36349487 486.05120850]
[-50.98439407 473.76391602]
[-58.48559570 460.76275635]
[-64.80838776 447.14953613]
[-69.90328979 433.03076172]
[-73.73042297 418.51696777]
[-76.25984192 403.72171021]
[-77.47174072 388.76080322]
[-77.35663605 373.75131226]
[-75.91542816 358.81076050]
[-73.15940094 344.05603027]
[-69.11012268 329.60263062]
[-63.79928207 315.56365967]
[-57.26845169 302.04901123]
[-49.56873703 289.16442871]
[-40.76040649 277.01080322]
[-30.91239166 265.68319702]
[-20.10177422 255.27032471]
[-8.41316128 245.85363770]
[4.06196690 237.50685120]
[17.22597313 230.29528809]
[30.97583008 224.27540588]
[45.20392227 219.49429321]
[59.79889679 215.98939514]
[74.64652252 213.78811646]
[89.63059998 212.90771484]
[90.07720184 197.91435242]
[90.52381134 182.92100525]
[90.97041321 167.92765808]
[91.41702271 152.93431091]
[79.37187195 141.19747925]
[79.54562378 124.04274750]
[92.31913757 112.09048462]
[85.67764282 99.78673553]
[92.68252563 87.68618774]
[92.90585327 72.68785095]
[93.01751709 57.68826675]
[93.01751709 42.68826675]
[93.01751709 27.68826675]
[93.01751709 12.68826771]
[93.01751709 -2.31173229]
[93.01751709 -17.31173325]
[93.01751709 -32.31173325]
[93.01751709 -47.31173325]
[93.01751709 -62.31173325]
[93.01751709 -77.31172943]
[93.01751709 -92.31172943]
[93.01751709 -107.31172943]
[78.04422760 -108.29296112]
[63.16717148 -110.25138855]
[48.45005417 -113.17863464]
[33.95590210 -117.06216431]
[19.74677849 -121.88534546]
[5.88353109 -127.62752533]
[-7.57447672 -134.26411438]
[-20.56961441 -141.76669312]
[-33.04623413 -150.10311890]
[-44.95090866 -159.23773193]
[-56.23266220 -169.13137817]
[-66.84318542 -179.74171448]
[-76.73703003 -191.02328491]
[-85.87184143 -202.92779541]
[-94.20850372 -215.40426636]
[-101.71131134 -228.39927673]
[-108.34813690 -241.85716248]
[-114.09056091 -255.72032166]
[-118.91398621 -269.92935181]
[-122.79777527 -284.42343140]
[-125.72528076 -299.14050293]
[-127.68397522 -314.01751709]
[-128.66546631 -328.99078369]
[-128.66555786 -343.99621582]
[-127.68424225 -358.96948242]
[-125.72572327 -373.84652710]
[-122.79838562 -388.56362915]
[-118.91477203 -403.05776978]
[-114.09150696 -417.26684570]
[-108.34925079 -431.13006592]
[-101.71258545 -444.58804321]
[-94.20993042 -457.58312988]
[-85.87342072 -470.05969238]
[-76.73874664 -481.96432495]
[-66.84503174 -493.24603271]
[-56.23463821 -503.85647583]
[-44.95300293 -513.75024414]
[-33.04843521 -522.88500977]
[-20.57191086 -531.22155762]
[-7.57686234 -538.72430420]
[5.88106728 -545.36108398]
[19.74424744 -551.10339355]
[33.95331573 -555.92675781]
[48.44742203 -559.81042480]
[63.16450119 -562.73785400]
[78.04153442 -564.69647217]
[93.01481628 -565.67785645]
[108.02021790 -565.67785645]
[122.99349976 -564.69647217]
[137.87052917 -562.73785400]
[152.58761597 -559.81042480]
[167.08172607 -555.92675781]
[181.29078674 -551.10339355]
[195.15396118 -545.36108398]
[208.61189270 -538.72430420]
[221.60694885 -531.22155762]
[234.08346558 -522.88500977]
[245.98803711 -513.75024414]
[257.26968384 -503.85647583]
[267.88006592 -493.24603271]
[277.77377319 -481.96432495]
[286.90844727 -470.05969238]
[295.24496460 -457.58312988]
[302.74761963 -444.58804321]
[309.38427734 -431.13006592]
[315.12655640 -417.26684570]
[319.94979858 -403.05776978]
[323.83343506 -388.56362915]
[326.76077271 -373.84652710]
[328.71926880 -358.96948242]
[329.70059204 -343.99621582]
[329.70050049 -328.99078369]
[328.71902466 -314.01751709]
[326.76031494 -299.14050293]
[323.83279419 -284.42343140]
[319.94903564 -269.92935181]
[315.12557983 -255.72032166]
[309.38317871 -241.85716248]
[302.74633789 -228.39927673]
[295.24353027 -215.40426636]
[286.90689087 -202.92779541]
[277.77206421 -191.02328491]
[267.87820435 -179.74171448]
[257.26770020 -169.13137817]
[245.98594666 -159.23773193]
[234.08126831 -150.10311890]
[221.60464478 -141.76669312]
[208.60951233 -134.26411438]
[195.15150452 -127.62752533]
[181.28825378 -121.88534546]
[167.07913208 -117.06216431]
[152.58497620 -113.17863464]
[137.86785889 -110.25138855]
[122.99080658 -108.29296112]
[108.01751709 -107.31172943]
[108.01751709 -92.31172943]
[108.01751709 -77.31172943]
[108.01751709 -62.31173325]
[108.01751709 -47.31173325]
[108.01751709 -32.31173325]
[108.01751709 -17.31173325]
[108.01751709 -2.31173229]
[108.01751709 12.68826771]
[108.01751709 27.68826675]
[108.01751709 42.68826675]
[108.01751709 57.68826675]
[111.16101837 64.37708282]
[107.90419006 72.91117859]
[107.68086243 87.90951538]
[114.32235718 100.21326447]
[107.31747437 112.31381226]
[117.74884796 120.83444214]
[121.31614685 133.62055969]
[116.93286133 145.94406128]
[106.41036987 153.38092041]
[105.96376801 168.37426758]
[105.51715851 183.36761475]
[105.07055664 198.36096191]
[104.62394714 213.35430908]
[119.52905273 215.12503052]
[134.21932983 218.20614624]
[148.57981873 222.57354736]
[162.49810791 228.19305420]
[175.86528015 235.02067566]
[188.57670593 243.00297546]
[200.53289795 252.07749939]
[211.64030457 262.17321777]
[221.81196594 273.21109009]
[230.96829224 285.10476685]
[239.03761292 297.76113892]
[245.95677185 311.08114624]
[251.67161560 324.96057129]
[256.13742065 339.29074097]
[259.31924438 353.95953369]
[261.19216919 368.85214233]
[261.74154663 383.85202026]
[260.96307373 398.84173584]
[258.86282349 413.70397949]
[255.45726013 428.32244873]
[250.77304077 442.58273315]
[244.84680176 456.37322998]
[237.72494507 469.58596802]
[229.46319580 482.11758423]
[220.12623596 493.86996460]
[209.78712463 504.75115967]
[198.52676392 514.67596436]
[186.43331909 523.56677246]
[173.60142517 531.35394287]
[160.13150024 537.97656250]
[146.12898254 543.38275146]
[131.70344543 547.53021240]
[116.96780396 550.38653564]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 177]
[37 176]
[38 175]
[39 174]
[40 173]
[43 169]
[45 167]
[46 166]
[47 164]
[48 163]
[49 162]
[50 161]
[51 160]
[52 159]
[53 158]
[54 157]
[55 156]
[56 155]
[57 154]
[58 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
