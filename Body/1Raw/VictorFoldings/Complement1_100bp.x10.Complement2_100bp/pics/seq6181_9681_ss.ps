%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[-49.54778671 299.30340576]
[-44.63917923 313.49224854]
[-41.24061966 328.11645508]
[-39.38935471 343.01580811]
[-39.10565567 358.02703857]
[-40.39263916 372.98568726]
[-43.23620224 387.72787476]
[-47.60518646 402.09207153]
[-53.45172501 415.92086792]
[-60.71176147 429.06277466]
[-69.30574799 441.37377930]
[-79.13952637 452.71902466]
[-90.10535431 462.97418213]
[-102.08307648 472.02691650]
[-114.94146729 479.77801514]
[-128.53964233 486.14254761]
[-142.72859192 491.05081177]
[-157.35289001 494.44900513]
[-172.25228882 496.29992676]
[-187.26351929 496.58325195]
[-202.22215271 495.29589844]
[-216.96426392 492.45199585]
[-231.32833862 488.08264160]
[-245.15699768 482.23577881]
[-258.29870605 474.97543335]
[-270.60952759 466.38113403]
[-281.95452881 456.54708862]
[-292.20941162 445.58102417]
[-301.26187134 433.60305786]
[-309.01263428 420.74447632]
[-315.37686157 407.14614868]
[-320.28479004 392.95709229]
[-323.68261719 378.33270264]
[-325.53317261 363.43325806]
[-325.81613159 348.42202759]
[-324.52844238 333.46343994]
[-321.68414307 318.72137451]
[-317.31448364 304.35742188]
[-311.46725464 290.52890015]
[-304.20657349 277.38735962]
[-295.61199951 265.07675171]
[-285.77767944 253.73199463]
[-274.81134033 243.47735596]
[-262.83319092 234.42521667]
[-249.97441101 226.67474365]
[-236.37593079 220.31085205]
[-222.18673706 215.40327454]
[-207.56227112 212.00579834]
[-192.66279602 210.15560913]
[-177.65153503 209.87300110]
[-162.69297791 211.16107178]
[-147.95100403 214.00570679]
[-133.58714294 218.37574768]
[-119.75876617 224.22329712]
[-106.61739349 231.48428345]
[-94.30700684 240.07917786]
[-82.96248627 249.91377258]
[-72.00657654 239.66838074]
[-61.05066299 229.42298889]
[-58.31229019 222.55836487]
[-49.85453415 219.10812378]
[-38.74729919 209.02697754]
[-37.62562180 204.38468933]
[-33.57577515 200.39773560]
[-27.15603065 198.81710815]
[-15.75356865 189.07113647]
[-11.10591698 174.92021179]
[4.41164398 171.83543396]
[5.31508160 157.01249695]
[16.73996544 146.96627808]
[32.28149796 148.01438904]
[43.68395996 138.26841736]
[55.08642197 128.52244568]
[66.48888397 118.77648926]
[77.89134979 109.03051758]
[89.29380798 99.28455353]
[99.03977203 87.88209534]
[106.89153290 75.10124969]
[114.74328613 62.32040787]
[122.59503937 49.53956604]
[130.44679260 36.75872040]
[123.77930450 21.21393013]
[127.65258026 4.91979027]
[140.34745789 -5.74800205]
[156.73341370 -6.73689318]
[164.39401245 -19.63322067]
[164.78967285 -35.44947815]
[177.94175720 -42.44032669]
[185.60235596 -55.33665466]
[193.26293945 -68.23297882]
[200.92353821 -81.12931061]
[205.53755188 -95.40203857]
[206.87579346 -110.34222412]
[208.21401978 -125.28240967]
[209.55226135 -140.22259521]
[210.77923584 -155.17233276]
[211.78349304 -170.13867188]
[212.67630005 -185.11207581]
[213.56912231 -200.08547974]
[214.46194458 -215.05888367]
[200.77398682 -221.67013550]
[190.66172791 -233.01960754]
[185.66717529 -247.37658691]
[186.55198669 -262.55175781]
[193.18124390 -276.23098755]
[204.54400635 -286.32830811]
[218.90754700 -291.30398560]
[234.08152771 -290.39920044]
[247.75202942 -283.75195312]
[257.83441162 -272.37591553]
[262.79116821 -258.00585938]
[261.86642456 -242.83306885]
[255.20121765 -229.17132568]
[243.81192017 -219.10392761]
[229.43534851 -214.16607666]
[228.54252625 -199.19267273]
[227.64971924 -184.21926880]
[226.75689697 -169.24586487]
[229.49670410 -162.38180542]
[225.73768616 -154.05668640]
[228.37498474 -147.15258789]
[224.49244690 -138.88435364]
[223.15420532 -123.94417572]
[221.81597900 -109.00399017]
[220.47773743 -94.06380463]
[228.31109619 -106.85593414]
[238.45985413 -117.90142059]
[250.54458618 -126.78732300]
[264.11349487 -133.18144226]
[278.65930176 -136.84472656]
[293.63818359 -137.64021301]
[308.49017334 -135.53817749]
[322.66000366 -130.61720276]
[335.61791992 -123.06124878]
[346.87948608 -113.15280914]
[356.02365112 -101.26232147]
[362.70861816 -87.83431244]
[366.68441772 -73.37081146]
[367.80242920 -58.41252899]
[366.02084351 -43.51870728]
[361.40628052 -29.24615669]
[354.13125610 -16.12846375]
[344.46771240 -4.65604830]
[332.77697754 4.74218798]
[319.49612427 11.71488476]
[305.12161255 16.00136185]
[290.19091797 17.44136620]
[275.26214600 15.98106480]
[260.89349365 11.67504883]
[247.62213135 4.68430233]
[235.94418335 -4.72981882]
[226.29626465 -16.21536255]
[219.03907776 -29.34293175]
[214.44390869 -43.62174606]
[212.68257141 -58.51797485]
[213.81987000 -73.46871185]
[206.15927124 -60.57238388]
[198.49867249 -47.67605591]
[190.83807373 -34.77972794]
[190.99035645 -19.88590240]
[177.29034424 -11.97262287]
[169.62974548 0.92370427]
[176.02334595 12.64394283]
[175.78892517 26.10087967]
[168.88078308 37.77766037]
[157.01129150 44.56983948]
[143.22764587 44.61047745]
[135.37588501 57.39131927]
[127.52413177 70.17216492]
[119.67237091 82.95300293]
[111.82061768 95.73384857]
[124.59500885 87.87159729]
[139.00160217 83.69429779]
[154.00039673 83.50350189]
[168.50859070 87.31299591]
[181.47883606 94.84775543]
[191.97480774 105.56385040]
[199.23878479 118.68767548]
[202.74636841 133.27180481]
[202.24433899 148.26339722]
[197.76896667 162.58021545]
[189.64329529 175.18869019]
[178.45396423 185.17860413]
[165.00869751 191.82881165]
[150.27816772 194.65919495]
[135.32574463 193.46542358]
[121.23086548 188.33370972]
[109.01106262 179.63449097]
[99.54849243 167.99577332]
[93.52626038 154.25776672]
[91.37911987 139.41223145]
[93.26206970 124.53088379]
[99.03977203 110.68701935]
[87.63731384 120.43298340]
[76.23484802 130.17895508]
[64.83238983 139.92491150]
[53.42992401 149.67088318]
[42.02746201 159.41683960]
[40.64299011 174.93203735]
[28.94043541 184.65339661]
[14.15760994 183.23789978]
[8.69437790 198.08592224]
[-6.00760269 200.47360229]
[-17.41006470 210.21955872]
[-28.66616058 220.13421631]
[-39.77339554 230.21536255]
[-50.80527115 240.37890625]
[-61.76118088 250.62429810]
[-72.71709442 260.86968994]
[-63.66407394 272.84719849]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 209]
[58 208]
[59 207]
[61 206]
[62 205]
[65 204]
[66 203]
[68 201]
[71 198]
[72 197]
[73 196]
[74 195]
[75 194]
[76 193]
[77 171]
[78 170]
[79 169]
[80 168]
[81 167]
[85 162]
[86 161]
[88 159]
[89 158]
[90 157]
[91 156]
[92 125]
[93 124]
[94 123]
[95 122]
[96 120]
[97 118]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
