%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGGxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[95.75661469 665.46826172]
[81.56719971 660.58276367]
[67.77734375 654.66271973]
[54.46235275 647.74041748]
[41.69495773 639.85369873]
[29.54488945 631.04553223]
[18.07850647 621.36413574]
[7.35843563 610.86236572]
[-2.55677366 599.59759521]
[-11.61296654 587.63128662]
[-19.76068115 575.02880859]
[-26.95541763 561.85900879]
[-33.15787888 548.19384766]
[-38.33419037 534.10797119]
[-42.45608139 519.67822266]
[-45.50103760 504.98345947]
[-47.45242691 490.10397339]
[-48.29959488 475.12100220]
[-48.03791046 460.11639404]
[-46.66880798 445.17205811]
[-44.19976044 430.36965942]
[-40.64425659 415.79003906]
[-36.02171326 401.51278687]
[-30.35737801 387.61593628]
[-23.68218803 374.17538452]
[-16.03260231 361.26449585]
[-7.45039797 348.95379639]
[2.01754904 337.31054688]
[12.31952858 326.39834595]
[23.39927292 316.27676392]
[35.19626999 307.00106812]
[47.64608765 298.62197876]
[60.68072510 291.18521118]
[74.22899628 284.73141479]
[88.21689606 279.29580688]
[102.56803894 274.90811157]
[117.20403290 271.59225464]
[114.97891235 256.75820923]
[112.75379944 241.92414856]
[110.52867889 227.09010315]
[108.30356598 212.25607300]
[98.76388550 200.81736755]
[104.36845398 186.02210999]
[102.14333344 171.18806458]
[98.04238892 165.03958130]
[99.99723053 156.11677551]
[97.99320984 141.25123596]
[95.98919678 126.38571167]
[93.98518372 111.52018738]
[91.53945923 96.72091675]
[88.65418243 82.00102234]
[85.76891327 67.28113556]
[82.88364410 52.56124115]
[79.99836731 37.84135056]
[69.59120941 48.64371109]
[54.64332581 47.39437103]
[46.17374420 35.01430130]
[50.42592621 20.62962151]
[64.26531982 14.84418774]
[77.48905182 21.92147446]
[75.70658875 7.02775764]
[73.92412567 -7.86595964]
[72.14165497 -22.75967598]
[70.35919189 -37.65339279]
[54.01022339 -42.90705109]
[41.64231110 -54.74032211]
[35.71027374 -70.73751831]
[37.36219788 -87.66337585]
[46.21756744 -102.11730957]
[60.45352173 -111.21662903]
[58.22840500 -126.05067444]
[48.52957535 -138.55039978]
[54.29329300 -152.28462219]
[52.06817627 -167.11866760]
[49.84305954 -181.95271301]
[47.61794281 -196.78675842]
[45.39282608 -211.62080383]
[43.16770554 -226.45483398]
[40.94258881 -241.28887939]
[25.91687775 -241.19558716]
[11.03083801 -243.24169922]
[-3.41246700 -247.38557434]
[-17.11898994 -253.54284668]
[-29.80968285 -261.58816528]
[-41.22618103 -271.35772705]
[-51.13605881 -282.65264893]
[-59.33756638 -295.24295044]
[-65.66372681 -308.87234497]
[-69.98574829 -323.26336670]
[-72.21564484 -338.12298584]
[-72.30800629 -353.14868164]
[-70.26097107 -368.03460693]
[-66.11620331 -382.47766113]
[-59.95808029 -396.18380737]
[-51.91198349 -408.87399292]
[-42.14171600 -420.28988647]
[-30.84618950 -430.19906616]
[-18.25536346 -438.39978027]
[-4.62557602 -444.72509766]
[9.76569176 -449.04623413]
[24.62545013 -451.27520752]
[39.65117645 -451.36663818]
[54.53696060 -449.31869507]
[68.97975159 -445.17303467]
[82.68551636 -439.01406860]
[95.37521362 -430.96716309]
[106.79049683 -421.19619751]
[116.69898224 -409.90005493]
[124.89892578 -397.30871582]
[131.22340393 -383.67855835]
[135.54364014 -369.28701782]
[137.77169800 -354.42712402]
[137.86219788 -339.40139771]
[135.81332397 -324.51571655]
[131.66676331 -310.07318115]
[125.50695038 -296.36782837]
[117.45928192 -283.67861938]
[107.68759918 -272.26391602]
[96.39084625 -262.35614014]
[83.79900360 -254.15698242]
[70.16843414 -247.83335876]
[55.77663422 -243.51400757]
[58.00175095 -228.67996216]
[60.22686768 -213.84591675]
[62.45198441 -199.01187134]
[64.67710114 -184.17782593]
[66.90222168 -169.34378052]
[69.12733459 -154.50973511]
[78.66701508 -143.07104492]
[73.06244659 -128.27578735]
[75.28756714 -113.44174194]
[87.96961975 -110.62940979]
[98.96819305 -103.65760803]
[106.96253967 -93.33783722]
[110.98397827 -80.88512421]
[110.53319550 -67.77499390]
[105.64215851 -55.56862259]
[96.87287140 -45.72696304]
[85.25290680 -39.43585968]
[87.03537750 -24.54214287]
[88.81784058 -9.64842510]
[90.60030365 5.24529171]
[92.38277435 20.13900948]
[94.71826172 34.95607758]
[97.60353088 49.67596817]
[100.48880768 64.39585876]
[103.37407684 79.11575317]
[106.25934601 93.83563995]
[108.63560486 95.74428558]
[110.36989594 98.55973816]
[111.12502289 102.04588318]
[110.65573883 105.84535980]
[108.85071564 109.51617432]
[110.85472870 124.38169861]
[112.85874176 139.24722290]
[114.86275482 154.11276245]
[116.97737885 168.96295166]
[119.20249939 183.79699707]
[128.90132141 196.29672241]
[123.13761139 210.03094482]
[125.36272430 224.86499023]
[127.58784485 239.69903564]
[129.81295776 254.53308105]
[132.03807068 269.36712646]
[147.00280762 268.24285889]
[162.00970459 268.22683716]
[176.97680664 269.31915283]
[191.82235718 271.51388550]
[206.46528625 274.79898071]
[220.82560730 279.15655518]
[234.82490540 284.56274414]
[248.38668823 290.98809814]
[261.43692017 298.39746094]
[273.90429688 306.75039673]
[285.72076416 316.00125122]
[296.82174683 326.09954834]
[307.14660645 336.99011230]
[316.63900757 348.61343384]
[325.24703979 360.90606689]
[332.92373657 373.80087280]
[339.62713623 387.22738647]
[345.32064819 401.11230469]
[349.97317505 415.37979126]
[353.55929565 429.95193481]
[356.05941772 444.74911499]
[357.45989990 459.69052124]
[357.75311279 474.69458008]
[356.93740845 489.67929077]
[355.01727295 504.56286621]
[352.00320435 519.26397705]
[347.91162109 533.70233154]
[342.76492310 547.79907227]
[336.59115601 561.47723389]
[329.42410278 574.66210938]
[321.30288696 587.28161621]
[312.27185059 599.26696777]
[302.38031006 610.55255127]
[291.68231201 621.07684326]
[280.23629761 630.78228760]
[268.10476685 639.61590576]
[255.35395813 647.52941895]
[242.05354309 654.47967529]
[228.27613831 660.42871094]
[214.09701538 665.34393311]
[199.59361267 669.19860840]
[184.84513855 671.97161865]
[169.93214417 673.64788818]
[154.93606567 674.21813965]
[139.93884277 673.67938232]
[125.02235413 672.03448486]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 164]
[38 163]
[39 162]
[40 161]
[41 160]
[43 158]
[44 157]
[46 156]
[47 155]
[48 154]
[49 153]
[50 148]
[51 147]
[52 146]
[53 145]
[54 144]
[60 143]
[61 142]
[62 141]
[63 140]
[64 139]
[70 131]
[71 130]
[73 128]
[74 127]
[75 126]
[76 125]
[77 124]
[78 123]
[79 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
