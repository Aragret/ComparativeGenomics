%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[30.25741386 271.86407471]
[36.01155090 285.73742676]
[40.01715851 300.21273804]
[42.21351624 315.07058716]
[42.56732178 330.08572388]
[41.07321167 345.03051758]
[37.75384140 359.67843628]
[32.65953064 373.80740356]
[25.86750412 387.20321655]
[17.48073006 399.66284180]
[7.62634993 410.99731445]
[-3.54624772 421.03488159]
[-15.86768818 429.62335205]
[-29.15118217 436.63250732]
[-43.19535446 441.95611572]
[-57.78730011 445.51348877]
[-72.70581055 447.25064087]
[-87.72471619 447.14126587]
[-102.61634827 445.18704224]
[-117.15494537 441.41757202]
[-131.12010193 435.89001465]
[-144.30010986 428.68817139]
[-156.49517822 419.92117310]
[-167.52041626 409.72198486]
[-177.20869446 398.24517822]
[-185.41314697 385.66476440]
[-192.00936890 372.17144775]
[-196.89739990 357.96981812]
[-200.00309753 343.27511597]
[-201.27941895 328.31011963]
[-200.70700073 313.30172729]
[-198.29450989 298.47744751]
[-194.07853699 284.06201172]
[-188.12297058 270.27392578]
[-180.51812744 257.32226562]
[-171.37927246 245.40332031]
[-160.84495544 234.69781494]
[-149.07487488 225.36804199]
[-136.24745178 217.55541992]
[-122.55716705 211.37840271]
[-108.21154022 206.93061829]
[-93.42806244 204.27951050]
[-78.43084717 203.46524048]
[-63.44723511 204.50018311]
[-48.70438766 207.36863708]
[-34.42579651 212.02713013]
[-20.82792282 218.40501404]
[-8.11690521 226.40560913]
[1.37199318 214.78834534]
[10.86089134 203.17108154]
[20.34979057 191.55381775]
[29.83868790 179.93655396]
[26.46691704 160.74945068]
[38.47846985 145.02601624]
[58.48501587 143.17738342]
[67.44571686 131.14801025]
[76.40641022 119.11862946]
[85.36710358 107.08924866]
[84.37979889 95.48466492]
[91.40652466 86.19669342]
[102.84218597 83.99059296]
[111.98098755 72.09596252]
[121.11978912 60.20132828]
[130.25859070 48.30669785]
[116.56903839 54.43825912]
[101.63639832 55.85818481]
[87.03654480 52.41662598]
[74.31024170 44.47677612]
[64.80052185 32.87654877]
[59.51097488 18.84014511]
[58.99980927 3.84885669]
[63.32098007 -10.51524830]
[72.01845551 -22.73628998]
[84.17437744 -31.52455711]
[98.50589752 -35.95259857]
[113.50057220 -35.55311584]
[127.57598877 -30.36826324]
[139.24673462 -20.94521332]
[147.28115845 -8.27840424]
[150.83135986 6.29540730]
[149.52270508 21.23821259]
[143.49317932 34.97322083]
[149.61395264 20.38395691]
[164.40789795 18.65513229]
[176.23416138 9.42803383]
[188.06042480 0.20093524]
[199.88670349 -9.02616310]
[191.42524719 -21.41794968]
[183.76676941 -34.32144928]
[176.94210815 -47.68470001]
[170.97874451 -61.45389557]
[165.90068054 -75.57359314]
[161.72836304 -89.98693085]
[158.47860718 -104.63587189]
[156.16448975 -119.46144104]
[154.79533386 -134.40393066]
[154.37664795 -149.40316772]
[154.91011047 -164.39877319]
[156.39358521 -179.33033752]
[158.82109070 -194.13775635]
[162.18287659 -208.76139832]
[166.46536255 -223.14239502]
[171.65133667 -237.22280884]
[177.71990967 -250.94596863]
[184.64665222 -264.25659180]
[192.40365601 -277.10110474]
[200.95968628 -289.42776489]
[210.28030396 -301.18695068]
[220.32797241 -312.33132935]
[231.06224060 -322.81597900]
[242.43988037 -332.59872437]
[254.41505432 -341.64016724]
[266.93957520 -349.90386963]
[279.96301270 -357.35656738]
[293.43289185 -363.96829224]
[307.29501343 -369.71237183]
[321.49349976 -374.56570435]
[335.97125244 -378.50872803]
[350.66992188 -381.52557373]
[365.53036499 -383.60409546]
[380.49270630 -384.73593140]
[395.49670410 -384.91650391]
[410.48193359 -384.14511108]
[425.38809204 -382.42483521]
[440.15512085 -379.76260376]
[454.72354126 -376.16915894]
[469.03475952 -371.65896606]
[483.03109741 -366.25015259]
[496.65621948 -359.96453857]
[509.85522461 -352.82742310]
[522.57501221 -344.86755371]
[534.76434326 -336.11694336]
[546.37408447 -326.61087036]
[557.35760498 -316.38757324]
[567.67053223 -305.48825073]
[577.27148438 -293.95678711]
[586.12170410 -281.83963013]
[594.18560791 -269.18551636]
[601.43066406 -256.04544067]
[607.82775879 -242.47232056]
[613.35113525 -228.52079773]
[617.97845459 -214.24703979]
[621.69122314 -199.70854187]
[624.47442627 -184.96383667]
[626.31683350 -170.07228088]
[627.21105957 -155.09387207]
[627.15344238 -140.08889771]
[626.14428711 -125.11779022]
[624.18768311 -110.24082184]
[621.29138184 -95.51790619]
[617.46722412 -81.00833130]
[612.73040771 -66.77050781]
[607.10015869 -52.86178207]
[600.59912109 -39.33815002]
[593.25335693 -26.25407219]
[585.09265137 -13.66223145]
[576.14965820 -1.61333179]
[566.46051025 9.84410954]
[556.06420898 20.66395760]
[545.00256348 30.80264473]
[533.32019043 40.21934509]
[521.06408691 48.87614059]
[508.28356934 56.73817062]
[495.03018188 63.77378464]
[481.35720825 69.95464325]
[467.31979370 75.25586700]
[452.97439575 79.65610504]
[438.37878418 83.13764191]
[423.59176636 85.68644714]
[408.67285156 87.29227448]
[393.68212891 87.94864655]
[378.67996216 87.65292358]
[363.72674561 86.40629578]
[348.88272095 84.21379089]
[334.20764160 81.08422089]
[319.76055908 77.03019714]
[305.59973145 72.06804657]
[291.78210449 66.21775055]
[278.36337280 59.50285721]
[265.39752197 51.95041275]
[252.93678284 43.59082794]
[241.03134155 34.45775986]
[229.72912598 24.58798790]
[219.07563782 14.02125359]
[209.11380005 2.80010676]
[197.28753662 12.02720547]
[185.46125793 21.25430298]
[173.63499451 30.48140144]
[168.36010742 44.41068268]
[152.72027588 46.79949188]
[142.15322876 57.44549942]
[133.01441956 69.34013367]
[123.87562561 81.23476410]
[114.73682404 93.12939453]
[112.96696472 109.81004333]
[97.39648438 116.04994202]
[88.43579102 128.07933044]
[79.47509003 140.10870361]
[70.51439667 152.13807678]
[74.64131165 161.97639465]
[74.31463623 172.55941772]
[69.66030121 181.97964478]
[61.57823181 188.56698608]
[51.56910324 191.18476868]
[41.45595169 189.42546082]
[31.96705246 201.04272461]
[22.47815514 212.65998840]
[12.98925686 224.27725220]
[3.50035810 235.89451599]
[13.87766075 246.75228882]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 209]
[49 208]
[50 207]
[51 206]
[52 205]
[55 199]
[56 198]
[57 197]
[58 196]
[61 194]
[62 193]
[63 192]
[64 191]
[82 190]
[84 188]
[85 187]
[86 186]
[87 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
