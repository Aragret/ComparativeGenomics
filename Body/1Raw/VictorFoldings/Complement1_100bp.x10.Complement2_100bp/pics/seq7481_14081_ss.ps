%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[169.38151550 923.94720459]
[154.53599548 921.78613281]
[139.78814697 919.03649902]
[125.16124725 915.70281982]
[110.67845917 911.79016113]
[96.36267853 907.30487061]
[82.23653412 902.25396729]
[68.32235718 896.64544678]
[54.64216232 890.48815918]
[41.21757126 883.79193115]
[28.06981850 876.56719971]
[15.21968651 868.82550049]
[2.68749785 860.57910156]
[-9.50693226 851.84088135]
[-21.34432220 842.62481689]
[-32.80595398 832.94543457]
[-43.87370682 822.81805420]
[-54.53007889 812.25860596]
[-64.75821686 801.28387451]
[-74.54195404 789.91119385]
[-83.86581421 778.15850830]
[-92.71505737 766.04443359]
[-101.07569122 753.58813477]
[-108.93449402 740.80932617]
[-116.27904510 727.72814941]
[-123.09772491 714.36529541]
[-129.37976074 700.74194336]
[-135.11520386 686.87957764]
[-140.29498291 672.80017090]
[-144.91093445 658.52600098]
[-148.95574951 644.07958984]
[-152.42301941 629.48376465]
[-155.30726624 614.76165771]
[-157.60392761 599.93652344]
[-159.30938721 585.03173828]
[-160.42092896 570.07098389]
[-160.93679810 555.07788086]
[-160.85620117 540.07611084]
[-160.17924500 525.08941650]
[-158.90699768 510.14147949]
[-157.04148865 495.25592041]
[-154.58564758 480.45629883]
[-151.54336548 465.76602173]
[-147.91944885 451.20831299]
[-143.71965027 436.80618286]
[-138.95057678 422.58242798]
[-133.61979675 408.55950928]
[-127.73572540 394.75958252]
[-121.30766296 381.20452881]
[-114.34578705 367.91574097]
[-106.86109924 354.91424561]
[-98.86543274 342.22058105]
[-90.37142944 329.85482788]
[-81.39252472 317.83657837]
[-71.94290924 306.18475342]
[-62.03753281 294.91784668]
[-51.69205475 284.05364990]
[-40.92283249 273.60934448]
[-29.74689484 263.60144043]
[-18.18191147 254.04577637]
[-6.24617338 244.95744324]
[6.04145050 236.35083008]
[18.66152954 228.23951721]
[31.59410667 220.63635254]
[44.81873703 213.55335999]
[58.31450653 207.00172424]
[72.06007385 200.99182129]
[86.03371429 195.53314209]
[100.21331787 190.63432312]
[114.57647705 186.30311584]
[110.82017517 171.78105164]
[107.06387329 157.25898743]
[103.30757141 142.73693848]
[99.55126953 128.21487427]
[95.79496765 113.69281006]
[86.13245392 103.58700562]
[89.68296814 90.06348419]
[85.92666626 75.54142761]
[82.17036438 61.01936722]
[78.41407013 46.49731064]
[74.65776825 31.97525024]
[70.90146637 17.45319176]
[55.86812210 18.21700096]
[40.98880768 15.93864250]
[26.87282372 10.71141434]
[14.09821320 2.74936700]
[3.18808508 -7.62145710]
[-5.41079617 -19.97638130]
[-11.34631157 -33.80947495]
[-14.37540722 -48.55428696]
[-14.37404060 -63.60702515]
[-11.34227085 -78.35128784]
[-5.40424490 -92.18330383]
[3.19687796 -104.53666687]
[14.10888767 -114.90550995]
[26.88494301 -122.86524200]
[41.00187302 -128.08990479]
[55.88159943 -130.36557007]
[70.91481018 -129.59902954]
[85.48589325 -125.82168579]
[98.99818420 -119.18821716]
[110.89835358 -109.97025299]
[120.69910431 -98.54527283]
[127.99909973 -85.38111877]
[132.49940491 -71.01685333]
[134.01574707 -56.04068756]
[132.48602295 -41.06588364]
[127.97286987 -26.70564651]
[120.66110992 -13.54802513]
[110.85015106 -2.13181186]
[98.94174194 7.07550430]
[85.42352295 13.69689083]
[89.17982483 28.21895027]
[92.93612671 42.74100876]
[96.69242859 57.26306915]
[100.44873047 71.78512573]
[104.20503235 86.30718994]
[113.86754608 96.41299438]
[110.31703186 109.93651581]
[114.07333374 124.45857239]
[117.82963562 138.98063660]
[121.58592987 153.50268555]
[125.34223175 168.02474976]
[129.09854126 182.54681396]
[143.76039124 179.37036133]
[158.53692627 176.77934265]
[173.40480042 174.77781677]
[188.34048462 173.36898804]
[203.32038879 172.55505371]
[218.32078552 172.33731079]
[233.31799316 172.71611023]
[248.28828430 173.69084167]
[263.20797729 175.25997925]
[278.05349731 177.42102051]
[292.80139160 180.17056274]
[307.42828369 183.50425720]
[321.91107178 187.41683960]
[336.22686768 191.90209961]
[350.35302734 196.95297241]
[364.26721191 202.56144714]
[377.94744873 208.71867371]
[391.37203979 215.41491699]
[404.51980591 222.63957214]
[417.36996460 230.38124084]
[429.90219116 238.62765503]
[442.09661865 247.36578369]
[453.93405151 256.58181763]
[465.39569092 266.26116943]
[476.46347046 276.38858032]
[487.11987305 286.94796753]
[497.34805298 297.92266846]
[507.13180542 309.29534912]
[516.45568848 321.04800415]
[525.30499268 333.16201782]
[533.66564941 345.61831665]
[541.52447510 358.39712524]
[548.86907959 371.47830200]
[555.68780518 384.84109497]
[561.96984863 398.46444702]
[567.70532227 412.32678223]
[572.88513184 426.40615845]
[577.50115967 440.68032837]
[581.54602051 455.12673950]
[585.01330566 469.72256470]
[587.89758301 484.44467163]
[590.19427490 499.26980591]
[591.89978027 514.17456055]
[593.01135254 529.13531494]
[593.52728271 544.12841797]
[593.44671631 559.13018799]
[592.76977539 574.11688232]
[591.49761963 589.06481934]
[589.63214111 603.95037842]
[587.17633057 618.75000000]
[584.13409424 633.44030762]
[580.51019287 647.99798584]
[576.31042480 662.40014648]
[571.54138184 676.62390137]
[566.21069336 690.64685059]
[560.32659912 704.44677734]
[553.89862061 718.00189209]
[546.93676758 731.29064941]
[539.45208740 744.29217529]
[531.45648193 756.98590088]
[522.96252441 769.35162354]
[513.98364258 781.36993408]
[504.53405762 793.02178955]
[494.62869263 804.28869629]
[484.28326416 815.15295410]
[473.51406860 825.59722900]
[462.33813477 835.60516357]
[450.77319336 845.16088867]
[438.83746338 854.24926758]
[426.54986572 862.85589600]
[413.92980957 870.96722412]
[400.99725342 878.57043457]
[387.77264404 885.65350342]
[374.27688599 892.20513916]
[360.53134155 898.21508789]
[346.55770874 903.67382812]
[332.37811279 908.57269287]
[318.01498413 912.90393066]
[303.49099731 916.66070557]
[288.82913208 919.83709717]
[274.05258179 922.42810059]
[259.18469238 924.42956543]
[244.24900818 925.83837891]
[229.26911926 926.65228271]
[214.26870728 926.86999512]
[199.27149963 926.49114990]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 124]
[71 123]
[72 122]
[73 121]
[74 120]
[75 119]
[77 117]
[78 116]
[79 115]
[80 114]
[81 113]
[82 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
