%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[69.42820740 897.50793457]
[54.61064911 895.14434814]
[39.96869278 891.86413574]
[25.55899239 887.67999268]
[11.43729401 882.60809326]
[-2.34176850 876.66809082]
[-15.72488594 869.88293457]
[-28.66028214 862.27880859]
[-41.09791183 853.88525391]
[-52.98965073 844.73468018]
[-64.28950500 834.86248779]
[-74.95374298 824.30688477]
[-84.94110870 813.10876465]
[-94.21297455 801.31134033]
[-102.73345947 788.96032715]
[-110.46959686 776.10345459]
[-117.39146423 762.79052734]
[-123.47227478 749.07299805]
[-128.68850708 735.00396729]
[-133.01998901 720.63787842]
[-136.44995117 706.03027344]
[-138.96511841 691.23767090]
[-140.55577087 676.31738281]
[-141.21575928 661.32702637]
[-140.94250488 646.32458496]
[-139.73710632 631.36822510]
[-137.60418701 616.51568604]
[-134.55201721 601.82452393]
[-130.59240723 587.35150146]
[-125.74066925 573.15264893]
[-120.01557922 559.28289795]
[-113.43928528 545.79595947]
[-106.03722382 532.74389648]
[-97.83804321 520.17724609]
[-88.87345123 508.14471436]
[-79.17814636 496.69274902]
[-68.78961945 485.86569214]
[-57.74808121 475.70541382]
[-46.09623337 466.25128174]
[-33.87916565 457.53979492]
[-21.14414024 449.60470581]
[-7.94042444 442.47671509]
[5.68089533 436.18334961]
[19.66712189 430.74902344]
[33.96414566 426.19473267]
[48.51665115 422.53808594]
[63.26834106 419.79324341]
[78.16213989 417.97082520]
[77.26932526 402.99740601]
[76.37651062 388.02401733]
[75.48369598 373.05059814]
[67.00257111 360.80642700]
[73.90475464 346.57019043]
[73.01194000 331.59677124]
[64.89916229 344.21356201]
[51.61046982 351.17132568]
[36.61948395 350.65133667]
[23.84481812 342.78955078]
[16.62573624 329.64099121]
[16.84929085 314.64263916]
[24.45704460 301.71508789]
[37.46035004 294.23748779]
[52.46017075 294.16455078]
[65.53559113 301.51528931]
[73.26848602 314.36740112]
[74.60671997 299.42721558]
[75.94495392 284.48703003]
[77.28318787 269.54684448]
[78.62142181 254.60664368]
[65.06401062 248.32318115]
[54.45451736 237.76062012]
[48.08704376 224.18013000]
[46.74758911 209.21258545]
[50.61703491 194.66276550]
[59.24702072 182.29168701]
[71.61179352 173.60350037]
[86.23009491 169.66262817]
[87.56832886 154.72244263]
[88.90656281 139.78225708]
[90.24479675 124.84207153]
[91.58303070 109.90188599]
[92.47584534 94.92848206]
[81.91760254 83.47592163]
[82.58410645 68.27689362]
[93.56744385 58.28179550]
[94.01404572 43.28844452]
[94.46065521 28.29509544]
[94.90725708 13.30174446]
[95.35386658 -1.69160509]
[95.80046844 -16.68495560]
[88.47748566 -30.70937729]
[96.59029388 -43.20063782]
[97.03689575 -58.19398880]
[89.71391296 -72.21841431]
[97.82672119 -84.70967102]
[87.26847076 -96.16223145]
[87.93497467 -111.36125946]
[98.91831207 -121.35636139]
[99.36491394 -136.34970093]
[99.81152344 -151.34306335]
[86.23955536 -158.32620239]
[77.04835510 -170.51162720]
[74.06285095 -185.47991943]
[77.87582397 -200.25909424]
[87.73018646 -211.91474915]
[101.66936493 -218.13262939]
[116.92571259 -217.67819214]
[130.47007751 -210.64166260]
[139.61322021 -198.42012024]
[142.53974915 -183.44020081]
[138.66860962 -168.67616272]
[128.76843262 -157.05940247]
[114.80487061 -150.89645386]
[114.35826874 -135.90310669]
[113.91165924 -120.90975189]
[124.28060150 -110.27863312]
[124.04126740 -95.06688690]
[112.82006836 -84.26306915]
[120.17500305 -71.31106567]
[112.03025055 -57.74738312]
[111.58364105 -42.75403214]
[118.93857574 -29.80203438]
[110.79382324 -16.23834991]
[110.34721375 -1.24499917]
[109.90061188 13.74835110]
[109.45400238 28.74170113]
[109.00740051 43.73505020]
[108.56079102 58.72840118]
[118.92973328 69.35951996]
[118.69039917 84.57126617]
[107.46920013 95.37508392]
[109.36370087 97.76263428]
[110.43134308 100.89227295]
[110.39559174 104.45909119]
[109.09644318 108.06026459]
[106.52321625 111.24011993]
[105.18498230 126.18030548]
[103.84674835 141.12048340]
[102.50851440 156.06066895]
[101.17028046 171.00085449]
[114.85550690 177.47695923]
[125.47938538 188.22430420]
[131.77340698 201.93215942]
[132.99546814 216.93804932]
[129.01730347 231.42927551]
[120.33767700 243.66195679]
[108.01989746 252.17086792]
[93.56160736 255.94488525]
[92.22337341 270.88507080]
[90.88513947 285.82525635]
[89.54690552 300.76544189]
[88.20867157 315.70562744]
[87.98534393 330.70394897]
[88.87815857 345.67736816]
[97.42314148 358.99255371]
[90.45709991 372.15777588]
[91.34991455 387.13119507]
[92.24272919 402.10458374]
[93.13555145 417.07800293]
[108.14038086 417.11767578]
[123.11371613 418.09008789]
[137.99763489 419.99154663]
[152.73454285 422.81463623]
[167.26744080 426.54849243]
[181.54010010 431.17858887]
[195.49728394 436.68707275]
[209.08500671 443.05261230]
[222.25070190 450.25061035]
[234.94343567 458.25317383]
[247.11410522 467.02935791]
[258.71560669 476.54522705]
[269.70306396 486.76394653]
[280.03396606 497.64596558]
[289.66836548 509.14923096]
[298.56896973 521.22918701]
[306.70135498 533.83917236]
[314.03402710 546.93029785]
[320.53866577 560.45202637]
[326.19006348 574.35198975]
[330.96636963 588.57635498]
[334.84909058 603.07019043]
[337.82324219 617.77734375]
[339.87731934 632.64099121]
[341.00332642 647.60357666]
[341.19692993 662.60717773]
[340.45739746 677.59381104]
[338.78759766 692.50549316]
[336.19393921 707.28454590]
[332.68649292 721.87371826]
[328.27883911 736.21661377]
[322.98800659 750.25775146]
[316.83447266 763.94281006]
[309.84207153 777.21881104]
[302.03778076 790.03442383]
[293.45187378 802.34008789]
[284.11752319 814.08813477]
[274.07086182 825.23309326]
[263.35076904 835.73199463]
[251.99867249 845.54400635]
[240.05853271 854.63134766]
[227.57653809 862.95880127]
[214.60095215 870.49414062]
[201.18202209 877.20819092]
[187.37162781 883.07501221]
[173.22320557 888.07183838]
[158.79150391 892.17944336]
[144.13233948 895.38189697]
[129.30244446 897.66680908]
[114.35919189 899.02532959]
[99.36038208 899.45214844]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 159]
[49 158]
[50 157]
[51 156]
[53 154]
[54 153]
[65 152]
[66 151]
[67 150]
[68 149]
[69 148]
[77 140]
[78 139]
[79 138]
[80 137]
[81 136]
[82 131]
[85 128]
[86 127]
[87 126]
[88 125]
[89 124]
[90 123]
[92 121]
[93 120]
[95 118]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
