%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUGxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[31.07004356 293.87963867]
[29.60320663 308.81579590]
[26.95431709 323.58816528]
[23.14012527 338.10339355]
[18.18474579 352.26971436]
[12.11950874 365.99752808]
[4.98275948 379.20007324]
[-3.18037963 391.79385376]
[-12.31829739 403.69924927]
[-22.37322235 414.84100342]
[-33.28157806 425.14865112]
[-44.97440338 434.55703735]
[-57.37776947 443.00671387]
[-70.41325378 450.44418335]
[-83.99845123 456.82247925]
[-98.04745483 462.10125732]
[-112.47145081 466.24716187]
[-127.17924500 469.23394775]
[-142.07785034 471.04272461]
[-157.07305908 471.66210938]
[-172.07008362 471.08813477]
[-186.97409058 469.32446289]
[-201.69087219 466.38223267]
[-216.12734985 462.28005981]
[-230.19227600 457.04385376]
[-243.79672241 450.70672607]
[-256.85467529 443.30874634]
[-269.28356934 434.89669800]
[-281.00485229 425.52374268]
[-291.94436646 415.24917603]
[-302.03298950 404.13793945]
[-311.20690918 392.26025391]
[-319.40814209 379.69125366]
[-326.58483887 366.51040649]
[-332.69165039 352.80102539]
[-337.68988037 338.64978027]
[-341.54803467 324.14614868]
[-344.24163818 309.38186646]
[-345.75369263 294.45022583]
[-346.07464600 279.44564819]
[-345.20248413 264.46301270]
[-343.14266968 249.59704590]
[-339.90826416 234.94171143]
[-335.51971436 220.58969116]
[-330.00473022 206.63169861]
[-323.39822388 193.15602112]
[-315.74197388 180.24781799]
[-307.08432007 167.98872375]
[-297.48007202 156.45622253]
[-286.98989868 145.72326660]
[-275.68017578 135.85766602]
[-263.62234497 126.92183685]
[-250.89268494 118.97225952]
[-237.57167053 112.05918121]
[-223.74351501 106.22632599]
[-209.49565125 101.51056671]
[-194.91815186 97.94171906]
[-180.10319519 95.54234314]
[-165.14442444 94.32761383]
[-150.13644409 94.30520630]
[-135.17413330 95.47526550]
[-120.35206604 97.83039093]
[-105.76397705 101.35569763]
[-91.50209045 106.02889252]
[-77.65658569 111.82043457]
[-64.31497955 118.69369507]
[-51.56164169 126.60523987]
[-39.47719574 135.50502014]
[-28.13804626 145.33679199]
[-17.61588287 156.03839111]
[-7.97723198 167.54216003]
[-2.08563042 153.86230469]
[13.64526272 152.17424011]
[25.87174797 143.48440552]
[38.09823227 134.79458618]
[50.32471848 126.10475922]
[62.55120468 117.41493225]
[74.77768707 108.72511292]
[87.00417328 100.03528595]
[98.96651459 90.98528290]
[110.65409088 81.58313751]
[116.55698395 66.90435791]
[131.32353210 64.95546722]
[143.01112366 55.55331421]
[154.69869995 46.15116501]
[160.60159302 31.47238731]
[175.36814880 29.52349472]
[166.73101807 17.25337982]
[158.89778137 4.45509148]
[151.90065002 -8.81877995]
[145.76834106 -22.51368904]
[140.52607727 -36.57336044]
[136.19538879 -50.94001770]
[132.79408264 -65.55462646]
[130.33612061 -80.35712433]
[128.83161926 -95.28669739]
[128.28675842 -110.28199005]
[128.70376587 -125.28138733]
[130.08093262 -140.22323608]
[132.41259766 -155.04615784]
[135.68919373 -169.68923950]
[139.89723206 -184.09228516]
[145.01945496 -198.19613647]
[151.03477478 -211.94284058]
[157.91850281 -225.27587891]
[165.64233398 -238.14048767]
[174.17454529 -250.48377991]
[183.48005676 -262.25506592]
[193.52064514 -273.40594482]
[204.25505066 -283.89062500]
[215.63914490 -293.66598511]
[227.62617493 -302.69189453]
[240.16687012 -310.93124390]
[253.20968628 -318.35015869]
[266.70104980 -324.91818237]
[280.58551025 -330.60830688]
[294.80599976 -335.39715576]
[309.30410767 -339.26507568]
[324.02023315 -342.19613647]
[338.89392090 -344.17828369]
[353.86404419 -345.20343018]
[368.86911011 -345.26730347]
[383.84741211 -344.36965942]
[398.73745728 -342.51422119]
[413.47799683 -339.70855713]
[428.00851440 -335.96423340]
[442.26925659 -331.29663086]
[456.20166016 -325.72491455]
[469.74847412 -319.27200317]
[482.85397339 -311.96441650]
[495.46435547 -303.83212280]
[507.52780151 -294.90863037]
[518.99475098 -285.23052979]
[529.81799316 -274.83764648]
[539.95318604 -263.77264404]
[549.35858154 -252.08102417]
[557.99554443 -239.81080627]
[565.82867432 -227.01243591]
[572.82562256 -213.73849487]
[578.95782471 -200.04351807]
[584.19989014 -185.98377991]
[588.53045654 -171.61708069]
[591.93157959 -157.00242615]
[594.38940430 -142.19990540]
[595.89373779 -127.27030945]
[596.43841553 -112.27501678]
[596.02124023 -97.27562714]
[594.64392090 -82.33378601]
[592.31207275 -67.51088715]
[589.03533936 -52.86785126]
[584.82708740 -38.46484375]
[579.70477295 -24.36104774]
[573.68927002 -10.61442375]
[566.80541992 2.71854210]
[559.08142090 15.58306122]
[550.54907227 27.92626953]
[541.24340820 39.69744492]
[531.20269775 50.84822083]
[520.46820068 61.33277130]
[509.08398438 71.10801697]
[497.09686279 80.13378143]
[484.55609131 88.37298584]
[471.51318359 95.79177094]
[458.02172852 102.35964203]
[444.13723755 108.04961395]
[429.91668701 112.83831787]
[415.41851807 116.70606232]
[400.70236206 119.63695526]
[385.82864380 121.61895752]
[370.85852051 122.64391327]
[355.85345459 122.70762634]
[340.87515259 121.80982971]
[325.98513794 119.95420837]
[311.24462891 117.14839172]
[296.71414185 113.40390778]
[282.45346069 108.73614502]
[268.52111816 103.16428375]
[254.97439575 96.71121979]
[241.86895752 89.40346527]
[229.25866699 81.27105713]
[217.19531250 72.34741211]
[205.72850037 62.66919708]
[194.90533447 52.27618027]
[184.77029419 41.21107483]
[179.70338440 55.21734619]
[164.10084534 57.83874512]
[152.41326904 67.24089813]
[140.72569275 76.64304352]
[135.65876770 90.64931488]
[120.05624390 93.27071381]
[108.36866760 102.67286682]
[107.78465271 105.66426086]
[106.09928894 108.50926971]
[103.36470032 110.79956818]
[99.78311920 112.15179443]
[95.69400024 112.26177216]
[83.46751404 120.95159912]
[71.24102783 129.64141846]
[59.01454544 138.33123779]
[46.78805923 147.02107239]
[34.56157303 155.71089172]
[22.33508682 164.40071106]
[15.56896496 178.70211792]
[0.71259230 179.76864624]
[8.40791893 192.65359497]
[15.05520058 206.10922241]
[20.61240959 220.05043030]
[25.04441261 234.38909912]
[28.32318878 249.03456116]
[30.42800522 263.89422607]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[71 204]
[73 202]
[74 201]
[75 200]
[76 199]
[77 198]
[78 197]
[79 196]
[80 191]
[81 190]
[83 188]
[84 187]
[85 186]
[87 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
