%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[134.38168335 729.49456787]
[119.96828461 725.32995605]
[105.77474976 720.46856689]
[91.83473206 714.92193604]
[78.18130493 708.70312500]
[64.84684753 701.82690430]
[51.86298752 694.30969238]
[39.26052475 686.16918945]
[27.06935120 677.42474365]
[15.31838036 668.09716797]
[4.03548527 658.20849609]
[-6.75257254 647.78222656]
[-17.02020454 636.84301758]
[-26.74305534 625.41693115]
[-35.89806747 613.53100586]
[-44.46352386 601.21343994]
[-52.41910553 588.49340820]
[-59.74594498 575.40118408]
[-66.42666626 561.96771240]
[-72.44541931 548.22491455]
[-77.78793335 534.20538330]
[-82.44152832 519.94238281]
[-86.39517212 505.46972656]
[-89.63948822 490.82171631]
[-92.16677856 476.03311157]
[-93.97104645 461.13900757]
[-95.04801941 446.17474365]
[-95.39513397 431.17575073]
[-95.01157379 416.17767334]
[-93.89824677 401.21606445]
[-92.05780029 386.32638550]
[-89.49458313 371.54397583]
[-86.21469116 356.90390015]
[-82.22589111 342.44085693]
[-77.53765869 328.18920898]
[-72.16109467 314.18267822]
[-66.10897064 300.45455933]
[-59.39562988 287.03738403]
[-52.03700256 273.96298218]
[-44.05053711 261.26235962]
[-35.45518112 248.96562195]
[-26.27131844 237.10195923]
[-16.52073288 225.69952393]
[-6.22655296 214.78533936]
[4.58680487 204.38528442]
[15.89369297 194.52406311]
[27.66729164 185.22502136]
[39.87967682 176.51025391]
[52.50188065 168.40040588]
[65.50396729 160.91471863]
[78.85508728 154.07095337]
[92.52359009 147.88534546]
[106.47703552 142.37255859]
[101.65103912 128.17010498]
[96.82504272 113.96764374]
[86.43765259 104.60848999]
[88.97250366 90.85835266]
[84.14650726 76.65589905]
[79.32050323 62.45344543]
[74.49450684 48.25098801]
[69.66851044 34.04853058]
[64.84251404 19.84607697]
[60.01651382 5.64362097]
[55.19051743 -8.55883503]
[50.36452103 -22.76128960]
[45.53852081 -36.96374512]
[30.88316536 -33.69759369]
[15.96058369 -32.03513336]
[0.94573402 -31.99586678]
[-13.98534012 -33.58024597]
[-28.65758133 -36.76969910]
[-42.89896011 -41.52682877]
[-56.54251099 -47.79586411]
[-69.42826843 -55.50329971]
[-81.40515137 -64.55876923]
[-92.33273315 -74.85610962]
[-102.08290100 -86.27457428]
[-110.54133606 -98.68030548]
[-117.60886383 -111.92784119]
[-123.20262909 -125.86186981]
[-127.25704193 -140.31901550]
[-129.72456360 -155.12977600]
[-130.57627869 -170.12049866]
[-129.80218506 -185.11543274]
[-127.41136169 -199.93876648]
[-123.43184662 -214.41670227]
[-117.91029358 -228.37950134]
[-110.91143799 -241.66343689]
[-102.51733398 -254.11279297]
[-92.82640839 -265.58157349]
[-81.95227814 -275.93536377]
[-70.02243805 -285.05270386]
[-57.17675400 -292.82675171]
[-43.56584167 -299.16632080]
[-29.34927750 -303.99713135]
[-14.69374561 -307.26248169]
[0.22892657 -308.92413330]
[15.24377823 -308.96258545]
[30.17476654 -307.37741089]
[44.84683609 -304.18716431]
[59.08795929 -299.42926025]
[72.73117065 -293.15951538]
[85.61651611 -285.45138550]
[97.59291077 -276.39526367]
[108.51993561 -266.09735107]
[118.26949310 -254.67834473]
[126.72725677 -242.27215576]
[133.79408264 -229.02424622]
[139.38708496 -215.08992004]
[143.44071960 -200.63255310]
[145.90745544 -185.82167053]
[146.75836182 -170.83088684]
[145.98345947 -155.83599854]
[143.59184265 -141.01280212]
[139.61154175 -126.53507233]
[134.08923340 -112.57257080]
[127.08966827 -99.28900146]
[118.69489288 -86.84010315]
[109.00335693 -75.37183380]
[98.12866974 -65.01864624]
[86.19833374 -55.90193939]
[73.35223389 -48.12858963]
[59.74097824 -41.78974533]
[64.56697845 -27.58728790]
[69.39297485 -13.38483238]
[74.21897125 0.81762332]
[79.04496765 15.02007866]
[83.87096405 29.22253418]
[88.69696045 43.42499161]
[93.52296448 57.62744522]
[98.34896088 71.82990265]
[103.17495728 86.03235626]
[113.56234741 95.39151001]
[111.02749634 109.14164734]
[115.85349274 123.34410095]
[120.67949677 137.54655457]
[135.10292053 133.41687012]
[149.71031189 129.99433899]
[164.46701050 127.28704834]
[179.33802795 125.30145264]
[194.28808594 124.04223633]
[209.28170776 123.51240540]
[224.28335571 123.71320343]
[239.25743103 124.64415741]
[254.16842651 126.30306244]
[268.98095703 128.68597412]
[283.65991211 131.78726196]
[298.17047119 135.59954834]
[312.47821045 140.11380005]
[326.54916382 145.31930542]
[340.35000610 151.20372009]
[353.84799194 157.75309753]
[367.01107788 164.95188904]
[379.80807495 172.78302002]
[392.20861816 181.22792053]
[404.18328857 190.26655579]
[415.70367432 199.87748718]
[426.74249268 210.03793335]
[437.27349854 220.72377014]
[447.27175903 231.90968323]
[456.71356201 243.56910706]
[465.57647705 255.67440796]
[473.83950806 268.19686890]
[481.48303223 281.10678101]
[488.48895264 294.37353516]
[494.84063721 307.96563721]
[500.52304077 321.85089111]
[505.52264404 335.99633789]
[509.82760620 350.36843872]
[513.42773438 364.93307495]
[516.31445312 379.65573120]
[518.48095703 394.50146484]
[519.92205811 409.43505859]
[520.63439941 424.42114258]
[520.61621094 439.42410278]
[519.86767578 454.40841675]
[518.39038086 469.33850098]
[516.18798828 484.17895508]
[513.26562500 498.89456177]
[509.63027954 513.45043945]
[505.29055786 527.81207275]
[500.25671387 541.94537354]
[494.54074097 555.81683350]
[488.15618896 569.39355469]
[481.11819458 582.64331055]
[473.44342041 595.53466797]
[465.15011597 608.03710938]
[456.25793457 620.12091064]
[446.78796387 631.75750732]
[436.76263428 642.91912842]
[426.20581055 653.57946777]
[415.14245605 663.71319580]
[403.59881592 673.29620361]
[391.60232544 682.30584717]
[379.18139648 690.72070312]
[366.36547852 698.52087402]
[353.18499756 705.68774414]
[339.67120361 712.20446777]
[325.85617065 718.05548096]
[311.77264404 723.22686768]
[297.45404053 727.70648193]
[282.93429565 731.48364258]
[268.24786377 734.54943848]
[253.42961121 736.89648438]
[238.51464844 738.51928711]
[223.53836060 739.41400146]
[208.53628540 739.57849121]
[193.54397583 739.01239014]
[178.59701538 737.71697998]
[163.73085022 735.69543457]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 136]
[54 135]
[55 134]
[57 132]
[58 131]
[59 130]
[60 129]
[61 128]
[62 127]
[63 126]
[64 125]
[65 124]
[66 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
