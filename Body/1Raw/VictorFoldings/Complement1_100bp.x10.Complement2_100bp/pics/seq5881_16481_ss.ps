%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[119.94489288 620.20977783]
[106.11634827 626.89312744]
[90.79999542 625.75073242]
[78.11585999 617.09002686]
[71.47590637 603.24060059]
[72.66625214 587.92791748]
[81.36669922 575.27099609]
[95.23686981 568.67443848]
[96.35251617 553.71600342]
[97.46816254 538.75756836]
[98.58381653 523.79913330]
[86.19751740 515.52593994]
[79.57125854 502.07421875]
[80.57445526 487.01235962]
[89.03759003 474.39205933]
[102.77096558 467.65841675]
[103.88661194 452.69998169]
[105.00225830 437.74151611]
[106.11791229 422.78308105]
[107.23355865 407.82461548]
[108.12637329 392.85119629]
[108.79615784 377.86618042]
[109.46594238 362.88113403]
[110.13572693 347.89608765]
[110.80551147 332.91104126]
[111.47530365 317.92602539]
[112.03350830 302.93640137]
[111.02925110 287.97006226]
[108.58352661 273.17077637]
[97.85935211 283.65850830]
[82.95529175 281.96466064]
[74.85807037 269.33792114]
[79.53665161 255.08621216]
[93.54216003 249.71539307]
[106.54931641 257.18325806]
[105.21108246 242.24307251]
[103.87284851 227.30288696]
[95.03092957 215.31666565]
[101.50618744 200.88122559]
[100.16795349 185.94104004]
[98.82971954 171.00085449]
[97.49148560 156.06066895]
[96.15325165 141.12048340]
[94.81501770 126.18030548]
[93.47678375 111.24011993]
[91.69431305 96.34640503]
[89.46920013 81.51235962]
[87.24407959 66.67831421]
[85.01896667 51.84427261]
[82.79384613 37.01022720]
[71.11279297 30.30444145]
[65.50847626 18.27106857]
[67.82376862 5.39778233]
[76.99288177 -3.65522003]
[74.98886871 -18.52074814]
[72.98485565 -33.38627625]
[59.48703003 -40.81021500]
[53.02435684 -54.59742737]
[55.88546371 -69.37166595]
[66.76736450 -79.50686646]
[64.76335144 -94.37239075]
[62.75933838 -109.23792267]
[59.56745529 -113.36817169]
[58.39616013 -117.86053467]
[59.04502869 -121.88471222]
[61.01314163 -124.81027222]
[52.07550430 -137.86512756]
[58.64647675 -151.23193359]
[57.30824280 -166.17211914]
[55.97000885 -181.11230469]
[54.63177490 -196.05249023]
[53.29354095 -210.99267578]
[49.41099548 -219.26091003]
[52.04829788 -226.16499329]
[41.33024979 -241.13847351]
[49.56100464 -256.63754272]
[48.22277069 -271.57772827]
[46.88453674 -286.51791382]
[38.05619431 -274.39108276]
[23.82189178 -269.65985107]
[9.49067020 -274.08883667]
[0.40771946 -286.02618408]
[-0.03924312 -301.01950073]
[8.31648827 -313.47671509]
[22.35843277 -318.75152588]
[36.84928894 -314.87661743]
[46.38476562 -303.29611206]
[46.83137131 -318.28945923]
[47.27797699 -333.28280640]
[47.72458267 -348.27615356]
[33.02502060 -351.47576904]
[19.16376495 -357.32217407]
[6.61292648 -365.61621094]
[-4.20001793 -376.07540894]
[-12.90678310 -388.34353638]
[-19.21082115 -402.00271606]
[-22.89741898 -416.58776855]
[-23.84101105 -431.60189819]
[-22.00945854 -446.53375244]
[-17.46514511 -460.87475586]
[-10.36284924 -474.13641357]
[-0.94446999 -485.86709595]
[10.46920490 -495.66723633]
[23.48942947 -503.20303345]
[37.67274094 -508.21786499]
[52.53606033 -510.54086304]
[67.57315063 -510.09295654]
[82.27185059 -506.88937378]
[96.13153076 -501.03924561]
[108.68013000 -492.74182129]
[119.49025726 -482.27972412]
[128.19371033 -470.00924683]
[134.49406433 -456.34835815]
[138.17672729 -441.76229858]
[139.11627197 -426.74792480]
[137.28070068 -411.81655884]
[132.73252869 -397.47680664]
[125.62665558 -384.21704102]
[116.20510864 -372.48889160]
[104.78879547 -362.69183350]
[91.76654053 -355.15954590]
[77.58187866 -350.14855957]
[62.71793365 -347.82955933]
[62.27132416 -332.83621216]
[61.82471848 -317.84286499]
[61.37811279 -302.84951782]
[61.82471848 -287.85617065]
[63.16295242 -272.91598511]
[64.50119019 -257.97579956]
[73.57956696 -249.98144531]
[74.81674194 -237.54547119]
[67.00675201 -227.28063965]
[68.23372650 -212.33090210]
[69.57196045 -197.39071655]
[70.91019440 -182.45054626]
[72.24842834 -167.51036072]
[73.58666229 -152.57017517]
[82.42858124 -140.58393860]
[75.95332336 -126.14850616]
[77.62486267 -111.24193573]
[79.62888336 -96.37640381]
[81.63289642 -81.51087952]
[94.81019592 -74.61908722]
[101.48147583 -61.12990570]
[98.90045166 -46.12351608]
[87.85038757 -35.39028931]
[89.85440063 -20.52476120]
[91.85841370 -5.65923357]
[105.65604401 3.95659232]
[108.28166962 20.91008568]
[97.62789154 34.78511047]
[99.85300446 49.61915588]
[102.07812500 64.45320129]
[104.30324554 79.28723907]
[106.52835846 94.12128448]
[108.81701660 96.13413239]
[110.42386627 99.02421570]
[111.02257538 102.54060364]
[110.38410187 106.31533813]
[108.41696930 109.90188599]
[109.75520325 124.84207153]
[111.09343719 139.78225708]
[112.43167114 154.72244263]
[113.76990509 169.66262817]
[115.10813904 184.60281372]
[116.44637299 199.54299927]
[125.38401031 212.59785461]
[118.81303406 225.96466064]
[120.15126801 240.90484619]
[121.48950195 255.84503174]
[123.38279724 270.72506714]
[125.82852173 285.52432251]
[131.49194336 271.63455200]
[142.25863647 261.19052124]
[156.31423950 255.95219421]
[171.29013062 256.80233765]
[184.66261292 263.59768677]
[194.17817688 275.19311523]
[198.23329163 289.63461304]
[196.14459229 304.48846436]
[188.26406860 317.25158691]
[175.91972351 325.77316284]
[161.19180298 328.61715698]
[146.56221008 325.30429077]
[134.49629211 316.39285278]
[127.02686310 303.38302612]
[129.89936829 312.05401611]
[126.46034241 318.59579468]
[125.79055023 333.58084106]
[125.12076569 348.56588745]
[124.45098114 363.55090332]
[123.78119659 378.53594971]
[123.11141205 393.52099609]
[125.81424713 399.55474854]
[125.16209412 405.20025635]
[122.19200897 408.94027710]
[121.07636261 423.89871216]
[119.96071625 438.85717773]
[118.84506989 453.81561279]
[117.72941589 468.77407837]
[130.31198120 477.47042847]
[136.80937195 491.20654297]
[135.56716919 506.25057983]
[127.01877594 518.57055664]
[113.54226685 524.91473389]
[112.42662048 539.87322998]
[111.31097412 554.83166504]
[110.19532013 569.79010010]
[122.93350220 578.37115479]
[129.66014099 592.17871094]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 208]
[9 207]
[10 206]
[11 205]
[16 200]
[17 199]
[18 198]
[19 197]
[20 196]
[21 193]
[22 192]
[23 191]
[24 190]
[25 189]
[26 188]
[27 186]
[28 172]
[29 171]
[35 170]
[36 169]
[37 168]
[39 166]
[40 165]
[41 164]
[42 163]
[43 162]
[44 161]
[45 160]
[46 155]
[47 154]
[48 153]
[49 152]
[50 151]
[54 148]
[55 147]
[56 146]
[60 142]
[61 141]
[62 140]
[66 139]
[68 137]
[69 136]
[70 135]
[71 134]
[72 133]
[74 132]
[76 129]
[77 128]
[78 127]
[87 126]
[88 125]
[89 124]
[90 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
