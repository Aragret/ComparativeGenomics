%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[181.98858643 454.18020630]
[183.57554626 439.25320435]
[186.55332947 424.54037476]
[190.89578247 410.17105103]
[196.56474304 396.27148438]
[203.51036072 382.96386719]
[211.67163086 370.36514282]
[220.97682190 358.58599854]
[231.34414673 347.72998047]
[221.51356506 336.40039062]
[211.68298340 325.07080078]
[201.85240173 313.74121094]
[192.02182007 302.41162109]
[182.19123840 291.08203125]
[172.36065674 279.75241089]
[162.53007507 268.42282104]
[166.28390503 282.94552612]
[166.35925293 297.94534302]
[162.75152588 312.50500488]
[155.68132019 325.73422241]
[145.58099365 336.82403564]
[133.06817627 345.09622192]
[118.90802765 350.04501343]
[103.96646881 351.36773682]
[89.15715790 348.98355103]
[75.38570404 343.03820801]
[63.49422836 333.89529419]
[54.20990753 322.11389160]
[48.10047531 308.41445923]
[45.53952408 293.63467407]
[46.68366623 278.67837524]
[51.46292496 264.46014404]
[59.58505630 251.84938049]
[70.55338287 241.61727905]
[83.69719696 234.38954163]
[98.21273804 230.60812378]
[113.21237946 230.50427246]
[127.77888489 234.08435059]
[141.02151489 241.12939453]
[152.13047791 251.20866394]
[146.67512512 237.23587036]
[141.21977234 223.26307678]
[135.76440430 209.29026794]
[130.30905151 195.31747437]
[124.74982452 181.38568115]
[119.08704376 167.49565125]
[113.42425537 153.60562134]
[107.76146698 139.71559143]
[102.09867859 125.82556915]
[96.43589783 111.93553925]
[95.15125275 126.88043213]
[89.76190948 140.87882996]
[80.69289398 152.82675171]
[68.65941620 161.78193665]
[54.61049652 167.03816223]
[39.65408707 168.18087769]
[24.96971130 165.11996460]
[11.71544361 158.09683228]
[0.93656969 147.66534424]
[-6.51684380 134.64817810]
[-10.05698967 120.07192230]
[-9.40467739 105.08611298]
[-4.61135054 90.87259674]
[3.94496918 78.55231476]
[15.58949471 69.09689331]
[29.40388870 63.25202179]
[44.29869461 61.47865677]
[59.09923935 63.91665649]
[72.63829803 70.37374115]
[83.84811401 80.34068298]
[91.84606171 93.03461456]
[90.50782776 78.09442902]
[89.16959381 63.15424347]
[87.83135986 48.21406174]
[86.49312592 33.27387619]
[74.64876556 23.15711021]
[73.50444031 7.98657370]
[83.22222137 -3.24286509]
[81.88398743 -18.18305016]
[80.32346344 -33.10165405]
[71.00109863 -45.88461304]
[77.17118073 -59.44113922]
[75.38871002 -74.33485413]
[73.60624695 -89.22857666]
[71.82378387 -104.12229156]
[70.04131317 -119.01600647]
[68.25885010 -133.90972900]
[66.47638702 -148.80343628]
[51.49430847 -150.37989807]
[37.23883057 -155.25114441]
[24.42499542 -163.17285156]
[13.69554043 -173.74765015]
[5.58865070 -186.44514465]
[0.51096392 -200.62840271]
[-1.28282475 -215.58599854]
[0.29726034 -230.56770325]
[5.17196274 -244.82199097]
[13.09676933 -257.63391113]
[23.67417526 -268.36080933]
[36.37362289 -276.46463013]
[50.55810928 -281.53887939]
[65.51615143 -283.32904053]
[80.49745941 -281.74530029]
[94.75057983 -276.86715698]
[107.56056976 -268.93923950]
[118.28490448 -258.35925293]
[126.38563538 -245.65783691]
[131.45645142 -231.47212219]
[133.24299622 -216.51364136]
[131.65563965 -201.53271484]
[126.77404022 -187.28077698]
[118.84302521 -174.47270203]
[108.26042175 -163.75094604]
[95.55704498 -155.65328979]
[81.37010193 -150.58590698]
[83.15256500 -135.69218445]
[84.93503571 -120.79847717]
[86.71749878 -105.90475464]
[88.49996185 -91.01103973]
[90.28243256 -76.11732483]
[92.06489563 -61.22360611]
[101.25976562 -49.50594330]
[95.21717834 -34.88412094]
[98.35129547 -31.28046227]
[99.25489044 -25.66971016]
[96.82417297 -19.52128410]
[98.16240692 -4.58109951]
[109.72118378 4.74253845]
[111.29117584 19.87494659]
[101.43331146 31.93564034]
[102.77154541 46.87582397]
[104.10977936 61.81600952]
[105.44801331 76.75619507]
[106.78624725 91.69638062]
[110.32592010 106.27275848]
[115.98870850 120.16278076]
[121.65149689 134.05281067]
[127.31427765 147.94284058]
[132.97706604 161.83287048]
[138.63984680 175.72288513]
[144.77742004 182.48809814]
[144.28184509 189.86212158]
[149.73721313 203.83491516]
[155.19256592 217.80770874]
[160.64791870 231.78051758]
[166.10328674 245.75331116]
[173.85966492 258.59225464]
[183.69024658 269.92184448]
[193.52082825 281.25143433]
[203.35140991 292.58102417]
[213.18199158 303.91061401]
[223.01257324 315.24020386]
[232.84315491 326.56982422]
[242.67373657 337.89941406]
[254.88287354 329.16604614]
[267.85617065 321.61434937]
[281.47961426 315.31069946]
[295.63348389 310.31045532]
[310.19342041 306.65762329]
[325.03140259 304.38424683]
[340.01708984 303.51034546]
[355.01876831 304.04357910]
[369.90457153 305.97924805]
[384.54373169 309.30035400]
[398.80755615 313.97772217]
[412.57070923 319.97024536]
[425.71221924 327.22525024]
[438.11660767 335.67898560]
[449.67486572 345.25714111]
[460.28540039 355.87554932]
[469.85501099 367.44091797]
[478.29953003 379.85156250]
[485.54479980 392.99844360]
[491.52709961 406.76605225]
[496.19390869 421.03332520]
[499.50415039 435.67492676]
[501.42880249 450.56219482]
[501.95089722 465.56423950]
[501.06588745 480.54928589]
[498.78152466 495.38558960]
[495.11785889 509.94281006]
[490.10714722 524.09295654]
[483.79339600 537.71173096]
[476.23208618 550.67944336]
[467.48968506 562.88208008]
[457.64300537 574.21246338]
[446.77856445 584.57098389]
[434.99191284 593.86657715]
[422.38653564 602.01763916]
[409.07330322 608.95245361]
[395.16915894 614.61016846]
[380.79632568 618.94097900]
[366.08108521 621.90679932]
[351.15277100 623.48162842]
[336.14257812 623.65167236]
[321.18243408 622.41534424]
[306.40380859 619.78350830]
[291.93655396 615.77935791]
[277.90783691 610.43804932]
[264.44094849 603.80657959]
[251.65420532 595.94311523]
[239.66000366 586.91680908]
[228.56376648 576.80706787]
[218.46298218 565.70257568]
[209.44642639 553.70111084]
[201.59335327 540.90795898]
[194.97274780 527.43572998]
[189.64283752 513.40264893]
[185.65042114 498.93215942]
[183.03059387 484.15139771]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 154]
[10 153]
[11 152]
[12 151]
[13 150]
[14 149]
[15 148]
[16 147]
[40 146]
[41 145]
[42 144]
[43 143]
[44 142]
[45 140]
[46 139]
[47 138]
[48 137]
[49 136]
[50 135]
[71 134]
[72 133]
[73 132]
[74 131]
[75 130]
[78 127]
[79 126]
[80 123]
[82 121]
[83 120]
[84 119]
[85 118]
[86 117]
[87 116]
[88 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
