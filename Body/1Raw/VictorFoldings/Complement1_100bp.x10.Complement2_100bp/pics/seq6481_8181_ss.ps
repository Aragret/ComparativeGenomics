%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxGACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUG\
) } def
/len { sequence length } bind def

/coor [
[137.44631958 598.18847656]
[125.22474670 589.48468018]
[113.51999664 580.09735107]
[102.37025452 570.05706787]
[91.81188202 559.39666748]
[81.87932587 548.15087891]
[72.60497284 536.35638428]
[64.01908112 524.05169678]
[56.14965439 511.27688599]
[49.02236176 498.07366943]
[42.66044998 484.48507690]
[37.08467484 470.55548096]
[32.31322098 456.33026123]
[28.36165047 441.85583496]
[25.24285316 427.17944336]
[22.96700096 412.34893799]
[21.54152107 397.41268921]
[20.97105789 382.41943359]
[21.25747681 367.41806030]
[22.39984131 352.45748901]
[24.39442635 337.58654785]
[27.23472404 322.85372925]
[30.91147041 308.30706787]
[35.41267395 293.99404907]
[40.72365189 279.96133423]
[46.82707977 266.25473022]
[53.70305252 252.91888428]
[61.32913971 239.99734497]
[69.68046570 227.53224182]
[78.72978973 215.56423950]
[88.44760132 204.13237000]
[98.80219269 193.27392578]
[109.75979614 183.02432251]
[121.28466797 173.41699219]
[133.33921814 164.48327637]
[125.11040497 151.94186401]
[116.88159943 139.40046692]
[108.65279388 126.85906982]
[100.42398071 114.31766510]
[88.02384186 107.85793304]
[87.03461456 93.91114044]
[73.95023346 101.25821686]
[60.39014053 107.68508148]
[46.41896057 113.16110229]
[32.10327148 117.66018677]
[17.51129532 121.16088104]
[2.71257067 123.64652252]
[-12.22238064 125.10524750]
[-27.22238541 125.53011322]
[-42.21596146 124.91909790]
[-57.13165665 123.27511597]
[-71.89839172 120.60598755]
[-86.44579315 116.92443848]
[-100.70453644 112.24802399]
[-114.60667419 106.59901428]
[-128.08595276 100.00434113]
[-141.07814026 92.49542236]
[-153.52130127 84.10804749]
[-165.35617065 74.88217926]
[-176.52633667 64.86180115]
[-186.97856140 54.09464264]
[-196.66305542 42.63203049]
[-205.53363037 30.52858353]
[-213.54804993 17.84198189]
[-220.66809082 4.63268232]
[-226.85984802 -9.03636456]
[-232.09379578 -23.10001945]
[-236.34501648 -37.49126434]
[-239.59321594 -52.14151382]
[-241.82295227 -66.98094940]
[-243.02357483 -81.93886566]
[-243.18936157 -96.94396973]
[-242.31953430 -111.92475891]
[-240.41822815 -126.80984497]
[-237.49450684 -141.52828979]
[-233.56231689 -156.00994873]
[-228.64038086 -170.18582153]
[-222.75215149 -183.98832703]
[-215.92570496 -197.35173035]
[-208.19357300 -210.21231079]
[-199.59257507 -222.50880432]
[-190.16372681 -234.18260193]
[-179.95195007 -245.17807007]
[-169.00592041 -255.44281006]
[-157.37779236 -264.92791748]
[-145.12297058 -273.58816528]
[-132.29988098 -281.38232422]
[-118.96959686 -288.27322388]
[-105.19567108 -294.22802734]
[-91.04373169 -299.21835327]
[-76.58123016 -303.22042847]
[-61.87707520 -306.21517944]
[-47.00134659 -308.18832397]
[-32.02492905 -309.13046265]
[-17.01919937 -309.03713989]
[-2.05566311 -307.90875244]
[12.79437065 -305.75070190]
[27.46013260 -302.57327271]
[41.87173462 -298.39160156]
[55.96049881 -293.22561646]
[69.65928650 -287.09994507]
[82.90280914 -280.04376221]
[95.62796021 -272.09069824]
[107.77409363 -263.27865601]
[119.28334045 -253.64962769]
[130.10083008 -243.24951172]
[140.17503357 -232.12786865]
[149.45793152 -220.33767700]
[157.90528870 -207.93515015]
[165.47685242 -194.97937012]
[172.13653564 -181.53208923]
[177.85261536 -167.65739441]
[182.59782410 -153.42140198]
[186.34956360 -138.89193726]
[189.08996582 -124.13826752]
[190.80595398 -109.23068237]
[191.48936462 -94.24023438]
[191.13691711 -79.23834991]
[189.75032043 -64.29653168]
[187.33616638 -49.48597717]
[183.90597534 -34.87726593]
[179.47605896 -20.54002190]
[174.06756592 -6.54256344]
[167.70625305 7.04840231]
[160.42243958 20.16810799]
[152.25082397 32.75403214]
[143.23036194 44.74619675]
[133.40405273 56.08744812]
[122.81868744 66.72374725]
[111.52473450 76.60440063]
[99.57601929 85.68233490]
[111.97615814 92.14206696]
[112.96538544 106.08885956]
[121.19419098 118.63026428]
[129.42300415 131.17166138]
[137.65180969 143.71305847]
[145.88061523 156.25445557]
[158.87483215 148.75288391]
[172.27612305 142.00538635]
[186.04077148 136.03393555]
[200.12387085 130.85804749]
[214.47947693 126.49459076]
[229.06079102 122.95779419]
[243.82022095 120.25919342]
[258.70965576 118.40760040]
[273.68051147 117.40904236]
[288.68392944 117.26678467]
[303.67102051 117.98129272]
[318.59289551 119.55023193]
[333.40084839 121.96848297]
[348.04660034 125.22816467]
[362.48236084 129.31863403]
[376.66107178 134.22656250]
[390.53646851 139.93592834]
[404.06326294 146.42813110]
[417.19741821 153.68196106]
[429.89599609 161.67376709]
[442.11764526 170.37750244]
[453.82244873 179.76477051]
[464.97229004 189.80493164]
[475.53073120 200.46525574]
[485.46337891 211.71095276]
[494.73782349 223.50537109]
[503.32382202 235.81001282]
[511.19335938 248.58474731]
[518.32073975 261.78790283]
[524.68273926 275.37643433]
[530.25866699 289.30603027]
[535.03021240 303.53118896]
[538.98187256 318.00558472]
[542.10083008 332.68194580]
[544.37677002 347.51242065]
[545.80236816 362.44866943]
[546.37292480 377.44192505]
[546.08666992 392.44329834]
[544.94439697 407.40386963]
[542.94995117 422.27484131]
[540.10974121 437.00769043]
[536.43310547 451.55435181]
[531.93200684 465.86743164]
[526.62115479 479.90017700]
[520.51782227 493.60684204]
[513.64196777 506.94274902]
[506.01599121 519.86431885]
[497.66476440 532.32952881]
[488.61550903 544.29760742]
[478.89779663 555.72955322]
[468.54330444 566.58807373]
[457.58578491 576.83776855]
[446.06097412 586.44512939]
[434.00650024 595.37896729]
[421.46166992 603.61004639]
[408.46737671 611.11151123]
[395.06604004 617.85888672]
[381.30136108 623.83026123]
[367.21820068 629.00604248]
[352.86257935 633.36938477]
[338.28121948 636.90606689]
[323.52175903 639.60455322]
[308.63232422 641.45599365]
[293.66146851 642.45446777]
[278.65802002 642.59661865]
[263.67095947 641.88195801]
[248.74909973 640.31292725]
[233.94116211 637.89453125]
[219.29544067 634.63476562]
[204.85971069 630.54418945]
[190.68104553 625.63610840]
[176.80569458 619.92663574]
[163.27891541 613.43432617]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 137]
[36 136]
[37 135]
[38 134]
[39 133]
[41 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
