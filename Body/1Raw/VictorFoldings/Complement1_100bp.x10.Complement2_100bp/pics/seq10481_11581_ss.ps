%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUGxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[94.64601135 540.39239502]
[79.90353394 543.20526123]
[64.98083496 544.80706787]
[49.97722626 545.18719482]
[34.99255371 544.34320068]
[20.12654305 542.28051758]
[5.47812319 539.01300049]
[-8.85522079 534.56237793]
[-22.77810097 528.95825195]
[-36.19786453 522.23797607]
[-49.02519608 514.44616699]
[-61.17473984 505.63470459]
[-72.56563568 495.86227417]
[-83.12207794 485.19390869]
[-92.77381897 473.70056152]
[-101.45662689 461.45877075]
[-109.11270905 448.54995728]
[-115.69112396 435.06005859]
[-121.14808655 421.07885742]
[-125.44728851 406.69937134]
[-128.56011963 392.01730347]
[-130.46585083 377.13037109]
[-131.15180969 362.13763428]
[-130.61343384 347.13885498]
[-128.85429382 332.23388672]
[-125.88610840 317.52188110]
[-121.72862244 303.10079956]
[-116.40951538 289.06655884]
[-109.96417999 275.51257324]
[-102.43550110 262.52905273]
[-93.87358856 250.20239258]
[-84.33542633 238.61462402]
[-73.88448334 227.84288025]
[-62.59031296 217.95883179]
[-50.52807236 209.02825928]
[-37.77803802 201.11058044]
[-24.42506409 194.25851440]
[-10.55800915 188.51765442]
[3.73084188 183.92617798]
[18.34639740 180.51467896]
[33.19139099 178.30583191]
[48.16703033 177.31436157]
[63.17365265 177.54684448]
[78.11138916 179.00173950]
[80.77719116 164.24052429]
[83.44298553 149.47930908]
[78.09073639 135.57957458]
[88.15743256 123.37415314]
[90.82322693 108.61293793]
[93.15871429 93.79586792]
[95.16272736 78.93033600]
[97.16674042 64.06481171]
[99.17075348 49.19928360]
[101.17476654 34.33375549]
[95.35054779 19.62358665]
[104.71885681 8.04412365]
[106.72287750 -6.82140493]
[108.72689056 -21.68693352]
[102.90266418 -36.39709854]
[112.27098083 -47.97656631]
[97.55397797 -50.90169144]
[83.04729462 -54.73611450]
[68.80706787 -59.46499634]
[54.88837814 -65.07004547]
[41.34507370 -71.52957153]
[28.22956085 -78.81859589]
[15.59257317 -86.90889740]
[3.48300433 -95.76919556]
[-8.05229568 -105.36520386]
[-18.96870041 -115.65979767]
[-29.22397423 -126.61314392]
[-38.77844238 -138.18287659]
[-47.59514236 -150.32421875]
[-55.63995743 -162.99021912]
[-62.88177109 -176.13186646]
[-69.29255676 -189.69830322]
[-74.84752655 -203.63705444]
[-79.52517700 -217.89419556]
[-83.30741119 -232.41456604]
[-86.17960358 -247.14199829]
[-88.13063812 -262.01950073]
[-89.15296173 -276.98950195]
[-89.24263000 -291.99411011]
[-88.39929199 -306.97528076]
[-86.62620544 -321.87503052]
[-83.93022919 -336.63574219]
[-80.32180786 -351.20028687]
[-75.81488037 -365.51229858]
[-70.42690277 -379.51644897]
[-64.17871094 -393.15853882]
[-57.09447861 -406.38580322]
[-49.20161438 -419.14703369]
[-40.53065109 -431.39288330]
[-31.11514091 -443.07598877]
[-20.99150848 -454.15112305]
[-10.19891930 -464.57543945]
[1.22087073 -474.30862427]
[13.22368050 -483.31301880]
[25.76307487 -491.55377197]
[38.79053879 -498.99902344]
[52.25567245 -505.61996460]
[66.10637665 -511.39096069]
[80.28907776 -516.28967285]
[94.74889374 -520.29724121]
[109.42988586 -523.39801025]
[124.27525330 -525.58013916]
[139.22756958 -526.83508301]
[154.22897339 -527.15802002]
[169.22143555 -526.54766846]
[184.14695740 -525.00640869]
[198.94778442 -522.54028320]
[213.56666565 -519.15869141]
[227.94703674 -514.87481689]
[242.03324890 -509.70523071]
[255.77082825 -503.66989136]
[269.10662842 -496.79214478]
[281.98901367 -489.09863281]
[294.36819458 -480.61911011]
[306.19625854 -471.38635254]
[317.42745972 -461.43612671]
[328.01831055 -450.80691528]
[337.92785645 -439.53982544]
[347.11776733 -427.67846680]
[355.55249023 -415.26870728]
[363.19937134 -402.35855103]
[370.02883911 -388.99798584]
[376.01446533 -375.23867798]
[381.13311768 -361.13385010]
[385.36495972 -346.73809814]
[388.69363403 -332.10708618]
[391.10626221 -317.29742432]
[392.59350586 -302.36642456]
[393.14962769 -287.37185669]
[392.77246094 -272.37170410]
[391.46343994 -257.42404175]
[389.22769165 -242.58665466]
[386.07382202 -227.91697693]
[382.01403809 -213.47174072]
[377.06405640 -199.30685425]
[371.24301147 -185.47711182]
[364.57342529 -172.03599548]
[357.08111572 -159.03553772]
[348.79507446 -146.52603149]
[339.74734497 -134.55586243]
[329.97293091 -123.17133331]
[319.50964355 -112.41651154]
[308.39797974 -102.33299255]
[296.68090820 -92.95978546]
[284.40377808 -84.33316040]
[271.61410522 -76.48648834]
[258.36129761 -69.45013428]
[244.69671631 -63.25130844]
[230.67317200 -57.91400146]
[216.34494019 -53.45886230]
[201.76745605 -49.90312195]
[186.99710083 -47.26054001]
[172.09103394 -45.54134369]
[157.10691833 -44.75217819]
[142.10272217 -44.89609909]
[127.13650513 -45.97254944]
[133.10406494 -32.32566452]
[123.59241486 -19.68291855]
[121.58840179 -4.81739140]
[119.58438873 10.04813671]
[125.55194855 23.69502258]
[116.04029846 36.33776855]
[114.03628540 51.20329666]
[112.03227234 66.06882477]
[110.02825928 80.93435669]
[108.02424622 95.79988098]
[109.90418243 99.16710663]
[110.29077911 103.34662628]
[108.85451508 107.65292358]
[105.58444214 111.27873230]
[102.91864777 126.03994751]
[108.08021545 140.99551392]
[98.20420074 152.14511108]
[95.53840637 166.90632629]
[92.87261200 181.66754150]
[107.37564850 185.52947998]
[121.51564789 190.56072998]
[135.19848633 196.72776794]
[148.33314514 203.98957825]
[160.83216858 212.29782104]
[172.61241150 221.59722900]
[183.59544373 231.82589722]
[193.70820618 242.91574097]
[202.88339233 254.79298401]
[211.05993652 267.37857056]
[218.18341064 280.58874512]
[224.20642090 294.33560181]
[229.08889771 308.52764893]
[232.79832458 323.07046509]
[235.31004333 337.86721802]
[236.60729980 352.81945801]
[236.68150330 367.82769775]
[235.53213501 382.79205322]
[233.16683960 397.61291504]
[229.60137939 412.19168091]
[224.85945129 426.43130493]
[218.97265625 440.23706055]
[211.98013306 453.51702881]
[203.92842102 466.18283081]
[194.87112427 478.15020752]
[184.86849976 489.33950806]
[173.98712158 499.67626953]
[162.29940796 509.09167480]
[149.88313293 517.52307129]
[136.82092285 524.91442871]
[123.19972229 531.21643066]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 179]
[45 178]
[46 177]
[48 175]
[49 174]
[50 170]
[51 169]
[52 168]
[53 167]
[54 166]
[56 164]
[57 163]
[58 162]
[60 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
