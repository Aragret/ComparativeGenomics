%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUGxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[90.59636688 609.13208008]
[79.31844330 599.18939209]
[69.83097076 587.52581787]
[62.39278030 574.45971680]
[57.20679474 560.34747314]
[54.41448593 545.57409668]
[54.09203339 530.54260254]
[56.24822998 515.66308594]
[60.82425690 501.34140015]
[67.69527435 487.96835327]
[76.67384338 475.90869141]
[87.51500702 465.49145508]
[99.92302704 457.00079346]
[113.55938721 450.66839600]
[128.05209351 446.66696167]
[126.49156952 431.74835205]
[124.93104553 416.82977295]
[123.37052155 401.91116333]
[121.81000519 386.99255371]
[120.24948120 372.07394409]
[118.68895721 357.15533447]
[116.59875488 355.28741455]
[115.12252045 352.47897339]
[114.62220001 348.95971680]
[115.36994934 345.08602905]
[117.50687408 341.30615234]
[116.83708954 326.32110596]
[116.16730499 311.33605957]
[107.86941528 298.96697998]
[114.98278809 284.83508301]
[106.68490601 272.46600342]
[113.79827881 258.33410645]
[113.12849426 243.34906006]
[111.67907715 228.41925049]
[109.45395660 213.58520508]
[107.22883606 198.75117493]
[97.68916321 187.31246948]
[103.29373169 172.51721191]
[101.06861115 157.68316650]
[98.84349060 142.84913635]
[96.61837769 128.01509094]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[88.54757690 74.21002960]
[86.21208954 59.39296341]
[83.76636505 44.59369278]
[81.32064056 29.79442215]
[69.10761261 27.48747444]
[58.21269989 21.55669975]
[49.67945862 12.58723736]
[44.31997681 1.45445132]
[42.63762283 -10.76149464]
[44.77978897 -22.88043404]
[50.52512360 -33.73620605]
[59.30627441 -42.28887939]
[70.26592255 -47.72436523]
[68.48345947 -62.61808395]
[66.70098877 -77.51180267]
[64.91852570 -92.40551758]
[61.78849030 -96.58283234]
[60.68421173 -101.09214020]
[61.39292145 -105.10620880]
[63.40436935 -108.00214386]
[62.28872299 -122.96059418]
[61.17307281 -137.91905212]
[60.05742645 -152.87750244]
[58.94177628 -167.83595276]
[43.58388138 -172.07563782]
[30.62803841 -181.30230713]
[21.63003349 -194.38543701]
[17.66264534 -209.73277283]
[19.18776512 -225.48411560]
[26.00270081 -239.73678589]
[37.26690292 -250.77548218]
[51.60558701 -257.27865601]
[50.26734924 -272.21884155]
[48.92911530 -287.15902710]
[47.59088135 -302.09921265]
[46.25264740 -317.03939819]
[36.87350464 -325.89346313]
[36.06645966 -338.36471558]
[43.71988678 -347.73229980]
[34.97760391 -360.91879272]
[41.74686432 -374.18627930]
[40.63121414 -389.14474487]
[39.51556778 -404.10317993]
[38.39991760 -419.06164551]
[23.47014236 -420.98171997]
[9.23259926 -425.86816406]
[-3.72969151 -433.52084351]
[-14.88593292 -443.62646484]
[-23.77928543 -455.77114868]
[-30.04556847 -469.45758057]
[-33.42818451 -484.12530518]
[-33.78861618 -499.17373657]
[-31.11210442 -513.98663330]
[-25.50824928 -527.95733643]
[-17.20652771 -540.51385498]
[-6.54688931 -551.14202881]
[6.03416109 -559.40649414]
[20.02143860 -564.96899414]
[34.84217072 -567.60162354]
[49.88945770 -567.19659424]
[64.54712677 -563.77056885]
[78.21495056 -557.46380615]
[90.33323669 -548.53454590]
[100.40576172 -537.34844971]
[108.02005005 -524.36352539]
[112.86431122 -510.11157227]
[114.74016571 -495.17617798]
[113.57080841 -480.16894531]
[109.40411377 -465.70437622]
[102.41071320 -452.37481689]
[92.87697601 -440.72607422]
[81.19330597 -431.23519897]
[67.83814240 -424.29083252]
[53.35837173 -420.17727661]
[54.47402191 -405.21884155]
[55.58966827 -390.26037598]
[56.70531845 -375.30194092]
[65.36779785 -363.18539429]
[58.67833710 -348.84796143]
[69.32604980 -334.89828491]
[61.19283295 -318.37762451]
[62.53106689 -303.43743896]
[63.86930084 -288.49725342]
[65.20753479 -273.55706787]
[66.54576874 -258.61688232]
[80.33163452 -255.39767456]
[92.46772766 -248.06716919]
[101.76067352 -237.33071899]
[107.29187775 -224.22937012]
[108.50836182 -210.03887939]
[105.27799225 -196.14547729]
[97.90367889 -183.91055298]
[87.09506989 -174.53710938]
[73.90023041 -168.95159912]
[75.01587677 -153.99314880]
[76.13152313 -139.03469849]
[77.24717712 -124.07624817]
[78.36282349 -109.11779022]
[79.81224060 -94.18798065]
[81.59471130 -79.29426575]
[83.37717438 -64.40055084]
[85.15963745 -49.50683212]
[102.10293579 -44.40382767]
[115.14488983 -32.36631393]
[121.62512207 -15.78666306]
[120.19420624 2.00997472]
[111.09435272 17.43254471]
[96.11991119 27.34869576]
[98.56563568 42.14796448]
[101.01136017 56.94723511]
[105.20339966 63.03399658]
[103.38162231 71.98491669]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[111.45242310 125.78997040]
[113.67753601 140.62400818]
[115.90265656 155.45805359]
[118.12776947 170.29209900]
[127.82659912 182.79182434]
[122.06288147 196.52604675]
[124.28800201 211.36009216]
[126.51311493 226.19413757]
[135.35823059 214.07952881]
[149.89045715 210.36274719]
[163.46586609 216.74308777]
[169.87792969 230.30351257]
[166.19517517 244.84439087]
[154.10130310 253.71783447]
[139.12544250 252.86701965]
[128.11352539 242.67927551]
[128.78330994 257.66430664]
[137.12910461 271.10522461]
[129.96783447 284.16531372]
[138.31362915 297.60623169]
[131.15234375 310.66629028]
[131.82212830 325.65133667]
[132.49191284 340.63635254]
[133.60755920 355.59481812]
[135.16809082 370.51342773]
[136.72860718 385.43203735]
[138.28912354 400.35064697]
[139.84965515 415.26922607]
[141.41017151 430.18783569]
[142.97070312 445.10644531]
[157.97773743 446.02212524]
[172.62936401 449.39553833]
[186.52584839 455.13467407]
[199.28808594 463.08294678]
[210.56793213 473.02349854]
[220.05764771 484.68521118]
[227.49835205 497.74987793]
[232.68705750 511.86111450]
[235.48222351 526.63397217]
[235.80757141 541.66540527]
[233.65423584 556.54534912]
[229.08096313 570.86791992]
[222.21252441 584.24230957]
[213.23628235 596.30364990]
[202.39712524 606.72302246]
[189.99073792 615.21600342]
[176.35560608 621.55108643]
[161.86366272 625.55529785]
[146.91029358 627.11944580]
[131.90342712 626.20086670]
[117.25246429 622.82464600]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 189]
[16 188]
[17 187]
[18 186]
[19 185]
[20 184]
[21 183]
[26 182]
[27 181]
[28 180]
[30 178]
[32 176]
[33 175]
[34 167]
[35 166]
[36 165]
[38 163]
[39 162]
[40 161]
[41 160]
[42 159]
[44 157]
[45 156]
[46 154]
[47 153]
[48 152]
[57 146]
[58 145]
[59 144]
[60 143]
[64 142]
[65 141]
[66 140]
[67 139]
[68 138]
[76 129]
[77 128]
[78 127]
[79 126]
[80 125]
[83 123]
[85 121]
[86 120]
[87 119]
[88 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
