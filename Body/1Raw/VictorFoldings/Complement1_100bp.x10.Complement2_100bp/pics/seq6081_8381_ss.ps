%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGG\
) } def
/len { sequence length } bind def

/coor [
[135.64317322 849.01501465]
[121.30082703 844.60913086]
[107.22296906 839.41986084]
[93.45234680 833.46295166]
[80.03079224 826.75646973]
[66.99906921 819.32080078]
[54.39674377 811.17852783]
[42.26209259 802.35443115]
[30.63197327 792.87524414]
[19.54170418 782.76977539]
[9.02496338 772.06866455]
[-0.88630754 760.80450439]
[-10.16200924 749.01141357]
[-18.77396965 736.72528076]
[-26.69603729 723.98339844]
[-33.90415192 710.82446289]
[-40.37642288 697.28839111]
[-46.09319305 683.41638184]
[-51.03709793 669.25048828]
[-55.19313049 654.83374023]
[-58.54866409 640.20996094]
[-61.09350586 625.42352295]
[-62.81993103 610.51934814]
[-63.72269821 595.54272461]
[-63.79906082 580.53906250]
[-63.04878998 565.55401611]
[-61.47415924 550.63305664]
[-59.07995987 535.82147217]
[-55.87345505 521.16424561]
[-51.86438751 506.70599365]
[-47.06492996 492.49050903]
[-41.48965836 478.56097412]
[-35.15550613 464.95974731]
[-28.08170891 451.72811890]
[-20.28974915 438.90625000]
[-11.80329418 426.53308105]
[-2.64811420 414.64624023]
[7.14798594 403.28176880]
[17.55525589 392.47418213]
[28.54208946 382.25634766]
[40.07511902 372.65924072]
[52.11931610 363.71206665]
[64.63810730 355.44195557]
[77.59347534 347.87402344]
[90.94606781 341.03128052]
[104.65533447 334.93450928]
[118.67964935 329.60217285]
[132.97640991 325.05053711]
[129.22010803 310.52847290]
[125.46380615 296.00640869]
[121.70751190 281.48437500]
[109.79920959 276.56277466]
[102.79533386 265.51617432]
[103.44211578 252.25750732]
[111.72722626 241.63810730]
[101.20508575 231.09611511]
[105.46733093 215.85984802]
[101.92765808 201.28346252]
[91.40551758 190.74147034]
[95.66776276 175.50520325]
[91.53029633 189.92329407]
[82.52198029 201.91705322]
[69.82801056 209.90849304]
[55.11849213 212.84619141]
[40.32872009 210.34367371]
[27.40454292 202.73014832]
[18.04635811 191.00733948]
[13.48539352 176.71755981]
[14.32172489 161.74089050]
[20.44531822 148.04777527]
[31.05050850 137.43975830]
[44.74200058 131.31253052]
[59.71844482 130.47221375]
[74.00942993 135.02937317]
[85.73473358 144.38442993]
[93.35250854 157.30882263]
[93.12918091 142.31048584]
[92.90585327 127.31214905]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[92.09580994 72.91117859]
[84.15390778 59.22773361]
[91.70085907 46.38667679]
[91.36588287 31.39041710]
[83.22113037 17.82673073]
[90.57605743 4.87473297]
[90.12945557 -10.11861706]
[89.68284607 -25.11196709]
[76.73280334 -36.87273026]
[76.30365753 -54.02296829]
[88.17272949 -65.93783569]
[87.50294495 -80.92287445]
[86.83316040 -95.90791321]
[86.16337585 -110.89295197]
[85.49358368 -125.87799072]
[71.10070038 -130.69558716]
[59.42255402 -140.39019775]
[52.03851700 -153.65068054]
[49.94721985 -168.68367004]
[53.43149567 -183.45608521]
[62.02012253 -195.97007751]
[74.55155945 -204.53323364]
[89.33103180 -207.98744202]
[104.35974121 -205.86555481]
[117.60517883 -198.45455933]
[127.27600098 -186.75671387]
[132.06431580 -172.35404968]
[131.32252502 -157.19442749]
[125.15097809 -143.32804871]
[114.38430786 -132.63023376]
[100.47862244 -126.54777527]
[101.14841461 -111.56273651]
[101.81819916 -96.57769775]
[102.48798370 -81.59265900]
[103.15776825 -66.60762024]
[113.78981781 -59.32826233]
[118.35609436 -47.07137680]
[114.97955322 -34.23356628]
[104.67620087 -25.55857277]
[105.12280273 -10.56522274]
[105.56941223 4.42812681]
[113.68222046 16.91938782]
[106.35923004 30.94381142]
[109.70048523 37.53606415]
[106.69919586 46.16334915]
[114.62512970 58.77401352]
[107.09414673 72.68785095]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[107.90419006 127.08882141]
[108.12751770 142.08715820]
[108.35084534 157.08549500]
[110.24413300 171.96553040]
[121.01946259 183.55012512]
[116.50403595 197.74378967]
[120.04370880 212.32017517]
[130.81903076 223.90476990]
[126.30360413 238.09843445]
[141.40710449 246.92472839]
[145.37603760 263.61492920]
[136.22956848 277.72805786]
[139.98587036 292.25012207]
[143.74217224 306.77218628]
[147.49847412 321.29425049]
[162.20913696 318.34277344]
[177.06005859 316.20617676]
[192.00613403 314.89093018]
[207.00195312 314.40100098]
[222.00199890 314.73794556]
[236.96070862 315.90066528]
[251.83265686 317.88568115]
[266.57266235 320.68695068]
[281.13595581 324.29595947]
[295.47836304 328.70172119]
[309.55624390 333.89093018]
[323.32690430 339.84774780]
[336.74850464 346.55413818]
[349.78027344 353.98968506]
[362.38265991 362.13186646]
[374.51739502 370.95590210]
[386.14755249 380.43499756]
[397.23791504 390.54040527]
[407.75473022 401.24142456]
[417.66607666 412.50552368]
[426.94186401 424.29852295]
[435.55389404 436.58459473]
[443.47607422 449.32641602]
[450.68426514 462.48532104]
[457.15664673 476.02133179]
[462.87350464 489.89331055]
[467.81750488 504.05917358]
[471.97363281 518.47589111]
[475.32928467 533.09967041]
[477.87423706 547.88604736]
[479.60076904 562.79022217]
[480.50363159 577.76684570]
[480.58010864 592.77050781]
[479.82992554 607.75555420]
[478.25540161 622.67657471]
[475.86129761 637.48815918]
[472.65490723 652.14538574]
[468.64593506 666.60369873]
[463.84658813 680.81921387]
[458.27142334 694.74877930]
[451.93734741 708.35003662]
[444.86364746 721.58172607]
[437.07177734 734.40362549]
[428.58541870 746.77685547]
[419.43032837 758.66375732]
[409.63430786 770.02832031]
[399.22711182 780.83593750]
[388.24032593 791.05389404]
[376.70736694 800.65106201]
[364.66323853 809.59832764]
[352.14450073 817.86853027]
[339.18920898 825.43652344]
[325.83663940 832.27935791]
[312.12741089 838.37628174]
[298.10314941 843.70867920]
[283.80642700 848.26043701]
[269.28067017 852.01770020]
[254.56996155 854.96905518]
[239.71902466 857.10552979]
[224.77294922 858.42071533]
[209.77711487 858.91046143]
[194.77708435 858.57348633]
[179.81837463 857.41064453]
[164.94645691 855.42547607]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 146]
[49 145]
[50 144]
[51 143]
[55 140]
[57 138]
[58 137]
[60 135]
[76 134]
[77 133]
[78 132]
[79 131]
[81 129]
[82 128]
[84 126]
[85 124]
[87 122]
[88 121]
[89 120]
[92 116]
[93 115]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
