%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxGGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUA\
) } def
/len { sequence length } bind def

/coor [
[167.27864075 219.16409302]
[173.03129578 205.29998779]
[180.00357056 192.00737000]
[188.13934326 179.39326477]
[176.31306458 170.16616821]
[164.48680115 160.93907166]
[152.66052246 151.71197510]
[140.62072754 152.88241577]
[130.69256592 145.29196167]
[128.52961731 132.57643127]
[116.84203339 123.17428589]
[103.03366089 128.48681641]
[88.41616058 126.20145416]
[76.88825989 116.92775726]
[71.52462006 103.13916016]
[73.75581360 88.51329803]
[62.06823349 79.11114502]
[50.31098175 69.79626465]
[38.48471451 60.56916428]
[26.65844345 51.34206390]
[14.43195820 42.65224075]
[1.82964599 34.51702499]
[-10.77266598 26.38180923]
[-23.37497711 18.24659348]
[-35.97729111 10.11137772]
[-48.57960129 1.97616172]
[-57.55033112 14.00525093]
[-67.31267548 25.40128326]
[-77.82209778 36.11225891]
[-89.03063965 46.08930969]
[-100.88716125 55.28690720]
[-113.33756256 63.66308594]
[-126.32504272 71.17963409]
[-139.79032898 77.80224609]
[-153.67198181 83.50070190]
[-167.90667725 88.24901581]
[-182.42945862 92.02550507]
[-197.17405701 94.81295013]
[-212.07319641 96.59862518]
[-227.05888367 97.37438202]
[-242.06277466 97.13668823]
[-257.01638794 95.88662720]
[-271.85147095 93.62989044]
[-286.50036621 90.37679291]
[-300.89624023 86.14216614]
[-314.97338867 80.94533539]
[-328.66757202 74.81001282]
[-341.91632080 67.76419830]
[-354.65917969 59.84002686]
[-366.83801270 51.07366562]
[-378.39721680 41.50511169]
[-389.28411865 31.17802048]
[-399.44897461 20.13951874]
[-408.84542847 8.43997002]
[-417.43063354 -3.86724305]
[-425.16537476 -16.72596550]
[-432.01437378 -30.07752228]
[-437.94638062 -43.86099625]
[-442.93432617 -58.01349640]
[-446.95547485 -72.47044373]
[-449.99145508 -87.16587830]
[-452.02841187 -102.03274536]
[-453.05706787 -117.00321198]
[-453.07272339 -132.00897217]
[-452.07531738 -146.98153687]
[-450.06936646 -161.85263062]
[-447.06402588 -176.55436707]
[-443.07305908 -191.01966858]
[-438.11462402 -205.18254089]
[-432.21139526 -218.97836304]
[-425.39025879 -232.34417725]
[-417.68234253 -245.21900940]
[-409.12286377 -257.54409790]
[-399.75082397 -269.26321411]
[-389.60900879 -280.32290649]
[-378.74368286 -290.67266846]
[-367.20443726 -300.26531982]
[-355.04394531 -309.05706787]
[-342.31762695 -317.00781250]
[-329.08361816 -324.08123779]
[-315.40225220 -330.24511719]
[-301.33596802 -335.47131348]
[-286.94897461 -339.73596191]
[-272.30691528 -343.01959229]
[-257.47653198 -345.30728149]
[-242.52557373 -346.58853149]
[-227.52223206 -346.85751343]
[-212.53494263 -346.11303711]
[-197.63211060 -344.35842896]
[-182.88172913 -341.60174561]
[-168.35110474 -337.85556030]
[-154.10653687 -333.13696289]
[-140.21302795 -327.46746826]
[-126.73395538 -320.87295532]
[-113.73082733 -313.38351440]
[-101.26297760 -305.03332520]
[-89.38729858 -295.86050415]
[-78.15796661 -285.90682983]
[-67.62622070 -275.21780396]
[-57.84012604 -263.84216309]
[-48.84432602 -251.83181763]
[-40.67986679 -239.24156189]
[-33.38400269 -226.12884521]
[-26.99002075 -212.55351257]
[-21.52709961 -198.57746887]
[-17.02016449 -184.26452637]
[-13.48977947 -169.67997742]
[-10.95205212 -154.89035034]
[-9.41856098 -139.96315002]
[-8.89630508 -124.96647644]
[-9.38766670 -109.96875763]
[-10.89040279 -95.03842926]
[-13.39765739 -80.24361420]
[-16.89799118 -65.65180969]
[-21.37543106 -51.32960892]
[-26.80954933 -37.34235382]
[-33.17554855 -23.75386810]
[-40.44438553 -10.62615013]
[-27.84207344 -2.49093437]
[-15.23976135 5.64428139]
[-2.63744998 13.77949715]
[9.96486187 21.91471291]
[22.56717300 30.04992867]
[20.47553062 15.19647694]
[29.38895988 3.13203502]
[44.20144653 0.76766282]
[56.42772293 9.45777988]
[59.06402588 24.22429276]
[50.60015869 36.60827255]
[35.88554001 39.51579666]
[47.71181107 48.74289322]
[59.53808212 57.96999359]
[66.74535370 59.60615540]
[71.47038269 67.42356110]
[83.15796661 76.82571411]
[96.96633911 71.51319122]
[111.58383942 73.79854584]
[123.11174011 83.07224274]
[128.47538757 96.86083984]
[126.24418640 111.48670197]
[137.93176270 120.88885498]
[156.18901062 123.28773499]
[161.88761902 139.88569641]
[173.71389771 149.11280823]
[185.54016113 158.33990479]
[197.36643982 167.56700134]
[207.62313843 156.60769653]
[218.82093811 146.61192322]
[230.86967468 137.66015625]
[243.67236328 129.82449341]
[257.12588501 123.16800690]
[271.12194824 117.74428558]
[285.54782104 113.59701538]
[300.28741455 110.75957489]
[315.22201538 109.25482178]
[330.23135376 109.09486389]
[345.19461060 110.28099060]
[359.99133301 112.80364990]
[374.50231934 116.64253235]
[388.61077881 121.76673126]
[402.20312500 128.13499451]
[415.16989136 135.69602966]
[427.40667725 144.38896179]
[438.81497192 154.14382935]
[449.30291748 164.88204956]
[458.78604126 176.51718140]
[467.18801880 188.95555115]
[474.44122314 202.09698486]
[480.48718262 215.83570862]
[485.27728271 230.06108093]
[488.77294922 244.65856934]
[490.94601440 259.51065063]
[491.77896118 274.49771118]
[491.26513672 289.49911499]
[489.40866089 304.39407349]
[486.22445679 319.06265259]
[481.73815918 333.38674927]
[475.98593140 347.25100708]
[469.01406860 360.54385376]
[460.87869263 373.15820312]
[451.64532471 384.99252319]
[441.38827515 395.95150757]
[430.19018555 405.94692993]
[418.14114380 414.89831543]
[405.33825684 422.73361206]
[391.88452148 429.38967896]
[377.88830566 434.81295776]
[363.46228027 438.95980835]
[348.72259521 441.79678345]
[333.78796387 443.30108643]
[318.77862549 443.46060181]
[303.81539917 442.27401733]
[289.01876831 439.75088501]
[274.50787354 435.91156006]
[260.39956665 430.78692627]
[246.80741882 424.41827393]
[233.84089661 416.85684204]
[221.60437012 408.16351318]
[210.19638062 398.40832520]
[199.70877075 387.66976929]
[190.22598267 376.03436279]
[181.82438660 363.59573364]
[174.57159424 350.45407104]
[168.52603149 336.71514893]
[163.73637390 322.48965454]
[160.24116516 307.89205933]
[158.06855774 293.03991699]
[157.23605347 278.05279541]
[157.75033569 263.05142212]
[159.60728455 248.15652466]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 146]
[5 145]
[6 144]
[7 143]
[10 141]
[11 140]
[16 135]
[17 134]
[18 132]
[19 131]
[20 130]
[21 123]
[22 122]
[23 121]
[24 120]
[25 119]
[26 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
