%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[121.97250366 731.35516357]
[120.86185455 716.19488525]
[125.64208984 701.76513672]
[135.58425903 690.26635742]
[149.17225647 683.45208740]
[148.05661011 668.49359131]
[139.39413452 656.37707520]
[146.08358765 642.03961182]
[144.96794128 627.08117676]
[143.85229492 612.12274170]
[142.73664856 597.16430664]
[141.28723145 582.23449707]
[139.50476074 567.34075928]
[137.72229004 552.44702148]
[135.93981934 537.55334473]
[132.02375793 531.28546143]
[134.24339294 522.42480469]
[132.68287659 507.50619507]
[131.12236023 492.58758545]
[129.56182861 477.66897583]
[125.73951721 471.34350586]
[128.09083557 462.51687622]
[126.75259399 447.57669067]
[125.41436005 432.63650513]
[116.57244110 420.65029907]
[123.04769897 406.21484375]
[121.70946503 391.27465820]
[120.37123108 376.33447266]
[111.52931213 364.34826660]
[118.00457001 349.91281128]
[116.66633606 334.97265625]
[107.58795929 326.97830200]
[106.35077667 314.54232788]
[114.16077423 304.27749634]
[113.04512024 289.31903076]
[104.08677673 281.19042969]
[103.03488922 268.73742676]
[110.99684143 258.58999634]
[110.10402679 243.61659241]
[109.21121216 228.64318848]
[107.76179504 213.71337891]
[105.75778198 198.84785461]
[103.75376892 183.98231506]
[101.74975586 169.11679077]
[92.38143921 157.53732300]
[98.20566559 142.82716370]
[96.20164490 127.96163177]
[94.19763184 113.09610748]
[85.80446625 101.91368866]
[90.93683624 88.90790558]
[87.20471191 83.45055389]
[86.84317017 77.77901459]
[89.10129547 73.57070160]
[87.54077148 58.65209579]
[85.98024750 43.73348999]
[84.41972351 28.81488609]
[82.85919952 13.89628220]
[81.29868317 -1.02232254]
[79.73815918 -15.94092751]
[78.17763519 -30.85953140]
[76.61711121 -45.77813721]
[67.48609924 -58.69847488]
[73.85733032 -72.16163635]
[72.29680634 -87.08023834]
[62.03447723 -76.14019775]
[47.04717255 -75.52317810]
[35.92030334 -85.58264160]
[35.02784729 -100.55606842]
[44.88104248 -111.86599731]
[59.83552933 -113.03359222]
[71.32425690 -103.39083862]
[71.10092926 -118.38917542]
[70.87760162 -133.38751221]
[70.65427399 -148.38584900]
[67.39744568 -156.91995239]
[70.54094696 -163.60876465]
[70.54094696 -178.60876465]
[70.54094696 -193.60876465]
[70.42928314 -208.60835266]
[67.17244720 -217.14245605]
[70.31594849 -223.83125305]
[70.31594849 -238.83125305]
[67.18653870 -247.41290283]
[70.42928314 -254.05416870]
[70.65261078 -269.05252075]
[70.87593842 -284.05084229]
[60.14834595 -295.34494019]
[60.58848953 -310.55221558]
[71.42179108 -320.70971680]
[71.64511871 -335.70806885]
[68.64382935 -344.33535767]
[71.98508453 -350.92761230]
[72.43168640 -365.92095947]
[72.87829590 -380.91430664]
[73.32490540 -395.90765381]
[66.00191498 -409.93206787]
[74.11472321 -422.42333984]
[74.56132507 -437.41668701]
[60.46864319 -442.99987793]
[49.13747406 -453.06866455]
[41.93611908 -466.40719604]
[39.73417282 -481.40475464]
[42.79753113 -496.25033569]
[50.75628281 -509.15127563]
[62.64936829 -518.54968262]
[77.04063416 -523.31072998]
[92.19226837 -522.85937500]
[106.27464294 -517.25024414]
[117.58723450 -507.16058350]
[124.76399994 -493.80880737]
[126.93830109 -478.80722046]
[123.84758759 -463.96728516]
[115.86508179 -451.08105469]
[103.95469666 -441.70455933]
[89.55467987 -436.97006226]
[89.10807037 -421.97671509]
[96.46300507 -409.02471924]
[88.31825256 -395.46102905]
[87.87164307 -380.46768188]
[87.42504120 -365.47433472]
[86.97843170 -350.48098755]
[86.64345551 -335.48474121]
[86.42012787 -320.48638916]
[96.94620514 -310.01083374]
[96.93337250 -294.79721069]
[85.87427521 -283.82751465]
[85.65094757 -268.82919312]
[85.42761993 -253.83084106]
[85.31594849 -238.83125305]
[85.31594849 -223.83125305]
[85.42761993 -208.83168030]
[88.67035675 -202.19041443]
[85.54094696 -193.60876465]
[85.54094696 -178.60876465]
[85.54094696 -163.60876465]
[85.65261078 -148.60917664]
[85.87593842 -133.61083984]
[86.09926605 -118.61250305]
[86.32260132 -103.61416626]
[87.21541595 -88.64076233]
[88.77593994 -73.72216034]
[97.79533386 -61.86889648]
[91.53571320 -47.33866119]
[93.09623718 -32.42005539]
[94.65676117 -17.50144958]
[96.21728516 -2.58284545]
[97.77780914 12.33575916]
[99.33833313 27.25436401]
[100.89885712 42.17296982]
[102.45937347 57.09157181]
[104.01989746 72.01017761]
[105.80236816 86.90389252]
[114.19553375 98.08631134]
[109.06316376 111.09209442]
[111.06717682 125.95761871]
[113.07118988 140.82315063]
[122.58283997 153.46589661]
[116.61528015 167.11277771]
[118.61929321 181.97830200]
[120.62330627 196.84384155]
[122.62731934 211.70936584]
[133.65899658 201.54559326]
[148.50601196 203.68243408]
[156.22370911 216.54467773]
[151.12287903 230.65075684]
[136.96366882 235.60220337]
[124.18461609 227.75036621]
[125.07743073 242.72377014]
[125.97025299 257.69717407]
[136.46417236 272.82858276]
[128.00357056 288.20339966]
[129.11923218 303.16183472]
[139.83728027 318.13531494]
[131.60652161 333.63439941]
[132.94474792 348.57458496]
[141.88238525 361.62945557]
[135.31141663 374.99624634]
[136.64965820 389.93643188]
[137.98788452 404.87661743]
[146.92552185 417.93148804]
[140.35455322 431.29827881]
[141.69277954 446.23846436]
[143.03102112 461.17864990]
[144.48043823 476.10845947]
[146.04095459 491.02706909]
[147.60148621 505.94567871]
[149.16200256 520.86425781]
[150.83354187 535.77087402]
[152.61601257 550.66455078]
[154.39848328 565.55828857]
[156.18093872 580.45202637]
[159.31097412 584.62933350]
[160.41525269 589.13861084]
[159.70654297 593.15270996]
[157.69509888 596.04864502]
[158.81074524 611.00708008]
[159.92639160 625.96551514]
[161.04203796 640.92401123]
[169.78431702 654.11047363]
[163.01506042 667.37792969]
[164.13070679 682.33642578]
[178.57922363 687.05969238]
[190.11712646 696.95635986]
[196.98500061 710.51739502]
[198.13554382 725.67474365]
[193.39328003 740.11700439]
[183.48139954 751.64190674]
[169.91137695 758.49188232]
[154.75254822 759.62249756]
[140.31651306 754.86126709]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 201]
[6 200]
[8 198]
[9 197]
[10 196]
[11 195]
[12 191]
[13 190]
[14 189]
[15 188]
[17 187]
[18 186]
[19 185]
[20 184]
[22 183]
[23 182]
[24 181]
[26 179]
[27 178]
[28 177]
[30 175]
[31 174]
[34 172]
[35 171]
[38 169]
[39 168]
[40 167]
[41 161]
[42 160]
[43 159]
[44 158]
[46 156]
[47 155]
[48 154]
[50 152]
[53 151]
[54 150]
[55 149]
[56 148]
[57 147]
[58 146]
[59 145]
[60 144]
[61 143]
[63 141]
[64 140]
[71 139]
[72 138]
[73 137]
[74 136]
[76 135]
[77 134]
[78 133]
[79 131]
[81 130]
[82 129]
[84 128]
[85 127]
[86 126]
[89 123]
[90 122]
[92 121]
[93 120]
[94 119]
[95 118]
[97 116]
[98 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
