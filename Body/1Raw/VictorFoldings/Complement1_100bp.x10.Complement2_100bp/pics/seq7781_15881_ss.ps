%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[109.67286682 638.40899658]
[95.99066162 632.22070312]
[83.10306549 624.51306152]
[71.17810822 615.38659668]
[60.37123871 604.96020508]
[50.82336044 593.36987305]
[42.65894318 580.76672363]
[35.98443222 567.31500244]
[30.88683701 553.19012451]
[27.43261719 538.57617188]
[25.66680908 523.66381836]
[25.61242867 508.64730835]
[27.27018929 493.72250366]
[30.61847496 479.08398438]
[35.61363602 464.92254639]
[42.19055176 451.42285156]
[50.26347351 438.76086426]
[59.72715759 427.10168457]
[70.45822906 416.59732056]
[82.31678009 407.38467407]
[95.14820862 399.58392334]
[108.78524017 393.29669189]
[123.05007935 388.60498047]
[137.75675964 385.56994629]
[136.41851807 370.62976074]
[135.08029175 355.68957520]
[133.74205017 340.74938965]
[132.40382385 325.80920410]
[129.51855469 311.08932495]
[125.11755371 296.74948120]
[120.71655273 282.40963745]
[116.31555176 268.06979370]
[113.90508270 266.63879395]
[111.91621399 264.16674805]
[110.74829865 260.80944824]
[110.73697662 256.86425781]
[112.10693359 252.74392700]
[108.56726074 238.16755676]
[105.02758789 223.59118652]
[94.50543976 213.04917908]
[98.76768494 197.81291199]
[94.15303040 212.08543396]
[84.19293976 223.30134583]
[70.56587982 229.57057190]
[55.56824112 229.83663940]
[41.72739029 224.05470276]
[31.37575150 213.19911194]
[26.25776100 199.09925842]
[27.23588943 184.13117981]
[34.14530563 170.81727600]
[45.82165146 161.40116882]
[60.29725266 157.46965027]
[75.13272858 159.68524170]
[87.82802582 167.67456055]
[96.24440002 180.09283447]
[95.57461548 165.10778809]
[94.90483093 150.12275696]
[94.23504639 135.13771057]
[93.56526184 120.15267944]
[92.89547729 105.16764069]
[90.82864380 102.92761230]
[89.53118134 99.88604736]
[89.30154419 96.32645416]
[90.32926178 92.63862610]
[92.65885162 89.27618408]
[92.88217926 74.27784729]
[93.10550690 59.27951050]
[93.32883453 44.28117371]
[84.92171478 34.49939728]
[85.41649628 22.01184654]
[94.00294495 13.49131775]
[94.44954681 -1.50203228]
[94.89615631 -16.49538231]
[93.55792236 -31.43556786]
[90.45381165 -46.11087036]
[87.34970093 -60.78617096]
[76.92407227 -72.68645477]
[81.86009216 -86.73938751]
[78.75598145 -101.41469574]
[73.91842651 -109.16297150]
[75.71662140 -116.33153534]
[61.80084610 -122.93890381]
[54.52899933 -136.31701660]
[56.50565720 -151.23535156]
[66.76500702 -162.00027466]
[63.87973404 -176.72016907]
[60.99446106 -191.44006348]
[45.93760300 -192.30137634]
[31.56823540 -196.88088989]
[18.78962517 -204.89076233]
[8.40504646 -215.82745361]
[1.06728554 -229.00349426]
[-2.76240158 -243.59062195]
[-2.84327745 -258.67187500]
[0.82974225 -273.29925537]
[8.02576828 -286.55322266]
[18.29245186 -297.60067749]
[30.98442268 -305.74713135]
[45.30384827 -310.48049927]
[60.35060501 -311.50323486]
[75.17883301 -308.75106812]
[88.85642242 -302.39700317]
[100.52358246 -292.84042358]
[109.44691467 -280.68209839]
[115.06549072 -266.68627930]
[117.02610779 -251.73280334]
[115.20553589 -236.76161194]
[109.71821594 -222.71383667]
[100.90907288 -210.47251892]
[89.33187103 -200.80715942]
[75.71435547 -194.32533264]
[78.59962463 -179.60543823]
[81.48490143 -164.88555908]
[95.04904175 -158.79029846]
[102.51139069 -145.72212219]
[100.82814026 -130.58871460]
[90.43651581 -119.21680450]
[93.43128967 -104.51879883]
[96.53540039 -89.84349823]
[106.73899841 -78.99288940]
[102.02500153 -63.89028168]
[105.12911224 -49.21498108]
[108.23322296 -34.53967667]
[112.61757660 -48.88462067]
[121.58842468 -60.90643692]
[134.09185791 -69.19281006]
[148.65901184 -72.77026367]
[163.57853699 -71.21853638]
[177.09770203 -64.71990204]
[187.62828064 -54.03783035]
[193.93318176 -40.42723465]
[195.27168274 -25.48707390]
[191.48654175 -10.97250366]
[183.02244568 1.41131926]
[170.87374878 10.20955467]
[156.46765137 14.38859558]
[141.49656677 13.45749283]
[127.71930695 7.52562952]
[116.75439453 -2.71012306]
[109.88950348 -16.04877663]
[109.44290161 -1.05542624]
[108.99629211 13.93792343]
[118.13497925 28.91962624]
[108.32717133 44.50450134]
[108.10384369 59.50283813]
[107.88051605 74.50117493]
[107.65718842 89.49951172]
[107.88051605 104.49784851]
[108.55030060 119.48288727]
[109.22008514 134.46792603]
[109.88986969 149.45297241]
[110.55965424 164.43800354]
[111.22943878 179.42304993]
[113.34406281 194.27323914]
[124.11938477 205.85784912]
[119.60395813 220.05151367]
[123.14363098 234.62788391]
[126.68330383 249.20425415]
[130.65539551 263.66879272]
[135.05639648 278.00863647]
[139.45739746 292.34848022]
[143.85839844 306.68832397]
[147.35145569 292.10070801]
[156.09873962 279.91528320]
[168.80265808 271.93963623]
[183.57864380 269.35696411]
[198.23477173 272.55038452]
[210.59690857 281.04614258]
[218.83117676 293.58395386]
[221.71607971 308.30392456]
[218.82366943 323.02239990]
[210.58302307 335.55603027]
[198.21656799 344.04547119]
[183.55882263 347.23141479]
[168.78414917 344.64123535]
[156.08428955 336.65911865]
[147.34400940 324.47097778]
[148.68223572 339.41116333]
[150.02047729 354.35134888]
[151.35870361 369.29153442]
[152.69694519 384.23171997]
[167.70889282 384.60476685]
[182.58045959 386.68664551]
[197.11776733 390.45019531]
[211.13128662 395.84640503]
[224.43832397 402.80490112]
[236.86540222 411.23492432]
[248.25050354 421.02661133]
[258.44519043 432.05230713]
[267.31658936 444.16827393]
[274.74899292 457.21652222]
[280.64553833 471.02697754]
[284.92932129 485.41958618]
[287.54455566 500.20666504]
[288.45706177 515.19549561]
[287.65502930 530.19067383]
[285.14883423 544.99664307]
[280.97122192 559.42041016]
[275.17660522 573.27392578]
[267.84054565 586.37658691]
[259.05868530 598.55761719]
[248.94551086 609.65814209]
[237.63287354 619.53344727]
[225.26824951 628.05480957]
[212.01284790 635.11114502]
[198.03947449 640.61047363]
[183.53028870 644.48107910]
[168.67446899 646.67248535]
[153.66567993 647.15612793]
[138.69958496 645.92572021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 181]
[25 180]
[26 179]
[27 178]
[28 177]
[29 162]
[30 161]
[31 160]
[32 159]
[37 158]
[38 157]
[39 156]
[41 154]
[55 153]
[56 152]
[57 151]
[58 150]
[59 149]
[60 148]
[65 147]
[66 146]
[67 145]
[68 144]
[71 142]
[72 141]
[73 140]
[74 123]
[75 122]
[76 121]
[78 119]
[79 118]
[81 117]
[85 113]
[86 112]
[87 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
