%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[134.59529114 679.95227051]
[130.87210083 665.25830078]
[132.40217590 650.17736816]
[139.00074768 636.53057861]
[149.87101746 625.96588135]
[163.70034790 619.75897217]
[162.58470154 604.80053711]
[161.46903992 589.84204102]
[160.35339355 574.88360596]
[159.23774719 559.92517090]
[150.57527161 547.80859375]
[157.26472473 533.47119141]
[156.14907837 518.51275635]
[155.03343201 503.55429077]
[146.37095642 491.43774414]
[153.06040955 477.10031128]
[151.94476318 462.14184570]
[150.82911682 447.18341064]
[149.60214233 432.23367310]
[138.04336548 422.91003418]
[136.47337341 407.77761841]
[146.33123779 395.71691895]
[144.99299622 380.77673340]
[143.65476990 365.83654785]
[142.20533752 350.90673828]
[140.64482117 335.98815918]
[139.08430481 321.06954956]
[120.11343384 314.10244751]
[107.25724030 298.41009521]
[104.13533020 278.28814697]
[111.68880463 259.29589844]
[127.89844513 246.72053528]
[125.01317596 232.00064087]
[122.12789917 217.28074646]
[118.80564117 202.65328979]
[115.04933929 188.13124084]
[111.29303741 173.60917664]
[107.53673553 159.08711243]
[103.78044128 144.56506348]
[93.10250854 134.18087769]
[97.13743591 118.88285065]
[84.70613098 111.43913269]
[81.07765961 97.41128540]
[88.34050751 84.87345123]
[84.58420563 70.35139465]
[80.82790375 55.82933426]
[69.88129425 44.40644836]
[74.18489838 30.14712524]
[65.65896606 42.48845673]
[50.92900848 45.32188416]
[38.43301392 37.02428818]
[35.32925415 22.34891129]
[43.39570618 9.70247459]
[58.01153946 6.32943201]
[70.80358124 14.16125011]
[68.35784912 -0.63802105]
[65.91212463 -15.43729210]
[63.46639633 -30.23656273]
[61.02066803 -45.03583527]
[58.02589417 -59.73383713]
[54.48622131 -74.31021118]
[50.94654846 -88.88658905]
[47.40687943 -103.46296692]
[44.29980087 -106.49611664]
[42.50049210 -110.00710297]
[41.99858856 -113.52612305]
[42.63220978 -116.63500214]
[44.11792755 -119.01214600]
[41.45212936 -133.77336121]
[26.80246925 -137.91447449]
[15.44980240 -147.96453857]
[9.61036015 -161.89010620]
[10.39296532 -176.90837097]
[17.58890343 -190.04336548]
[29.72392654 -198.71554565]
[27.05813026 -213.47676086]
[24.39233398 -228.23797607]
[14.32564068 -240.44338989]
[19.67788506 -254.34313965]
[9.61119175 -266.54855347]
[14.96343613 -280.44830322]
[10.35871696 -288.33715820]
[12.36954975 -295.44900513]
[9.92382240 -310.24829102]
[7.47809553 -325.04754639]
[-2.40576220 -337.40148926]
[3.15283561 -351.22000122]
[-11.88162327 -352.25042725]
[-26.27301788 -356.72082520]
[-39.24523544 -364.39013672]
[-50.09870529 -374.84475708]
[-58.24810791 -387.52087402]
[-63.25395966 -401.73489380]
[-64.84629822 -416.72024536]
[-62.93925858 -431.66882324]
[-57.63567352 -445.77444458]
[-49.22156906 -458.27642822]
[-38.15070343 -468.50054932]
[-25.02011108 -475.89544678]
[-10.53791237 -480.06228638]
[4.51488781 -480.77639771]
[19.32650948 -477.99923706]
[33.09818268 -471.88058472]
[45.08721542 -462.75042725]
[54.64705658 -451.10113525]
[61.26215363 -437.56094360]
[64.57576752 -422.86001587]
[64.40919495 -407.79122925]
[60.77141953 -393.16714478]
[53.85861969 -379.77648926]
[44.04360199 -368.34136963]
[31.85566902 -359.47845459]
[17.95210648 -353.66574097]
[27.66102982 -342.37033081]
[22.27736664 -327.49328613]
[24.72309303 -312.69400024]
[27.16882133 -297.89474487]
[29.72465324 -283.11407471]
[39.60066986 -271.96447754]
[34.43910217 -257.00894165]
[44.31512070 -245.85932922]
[39.15355301 -230.90377808]
[41.81934738 -216.14254761]
[44.48514175 -201.38133240]
[58.88697815 -197.50157166]
[70.22273254 -187.71330261]
[76.20901489 -173.91744995]
[75.60933685 -158.82902527]
[68.48912811 -145.44285583]
[56.21334839 -136.43916321]
[58.87914276 -121.67794037]
[61.98325348 -107.00263977]
[65.52292633 -92.42626190]
[69.06259918 -77.84988403]
[72.60227203 -63.27350998]
[82.51670074 -74.52980042]
[97.50545502 -73.94916534]
[106.51938629 -61.95962906]
[102.91375732 -47.39942932]
[89.34650421 -41.00180435]
[75.81993866 -47.48155975]
[78.26567078 -32.68228912]
[80.71139526 -17.88301849]
[83.15711975 -3.08374834]
[85.60285187 11.71552277]
[88.70696259 26.39082527]
[99.38489532 36.77499771]
[95.34996033 52.07303238]
[99.10626221 66.59509277]
[102.86256409 81.11714935]
[115.29386902 88.56086731]
[118.92234039 102.58871460]
[111.65949249 115.12654877]
[122.60610199 126.54943085]
[118.30249786 140.80876160]
[122.05879974 155.33081055]
[125.81510162 169.85287476]
[129.57139587 184.37493896]
[133.32769775 198.89698792]
[136.47959900 201.88354492]
[138.33097839 205.36735535]
[138.88520813 208.87850952]
[138.29795837 211.99649048]
[136.84779358 214.39547729]
[139.73306274 229.11537170]
[142.61833191 243.83526611]
[152.57839966 245.19100952]
[161.84614563 249.03912354]
[169.81016541 255.11631775]
[175.94744873 263.01260376]
[179.85775757 272.19882202]
[181.28973389 282.06225586]
[180.15696716 291.94738770]
[176.54322815 301.19949341]
[170.69633484 309.20803833]
[163.01113892 315.44689941]
[154.00289917 319.50903320]
[155.56343079 334.42761230]
[157.12394714 349.34622192]
[161.12916565 357.55572510]
[158.59495544 364.49832153]
[159.93318176 379.43850708]
[161.27142334 394.37869263]
[173.11576843 404.49545288]
[174.26010132 419.66598511]
[164.54232788 430.89544678]
[168.42486572 439.16366577]
[165.78756714 446.06774902]
[166.90321350 461.02621460]
[168.01885986 475.98464966]
[176.76113892 489.17114258]
[169.99188232 502.43862915]
[171.10752869 517.39709473]
[172.22317505 532.35552979]
[180.96545410 545.54199219]
[174.19619751 558.80950928]
[175.31185913 573.76794434]
[176.42750549 588.72644043]
[177.54315186 603.68487549]
[178.65879822 618.64331055]
[193.25585938 622.73010254]
[205.57304382 631.56536865]
[214.12300110 644.08233643]
[217.87326050 658.76947021]
[216.37098694 673.85321045]
[209.79756165 687.51208496]
[198.94677734 698.09686279]
[185.12892151 704.32922363]
[170.01254272 705.45660400]
[155.42304993 701.34295654]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 200]
[7 199]
[8 198]
[9 197]
[10 196]
[12 194]
[13 193]
[14 192]
[16 190]
[17 189]
[18 188]
[19 186]
[22 183]
[23 182]
[24 181]
[25 179]
[26 178]
[27 177]
[32 166]
[33 165]
[34 164]
[35 159]
[36 158]
[37 157]
[38 156]
[39 155]
[41 153]
[44 150]
[45 149]
[46 148]
[48 146]
[55 145]
[56 144]
[57 143]
[58 142]
[59 141]
[60 135]
[61 134]
[62 133]
[63 132]
[68 131]
[69 130]
[75 124]
[76 123]
[77 122]
[79 120]
[81 118]
[83 117]
[84 116]
[85 115]
[87 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
