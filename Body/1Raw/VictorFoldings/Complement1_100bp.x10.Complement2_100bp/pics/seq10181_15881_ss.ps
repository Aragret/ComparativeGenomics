%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[5.80688906 556.69354248]
[-3.67067933 568.32989502]
[-14.02148056 579.19677734]
[-25.18326187 589.22888184]
[-37.08889389 598.36584473]
[-49.66677856 606.55273438]
[-62.84126282 613.74029541]
[-76.53311920 619.88531494]
[-90.65999603 624.95086670]
[-105.13693237 628.90643311]
[-119.87686920 631.72827148]
[-134.79115295 633.39935303]
[-149.79008484 633.90966797]
[-164.78344727 633.25610352]
[-179.68109131 631.44262695]
[-194.39340210 628.48022461]
[-208.83190918 624.38653564]
[-222.90975952 619.18634033]
[-236.54231262 612.91082764]
[-249.64755249 605.59771729]
[-262.14666748 597.29107666]
[-273.96450806 588.04083252]
[-285.02996826 577.90258789]
[-295.27648926 566.93737793]
[-304.64251709 555.21105957]
[-313.07162476 542.79418945]
[-320.51321411 529.76147461]
[-326.92245483 516.19134521]
[-332.26083374 502.16528320]
[-336.49624634 487.76773071]
[-339.60321045 473.08523560]
[-341.56304932 458.20614624]
[-342.36398315 443.21994019]
[-342.00115967 428.21670532]
[-340.47677612 413.28671265]
[-337.80004883 398.51974487]
[-333.98699951 384.00460815]
[-329.06060791 369.82861328]
[-323.05047607 356.07699585]
[-315.99279785 342.83248901]
[-307.92996216 330.17471313]
[-298.91049194 318.17984009]
[-288.98861694 306.91995239]
[-278.22402954 296.46279907]
[-266.68145752 286.87127686]
[-254.43031311 278.20306396]
[-241.54428101 270.51031494]
[-228.10087585 263.83926392]
[-214.18092346 258.23004150]
[-199.86816406 253.71636963]
[-185.24867249 250.32540894]
[-170.41035461 248.07756042]
[-155.44247437 246.98634338]
[-140.43502808 247.05830383]
[-125.47830200 248.29301453]
[-110.66223145 250.68305969]
[-96.07592010 254.21405029]
[-81.80710602 258.86477661]
[-67.94158936 264.60720825]
[-54.56277084 271.40689087]
[-41.75111008 279.22286987]
[-32.97050858 267.06143188]
[-24.18990517 254.89996338]
[-15.40930176 242.73851013]
[-17.02698517 230.75061035]
[-9.81125069 220.54684448]
[2.81497121 217.91220093]
[4.21299171 203.08335876]
[18.66192818 196.63829041]
[27.62262535 184.60891724]
[36.58332062 172.57954407]
[45.54401779 160.55015564]
[54.50471115 148.52078247]
[52.10266876 133.86589050]
[61.01872635 121.53874969]
[76.40641022 119.11862946]
[85.36710358 107.08924866]
[86.88842010 90.38410187]
[102.36426544 83.91307068]
[111.14487457 71.75161743]
[119.92547607 59.59016037]
[128.70608521 47.42870331]
[136.93489075 34.88730240]
[144.59548950 21.99097633]
[140.91459656 6.85529613]
[148.86724854 -6.11428547]
[163.31948853 -9.53017426]
[170.98008728 -22.42650032]
[178.64068604 -35.32282639]
[186.30126953 -48.21915436]
[193.96186829 -61.11548233]
[193.76298523 -79.52857208]
[209.39183044 -87.51017761]
[216.85957336 -100.51912689]
[224.32731628 -113.52808380]
[231.79505920 -126.53703308]
[239.26278687 -139.54598999]
[227.21343994 -148.50976562]
[216.30885315 -158.83578491]
[206.70213318 -170.37905884]
[198.52813721 -182.97755432]
[191.90161133 -196.45440674]
[186.91558838 -210.62042236]
[183.64006042 -225.27673340]
[182.12100220 -240.21757507]
[182.37976074 -255.23321533]
[184.41267395 -270.11285400]
[188.19122314 -284.64758301]
[193.66236877 -298.63342285]
[200.74928284 -311.87396240]
[209.35249329 -324.18334961]
[219.35122681 -335.38879395]
[230.60510254 -345.33294678]
[242.95613098 -353.87628174]
[256.23095703 -360.89880371]
[270.24316406 -366.30194092]
[284.79611206 -370.00982666]
[299.68542480 -371.97045898]
[314.70214844 -372.15625000]
[329.63543701 -370.56463623]
[344.27566528 -367.21795654]
[358.41729736 -362.16317749]
[371.86178589 -355.47125244]
[384.42044067 -347.23617554]
[395.91690063 -337.57348633]
[406.18984985 -326.61886597]
[415.09497070 -314.52612305]
[422.50735474 -301.46499634]
[428.32284546 -287.61883545]
[432.45986938 -273.18200684]
[434.86035156 -258.35723877]
[435.49053955 -243.35260010]
[434.34164429 -228.37873840]
[431.42974854 -213.64588928]
[426.79574585 -199.36083984]
[420.50473022 -185.72415161]
[412.64495850 -172.92726135]
[403.32678223 -161.14982605]
[392.68103027 -150.55715942]
[380.85717773 -141.29798889]
[368.02114868 -133.50227356]
[354.35317993 -127.27948761]
[340.04516602 -122.71695709]
[325.29791260 -119.87875366]
[310.31851196 -118.80471039]
[295.31719971 -119.50991058]
[280.50460815 -121.98445129]
[266.08865356 -126.19358826]
[252.27174377 -132.07824707]
[244.80400085 -119.06929016]
[237.33625793 -106.06034088]
[229.86851501 -93.05139160]
[222.40078735 -80.04243469]
[225.25685120 -68.28788757]
[219.14181519 -57.38879776]
[206.85820007 -53.45488358]
[199.19760132 -40.55855560]
[191.53700256 -27.66222954]
[183.87640381 -14.76590347]
[176.21580505 -1.86957657]
[180.12944031 12.45589352]
[172.54421997 25.64373207]
[157.49180603 29.65157318]
[149.83120728 42.54790115]
[164.59654236 39.90494919]
[176.98432922 48.36323547]
[179.89830017 63.07747650]
[171.66918945 75.61867523]
[157.01101685 78.80267334]
[144.32063293 70.80552673]
[140.86753845 56.20930481]
[132.08692932 68.37076569]
[123.30632782 80.53221893]
[114.52572632 92.69367218]
[115.68569946 104.28227997]
[108.79803467 113.67382812]
[97.39648438 116.04994202]
[88.43579102 128.07933044]
[90.52206421 143.51580811]
[81.26328278 155.58766174]
[66.53408813 157.48147583]
[57.57339478 169.51086426]
[48.61269760 181.54023743]
[39.65200424 193.56961060]
[30.69130707 205.59898376]
[28.65235710 221.28826904]
[14.84434891 226.87289429]
[13.12656021 245.20677185]
[-3.24784589 251.51911926]
[-12.02844906 263.68057251]
[-20.80905151 275.84204102]
[-29.58965492 288.00347900]
[-18.13920975 297.70480347]
[-7.47497845 308.26428223]
[2.33889961 319.61840820]
[11.24340248 331.69888306]
[19.18497658 344.43307495]
[26.11585999 357.74438477]
[31.99436760 371.55279541]
[36.78514862 385.77517700]
[40.45938492 400.32608032]
[42.99498367 415.11791992]
[44.37669373 430.06179810]
[44.59620667 445.06781006]
[43.65219879 460.04568481]
[41.55035019 474.90539551]
[38.30329895 489.55752563]
[33.93057632 503.91397095]
[28.45848274 517.88836670]
[21.91992378 531.39672852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 192]
[62 191]
[63 190]
[64 189]
[67 187]
[69 185]
[70 184]
[71 183]
[72 182]
[73 181]
[76 178]
[77 177]
[79 174]
[80 173]
[81 172]
[82 171]
[83 164]
[84 163]
[87 160]
[88 159]
[89 158]
[90 157]
[91 156]
[93 153]
[94 152]
[95 151]
[96 150]
[97 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
