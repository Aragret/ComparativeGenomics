%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[41.37166595 460.98043823]
[45.91547012 475.30062866]
[48.46695709 490.10617065]
[48.97858429 505.12121582]
[47.44082642 520.06610107]
[43.88233185 534.66235352]
[38.36938858 548.63806152]
[31.00470543 561.73291016]
[21.92547798 573.70294189]
[11.30084705 584.32513428]
[-0.67125690 593.40161133]
[-13.76780033 600.76330566]
[-27.74480247 606.27301025]
[-42.34188080 609.82818604]
[-57.28710175 611.36248779]
[-72.30204010 610.84741211]
[-87.10698700 608.29254150]
[-101.42612457 603.74548340]
[-114.99269867 597.29089355]
[-127.55397797 589.04901123]
[-138.87594604 579.17346191]
[-148.74768066 567.84814453]
[-156.98529053 555.28405762]
[-163.43530273 541.71533203]
[-167.97755432 527.39465332]
[-170.52743530 512.58886719]
[-171.03744507 497.57373047]
[-169.49806213 482.62902832]
[-165.93798828 468.03317261]
[-160.42353821 454.05801392]
[-153.05743408 440.96395874]
[-143.97691345 428.99493408]
[-133.35113525 418.37387085]
[-121.37804413 409.29870605]
[-108.28070068 401.93844604]
[-94.30310822 396.43020630]
[-79.70564270 392.87664795]
[-64.76025391 391.34393311]
[-49.74536896 391.86065674]
[-34.94070435 394.41714478]
[-20.62205887 398.96578979]
[-7.05618191 405.42184448]
[1.17262590 392.88043213]
[9.40143394 380.33905029]
[17.63024139 367.79763794]
[23.80600929 354.12796021]
[27.77810669 339.66345215]
[31.75020218 325.19891357]
[35.61450958 310.70523071]
[39.37080765 296.18316650]
[43.12710953 281.66110229]
[46.88341141 267.13903809]
[35.36266327 259.12582397]
[27.25187492 247.63697815]
[23.54197502 234.04080200]
[24.69826889 219.96510315]
[30.60218620 207.10234070]
[40.56307220 197.00611877]
[53.39892960 190.90350342]
[67.57666779 189.54595947]
[71.54876709 175.08143616]
[67.45793915 160.75962830]
[78.57340240 149.50097656]
[82.54549408 135.03645325]
[86.51759338 120.57192993]
[90.48969269 106.10740662]
[77.97727966 114.38023376]
[62.98723984 113.83371735]
[51.11048126 104.67169189]
[46.77674484 90.31137848]
[51.60240555 76.10880280]
[63.78760910 67.36119080]
[78.78758240 67.33116913]
[91.00769806 76.02995300]
[95.89018250 90.21426392]
[101.55297089 76.32423401]
[107.21575928 62.43420792]
[112.87854004 48.54418182]
[117.70454407 34.34172440]
[121.67663574 19.87720108]
[125.64873505 5.41267776]
[129.62083435 -9.05184555]
[130.95906067 -23.99203110]
[129.62083435 -38.93221664]
[128.28259277 -53.87240219]
[117.34280396 -68.68463898]
[125.34188843 -84.30455017]
[123.78136444 -99.22315216]
[122.22084045 -114.14176178]
[118.65285492 -119.70781708]
[118.46033478 -125.38760376]
[120.84275818 -129.52682495]
[119.72711182 -144.48527527]
[118.61145782 -159.44372559]
[103.95857239 -163.26098633]
[91.34045410 -171.63128662]
[82.12583923 -183.64668274]
[77.31424713 -198.00381470]
[77.42761230 -213.14533997]
[82.45363617 -227.42883301]
[91.84712982 -239.30490112]
[104.58915710 -247.48532104]
[119.29756165 -251.08276367]
[134.37687683 -249.70698547]
[148.19143677 -243.50723267]
[159.24270630 -233.15599060]
[166.33195496 -219.77610779]
[168.69017029 -204.81892395]
[166.06156921 -189.90687561]
[158.73127747 -176.65751648]
[147.49443054 -166.50804138]
[133.56991577 -160.55937195]
[134.68556213 -145.60092163]
[135.80120850 -130.64247131]
[137.13945007 -115.70228577]
[138.69996643 -100.78367615]
[140.26049805 -85.86507416]
[149.45689392 -78.00677490]
[150.87907410 -65.59061432]
[143.22277832 -55.21063614]
[144.56101990 -40.27045059]
[145.89924622 -25.33026505]
[151.32905579 -39.31301117]
[159.90701294 -51.61824036]
[171.14797974 -61.55004120]
[184.41622925 -68.54671478]
[198.96139526 -72.21257019]
[213.96084595 -72.34027863]
[228.56631470 -68.92262268]
[241.95178223 -62.15288925]
[253.36022949 -52.41393661]
[262.14645386 -40.25654984]
[267.81359863 -26.36828804]
[270.04107666 -11.53460121]
[268.70297241 3.40559530]
[263.87493896 17.60736084]
[255.83003235 30.26751518]
[245.02323914 40.67006683]
[232.06571960 48.22669983]
[217.69029236 52.51005173]
[202.70996094 53.27787781]
[187.97192383 50.48675156]
[174.30969238 44.29452515]
[162.49595642 35.05140305]
[153.19880676 23.28012276]
[146.94404602 9.64641190]
[144.08535767 -5.07974958]
[140.11325073 9.38477421]
[136.14115906 23.84929848]
[132.16906738 38.31382370]
[144.68147278 30.04099846]
[159.67150879 30.58751678]
[171.54827881 39.74953842]
[175.88200378 54.10985565]
[171.05635071 68.31242371]
[158.87113953 77.06004333]
[143.87117004 77.09005737]
[131.65106201 68.39128113]
[126.76856995 54.20696640]
[121.10578156 68.09699249]
[115.44300079 81.98702240]
[109.78021240 95.87705231]
[104.95421600 110.07950592]
[100.98211670 124.54402924]
[97.01001740 139.00854492]
[93.03792572 153.47308350]
[96.84464264 168.82949829]
[86.01329041 179.05352783]
[82.04119110 193.51805115]
[94.79913330 203.30290222]
[102.80613708 217.20104980]
[104.86175537 233.06958008]
[100.68056488 248.47482300]
[90.93134308 261.06558228]
[77.13034058 268.93206787]
[61.40546799 270.89535522]
[57.64916992 285.41741943]
[53.89286804 299.93945312]
[50.13656616 314.46151733]
[51.01725006 323.55340576]
[46.21472549 329.17102051]
[42.24263000 343.63552856]
[38.27053452 358.10006714]
[48.34254837 346.98455811]
[61.01049042 338.95190430]
[75.35984802 334.58203125]
[90.35473633 334.19036865]
[104.91265106 337.80520630]
[117.98265076 345.16558838]
[128.62120056 355.74014282]
[136.06030273 368.76550293]
[139.76289368 383.30133057]
[139.46171570 398.29830933]
[135.17848206 412.67376709]
[127.22242737 425.38995361]
[116.16788483 435.52883911]
[102.81290436 442.35852051]
[88.12158966 445.38595581]
[73.15451813 444.39254761]
[58.99217987 439.45007324]
[46.65696335 430.91528320]
[37.03935623 419.40435791]
[30.83366776 405.74826050]
[28.48788452 390.93280029]
[30.17164230 376.02645874]
[21.94283485 388.56784058]
[13.71402645 401.10925293]
[5.48521852 413.65063477]
[16.80825615 423.52499390]
[26.68122101 434.84921265]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 208]
[43 207]
[44 206]
[45 205]
[46 183]
[47 182]
[48 181]
[49 179]
[50 178]
[51 177]
[52 176]
[60 169]
[61 168]
[63 166]
[64 165]
[65 164]
[66 163]
[75 162]
[76 161]
[77 160]
[78 159]
[79 150]
[80 149]
[81 148]
[82 147]
[83 122]
[84 121]
[85 120]
[87 117]
[88 116]
[89 115]
[92 114]
[93 113]
[94 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
