%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[145.79322815 688.50756836]
[133.63514709 679.70751953]
[122.24531555 669.93353271]
[111.70151520 659.25231934]
[102.07578278 647.73693848]
[93.43386841 635.46594238]
[85.83480835 622.52325439]
[79.33051300 608.99719238]
[73.96541595 594.98022461]
[69.77616119 580.56811523]
[66.79137421 565.85925293]
[65.03143311 550.95410156]
[64.50836945 535.95458984]
[65.22575378 520.96313477]
[67.17868042 506.08206177]
[70.35381317 491.41311646]
[74.72946930 477.05645752]
[80.27574921 463.11019897]
[86.95476532 449.66958618]
[94.72089386 436.82641602]
[103.52108765 424.66845703]
[113.29522705 413.27871704]
[123.97653961 402.73504639]
[135.49206543 393.10946655]
[147.76315308 384.46771240]
[160.70596313 376.86880493]
[174.23207092 370.36465454]
[188.24909973 364.99972534]
[184.06208801 350.59594727]
[179.87507629 336.19216919]
[175.68806458 321.78839111]
[171.50105286 307.38461304]
[167.31404114 292.98083496]
[163.12702942 278.57702637]
[158.94001770 264.17324829]
[154.75300598 249.76947021]
[150.56599426 235.36569214]
[137.26202393 223.92143250]
[141.80038452 206.07528687]
[137.39938354 191.73544312]
[131.73660278 177.84541321]
[124.85718536 164.51599121]
[112.14452362 156.75471497]
[112.69097137 140.94294739]
[105.81156158 127.61351776]
[98.93214417 114.28408813]
[87.27133179 106.56935883]
[87.73842621 92.59532928]
[80.85900879 79.26589966]
[67.65428925 70.55120850]
[68.69279480 55.69285202]
[61.81338501 42.36342239]
[54.93397141 29.03399467]
[48.05455780 15.70456505]
[40.78133011 2.58587074]
[33.12073135 -10.31045628]
[25.46013451 -23.20678329]
[9.19525814 -31.84016609]
[9.66227341 -49.38293839]
[1.81051791 -62.16378021]
[-6.04123783 -74.94462585]
[-13.89299297 -87.72546387]
[-27.55894661 -81.49478912]
[-41.88700867 -76.99076843]
[-56.65997314 -74.28167725]
[-71.65388489 -73.40859985]
[-86.64143372 -74.38475800]
[-101.39542389 -77.19535828]
[-115.69217682 -81.79779053]
[-129.31497192 -88.12229156]
[-142.05726624 -96.07296753]
[-153.72592163 -105.52930450]
[-164.14401245 -116.34793854]
[-173.15364075 -128.36486816]
[-180.61817932 -141.39790344]
[-186.42449951 -155.24948120]
[-190.48457336 -169.70960999]
[-192.73683167 -184.55909729]
[-193.14715576 -199.57279968]
[-191.70932007 -214.52311707]
[-188.44509888 -229.18342590]
[-183.40400696 -243.33146667]
[-176.66246033 -256.75274658]
[-168.32264709 -269.24383545]
[-158.51100159 -280.61535645]
[-147.37626648 -290.69488525]
[-135.08723450 -299.32968140]
[-121.83021545 -306.38879395]
[-107.80618286 -311.76522827]
[-93.22772980 -315.37747192]
[-78.31587219 -317.17077637]
[-63.29665375 -317.11795044]
[-48.39777374 -315.21978760]
[-33.84509277 -311.50509644]
[-19.85922623 -306.03012085]
[-6.65219641 -298.87792969]
[5.57578278 -290.15692139]
[16.63933754 -279.99929810]
[26.37074852 -268.55905151]
[34.62248611 -256.00961304]
[41.26946259 -242.54121399]
[46.21090317 -228.35806274]
[49.37190628 -213.67515564]
[50.70454407 -198.71508789]
[50.18861771 -183.70465088]
[47.83194733 -168.87138367]
[43.67025757 -154.44017029]
[37.76664352 -140.62977600]
[30.21060181 -127.64956665]
[21.11667633 -115.69631958]
[10.62273026 -104.95124054]
[-1.11215055 -95.57721710]
[6.73960495 -82.79637909]
[14.59136009 -70.01553345]
[22.44311523 -57.23469162]
[34.13177109 -54.11990738]
[40.77779770 -43.53623581]
[38.35646057 -30.86738014]
[46.01705933 -17.97105408]
[53.67765808 -5.07472658]
[56.35773849 -4.25295639]
[58.87378693 -2.32005596]
[60.80096436 0.66681457]
[61.74293900 4.49789858]
[61.38398743 8.82515240]
[68.26339722 22.15458107]
[75.14281464 35.48400879]
[82.02222443 48.81343842]
[94.73488617 56.57471848]
[94.18843842 72.38648224]
[101.06785583 85.71591187]
[112.72866821 93.43064117]
[112.26157379 107.40467072]
[119.14099121 120.73410034]
[126.02040100 134.06353760]
[139.22512817 142.77821350]
[138.18661499 157.63658142]
[145.06602478 170.96600342]
[146.50816345 156.03549194]
[154.21144104 143.16461182]
[166.68847656 134.83853149]
[181.53015137 132.66488647]
[195.87077332 137.06338501]
[206.94137573 147.18472290]
[212.60443115 161.07464600]
[211.76646423 176.05120850]
[204.58927917 189.22270203]
[192.45869446 198.04589844]
[177.71690369 200.81716919]
[163.21035767 197.00143433]
[151.73922729 187.33444214]
[156.14022827 201.67430115]
[167.14862061 208.39576721]
[170.51899719 220.43006897]
[164.96978760 231.17868042]
[169.15679932 245.58245850]
[173.34379578 259.98623657]
[177.53080750 274.39001465]
[181.71781921 288.79382324]
[185.90483093 303.19760132]
[190.09184265 317.60137939]
[194.27885437 332.00515747]
[198.46586609 346.40893555]
[202.65287781 360.81271362]
[217.36163330 357.82739258]
[232.26667786 356.06692505]
[247.26618958 355.54333496]
[262.25772095 356.26016235]
[277.13882446 358.21258545]
[291.80789185 361.38717651]
[306.16470337 365.76232910]
[320.11114502 371.30810547]
[333.55200195 377.98663330]
[346.39544678 385.75231934]
[358.55374146 394.55206299]
[369.94378662 404.32580566]
[380.48785400 415.00674438]
[390.11386108 426.52191162]
[398.75607300 438.79269409]
[406.35543823 451.73522949]
[412.86004639 465.26110840]
[418.22549438 479.27795410]
[422.41506958 493.68997192]
[425.40020752 508.39877319]
[427.16052246 523.30383301]
[427.68392944 538.30334473]
[426.96691895 553.29486084]
[425.01434326 568.17596436]
[421.83953857 582.84497070]
[417.46423340 597.20172119]
[411.91830444 611.14813232]
[405.23959351 624.58892822]
[397.47378540 637.43225098]
[388.67388916 649.59045410]
[378.89999390 660.98040771]
[368.21893311 671.52429199]
[356.70364380 681.15020752]
[344.43276978 689.79223633]
[331.49014282 697.39147949]
[317.96417236 703.89593506]
[303.94729614 709.26116943]
[289.53518677 713.45062256]
[274.82638550 716.43554688]
[259.92129517 718.19567871]
[244.92176819 718.71893311]
[229.93025208 718.00170898]
[215.04919434 716.04895020]
[200.38020325 712.87402344]
[186.02349854 708.49853516]
[172.07717896 702.95239258]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 164]
[29 163]
[30 162]
[31 161]
[32 160]
[33 159]
[34 158]
[35 157]
[36 156]
[37 155]
[39 152]
[40 151]
[41 138]
[42 137]
[44 135]
[45 134]
[46 133]
[48 131]
[49 130]
[51 128]
[52 127]
[53 126]
[54 125]
[55 120]
[56 119]
[57 118]
[59 115]
[60 114]
[61 113]
[62 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
