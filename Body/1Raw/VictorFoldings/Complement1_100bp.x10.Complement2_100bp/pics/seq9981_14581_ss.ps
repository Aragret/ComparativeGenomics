%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[21.04769897 863.91235352]
[6.05331802 864.39599609]
[-8.94820213 864.25549316]
[-23.93089104 863.49102783]
[-38.86881256 862.10400391]
[-53.73610306 860.09680176]
[-68.50702667 857.47283936]
[-83.15601349 854.23669434]
[-97.65769958 850.39398193]
[-111.98698425 845.95135498]
[-126.11905670 840.91650391]
[-140.02946472 835.29809570]
[-153.69409180 829.10595703]
[-167.08932495 822.35070801]
[-180.19195557 815.04406738]
[-192.97929382 807.19873047]
[-205.42921448 798.82830811]
[-217.52015686 789.94714355]
[-229.23118591 780.57073975]
[-240.54203796 770.71527100]
[-251.43312073 760.39782715]
[-261.88558960 749.63629150]
[-271.88134766 738.44921875]
[-281.40307617 726.85601807]
[-290.43432617 714.87683105]
[-298.95944214 702.53228760]
[-306.96362305 689.84375000]
[-314.43310547 676.83325195]
[-321.35485840 663.52337646]
[-327.71697998 649.93701172]
[-333.50842285 636.09777832]
[-338.71914673 622.02954102]
[-343.34011841 607.75683594]
[-347.36340332 593.30419922]
[-350.78198242 578.69671631]
[-353.58996582 563.95965576]
[-355.78247070 549.11853027]
[-357.35571289 534.19909668]
[-358.30694580 519.22711182]
[-358.63455200 504.22848511]
[-358.33795166 489.22924805]
[-357.41769409 474.25531006]
[-355.87530518 459.33264160]
[-353.71350098 444.48703003]
[-350.93600464 429.74420166]
[-347.54763794 415.12966919]
[-343.55426025 400.66876221]
[-338.96279907 386.38647461]
[-333.78118896 372.30755615]
[-328.01837158 358.45635986]
[-321.68438721 344.85687256]
[-314.79016113 331.53265381]
[-307.34762573 318.50674438]
[-299.36965942 305.80172729]
[-290.87011719 293.43957520]
[-281.86367798 281.44168091]
[-272.36593628 269.82882690]
[-262.39334106 258.62112427]
[-251.96313477 247.83798218]
[-241.09341431 237.49803162]
[-229.80296326 227.61921692]
[-218.11134338 218.21859741]
[-206.03880310 209.31248474]
[-193.60621643 200.91627502]
[-180.83512878 193.04450989]
[-167.74765015 185.71081543]
[-154.36642456 178.92788696]
[-140.71461487 172.70747375]
[-126.81586456 167.06034851]
[-112.69422913 161.99626160]
[-98.37416840 157.52401733]
[-83.88045502 153.65132141]
[-69.23818970 150.38490295]
[-54.47272873 147.73040771]
[-39.60961914 145.69242859]
[-24.67459869 144.27449036]
[-9.69352245 143.47906494]
[5.30767488 143.30752563]
[20.30302238 143.76014709]
[35.26656342 144.83616638]
[50.17238998 146.53372192]
[64.99469757 148.84985352]
[79.70783234 151.78057861]
[83.24750519 137.20420837]
[86.78717804 122.62783051]
[90.32684326 108.05145264]
[93.54012299 93.39966583]
[96.42539215 78.67977905]
[99.31066895 63.95988464]
[102.19593811 49.23999405]
[105.08121490 34.52009964]
[90.91197205 29.51506042]
[77.62250519 22.50021553]
[65.49608612 13.62508869]
[54.79119492 3.07885528]
[45.73599243 -8.91369247]
[38.52349854 -22.09693146]
[33.30744934 -36.18986130]
[30.19902611 -50.89209366]
[29.26447868 -65.89024353]
[30.52373123 -80.86462402]
[33.94994354 -95.49606323]
[39.47008514 -109.47267914]
[46.96649170 -122.49657440]
[56.27937698 -134.29013062]
[67.21024323 -144.60197449]
[79.52608490 -153.21231079]
[92.96440125 -159.93759155]
[107.23874664 -164.63449097]
[122.04486847 -167.20288086]
[137.06716919 -167.58802795]
[151.98545837 -165.78170776]
[166.48171997 -161.82241821]
[180.24700928 -155.79457092]
[192.98788452 -147.82664490]
[204.43278503 -138.08847046]
[214.33776855 -126.78762054]
[222.49169922 -114.16497040]
[228.72077942 -100.48957825]
[232.89222717 -86.05293274]
[234.91714478 -71.16274261]
[234.75236511 -56.13641357]
[232.40139771 -41.29421616]
[227.91435242 -26.95251846]
[221.38687134 -13.41701412]
[212.95809937 -0.97621399]
[202.80767822 10.10470676]
[191.15196228 19.58955765]
[178.23942566 27.27616692]
[164.34526062 33.00069427]
[149.76565552 36.64112473]
[134.81134033 38.11985779]
[119.80110168 37.40537262]
[116.91583252 52.12526703]
[114.03055573 66.84515381]
[111.14528656 81.56504822]
[108.26000977 96.28494263]
[109.93620300 99.75808716]
[110.07333374 103.95320892]
[108.38330841 108.16638947]
[104.90322113 111.59112549]
[101.36354828 126.16750336]
[97.82387543 140.74388123]
[94.28420258 155.32025146]
[108.70282745 159.46377563]
[122.93659973 164.20350647]
[136.96089172 169.53123474]
[150.75140381 175.43774414]
[164.28428650 181.91281128]
[177.53610229 188.94520569]
[190.48391724 196.52278137]
[203.10530090 204.63240051]
[215.37840271 213.26004028]
[227.28199768 222.39076233]
[238.79545593 232.00872803]
[249.89886475 242.09733582]
[260.57299805 252.63908386]
[270.79934692 263.61572266]
[280.56024170 275.00830078]
[289.83877563 286.79702759]
[298.61889648 298.96151733]
[306.88537598 311.48074341]
[314.62390137 324.33297729]
[321.82113647 337.49600220]
[328.46453857 350.94705200]
[334.54266357 364.66278076]
[340.04498291 378.61950684]
[344.96194458 392.79302979]
[349.28506470 407.15881348]
[353.00683594 421.69201660]
[356.12084961 436.36746216]
[358.62167358 451.15972900]
[360.50497437 466.04321289]
[361.76754761 480.99218750]
[362.40716553 495.98071289]
[362.42272949 510.98287964]
[361.81417847 525.97271729]
[360.58264160 540.92425537]
[358.73019409 555.81164551]
[356.26004028 570.60906982]
[353.17651367 585.29089355]
[349.48489380 599.83178711]
[345.19155884 614.20654297]
[340.30401611 628.39019775]
[334.83065796 642.35833740]
[328.78100586 656.08666992]
[322.16549683 669.55145264]
[314.99560547 682.72937012]
[307.28372192 695.59765625]
[299.04321289 708.13397217]
[290.28836060 720.31665039]
[281.03430176 732.12457275]
[271.29705811 743.53735352]
[261.09347534 754.53521729]
[250.44125366 765.09906006]
[239.35879517 775.21069336]
[227.86531067 784.85253906]
[215.98068237 794.00787354]
[203.72549438 802.66094971]
[191.12095642 810.79675293]
[178.18890381 818.40118408]
[164.95169067 825.46105957]
[151.43226624 831.96417236]
[137.65403748 837.89929199]
[123.64082336 843.25610352]
[109.41691589 848.02532959]
[95.00691986 852.19873047]
[80.43579102 855.76910400]
[65.72875214 858.73022461]
[50.91126633 861.07702637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[83 144]
[84 143]
[85 142]
[86 141]
[87 137]
[88 136]
[89 135]
[90 134]
[91 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
