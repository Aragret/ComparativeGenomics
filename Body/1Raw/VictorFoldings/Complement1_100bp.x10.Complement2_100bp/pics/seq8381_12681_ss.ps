%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGGxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[41.73910522 190.62550354]
[41.52828979 205.63017273]
[40.27130890 220.58360291]
[37.97428513 235.41290283]
[34.64841461 250.04585266]
[30.30989647 264.41116333]
[24.97986984 278.43884277]
[18.68430138 292.06051636]
[11.45386314 305.20986938]
[3.32378149 317.82284546]
[-5.66633415 329.83792114]
[-15.47268486 341.19662476]
[-26.04749489 351.84359741]
[-37.33924484 361.72698975]
[-49.29291916 370.79861450]
[-61.85028076 379.01428223]
[-74.95015717 386.33398438]
[-88.52871704 392.72204590]
[-102.51981354 398.14736938]
[-116.85527802 402.58349609]
[-131.46527100 406.00878906]
[-146.27861023 408.40661621]
[-161.22314453 409.76528931]
[-176.22602844 410.07815552]
[-191.21420288 409.34368896]
[-206.11463928 407.56549072]
[-220.85472107 404.75222778]
[-235.36267090 400.91760254]
[-249.56776428 396.08029175]
[-263.40084839 390.26382446]
[-276.79446411 383.49661255]
[-289.68341064 375.81158447]
[-302.00488281 367.24618530]
[-313.69885254 357.84213257]
[-324.70831299 347.64526367]
[-334.97967529 336.70523071]
[-344.46286011 325.07537842]
[-353.11169434 312.81231689]
[-360.88403320 299.97583008]
[-367.74200439 286.62844849]
[-373.65219116 272.83517456]
[-378.58581543 258.66320801]
[-382.51882935 244.18164062]
[-385.43206787 229.46098328]
[-387.31134033 214.57296753]
[-388.14749146 199.59011841]
[-387.93646240 184.58544922]
[-386.67926025 169.63204956]
[-384.38204956 154.80276489]
[-381.05596924 140.16986084]
[-376.71722412 125.80461884]
[-371.38699341 111.77702332]
[-365.09124756 98.15542603]
[-357.86062622 85.00617218]
[-349.73034668 72.39334106]
[-340.74005127 60.37837219]
[-330.93356323 49.01980591]
[-320.35858154 38.37298203]
[-309.06671143 28.48976517]
[-297.11288452 19.41831207]
[-284.55541992 11.20281410]
[-271.45544434 3.88330007]
[-257.87677002 -2.50457215]
[-243.88560486 -7.92968035]
[-229.55007935 -12.36559391]
[-214.94003296 -15.79070091]
[-200.12666321 -18.18831444]
[-185.18211365 -19.54675484]
[-170.17921448 -19.85940170]
[-155.19105530 -19.12473297]
[-140.29064941 -17.34632683]
[-125.55059814 -14.53285027]
[-111.04271698 -10.69800758]
[-96.83767700 -5.86048365]
[-83.00469208 -0.04384585]
[-69.61116028 6.72356749]
[-56.72232056 14.40878582]
[-44.40097427 22.97436714]
[-32.70714951 32.37858200]
[-21.69782066 42.57560730]
[-11.42662239 53.51577377]
[-1.94359434 65.14577484]
[6.70506191 77.40895081]
[14.47721004 90.24555206]
[21.33498573 103.59304810]
[27.24497795 117.38640594]
[41.41111374 112.45481110]
[55.57724762 107.52322388]
[69.74338531 102.59162903]
[83.90951538 97.66003418]
[89.60206604 87.49951935]
[100.62934113 83.75244904]
[111.33372498 88.34127808]
[125.57171631 83.62114716]
[139.80970764 78.90101624]
[154.04769897 74.18087769]
[168.28567505 69.46074677]
[164.44964600 54.95459366]
[161.51388550 40.23980331]
[159.48956299 25.37219620]
[158.38433838 10.40816879]
[158.20242310 -4.59551573]
[158.94448853 -19.58194160]
[160.60772705 -34.49426270]
[163.18583679 -49.27590561]
[166.66902161 -63.87080383]
[171.04408264 -78.22359467]
[176.29441833 -92.27982330]
[182.40011597 -105.98617554]
[189.33801270 -119.29065704]
[197.08178711 -132.14280701]
[205.60206604 -144.49385071]
[214.86651611 -156.29696655]
[224.84002686 -167.50735474]
[235.48474121 -178.08250427]
[246.76026917 -187.98229980]
[258.62387085 -197.16918945]
[271.03051758 -205.60830688]
[283.93313599 -213.26765442]
[297.28283691 -220.11817932]
[311.02893066 -226.13388062]
[325.11926270 -231.29194641]
[339.50042725 -235.57283020]
[354.11785889 -238.96025085]
[368.91607666 -241.44139099]
[383.83898926 -243.00683594]
[398.82995605 -243.65063477]
[413.83212280 -243.37036133]
[428.78857422 -242.16706848]
[443.64260864 -240.04530334]
[458.33782959 -237.01315308]
[472.81851196 -233.08209229]
[487.02972412 -228.26704407]
[500.91760254 -222.58625793]
[514.42938232 -216.06130981]
[527.51385498 -208.71691895]
[540.12139893 -200.58097839]
[552.20416260 -191.68432617]
[563.71636963 -182.06072998]
[574.61425781 -171.74667358]
[584.85650635 -160.78131104]
[594.40429688 -149.20620728]
[603.22143555 -137.06527710]
[611.27441406 -124.40459442]
[618.53271484 -111.27217102]
[624.96881104 -97.71782684]
[630.55828857 -83.79297638]
[635.27996826 -69.55044556]
[639.11584473 -55.04425430]
[642.05145264 -40.32943344]
[644.07562256 -25.46180725]
[645.18072510 -10.49776840]
[645.36248779 4.50591755]
[644.62023926 19.49233627]
[642.95690918 34.40464020]
[640.37860107 49.18626022]
[636.89532471 63.78112411]
[632.52008057 78.13386536]
[627.26959229 92.19004822]
[621.16381836 105.89633942]
[614.22576904 119.20075226]
[606.48187256 132.05282593]
[597.96148682 144.40379333]
[588.69689941 156.20681763]
[578.72326660 167.41711426]
[568.07849121 177.99215698]
[556.80285645 187.89183044]
[544.93914795 197.07859802]
[532.53240967 205.51759338]
[519.62969971 213.17681885]
[506.27996826 220.02720642]
[492.53381348 226.04278564]
[478.44342041 231.20071411]
[464.06219482 235.48144531]
[449.44476318 238.86872864]
[434.64651489 241.34973145]
[419.72357178 242.91502380]
[404.73260498 243.55867004]
[389.73043823 243.27824402]
[374.77398682 242.07479858]
[359.91998291 239.95291138]
[345.22479248 236.92060852]
[330.74414062 232.98939514]
[316.53295898 228.17420959]
[302.64517212 222.49328613]
[289.13345337 215.96820068]
[276.04904175 208.62370300]
[263.44155884 200.48762512]
[251.35888672 191.59086609]
[239.84681702 181.96714783]
[228.94903564 171.65298462]
[218.70686340 160.68751526]
[209.15916443 149.11231995]
[200.34216309 136.97131348]
[192.28930664 124.31053925]
[185.03111267 111.17804718]
[178.59515381 97.62364197]
[173.00581360 83.69873047]
[158.76782227 88.41886902]
[144.52983093 93.13899994]
[130.29185486 97.85913849]
[116.05386353 102.57926941]
[105.23130035 115.39521027]
[88.84111023 111.82617188]
[74.67497253 116.75775909]
[60.50884247 121.68935394]
[46.34270477 126.62094879]
[32.17657089 131.55253601]
[36.10978699 146.03407288]
[39.02323914 160.75468445]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[86 208]
[87 207]
[88 206]
[89 205]
[90 204]
[93 202]
[94 201]
[95 200]
[96 199]
[97 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
