%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxUGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAA\
) } def
/len { sequence length } bind def

/coor [
[108.34242249 592.44525146]
[99.33510590 604.49133301]
[88.32147980 614.73535156]
[75.65559387 622.84796143]
[61.74460983 628.56848145]
[47.03569412 631.71295166]
[32.00168991 632.18029785]
[17.12586784 629.95550537]
[2.88643193 625.11004639]
[-10.25888252 617.79974365]
[-21.88750648 608.25958252]
[-31.62562943 596.79620361]
[-39.16020966 583.77813721]
[-44.24904251 569.62390137]
[-46.72853851 554.78839111]
[-46.51900101 539.74859619]
[-43.62715912 524.98791504]
[-38.14597702 510.98089600]
[-30.25164795 498.17779541]
[-20.19794464 486.99017334]
[-8.30805302 477.77767944]
[5.03581810 470.83642578]
[19.40471840 466.38958740]
[34.33674622 464.58007812]
[49.35189819 465.46606445]
[52.89157104 450.88967896]
[56.43124008 436.31332397]
[59.97091293 421.73693848]
[63.51058578 407.16055298]
[66.61470032 392.48526001]
[69.28049469 377.72402954]
[71.94628906 362.96282959]
[74.61208344 348.20159912]
[77.16791534 333.42095947]
[79.61363983 318.62167358]
[74.05504608 304.80316162]
[83.93890381 292.44921875]
[86.38462830 277.64996338]
[88.83036041 262.85067749]
[90.27977753 247.92086792]
[90.72637939 232.92752075]
[91.17298889 217.93417358]
[91.17298889 202.93417358]
[87.83173370 196.34191895]
[90.83302307 187.71463013]
[90.60969543 172.71629333]
[90.38636780 157.71795654]
[88.47115326 155.67098999]
[87.25136566 152.74205017]
[87.06700897 149.19219971]
[88.15737152 145.40068054]
[90.62299347 141.82650757]
[91.29277802 126.84147644]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[93.72218323 72.48873901]
[86.60881042 58.35684586]
[94.90669250 45.98775482]
[95.57647705 31.00271606]
[96.24626160 16.01767731]
[96.13459778 1.01809382]
[95.24178314 -13.95531178]
[86.69680023 -27.27048492]
[93.66284180 -40.43572617]
[85.11785889 -53.75089645]
[92.08390045 -66.91613770]
[91.19107819 -81.88954163]
[90.29826355 -96.86294556]
[89.40544891 -111.83635712]
[80.86046600 -125.15152740]
[87.82650757 -138.31677246]
[86.82225037 -153.28311157]
[85.70659637 -168.24156189]
[84.59095001 -183.20001221]
[81.65056610 -187.51292419]
[80.74873352 -192.06704712]
[81.63597870 -196.04547119]
[83.77473450 -198.84869385]
[83.32812500 -213.84204102]
[82.88152313 -228.83540344]
[82.43491364 -243.82875061]
[81.76512909 -258.81378174]
[80.87231445 -273.78720093]
[79.97949982 -288.76058960]
[79.08668518 -303.73400879]
[78.19386292 -318.70739746]
[77.30104828 -333.68081665]
[76.40823364 -348.65423584]
[75.51541901 -363.62762451]
[60.65373993 -366.09304810]
[46.71347809 -371.80413818]
[34.39386749 -380.47448730]
[24.31285858 -391.66918945]
[16.97610855 -404.82669067]
[12.75162792 -419.28701782]
[11.85131264 -434.32489014]
[14.32032204 -449.18597412]
[20.03481293 -463.12484741]
[28.70814705 -475.44235229]
[39.90527725 -485.52066040]
[53.06455612 -492.85421753]
[67.52591705 -497.07519531]
[82.56399536 -497.97186279]
[97.42447662 -495.49923706]
[111.36196899 -489.78137207]
[123.67737579 -481.10507202]
[133.75296021 -469.90548706]
[141.08332825 -456.74444580]
[145.30081177 -442.28204346]
[146.19383240 -427.24374390]
[143.71762085 -412.38388062]
[137.99638367 -398.44775391]
[129.31707764 -386.13446045]
[118.11506653 -376.06158447]
[104.95223236 -368.73440552]
[90.48882294 -364.52044678]
[91.38163757 -349.54702759]
[92.27445221 -334.57363892]
[93.16727448 -319.60021973]
[94.06008911 -304.62683105]
[94.95290375 -289.65341187]
[95.84571838 -274.68002319]
[96.73853302 -259.70660400]
[99.65260315 -255.92279053]
[100.22063446 -250.26820374]
[97.42826080 -244.27536011]
[97.87487030 -229.28199768]
[98.32147980 -214.28865051]
[98.76808167 -199.29530334]
[99.54940796 -184.31567383]
[100.66505432 -169.35720825]
[101.78070068 -154.39875793]
[105.41298676 -147.96228027]
[102.79991150 -139.20957947]
[111.28103638 -126.96540833]
[104.37885284 -112.72917175]
[105.27167511 -97.75576782]
[106.16448975 -82.78235626]
[107.05730438 -67.80895233]
[115.53842926 -55.56477737]
[108.63624573 -41.32854080]
[117.11737061 -29.08436584]
[110.21518707 -14.84812737]
[111.10800171 0.12527795]
[120.99866486 -11.15190506]
[135.80453491 -13.55735397]
[148.75657654 -5.99132967]
[153.93327332 8.08708286]
[148.96792603 22.24142265]
[136.13063049 30.00051880]
[121.29039764 27.81701279]
[111.23130035 16.68746376]
[110.56151581 31.67250252]
[109.89173126 46.65753937]
[117.05300903 59.71760559]
[108.70722198 73.15852356]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.27781677 127.51126099]
[105.60803223 142.49629211]
[105.38470459 157.49462891]
[105.60803223 172.49296570]
[105.83135986 187.49130249]
[106.16633606 202.48756409]
[108.57847595 206.09805298]
[109.61226654 209.90538025]
[109.37507629 213.45208740]
[108.11182404 216.36254883]
[106.16633606 218.38078308]
[105.71973419 233.37413025]
[105.27312469 248.36747742]
[114.93537903 236.89399719]
[129.23503113 232.36408997]
[143.74116516 236.18141174]
[153.95892334 247.16310120]
[156.72219849 261.90637207]
[151.17475891 275.84289551]
[139.03555298 284.65423584]
[124.06604767 285.61010742]
[110.90469360 278.41436768]
[103.62963104 265.29641724]
[101.18389893 280.09567261]
[98.73817444 294.89495850]
[104.12183380 309.77200317]
[94.41291046 321.06741333]
[91.96718597 335.86666870]
[93.65549469 344.84371948]
[89.37329865 350.86740112]
[86.70750427 365.62863159]
[84.04170990 380.38983154]
[81.37591553 395.15106201]
[82.98868561 399.18255615]
[83.21220398 403.12139893]
[82.24619293 406.54223633]
[80.40798187 409.12829590]
[78.08695984 410.70022583]
[74.54728699 425.27661133]
[71.00761414 439.85299683]
[67.46794128 454.42935181]
[63.92827225 469.00573730]
[77.67750549 475.10476685]
[90.11663818 483.56100464]
[100.84580994 494.10256958]
[109.52010345 506.39062500]
[115.86069489 520.03015137]
[119.66375732 534.58270264]
[120.80702972 549.58044434]
[119.25376129 564.54132080]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 202]
[26 201]
[27 200]
[28 199]
[29 198]
[30 193]
[31 192]
[32 191]
[33 190]
[34 188]
[35 187]
[37 185]
[38 184]
[39 183]
[40 173]
[41 172]
[42 171]
[43 166]
[45 165]
[46 164]
[47 163]
[52 162]
[53 161]
[54 160]
[56 158]
[57 157]
[59 155]
[60 154]
[61 153]
[62 145]
[63 144]
[65 142]
[67 140]
[68 139]
[69 138]
[70 137]
[72 135]
[73 133]
[74 132]
[75 131]
[79 130]
[80 129]
[81 128]
[82 127]
[83 124]
[84 123]
[85 122]
[86 121]
[87 120]
[88 119]
[89 118]
[90 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
