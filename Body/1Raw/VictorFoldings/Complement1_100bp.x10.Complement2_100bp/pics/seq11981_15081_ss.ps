%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[61.27353287 366.86364746]
[57.77005005 381.45898438]
[52.99032974 395.68753052]
[46.97177887 409.43798828]
[39.76150513 422.60269165]
[31.41593552 435.07861328]
[22.00039101 446.76815796]
[11.58855915 457.57980347]
[0.26193011 467.42889404]
[-11.89084911 476.23843384]
[-24.77466583 483.93939209]
[-38.28868103 490.47152710]
[-52.32713318 495.78375244]
[-66.78014374 499.83444214]
[-81.53459930 502.59188843]
[-96.47502899 504.03454590]
[-111.48449707 504.15112305]
[-126.44552612 502.94067383]
[-141.24102783 500.41271973]
[-155.75521851 496.58700562]
[-169.87448120 491.49346924]
[-183.48831177 485.17199707]
[-196.49018860 477.67205811]
[-208.77832031 469.05236816]
[-220.25656128 459.38037109]
[-230.83505249 448.73175049]
[-240.43103027 437.18984985]
[-248.96936035 424.84503174]
[-256.38323975 411.79391479]
[-262.61462402 398.13861084]
[-267.61474609 383.98599243]
[-271.34451294 369.44686890]
[-273.77468872 354.63497925]
[-274.88626099 339.66625977]
[-274.67053223 324.65789795]
[-273.12918091 309.72732544]
[-270.27432251 294.99142456]
[-266.12823486 280.56549072]
[-260.72338867 266.56243896]
[-254.10211182 253.09185791]
[-246.31619263 240.25920105]
[-237.42657471 228.16488647]
[-227.50285339 216.90357971]
[-216.62266541 206.56340027]
[-204.87118530 197.22528076]
[-192.34037781 188.96232605]
[-179.12832642 181.83917236]
[-165.33842468 175.91160583]
[-151.07859802 171.22598267]
[-136.46044922 167.81900024]
[-121.59840393 165.71731567]
[-106.60876465 164.93737793]
[-91.60884857 165.48529053]
[-76.71605682 167.35676575]
[-62.04695129 170.53713989]
[-47.71633148 175.00155640]
[-33.83636093 180.71505737]
[-20.51566887 187.63291931]
[-7.85851097 195.70100403]
[4.03605127 204.85615540]
[14.19959831 193.82427979]
[24.36314392 182.79240417]
[34.52669144 171.76052856]
[44.69023895 160.72865295]
[54.85378647 149.69677734]
[64.25593567 138.00920105]
[72.85449982 125.71835327]
[73.81039429 110.85445404]
[88.06102753 103.98205566]
[96.38297272 91.50225830]
[104.42414856 78.83973694]
[112.46531677 66.17721558]
[120.50649261 53.51468658]
[128.54766846 40.85216141]
[136.58883667 28.18963814]
[144.63000488 15.52711201]
[152.67118835 2.86458755]
[160.71235657 -9.79793739]
[168.75352478 -22.46046257]
[176.79470825 -35.12298584]
[184.83587646 -47.78551102]
[192.87704468 -60.44803619]
[200.72880554 -73.22888184]
[208.38940430 -86.12520599]
[216.05000305 -99.02153015]
[217.74217224 -107.99785614]
[223.92187500 -112.05163574]
[231.77363586 -124.83247375]
[239.62538147 -137.61331177]
[227.58027649 -146.56948853]
[216.37387085 -156.55517578]
[206.09385681 -167.49223328]
[196.82069397 -179.29502869]
[188.62696838 -191.87121582]
[181.57679749 -205.12236023]
[175.72535706 -218.94473267]
[171.11846924 -233.23019409]
[167.79216003 -247.86689758]
[165.77246094 -262.74032593]
[165.07521057 -277.73403931]
[165.70584106 -292.73068237]
[167.65940857 -307.61294556]
[170.92065430 -322.26428223]
[175.46403503 -336.57006836]
[181.25399780 -350.41830444]
[188.24520874 -363.70065308]
[196.38298035 -376.31311035]
[205.60360718 -388.15701294]
[215.83493042 -399.13961792]
[226.99685669 -409.17498779]
[239.00204468 -418.18460083]
[251.75653076 -426.09793091]
[265.16049194 -432.85302734]
[279.10903931 -438.39706421]
[293.49295044 -442.68658447]
[308.19970703 -445.68807983]
[323.11419678 -447.37802124]
[338.11965942 -447.74319458]
[353.09869385 -446.78073120]
[367.93405151 -444.49816895]
[382.50961304 -440.91339111]
[396.71130371 -436.05444336]
[410.42797852 -429.95935059]
[423.55230713 -422.67581177]
[435.98153687 -414.26083374]
[447.61840820 -404.78030396]
[458.37185669 -394.30834961]
[468.15768433 -382.92700195]
[476.89932251 -370.72531128]
[484.52835083 -357.79876709]
[490.98507690 -344.24856567]
[496.21896362 -330.18072510]
[500.18902588 -315.70535278]
[502.86422729 -300.93576050]
[504.22357178 -285.98751831]
[504.25650024 -270.97766113]
[502.96267700 -256.02359009]
[500.35229492 -241.24241638]
[496.44573975 -226.74977112]
[491.27359009 -212.65911865]
[484.87634277 -199.08071899]
[477.30404663 -186.12086487]
[468.61599731 -173.88095093]
[458.88015747 -162.45680237]
[448.17276001 -151.93782043]
[436.57757568 -142.40634155]
[424.18533325 -133.93693542]
[411.09310913 -126.59592438]
[397.40325928 -120.44074249]
[383.22302246 -115.51956940]
[368.66329956 -111.87091064]
[353.83810425 -109.52333069]
[338.86343384 -108.49520874]
[323.85650635 -108.79457855]
[308.93475342 -110.41910553]
[294.21499634 -113.35607910]
[279.81237793 -117.58249664]
[265.83969116 -123.06529999]
[252.40623474 -129.76156616]
[244.55447388 -116.98072052]
[236.70271301 -104.19987488]
[228.94631958 -91.36093903]
[221.28572083 -78.46460724]
[213.62513733 -65.56828308]
[213.91487122 -60.80119705]
[211.21302795 -55.80149078]
[205.53956604 -52.40686417]
[197.49839783 -39.74433899]
[189.45722961 -27.08181381]
[181.41606140 -14.41928959]
[173.37487793 -1.75676453]
[165.33370972 10.90576077]
[157.29254150 23.56828499]
[149.25135803 36.23081207]
[141.21018982 48.89333344]
[133.16902161 61.55585861]
[125.12784576 74.21838379]
[117.08666992 86.88091278]
[109.04549408 99.54343414]
[109.34375000 103.38835907]
[107.94577026 107.34606934]
[104.83917999 110.65608215]
[100.35186768 112.58061981]
[98.78095245 128.32363892]
[85.14533997 134.31692505]
[76.54677582 146.60775757]
[90.91952515 142.31544495]
[105.36042023 146.37261963]
[115.39477539 157.52214050]
[117.91334534 172.30918884]
[112.13572693 186.15184021]
[99.85217285 194.76080322]
[84.86887360 195.46850586]
[71.82857513 188.05563354]
[64.77194977 174.81916809]
[65.88566589 159.86032104]
[55.72211456 170.89219666]
[45.55856705 181.92407227]
[35.39502335 192.95594788]
[25.23147583 203.98783875]
[15.06792831 215.01971436]
[25.16536713 226.12553406]
[34.24174881 238.08032227]
[42.22603989 250.79049683]
[49.05574799 264.15661621]
[54.67741776 278.07400513]
[59.04705811 292.43380737]
[62.13046646 307.12362671]
[63.90350723 322.02844238]
[64.35231018 337.03164673]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 201]
[61 200]
[62 199]
[63 198]
[64 197]
[65 196]
[66 186]
[67 185]
[69 183]
[70 179]
[71 178]
[72 177]
[73 176]
[74 175]
[75 174]
[76 173]
[77 172]
[78 171]
[79 170]
[80 169]
[81 168]
[82 167]
[83 164]
[84 163]
[85 162]
[87 161]
[88 160]
[89 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
