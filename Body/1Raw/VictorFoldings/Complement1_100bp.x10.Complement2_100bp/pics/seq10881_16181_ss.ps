%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGGxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[-52.89731979 280.22601318]
[-64.02011108 270.16583252]
[-74.48244476 259.42044067]
[-84.24221039 248.03314209]
[-93.26010132 236.04975891]
[-101.49980164 223.51855469]
[-108.92813110 210.48999023]
[-115.51519012 197.01651001]
[-121.23445129 183.15238953]
[-126.06287384 168.95344543]
[-129.98103333 154.47685242]
[-132.97312927 139.78089905]
[-135.02714539 124.92476654]
[-136.13478088 109.96826935]
[-136.29159546 94.97163391]
[-135.49694824 79.99523926]
[-133.75404358 65.09940338]
[-131.06988525 50.34409714]
[-127.45530701 35.78873825]
[-122.92484283 21.49193382]
[-117.49674225 7.51125240]
[-111.19286346 -6.09701061]
[-104.03858948 -19.27806091]
[-96.06272888 -31.97882080]
[-87.29739380 -44.14815140]
[-77.77787781 -55.73704910]
[-67.54251862 -66.69885254]
[-56.63252258 -76.98941803]
[-45.09182739 -86.56731415]
[-32.96690369 -95.39397430]
[-41.00807571 -108.05649567]
[-49.04924774 -120.71902466]
[-57.09042358 -133.38154602]
[-65.13159180 -146.04406738]
[-78.25205994 -138.76489258]
[-91.78070068 -132.27577209]
[-105.67000580 -126.59948730]
[-119.87118530 -121.75598907]
[-134.33435059 -117.76228333]
[-149.00871277 -114.63240051]
[-163.84271240 -112.37734222]
[-178.78425598 -111.00502014]
[-193.78085327 -110.52025604]
[-208.77983093 -110.92475128]
[-223.72851562 -112.21708679]
[-238.57437134 -114.39273071]
[-253.26527405 -117.44402313]
[-267.74960327 -121.36026764]
[-281.97650146 -126.12769318]
[-295.89599609 -131.72955322]
[-309.45916748 -138.14619446]
[-322.61840820 -145.35504150]
[-335.32745361 -153.33079529]
[-347.54171753 -162.04544067]
[-359.21826172 -171.46835327]
[-370.31607056 -181.56645203]
[-380.79617310 -192.30426025]
[-390.62173462 -203.64405823]
[-399.75827026 -215.54602051]
[-408.17370605 -227.96832275]
[-415.83843994 -240.86735535]
[-422.72555542 -254.19778442]
[-428.81085205 -267.91281128]
[-434.07299805 -281.96423340]
[-438.49346924 -296.30273438]
[-442.05676270 -310.87792969]
[-444.75036621 -325.63858032]
[-446.56478882 -340.53292847]
[-447.49368286 -355.50857544]
[-447.53375244 -370.51293945]
[-446.68490601 -385.49334717]
[-444.95010376 -400.39715576]
[-442.33541870 -415.17199707]
[-438.85003662 -429.76602173]
[-434.50625610 -444.12792969]
[-429.31924438 -458.20727539]
[-423.30731201 -471.95462036]
[-416.49151611 -485.32165527]
[-408.89581299 -498.26147461]
[-400.54690552 -510.72857666]
[-391.47409058 -522.67913818]
[-381.70922852 -534.07128906]
[-371.28665161 -544.86492920]
[-360.24295044 -555.02221680]
[-348.61694336 -564.50738525]
[-336.44943237 -573.28717041]
[-323.78317261 -581.33068848]
[-310.66262817 -588.60974121]
[-297.13394165 -595.09875488]
[-283.24456787 -600.77496338]
[-269.04336548 -605.61828613]
[-254.58015442 -609.61187744]
[-239.90576172 -612.74163818]
[-225.07174683 -614.99658203]
[-210.13018799 -616.36877441]
[-195.13357544 -616.85339355]
[-180.13461304 -616.44879150]
[-165.18594360 -615.15631104]
[-150.34010315 -612.98052979]
[-135.64923096 -609.92907715]
[-121.16493225 -606.01275635]
[-106.93807220 -601.24517822]
[-93.01863861 -595.64318848]
[-79.45551300 -589.22644043]
[-66.29634857 -582.01745605]
[-53.58735275 -574.04162598]
[-41.37317657 -565.32684326]
[-29.69672012 -555.90386963]
[-18.59899902 -545.80566406]
[-8.11899281 -535.06774902]
[1.70648563 -523.72784424]
[10.84292412 -511.82583618]
[19.25823021 -499.40344238]
[26.92284584 -486.50436401]
[33.80984497 -473.17385864]
[39.89504242 -459.45877075]
[45.15705872 -445.40728760]
[49.57741547 -431.06875610]
[53.14057922 -416.49356079]
[55.83404160 -401.73284912]
[57.64833450 -386.83853149]
[58.57709122 -371.86285400]
[58.61704636 -356.85848999]
[57.76805878 -341.87808228]
[56.03311157 -326.97430420]
[53.41830063 -312.19946289]
[49.93280792 -297.60549927]
[45.58887863 -283.24362183]
[40.40176773 -269.16430664]
[34.38970184 -255.41702271]
[27.57379150 -242.05003357]
[19.97798157 -229.11030579]
[11.62895203 -216.64328003]
[2.55602932 -204.69274902]
[-7.20891714 -193.30070496]
[-17.63158798 -182.50714111]
[-28.67537308 -172.34999084]
[-40.30147934 -162.86491394]
[-52.46907043 -154.08525085]
[-44.42789841 -141.42271423]
[-36.38672256 -128.76019287]
[-28.34555054 -116.09767151]
[-20.30437851 -103.43514252]
[-7.15953493 -110.65573120]
[6.41680002 -117.02807617]
[20.36996078 -122.52653503]
[34.64376068 -127.12895966]
[49.18072891 -130.81681824]
[63.92232513 -133.57525635]
[78.80919647 -135.39318848]
[93.78139496 -136.26325989]
[108.77862549 -136.18200684]
[123.74051666 -135.14971924]
[138.60681152 -133.17057800]
[153.31765747 -130.25253296]
[167.81379700 -126.40735626]
[182.03688049 -121.65051270]
[195.92964172 -116.00117493]
[209.43612671 -109.48207092]
[222.50193787 -102.11946106]
[235.07449341 -93.94299316]
[247.10314941 -84.98558044]
[258.53945923 -75.28330231]
[269.33743286 -64.87522888]
[279.45349121 -53.80325699]
[288.84698486 -42.11197662]
[297.48007202 -29.84846306]
[305.31796265 -17.06209946]
[312.32913208 -3.80436778]
[318.48529053 9.87134552]
[323.76171875 23.90997314]
[328.13714600 38.25498962]
[331.59393311 52.84862900]
[334.11819458 67.63212585]
[335.69970703 82.54595947]
[336.33218384 97.53007507]
[336.01303101 112.52413940]
[334.74353027 127.46776581]
[332.52880859 142.30079651]
[329.37777710 156.96350098]
[325.30313110 171.39682007]
[320.32125854 185.54266357]
[314.45223999 199.34405518]
[307.71969604 212.74542236]
[300.15075684 225.69279480]
[291.77587891 238.13406372]
[282.62878418 250.01910400]
[272.74630737 261.30007935]
[262.16824341 271.93157959]
[250.93719482 281.87075806]
[239.09837341 291.07760620]
[226.69944763 299.51504517]
[213.79035950 307.14910889]
[200.42308044 313.94906616]
[186.65142822 319.88754272]
[172.53086853 324.94061279]
[158.11824036 329.08792114]
[143.47160339 332.31277466]
[128.64991760 334.60217285]
[113.71288300 335.94692993]
[98.72061920 336.34161377]
[83.73350525 335.78466797]
[68.81189728 334.27825928]
[54.01586533 331.82852173]
[39.40499878 328.44528198]
[25.03812408 324.14218140]
[10.97309494 318.93655396]
[-2.73345613 312.84933472]
[-16.02633667 305.90505981]
[-28.85202217 298.13168335]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 143]
[31 142]
[32 141]
[33 140]
[34 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
