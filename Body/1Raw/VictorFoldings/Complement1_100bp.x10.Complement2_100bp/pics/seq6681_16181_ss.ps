%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[71.45269012 580.88208008]
[58.97814560 589.26849365]
[45.34520721 595.60015869]
[30.88959503 599.72100830]
[15.96729088 601.52972412]
[0.94576913 600.98162842]
[-13.80504990 598.09027100]
[-27.92191505 592.92687988]
[-41.05718613 585.61859131]
[-52.88739395 576.34539795]
[-63.12121201 565.33557129]
[-71.50661469 552.86035156]
[-77.83712006 539.22686768]
[-81.95681763 524.77093506]
[-83.76425934 509.84848022]
[-83.21494293 494.82702637]
[-80.32239532 480.07644653]
[-75.15783691 465.95999146]
[-67.84846497 452.82531738]
[-58.57426071 440.99588013]
[-47.56362534 430.76296997]
[-35.08770370 422.37860107]
[-21.45371819 416.04922485]
[-6.99742651 411.93072510]
[7.92517662 410.12451172]
[22.94660759 410.67504883]
[25.83188057 395.95516968]
[28.71715164 381.23526001]
[31.60242462 366.51538086]
[34.48769760 351.79550171]
[37.37297058 337.07559204]
[35.71989822 333.96118164]
[35.49320602 329.89132690]
[37.12550735 325.54519653]
[40.72975922 321.76940918]
[44.26943207 307.19302368]
[47.80910492 292.61666870]
[43.29367828 278.42300415]
[54.06900406 266.83840942]
[57.60867691 252.26202393]
[61.14834595 237.68565369]
[64.68801880 223.10926819]
[63.21171188 215.86756897]
[68.39042664 208.34301758]
[72.14672089 193.82096863]
[75.57778168 179.21864319]
[78.68189240 164.54333496]
[81.78600311 149.86804199]
[84.89011383 135.19273376]
[87.99422455 120.51743317]
[91.09833527 105.84212494]
[92.99163055 90.96209717]
[93.66141510 75.97705841]
[94.33119965 60.99201584]
[95.00098419 46.00697708]
[95.67076874 31.02193832]
[93.26372528 26.39017677]
[92.90945435 21.76115990]
[94.26317596 17.91635895]
[96.71987915 15.38714504]
[98.05811310 0.44695997]
[99.39635468 -14.49322510]
[100.73458862 -29.43341064]
[89.28048706 -19.74818611]
[74.28159332 -19.56567192]
[62.59520721 -28.96930695]
[59.56418228 -43.65987778]
[66.57426453 -56.92105484]
[80.42053223 -62.69000244]
[94.77266693 -58.32923889]
[103.06950378 -45.83064651]
[105.95477295 -60.55053711]
[108.84004974 -75.27043152]
[111.72531891 -89.99031830]
[114.61059570 -104.71021271]
[117.49586487 -119.43009949]
[112.55753326 -134.46084595]
[122.59845734 -145.46217346]
[125.48373413 -160.18206787]
[128.36900330 -174.90196228]
[131.25427246 -189.62185669]
[132.92581177 -204.52842712]
[133.37242126 -219.52177429]
[133.81903076 -234.51512146]
[126.49604034 -248.53955078]
[134.60885620 -261.03082275]
[135.05545044 -276.02416992]
[135.50205994 -291.01751709]
[135.94866943 -306.01086426]
[121.22182465 -309.05899048]
[107.24809265 -314.61831665]
[94.45211029 -322.51983643]
[83.22274017 -332.52343750]
[73.90122223 -344.32516479]
[66.77084351 -357.56634521]
[62.04826736 -371.84457397]
[59.87702179 -386.72601318]
[60.32308578 -401.75839233]
[63.37289810 -416.48486328]
[68.93378448 -430.45797729]
[76.83675385 -443.25305176]
[86.84164429 -454.48129272]
[98.64441681 -463.80148315]
[111.88640594 -470.93035889]
[126.16519165 -475.65130615]
[141.04685974 -477.82086182]
[156.07917786 -477.37310791]
[170.80532837 -474.32162476]
[184.77780151 -468.75915527]
[197.57199097 -460.85473633]
[208.79910278 -450.84857178]
[218.11793518 -439.04473877]
[225.24531555 -425.80194092]
[229.96464539 -411.52261353]
[232.13252258 -396.64071655]
[231.68304443 -381.60842896]
[228.62989807 -366.88262939]
[223.06584167 -352.91079712]
[215.15995789 -340.11749268]
[205.15252686 -328.89151001]
[193.34764099 -319.57403564]
[180.10403442 -312.44815063]
[165.82418823 -307.73043823]
[150.94201660 -305.56423950]
[150.49540710 -290.57089233]
[150.04881287 -275.57754517]
[149.60220337 -260.58419800]
[156.95713806 -247.63220215]
[148.81237793 -234.06851196]
[148.36576843 -219.07516479]
[147.91917419 -204.08181763]
[156.74217224 -216.21255493]
[170.15086365 -222.93615723]
[185.14971924 -222.75056458]
[198.38793945 -215.69725037]
[206.90809631 -203.35191345]
[208.80673218 -188.47256470]
[203.65971375 -174.38327026]
[192.61689758 -164.23161316]
[178.14524841 -160.28552246]
[163.47781372 -163.42652893]
[151.89129639 -172.95295715]
[145.97416687 -186.73657227]
[143.08889771 -172.01669312]
[140.20362854 -157.29679871]
[137.31834412 -142.57690430]
[142.46305847 -128.59901428]
[132.21575928 -116.54483032]
[129.33049011 -101.82493591]
[126.44521332 -87.10504913]
[123.55993652 -72.38515472]
[120.67466736 -57.66526413]
[117.78939056 -42.94537354]
[115.67476654 -28.09517670]
[114.33653259 -13.15499115]
[112.99829865 1.78519416]
[111.66006470 16.72537994]
[110.65580750 31.69172287]
[109.98602295 46.67676163]
[109.31623840 61.66180038]
[108.64645386 76.64684296]
[107.97666931 91.63188171]
[116.97930145 79.63385773]
[130.48661804 73.11062622]
[145.48103333 73.51950836]
[158.61279297 80.76914978]
[166.94818115 93.23995972]
[168.62509155 108.14592743]
[163.26887512 122.15702820]
[152.07612610 132.14314270]
[137.54734802 135.87335205]
[122.92828369 132.51429749]
[111.48489380 122.81642914]
[105.77363586 108.94623566]
[102.66952515 123.62154388]
[99.56541443 138.29684448]
[96.46131134 152.97215271]
[93.35720062 167.64744568]
[90.25308990 182.32275391]
[91.87271881 187.28498840]
[91.46749115 191.90983582]
[89.50500488 195.48245239]
[86.66878510 197.57727051]
[82.91248322 212.09931946]
[79.26439667 226.64894104]
[75.72472382 241.22531128]
[72.18505096 255.80169678]
[68.64537811 270.37808228]
[72.90762329 285.61434937]
[62.38547897 296.15634155]
[58.84580612 310.73269653]
[55.30613708 325.30908203]
[52.09286118 339.96087646]
[49.20758820 354.68075562]
[46.32231522 369.40066528]
[43.43704224 384.12054443]
[40.55177307 398.84042358]
[37.66650009 413.56033325]
[51.78421402 418.72140503]
[64.92069244 426.02752686]
[76.75243378 435.29879761]
[86.98806000 446.30688477]
[95.37552643 458.78073120]
[101.70828247 472.41314697]
[105.83036041 486.86843872]
[107.64027405 501.79058838]
[107.09343719 516.81213379]
[104.20331573 531.56323242]
[99.04109192 545.68048096]
[91.73387909 558.81634521]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 198]
[27 197]
[28 196]
[29 195]
[30 194]
[31 193]
[35 192]
[36 191]
[37 190]
[39 188]
[40 187]
[41 186]
[42 185]
[44 184]
[45 183]
[46 179]
[47 178]
[48 177]
[49 176]
[50 175]
[51 174]
[52 162]
[53 161]
[54 160]
[55 159]
[56 158]
[60 157]
[61 156]
[62 155]
[63 154]
[71 153]
[72 152]
[73 151]
[74 150]
[75 149]
[76 148]
[78 146]
[79 145]
[80 144]
[81 143]
[82 131]
[83 130]
[84 129]
[86 127]
[87 126]
[88 125]
[89 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
