%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[151.78495789 837.75958252]
[137.08119202 834.78057861]
[122.52473450 831.14959717]
[108.14447784 826.87371826]
[93.96896362 821.96148682]
[80.02635193 816.42266846]
[66.34432220 810.26824951]
[52.95002747 803.51043701]
[39.87007141 796.16265869]
[27.13042259 788.23950195]
[14.75637054 779.75671387]
[2.77248454 770.73114014]
[-8.79744244 761.18060303]
[-19.93043900 751.12420654]
[-30.60440254 740.58184814]
[-40.79814148 729.57446289]
[-50.49141312 718.12390137]
[-59.66497421 706.25286865]
[-68.30061340 693.98504639]
[-76.38118744 681.34466553]
[-83.89064789 668.35681152]
[-90.81408691 655.04742432]
[-97.13775635 641.44274902]
[-102.84910583 627.56994629]
[-107.93679810 613.45642090]
[-112.39071655 599.13031006]
[-116.20204163 584.62005615]
[-119.36318970 569.95434570]
[-121.86788940 555.16241455]
[-123.71116638 540.27355957]
[-124.88935852 525.31744385]
[-125.40013885 510.32360840]
[-125.24247742 495.32196045]
[-124.41670227 480.34219360]
[-122.92443848 465.41409302]
[-120.76865387 450.56729126]
[-117.95363617 435.83126831]
[-114.48496246 421.23526001]
[-110.36952972 406.80825806]
[-105.61550903 392.57891846]
[-100.23232269 378.57546997]
[-94.23068237 364.82574463]
[-87.62248230 351.35702515]
[-80.42085266 338.19601440]
[-72.64009857 325.36892700]
[-64.29565430 312.90115356]
[-55.40409470 300.81747437]
[-45.98307037 289.14187622]
[-36.05128860 277.89758301]
[-25.62846756 267.10684204]
[-14.73529816 256.79113770]
[-3.39340973 246.97091675]
[8.37467957 237.66571045]
[20.54560471 228.89395142]
[33.09520340 220.67309570]
[45.99855423 213.01943970]
[59.23004532 205.94818115]
[72.76340485 199.47337341]
[86.57176208 193.60786438]
[100.62770081 188.36328125]
[114.90331268 183.75006104]
[110.93122101 169.28553772]
[106.95912170 154.82101440]
[102.98703003 140.35649109]
[99.01493073 125.89196777]
[95.04283142 111.42744446]
[91.99137878 126.11378479]
[84.97677612 139.37257385]
[74.55223083 150.15815735]
[61.53986740 157.61994934]
[46.96588898 161.16947937]
[31.97966194 160.52680969]
[17.76306534 155.74263000]
[5.43727684 147.19424438]
[-4.02563906 135.55580139]
[-9.87939835 121.74517059]
[-11.66234779 106.85151672]
[-9.23387718 92.04940033]
[-2.78550649 78.50619507]
[7.17421961 67.28996277]
[19.85983467 59.28526688]
[34.27090073 55.12339020]
[49.27089691 55.13255692]
[63.67686462 59.31204224]
[76.35268402 67.33223724]
[86.29869843 78.56063080]
[92.73154449 92.11502838]
[85.40855408 78.09060669]
[93.52136230 65.59934235]
[93.96797180 50.60599518]
[94.41457367 35.61264420]
[94.86118317 20.61929321]
[95.30778503 5.62594414]
[95.75439453 -9.36740589]
[96.20099640 -24.36075592]
[96.64760590 -39.35410690]
[82.28282928 -44.02634811]
[69.81702423 -52.55749512]
[60.26074982 -64.25596619]
[54.38867569 -78.17341614]
[52.67683792 -93.18162537]
[55.26399612 -108.06394196]
[61.94042969 -121.61392212]
[72.16490173 -132.73312378]
[85.10857391 -140.52017212]
[99.72214508 -144.34381104]
[114.82096863 -143.89405823]
[129.18104553 -139.20739746]
[141.63825989 -130.66372681]
[151.18278503 -118.95566559]
[157.04087830 -105.03231812]
[158.73764038 -90.02239990]
[156.13552856 -75.14269257]
[149.44548035 -61.59942627]
[139.20983887 -50.49049759]
[126.25836182 -42.71645355]
[111.64095306 -38.90750122]
[111.19435120 -23.91415024]
[110.74774170 -8.92080021]
[110.30113983 6.07254982]
[109.85453033 21.06589890]
[109.40792847 36.05924988]
[108.96131897 51.05260086]
[108.51471710 66.04595184]
[115.86964417 78.99794769]
[107.72489166 92.56163025]
[109.50735474 107.45535278]
[113.47945404 121.91987610]
[117.45155334 136.38439941]
[121.42364502 150.84892273]
[125.39574432 165.31344604]
[129.36784363 179.77796936]
[143.99737549 176.45355225]
[158.76048279 173.78414917]
[173.62783813 171.77503967]
[188.56994629 170.43022156]
[203.55711365 169.75234985]
[218.55961609 169.74279785]
[233.54763794 170.40156555]
[248.49145508 171.72735596]
[263.36135864 173.71751404]
[278.12783813 176.36811829]
[292.76159668 179.67388916]
[307.23358154 183.62826538]
[321.51501465 188.22340393]
[335.57760620 193.45016479]
[349.39337158 199.29818726]
[362.93490601 205.75585938]
[376.17535400 212.81034851]
[389.08837891 220.44766235]
[401.64837646 228.65261841]
[413.83041382 237.40895081]
[425.61029053 246.69924927]
[436.96459961 256.50509644]
[447.87081909 266.80700684]
[458.30731201 277.58450317]
[468.25332642 288.81625366]
[477.68911743 300.47988892]
[486.59597778 312.55227661]
[494.95620728 325.00949097]
[502.75320435 337.82672119]
[509.97149658 350.97857666]
[516.59674072 364.43893433]
[522.61578369 378.18106079]
[528.01672363 392.17767334]
[532.78875732 406.40097046]
[536.92242432 420.82275391]
[540.40960693 435.41433716]
[543.24328613 450.14678955]
[545.41784668 464.99087524]
[546.92901611 479.91705322]
[547.77380371 494.89575195]
[547.95043945 509.89721680]
[547.45867920 524.89166260]
[546.29943848 539.84930420]
[544.47497559 554.74047852]
[541.98901367 569.53552246]
[538.84643555 584.20520020]
[535.05352783 598.72033691]
[530.61773682 613.05206299]
[525.54791260 627.17199707]
[519.85412598 641.05206299]
[513.54772949 654.66467285]
[506.64114380 667.98284912]
[499.14813232 680.98016357]
[491.08358765 693.63079834]
[482.46350098 705.90960693]
[473.30496216 717.79217529]
[463.62622070 729.25500488]
[453.44641113 740.27532959]
[442.78582764 750.83117676]
[431.66555786 760.90173340]
[420.10772705 770.46685791]
[408.13528442 779.50762939]
[395.77200317 788.00604248]
[383.04238892 795.94537354]
[369.97174072 803.30969238]
[356.58602905 810.08441162]
[342.91180420 816.25616455]
[328.97622681 821.81268311]
[314.80694580 826.74285889]
[300.43209839 831.03692627]
[285.88024902 834.68640137]
[271.18026733 837.68395996]
[256.36135864 840.02374268]
[241.45291138 841.70111084]
[226.48455811 842.71264648]
[211.48599243 843.05633545]
[196.48701477 842.73162842]
[181.51737976 841.73907471]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 132]
[62 131]
[63 130]
[64 129]
[65 128]
[66 127]
[87 126]
[89 124]
[90 123]
[91 122]
[92 121]
[93 120]
[94 119]
[95 118]
[96 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
