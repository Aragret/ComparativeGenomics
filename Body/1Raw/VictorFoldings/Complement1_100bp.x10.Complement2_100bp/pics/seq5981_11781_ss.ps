%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[88.04071045 512.14697266]
[75.55290222 520.48681641]
[62.19581223 527.34875488]
[48.14357376 532.64331055]
[33.57939148 536.30145264]
[18.69313431 538.27557373]
[3.67887831 538.53991699]
[-11.26763725 537.09094238]
[-25.95155144 533.94763184]
[-40.18143082 529.15093994]
[-53.77176285 522.76342773]
[-66.54536438 514.86828613]
[-78.33570862 505.56851196]
[-88.98907471 494.98535156]
[-98.36659241 483.25674438]
[-106.34599304 470.53564453]
[-112.82324982 456.98782349]
[-117.71392059 442.78997803]
[-120.95424652 428.12716675]
[-122.50198364 413.19055176]
[-122.33695221 398.17489624]
[-120.46130371 383.27590942]
[-116.89949799 368.68783569]
[-111.69795227 354.60092163]
[-104.92449951 341.19876099]
[-96.66743469 328.65606689]
[-87.03440857 317.13641357]
[-76.15100861 306.78994751]
[-64.15911865 297.75155640]
[-51.21507645 290.13909912]
[-37.48764038 284.05178833]
[-23.15577507 279.56903076]
[-8.40632057 276.74920654]
[6.56842995 275.62911987]
[21.57324982 276.22332764]
[36.41252136 278.52416992]
[40.38462067 264.05963135]
[36.29379272 249.73782349]
[47.40925598 238.47917175]
[51.38135147 224.01464844]
[55.35345078 209.55012512]
[54.08573532 207.04992676]
[53.73200226 203.89691162]
[54.54585648 200.43669128]
[56.65122223 197.10023499]
[60.01651382 194.35638428]
[64.84251404 180.15393066]
[69.66851044 165.95146179]
[74.49450684 151.74900818]
[79.32050323 137.54655457]
[84.14650726 123.34410095]
[88.97250366 109.14164734]
[86.43765259 95.39151001]
[96.82504272 86.03235626]
[101.65103912 71.82990265]
[106.47703552 57.62744522]
[111.30303955 43.42499161]
[110.28454590 38.30544281]
[111.23648071 33.76153183]
[113.60960388 30.44742203]
[116.67465210 28.70449066]
[122.13001251 14.73169231]
[119.94155121 -0.93742472]
[131.77778625 -9.97914886]
[137.23313904 -23.95194626]
[142.68850708 -37.92474365]
[148.14385986 -51.89754105]
[134.52531433 -58.19643402]
[121.31610107 -65.31385040]
[108.56536865 -73.22332001]
[96.32054901 -81.89540863]
[84.62718964 -91.29786682]
[73.52879333 -101.39571381]
[63.06664658 -112.15138245]
[53.27967072 -123.52485657]
[44.20427322 -135.47383118]
[35.87421799 -147.95385742]
[28.32048798 -160.91850281]
[21.57118797 -174.31953430]
[15.65142536 -188.10711670]
[10.58322144 -202.22993469]
[6.38543081 -216.63546753]
[3.07366967 -231.27012634]
[0.66025764 -246.07945251]
[-0.84582692 -261.00836182]
[-1.43898118 -276.00134277]
[-1.11699867 -291.00259399]
[0.11892293 -305.95629883]
[2.26418567 -320.80682373]
[5.31080914 -335.49896240]
[9.24746037 -349.97805786]
[14.05949306 -364.19018555]
[19.72900772 -378.08255005]
[26.23491096 -391.60342407]
[33.55300140 -404.70251465]
[41.65605927 -417.33111572]
[50.51393127 -429.44223022]
[60.09367371 -440.99078369]
[70.35964966 -451.93386841]
[81.27365875 -462.23071289]
[92.79510498 -471.84304810]
[104.88113403 -480.73510742]
[117.48677826 -488.87380981]
[130.56513977 -496.22891235]
[144.06758118 -502.77297974]
[157.94386292 -508.48175049]
[172.14234924 -513.33392334]
[186.61024475 -517.31146240]
[201.29371643 -520.39959717]
[216.13813782 -522.58679199]
[231.08830261 -523.86499023]
[246.08856201 -524.22937012]
[261.08316040 -523.67858887]
[276.01626587 -522.21466064]
[290.83236694 -519.84313965]
[305.47631836 -516.57275391]
[319.89364624 -512.41564941]
[334.03073120 -507.38739014]
[347.83499146 -501.50662231]
[361.25503540 -494.79519653]
[374.24099731 -487.27813721]
[386.74450684 -478.98339844]
[398.71908569 -469.94180298]
[410.12014771 -460.18701172]
[420.90533447 -449.75527954]
[431.03451538 -438.68548584]
[440.46997070 -427.01873779]
[449.17663574 -414.79846191]
[457.12210083 -402.07012939]
[464.27682495 -388.88107300]
[470.61416626 -375.28039551]
[476.11056519 -361.31863403]
[480.74560547 -347.04779053]
[484.50198364 -332.52090454]
[487.36575317 -317.79202271]
[489.32626343 -302.91595459]
[490.37625122 -287.94805908]
[490.51174927 -272.94396973]
[489.73229980 -257.95953369]
[488.04077148 -243.05049133]
[485.44348145 -228.27229309]
[481.95007324 -213.67993164]
[477.57354736 -199.32769775]
[472.33020020 -185.26895142]
[466.23953247 -171.55601501]
[459.32418823 -158.23989868]
[451.60992432 -145.37014771]
[443.12539673 -132.99461365]
[433.90216064 -121.15936279]
[423.97457886 -109.90840912]
[413.37957764 -99.28360748]
[402.15652466 -89.32449341]
[390.34719849 -80.06809998]
[377.99554443 -71.54886627]
[365.14749146 -63.79848862]
[351.85083008 -56.84579849]
[338.15505981 -50.71666336]
[324.11108398 -45.43387604]
[309.77117920 -41.01709747]
[295.18869019 -37.48275375]
[280.41784668 -34.84399033]
[265.51358032 -33.11063004]
[250.53140259 -32.28911972]
[235.52700806 -32.38251114]
[220.55619812 -33.39046097]
[205.67469788 -35.30921936]
[190.93785095 -38.13164520]
[176.40046692 -41.84724045]
[162.11665344 -46.44218445]
[156.66130066 -32.46938705]
[151.20594788 -18.49658966]
[145.75057983 -4.52379179]
[148.32925415 10.14589691]
[136.10281372 20.18704987]
[130.64744568 34.15984726]
[125.50549316 48.25098801]
[120.67949677 62.45344543]
[115.85349274 76.65589905]
[111.02749634 90.85835266]
[113.56234741 104.60848999]
[103.17495728 113.96764374]
[98.34896088 128.17010498]
[93.52296448 142.37255859]
[88.69696045 156.57501221]
[83.87096405 170.77746582]
[79.04496765 184.97991943]
[74.21897125 199.18237305]
[69.81797028 213.52221680]
[65.84587860 227.98674011]
[61.87377930 242.45127869]
[65.68049622 257.80767822]
[54.84914398 268.03173828]
[50.87704849 282.49624634]
[64.81022644 288.09661865]
[78.01418304 295.24877930]
[90.31675720 303.85949707]
[101.55757904 313.81649780]
[111.59008789 324.98995972]
[120.28349304 337.23425293]
[127.52446747 350.38970947]
[133.21859741 364.28485107]
[137.29164124 378.73849487]
[139.69052124 393.56222534]
[140.38395691 408.56277466]
[139.36289978 423.54461670]
[136.64065552 438.31240845]
[132.25273132 452.67358398]
[126.25631714 466.44097900]
[118.72960663 479.43505859]
[109.77070618 491.48645020]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 193]
[37 192]
[39 190]
[40 189]
[41 188]
[46 187]
[47 186]
[48 185]
[49 184]
[50 183]
[51 182]
[52 181]
[54 179]
[55 178]
[56 177]
[57 176]
[61 175]
[62 174]
[64 172]
[65 171]
[66 170]
[67 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
