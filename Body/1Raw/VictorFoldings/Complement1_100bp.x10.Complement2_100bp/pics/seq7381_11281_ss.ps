%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[320.44018555 229.06431580]
[312.48577881 241.77894592]
[303.79888916 254.00485229]
[294.40945435 265.69985962]
[284.34985352 276.82366943]
[273.65475464 287.33792114]
[262.36105347 297.20642090]
[250.50764465 306.39508057]
[238.13540649 314.87225342]
[225.28698730 322.60873413]
[212.00668335 329.57781982]
[198.34027100 335.75552368]
[184.33486938 341.12051392]
[170.03874207 345.65432739]
[155.50117493 349.34130859]
[140.77227783 352.16879272]
[125.90283966 354.12698364]
[110.94410706 355.20913696]
[95.94764709 355.41152954]
[80.96516418 354.73348999]
[66.04828644 353.17733765]
[51.24845505 350.74841309]
[36.61667633 347.45510864]
[22.20339203 343.30877686]
[8.05828953 338.32373047]
[-5.76987219 332.51712036]
[-19.23342514 325.90896606]
[-32.28595352 318.52209473]
[-44.88246918 310.38189697]
[-56.97954559 301.51647949]
[-68.53548431 291.95642090]
[-79.51044464 281.73461914]
[-89.86660004 270.88635254]
[-99.56824493 259.44903564]
[-108.58193970 247.46202087]
[-116.87660980 234.96670532]
[-124.42366791 222.00611877]
[-131.19708252 208.62495422]
[-137.17352295 194.86933899]
[-142.33238220 180.78669739]
[-146.65586853 166.42556763]
[-150.12908936 151.83544922]
[-152.74006653 137.06663513]
[-154.47979736 122.17005920]
[-155.34226990 107.19705963]
[-155.32453918 92.19924164]
[-154.42666626 77.22831726]
[-152.65171814 62.33589554]
[-150.00582886 47.57330704]
[-146.49813843 32.99143982]
[-142.14070129 18.64056969]
[-136.94856262 4.57015848]
[-130.93962097 -9.17128658]
[-124.13457489 -22.53639603]
[-116.55690002 -35.47909927]
[-108.23270416 -47.95477676]
[-99.19069672 -59.92042923]
[-89.46203613 -71.33480072]
[-79.08026123 -82.15854645]
[-68.08116150 -92.35436249]
[-56.50265121 -101.88708496]
[-44.38464737 -110.72386932]
[-31.76892090 -118.83424377]
[-18.69896126 -126.19025421]
[-5.21982336 -132.76654053]
[8.62202835 -138.54043579]
[22.77887917 -143.49203491]
[37.20192337 -147.60427856]
[51.84144974 -150.86297607]
[66.64698792 -153.25688171]
[81.56749725 -154.77778625]
[96.55154419 -155.42041016]
[111.54748535 -155.18254089]
[126.50361633 -154.06501770]
[141.36837769 -152.07168579]
[156.09054565 -149.20939636]
[170.61935425 -145.48805237]
[184.90472412 -140.92045593]
[198.89741516 -135.52235413]
[212.54917908 -129.31236267]
[225.81297302 -122.31188202]
[238.64305115 -114.54505157]
[250.99520874 -106.03864288]
[262.82684326 -96.82197571]
[274.09719849 -86.92682648]
[284.76739502 -76.38730621]
[294.80068970 -65.23973846]
[304.16244507 -53.52256012]
[312.82040405 -41.27616119]
[320.74472046 -28.54275131]
[327.90811157 -15.36623096]
[341.48431396 -21.74483681]
[355.06051636 -28.12344170]
[368.63674927 -34.50204468]
[382.21295166 -40.88064957]
[395.78915405 -47.25925446]
[390.30999756 -61.22854614]
[385.75619507 -75.52628326]
[382.14727783 -90.09123993]
[379.49868774 -104.86104584]
[377.82177734 -119.77246094]
[377.12368774 -134.76162720]
[377.40744019 -149.76434326]
[378.67181396 -164.71638489]
[380.91140747 -179.55372620]
[384.11660767 -194.21281433]
[388.27371216 -208.63088989]
[393.36489868 -222.74620056]
[399.36834717 -236.49830627]
[406.25842285 -249.82833862]
[414.00555420 -262.67916870]
[422.57656860 -274.99581909]
[431.93478394 -286.72552490]
[442.04016113 -297.81805420]
[452.84936523 -308.22589111]
[464.31613159 -317.90451050]
[476.39135742 -326.81240845]
[489.02334595 -334.91149902]
[502.15798950 -342.16708374]
[515.73907471 -348.54806519]
[529.70837402 -354.02713013]
[544.00616455 -358.58084106]
[558.57110596 -362.18966675]
[573.34094238 -364.83816528]
[588.25238037 -366.51501465]
[603.24151611 -367.21301270]
[618.24426270 -366.92916870]
[633.19628906 -365.66470337]
[648.03363037 -363.42501831]
[662.69268799 -360.21972656]
[677.11071777 -356.06256104]
[691.22601318 -350.97128296]
[704.97808838 -344.96774292]
[718.30804443 -338.07760620]
[731.15887451 -330.33041382]
[743.47546387 -321.75930786]
[755.20507812 -312.40100098]
[766.29754639 -302.29559326]
[776.70538330 -291.48632812]
[786.38391113 -280.01950073]
[795.29174805 -267.94421387]
[803.39074707 -255.31216431]
[810.64624023 -242.17747498]
[817.02716064 -228.59637451]
[822.50616455 -214.62701416]
[827.05975342 -200.32922363]
[830.66851807 -185.76423645]
[833.31695557 -170.99438477]
[834.99365234 -156.08296204]
[835.69158936 -141.09379578]
[835.40765381 -126.09107208]
[834.14306641 -111.13904572]
[831.90332031 -96.30173492]
[828.69793701 -81.64268494]
[824.54071045 -67.22465515]
[819.44934082 -53.10940170]
[813.44573975 -39.35736084]
[806.55548096 -26.02742195]
[798.80822754 -13.17666721]
[790.23706055 -0.86012530]
[780.87866211 10.86946201]
[770.77319336 21.96186638]
[759.96386719 32.36959076]
[748.49700928 42.04806137]
[736.42163086 50.95583725]
[723.78955078 59.05477524]
[710.65484619 66.31018829]
[697.07366943 72.69100952]
[683.10430908 78.16992188]
[668.80645752 82.72345734]
[654.24145508 86.33211517]
[639.47161865 88.98044586]
[624.56018066 90.65711212]
[609.57098389 91.35492706]
[594.56829834 91.07089996]
[579.61627197 89.80625916]
[564.77899170 87.56641388]
[550.11993408 84.36094666]
[535.70190430 80.20359802]
[521.58673096 75.11216736]
[507.83468628 69.10845184]
[494.50479126 62.21816635]
[481.65408325 54.47080994]
[469.33758545 45.89956284]
[457.60806274 36.54112625]
[446.51571655 26.43557739]
[436.10806274 15.62618732]
[426.42965698 4.15924597]
[417.52194214 -7.91614389]
[409.42309570 -20.54827309]
[402.16775513 -33.68304825]
[388.59155273 -27.30444336]
[375.01535034 -20.92583847]
[361.43914795 -14.54723358]
[347.86291504 -8.16862869]
[334.28671265 -1.79002392]
[339.85671997 12.13513184]
[344.59985352 26.36317444]
[348.49984741 40.84505844]
[351.54318237 55.53086090]
[353.71939087 70.36995697]
[355.02099609 85.31119537]
[355.44351196 100.30307007]
[354.98544312 115.29389954]
[353.64837646 130.23200989]
[351.43695068 145.06588745]
[348.35876465 159.74443054]
[344.42443848 174.21702576]
[339.64755249 188.43377686]
[334.04452515 202.34567261]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[91 196]
[92 195]
[93 194]
[94 193]
[95 192]
[96 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
