%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[54.01793289 814.91546631]
[39.08510971 816.37414551]
[24.09429741 817.00061035]
[9.09183598 816.79309082]
[-5.87590408 815.75207520]
[-20.76265907 813.88085938]
[-35.52241135 811.18518066]
[-50.10954285 807.67340088]
[-64.47896576 803.35638428]
[-78.58625793 798.24743652]
[-92.38782501 792.36242676]
[-105.84100342 785.71942139]
[-118.90420532 778.33911133]
[-131.53704834 770.24414062]
[-143.70050049 761.45965576]
[-155.35694885 752.01275635]
[-166.47038269 741.93261719]
[-177.00643921 731.25048828]
[-186.93254089 719.99926758]
[-196.21803284 708.21380615]
[-204.83418274 695.93054199]
[-212.75439453 683.18743896]
[-219.95414734 670.02380371]
[-226.41122437 656.48046875]
[-232.10563660 642.59912109]
[-237.01980591 628.42285156]
[-241.13853455 613.99530029]
[-244.44908142 599.36120605]
[-246.94123840 584.56573486]
[-248.60726929 569.65460205]
[-249.44204712 554.67395020]
[-249.44299316 539.67004395]
[-248.61009216 524.68933105]
[-246.94592285 509.77798462]
[-244.45562744 494.98220825]
[-241.14691162 480.34768677]
[-237.02999878 465.91964722]
[-232.11761475 451.74270630]
[-226.42494202 437.86068726]
[-219.96957397 424.31649780]
[-212.77145386 411.15200806]
[-204.85285950 398.40786743]
[-196.23823547 386.12353516]
[-186.95423889 374.33691406]
[-177.02954102 363.08447266]
[-166.49482727 352.40100098]
[-155.38265991 342.31948853]
[-143.72738647 332.87112427]
[-131.56504822 324.08511353]
[-118.93321228 315.98858643]
[-105.87094116 308.60656738]
[-92.41859436 301.96191406]
[-78.61777496 296.07513428]
[-64.51111603 290.96444702]
[-50.14223862 286.64562988]
[-35.55554581 283.13201904]
[-20.79613113 280.43450928]
[-5.90961218 278.56140137]
[9.05799770 277.51852417]
[24.06043243 277.30908203]
[39.05132294 277.93371582]
[53.98432922 279.39050293]
[68.81330109 281.67492676]
[71.91740417 266.99963379]
[75.02151489 252.32432556]
[70.08549500 238.27139282]
[80.51112366 226.37110901]
[83.61523438 211.69581604]
[86.71934509 197.02050781]
[89.82345581 182.34519958]
[91.49499512 167.43862915]
[91.71832275 152.44029236]
[91.94165039 137.44195557]
[92.16497803 122.44361877]
[92.38830566 107.44528198]
[91.38404846 92.47893524]
[89.15892792 77.64489746]
[86.93381500 62.81084824]
[84.70869446 47.97680664]
[82.48358154 33.14276123]
[80.25846100 18.30871964]
[77.70262909 3.52806520]
[74.81735992 -11.19182587]
[64.57006073 -23.24601364]
[69.71475983 -37.22389984]
[66.82949066 -51.94379044]
[63.94421768 -66.66368103]
[48.88735962 -67.52499390]
[34.51799011 -72.10451508]
[21.73937988 -80.11437988]
[11.35480213 -91.05107880]
[4.01704073 -104.22711945]
[0.18735340 -118.81424713]
[0.10647768 -133.89550781]
[3.77949739 -148.52287292]
[10.97552299 -161.77685547]
[21.24220657 -172.82429504]
[33.93417740 -180.97074890]
[48.25360489 -185.70411682]
[63.30035782 -186.72686768]
[78.12858582 -183.97470093]
[91.80617523 -177.62060547]
[103.47334290 -168.06404114]
[112.39667511 -155.90571594]
[118.01524353 -141.90991211]
[119.97586823 -126.95642090]
[118.15529633 -111.98523712]
[112.66796875 -97.93746185]
[103.85882568 -85.69613647]
[92.28162384 -76.03078461]
[78.66410828 -69.54895782]
[81.54937744 -54.82906342]
[84.43465424 -40.10917282]
[94.47557831 -29.10784912]
[89.53724670 -14.07709885]
[92.42252350 0.64279252]
[95.12902832 2.90269828]
[96.87538910 6.58580303]
[97.00462341 11.22655678]
[95.09250641 16.08360100]
[97.31761932 30.91764450]
[99.54273987 45.75168991]
[101.76785278 60.58573151]
[103.99297333 75.41977692]
[106.21809387 90.25382233]
[112.74477386 76.74817657]
[124.74510193 67.74861145]
[139.53816223 65.26565552]
[153.81916809 69.85400391]
[164.39768982 80.48860931]
[168.91047668 94.79367065]
[166.34933472 109.57341003]
[157.28643799 121.52598572]
[143.74647522 127.98116302]
[128.75430298 127.49684143]
[115.65919495 120.18122101]
[107.38664246 107.66860962]
[107.16331482 122.66694641]
[106.93998718 137.66528320]
[106.71665955 152.66362000]
[106.49333191 167.66195679]
[114.53507996 154.99980164]
[126.98650360 146.63546753]
[141.74931335 143.97848511]
[156.33570862 147.47660828]
[168.28764343 156.54034424]
[175.59098816 169.64228821]
[177.01501465 184.57453918]
[172.31974792 198.82075500]
[162.29641724 209.98017883]
[148.63414001 216.17227173]
[133.63523865 216.35354614]
[119.82728577 210.49345398]
[109.53718567 199.57952881]
[104.49875641 185.44931030]
[101.39464569 200.12461853]
[98.29053497 214.79992676]
[95.18642426 229.47521973]
[99.90042877 244.57783508]
[89.69682312 255.42843628]
[86.59271240 270.10372925]
[83.48860168 284.77905273]
[97.97250366 288.69485474]
[112.21640015 293.40954590]
[126.17626190 298.90853882]
[139.80894470 305.17486572]
[153.07231140 312.18914795]
[165.92535400 319.92971802]
[178.32836914 328.37258911]
[190.24298096 337.49172974]
[201.63240051 347.25894165]
[212.46139526 357.64401245]
[222.69651794 368.61486816]
[232.30610657 380.13754272]
[241.26046753 392.17651367]
[249.53193665 404.69448853]
[257.09494019 417.65280151]
[263.92608643 431.01141357]
[270.00427246 444.72900391]
[275.31072998 458.76318359]
[279.82904053 473.07058716]
[283.54519653 487.60699463]
[286.44778442 502.32745361]
[288.52780151 517.18646240]
[289.77877808 532.13812256]
[290.19692993 547.13623047]
[289.78088379 562.13433838]
[288.53198242 577.08618164]
[286.45404053 591.94549561]
[283.55352783 606.66632080]
[279.83938599 621.20324707]
[275.32308960 635.51129150]
[270.01861572 649.54626465]
[263.94235229 663.26470947]
[257.11306763 676.62426758]
[249.55187988 689.58361816]
[241.28216553 702.10278320]
[232.32948303 714.14294434]
[222.72149658 725.66699219]
[212.48791504 736.63928223]
[201.66036987 747.02587891]
[190.27232361 756.79467773]
[178.35897827 765.91546631]
[165.95715332 774.36010742]
[153.10519409 782.10241699]
[139.84280396 789.11859131]
[126.21100616 795.38684082]
[112.25190735 800.88775635]
[98.00867462 805.60449219]
[83.52531433 809.52227783]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 162]
[64 161]
[65 160]
[67 158]
[68 157]
[69 156]
[70 155]
[71 141]
[72 140]
[73 139]
[74 138]
[75 137]
[76 125]
[77 124]
[78 123]
[79 122]
[80 121]
[81 120]
[82 116]
[83 115]
[85 113]
[86 112]
[87 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
