%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[170.25906372 884.55322266]
[157.07981873 877.36395264]
[144.68190002 868.89807129]
[133.18852234 859.23986816]
[122.71392059 848.48529053]
[113.36219788 836.74121094]
[105.22629547 824.12432861]
[98.38707733 810.76007080]
[92.91251373 796.78118896]
[88.85701752 782.32672119]
[86.26088715 767.54028320]
[85.14994049 752.56884766]
[85.53520203 737.56121826]
[87.41285706 722.66644287]
[90.76423645 708.03271484]
[95.55603027 693.80535889]
[101.74061584 680.12585449]
[109.25653076 667.13006592]
[118.02906799 654.94726562]
[127.97104645 643.69842529]
[138.98365784 633.49542236]
[150.95744324 624.43969727]
[163.77340698 616.62115479]
[177.30416870 610.11749268]
[191.41525269 604.99346924]
[205.96640015 601.29986572]
[203.74128723 586.46582031]
[201.51617432 571.63177490]
[199.29104614 556.79772949]
[197.06593323 541.96368408]
[194.84082031 527.12963867]
[192.17501831 512.36840820]
[189.07090759 497.69314575]
[185.96679688 483.01782227]
[182.86268616 468.34252930]
[179.75857544 453.66723633]
[176.54530334 439.01544189]
[173.22305298 424.38796997]
[169.90078735 409.76052856]
[154.13746643 410.30398560]
[138.56343079 407.78030396]
[123.76994324 402.28350830]
[110.31900787 394.02056885]
[98.72196198 383.30355835]
[89.42008209 370.53784180]
[82.76775360 356.20684814]
[79.01899719 340.85369873]
[78.31778717 325.06054688]
[80.69245148 309.42666626]
[86.05461884 294.54556274]
[94.20243835 280.98254395]
[104.82823181 269.25320435]
[117.53005219 259.80380249]
[131.82693481 252.99432373]
[128.07063293 238.47227478]
[124.31433868 223.95021057]
[120.55803680 209.42814636]
[116.80173492 194.90609741]
[103.87743378 187.59185791]
[99.86113739 172.91793823]
[107.62060547 159.41133118]
[103.86430359 144.88926697]
[100.10800171 130.36721802]
[96.35169983 115.84515381]
[86.69087219 109.34056854]
[83.85837555 98.04374695]
[89.30743408 87.75058746]
[85.76776123 73.17421722]
[82.11967468 58.62459564]
[78.36337280 44.10253525]
[74.60707092 29.58047676]
[70.85076904 15.05841732]
[59.90415955 3.63553071]
[64.20776367 -10.62379074]
[59.12155914 3.48756981]
[48.12261581 13.68675137]
[33.66813278 17.69522858]
[18.98727608 14.61750126]
[7.35978508 5.14113808]
[1.38327241 -8.61681557]
[2.39290619 -23.58279800]
[10.16313171 -36.41337204]
[22.95805931 -44.24215317]
[37.91927338 -45.32017136]
[51.70439529 -39.40659332]
[61.23380661 -27.82251167]
[59.89557266 -42.76269531]
[58.55733871 -57.70288086]
[57.21910477 -72.64306641]
[55.88087082 -87.58325195]
[46.94323349 -100.63810730]
[53.51420975 -114.00491333]
[38.69600677 -116.93706512]
[25.30476570 -123.92644501]
[14.42605591 -134.40644836]
[6.94176674 -147.52749634]
[3.45861387 -162.22593689]
[4.25896215 -177.31024170]
[9.27793026 -191.55758667]
[18.10865211 -203.81298828]
[30.03526306 -213.08297729]
[44.09092331 -218.61605835]
[59.13620758 -219.96371460]
[73.95145416 -217.01667786]
[87.33567047 -210.01385498]
[98.20384216 -199.52291870]
[105.67494965 -186.39436340]
[109.14333344 -171.69241333]
[108.32783508 -156.60893250]
[103.29455566 -142.36663818]
[94.45152283 -130.12011719]
[82.51560974 -120.86211395]
[68.45439148 -115.34314728]
[77.29631042 -103.35691833]
[70.82105255 -88.92148590]
[72.15928650 -73.98130035]
[73.49752045 -59.04111481]
[74.83575439 -44.10092926]
[76.17399597 -29.16074562]
[78.72982788 -14.38009167]
[89.40776062 -3.99592018]
[85.37282562 11.30211639]
[89.12912750 25.82417488]
[92.88542938 40.34623337]
[96.64173126 54.86829376]
[101.36008453 60.55678558]
[100.34413147 69.63454437]
[103.88380432 84.21091461]
[115.77153015 96.04553986]
[110.87375641 112.08885193]
[114.63005829 126.61091614]
[118.38636017 141.13298035]
[122.14266205 155.65502930]
[135.47804260 163.70521545]
[139.08059692 178.48616028]
[131.32379150 191.14979553]
[135.08009338 205.67184448]
[138.83639526 220.19390869]
[142.59269714 234.71597290]
[146.34899902 249.23802185]
[160.57412720 248.21946716]
[174.75480652 249.70216370]
[188.45471191 253.63923645]
[201.25254822 259.90832520]
[212.75497437 268.31536865]
[222.60871887 278.60058594]
[230.51141357 290.44659424]
[236.22088623 303.48806763]
[239.56254578 317.32315063]
[240.43476868 331.52575684]
[238.81196594 345.65866089]
[234.74530029 359.28707886]
[228.36116028 371.99188232]
[219.85713196 383.38262939]
[209.49594116 393.10946655]
[197.59735107 400.87399292]
[184.52824402 406.43826294]
[187.85050964 421.06573486]
[191.17277527 435.69317627]
[196.12515259 443.36859131]
[194.43388367 450.56311035]
[197.53799438 465.23843384]
[200.64210510 479.91372681]
[203.74621582 494.58901978]
[206.85032654 509.26431274]
[209.86572266 512.38867188]
[211.55969238 515.95166016]
[211.95660400 519.48406982]
[211.23069763 522.57269287]
[209.67486572 524.90454102]
[211.89997864 539.73858643]
[214.12509155 554.57263184]
[216.35021973 569.40667725]
[218.57533264 584.24072266]
[220.80044556 599.07476807]
[235.79489136 598.33648682]
[250.78834534 599.09484863]
[265.63177490 601.34228516]
[280.17767334 605.05657959]
[294.28146362 610.20068359]
[307.80294800 616.72351074]
[320.60778809 624.56030273]
[332.56866455 633.63311768]
[343.56677246 643.85174561]
[353.49273682 655.11468506]
[362.24795532 667.30993652]
[369.74536133 680.31640625]
[375.91049194 694.00469971]
[380.68206787 708.23883057]
[384.01263428 722.87731934]
[385.86907959 737.77471924]
[386.23300171 752.78295898]
[385.10076904 767.75280762]
[382.48364258 782.53552246]
[378.40759277 796.98419189]
[372.91314697 810.95526123]
[366.05493164 824.30975342]
[357.90109253 836.91503906]
[348.53268433 848.64587402]
[338.04278564 859.38555908]
[326.53570557 869.02740479]
[314.12576294 877.47558594]
[300.93627930 884.64611816]
[287.09841919 890.46777344]
[272.74963379 894.88269043]
[258.03259277 897.84698486]
[243.09352112 899.33111572]
[228.08090210 899.32043457]
[213.14395142 897.81506348]
[198.43113708 894.82983398]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 175]
[27 174]
[28 173]
[29 172]
[30 171]
[31 170]
[32 165]
[33 164]
[34 163]
[35 162]
[36 161]
[37 159]
[38 158]
[39 157]
[54 140]
[55 139]
[56 138]
[57 137]
[58 136]
[61 133]
[62 132]
[63 131]
[64 130]
[67 128]
[68 127]
[69 125]
[70 124]
[71 123]
[72 122]
[74 120]
[86 119]
[87 118]
[88 117]
[89 116]
[90 115]
[92 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
