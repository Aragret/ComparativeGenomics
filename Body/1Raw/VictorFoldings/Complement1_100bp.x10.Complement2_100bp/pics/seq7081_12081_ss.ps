%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[165.24130249 627.39624023]
[177.71833801 618.43975830]
[176.15782166 603.52117920]
[174.59729004 588.60253906]
[173.03677368 573.68395996]
[171.47624207 558.76531982]
[169.91572571 543.84674072]
[167.91171265 528.98120117]
[165.46598816 514.18194580]
[163.02026367 499.38265991]
[160.35446167 484.62145996]
[157.46919250 469.90155029]
[154.58392334 455.18167114]
[139.60334778 455.33233643]
[124.84625244 452.72698975]
[110.81547546 447.45285034]
[97.98937225 439.68817139]
[86.80551910 429.69619751]
[77.64579010 417.81607056]
[70.82328033 404.45150757]
[66.57166290 390.05703735]
[65.03713226 375.12243652]
[66.27341461 360.15618896]
[70.23986816 345.66812134]
[76.80281067 332.15203857]
[85.74005890 320.06890869]
[96.74840546 309.83111572]
[109.45394135 301.78836060]
[123.42474365 296.21585083]
[120.53946686 281.49597168]
[117.65419769 266.77609253]
[114.76892853 252.05618286]
[112.52040863 250.38217163]
[110.79950714 247.71664429]
[109.98720551 244.25605774]
[110.38638306 240.33111572]
[112.17755890 236.37565613]
[110.17354584 221.51013184]
[108.16953278 206.64460754]
[94.37190247 197.02877808]
[91.74627686 180.07528687]
[102.40005493 166.20025635]
[100.17493439 151.36621094]
[97.94982147 136.53216553]
[95.72470093 121.69812775]
[93.49958801 106.86408234]
[90.09673309 102.87227631]
[89.17264557 97.25806427]
[91.43589783 91.55590820]
[89.65343475 76.66218567]
[80.33106232 63.87922668]
[86.50114441 50.32270432]
[84.71868134 35.42898560]
[82.93621826 20.53526878]
[76.90625763 34.26988220]
[66.13262177 44.70677567]
[52.21351242 50.29770279]
[37.21374893 50.21327591]
[23.35845947 44.46602631]
[12.70298767 33.90851974]
[6.82801437 20.10689926]
[6.60505438 5.10855627]
[12.06718349 -8.86159515]
[22.40412712 -19.73116684]
[36.08246231 -25.88772392]
[51.07308578 -26.41797447]
[65.15222931 -21.24326134]
[76.23133850 -11.13122082]
[82.66641998 2.41623187]
[76.19116211 -12.01919842]
[85.03308105 -24.00543022]
[86.37131500 -38.94561386]
[87.70954895 -53.88579941]
[85.74353790 -57.75733185]
[85.16950226 -61.66053772]
[85.82646942 -65.15393066]
[87.42663574 -67.89365387]
[89.59815979 -69.66639709]
[91.82327271 -84.50044250]
[94.04839325 -99.33448792]
[96.27350616 -114.16853333]
[90.66894531 -128.96377563]
[100.20861816 -140.40248108]
[102.43373871 -155.23652649]
[87.94145966 -159.17230225]
[74.00409698 -164.76396179]
[60.81015015 -171.93586731]
[48.53804398 -180.59101868]
[37.35374069 -190.61239624]
[27.40850258 -201.86445618]
[18.83682632 -214.19502258]
[11.75463104 -227.43734741]
[6.25769711 -241.41232300]
[2.42036438 -255.93098450]
[0.29452851 -270.79696655]
[-0.09106132 -285.80923462]
[1.26880968 -300.76473999]
[4.35575056 -315.46124268]
[9.12801456 -329.69998169]
[15.52106190 -343.28842163]
[23.44843292 -356.04275513]
[32.80292130 -367.79052734]
[43.45801544 -378.37286377]
[55.26961899 -387.64660645]
[68.07799530 -395.48638916]
[81.70992279 -401.78616333]
[95.98104858 -406.46072388]
[110.69836426 -409.44686890]
[125.66284180 -410.70419312]
[140.67210388 -410.21572876]
[155.52316284 -407.98806763]
[170.01518250 -404.05133057]
[183.95216370 -398.45874023]
[197.14562988 -391.28594971]
[209.41716003 -382.62997437]
[220.60079956 -372.60784912]
[230.54528809 -361.35513306]
[239.11613464 -349.02398682]
[246.19744873 -335.78118896]
[251.69345093 -321.80584717]
[255.52981567 -307.28692627]
[257.65466309 -292.42080688]
[258.03924561 -277.40853882]
[256.67837524 -262.45312500]
[253.59045410 -247.75680542]
[248.81724548 -233.51837158]
[242.42329407 -219.93037415]
[234.49507141 -207.17655945]
[225.13980103 -195.42941284]
[214.48399353 -184.84780884]
[202.67176819 -175.57484436]
[189.86286926 -167.73591614]
[176.23052979 -161.43705750]
[161.95909119 -156.76344299]
[147.24157715 -153.77828979]
[132.27700806 -152.52194214]
[117.26778412 -153.01141357]
[115.04266357 -138.17736816]
[120.80638123 -124.44314575]
[111.10755157 -111.94341278]
[108.88243866 -97.10936737]
[106.65731812 -82.27532959]
[104.43220520 -67.44128418]
[102.64973450 -52.54756546]
[101.31150055 -37.60737991]
[99.97326660 -22.66719627]
[106.54424286 -9.30038738]
[97.60660553 3.75446606]
[97.82993317 18.75280380]
[99.61239624 33.64652252]
[101.39486694 48.54023743]
[110.58973694 60.25790024]
[104.54714966 74.87972260]
[106.32961273 89.77343750]
[108.33362579 104.63896942]
[110.55874634 119.47301483]
[112.78386688 134.30705261]
[115.00897980 149.14109802]
[117.23410034 163.97514343]
[128.91514587 170.68092346]
[134.51947021 182.71429443]
[132.20417786 195.58758545]
[123.03506470 204.64059448]
[125.03907776 219.50611877]
[127.04309082 234.37164307]
[129.48881531 249.17091370]
[132.37408447 263.89080811]
[135.25936890 278.61068726]
[138.14463806 293.33059692]
[153.18534851 293.21649170]
[167.98698425 295.86749268]
[182.04570007 301.19186401]
[194.88322449 309.00689697]
[206.06309509 319.04516602]
[215.20555115 330.96371460]
[222.00039673 344.35577393]
[226.21752930 358.76455688]
[227.71470642 373.69894409]
[226.44242859 388.65017700]
[222.44546509 403.10916138]
[215.86137390 416.58389282]
[206.91567993 428.61605835]
[195.91424561 438.79681396]
[183.23272705 446.78048706]
[169.30380249 452.29638672]
[172.18908691 467.01629639]
[175.07435608 481.73617554]
[179.12469482 486.96170044]
[179.82316589 492.60168457]
[177.81953430 496.93692017]
[180.26525879 511.73620605]
[182.71098328 526.53546143]
[185.58386230 529.79132080]
[187.11705017 533.42639160]
[187.35583496 536.97302246]
[186.49273682 540.02618408]
[184.83433533 542.28619385]
[186.39485168 557.20483398]
[187.95538330 572.12341309]
[189.51589966 587.04205322]
[191.07641602 601.96063232]
[192.63694763 616.87921143]
[206.69737244 623.05987549]
[215.77079773 635.45214844]
[217.41653442 650.72259521]
[211.19187927 664.76354980]
[198.77122498 673.79809570]
[183.49568176 675.39599609]
[169.47427368 669.12731934]
[160.47871399 656.67840576]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 202]
[3 201]
[4 200]
[5 199]
[6 198]
[7 197]
[8 192]
[9 191]
[10 190]
[11 187]
[12 186]
[13 185]
[29 169]
[30 168]
[31 167]
[32 166]
[37 165]
[38 164]
[39 163]
[42 159]
[43 158]
[44 157]
[45 156]
[46 155]
[49 154]
[50 153]
[52 151]
[53 150]
[54 149]
[69 148]
[71 146]
[72 145]
[73 144]
[78 143]
[79 142]
[80 141]
[81 140]
[83 138]
[84 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
