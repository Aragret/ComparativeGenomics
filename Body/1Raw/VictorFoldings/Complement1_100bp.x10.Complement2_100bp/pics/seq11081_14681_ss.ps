%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[89.32888794 878.48339844]
[74.52301025 876.03100586]
[59.95170593 872.43859863]
[45.70260239 867.72778320]
[31.86140060 861.92700195]
[18.51134300 855.07104492]
[5.73271704 847.20117188]
[-6.39762115 838.36468506]
[-17.80671883 828.61474609]
[-28.42595863 818.01007080]
[-38.19147491 806.61431885]
[-47.04453659 794.49603271]
[-54.93190002 781.72821045]
[-61.80612564 768.38757324]
[-67.62587738 754.55432129]
[-72.35614014 740.31164551]
[-75.96848297 725.74530029]
[-78.44116974 710.94281006]
[-79.75933075 695.99316406]
[-79.91504669 680.98638916]
[-78.90736389 666.01263428]
[-76.74236298 651.16198730]
[-73.43304443 636.52380371]
[-68.99932861 622.18609619]
[-63.46786880 608.23504639]
[-56.87193680 594.75463867]
[-49.25120163 581.82586670]
[-40.65149689 569.52655029]
[-31.12454224 557.93060303]
[-20.72763443 547.10784912]
[-9.52330112 537.12329102]
[2.42107129 528.03698730]
[15.03364658 519.90368652]
[28.23857117 512.77215576]
[41.95642853 506.68539429]
[56.10471344 501.67999268]
[70.59834290 497.78601074]
[85.35014343 495.02688599]
[100.27139282 493.41921997]
[99.82478333 478.42587280]
[99.37818146 463.43252563]
[98.93157196 448.43917847]
[98.48497009 433.44583130]
[97.48070526 418.47946167]
[95.92018890 403.56088257]
[94.35966492 388.64227295]
[92.79914093 373.72366333]
[91.23861694 358.80505371]
[82.04222107 350.94674683]
[80.62002563 338.53057861]
[88.27632904 328.15060425]
[86.93809509 313.21041870]
[85.59986115 298.27023315]
[77.36946869 310.81060791]
[63.70943451 317.00765991]
[48.85246277 314.94116211]
[37.40214920 305.25146484]
[32.90649414 290.94100952]
[36.75852966 276.44406128]
[47.76465988 266.25265503]
[62.51451492 263.52468872]
[76.43769073 269.10546875]
[85.22002411 281.26596069]
[85.88981628 266.28091431]
[75.68030548 255.49661255]
[76.14609528 240.29011536]
[87.52690125 229.65455627]
[88.19668579 214.66952515]
[88.86647034 199.68447876]
[89.53625488 184.69944763]
[90.20603943 169.71440125]
[81.29142761 154.59829712]
[91.33018494 139.16117859]
[91.77678680 124.16782379]
[92.22339630 109.17447662]
[92.44672394 94.17613983]
[92.44672394 79.17613983]
[92.44672394 64.17613983]
[92.44672394 49.17613602]
[92.44672394 34.17613602]
[84.70941925 20.37596512]
[92.44672394 7.64869261]
[81.55216980 -3.48443198]
[81.76584625 -18.69656563]
[92.44672394 -29.01424599]
[84.70941925 -42.81441879]
[92.44672394 -55.54169083]
[92.44672394 -70.54169464]
[92.44672394 -85.54169464]
[81.88964844 -93.90606689]
[78.13237762 -106.63765717]
[82.33169556 -119.02506256]
[92.74229431 -126.61774445]
[92.96562195 -141.61608887]
[93.18894958 -156.61442566]
[93.30062103 -171.61401367]
[93.30062103 -186.61401367]
[93.30062103 -201.61401367]
[79.24343109 -207.39880371]
[68.47355652 -218.12626648]
[62.63332748 -232.16050720]
[62.61333084 -247.36143494]
[68.41661835 -261.41101074]
[79.15823364 -272.16674805]
[93.20014954 -277.98852539]
[108.40108490 -277.98852539]
[122.44300842 -272.16674805]
[133.18461609 -261.41101074]
[138.98789978 -247.36143494]
[138.96791077 -232.16050720]
[133.12768555 -218.12626648]
[122.35780334 -207.39880371]
[108.30062103 -201.61401367]
[108.30062103 -186.61401367]
[108.30062103 -171.61401367]
[111.44412231 -164.92520142]
[108.18729401 -156.39109802]
[107.96395874 -141.39276123]
[107.74063110 -126.39441681]
[119.95919037 -114.83822632]
[120.04087067 -97.68280792]
[107.44672394 -85.54169464]
[107.44672394 -70.54169464]
[107.44672394 -55.54169083]
[115.18402100 -42.81441879]
[107.44672394 -29.01424599]
[118.12759399 -18.69656563]
[118.34127808 -3.48443198]
[107.44672394 7.64869261]
[115.18402100 20.37596512]
[107.44672394 34.17613602]
[107.44672394 49.17613602]
[107.44672394 64.17613983]
[107.44672394 79.17613983]
[107.44672394 94.17613983]
[110.21977997 98.62856293]
[110.30082703 104.31774139]
[107.21674347 109.62107849]
[106.77014160 124.61443329]
[106.32353210 139.60777283]
[114.58408356 149.51364136]
[113.90343475 161.99244690]
[105.19107819 170.38418579]
[104.52129364 185.36923218]
[103.85150909 200.35426331]
[103.18172455 215.33930969]
[102.51194000 230.32434082]
[112.89850616 241.93283081]
[112.00578308 257.12023926]
[100.87485504 266.95071411]
[100.20507050 281.93576050]
[100.54003906 296.93200684]
[101.87828064 311.87219238]
[103.21651459 326.81237793]
[114.15630341 341.62463379]
[106.15721893 357.24453735]
[107.71774292 372.16314697]
[109.27826691 387.08175659]
[110.83879089 402.00033569]
[112.39931488 416.91894531]
[123.72871399 407.08813477]
[138.50552368 409.66607666]
[145.83683777 422.75241089]
[140.31828308 436.70037842]
[126.01792145 441.22802734]
[113.47831726 432.99920654]
[113.92492676 447.99255371]
[114.37152863 462.98590088]
[114.81813812 477.97924805]
[115.26473999 492.97262573]
[130.25523376 493.68930054]
[145.14509583 495.56549072]
[159.84480286 498.58987427]
[174.26593018 502.74432373]
[188.32176208 508.00378418]
[201.92774963 514.33666992]
[215.00205994 521.70489502]
[227.46607971 530.06408691]
[239.24484253 539.36407471]
[250.26750183 549.54882812]
[260.46777344 560.55712891]
[269.78430176 572.32275391]
[278.16104126 584.77502441]
[285.54766846 597.83892822]
[291.89968872 611.43603516]
[297.17895508 625.48443604]
[301.35366821 639.89965820]
[304.39877319 654.59509277]
[306.29589844 669.48236084]
[307.03369141 684.47180176]
[306.60769653 699.47332764]
[305.02044678 714.39678955]
[302.28152466 729.15234375]
[298.40737915 743.65130615]
[293.42132568 757.80639648]
[287.35333252 771.53259277]
[280.23989868 784.74725342]
[272.12380981 797.37097168]
[263.05389404 809.32775879]
[253.08470154 820.54571533]
[242.27615356 830.95745850]
[230.69328308 840.50024414]
[218.40573120 849.11676025]
[205.48741150 856.75518799]
[192.01602173 863.36956787]
[178.07257080 868.92010498]
[163.74093628 873.37347412]
[149.10728455 876.70281982]
[134.25962830 878.88812256]
[119.28728485 879.91632080]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 170]
[40 169]
[41 168]
[42 167]
[43 166]
[44 160]
[45 159]
[46 158]
[47 157]
[48 156]
[51 154]
[52 153]
[53 152]
[63 151]
[64 150]
[67 147]
[68 146]
[69 145]
[70 144]
[71 143]
[73 140]
[74 139]
[75 138]
[76 135]
[77 134]
[78 133]
[79 132]
[80 131]
[82 129]
[85 126]
[87 124]
[88 123]
[89 122]
[93 119]
[94 118]
[95 117]
[96 115]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
