%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[104.53457642 719.81945801]
[89.96036530 716.25183105]
[75.62560272 711.81903076]
[61.58160019 706.53680420]
[47.87863159 700.42419434]
[34.56575394 693.50299072]
[21.69061852 685.79803467]
[9.29931927 677.33691406]
[-2.56378770 668.14984131]
[-13.85623455 658.26971436]
[-24.53759575 647.73199463]
[-34.56963730 636.57434082]
[-43.91644669 624.83666992]
[-52.54456329 612.56103516]
[-60.42309952 599.79138184]
[-67.52384949 586.57336426]
[-73.82140350 572.95440674]
[-79.29321289 558.98321533]
[-83.91968536 544.70977783]
[-87.68426514 530.18518066]
[-90.57347107 515.46142578]
[-92.57697296 500.59130859]
[-93.68757629 485.62792969]
[-93.90132904 470.62493896]
[-93.21745300 455.63601685]
[-91.63838959 440.71481323]
[-89.16980743 425.91476440]
[-85.82054138 411.28884888]
[-81.60256958 396.88937378]
[-76.53099823 382.76797485]
[-70.62398529 368.97509766]
[-63.90266800 355.56021118]
[-56.39111328 342.57128906]
[-48.11621475 330.05484009]
[-39.10758591 318.05566406]
[-29.39747810 306.61672974]
[-19.02065277 295.77896118]
[-8.01425648 285.58117676]
[3.58231139 276.05990601]
[15.72753811 267.24914551]
[28.37794495 259.18054199]
[41.48824692 251.88290405]
[55.01151657 245.38238525]
[68.89933777 239.70223999]
[83.10199738 234.86283875]
[97.56865692 230.88145447]
[112.24752808 227.77238464]
[110.02240753 212.93833923]
[107.79728699 198.10429382]
[105.57217407 183.27024841]
[103.34705353 168.43620300]
[101.12194061 153.60215759]
[98.78645325 138.78509521]
[96.34072113 123.98582458]
[93.89499664 109.18655396]
[83.17082214 119.67426300]
[68.26676941 117.98042297]
[60.16954422 105.35366821]
[64.84812164 91.10197449]
[78.85363007 85.73115540]
[91.86079407 93.19902039]
[90.52255249 78.25884247]
[89.18431854 63.31865311]
[87.84608459 48.37846756]
[86.50785065 33.43828583]
[71.78365326 30.02428818]
[58.85310745 22.23689270]
[48.97605896 10.84952164]
[43.11028290 -3.01437902]
[41.81864929 -17.99217224]
[45.21511459 -32.61595154]
[52.95479202 -45.45641708]
[64.26893616 -55.26255417]
[78.04126740 -61.08352280]
[76.70303345 -76.02371216]
[75.36479950 -90.96389771]
[74.02656555 -105.90407562]
[59.01541519 -106.37594604]
[44.17059708 -108.65381622]
[29.70858955 -112.70446014]
[15.84029388 -118.46881104]
[2.76795197 -125.86280823]
[-9.31780434 -134.77862549]
[-20.24072838 -145.08625793]
[-29.84153175 -156.63536072]
[-37.98020935 -169.25753784]
[-44.53807068 -182.76870728]
[-49.41948318 -196.97184753]
[-52.55326843 -211.65983582]
[-53.89371872 -226.61845398]
[-53.42128754 -241.62959290]
[-51.14286804 -256.47433472]
[-47.09168243 -270.93618774]
[-41.32680893 -284.80426025]
[-33.93232346 -297.87634277]
[-25.01604843 -309.96176147]
[-14.70801830 -320.88427734]
[-3.15855026 -330.48464966]
[9.46392918 -338.62286377]
[22.97534752 -345.18023682]
[37.17866898 -350.06109619]
[51.86676788 -353.19433594]
[66.82544708 -354.53424072]
[81.83656311 -354.06124878]
[96.68121338 -351.78225708]
[111.14291382 -347.73052979]
[125.01078033 -341.96514893]
[138.08256531 -334.57015991]
[150.16766357 -325.65344238]
[161.08981323 -315.34500122]
[170.68975830 -303.79516602]
[178.82748413 -291.17239380]
[185.38433838 -277.66073608]
[190.26469421 -263.45721436]
[193.39736938 -248.76901245]
[194.73670959 -233.81028748]
[194.26315308 -218.79917908]
[191.98362732 -203.95462036]
[187.93135071 -189.49307251]
[182.16545105 -175.62542725]
[174.76997375 -162.55390930]
[165.85279846 -150.46914673]
[155.54396057 -139.54737854]
[143.99377441 -129.94787598]
[131.37068176 -121.81061554]
[117.85877228 -115.25427246]
[103.65508270 -110.37445068]
[88.96675110 -107.24230957]
[90.30498505 -92.30213165]
[91.64321899 -77.36194611]
[92.98145294 -62.42175674]
[107.56905365 -59.14106369]
[120.44583130 -51.50177765]
[130.34431458 -40.24121094]
[136.28564453 -26.45384407]
[137.67640686 -11.48493195]
[134.36790466 3.20073533]
[126.67184448 16.16217804]
[115.33111572 26.12362099]
[101.44803619 32.10004807]
[102.78627014 47.04023361]
[104.12450409 61.98041916]
[105.46273804 76.92060852]
[106.80097198 91.86078644]
[108.69426727 106.74082184]
[111.13999176 121.54009247]
[113.58572388 136.33937073]
[118.07247925 144.29592896]
[115.95598602 151.37704468]
[118.18109894 166.21109009]
[120.40621948 181.04513550]
[122.63133240 195.87918091]
[124.85645294 210.71322632]
[127.08156586 225.54725647]
[142.02662659 224.21273804]
[157.02473450 223.77436829]
[172.02221680 224.23374939]
[186.96537781 225.58920288]
[201.80073547 227.83590698]
[216.47517395 230.96582031]
[230.93617249 234.96771240]
[245.13195801 239.82727051]
[259.01168823 245.52709961]
[272.52572632 252.04679871]
[285.62567139 259.36303711]
[298.26461792 267.44961548]
[310.39733887 276.27755737]
[321.98037720 285.81530762]
[332.97229004 296.02868652]
[343.33374023 306.88116455]
[353.02758789 318.33386230]
[362.01919556 330.34579468]
[370.27633667 342.87399292]
[377.76943970 355.87356567]
[384.47171021 369.29797363]
[390.35916138 383.09918213]
[395.41067505 397.22778320]
[399.60821533 411.63320923]
[402.93673706 426.26388550]
[405.38430786 441.06744385]
[406.94219971 455.99084473]
[407.60479736 470.98074341]
[407.36978149 485.98339844]
[406.23794556 500.94515991]
[404.21334839 515.81250000]
[401.30325317 530.53210449]
[397.51806641 545.05133057]
[392.87133789 559.31817627]
[387.37969971 573.28161621]
[381.06283569 586.89160156]
[373.94332886 600.09948730]
[366.04669189 612.85797119]
[357.40118408 625.12133789]
[348.03771973 636.84576416]
[337.98986816 647.98919678]
[327.29354858 658.51177979]
[315.98709106 668.37579346]
[304.11096191 677.54602051]
[291.70767212 685.98962402]
[278.82162476 693.67626953]
[265.49893188 700.57855225]
[251.78730774 706.67175293]
[237.73582458 711.93402100]
[223.39479065 716.34649658]
[208.81553650 719.89343262]
[194.05024719 722.56213379]
[179.15179443 724.34301758]
[164.17350769 725.22973633]
[149.16899109 725.21911621]
[134.19197083 724.31115723]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 154]
[48 153]
[49 152]
[50 151]
[51 150]
[52 149]
[53 147]
[54 146]
[55 145]
[61 144]
[62 143]
[63 142]
[64 141]
[65 140]
[74 131]
[75 130]
[76 129]
[77 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
