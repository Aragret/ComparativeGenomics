%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAAxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[87.06980896 742.00683594]
[72.11531067 740.80322266]
[57.23502350 738.88946533]
[42.46265411 736.26977539]
[27.83166313 732.95019531]
[13.37519836 728.93817139]
[-0.87399334 724.24285889]
[-14.88363266 718.87481689]
[-28.62198257 712.84631348]
[-42.05792236 706.17089844]
[-55.16101074 698.86370850]
[-67.90157318 690.94134521]
[-80.25074005 682.42175293]
[-92.18054199 673.32421875]
[-103.66395569 663.66931152]
[-114.67495728 653.47894287]
[-125.18861389 642.77624512]
[-135.18109131 631.58532715]
[-144.62979126 619.93170166]
[-153.51325989 607.84161377]
[-161.81141663 595.34259033]
[-169.50543213 582.46282959]
[-176.57789612 569.23156738]
[-183.01277161 555.67883301]
[-188.79550171 541.83520508]
[-193.91296387 527.73211670]
[-198.35359192 513.40148926]
[-202.10729980 498.87582397]
[-205.16560364 484.18798828]
[-207.52156067 469.37127686]
[-209.16983032 454.45922852]
[-210.10670471 439.48565674]
[-210.33004761 424.48446655]
[-209.83934021 409.48965454]
[-208.63571167 394.53515625]
[-206.72187805 379.65487671]
[-204.10217285 364.88250732]
[-200.78254700 350.25152588]
[-196.77050781 335.79507446]
[-192.07514954 321.54586792]
[-186.70709229 307.53625488]
[-180.67852783 293.79791260]
[-174.00308228 280.36199951]
[-166.69589233 267.25891113]
[-158.77349854 254.51837158]
[-150.25387573 242.16921997]
[-141.15629578 230.23944092]
[-131.50137329 218.75605774]
[-121.31099701 207.74507141]
[-110.60823059 197.23144531]
[-99.41732788 187.23898315]
[-87.76364136 177.79032898]
[-75.67356873 168.90687561]
[-63.17449951 160.60874939]
[-50.29474258 152.91476440]
[-37.06348038 145.84233093]
[-23.51068497 139.40747070]
[-9.66705704 133.62478638]
[4.43604326 128.50735474]
[18.76666641 124.06675720]
[33.29235077 120.31307983]
[47.98019028 117.25481415]
[62.79690933 114.89889526]
[77.70894623 113.25064850]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[92.09580994 72.91117859]
[91.87248230 57.91284180]
[91.64915466 42.91450500]
[91.42582703 27.91616821]
[76.45881653 26.77436256]
[61.65764236 24.27625084]
[47.14496231 20.44253349]
[33.04103470 15.30497742]
[19.46273232 8.90615654]
[6.52256823 1.29909408]
[-5.67222691 -7.45317459]
[-17.02060127 -17.27812386]
[-27.42851830 -28.09433937]
[-36.80973053 -39.81219101]
[-45.08650208 -52.33458328]
[-52.19025040 -65.55774689]
[-58.06210327 -79.37210846]
[-62.65341187 -93.66319275]
[-65.92612457 -108.31258392]
[-67.85312653 -123.19888306]
[-68.41844177 -138.19873047]
[-67.61739349 -153.18785095]
[-65.45661926 -168.04202271]
[-61.95401764 -182.63815308]
[-57.13862228 -196.85530090]
[-51.05033112 -210.57563782]
[-43.73958969 -223.68550110]
[-35.26698685 -236.07623291]
[-25.70272827 -247.64515686]
[-15.12606525 -258.29641724]
[-3.62464356 -267.94177246]
[8.70623207 -276.50125122]
[21.76438141 -283.90396118]
[35.44159698 -290.08853149]
[49.62454605 -295.00372314]
[64.19569397 -298.60882568]
[79.03430939 -300.87396240]
[94.01742554 -301.78033447]
[109.02088165 -301.32046509]
[123.92035675 -299.49813843]
[138.59239197 -296.32849121]
[152.91539001 -291.83773804]
[166.77067566 -286.06311035]
[180.04344177 -279.05249023]
[192.62370300 -270.86392212]
[204.40721130 -261.56530762]
[215.29631042 -251.23367310]
[225.20077515 -239.95463562]
[234.03854370 -227.82165527]
[241.73637390 -214.93528748]
[248.23046875 -201.40229797]
[253.46702576 -187.33482361]
[257.40264893 -172.84944153]
[260.00473022 -158.06619263]
[261.25170898 -143.10757446]
[261.13323975 -128.09754944]
[259.65032959 -113.16046906]
[256.81521606 -98.42013550]
[252.65145874 -83.99868011]
[247.19351196 -70.01561737]
[240.48661804 -56.58681488]
[232.58634949 -43.82354355]
[223.55818176 -31.83157349]
[213.47691345 -20.71026993]
[202.42610168 -10.55179310]
[190.49729919 -1.44032001]
[177.78935242 6.54864740]
[164.40759277 13.34890842]
[150.46287537 18.90411186]
[136.07078552 23.16822624]
[121.35054779 26.10591698]
[106.42416382 27.69284058]
[106.64749146 42.69117737]
[106.87081909 57.68951416]
[107.09414673 72.68785095]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[122.67568970 112.58108521]
[137.63018799 113.78461456]
[152.51048279 115.69834137]
[167.28286743 118.31793976]
[181.91387939 121.63747406]
[196.37036133 125.64941406]
[210.61956787 130.34468079]
[224.62924194 135.71263123]
[238.36761475 141.74111938]
[251.80358887 148.41647339]
[264.90670776 155.72357178]
[277.64730835 163.64585876]
[289.99652100 172.16540527]
[301.92636108 181.26290894]
[313.40982056 190.91773987]
[324.42086792 201.10806274]
[334.93457031 211.81074524]
[344.92709351 223.00158691]
[354.37582397 234.65521240]
[363.25936890 246.74522400]
[371.55758667 259.24423218]
[379.25164795 272.12393188]
[386.32418823 285.35516357]
[392.75912476 298.90789795]
[398.54190063 312.75149536]
[403.65942383 326.85455322]
[408.10012817 341.18515015]
[411.85391235 355.71081543]
[414.91226196 370.39862061]
[417.26828003 385.21533203]
[418.91662598 400.12734985]
[419.85357666 415.10092163]
[420.07696533 430.10211182]
[419.58633423 445.09695435]
[418.38278198 460.05145264]
[416.46902466 474.93173218]
[413.84939575 489.70410156]
[410.52981567 504.33511353]
[406.51785278 518.79156494]
[401.82254028 533.04077148]
[396.45455933 547.05041504]
[390.42605591 560.78881836]
[383.75067139 574.22473145]
[376.44354248 587.32788086]
[368.52120972 600.06842041]
[360.00164795 612.41760254]
[350.90411377 624.34747314]
[341.24923706 635.83087158]
[331.05892944 646.84191895]
[320.35620117 657.35559082]
[309.16534424 667.34808350]
[297.51168823 676.79681396]
[285.42166138 685.68029785]
[272.92263794 693.97851562]
[260.04290771 701.67254639]
[246.81167603 708.74505615]
[233.25891113 715.17993164]
[219.41531372 720.96270752]
[205.31222534 726.08020020]
[190.98162842 730.52087402]
[176.45596313 734.27459717]
[161.76814270 737.33294678]
[146.95143127 739.68890381]
[132.03939819 741.33721924]
[117.06582642 742.27416992]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 145]
[67 143]
[68 142]
[69 141]
[70 140]
[71 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
