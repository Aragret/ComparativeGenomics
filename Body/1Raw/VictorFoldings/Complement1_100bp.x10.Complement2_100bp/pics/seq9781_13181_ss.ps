%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[100.96408081 744.18920898]
[87.21170044 738.17028809]
[74.10443115 730.85217285]
[61.76467133 722.30316162]
[50.30762482 712.60308838]
[39.84027100 701.84246826]
[30.46034241 690.12188721]
[22.25541687 677.55072021]
[15.30210590 664.24627686]
[9.66533184 650.33288574]
[5.39772367 635.94042969]
[2.53912878 621.20330811]
[1.11623788 606.25903320]
[1.14233625 591.24719238]
[2.61718035 576.30798340]
[5.52699947 561.58087158]
[9.84462452 547.20330811]
[15.52974319 533.30963135]
[22.52927208 520.02947998]
[30.77785683 507.48687744]
[40.19848251 495.79898071]
[50.70318985 485.07485962]
[62.19389343 475.41467285]
[74.56330872 466.90859985]
[87.69593811 459.63607788]
[101.46916962 453.66500854]
[115.75439453 449.05114746]
[130.41824341 445.83755493]
[128.63577271 430.94384766]
[126.85330963 416.05010986]
[125.07083893 401.15640259]
[123.28837585 386.26269531]
[120.75745392 383.80773926]
[119.28986359 380.00494385]
[119.50614929 375.36743164]
[121.77422333 370.66607666]
[120.65856934 355.70761108]
[119.54292297 340.74914551]
[103.10540009 331.85528564]
[95.28710938 314.71463013]
[99.41198730 296.17831421]
[113.98992157 283.77590942]
[112.20745850 268.88220215]
[103.01258087 257.16452026]
[109.05516815 242.54270935]
[107.27270508 227.64898682]
[105.49024200 212.75527954]
[103.70777130 197.86155701]
[101.92530823 182.96783447]
[100.14284515 168.07412720]
[98.36037445 153.18040466]
[96.57791138 138.28668213]
[92.66184235 132.01881409]
[94.88148499 123.15817261]
[93.32096100 108.23956299]
[90.98547363 93.42249298]
[87.88136292 78.74719238]
[84.77725220 64.07189178]
[74.35162354 52.17160797]
[79.28764343 38.11867523]
[76.18353271 23.44337082]
[73.07942200 8.76806927]
[67.36818695 22.63824463]
[55.92479706 32.33612442]
[41.30574417 35.69517899]
[26.77695656 31.96498489]
[15.58420372 21.97887802]
[10.22797775 7.96778154]
[11.90487003 -6.93819141]
[20.24026108 -19.40900803]
[33.37200165 -26.65865707]
[48.36642838 -27.06754494]
[61.87374496 -20.54433060]
[70.87639618 -8.54629135]
[67.36692047 -16.97964096]
[70.30987549 -23.75908089]
[69.86326599 -38.75242996]
[69.41666412 -53.74578094]
[68.97005463 -68.73912811]
[68.52345276 -83.73248291]
[57.47586060 -73.58601379]
[42.48417664 -74.08541107]
[32.13631439 -84.94458771]
[32.36000061 -99.94292450]
[43.02709961 -110.48867798]
[58.02700806 -110.54077911]
[68.76672363 -100.07023621]
[69.65953827 -115.04364777]
[62.75735474 -129.27987671]
[71.23847961 -141.52406311]
[72.13129425 -156.49746704]
[73.02410889 -171.47087097]
[58.46358871 -175.27580261]
[44.92528534 -181.84851074]
[32.92956924 -190.93635559]
[22.93752480 -202.19003296]
[15.33322334 -215.17698669]
[10.40895176 -229.39801025]
[8.35398674 -244.30651855]
[9.24731541 -259.32943726]
[13.05459976 -273.88934326]
[19.62949944 -287.42657471]
[28.71928978 -299.42083740]
[39.97458649 -309.41104126]
[52.96276474 -317.01324463]
[67.18459320 -321.93521118]
[82.09342957 -323.98776245]
[97.11620331 -323.09201050]
[111.67549133 -319.28237915]
[125.21166992 -312.70529175]
[137.20445251 -303.61355591]
[147.19284058 -292.35662842]
[154.79293823 -279.36721802]
[159.71261597 -265.14459229]
[161.76274109 -250.23542786]
[160.86456299 -235.21279907]
[157.05256653 -220.65412903]
[150.47328186 -207.11901855]
[141.37960815 -195.12771606]
[130.12107849 -185.14114380]
[117.13043213 -177.54313660]
[102.90701294 -172.62577820]
[87.99752045 -170.57804871]
[87.10469818 -155.60464478]
[86.21188354 -140.63124084]
[93.17792511 -127.46600342]
[84.63294220 -114.15082550]
[83.74012756 -99.17742157]
[83.51679993 -84.17908478]
[83.96340942 -69.18573761]
[84.41001129 -54.19238663]
[84.85662079 -39.19903564]
[85.30322266 -24.20568657]
[85.86143494 -9.21607590]
[87.75473022 5.66395903]
[90.85883331 20.33926201]
[93.96294403 35.01456451]
[104.16654968 45.86517334]
[99.45255280 60.96778107]
[102.55666351 75.64308167]
[105.66077423 90.31838989]
[113.76913452 77.69877625]
[128.05436707 73.12362671]
[141.98545837 78.68461609]
[149.19329834 91.83935547]
[146.38256836 106.57366180]
[134.83828735 116.15120697]
[119.83834076 116.19327545]
[108.23956299 106.67903900]
[109.80008698 121.59764862]
[111.47162628 136.50422668]
[113.25409698 151.39793396]
[115.03656006 166.29165649]
[116.81902313 181.18537903]
[118.60149384 196.07908630]
[120.38395691 210.97280884]
[122.16641998 225.86653137]
[123.94889069 240.76023865]
[133.27125549 253.54319763]
[127.10117340 267.09973145]
[128.88363647 281.99343872]
[139.71243286 285.75531006]
[148.31652832 293.25262451]
[153.47808838 303.37341309]
[154.48551941 314.63812256]
[151.23141479 325.41595459]
[144.22254944 334.16088867]
[134.50137329 339.63351440]
[135.61701965 354.59194946]
[136.73268127 369.55041504]
[138.18209839 384.48022461]
[139.96455383 399.37393188]
[141.74702454 414.26766968]
[143.52949524 429.16137695]
[145.31195068 444.05508423]
[160.32000732 443.71759033]
[175.29057312 444.83013916]
[190.08386230 447.38238525]
[204.56176758 451.35052490]
[218.58909607 456.69744873]
[232.03486633 463.37326050]
[244.77355957 471.31561279]
[256.68621826 480.45037842]
[267.66162109 490.69226074]
[277.59732056 501.94561768]
[286.40048218 514.10534668]
[293.98895264 527.05798340]
[300.29187012 540.68255615]
[305.25039673 554.85186768]
[308.81823730 569.43353271]
[310.96203613 584.29150391]
[311.66183472 599.28704834]
[310.91104126 614.28009033]
[308.71670532 629.13073730]
[305.09933472 643.70019531]
[300.09265137 657.85253906]
[293.74343872 671.45556641]
[286.11096191 684.38232422]
[277.26647949 696.51208496]
[267.29260254 707.73156738]
[256.28240967 717.93609619]
[244.33876038 727.03027344]
[231.57313538 734.92926025]
[218.10472107 741.55932617]
[204.05929565 746.85852051]
[189.56797791 750.77740479]
[174.76609802 753.27929688]
[159.79183960 754.34094238]
[144.78501892 753.95239258]
[129.88577271 752.11730957]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 175]
[29 174]
[30 173]
[31 172]
[32 171]
[36 170]
[37 169]
[38 168]
[42 161]
[43 160]
[45 158]
[46 157]
[47 156]
[48 155]
[49 154]
[50 153]
[51 152]
[52 151]
[54 150]
[55 149]
[56 141]
[57 140]
[58 139]
[60 137]
[61 136]
[62 135]
[74 134]
[76 133]
[77 132]
[78 131]
[79 130]
[80 129]
[87 128]
[88 127]
[90 125]
[91 124]
[92 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
