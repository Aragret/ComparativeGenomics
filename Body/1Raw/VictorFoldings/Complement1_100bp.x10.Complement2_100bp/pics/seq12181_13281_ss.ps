%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUGxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[142.84524536 365.67810059]
[151.79951477 353.60467529]
[162.53233337 343.08074951]
[174.77938843 334.36544800]
[168.09919739 320.93508911]
[161.41900635 307.50469971]
[154.73881531 294.07434082]
[148.05860901 280.64395142]
[136.69445801 276.49877930]
[131.01916504 265.36437988]
[134.56109619 252.96206665]
[128.08160400 239.43373108]
[126.79113770 254.37811279]
[119.94822693 267.72631836]
[108.56797791 277.49819946]
[94.33858490 282.24420166]
[79.37089539 281.26022339]
[65.88526917 274.69229126]
[55.88222504 263.51464844]
[50.84565735 249.38551331]
[51.52270508 234.40080261]
[57.81293488 220.78341675]
[68.78323364 210.55343628]
[82.80621338 205.22839355]
[97.80165100 205.59823608]
[111.54506683 211.60810852]
[121.99665833 222.36486816]
[118.45698547 207.78849792]
[114.91731262 193.21211243]
[111.37763977 178.63574219]
[107.83796692 164.05937195]
[104.29829407 149.48298645]
[100.75862122 134.90661621]
[90.23648071 124.36461639]
[94.49872589 109.12834930]
[89.67272949 94.92589569]
[83.59889221 81.21063232]
[77.52506256 67.49536133]
[71.45122528 53.78009796]
[65.37739563 40.06483078]
[59.30355835 26.34956360]
[53.22972488 12.63429642]
[46.89344788 6.05482817]
[47.16925430 -1.33067954]
[41.30029297 -15.13485622]
[35.43133163 -28.93903351]
[29.56237030 -42.74320984]
[23.69340897 -56.54738617]
[17.82444763 -70.35156250]
[10.94503593 -83.68099213]
[3.09328055 -96.46183777]
[-10.72303963 -104.17026520]
[-10.79251957 -119.06470490]
[-18.64427567 -131.84555054]
[-26.49603081 -144.62638855]
[-34.34778595 -157.40724182]
[-42.19954300 -170.18807983]
[-55.73181152 -163.68563843]
[-69.86095428 -158.60910034]
[-84.43719482 -155.01223755]
[-99.30600739 -152.93322754]
[-114.30979156 -152.39407349]
[-129.28947449 -153.40051270]
[-144.08628845 -155.94186401]
[-158.54336548 -159.99118042]
[-172.50744629 -165.50555420]
[-185.83052063 -172.42652893]
[-198.37133789 -180.68072510]
[-209.99697876 -190.18064880]
[-220.58419800 -200.82559204]
[-230.02075195 -212.50273132]
[-238.20661926 -225.08825684]
[-245.05502319 -238.44877625]
[-250.49336243 -252.44264221]
[-254.46400452 -266.92153931]
[-256.92483521 -281.73193359]
[-257.84979248 -296.71688843]
[-257.22903442 -311.71749878]
[-255.06918335 -326.57479858]
[-251.39311218 -341.13125610]
[-246.23979187 -355.23257446]
[-239.66384888 -368.72927856]
[-231.73500061 -381.47830200]
[-222.53729248 -393.34448242]
[-212.16821289 -404.20202637]
[-200.73770142 -413.93585205]
[-188.36692810 -422.44277954]
[-175.18701172 -429.63262939]
[-161.33766174 -435.42916870]
[-146.96571350 -439.77096558]
[-132.22351074 -442.61196899]
[-117.26732635 -443.92211914]
[-102.25569916 -443.68746948]
[-87.34776306 -441.91052246]
[-72.70155334 -438.61013794]
[-58.47232437 -433.82128906]
[-44.81091690 -427.59472656]
[-31.86215210 -419.99645996]
[-19.76329041 -411.10705566]
[-8.64258575 -401.02075195]
[1.38207471 -389.84442139]
[10.20442390 -377.69656372]
[17.73093987 -364.70596313]
[23.88183784 -351.01034546]
[28.59191322 -336.75485229]
[31.81123924 -322.09060669]
[33.50568771 -307.17306519]
[33.65729904 -292.16036987]
[32.26446152 -277.21163940]
[29.34193993 -262.48538208]
[24.92071915 -248.13768005]
[19.04766464 -234.32060242]
[11.78503418 -221.18066406]
[3.20981526 -208.85711670]
[-6.58709002 -197.48062134]
[-17.50182915 -187.17176819]
[-29.41869926 -178.03984070]
[-21.56694412 -165.25898743]
[-13.71518803 -152.47814941]
[-5.86343288 -139.69731140]
[1.98832262 -126.91646576]
[15.24303246 -120.12220764]
[15.87412262 -104.31359100]
[23.72587776 -91.53274536]
[24.92624474 -106.48464203]
[33.36018753 -118.88902283]
[46.82309341 -125.50341034]
[61.79579163 -124.59882355]
[74.36445618 -116.41172028]
[81.24366760 -103.08219147]
[80.63521576 -88.09453583]
[72.69815063 -75.36649323]
[59.50719833 -68.22515106]
[44.51044464 -68.53723145]
[31.62862587 -76.22052765]
[37.49758530 -62.41634750]
[43.36654663 -48.61217117]
[49.23550797 -34.80799484]
[55.10446930 -21.00381660]
[60.97343063 -7.19964027]
[66.94499207 6.56046295]
[73.01882935 20.27573013]
[79.09265900 33.99099731]
[85.16649628 47.70626450]
[91.24032593 61.42152786]
[97.31416321 75.13679504]
[103.38799286 88.85206604]
[105.71625519 74.03385925]
[114.17195892 61.64430618]
[127.12245178 54.07563400]
[142.06718445 52.78923416]
[156.12057495 58.03349304]
[166.56913757 68.79582214]
[171.39540100 82.99819183]
[169.66749573 97.89833832]
[161.71905518 110.61927795]
[149.08480835 118.70480347]
[134.20420837 120.59371948]
[119.95049286 115.92131042]
[109.07510376 105.58868408]
[119.85042572 117.17327881]
[115.33499908 131.36694336]
[118.87467194 145.94332886]
[122.41434479 160.51969910]
[125.95401764 175.09606934]
[129.49368286 189.67245483]
[133.03335571 204.24882507]
[136.57302856 218.82519531]
[141.60995483 232.95422363]
[148.08944702 246.48257446]
[163.51922607 256.53262329]
[161.48898315 273.96377563]
[168.16918945 287.39413452]
[174.84938049 300.82452393]
[181.52957153 314.25488281]
[188.20976257 327.68527222]
[202.54916382 323.17660522]
[217.41735840 320.96673584]
[232.44818115 321.11007690]
[247.27151489 323.60314941]
[261.52230835 328.38452148]
[274.84960938 335.33642578]
[286.92526245 344.28771973]
[297.45184326 355.01794434]
[306.17016602 367.26281738]
[312.86550903 380.72085571]
[317.37298584 395.06063843]
[319.58163452 409.92901611]
[319.43704224 424.95983887]
[316.94274902 439.78295898]
[312.16021729 454.03335571]
[305.20718384 467.36010742]
[296.25491333 479.43499756]
[285.52383423 489.96069336]
[273.27819824 498.67800903]
[259.81961060 505.37222290]
[245.47946167 509.87854004]
[230.61091614 512.08593750]
[215.58010864 511.94009399]
[200.75718689 509.44461060]
[186.50718689 504.66088867]
[173.18101501 497.70675659]
[161.10685730 488.75347900]
[150.58204651 478.02154541]
[141.86575317 465.77520752]
[135.17263794 452.31604004]
[130.66751099 437.97552490]
[128.46131897 423.10681152]
[128.60841370 408.07601929]
[131.10513306 393.25329590]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 176]
[5 175]
[6 174]
[7 173]
[8 172]
[11 170]
[12 169]
[27 168]
[28 167]
[29 166]
[30 165]
[31 164]
[32 163]
[33 162]
[35 160]
[36 147]
[37 146]
[38 145]
[39 144]
[40 143]
[41 142]
[42 141]
[44 140]
[45 139]
[46 138]
[47 137]
[48 136]
[49 135]
[50 124]
[51 123]
[53 121]
[54 120]
[55 119]
[56 118]
[57 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
