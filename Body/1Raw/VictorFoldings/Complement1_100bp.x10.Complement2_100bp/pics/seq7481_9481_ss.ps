%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[64.14638519 857.26605225]
[49.14728928 856.94305420]
[34.17810822 855.94262695]
[19.26942635 854.26684570]
[4.45170021 851.91900635]
[-10.24479961 848.90405273]
[-24.79004860 845.22808838]
[-39.15433121 840.89855957]
[-53.30830383 835.92443848]
[-67.22304535 830.31573486]
[-80.87014008 824.08404541]
[-94.22169495 817.24206543]
[-107.25043488 809.80371094]
[-119.92975616 801.78417969]
[-132.23373413 793.19995117]
[-144.13725281 784.06854248]
[-155.61598206 774.40850830]
[-166.64646912 764.23968506]
[-177.20619202 753.58276367]
[-187.27357483 742.45959473]
[-196.82804871 730.89282227]
[-205.85008240 718.90618896]
[-214.32125854 706.52410889]
[-222.22425842 693.77185059]
[-229.54295349 680.67553711]
[-236.26237488 667.26184082]
[-242.36880493 653.55822754]
[-247.84977722 639.59271240]
[-252.69407654 625.39379883]
[-256.89181519 610.99041748]
[-260.43441772 596.41210938]
[-263.31463623 581.68859863]
[-265.52658081 566.85003662]
[-267.06579590 551.92657471]
[-267.92904663 536.94891357]
[-268.11462402 521.94744873]
[-267.62213135 506.95297241]
[-266.45257568 491.99606323]
[-264.60836792 477.10726929]
[-262.09326172 462.31701660]
[-258.91235352 447.65554810]
[-255.07221985 433.15277100]
[-250.58064270 418.83834839]
[-245.44683838 404.74148560]
[-239.68125916 390.89102173]
[-233.29571533 377.31524658]
[-226.30323792 364.04187012]
[-218.71810913 351.09802246]
[-210.55583191 338.51016235]
[-201.83306885 326.30398560]
[-192.56767273 314.50445557]
[-182.77853394 303.13562012]
[-172.48567200 292.22076416]
[-161.71009827 281.78216553]
[-150.47384644 271.84115601]
[-138.79986572 262.41802979]
[-126.71199799 253.53204346]
[-114.23494720 245.20137024]
[-101.39419556 237.44299316]
[-88.21598053 230.27279663]
[-74.72722626 223.70539856]
[-60.95548248 217.75424194]
[-46.92889023 212.43147278]
[-32.67610550 207.74797058]
[-18.22624016 203.71328735]
[-3.60882068 200.33567810]
[11.14629269 197.62205505]
[26.00895691 195.57794189]
[40.94880676 194.20751953]
[55.93532181 193.51359558]
[70.93788147 193.49758911]
[85.92584991 194.15951538]
[87.26408386 179.21932983]
[88.60231781 164.27914429]
[89.71796417 149.32069397]
[90.61077881 134.34729004]
[91.50359344 119.37388611]
[92.39640808 104.40047455]
[90.57383728 101.95758820]
[89.59984589 98.79753876]
[89.74177551 95.23337555]
[91.14757538 91.67247772]
[93.81433105 88.57064056]
[95.59680176 73.67692566]
[97.37926483 58.78320694]
[99.16173553 43.88949203]
[100.94419861 28.99577332]
[102.17117310 14.04603958]
[102.84095764 -0.93899906]
[103.51074219 -15.92403793]
[104.18052673 -30.90907669]
[104.85031128 -45.89411545]
[105.52009583 -60.87915421]
[106.18988037 -75.86419678]
[91.69410706 -79.98354340]
[78.53934479 -87.33534241]
[67.43502045 -97.52311707]
[58.97997665 -109.99745178]
[53.63018036 -124.08561707]
[51.67414474 -139.02786255]
[53.21735382 -154.01837158]
[58.17658615 -168.24871826]
[66.28439331 -180.95147705]
[77.10353088 -191.44160461]
[90.05053711 -199.15339661]
[104.42720032 -203.67095947]
[119.45819855 -204.75065613]
[134.33293152 -202.33425903]
[148.24923706 -196.55209351]
[160.45660400 -187.71598816]
[170.29670715 -176.30244446]
[177.23890686 -162.92698669]
[180.90878296 -148.31095886]
[181.10845947 -133.24253845]
[177.82713318 -118.53439331]
[171.24179077 -104.97969055]
[161.70756531 -93.30942535]
[149.73861694 -84.15295410]
[135.98040771 -78.00408173]
[121.17491913 -75.19440460]
[120.50513458 -60.20936966]
[119.83535004 -45.22433090]
[119.16556549 -30.23929214]
[118.49578094 -15.25425243]
[117.82599640 -0.26921391]
[117.15621185 14.71582508]
[129.81857300 6.67440224]
[144.04948425 11.41583061]
[149.35844421 25.44490623]
[141.83189392 38.41991425]
[127.01810455 40.77616501]
[115.83791351 30.77823830]
[114.05545044 45.67195511]
[112.27297974 60.56567383]
[110.49051666 75.45938873]
[108.70805359 90.35311127]
[107.36981964 105.29329681]
[106.47700500 120.26670074]
[105.58418274 135.24011230]
[104.69136810 150.21351624]
[107.30407715 156.28683472]
[106.56793213 161.92201233]
[103.54250336 165.61738586]
[102.20426941 180.55757141]
[100.86603546 195.49775696]
[115.73303986 197.51000977]
[130.49394226 200.19203186]
[145.11856079 203.53829956]
[159.57702637 207.54200745]
[173.83981323 212.19497681]
[187.87777710 217.48767090]
[201.66224670 223.40931702]
[215.16503906 229.94778442]
[228.35858154 237.08973694]
[241.21592712 244.82058716]
[253.71080017 253.12451172]
[265.81768799 261.98458862]
[277.51184082 271.38265991]
[288.76934814 281.29959106]
[299.56726074 291.71508789]
[309.88348389 302.60784912]
[319.69696045 313.95565796]
[328.98764038 325.73535156]
[337.73651123 337.92279053]
[345.92575073 350.49313354]
[353.53857422 363.42071533]
[360.55947876 376.67907715]
[366.97412109 390.24114990]
[372.76934814 404.07922363]
[377.93334961 418.16503906]
[382.45556641 432.46981812]
[386.32678223 446.96432495]
[389.53906250 461.61895752]
[392.08587646 476.40377808]
[393.96200562 491.28857422]
[395.16357422 506.24295044]
[395.68820190 521.23632812]
[395.53475952 536.23815918]
[394.70358276 551.21765137]
[393.19638062 566.14434814]
[391.01620483 580.98767090]
[388.16754150 595.71728516]
[384.65618896 610.30316162]
[380.48931885 624.71545410]
[375.67544556 638.92474365]
[370.22442627 652.90197754]
[364.14736938 666.61865234]
[357.45669556 680.04669189]
[350.16607666 693.15869141]
[342.29040527 705.92779541]
[333.84579468 718.32800293]
[324.84945679 730.33398438]
[315.31979370 741.92114258]
[305.27627563 753.06591797]
[294.73941040 763.74536133]
[283.73071289 773.93786621]
[272.27270508 783.62243652]
[260.38879395 792.77935791]
[248.10322571 801.38995361]
[235.44111633 809.43658447]
[222.42834473 816.90283203]
[209.09147644 823.77343750]
[195.45776367 830.03436279]
[181.55506897 835.67279053]
[167.41178894 840.67730713]
[153.05682373 845.03753662]
[138.51947021 848.74468994]
[123.82946777 851.79113770]
[109.01680756 854.17065430]
[94.11174774 855.87841797]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[72 145]
[73 144]
[74 143]
[75 140]
[76 139]
[77 138]
[78 137]
[83 136]
[84 135]
[85 134]
[86 133]
[87 132]
[88 126]
[89 125]
[90 124]
[91 123]
[92 122]
[93 121]
[94 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
