%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[110.30776215 513.55047607]
[109.98645020 498.54241943]
[111.09322357 483.57177734]
[113.61804199 468.77413940]
[117.53805542 454.28350830]
[122.81774902 440.23114014]
[129.40931702 426.74423218]
[137.25306702 413.94500732]
[146.27795410 401.94934082]
[156.40225220 390.86587524]
[167.53427124 380.79495239]
[158.57356262 368.76559448]
[149.61286926 356.73620605]
[140.65217590 344.70681763]
[131.69148254 332.67745972]
[122.73078156 320.64807129]
[125.35304260 335.41708374]
[124.11640167 350.36602783]
[119.10289001 364.50338745]
[110.64503479 376.89147949]
[99.30381775 386.70861816]
[85.83145142 393.30374146]
[71.12151337 396.23934937]
[56.14966965 395.32077026]
[41.90893936 390.60891724]
[29.34386063 382.41629028]
[19.28783226 371.28631592]
[12.40783215 357.95721436]
[9.16018677 343.31298828]
[9.76030159 328.32501221]
[14.16837311 313.98733521]
[22.09202957 301.25094604]
[33.00572205 290.96060181]
[46.18558502 283.79879761]
[60.75744629 280.24060059]
[75.75480652 280.52197266]
[90.18294525 284.62426758]
[103.08489990 292.27539062]
[113.60801697 302.97195435]
[108.99400330 288.69921875]
[104.37999725 274.42648315]
[100.61123657 271.49298096]
[98.64527893 266.16079712]
[99.84795380 259.65963745]
[95.66094208 245.25585938]
[91.47393036 230.85208130]
[87.28691864 216.44830322]
[83.09990692 202.04452515]
[80.49199677 216.81607056]
[74.81072998 230.69854736]
[66.31455994 243.06039429]
[55.39001465 253.33921814]
[42.53407669 261.06741333]
[28.33161354 265.89337158]
[13.42873859 267.59759521]
[-1.49656594 266.10250854]
[-15.76529789 261.47613525]
[-28.72832489 253.92893982]
[-39.79591751 243.80430603]
[-48.46456909 231.56278992]
[-54.33992004 217.76133728]
[-57.15467834 203.02780151]
[-56.78079224 188.03245544]
[-53.23527145 173.45750427]
[-46.67940903 159.96600342]
[-37.41145706 148.17172241]
[-25.85304642 138.61122131]
[-12.53000546 131.71945190]
[1.95155632 127.80992889]
[16.93282318 127.06050873]
[31.73225021 129.50529480]
[45.67655945 135.03306580]
[58.13137817 143.39234924]
[68.53009796 154.20283508]
[76.39964294 166.97273254]
[81.38299561 181.12530518]
[83.16545868 166.23159790]
[84.94792938 151.33787537]
[82.75270844 147.09640503]
[83.19864655 141.43087769]
[87.01161194 136.02969360]
[89.23673248 121.19564819]
[91.46184540 106.36161041]
[92.46611023 91.39526367]
[92.24278259 76.39692688]
[91.79617310 61.40357590]
[83.45037842 47.96265793]
[90.61166382 34.90259171]
[89.94187927 19.91755104]
[81.59608459 6.47663212]
[88.75736237 -6.58343410]
[87.86454773 -21.55683899]
[86.74890137 -36.51529312]
[85.63324738 -51.47374725]
[84.51760101 -66.43219757]
[69.98766327 -70.81913757]
[58.02604675 -80.16174316]
[50.25046921 -93.19649506]
[47.71250916 -108.16056061]
[50.75541306 -123.03016663]
[58.96764374 -135.79432678]
[71.23857117 -144.72677612]
[85.90864563 -148.61950684]
[100.99386597 -146.94602966]
[114.45407867 -139.93267822]
[124.46890259 -128.52795410]
[129.68391418 -114.27424622]
[129.39381409 -99.09925842]
[123.63786316 -85.05527496]
[113.19448090 -74.04164124]
[99.47605896 -67.54785156]
[100.59170532 -52.58939362]
[101.70735168 -37.63094330]
[102.82299805 -22.67248917]
[105.79308319 -18.93247795]
[106.44524384 -13.28697491]
[103.74240112 -7.25321913]
[112.04029083 5.11587000]
[104.92691803 19.24776649]
[105.59670258 34.23280334]
[113.89458466 46.60189438]
[106.78121185 60.73379135]
[109.63861847 64.56056976]
[110.12240601 70.22299194]
[107.24111938 76.17359924]
[107.46444702 91.17193604]
[115.73698425 78.65933990]
[128.83207703 71.34370422]
[143.82426453 70.85937500]
[157.36422729 77.31454468]
[166.42712402 89.26711273]
[168.98828125 104.04685211]
[164.47550964 118.35191345]
[153.89698792 128.98652649]
[139.61599731 133.57489014]
[124.82292175 131.09193420]
[112.82258606 122.09238434]
[106.29589081 108.58672333]
[104.07077789 123.42076874]
[101.84565735 138.25480652]
[99.84164429 153.12034607]
[98.05918121 168.01405334]
[96.27671051 182.90777588]
[97.50368500 197.85751343]
[101.69069672 212.26129150]
[105.87770844 226.66506958]
[110.06472015 241.06884766]
[114.25173187 255.47264099]
[118.65273285 269.81246948]
[123.26673889 284.08520508]
[127.88075256 298.35794067]
[134.76016235 311.68737793]
[143.72085571 323.71676636]
[152.68154907 335.74612427]
[161.64224243 347.77551270]
[170.60295105 359.80490112]
[179.56364441 371.83425903]
[192.39987183 364.05120850]
[205.91780090 357.52355957]
[219.99502563 352.31045532]
[234.50404358 348.45907593]
[249.31346130 346.00433350]
[264.28918457 344.96844482]
[279.29553223 345.36080933]
[294.19665527 347.17785645]
[308.85754395 350.40310669]
[323.14550781 355.00741577]
[336.93106079 360.94900513]
[350.08941650 368.17413330]
[362.50140381 376.61734009]
[374.05459595 386.20214844]
[384.64434814 396.84179688]
[394.17477417 408.43988037]
[402.55960083 420.89135742]
[409.72280884 434.08352661]
[415.59960938 447.89685059]
[420.13671875 462.20626831]
[423.29309082 476.88217163]
[425.04010010 491.79165649]
[425.36196899 506.79968262]
[424.25573730 521.77038574]
[421.73144531 536.56811523]
[417.81198120 551.05883789]
[412.53277588 565.11145020]
[405.94171143 578.59857178]
[398.09841919 591.39807129]
[389.07397461 603.39410400]
[378.95007324 614.47790527]
[367.81845093 624.54925537]
[355.77984619 633.51678467]
[342.94332886 641.29937744]
[329.42517090 647.82653809]
[315.34774780 653.03912354]
[300.83859253 656.88995361]
[286.02908325 659.34417725]
[271.05334473 660.37951660]
[256.04699707 659.98663330]
[241.14595032 658.16900635]
[226.48515320 654.94323730]
[212.19737244 650.33843994]
[198.41201782 644.39630127]
[185.25393677 637.17071533]
[172.84226990 628.72705078]
[161.28942871 619.14178467]
[150.70005798 608.50177002]
[141.17004395 596.90338135]
[132.78569031 584.45153809]
[125.62294006 571.25915527]
[119.74665833 557.44561768]
[115.21006775 543.13604736]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 157]
[12 156]
[13 155]
[14 154]
[15 153]
[16 152]
[39 151]
[40 150]
[41 149]
[44 148]
[45 147]
[46 146]
[47 145]
[48 144]
[76 143]
[77 142]
[78 141]
[81 140]
[82 139]
[83 138]
[84 126]
[85 125]
[86 122]
[88 120]
[89 119]
[91 117]
[92 114]
[93 113]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
