%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[45.27803421 291.91915894]
[41.31389236 306.39199829]
[36.37133026 320.56054688]
[30.47338867 334.35876465]
[23.64756966 347.72232056]
[15.92569828 360.58892822]
[7.34377527 372.89855957]
[-2.05818415 384.59387207]
[-12.23634338 395.62026978]
[-23.14324760 405.92639160]
[-34.72804260 415.46417236]
[-46.93671417 424.18914795]
[-59.71234131 432.06063843]
[-72.99535370 439.04190063]
[-86.72382355 445.10046387]
[-100.83374023 450.20800781]
[-115.25931549 454.34072876]
[-129.93328857 457.47940063]
[-144.78724670 459.60934448]
[-159.75192261 460.72067261]
[-174.75756836 460.80816650]
[-189.73419189 459.87142944]
[-204.61196899 457.91485596]
[-219.32154846 454.94750977]
[-233.79434204 450.98327637]
[-247.96286011 446.04061890]
[-261.76104736 440.14257812]
[-275.12457275 433.31668091]
[-287.99111938 425.59472656]
[-300.30068970 417.01272583]
[-311.99594116 407.61068726]
[-323.02227783 397.43243408]
[-333.32833862 386.52545166]
[-342.86602783 374.94061279]
[-351.59091187 362.73187256]
[-359.46231079 349.95620728]
[-366.44351196 336.67312622]
[-372.50195312 322.94464111]
[-377.60940552 308.83468628]
[-381.74203491 294.40908813]
[-384.88061523 279.73507690]
[-387.01046753 264.88110352]
[-388.12167358 249.91642761]
[-388.20907593 234.91078186]
[-387.27224731 219.93417358]
[-385.31555176 205.05639648]
[-382.34811401 190.34683228]
[-378.38378906 175.87406921]
[-373.44104004 161.70559692]
[-367.54290771 147.90744019]
[-360.71691895 134.54397583]
[-352.99487305 121.67747498]
[-344.41278076 109.36794281]
[-335.01065063 97.67277527]
[-324.83233643 86.64649963]
[-313.92529297 76.34052277]
[-302.34039307 66.80289459]
[-290.13159180 58.07809067]
[-277.35586548 50.20678329]
[-264.07275391 43.22568130]
[-250.34420776 37.16732788]
[-236.23422241 32.05997086]
[-221.80859375 27.92742348]
[-207.13456726 24.78895569]
[-192.28059387 22.65919685]
[-177.31588745 21.54808044]
[-162.31025696 21.46078491]
[-147.33364868 22.39772034]
[-132.45588684 24.35451317]
[-117.74634552 27.32204437]
[-103.27361298 31.28647614]
[-89.10516357 36.22932434]
[-75.30705261 42.12754059]
[-61.94362640 48.95362854]
[-49.07717896 56.67576218]
[-36.76770782 65.25793457]
[-25.07260323 74.66012573]
[-14.04639339 84.83850861]
[-3.74048877 95.74562073]
[5.79705906 107.33060455]
[14.52178192 119.53945160]
[22.39299965 132.31523132]
[35.67084503 125.33678436]
[48.94869232 118.35832977]
[56.61511993 105.58824158]
[72.43051147 106.01696777]
[85.70835876 99.03851318]
[93.33606720 87.32058716]
[107.31318665 87.68363953]
[120.59103394 80.70518494]
[133.86888123 73.72673798]
[146.98757935 66.45350647]
[159.94056702 58.88912964]
[172.89356995 51.32474899]
[185.84657288 43.76036835]
[198.79956055 36.19599152]
[192.15425110 22.74145508]
[186.46368408 8.85613632]
[181.75555420 -5.39231300]
[178.05282593 -19.93447685]
[175.37353516 -34.69950867]
[173.73072815 -49.61547089]
[173.13241577 -64.60969543]
[173.58151245 -79.60913086]
[175.07582092 -94.54069519]
[177.60807800 -109.33165741]
[181.16592407 -123.90994263]
[185.73205566 -138.20452881]
[191.28419495 -152.14578247]
[197.79530334 -165.66577148]
[205.23367310 -178.69863892]
[213.56304932 -191.18086243]
[222.74284363 -203.05166626]
[232.72836304 -214.25320435]
[243.47093201 -224.73088074]
[254.91822815 -234.43368530]
[267.01446533 -243.31431580]
[279.70071411 -251.32951355]
[292.91519165 -258.44024658]
[306.59350586 -264.61184692]
[320.66900635 -269.81427002]
[335.07312012 -274.02215576]
[349.73565674 -277.21499634]
[364.58520508 -279.37725830]
[379.54943848 -280.49838257]
[394.55541992 -280.57293701]
[409.53002930 -279.60055542]
[424.40032959 -277.58593750]
[439.09387207 -274.53890991]
[453.53909302 -270.47433472]
[467.66558838 -265.41201782]
[481.40454102 -259.37661743]
[494.68899536 -252.39755249]
[507.45425415 -244.50877380]
[519.63812256 -235.74876404]
[531.18127441 -226.16018677]
[542.02740479 -215.78974915]
[552.12371826 -204.68797302]
[561.42102051 -192.90896606]
[569.87402344 -180.51010132]
[577.44146729 -167.55178833]
[584.08660889 -154.09715271]
[589.77697754 -140.21176147]
[594.48492432 -125.96324158]
[598.18743896 -111.42102814]
[600.86651611 -96.65596008]
[602.50909424 -81.73996735]
[603.10717773 -66.74573517]
[602.65789795 -51.74631119]
[601.16333008 -36.81476212]
[598.63085938 -22.02384186]
[595.07281494 -7.44560623]
[590.50646973 6.84891748]
[584.95416260 20.79008865]
[578.44287109 34.30998611]
[571.00427246 47.34273911]
[562.67474365 59.82485580]
[553.49475098 71.69552612]
[543.50909424 82.89691162]
[532.76635742 93.37444305]
[521.31896973 103.07707977]
[509.22256470 111.95753479]
[496.53619385 119.97255707]
[483.32162476 127.08309937]
[469.64324951 133.25450134]
[455.56765747 138.45672607]
[441.16348267 142.66439819]
[426.50088501 145.85704041]
[411.65130615 148.01908875]
[396.68707275 149.14001465]
[381.68109131 149.21434021]
[366.70651245 148.24172974]
[351.83621216 146.22689819]
[337.14270020 143.17967224]
[322.69757080 139.11489868]
[308.57113647 134.05238342]
[294.83227539 128.01678467]
[281.54791260 121.03750610]
[268.78277588 113.14855957]
[256.59899902 104.38836670]
[245.05601501 94.79962158]
[234.21002197 84.42903137]
[224.11387634 73.32711792]
[214.81674194 61.54797745]
[206.36395264 49.14899063]
[193.41094971 56.71336746]
[180.45794678 64.27774811]
[167.50494385 71.84212494]
[154.55195618 79.40650177]
[153.30749512 82.70555115]
[150.40330505 85.56573486]
[146.06301880 87.21353912]
[140.84733582 87.00458527]
[127.56948853 93.98303223]
[114.29164124 100.96148682]
[106.66393280 112.67941284]
[92.68681335 112.31636047]
[79.40896606 119.29481506]
[70.79282379 132.56404114]
[55.92714691 131.63618469]
[42.64929962 138.61462402]
[29.37145233 145.59307861]
[35.43008423 159.32151794]
[40.53772354 173.43139648]
[44.67055893 187.85693359]
[47.80932617 202.53089905]
[49.93938065 217.38484192]
[51.05080032 232.34951782]
[51.13839722 247.35514832]
[50.20176315 262.33178711]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[82 202]
[83 201]
[84 200]
[86 198]
[87 197]
[89 195]
[90 194]
[91 193]
[92 189]
[93 188]
[94 187]
[95 186]
[96 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
