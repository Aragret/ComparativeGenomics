%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUGxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[58.95084381 568.46270752]
[47.96196365 558.23730469]
[37.94847107 547.05493164]
[28.99334335 535.00830078]
[21.17078781 522.19726562]
[14.54562473 508.72796631]
[9.17275429 494.71197510]
[5.09669876 480.26550293]
[2.35123348 465.50820923]
[0.95910931 450.56237793]
[0.93186206 435.55191040]
[2.26971745 420.60113525]
[4.96158934 405.83398438]
[8.98517132 391.37280273]
[14.30712223 377.33740234]
[20.88334274 363.84411621]
[28.65933800 351.00476074]
[37.57067108 338.92572021]
[47.54350281 327.70709229]
[58.49518967 317.44180298]
[70.33497620 308.21496582]
[82.96476746 300.10302734]
[96.27989197 293.17318726]
[110.17001343 287.48287964]
[105.76902008 273.14300537]
[101.36801910 258.80316162]
[96.96702576 244.46333313]
[92.56602478 230.12347412]
[88.16502380 215.78363037]
[85.76557922 230.59046936]
[80.06006622 244.46301270]
[71.34777832 256.67349243]
[60.08575439 266.58142090]
[46.86476517 273.66699219]
[32.37836838 277.55856323]
[17.38648415 278.05194092]
[2.67556071 275.12130737]
[-10.98269749 268.92031860]
[-22.87180519 259.77435303]
[-32.36808395 248.16311646]
[-38.97337723 234.69573975]
[-42.34118652 220.07870483]
[-42.29484177 205.07876587]
[-38.83677292 190.48281860]
[-32.14838409 177.05651855]
[-22.58053780 165.50419617]
[-10.63514042 156.43183899]
[3.06117535 150.31539917]
[17.78992844 147.47570801]
[32.77847672 148.06173706]
[47.24055099 152.04273987]
[60.41749954 159.20988464]
[71.61808777 169.18719482]
[80.25475311 181.45129395]
[85.87487793 195.36041260]
[86.99052429 180.40196228]
[80.22126770 167.13446045]
[88.96354675 153.94798279]
[90.07920074 138.98953247]
[91.19484711 124.03108215]
[92.08766174 109.05767822]
[92.53427124 94.06432343]
[92.75759888 79.06598663]
[92.98092651 64.06764984]
[85.44994354 50.15381241]
[93.37587738 37.54314804]
[93.59920502 22.54480934]
[93.82253265 7.54647207]
[94.04586029 -7.45186567]
[94.26918793 -22.45020294]
[94.49251556 -37.44853973]
[85.15307617 -53.31852341]
[94.73376465 -68.02149200]
[94.73376465 -83.02149200]
[94.73376465 -98.02149200]
[94.73376465 -113.02149200]
[82.26632690 -116.69046021]
[71.18618774 -123.45643616]
[62.24596024 -132.85163879]
[56.05077744 -144.23001099]
[53.01733780 -156.81159973]
[53.34588623 -169.73603821]
[57.00700378 -182.12136841]
[63.74411011 -193.12422180]
[73.09140778 -201.99729919]
[84.40611267 -208.14006042]
[96.91261292 -211.13935852]
[97.58239746 -226.12438965]
[98.25218201 -241.10943604]
[98.92196655 -256.09448242]
[99.59175110 -271.07949829]
[89.20518494 -282.68798828]
[90.09791565 -297.87542725]
[101.22884369 -307.70587158]
[101.89862823 -322.69091797]
[102.56841278 -337.67596436]
[88.22437286 -342.38247681]
[75.68269348 -350.78536987]
[65.87404633 -362.26113892]
[59.52629471 -375.95816040]
[57.11049271 -390.86004639]
[58.80590057 -405.86099243]
[64.48670959 -419.84780884]
[73.73137665 -431.78256226]
[85.85386658 -440.77966309]
[99.95462799 -446.17144775]
[114.98728180 -447.55780029]
[129.83630371 -444.83581543]
[143.39979553 -438.20755005]
[154.67127991 -428.16482544]
[162.81430054 -415.45285034]
[167.22462463 -401.01501465]
[167.57495117 -385.92263794]
[163.83929443 -371.29568481]
[156.29487610 -358.21960449]
[145.50152588 -347.66467285]
[132.26017761 -340.41418457]
[117.55345154 -337.00616455]
[116.88366699 -322.02114868]
[116.21388245 -307.03610229]
[126.42339325 -296.25177002]
[125.95760345 -281.04528809]
[114.57678986 -270.40972900]
[113.90700531 -255.42468262]
[113.23722076 -240.43965149]
[112.56743622 -225.45460510]
[111.89765167 -210.46957397]
[127.85306549 -204.31513977]
[140.75968933 -193.05833435]
[149.04953003 -178.04429626]
[151.70782471 -161.07601929]
[148.39721680 -144.19769287]
[139.50051880 -129.44860840]
[126.07646942 -118.61661530]
[109.73376465 -113.02149200]
[109.73376465 -98.02149200]
[109.73376465 -83.02149200]
[109.73376465 -68.02149200]
[118.06272125 -59.24908829]
[118.18548584 -46.75234222]
[109.49085236 -37.22521210]
[109.26752472 -22.22687531]
[109.04419708 -7.22853804]
[108.82086945 7.76979971]
[108.59754181 22.76813698]
[108.37421417 37.76647568]
[115.92116547 50.60753250]
[107.97926331 64.29097748]
[107.75593567 79.28931427]
[107.53260803 94.28765106]
[110.23906708 98.78087616]
[110.23539734 104.47062683]
[107.07270050 109.72746277]
[109.77553558 115.76121521]
[109.12337494 121.40672302]
[106.15329742 125.14672852]
[105.03765106 140.10517883]
[103.92200470 155.06362915]
[110.61146545 169.40106201]
[101.94898224 181.51760864]
[100.83333588 196.47605896]
[102.50487518 211.38262939]
[106.90586853 225.72247314]
[111.30686951 240.06233215]
[115.70787048 254.40217590]
[120.10886383 268.74203491]
[124.50986481 283.08187866]
[139.20068359 280.00048828]
[154.11085510 278.26779175]
[169.11680603 277.89813232]
[184.09419250 278.89459229]
[198.91893005 281.24893188]
[213.46813965 284.94158936]
[227.62126160 289.94198608]
[241.26104736 296.20867920]
[254.27444458 303.68978882]
[266.55361938 312.32324219]
[277.99685669 322.03756714]
[288.50927734 332.75225830]
[298.00378418 344.37847900]
[306.40173340 356.81994629]
[313.63348389 369.97351074]
[319.63919067 383.73022461]
[324.36898804 397.97607422]
[327.78375244 412.59301758]
[329.85516357 427.45989990]
[330.56607056 442.45355225]
[329.91058350 457.44973755]
[327.89410400 472.32418823]
[324.53335571 486.95364380]
[319.85620117 501.21685791]
[313.90136719 514.99566650]
[306.71823120 528.17584229]
[298.36630249 540.64825439]
[288.91479492 552.30950928]
[278.44204712 563.06292725]
[267.03479004 572.81945801]
[254.78758240 581.49822998]
[241.80191040 589.02734375]
[228.18537903 595.34442139]
[214.05081177 600.39703369]
[199.51533508 604.14343262]
[184.69941711 606.55249023]
[169.72579956 607.60424805]
[154.71859741 607.29003906]
[139.80212402 605.61248779]
[125.10002136 602.58538818]
[110.73410034 598.23388672]
[96.82340240 592.59405518]
[83.48320770 585.71258545]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 167]
[25 166]
[26 165]
[27 164]
[28 163]
[29 162]
[55 161]
[56 160]
[58 158]
[59 157]
[60 156]
[61 153]
[62 150]
[63 149]
[64 148]
[66 146]
[67 145]
[68 144]
[69 143]
[70 142]
[71 141]
[73 138]
[74 137]
[75 136]
[76 135]
[87 127]
[88 126]
[89 125]
[90 124]
[91 123]
[94 120]
[95 119]
[96 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
