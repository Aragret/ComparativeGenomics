%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[88.34711456 425.69039917]
[78.88652802 413.95321655]
[72.51037598 400.29278564]
[69.58935547 385.50320435]
[70.29328918 370.44439697]
[74.58125305 355.99182129]
[82.20394897 342.98574829]
[92.71820068 332.18234253]
[105.51273346 324.20965576]
[119.84368134 319.53125000]
[118.72802734 304.57281494]
[117.61238098 289.61434937]
[116.49673462 274.65591431]
[114.16124725 259.83883667]
[110.62157440 245.26246643]
[107.08190155 230.68608093]
[103.54222870 216.10971069]
[93.02008820 205.56771851]
[97.28233337 190.33145142]
[93.74266052 175.75506592]
[89.93945312 190.26490784]
[81.68588257 202.79003906]
[69.85298157 212.00862122]
[55.68949890 216.94783020]
[40.69013977 217.08639526]
[26.43782234 212.40971375]
[14.43662739 203.41130066]
[5.95306969 191.04080200]
[1.88244069 176.60369873]
[2.65432239 161.62356567]
[8.18725681 147.68130493]
[17.89733887 136.24827576]
[30.75984383 128.53102112]
[45.41735840 125.34397125]
[60.32303619 127.02346039]
[73.90385437 133.39224243]
[84.72659302 143.77821350]
[91.64915466 157.08549500]
[91.87248230 142.08715820]
[92.09580994 127.08882141]
[92.31913757 112.09048462]
[85.67764282 99.78673553]
[92.68252563 87.68618774]
[92.90585327 72.68785095]
[81.41621399 82.33089447]
[66.46178436 81.16258240]
[56.60913086 69.85218048]
[57.50230789 54.87879562]
[68.62965393 44.81986618]
[83.61692810 45.43760300]
[93.87840271 56.37725067]
[95.43891907 41.45864487]
[96.99944305 26.54004097]
[98.55996704 11.62143707]
[100.12049103 -3.29716802]
[92.04201508 9.34159088]
[81.00357056 19.49800491]
[67.73729706 26.49843788]
[53.12310410 29.87857246]
[38.13029480 29.41422081]
[23.75328636 25.13617706]
[10.94565773 17.32819366]
[0.55689013 6.50814199]
[-6.72396517 -6.60632133]
[-10.41399574 -21.14536095]
[-10.26845551 -36.14465332]
[-6.29699612 -50.60935211]
[1.23696840 -63.58006668]
[11.83373737 -74.19648743]
[24.79046631 -81.75447845]
[39.24777985 -85.75273895]
[54.24678040 -85.92607117]
[68.79263306 -82.26299286]
[81.92056274 -75.00645447]
[92.75984955 -64.63775635]
[100.59155273 -51.84461594]
[104.89623260 -37.47556305]
[105.38787842 -22.47852898]
[111.66523743 -36.10184479]
[110.41329956 -51.87343979]
[122.76672363 -60.19462967]
[129.04408264 -73.81794739]
[135.32144165 -87.44126129]
[141.59880066 -101.06457520]
[147.87617493 -114.68789673]
[154.15353394 -128.31120300]
[141.14814758 -135.80624390]
[128.87823486 -144.45286560]
[117.44543457 -154.17944336]
[106.94449615 -164.90538025]
[97.46244049 -176.54177856]
[89.07783508 -188.99223328]
[81.86016083 -202.15354919]
[75.86922455 -215.91668701]
[71.15467072 -230.16758728]
[67.75557709 -244.78817749]
[65.70008850 -259.65728760]
[65.00525665 -274.65170288]
[65.67683411 -289.64715576]
[67.70924377 -304.51943970]
[71.08566284 -319.14526367]
[75.77810669 -333.40347290]
[81.74768066 -347.17587280]
[88.94493866 -360.34838867]
[97.31021881 -372.81182861]
[106.77421570 -384.46292114]
[117.25849915 -395.20513916]
[128.67619324 -404.94943237]
[140.93269348 -413.61508179]
[153.92642212 -421.13027954]
[167.54972839 -427.43273926]
[181.68969727 -432.47024536]
[196.22917175 -436.20104980]
[211.04766846 -438.59423828]
[226.02239990 -439.62997437]
[241.02926636 -439.29968262]
[255.94392395 -437.60607910]
[270.64279175 -434.56326294]
[285.00402832 -430.19635010]
[298.90866089 -424.54162598]
[312.24148560 -417.64587402]
[324.89199829 -409.56625366]
[336.75534058 -400.36975098]
[347.73327637 -390.13253784]
[357.73477173 -378.93945312]
[366.67700195 -366.88323975]
[374.48580933 -354.06384277]
[381.09652710 -340.58743286]
[386.45437622 -326.56570435]
[390.51495361 -312.11483765]
[393.24462891 -297.35461426]
[394.62072754 -282.40734863]
[394.63189697 -267.39682007]
[393.27801514 -252.44750977]
[390.57031250 -237.68324280]
[386.53125000 -223.22636414]
[381.19424438 -209.19670105]
[374.60357666 -195.71046448]
[366.81384277 -182.87945557]
[357.88955688 -170.80996704]
[347.90472412 -159.60200500]
[336.94204712 -149.34848022]
[325.09237671 -140.13433838]
[312.45388794 -132.03591919]
[299.13134766 -125.12034607]
[285.23513794 -119.44492340]
[270.88040161 -115.05668640]
[256.18609619 -111.99198151]
[241.27395630 -110.27621460]
[226.26759338 -109.92359924]
[211.29135132 -110.93706512]
[196.46929932 -113.30821228]
[181.92430115 -117.01737976]
[167.77684021 -122.03385162]
[161.49948120 -108.41053009]
[155.22212219 -94.78721619]
[148.94476318 -81.16390228]
[142.66740417 -67.54058838]
[136.39004517 -53.91727066]
[138.09097290 -39.12010574]
[125.28855133 -29.82448578]
[119.01119232 -16.20116806]
[115.03909302 -1.73664510]
[113.47857666 13.18196011]
[111.91805267 28.10056496]
[110.35752869 43.01916885]
[108.79700470 57.93777466]
[107.90419006 72.91117859]
[107.68086243 87.90951538]
[114.32235718 100.21326447]
[107.31747437 112.31381226]
[107.09414673 127.31214905]
[106.87081909 142.31048584]
[106.64749146 157.30882263]
[108.31903076 172.21539307]
[111.85870361 186.79177856]
[122.63403320 198.37637329]
[118.11860657 212.57003784]
[121.65827942 227.14640808]
[125.19795227 241.72279358]
[128.73762512 256.29916382]
[134.03335571 242.26509094]
[145.18293762 232.23080444]
[159.69549561 228.43797302]
[174.32890320 231.73393250]
[185.81401062 241.38237000]
[191.58503723 255.22776794]
[190.35269165 270.17706299]
[182.39230347 282.89053345]
[169.48222351 290.52795410]
[154.50662231 291.38308716]
[140.81106567 285.26492310]
[131.45518494 273.54025269]
[132.57083130 288.49871826]
[133.68647766 303.45715332]
[134.80213928 318.41561890]
[149.66851807 320.91638184]
[163.50416565 326.90289307]
[175.50469971 336.02709961]
[184.97238159 347.75851440]
[191.35682678 361.41510010]
[194.28680420 376.20288086]
[193.59201050 391.26211548]
[189.31280518 405.71728516]
[181.69799805 418.72799683]
[171.19029236 429.53778076]
[158.40060425 437.51818848]
[144.07249451 442.20529175]
[129.03898621 443.32653809]
[114.17411804 440.81674194]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 196]
[11 195]
[12 194]
[13 193]
[14 181]
[15 180]
[16 179]
[17 178]
[19 176]
[20 175]
[38 174]
[39 173]
[40 172]
[41 171]
[43 169]
[44 168]
[51 167]
[52 166]
[53 165]
[54 164]
[55 163]
[78 162]
[79 161]
[81 159]
[82 158]
[83 157]
[84 156]
[85 155]
[86 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
