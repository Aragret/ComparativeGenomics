%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[29.05084419 479.89157104]
[29.45444107 494.90402222]
[28.07959747 509.85882568]
[24.94561005 524.54602051]
[20.09647942 538.75946045]
[13.60027790 552.29962158]
[5.54820108 564.97644043]
[-3.94671059 576.61181641]
[-14.75116444 587.04254150]
[-26.71348190 596.12219238]
[-39.66573334 603.72320557]
[-53.42608643 609.73895264]
[-67.80136871 614.08489990]
[-82.58977509 616.70013428]
[-97.58369446 617.54791260]
[-112.57263947 616.61633301]
[-127.34618378 613.91845703]
[-141.69694519 609.49212646]
[-155.42344666 603.39953613]
[-168.33297729 595.72619629]
[-180.24433899 586.57983398]
[-190.99029541 576.08886719]
[-200.41999817 564.40051270]
[-208.40106201 551.67895508]
[-214.82145691 538.10266113]
[-219.59103394 523.86230469]
[-222.64283752 509.15780640]
[-223.93403625 494.19555664]
[-223.44650269 479.18560791]
[-221.18707275 464.33865356]
[-217.18746948 449.86318970]
[-211.50382996 435.96237183]
[-204.21597290 422.83135986]
[-195.42617798 410.65451050]
[-185.25785828 399.60272217]
[-173.85375977 389.83120728]
[-161.37396240 381.47708130]
[-147.99368286 374.65768433]
[-133.90074158 369.46868896]
[-119.29299927 365.98300171]
[-104.37551117 364.24951172]
[-89.35770416 364.29254150]
[-74.45040894 366.11154175]
[-59.86288452 369.68093872]
[-45.79993057 374.95062256]
[-32.45896149 381.84664917]
[-24.04434395 369.42913818]
[-15.62972641 357.01165771]
[-7.21510744 344.59414673]
[1.19951093 332.17666626]
[9.61413002 319.75915527]
[18.02874756 307.34167480]
[26.44336700 294.92416382]
[34.85798645 282.50668335]
[43.17992783 270.02688599]
[51.40873718 257.48547363]
[57.38029861 243.72537231]
[60.91997147 229.14900208]
[64.45964813 214.57261658]
[52.86231613 205.19352722]
[46.46094131 191.65351868]
[46.57362747 176.61529541]
[53.23158264 163.06199646]
[65.16231537 153.70545959]
[80.03248596 150.44366455]
[83.57215881 135.86727905]
[79.05672455 121.67361450]
[89.83205414 110.08901978]
[86.08058929 96.61986542]
[95.59156799 86.37131500]
[99.13124084 71.79493713]
[91.17154694 58.40535355]
[94.96892548 43.67325974]
[107.78289795 36.16741943]
[111.32257080 21.59104347]
[114.86224365 7.01466703]
[118.40191650 -7.56170797]
[121.94158936 -22.13808441]
[125.48126221 -36.71445847]
[128.36653137 -51.43434906]
[130.59164429 -66.26839447]
[132.81677246 -81.10243988]
[127.21220398 -95.89768982]
[136.75187683 -107.33638763]
[136.75187683 -122.33638763]
[127.05304718 -134.83612061]
[132.81677246 -148.57034302]
[130.59164429 -163.40438843]
[128.36653137 -178.23843384]
[126.14141846 -193.07246399]
[111.17495728 -195.11743164]
[97.39144897 -201.29736328]
[85.90824127 -211.11126709]
[77.65624237 -223.76358032]
[73.30439758 -238.22865295]
[73.20549774 -253.33384705]
[77.36754608 -267.85464478]
[85.45316315 -280.61395264]
[96.80686188 -290.57739258]
[110.50827026 -296.93725586]
[125.44666290 -299.17803955]
[140.41105652 -297.11804199]
[154.18835449 -290.92428589]
[165.66169739 -281.09884644]
[173.90098572 -268.43823242]
[178.23829651 -253.96881104]
[178.32202148 -238.86352539]
[174.14538574 -224.34689331]
[166.04695129 -211.59573364]
[154.68324280 -201.64370728]
[140.97546387 -195.29759216]
[143.20057678 -180.46354675]
[145.42568970 -165.62950134]
[147.65080261 -150.79545593]
[157.19049072 -139.35675049]
[151.58592224 -124.56150818]
[156.36094666 -138.78117371]
[164.90139771 -151.11247253]
[176.53375244 -160.58287048]
[190.34060669 -166.44551086]
[205.23310852 -168.23805237]
[220.03678894 -165.81910706]
[233.58413696 -159.37945557]
[244.80677795 -149.42695618]
[252.81964111 -136.74649048]
[256.99078369 -122.33810425]
[256.99127197 -107.33810425]
[252.82106018 -92.92945099]
[244.80903625 -80.24847412]
[233.58703613 -70.29523468]
[220.04010010 -63.85470200]
[205.23658752 -61.43479919]
[190.34396362 -63.22636414]
[176.53671265 -69.08811188]
[164.90376282 -78.55776215]
[156.36250305 -90.88849640]
[151.58592224 -105.11127472]
[157.34963989 -91.37705231]
[147.65080261 -78.87731934]
[145.42568970 -64.04327393]
[143.20057678 -49.20923233]
[155.87553406 -57.23080444]
[170.53981018 -54.07503891]
[178.79306030 -41.54970932]
[175.90742493 -26.82988548]
[163.53594971 -18.34775543]
[148.76556396 -20.96226883]
[140.05763245 -33.17478561]
[136.51795959 -18.59841156]
[132.97828674 -4.02203560]
[129.43861389 10.55433941]
[125.89894867 25.13071442]
[122.35927582 39.70709229]
[130.30375671 52.25383759]
[126.92166901 67.08677673]
[113.70761871 75.33460999]
[110.16794586 89.91098022]
[113.91941071 103.38013458]
[104.40843201 113.62868500]
[108.67067719 128.86495972]
[98.14852905 139.40695190]
[94.60885620 153.98333740]
[106.32696533 163.70173645]
[112.63778687 177.48797607]
[112.33832550 192.58534241]
[105.54151154 206.00042725]
[93.64324951 215.09661865]
[79.03601837 218.11228943]
[75.49634552 232.68867493]
[71.95667267 247.26504517]
[81.61943817 235.79199219]
[93.80211639 227.04086304]
[107.75973511 221.54678345]
[122.63877869 219.64572144]
[137.52938843 221.45394897]
[151.52101135 226.86085510]
[163.75802612 235.53584290]
[173.49215698 246.94841003]
[180.12815857 260.40069580]
[183.26022339 275.07003784]
[182.69682312 290.05944824]
[178.47242737 304.45233154]
[170.84535217 317.36849976]
[160.28198242 328.01815796]
[147.42829895 335.75009155]
[133.07028198 340.09146118]
[118.08594513 340.77679443]
[103.39158630 337.76419067]
[89.88576508 331.23788452]
[78.39437103 321.59692383]
[69.62010956 309.43090820]
[64.09952545 295.48373413]
[62.17020416 280.60833740]
[63.95013809 265.71429443]
[55.72132874 278.25567627]
[53.63002777 287.14749146]
[47.27548218 290.92129517]
[38.86086273 303.33877563]
[30.44624329 315.75628662]
[22.03162575 328.17376709]
[13.61700630 340.59127808]
[5.20238781 353.00875854]
[-3.21223068 365.42626953]
[-11.62684917 377.84375000]
[-20.04146767 390.26126099]
[-8.69218254 400.09640503]
[1.41417980 411.20486450]
[10.13574123 423.43066406]
[17.35006523 436.60223389]
[22.95587540 450.53460693]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 205]
[47 204]
[48 203]
[49 202]
[50 201]
[51 200]
[52 199]
[53 198]
[54 197]
[55 195]
[56 194]
[57 170]
[58 169]
[59 168]
[65 162]
[66 161]
[68 159]
[70 157]
[71 156]
[74 153]
[75 152]
[76 151]
[77 150]
[78 149]
[79 148]
[80 141]
[81 140]
[82 139]
[84 137]
[85 116]
[87 114]
[88 113]
[89 112]
[90 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
