%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[76.83498383 656.07934570]
[75.72433472 640.91906738]
[80.50457001 626.48931885]
[90.44673920 614.99053955]
[104.03473663 608.17620850]
[102.91909027 593.21777344]
[101.80344391 578.25933838]
[100.46520996 563.31915283]
[98.90468597 548.40051270]
[97.34416199 533.48193359]
[95.78363800 518.56335449]
[86.40639496 530.27087402]
[71.72270203 533.33508301]
[58.44574356 526.35491943]
[52.64556503 512.52172852]
[56.97393036 498.15979004]
[69.45197296 489.83520508]
[84.37489319 491.35388184]
[94.92092133 502.02316284]
[94.92092133 487.02316284]
[94.92092133 472.02316284]
[94.92092133 457.02316284]
[84.24005127 446.70547485]
[84.02636719 431.49334717]
[94.92092133 420.36022949]
[87.18362427 407.63296509]
[94.92092133 393.83279419]
[94.92092133 378.83279419]
[94.92092133 363.83279419]
[80.85699463 358.78390503]
[69.34745789 349.20999146]
[61.79378128 336.25173950]
[59.12432861 321.46337891]
[61.68027496 306.62637329]
[69.17215729 293.53466797]
[80.71249390 283.77801514]
[94.92092133 278.54867554]
[94.92092133 263.54867554]
[94.92092133 248.54867554]
[94.92092133 233.54867554]
[85.34022522 218.84570312]
[94.67967224 202.97572327]
[94.45634460 187.97738647]
[94.23301697 172.97904968]
[94.00968933 157.98071289]
[84.21115112 143.42201233]
[93.31327820 127.41474152]
[92.86666870 112.42139435]
[85.68240356 100.42647552]
[92.13998413 88.02521515]
[91.69337463 73.03186035]
[91.24677277 58.03851318]
[90.80016327 43.04516220]
[90.35356140 28.05181313]
[89.90695190 13.05846405]
[89.46034241 -1.93488598]
[76.51029968 -13.69564915]
[76.08115387 -30.84588814]
[87.95022583 -42.76075363]
[87.28044128 -57.74579239]
[86.61065674 -72.73082733]
[85.27242279 -87.67101288]
[83.26840973 -102.53654480]
[81.26439667 -117.40206909]
[77.53226471 -122.85942841]
[77.17072296 -128.53096008]
[79.42884827 -132.73927307]
[77.86832428 -147.65788269]
[76.30780792 -162.57649231]
[74.74728394 -177.49508667]
[73.07574463 -192.40167236]
[63.75337601 -205.18463135]
[69.92345428 -218.74114990]
[68.14099121 -233.63487244]
[53.26047134 -236.17457581]
[39.71220016 -242.79777527]
[28.59040451 -252.95999146]
[20.79065895 -265.83135986]
[16.93776321 -280.36431885]
[17.33570290 -295.37890625]
[21.94368553 -309.65853882]
[30.38013077 -322.04852295]
[41.95426559 -331.54962158]
[55.72266769 -337.39840698]
[53.94020462 -352.29211426]
[52.15773773 -367.18585205]
[50.37527084 -382.07955933]
[48.59280396 -396.97326660]
[39.27043915 -409.75622559]
[45.44052124 -423.31277466]
[43.65805435 -438.20648193]
[28.75912094 -440.69613647]
[15.16571712 -447.28372192]
[3.97980261 -457.43515015]
[-3.89183187 -470.32757568]
[-7.81106758 -484.91580200]
[-7.46019030 -500.01724243]
[-2.86764383 -514.40771484]
[5.59427500 -526.92059326]
[17.23959541 -536.54156494]
[31.12428474 -542.49066162]
[46.12277222 -544.28570557]
[61.01919937 -541.78106689]
[74.60597992 -535.17987061]
[85.78168488 -525.01715088]
[93.64036560 -512.11688232]
[97.54494476 -497.52468872]
[97.17889404 -482.42361450]
[92.57189941 -468.03778076]
[84.09741211 -455.53338623]
[72.44242859 -445.92413330]
[58.55177307 -439.98895264]
[60.33423996 -425.09521484]
[69.52911377 -413.37756348]
[63.48652267 -398.75573730]
[65.26898956 -383.86203003]
[67.05145264 -368.96832275]
[68.83392334 -354.07458496]
[70.61638641 -339.18087769]
[85.37613678 -336.74630737]
[98.86544800 -330.24478149]
[109.98740387 -320.19552612]
[117.83492279 -307.40655518]
[121.76473999 -292.90991211]
[121.45011902 -277.87820435]
[116.90801239 -263.52975464]
[108.49838257 -251.03002930]
[96.89566040 -241.39680481]
[83.03470612 -235.41732788]
[84.81717682 -220.52362061]
[94.01204681 -208.80595398]
[87.96945953 -194.18412781]
[91.88552094 -187.91625977]
[89.66588593 -179.05561829]
[91.22640991 -164.13700867]
[92.78693390 -149.21841431]
[94.34745789 -134.29980469]
[96.12992096 -119.40608215]
[98.13393402 -104.54055786]
[100.13794708 -89.67502594]
[110.07000732 -100.91577148]
[125.03229523 -101.97874451]
[136.45373535 -92.25502777]
[137.79161072 -77.31481171]
[128.27952576 -65.71652985]
[113.36643219 -64.10420227]
[101.59569550 -73.40061188]
[102.26548004 -58.41557693]
[102.93526459 -43.43053818]
[113.56731415 -36.15118027]
[118.13359070 -23.89429665]
[114.75704956 -11.05648422]
[104.45369720 -2.38149190]
[104.90029907 12.61185837]
[105.34690857 27.60520744]
[105.79351044 42.59855652]
[106.24011993 57.59190750]
[106.68672180 72.58525848]
[107.13333130 87.57860565]
[114.31759644 99.57352448]
[107.86001587 111.97478485]
[108.30662537 126.96813965]
[117.14213562 136.36476135]
[117.20545197 148.86195374]
[109.00802612 157.75738525]
[109.23135376 172.75572205]
[109.45468140 187.75405884]
[109.67800903 202.75239563]
[118.37264252 212.27952576]
[118.24987793 224.77627563]
[109.92092133 233.54867554]
[109.92092133 248.54867554]
[109.92092133 263.54867554]
[109.92092133 278.54867554]
[124.12934113 283.77801514]
[135.66969299 293.53466797]
[143.16156006 306.62637329]
[145.71751404 321.46337891]
[143.04806519 336.25173950]
[135.49438477 349.20999146]
[123.98484802 358.78390503]
[109.92092133 363.83279419]
[109.92092133 378.83279419]
[109.92092133 393.83279419]
[117.65821838 407.63296509]
[109.92092133 420.36022949]
[120.81547546 431.49334717]
[120.60179138 446.70547485]
[109.92092133 457.02316284]
[109.92092133 472.02316284]
[109.92092133 487.02316284]
[109.92092133 502.02316284]
[110.70223999 517.00280762]
[112.26276398 531.92138672]
[113.82328796 546.84002686]
[115.38381195 561.75860596]
[118.95179749 567.32464600]
[119.14431763 573.00445557]
[116.76189423 577.14367676]
[117.87754059 592.10211182]
[118.99319458 607.06060791]
[133.44169617 611.78381348]
[144.97961426 621.68054199]
[151.84748840 635.24157715]
[152.99801636 650.39886475]
[148.25576782 664.84118652]
[138.34388733 676.36602783]
[124.77385712 683.21606445]
[109.61502075 684.34667969]
[95.17899323 679.58544922]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 201]
[6 200]
[7 199]
[8 196]
[9 195]
[10 194]
[11 193]
[19 192]
[20 191]
[21 190]
[22 189]
[25 186]
[27 184]
[28 183]
[29 182]
[37 174]
[38 173]
[39 172]
[40 171]
[42 168]
[43 167]
[44 166]
[45 165]
[47 162]
[48 161]
[50 159]
[51 158]
[52 157]
[53 156]
[54 155]
[55 154]
[56 153]
[59 149]
[60 148]
[61 147]
[62 140]
[63 139]
[64 138]
[67 137]
[68 136]
[69 135]
[70 134]
[71 132]
[73 130]
[74 129]
[84 119]
[85 118]
[86 117]
[87 116]
[88 115]
[90 113]
[91 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
