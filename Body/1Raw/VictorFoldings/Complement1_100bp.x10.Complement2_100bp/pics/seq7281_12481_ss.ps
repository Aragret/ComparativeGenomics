%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[103.11701965 298.12414551]
[103.25257111 313.14447021]
[101.46619415 328.05880737]
[97.78723145 342.62225342]
[92.27609253 356.59564209]
[85.02326965 369.74951172]
[76.14786530 381.86791992]
[65.79562378 392.75183105]
[54.13653946 402.22253418]
[41.36206055 410.12448120]
[27.68195534 416.32794189]
[13.32086563 420.73107910]
[-1.48538661 423.26153564]
[-16.49366951 423.87777710]
[-31.45753479 422.56970215]
[-46.13125992 419.35876465]
[-60.27389145 414.29769897]
[-73.65319061 407.46960449]
[-86.04946136 398.98663330]
[-97.25914764 388.98806763]
[-107.09816742 377.63809204]
[-115.40496063 365.12307739]
[-122.04312897 351.64855957]
[-126.90364838 337.43576050]
[-129.90672302 322.71807861]
[-131.00303650 307.73721313]
[-130.17459106 292.73916626]
[-127.43496704 277.97018433]
[-122.82917786 263.67279053]
[-116.43283844 250.08178711]
[-108.35099030 237.42034912]
[-98.71634674 225.89637756]
[-87.68711090 215.69911194]
[-75.44439697 206.99600220]
[-62.18923569 199.92994690]
[-48.13929367 194.61698914]
[-33.52528381 191.14437866]
[-18.58718300 189.56912231]
[-3.57028437 189.91709900]
[11.27881908 192.18258667]
[25.71629143 196.32838440]
[39.50505829 202.28643799]
[47.16565704 189.39010620]
[54.82625198 176.49377441]
[62.48685074 163.59745789]
[70.14744568 150.70112610]
[77.80804443 137.80479431]
[85.46864319 124.90847015]
[90.61060333 110.81732941]
[85.86773682 97.66450500]
[94.59012604 86.73694611]
[97.03585052 71.93767548]
[99.48158264 57.13840103]
[100.81981659 42.19821548]
[101.04314423 27.19987869]
[101.26647186 12.20154190]
[101.48979950 -2.79679537]
[86.53073883 -3.97116709]
[71.67628479 -6.09193993]
[56.98624802 -9.15057373]
[42.51977158 -13.13475227]
[28.33511925 -18.02843285]
[14.48940086 -23.81191063]
[1.03837109 -30.46189690]
[-11.96380806 -37.95161438]
[-24.46478081 -46.25090408]
[-36.41420746 -55.32635117]
[-47.76397705 -65.14140320]
[-58.46837997 -75.65654755]
[-68.48432159 -86.82943726]
[-77.77146912 -98.61508179]
[-86.29241943 -110.96603394]
[-94.01286316 -123.83255005]
[-100.90171814 -137.16282654]
[-106.93124390 -150.90318298]
[-112.07716370 -164.99829102]
[-116.31874847 -179.39138794]
[-119.63892365 -194.02453613]
[-122.02431488 -208.83880615]
[-123.46532440 -223.77453613]
[-123.95615387 -238.77157593]
[-123.49481201 -253.76957703]
[-122.08316803 -268.70809937]
[-119.72689819 -283.52703857]
[-116.43550110 -298.16668701]
[-112.22222137 -312.56808472]
[-107.10402679 -326.67327881]
[-101.10152435 -340.42547607]
[-94.23889160 -353.76925659]
[-86.54375458 -366.65093994]
[-78.04710388 -379.01861572]
[-68.78314209 -390.82247925]
[-58.78919220 -402.01504517]
[-48.10548019 -412.55120850]
[-36.77502823 -422.38858032]
[-24.84346581 -431.48748779]
[-12.35883427 -439.81134033]
[0.62859458 -447.32659912]
[14.06652451 -454.00302124]
[27.90084648 -459.81372070]
[42.07585144 -464.73526001]
[56.53446579 -468.74786377]
[71.21846008 -471.83538818]
[86.06871796 -473.98535156]
[101.02543640 -475.18914795]
[116.02839661 -475.44186401]
[131.01716614 -474.74255371]
[145.93141174 -473.09399414]
[160.71107483 -470.50283813]
[175.29664612 -466.97949219]
[189.62937927 -462.53817749]
[203.65156555 -457.19674683]
[217.30674744 -450.97674561]
[230.53993225 -443.90319824]
[243.29785156 -436.00457764]
[255.52911377 -427.31268311]
[267.18447876 -417.86254883]
[278.21701050 -407.69223022]
[288.58227539 -396.84262085]
[298.23855591 -385.35748291]
[307.14697266 -373.28302002]
[315.27160645 -360.66784668]
[322.57980347 -347.56277466]
[329.04211426 -334.02056885]
[334.63250732 -320.09576416]
[339.32846069 -305.84442139]
[343.11108398 -291.32394409]
[345.96514893 -276.59280396]
[347.87915039 -261.71029663]
[348.84539795 -246.73634338]
[348.85998535 -231.73127747]
[347.92285156 -216.75547791]
[346.03781128 -201.86927795]
[343.21237183 -187.13259888]
[339.45800781 -172.60479736]
[334.78976440 -158.34436035]
[329.22647095 -144.40872192]
[322.79049683 -130.85397339]
[315.50781250 -117.73471832]
[307.40771484 -105.10377502]
[298.52279663 -93.01200104]
[288.88885498 -81.50808716]
[278.54470825 -70.63836670]
[267.53198242 -60.44659424]
[255.89500427 -50.97381592]
[243.68066406 -42.25817490]
[230.93814087 -34.33476639]
[217.71871948 -27.23549080]
[204.07566833 -20.98893929]
[190.06388855 -15.62026501]
[175.73982239 -11.15108395]
[161.16113281 -7.59939241]
[146.38653564 -4.97949171]
[131.47552490 -3.30193186]
[116.48813629 -2.57346773]
[116.26480865 12.42486954]
[116.04148102 27.42320633]
[115.81815338 42.42154312]
[124.84684753 30.44311905]
[138.61622620 24.49298859]
[153.52702332 26.12650108]
[165.68156433 34.91666031]
[171.90270996 48.56574249]
[170.56425476 63.50590515]
[162.01606750 75.83183289]
[148.49261475 82.32154846]
[133.52891541 81.27866364]
[121.03643036 72.97578430]
[114.28085327 59.58412933]
[111.83512878 74.38339996]
[109.38939667 89.18267059]
[114.13226318 102.33549500]
[105.40987396 113.26305389]
[114.15241241 101.07420349]
[125.43897247 91.19425201]
[138.67749023 84.14147186]
[153.17349243 80.28584290]
[168.16654968 79.82962036]
[182.87016296 82.79674530]
[196.51300049 89.03155518]
[208.37939453 98.20700073]
[217.84684753 109.84173584]
[224.41873169 123.32544708]
[227.75028992 137.95079041]
[227.66674805 152.95056152]
[224.17250061 167.53788757]
[217.45083618 180.94757080]
[207.85437012 192.47613525]
[195.88652039 201.51882935]
[182.17507935 207.60130310]
[167.43933105 210.40446472]
[152.45228577 209.78128052]
[138.00012207 205.76441956]
[124.84098816 198.56462097]
[113.66517639 188.55957031]
[105.05894470 176.27409363]
[99.47376251 162.35267639]
[97.20262146 147.52561951]
[98.36496735 132.56906128]
[90.70436859 145.46539307]
[83.04377747 158.36172485]
[75.38317871 171.25804138]
[67.72257996 184.15437317]
[60.06198120 197.05070496]
[52.40138626 209.94702148]
[64.22949219 219.20576477]
[74.77647400 229.90107727]
[83.86913300 241.85731506]
[91.35816193 254.87817383]
[97.12058258 268.74984741]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 205]
[43 204]
[44 203]
[45 202]
[46 201]
[47 200]
[48 199]
[49 173]
[51 171]
[52 170]
[53 169]
[54 158]
[55 157]
[56 156]
[57 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
