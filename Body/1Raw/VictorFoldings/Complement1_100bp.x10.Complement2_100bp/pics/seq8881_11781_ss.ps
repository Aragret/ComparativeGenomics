%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[79.70834351 555.01464844]
[67.96863556 564.37829590]
[55.23806000 572.34259033]
[41.68258667 578.80377197]
[27.47894096 583.67761230]
[12.81229591 586.90051270]
[-2.12613821 588.43054199]
[-17.14160728 588.24768066]
[-32.03835678 586.35437012]
[-46.62217331 582.77526855]
[-60.70293045 577.55700684]
[-74.09705353 570.76770020]
[-86.62992096 562.49572754]
[-98.13815308 552.84906006]
[-108.47170258 541.95343018]
[-117.49584961 529.95080566]
[-125.09295654 516.99774170]
[-131.16397095 503.26309204]
[-135.62976074 488.92593384]
[-138.43208313 474.17312622]
[-139.53440857 459.19708252]
[-138.92237854 444.19296265]
[-136.60397339 429.35644531]
[-132.60939026 414.88088989]
[-126.99073792 400.95507812]
[-119.82125854 387.76052856]
[-111.19441223 375.46923828]
[-101.22267151 364.24151611]
[-90.03604126 354.22366333]
[-77.78036499 345.54632568]
[-64.61540985 338.32263184]
[-50.71281815 332.64675903]
[-36.25383377 328.59268188]
[-21.42696381 326.21325684]
[-6.42550278 325.53952026]
[8.55497360 326.58023071]
[23.31916237 329.32183838]
[27.72016144 314.98199463]
[32.12115860 300.64215088]
[36.52215576 286.30230713]
[40.92315674 271.96246338]
[45.32415390 257.62261963]
[31.97768021 249.75253296]
[20.89086533 238.91650391]
[12.70833206 225.73872375]
[7.90722561 210.97973633]
[6.76939964 195.49247742]
[9.36486816 180.17308044]
[15.54751778 165.90888977]
[24.96332169 153.52720642]
[37.07061005 143.74720764]
[51.17123413 137.13816833]
[66.45081329 134.08642578]
[82.02578735 134.77270508]
[86.21279907 120.36891937]
[90.39981079 105.96513367]
[77.76561737 114.05075073]
[62.78537750 113.28111267]
[51.04634476 103.94328308]
[46.92689514 89.52003479]
[51.96347427 75.39088440]
[64.27756500 66.82566071]
[79.27632141 67.01897430]
[91.36557007 75.89872742]
[96.03633118 90.15415955]
[101.90529633 76.34998322]
[107.77425385 62.54580307]
[113.64321899 48.74162674]
[119.51217651 34.93745041]
[106.33879852 42.11115646]
[91.37091064 41.13020706]
[79.24646759 32.29856110]
[73.72237396 18.35279465]
[76.51032257 3.61416006]
[86.74643707 -7.35041809]
[101.25894165 -11.14344501]
[115.55099487 -6.58961153]
[125.19403076 4.90002871]
[127.20001984 19.76554108]
[134.86061096 6.86921358]
[142.52120972 -6.02711344]
[150.18180847 -18.92344093]
[157.84240723 -31.81976700]
[165.50300598 -44.71609497]
[173.16360474 -57.61241913]
[180.82420349 -70.50875092]
[188.48480225 -83.40507507]
[176.27694702 -92.13676453]
[164.85359192 -101.87229919]
[154.29702759 -112.54154205]
[144.68330383 -124.06761169]
[136.08171082 -136.36746216]
[128.55421448 -149.35247803]
[122.15505219 -162.92909241]
[116.93032837 -176.99949646]
[112.91768646 -191.46229553]
[110.14604187 -206.21328735]
[108.63536835 -221.14619446]
[108.39654541 -236.15341187]
[109.43129730 -251.12683105]
[111.73216248 -265.95855713]
[115.28256989 -280.54171753]
[120.05693054 -294.77124023]
[126.02085114 -308.54458618]
[133.13136292 -321.76254272]
[141.33721924 -334.32989502]
[150.57931519 -346.15600586]
[160.79104614 -357.15576172]
[171.89883423 -367.24984741]
[183.82266235 -376.36557007]
[196.47660828 -384.43722534]
[209.76948547 -391.40667725]
[223.60552979 -397.22366333]
[237.88505554 -401.84634399]
[252.50517273 -405.24136353]
[267.36053467 -407.38424683]
[282.34411621 -408.25958252]
[297.34796143 -407.86108398]
[312.26394653 -406.19155884]
[326.98458862 -403.26312256]
[341.40386963 -399.09677124]
[355.41787720 -393.72262573]
[368.92562866 -387.17932129]
[381.82980347 -379.51406860]
[394.03741455 -370.78207397]
[405.46054077 -361.04623413]
[416.01681519 -350.37673950]
[425.63024902 -338.85040283]
[434.23150635 -326.55032349]
[441.75866699 -313.56512451]
[448.15750122 -299.98834229]
[453.38186646 -285.91781616]
[457.39410400 -271.45489502]
[460.16537476 -256.70382690]
[461.67565918 -241.77088928]
[461.91409302 -226.76367188]
[460.87896729 -211.79028320]
[458.57772827 -196.95861816]
[455.02694702 -182.37554932]
[450.25219727 -168.14614868]
[444.28793335 -154.37294006]
[437.17709351 -141.15516663]
[428.97088623 -128.58805847]
[419.72848511 -116.76215363]
[409.51647949 -105.76267242]
[398.40841675 -95.66886902]
[386.48437500 -86.55345917]
[373.83023071 -78.48213196]
[360.53717041 -71.51303101]
[346.70095825 -65.69638062]
[332.42132568 -61.07408905]
[317.80111694 -57.67945480]
[302.94567871 -55.53694153]
[287.96209717 -54.66198349]
[272.95825195 -55.06088638]
[258.04232788 -56.73077774]
[243.32173157 -59.65962219]
[228.90257263 -63.82631683]
[214.88870239 -69.20084381]
[201.38111877 -75.74447632]
[193.72053528 -62.84815216]
[186.05993652 -49.95182419]
[178.39933777 -37.05549622]
[170.73873901 -24.15917015]
[163.07814026 -11.26284313]
[155.41754150 1.63348401]
[147.75694275 14.52981091]
[140.09634399 27.42613792]
[133.31636047 40.80641174]
[127.44739532 54.61058807]
[121.57843018 68.41476440]
[115.70947266 82.21894073]
[109.84051514 96.02311707]
[104.80359650 110.15214539]
[100.61658478 124.55593109]
[96.42957306 138.95971680]
[109.09700012 146.10530090]
[119.84626007 155.89089966]
[128.13818359 167.82112122]
[133.55786133 181.29313660]
[135.83540344 195.62709045]
[134.85940552 210.10047913]
[130.68237305 223.98448181]
[123.51790619 236.58076477]
[113.72981262 247.25648499]
[101.81356812 255.47616577]
[88.37130737 260.82858276]
[74.08135223 263.04721069]
[59.66400146 262.02362061]
[55.26300430 276.36346436]
[50.86200333 290.70330811]
[46.46100616 305.04315186]
[42.06000900 319.38299561]
[37.65901184 333.72283936]
[51.41927338 339.73556519]
[64.40441895 347.27770996]
[76.44517517 356.25088501]
[87.38455200 366.53814697]
[97.07994080 378.00537109]
[105.40493774 390.50305176]
[112.25100708 403.86828613]
[117.52890015 417.92678833]
[121.16980743 432.49530029]
[123.12626648 447.38388062]
[123.37276459 462.39843750]
[121.90608978 477.34323120]
[118.74536896 492.02340698]
[113.93180084 506.24758911]
[107.52814484 519.83032227]
[99.61788177 532.59454346]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 194]
[38 193]
[39 192]
[40 191]
[41 190]
[42 189]
[54 176]
[55 175]
[56 174]
[65 173]
[66 172]
[67 171]
[68 170]
[69 169]
[79 168]
[80 167]
[81 166]
[82 165]
[83 164]
[84 163]
[85 162]
[86 161]
[87 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
