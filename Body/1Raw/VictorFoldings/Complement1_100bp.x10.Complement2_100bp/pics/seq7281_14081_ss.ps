%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[148.63642883 703.04687500]
[136.18865967 694.66674805]
[124.33500671 685.46545410]
[113.12959290 675.48492432]
[102.62351990 664.77062988]
[92.86473846 653.37158203]
[83.89778137 641.33966064]
[75.76354218 628.72985840]
[68.49916077 615.59967041]
[62.13776398 602.00903320]
[56.70838547 588.01995850]
[52.23580170 573.69622803]
[48.74041367 559.10321045]
[46.23817062 544.30755615]
[44.74049377 529.37670898]
[44.25421524 514.37884521]
[44.78155518 499.38235474]
[46.32010269 484.45565796]
[48.86284256 469.66690063]
[52.39817047 455.08355713]
[56.90995789 440.77212524]
[62.37761307 426.79794312]
[68.77619171 413.22476196]
[76.07649994 400.11453247]
[84.24523163 387.52703857]
[93.24510193 375.51974487]
[103.03504944 364.14743042]
[113.57041168 353.46194458]
[124.80311584 343.51211548]
[136.68191528 334.34329224]
[149.15258789 325.99734497]
[162.15824890 318.51229858]
[175.63955688 311.92236328]
[169.97677612 298.03234863]
[164.31398010 284.14230347]
[158.65119934 270.25228882]
[147.62681580 265.27334595]
[142.79537964 253.74769592]
[147.24995422 241.64317322]
[141.79460144 227.67036438]
[136.33923340 213.69757080]
[130.88388062 199.72477722]
[125.42852783 185.75196838]
[119.97316742 171.77917480]
[114.51781464 157.80638123]
[99.09115601 159.59461975]
[83.72620392 157.33679199]
[69.46612549 151.18620300]
[57.27909088 141.56042480]
[47.99250793 129.11297607]
[42.23687363 114.68895721]
[40.40295029 99.26766205]
[42.61525726 83.89609528]
[48.72359085 69.61786652]
[58.31323242 57.40237045]
[70.73311615 48.07896423]
[65.07033539 34.18893433]
[59.40754700 20.29890823]
[53.74475861 6.40888166]
[48.08197403 -7.48114538]
[43.10213089 -11.83001709]
[41.33184433 -17.23030472]
[42.46417236 -21.87001228]
[37.21745300 -35.92248154]
[31.97073555 -49.97495270]
[26.72401810 -64.02742767]
[21.47729874 -78.07989502]
[6.89425898 -74.49500275]
[-8.00636101 -72.62737274]
[-23.02304840 -72.50226593]
[-37.95271683 -74.12137604]
[-52.59346008 -77.46279907]
[-66.74728394 -82.48134613]
[-80.22276306 -89.10916138]
[-92.83766937 -97.25659180]
[-104.42139435 -106.81346893]
[-114.81728363 -117.65053558]
[-123.88474274 -129.62123108]
[-131.50114441 -142.56369019]
[-137.56349182 -156.30284119]
[-141.98977661 -170.65290833]
[-144.72016907 -185.41981506]
[-145.71772766 -200.40385437]
[-144.96896362 -215.40238953]
[-142.48399353 -230.21257019]
[-138.29644775 -244.63410950]
[-132.46293640 -258.47198486]
[-125.06235504 -271.53903198]
[-116.19479370 -283.65856934]
[-105.98017120 -294.66665649]
[-94.55663300 -304.41442871]
[-82.07867432 -312.77008057]
[-68.71502686 -319.62060547]
[-54.64643478 -324.87335205]
[-40.06315613 -328.45727539]
[-25.16241264 -330.32388306]
[-10.14571762 -330.44799805]
[4.78384352 -328.82791138]
[19.42436600 -325.48550415]
[33.57785034 -320.46600342]
[47.05289459 -313.83728027]
[59.66725540 -305.68902588]
[71.25034332 -296.13137817]
[81.64550781 -285.29360962]
[90.71216583 -273.32229614]
[98.32770538 -260.37933350]
[104.38912964 -246.63978577]
[108.81446838 -232.28941345]
[111.54386902 -217.52232361]
[112.54042816 -202.53822327]
[111.79065704 -187.53974915]
[109.30471039 -172.72973633]
[105.11618805 -158.30847168]
[99.28175354 -144.47097778]
[91.88030243 -131.40441895]
[83.01193237 -119.28549194]
[72.79658508 -108.27808380]
[61.37239456 -98.53105927]
[48.89387131 -90.17623901]
[35.52976990 -83.32661438]
[40.77648926 -69.27414703]
[46.02320862 -55.22167206]
[51.26992416 -41.16920090]
[56.51664352 -27.11672974]
[61.97200012 -13.14393139]
[67.63478851 0.74609506]
[73.29757690 14.63612175]
[78.96035767 28.52614975]
[84.62314606 42.41617584]
[98.87158966 40.40913391]
[113.18579865 41.87531281]
[126.73147583 46.72925186]
[138.71913147 54.68804550]
[148.45005798 65.28781891]
[155.35711670 77.91076660]
[159.03770447 91.82117462]
[159.27732849 106.20828247]
[156.06199646 120.23354340]
[149.57913208 133.07949829]
[140.20657349 143.99745178]
[128.49061584 152.35102844]
[133.94596863 166.32382202]
[139.40132141 180.29661560]
[144.85667419 194.26940918]
[150.31204224 208.24221802]
[155.76739502 222.21501160]
[161.22274780 236.18780518]
[175.86231995 247.35762024]
[172.54122925 264.58950806]
[178.20401001 278.47952271]
[183.86679077 292.36953735]
[189.52958679 306.25958252]
[203.77563477 301.54544067]
[218.30741882 297.80377197]
[233.05867004 295.05172729]
[247.96203613 293.30178833]
[262.94955444 292.56198120]
[277.95281982 292.83566284]
[292.90338135 294.12161255]
[307.73303223 296.41390991]
[322.37408447 299.70214844]
[336.75973511 303.97131348]
[350.82437134 309.20187378]
[364.50381470 315.37005615]
[377.73562622 322.44763184]
[390.45944214 330.40234375]
[402.61718750 339.19790649]
[414.15344238 348.79415894]
[425.01550293 359.14733887]
[435.15386963 370.21017456]
[444.52221680 381.93225098]
[453.07788086 394.26000977]
[460.78173828 407.13726807]
[467.59869385 420.50521851]
[473.49761963 434.30285645]
[478.45162964 448.46728516]
[482.43804932 462.93383789]
[485.43878174 477.63653564]
[487.44006348 492.50823975]
[488.43280029 507.48110962]
[488.41247559 522.48687744]
[487.37911987 537.45703125]
[485.33752441 552.32324219]
[482.29693604 567.01770020]
[478.27127075 581.47338867]
[473.27886963 595.62432861]
[467.34255981 609.40594482]
[460.48937988 622.75537109]
[452.75061035 635.61169434]
[444.16156006 647.91619873]
[434.76144409 659.61279297]
[424.59313965 670.64813232]
[413.70303345 680.97180176]
[402.14080811 690.53674316]
[389.95922852 699.29931641]
[377.21389771 707.21948242]
[363.96292114 714.26116943]
[350.26681519 720.39221191]
[336.18804932 725.58459473]
[321.79086304 729.81475830]
[307.14096069 733.06323242]
[292.30514526 735.31536865]
[277.35116577 736.56072998]
[262.34719849 736.79370117]
[247.36175537 736.01330566]
[232.46316528 734.22296143]
[217.71945190 731.43090820]
[203.19786072 727.64984131]
[188.96464539 722.89709473]
[175.08477783 717.19427490]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 152]
[34 151]
[35 150]
[36 149]
[39 147]
[40 146]
[41 145]
[42 144]
[43 143]
[44 142]
[45 141]
[56 129]
[57 128]
[58 127]
[59 126]
[60 125]
[63 124]
[64 123]
[65 122]
[66 121]
[67 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
