%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[114.46765900 673.44989014]
[101.62296295 681.26080322]
[87.69159698 686.90997314]
[73.03440857 690.25109863]
[58.03107071 691.19763184]
[43.07019806 689.72509766]
[28.53931046 685.87158203]
[14.81479549 679.73693848]
[2.25215197 671.48004150]
[-8.82321835 661.31481934]
[-18.12443542 649.50451660]
[-25.41057777 636.35504150]
[-30.49291611 622.20703125]
[-33.23980331 607.42694092]
[-33.58008957 592.39764404]
[-31.50496483 577.50836182]
[-27.06817436 563.14483643]
[-20.38464165 549.67907715]
[-11.62749004 537.45989990]
[-1.02354884 526.80377197]
[11.15251446 517.98681641]
[24.58530998 511.23727417]
[38.92689896 506.73004150]
[53.80579376 504.58187866]
[68.83660126 504.84838867]
[71.50239563 490.08718872]
[74.16819000 475.32595825]
[76.83398438 460.56475830]
[79.49977875 445.80352783]
[82.16557312 431.04232788]
[84.83137512 416.28109741]
[87.49716949 401.51986694]
[90.16296387 386.75866699]
[91.05577850 371.78524780]
[90.16296387 356.81185913]
[89.27014923 341.83843994]
[88.37733459 326.86505127]
[87.48451233 311.89163208]
[86.59169769 296.91821289]
[85.69888306 281.94482422]
[84.80606842 266.97140503]
[77.72836304 280.19662476]
[65.93354034 289.46389771]
[51.40924072 293.21151733]
[36.60306168 290.80795288]
[24.01010323 282.65826416]
[15.75250244 270.13580322]
[13.22180843 255.35083008]
[16.84448814 240.79486084]
[26.01005745 228.92085266]
[39.17395401 221.72975159]
[54.11783218 220.43341064]
[68.32338715 225.25028992]
[79.39672852 235.36863708]
[85.47216034 249.08497620]
[87.47617340 234.21945190]
[89.48018646 219.35392761]
[91.48419952 204.48838806]
[93.48821259 189.62286377]
[95.49222565 174.75733948]
[96.05043793 159.76773071]
[95.15762329 144.79432678]
[94.26480103 129.82090759]
[93.37198639 114.84751129]
[83.77674103 101.08860016]
[91.44776917 86.17110443]
[90.33211517 71.21265411]
[89.21646881 56.25419617]
[76.18445587 48.04001617]
[70.55387115 33.89258194]
[74.28928375 19.31483650]
[85.75514984 9.84530926]
[84.63949585 -5.11314440]
[83.52384949 -20.07159805]
[82.40820312 -35.03005219]
[79.83724976 -38.52922058]
[78.63448334 -42.28659821]
[78.71307373 -45.84035873]
[79.84510803 -48.80432892]
[81.69853210 -50.90740967]
[81.47520447 -65.90574646]
[81.25187683 -80.90408325]
[79.80245972 -95.83389282]
[77.13666534 -110.59510803]
[74.47087097 -125.35633087]
[71.80506897 -140.11755371]
[56.75572968 -140.79945374]
[42.23558044 -144.81356812]
[28.97295570 -151.95852661]
[17.63310051 -161.87596130]
[8.78481579 -174.06840515]
[2.87192917 -187.92428589]
[0.19102824 -202.74861145]
[0.87658578 -217.79779053]
[4.89421463 -232.31695557]
[12.04239178 -245.57785034]
[21.96256828 -256.91531372]
[34.15715408 -265.76062012]
[48.01446915 -271.67016602]
[62.83943939 -274.34747314]
[77.88845062 -273.65826416]
[92.40664673 -269.63711548]
[105.66580963 -262.48571777]
[117.00086212 -252.56280518]
[125.84323120 -240.36608887]
[131.74940491 -226.50733948]
[134.42312622 -211.68171692]
[133.73027039 -196.63287354]
[129.70561218 -182.11564636]
[122.55100250 -168.85821533]
[112.62533569 -157.52557373]
[100.42646790 -148.68615723]
[86.56629181 -142.78334045]
[89.23208618 -128.02212524]
[91.89788055 -113.26091003]
[94.56367493 -98.49968719]
[100.68534851 -112.19367218]
[112.41240692 -121.54653931]
[127.12499237 -124.46884155]
[141.53627014 -120.30772400]
[152.42674255 -109.99279785]
[157.36343384 -95.82843781]
[155.24346924 -80.97899628]
[146.54048157 -68.76188660]
[133.19871521 -61.90643311]
[118.19875336 -61.94416428]
[104.89164734 -68.86665344]
[96.25021362 -81.12741089]
[96.47354126 -66.12907410]
[96.69686890 -51.13073730]
[97.36665344 -36.14569855]
[98.48229980 -21.18724632]
[99.59795380 -6.22879314]
[100.71360016 8.72966003]
[113.45732880 16.39356041]
[119.31389618 30.25590515]
[115.84425354 45.08206558]
[104.17491913 55.13854980]
[105.29057312 70.09700012]
[106.40621948 85.05545807]
[114.75726318 93.17341614]
[115.53700256 104.79380035]
[108.34539032 113.95469666]
[109.23821259 128.92810059]
[110.13102722 143.90150452]
[111.02384186 158.87490845]
[118.10154724 145.64970398]
[129.89636230 136.38244629]
[144.42066956 132.63481140]
[159.22685242 135.03836060]
[171.81980896 143.18804932]
[180.07740784 155.71051025]
[182.60809326 170.49548340]
[178.98542786 185.05145264]
[169.81985474 196.92547607]
[156.65596008 204.11657715]
[141.71208191 205.41290283]
[127.50652313 200.59603882]
[116.43318176 190.47769165]
[110.35774994 176.76135254]
[108.35373688 191.62687683]
[106.34972382 206.49240112]
[104.34571075 221.35794067]
[102.34169769 236.22346497]
[100.33768463 251.08898926]
[99.77947235 266.07861328]
[100.67228699 281.05200195]
[101.56510925 296.02542114]
[102.45792389 310.99880981]
[103.35073853 325.97222900]
[104.24355316 340.94561768]
[105.13636780 355.91903687]
[106.02918243 370.89242554]
[112.49298096 357.35659790]
[123.14789581 346.79852295]
[136.74221802 340.45858765]
[151.67887878 339.08163452]
[166.20314026 342.82937622]
[178.60871887 351.26156616]
[187.43821716 363.38757324]
[191.65434265 377.78283691]
[190.76179504 392.75628662]
[184.86543274 406.54876709]
[174.65794373 417.54000854]
[161.33851624 424.43875122]
[146.47187805 426.43453979]
[131.80456543 423.29290771]
[119.05966187 415.38293457]
[109.73444366 403.63388062]
[104.92417908 389.42446899]
[102.25838470 404.18566895]
[99.59259033 418.94689941]
[96.92679596 433.70809937]
[94.26100159 448.46932983]
[91.59519958 463.23052979]
[88.92940521 477.99176025]
[86.26361084 492.75299072]
[83.59781647 507.51419067]
[97.77237701 512.52197266]
[110.96000671 519.73883057]
[122.81911469 528.97772217]
[133.04251099 539.99945068]
[141.36541748 552.51849365]
[147.57220459 566.21051025]
[151.50215149 580.72088623]
[153.05342102 595.67382812]
[152.18585205 610.68194580]
[148.92190552 625.35650635]
[143.34614563 639.31744385]
[135.60298157 652.20306396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 198]
[26 197]
[27 196]
[28 195]
[29 194]
[30 193]
[31 192]
[32 191]
[33 190]
[34 173]
[35 172]
[36 171]
[37 170]
[38 169]
[39 168]
[40 167]
[41 166]
[55 165]
[56 164]
[57 163]
[58 162]
[59 161]
[60 160]
[61 146]
[62 145]
[63 144]
[64 143]
[66 140]
[67 139]
[68 138]
[72 134]
[73 133]
[74 132]
[75 131]
[80 130]
[81 129]
[82 128]
[83 116]
[84 115]
[85 114]
[86 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
