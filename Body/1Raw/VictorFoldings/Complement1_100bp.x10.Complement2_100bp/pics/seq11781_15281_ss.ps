%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUGxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[44.40874100 600.37280273]
[33.62633133 610.81616211]
[21.92631149 620.22015381]
[9.40850925 628.50439453]
[-3.82027912 635.59832764]
[-17.64718628 641.44140625]
[-31.95424461 645.98370361]
[-46.61938477 649.18658447]
[-61.51749420 651.02258301]
[-76.52145386 651.47619629]
[-91.50326538 650.54339600]
[-106.33509827 648.23223877]
[-120.89041138 644.56243896]
[-135.04501343 639.56530762]
[-148.67816162 633.28338623]
[-161.67352295 625.77038574]
[-173.92021179 617.09033203]
[-185.31376648 607.31732178]
[-195.75697327 596.53479004]
[-205.16072083 584.83459473]
[-213.44479370 572.31665039]
[-220.53849792 559.08776855]
[-226.38133240 545.26074219]
[-230.92341614 530.95361328]
[-234.12602234 516.28839111]
[-235.96182251 501.39025879]
[-236.41513062 486.38629150]
[-235.48211670 471.40451050]
[-233.17071533 456.57272339]
[-229.50065613 442.01745605]
[-224.50326538 427.86294556]
[-218.22114563 414.22988892]
[-210.70791626 401.23468018]
[-202.02767944 388.98809814]
[-192.25448608 377.59472656]
[-181.47172546 367.15170288]
[-169.77139282 357.74813843]
[-157.25332642 349.46426392]
[-144.02429199 342.37078857]
[-130.19718933 336.52819824]
[-115.88998413 331.98635864]
[-101.22473145 328.78399658]
[-86.32656860 326.94842529]
[-71.32258606 326.49536133]
[-56.34080887 327.42861938]
[-41.50905609 329.74026489]
[-26.95386696 333.41058350]
[-12.79942417 338.40823364]
[-6.52206373 324.78491211]
[-0.24470304 311.16159058]
[6.03265762 297.53826904]
[12.31001854 283.91494751]
[18.58737946 270.29162598]
[9.24854374 255.30305481]
[10.79016781 237.55271912]
[22.78304291 224.16427612]
[40.56581879 220.62440491]
[46.43478012 206.82023621]
[52.30374146 193.01605225]
[46.51130295 179.34187317]
[52.26661682 165.25886536]
[66.64862823 159.27593994]
[72.51759338 145.47177124]
[78.38655090 131.66758728]
[84.25551605 117.86341095]
[90.12447357 104.05923462]
[94.52547455 89.71939087]
[89.58714294 74.68863678]
[99.62806702 63.68731689]
[102.51333618 48.96742249]
[105.39861298 34.24753189]
[108.28388214 19.52764130]
[111.16915894 4.80775023]
[114.05442810 -9.91214085]
[116.93970490 -24.63203239]
[110.56934357 -41.90918732]
[122.61052704 -54.67542267]
[125.27632141 -69.43663788]
[123.72186279 -78.43782806]
[128.09326172 -84.39707947]
[130.97853088 -99.11696625]
[116.60681915 -103.45659637]
[102.73860931 -109.20563507]
[89.51174927 -116.30695343]
[77.05768585 -124.68997192]
[65.50020599 -134.27137756]
[54.95416641 -144.95593262]
[45.52439117 -156.63745117]
[37.30459213 -169.19982910]
[30.37646484 -182.51823425]
[24.80887032 -196.46026611]
[20.65713882 -210.88739014]
[17.96253586 -225.65618896]
[16.75184059 -240.61991882]
[17.03708839 -255.62982178]
[18.81544113 -270.53674316]
[22.06922531 -285.19250488]
[26.76610374 -299.45144653]
[32.85939407 -313.17190552]
[40.28853989 -326.21743774]
[48.97969818 -338.45846558]
[58.84649658 -349.77325439]
[69.79087067 -360.04940796]
[81.70404053 -369.18478394]
[94.46762085 -377.08856201]
[107.95473480 -383.68222046]
[122.03135681 -388.90020752]
[136.55758667 -392.69064331]
[151.38902283 -395.01589966]
[166.37829590 -395.85284424]
[181.37640381 -395.19317627]
[196.23431396 -393.04339600]
[210.80432129 -389.42495728]
[224.94165039 -384.37374878]
[238.50576782 -377.94000244]
[251.36189270 -370.18765259]
[263.38223267 -361.19375610]
[274.44732666 -351.04769897]
[284.44720459 -339.85034180]
[293.28244019 -327.71292114]
[300.86529541 -314.75610352]
[307.12036133 -301.10864258]
[311.98547363 -286.90621948]
[315.41229248 -272.28994751]
[317.36676025 -257.40509033]
[317.82940674 -242.39961243]
[316.79571533 -227.42262268]
[314.27587891 -212.62298584]
[310.29501343 -198.14779663]
[304.89260864 -184.14091492]
[298.12240601 -170.74154663]
[290.05169678 -158.08287048]
[280.76068115 -146.29069519]
[270.34170532 -135.48220825]
[258.89828491 -125.76484680]
[246.54418945 -117.23519135]
[233.40220642 -109.97800446]
[219.60293579 -104.06541443]
[205.28352356 -99.55619049]
[190.58628845 -96.49514771]
[175.65730286 -94.91271210]
[160.64495850 -94.82460022]
[145.69842529 -96.23169708]
[142.81315613 -81.51180267]
[140.03753662 -66.77084351]
[137.37174988 -52.00962448]
[144.00909424 -41.89664841]
[141.90898132 -29.57701874]
[131.65959167 -21.74675941]
[128.77432251 -7.02686834]
[125.88904572 7.69302273]
[123.00377655 22.41291428]
[120.11849976 37.13280487]
[117.23323059 51.85269547]
[114.34796143 66.57258606]
[119.49266052 80.55047607]
[109.24536133 92.60466003]
[119.20774078 81.39078522]
[132.66941833 74.77389526]
[147.63343811 73.73556519]
[161.87997437 78.42983246]
[173.29563904 88.16033173]
[180.18699646 101.48358917]
[181.53173828 116.42319489]
[177.13038635 130.76292419]
[167.63586426 142.37559509]
[154.45660400 149.53851318]
[139.54769897 151.18910217]
[125.12078094 147.08251953]
[113.31600189 137.82794189]
[105.88452911 124.79824066]
[103.92864990 109.92819977]
[98.05969238 123.73237610]
[92.19072723 137.53654480]
[86.32176971 151.34072876]
[80.45281219 165.14489746]
[86.12284088 179.65312195]
[79.97423553 193.56892395]
[66.10791779 198.88502502]
[60.23895645 212.68919373]
[54.36999512 226.49337769]
[62.15904236 236.27082825]
[65.03524780 248.36196899]
[62.51249313 260.45806885]
[55.12960052 270.27609253]
[44.33668900 275.98977661]
[32.21069336 276.56900024]
[25.93333435 290.19232178]
[19.65597343 303.81564331]
[13.37861347 317.43893433]
[7.10125256 331.06225586]
[0.82389170 344.68557739]
[13.81949997 352.19815063]
[26.06648827 360.87777710]
[37.46036911 370.65039062]
[47.90393066 381.43264771]
[57.30807495 393.13250732]
[65.59255981 405.65017700]
[72.68670654 418.87884521]
[78.52999115 432.70565796]
[83.07256317 447.01263428]
[86.27565002 461.67770386]
[88.11194611 476.57580566]
[88.56576538 491.57974243]
[87.63324738 506.56158447]
[85.32234192 521.39343262]
[81.65277100 535.94879150]
[76.65583801 550.10351562]
[70.37417603 563.73675537]
[62.86138153 576.73223877]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 192]
[49 191]
[50 190]
[51 189]
[52 188]
[53 187]
[57 181]
[58 180]
[59 179]
[62 176]
[63 175]
[64 174]
[65 173]
[66 172]
[67 157]
[69 155]
[70 154]
[71 153]
[72 152]
[73 151]
[74 150]
[75 149]
[77 146]
[78 145]
[80 144]
[81 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
