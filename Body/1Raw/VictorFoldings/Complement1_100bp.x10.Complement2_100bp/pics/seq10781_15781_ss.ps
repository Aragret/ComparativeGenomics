%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[97.02337646 373.02416992]
[91.75164795 358.97402954]
[87.50749207 344.58010864]
[84.31303406 329.91748047]
[82.18493652 315.06253052]
[81.13428497 300.09277344]
[81.16656494 285.08621216]
[82.28160858 270.12109375]
[84.47359467 255.27546692]
[87.73110199 240.62670898]
[92.03714752 226.25117493]
[97.36927795 212.22384644]
[103.69969177 198.61782837]
[110.99539185 185.50407410]
[119.21833038 172.95094299]
[128.32565308 161.02389526]
[138.26986694 149.78511047]
[127.78236389 139.06072998]
[113.35202789 135.37091064]
[109.23525238 120.09470367]
[98.74775696 109.37032318]
[93.65214539 108.12584686]
[89.61651611 104.11498260]
[88.11358643 98.16703033]
[77.95004272 87.13515472]
[67.62337494 76.25582123]
[57.13587189 65.53144073]
[46.64836884 54.80706024]
[36.16086960 44.08268356]
[25.59382057 33.43667221]
[14.94781208 22.86962509]
[4.30180311 12.30257797]
[-6.34420538 1.73553002]
[-16.99021339 -8.83151817]
[-28.27095604 1.06421518]
[-40.20753860 10.15809441]
[-52.74308014 18.40678215]
[-65.81784058 25.77097130]
[-79.36951447 32.21556854]
[-93.33351898 37.70985794]
[-107.64331818 42.22765732]
[-122.23069763 45.74744034]
[-137.02615356 48.25243378]
[-151.95919800 49.73069382]
[-166.95863342 50.17518234]
[-181.95298767 49.58377838]
[-196.87081909 47.95930481]
[-211.64103699 45.30949402]
[-226.19323730 41.64698029]
[-240.45808411 36.98921585]
[-254.36759949 31.35839653]
[-267.85549927 24.78135681]
[-280.85748291 17.28944016]
[-293.31161499 8.91834831]
[-305.15853882 -0.29202640]
[-316.34179688 -10.29779148]
[-326.80810547 -21.05126572]
[-336.50756836 -32.50120163]
[-345.39398193 -44.59303665]
[-353.42498779 -57.26914215]
[-360.56231689 -70.46911621]
[-366.77194214 -84.13005066]
[-372.02429199 -98.18685150]
[-376.29431152 -112.57251740]
[-379.56167603 -127.21850586]
[-381.81082153 -142.05502319]
[-383.03100586 -157.01135254]
[-383.21640015 -172.01622009]
[-382.36618042 -186.99813843]
[-380.48434448 -201.88569641]
[-377.57989502 -216.60795593]
[-373.66665649 -231.09474182]
[-368.76324463 -245.27703857]
[-362.89309692 -259.08724976]
[-356.08413696 -272.45956421]
[-348.36880493 -285.33023071]
[-339.78390503 -297.63796997]
[-330.37033081 -309.32409668]
[-320.17297363 -320.33291626]
[-309.24035645 -330.61196899]
[-297.62463379 -340.11227417]
[-285.38116455 -348.78854370]
[-272.56826782 -356.59945679]
[-259.24700928 -363.50778198]
[-245.48089600 -369.48059082]
[-231.33549500 -374.48944092]
[-216.87823486 -378.51043701]
[-202.17802429 -381.52441406]
[-187.30488586 -383.51702881]
[-172.32971191 -384.47875977]
[-157.32386780 -384.40505981]
[-142.35887146 -383.29623413]
[-127.50602722 -381.15762329]
[-112.83612061 -377.99935913]
[-98.41905975 -373.83654785]
[-84.32355499 -368.68899536]
[-70.61676788 -362.58123779]
[-57.36402512 -355.54238892]
[-44.62848282 -347.60595703]
[-32.47082901 -338.80981445]
[-20.94900322 -329.19586182]
[-10.11791229 -318.80990601]
[-0.02917056 -307.70144653]
[9.26914310 -295.92343140]
[17.73271751 -283.53195190]
[25.32122040 -270.58609009]
[31.99848747 -257.14752197]
[37.73270035 -243.28031921]
[42.49652863 -229.05053711]
[46.26727295 -214.52600098]
[49.02696609 -199.77592468]
[50.76245117 -184.87060547]
[51.46546555 -169.88105774]
[51.13265228 -154.87872314]
[49.76559830 -139.93510437]
[47.37081909 -125.12140656]
[43.95972824 -110.50822449]
[39.54858398 -96.16519165]
[34.15840149 -82.16067505]
[27.81486893 -68.56140137]
[20.54821777 -55.43217850]
[12.39307880 -42.83557510]
[3.38831306 -30.83162498]
[-6.42316675 -19.47752571]
[4.22284222 -8.91047859]
[14.86885071 1.65656900]
[25.51486015 12.22361660]
[36.16086960 22.79066467]
[43.12264633 25.27168083]
[46.88524628 33.59518051]
[57.37274933 44.31956100]
[67.86025238 55.04394150]
[78.34774780 65.76831818]
[83.02857208 66.71646118]
[87.16346741 70.61513519]
[88.98191833 76.97161102]
[99.14546204 88.00348663]
[109.47212982 98.88282013]
[119.95963287 109.60720062]
[135.14010620 114.06408691]
[138.50674438 128.57322693]
[148.99424744 139.29760742]
[160.45230103 129.60685730]
[172.57975769 120.76815796]
[185.31338501 112.82759857]
[198.58679199 105.82657623]
[212.33078003 99.80158234]
[226.47369385 94.78404236]
[240.94180298 90.80010223]
[255.65966797 87.87053680]
[270.55053711 86.01062775]
[285.53683472 85.23005676]
[300.54034424 85.53290558]
[315.48294067 86.91759491]
[330.28662109 89.37689972]
[344.87426758 92.89800262]
[359.16983032 97.46254730]
[373.09875488 103.04673004]
[386.58840942 109.62143707]
[399.56848145 117.15239716]
[411.97131348 125.60034180]
[423.73220825 134.92123413]
[434.78988647 145.06646729]
[445.08663940 155.98315430]
[454.56884766 167.61437988]
[463.18707275 179.89950562]
[470.89633179 192.77447510]
[477.65646362 206.17218018]
[483.43222046 220.02275085]
[488.19351196 234.25398254]
[491.91546631 248.79168701]
[494.57873535 263.56005859]
[496.16937256 278.48211670]
[496.67913818 293.48004150]
[496.10531616 308.47564697]
[494.45095825 323.39077759]
[491.72467041 338.14764404]
[487.94067383 352.66931152]
[483.11865234 366.88009644]
[477.28381348 380.70587158]
[470.46652222 394.07458496]
[462.70233154 406.91650391]
[454.03173828 419.16470337]
[444.49993896 430.75534058]
[434.15664673 441.62796021]
[423.05575562 451.72589111]
[411.25515747 460.99645996]
[398.81637573 469.39135742]
[385.80426025 476.86682129]
[372.28665161 483.38385010]
[358.33401489 488.90850830]
[344.01910400 493.41195679]
[329.41653442 496.87072754]
[314.60247803 499.26681519]
[299.65411377 500.58767700]
[284.64944458 500.82644653]
[269.66662598 499.98187256]
[254.78381348 498.05841064]
[240.07859802 495.06600952]
[225.62763977 491.02032471]
[211.50628662 485.94241333]
[197.78814697 479.85879517]
[184.54476929 472.80114746]
[171.84515381 464.80627441]
[159.75555420 455.91589355]
[148.33898926 446.17630005]
[137.65496826 435.63830566]
[127.75920105 424.35681152]
[118.70327759 412.39071655]
[110.53441620 399.80230713]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 142]
[18 141]
[20 139]
[21 138]
[24 137]
[25 136]
[26 133]
[27 132]
[28 131]
[29 130]
[30 128]
[31 127]
[32 126]
[33 125]
[34 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
