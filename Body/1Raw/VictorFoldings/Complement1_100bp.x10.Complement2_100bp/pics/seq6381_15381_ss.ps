%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[59.53765488 660.09167480]
[44.89529800 663.36688232]
[30.08856964 665.79309082]
[15.16665459 667.36224365]
[0.17912357 668.06909180]
[-14.82423687 667.91125488]
[-29.79358482 666.88934326]
[-44.67919540 665.00671387]
[-59.43162155 662.26965332]
[-74.00185394 658.68719482]
[-88.34149170 654.27124023]
[-102.40290070 649.03649902]
[-116.13936615 643.00030518]
[-129.50526428 636.18280029]
[-142.45619202 628.60656738]
[-154.94911194 620.29681396]
[-166.94255066 611.28106689]
[-178.39665222 601.58935547]
[-189.27337646 591.25384521]
[-199.53657532 580.30889893]
[-209.15216064 568.79083252]
[-218.08819580 556.73791504]
[-226.31500244 544.19018555]
[-233.80523682 531.18933105]
[-240.53402710 517.77850342]
[-246.47900391 504.00234985]
[-251.62045288 489.90655518]
[-255.94125366 475.53799438]
[-259.42709351 460.94433594]
[-262.06634521 446.17410278]
[-263.85028076 431.27633667]
[-264.77297974 416.30053711]
[-264.83132935 401.29644775]
[-264.02517700 386.31393433]
[-262.35720825 371.40274048]
[-259.83291626 356.61242676]
[-256.46072388 341.99209595]
[-252.25183105 327.59033203]
[-247.22021484 313.45495605]
[-241.38256836 299.63296509]
[-234.75831604 286.17022705]
[-227.36946106 273.11151123]
[-219.24052429 260.50015259]
[-210.39851379 248.37808228]
[-200.87283325 236.78555298]
[-190.69508362 225.76106262]
[-179.89910889 215.34124756]
[-168.52075195 205.56072998]
[-156.59780884 196.45198059]
[-144.16990662 188.04525757]
[-131.27832031 180.36849976]
[-117.96585846 173.44721985]
[-104.27676392 167.30438232]
[-90.25650787 161.96040344]
[-75.95166016 157.43304443]
[-61.40973663 153.73733521]
[-46.67905426 150.88554382]
[-31.80854034 148.88717651]
[-16.84759331 147.74884033]
[-1.84591508 147.47431946]
[13.14666176 148.06454468]
[28.08033180 149.51753235]
[42.90548706 151.82847595]
[57.57288361 154.98968506]
[72.03379059 158.99067688]
[76.85978699 144.78822327]
[81.68578339 130.58575439]
[71.42488861 121.31577301]
[65.46338654 108.83863068]
[64.69823456 95.03163147]
[69.24456787 81.97216797]
[78.41834259 71.62516785]
[90.83927917 65.54741669]
[104.63853455 64.65338135]
[109.67544556 50.52435303]
[114.71236420 36.39532471]
[119.74928284 22.26629639]
[124.57527924 8.06383991]
[129.18928528 -6.20889378]
[133.80329895 -20.48162651]
[138.41731262 -34.75436020]
[124.59891510 -40.61521912]
[111.35258484 -47.67442703]
[98.78199005 -55.87673187]
[86.98551941 -65.15793610]
[76.05548859 -75.44541168]
[66.07744598 -86.65863037]
[57.12948608 -98.70983887]
[49.28163910 -111.50471497]
[42.59532166 -124.94313049]
[37.12287521 -138.91989136]
[32.90711975 -153.32562256]
[29.98105240 -168.04756165]
[28.36757469 -182.97052002]
[28.07931709 -197.97766113]
[29.11853218 -212.95156860]
[31.47708702 -227.77502441]
[35.13652420 -242.33201599]
[40.06819916 -256.50863647]
[46.23352051 -270.19387817]
[53.58422852 -283.28070068]
[62.06279755 -295.66662598]
[71.60286713 -307.25476074]
[82.12977600 -317.95437622]
[93.56113434 -327.68176270]
[105.80747223 -336.36074829]
[118.77294159 -343.92343140]
[132.35606384 -350.31060791]
[146.45054626 -355.47232056]
[160.94607544 -359.36816406]
[175.72918701 -361.96759033]
[190.68418884 -363.25033569]
[205.69404602 -363.20629883]
[220.64126587 -361.83587646]
[235.40888977 -359.14974976]
[249.88130188 -355.16897583]
[263.94525146 -349.92468262]
[277.49069214 -343.45791626]
[290.41159058 -335.81930542]
[302.60678101 -327.06863403]
[313.98089600 -317.27435303]
[324.44485474 -306.51318359]
[333.91677856 -294.86929321]
[342.32257080 -282.43383789]
[349.59637451 -269.30413818]
[355.68130493 -255.58293152]
[360.52975464 -241.37763977]
[364.10372925 -226.79942322]
[366.37527466 -211.96238708]
[367.32666016 -196.98265076]
[366.95037842 -181.97744751]
[365.24938965 -167.06422424]
[362.23699951 -152.35969543]
[357.93682861 -137.97894287]
[352.38247681 -124.03452301]
[345.61746216 -110.63556671]
[337.69467163 -97.88694000]
[328.67617798 -85.88842773]
[318.63253784 -74.73393250]
[307.64233398 -64.51074982]
[295.79162598 -55.29890442]
[283.17315674 -47.17047882]
[269.88562012 -40.18909454]
[256.03311157 -34.40939331]
[241.72395325 -29.87660980]
[227.07020569 -26.62621880]
[212.18652344 -24.68366051]
[197.18939209 -24.06413841]
[182.19619751 -24.77250099]
[167.32427979 -26.80320168]
[152.69003296 -30.14035034]
[148.07603455 -15.86761761]
[143.46202087 -1.59488428]
[138.84800720 12.67784882]
[140.18638611 17.26236725]
[138.65899658 22.73631668]
[133.87831116 27.30321121]
[128.84140015 41.43223953]
[123.80447388 55.56127167]
[118.76756287 69.69029999]
[130.09172058 80.88488007]
[135.41232300 95.89308167]
[133.66787720 111.72064972]
[125.20640564 125.20984650]
[111.71604919 133.66947937]
[95.88824463 135.41175842]
[91.06224060 149.61421204]
[86.23624420 163.81666565]
[100.14100647 169.45434570]
[113.69786835 175.88374329]
[126.86180115 183.08349609]
[139.58908081 191.02970886]
[151.83741760 199.69595337]
[163.56613159 209.05346680]
[174.73626709 219.07113647]
[185.31069946 229.71571350]
[195.25431824 240.95182800]
[204.53407288 252.74215698]
[213.11915588 265.04751587]
[220.98104858 277.82705688]
[228.09362793 291.03829956]
[234.43324280 304.63739014]
[239.97888184 318.57910156]
[244.71208191 332.81716919]
[248.61714172 347.30426025]
[251.68107605 361.99230957]
[253.89372253 376.83242798]
[255.24771118 391.77542114]
[255.73855591 406.77157593]
[255.36463928 421.77108765]
[254.12716675 436.72418213]
[252.03028870 451.58111572]
[249.08094788 466.29257202]
[245.28894043 480.80969238]
[240.66688538 495.08422852]
[235.23010254 509.06875610]
[228.99668884 522.71685791]
[221.98731995 535.98315430]
[214.22529602 548.82354736]
[205.73640442 561.19549561]
[196.54882812 573.05780029]
[186.69311523 584.37109375]
[176.20198059 595.09777832]
[165.11029053 605.20220947]
[153.45487976 614.65087891]
[141.27447510 623.41235352]
[128.60952759 631.45751953]
[115.50211334 638.75970459]
[101.99578857 645.29455566]
[88.13539886 651.04046631]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 168]
[66 167]
[67 166]
[74 160]
[75 159]
[76 158]
[77 157]
[78 154]
[79 153]
[80 152]
[81 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
