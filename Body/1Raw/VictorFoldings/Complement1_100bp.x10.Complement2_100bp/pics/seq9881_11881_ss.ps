%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[141.56086731 561.40081787]
[130.31176758 571.37908936]
[117.53805542 579.31256104]
[103.60724640 584.97302246]
[88.92017365 588.19757080]
[73.89939117 588.89343262]
[58.97709274 587.04058838]
[44.58261871 582.69238281]
[31.13012314 575.97387695]
[19.00666618 567.07836914]
[8.56106091 556.26184082]
[0.09384944 543.83551025]
[-6.15135002 530.15686035]
[-9.99485111 515.61944580]
[-11.32606792 500.64160156]
[-10.10669899 485.65423584]
[-6.37182760 471.08856201]
[-0.22891432 457.36367798]
[8.14529800 444.87445068]
[18.50986481 433.98025513]
[30.56657982 424.99450684]
[43.96854401 418.17575073]
[58.33015823 413.72018433]
[73.23821259 411.75601196]
[88.26376343 412.33972168]
[91.36787415 397.66442871]
[94.47198486 382.98913574]
[97.57609558 368.31381226]
[92.64006805 354.26089478]
[103.06570435 342.36059570]
[106.16981506 327.68530273]
[109.27392578 313.01000977]
[110.16674042 298.03659058]
[108.82850647 283.09640503]
[107.49027252 268.15621948]
[98.64835358 256.16998291]
[105.12361145 241.73455811]
[93.56482697 232.41091919]
[91.99484253 217.27851868]
[101.85269928 205.21781921]
[90.29392242 195.89418030]
[88.72393799 180.76177979]
[98.58179474 168.70108032]
[97.24356079 153.76089478]
[95.90532684 138.82070923]
[94.56709290 123.88052368]
[93.22885895 108.94033813]
[83.67834473 120.50700378]
[68.95066071 123.35221100]
[55.77909470 116.17517090]
[50.18551636 102.25713348]
[54.72723389 87.96122742]
[67.32782745 79.82335663]
[82.22648621 81.56404877]
[92.61249542 92.38916779]
[92.83582306 77.39083099]
[93.05915070 62.39249039]
[93.28247833 47.39415359]
[93.39414215 32.39456940]
[92.94754028 17.40122032]
[92.05472565 2.42781472]
[91.16191101 -12.54559135]
[80.66797638 -27.67698097]
[89.12857819 -43.05180359]
[88.01293182 -58.01025772]
[86.89728546 -72.96871185]
[85.78163147 -87.92716217]
[84.66598511 -102.88562012]
[83.55033875 -117.84407043]
[80.14965057 -123.51389313]
[80.12632751 -129.19689941]
[82.63093567 -133.26333618]
[81.96115112 -148.24838257]
[81.29136658 -163.23341370]
[80.62158203 -178.21846008]
[65.32604980 -181.54124451]
[51.41872406 -188.69889832]
[39.84185028 -199.20001221]
[31.37809372 -212.32685852]
[26.59765625 -227.18447876]
[25.81983948 -242.76167297]
[29.09173965 -257.99981689]
[36.18543625 -271.86486816]
[46.61385345 -283.41738892]
[59.66419983 -291.87640381]
[74.44670105 -296.67199707]
[73.55388641 -311.64538574]
[72.66106415 -326.61880493]
[71.76824951 -341.59219360]
[70.87543488 -356.56561279]
[56.01375580 -359.03103638]
[42.07349396 -364.74212646]
[29.75388527 -373.41247559]
[19.67287636 -384.60717773]
[12.33612728 -397.76467896]
[8.11164570 -412.22500610]
[7.21133041 -427.26287842]
[9.68033981 -442.12396240]
[15.39483070 -456.06283569]
[24.06816673 -468.38034058]
[35.26529312 -478.45864868]
[48.42457199 -485.79220581]
[62.88594055 -490.01318359]
[77.92401123 -490.90985107]
[92.78450012 -488.43722534]
[106.72199249 -482.71936035]
[119.03739929 -474.04306030]
[129.11297607 -462.84347534]
[136.44334412 -449.68243408]
[140.66082764 -435.22003174]
[141.55384827 -420.18173218]
[139.07763672 -405.32186890]
[133.35639954 -391.38574219]
[124.67709351 -379.07244873]
[113.47508240 -368.99957275]
[100.31224823 -361.67239380]
[85.84883881 -357.45843506]
[86.74166107 -342.48501587]
[87.63447571 -327.51162720]
[88.52729034 -312.53820801]
[89.42010498 -297.56481934]
[103.57328796 -294.91674805]
[116.68750000 -288.94894409]
[127.99597931 -280.00534058]
[136.83634949 -268.60400391]
[142.68940735 -255.40711975]
[145.20962524 -241.18257141]
[144.24554443 -226.75921631]
[139.84889221 -212.97860718]
[132.27174377 -200.64585876]
[121.95220184 -190.48265076]
[109.48896027 -183.08499146]
[95.60662079 -178.88824463]
[96.27640533 -163.90319824]
[96.94618988 -148.91816711]
[97.61597443 -133.93312073]
[98.50878906 -118.95971680]
[99.62443542 -104.00126648]
[100.74008942 -89.04281616]
[101.85573578 -74.08435822]
[102.97138214 -59.12590790]
[104.08703613 -44.16745377]
[113.04537964 -36.03882599]
[114.09726715 -23.58582497]
[106.13531494 -13.43840694]
[107.02812958 1.53499889]
[107.92094421 16.50840378]
[109.92565155 18.46781158]
[111.27500916 21.33937263]
[111.61769104 24.87744713]
[110.69771576 28.71387482]
[108.39414215 32.39456940]
[111.53764343 39.08338165]
[108.28081512 47.61748123]
[108.05748749 62.61582184]
[107.83415985 77.61415863]
[107.61083221 92.61249542]
[108.16904449 107.60210419]
[109.50727844 122.54228973]
[110.84551239 137.48246765]
[112.18374634 152.42265320]
[113.52198029 167.36283875]
[125.36634064 177.47961426]
[126.51066589 192.65014648]
[116.79288483 203.87957764]
[128.63723755 213.99635315]
[129.78157043 229.16688538]
[120.06379700 240.39633179]
[129.00143433 253.45117188]
[122.43045807 266.81799316]
[123.76869202 281.75817871]
[125.10692596 296.69836426]
[130.71984863 282.78811646]
[139.97914124 270.98703003]
[152.15454102 262.22576904]
[166.28587341 257.19531250]
[181.25868225 256.29238892]
[195.89212036 259.58816528]
[209.03216553 266.82275391]
[219.64253235 277.42559814]
[226.88642883 290.56051636]
[230.19258118 305.19161987]
[229.30024719 320.16506958]
[224.27981567 334.29995728]
[215.52719116 346.48156738]
[203.73266602 355.74920654]
[189.82640076 361.37200928]
[174.90510559 362.90649414]
[160.14550781 360.23165894]
[146.71165466 353.55850220]
[135.66296387 343.41323853]
[127.87078857 330.59597778]
[123.94922638 316.11410522]
[120.84511566 330.78939819]
[117.74100494 345.46472168]
[122.45500183 360.56732178]
[112.25139618 371.41793823]
[109.14728546 386.09323120]
[106.04317474 400.76852417]
[102.93906403 415.44384766]
[116.91406250 420.99429321]
[129.74990845 428.82684326]
[141.07731628 438.71612549]
[150.57035828 450.37762451]
[157.95588684 463.47576904]
[163.02143860 477.63375854]
[165.62124634 492.44418335]
[165.68051147 507.48095703]
[163.19752502 522.31146240]
[158.24374390 536.50891113]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 200]
[26 199]
[27 198]
[28 197]
[30 195]
[31 194]
[32 193]
[33 172]
[34 171]
[35 170]
[37 168]
[40 165]
[43 162]
[44 161]
[45 160]
[46 159]
[47 158]
[55 157]
[56 156]
[57 155]
[58 154]
[59 152]
[60 147]
[61 146]
[62 145]
[64 142]
[65 141]
[66 140]
[67 139]
[68 138]
[69 137]
[72 136]
[73 135]
[74 134]
[75 133]
[86 121]
[87 120]
[88 119]
[89 118]
[90 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
