%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGGxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[136.69306946 468.21148682]
[121.74095154 469.39599609]
[106.75311279 469.97360229]
[91.75417328 469.94335938]
[76.76879120 469.30526733]
[61.82157135 468.06045532]
[46.93707657 466.21087646]
[32.13976669 463.75964355]
[17.45395088 460.71072388]
[2.90375876 457.06918335]
[-11.48690605 452.84097290]
[-25.69439697 448.03305054]
[-39.69537354 442.65328979]
[-53.46683121 436.71057129]
[-66.98614502 430.21463013]
[-80.23110199 423.17614746]
[-93.17993164 415.60671997]
[-105.81137848 407.51870728]
[-118.10466766 398.92547607]
[-130.03962708 389.84109497]
[-141.59661865 380.28048706]
[-152.75666809 370.25939941]
[-163.50144958 359.79428101]
[-173.81329346 348.90231323]
[-183.67526245 337.60140991]
[-193.07115173 325.91012573]
[-201.98551941 313.84765625]
[-210.40373230 301.43386841]
[-218.31196594 288.68908691]
[-225.69720459 275.63430786]
[-232.54731750 262.29098511]
[-238.85107422 248.68098450]
[-244.59808350 234.82670593]
[-249.77893066 220.75091553]
[-254.38508606 206.47674561]
[-258.40899658 192.02761841]
[-261.84402466 177.42729187]
[-264.68453979 162.69975281]
[-266.92590332 147.86920166]
[-268.56439209 132.95999146]
[-269.59735107 117.99663544]
[-270.02304077 103.00371552]
[-269.84082031 88.00585938]
[-269.05090332 73.02770233]
[-267.65466309 58.09386444]
[-265.65438843 43.22887802]
[-263.05331421 28.45716858]
[-259.85574341 13.80300236]
[-256.06695557 -0.70954287]
[-251.69313049 -15.05662251]
[-246.74147034 -29.21466446]
[-241.22013855 -43.16040802]
[-235.13816833 -56.87093735]
[-228.50556946 -70.32373047]
[-221.33323669 -83.49668121]
[-213.63294983 -96.36814880]
[-205.41737366 -108.91698456]
[-196.69999695 -121.12257385]
[-187.49514771 -132.96485901]
[-177.81793213 -144.42437744]
[-167.68428040 -155.48231506]
[-157.11080933 -166.12048340]
[-146.11491394 -176.32142639]
[-134.71464539 -186.06837463]
[-122.92874908 -195.34530640]
[-110.77658081 -204.13699341]
[-98.27810669 -212.42898560]
[-85.45385742 -220.20765686]
[-72.32491302 -227.46023560]
[-58.91283798 -234.17478943]
[-45.23967361 -240.34030151]
[-31.32787704 -245.94662476]
[-17.20030975 -250.98457336]
[-2.88018370 -255.44584656]
[11.60897446 -259.32312012]
[26.24335861 -262.61004639]
[40.99892426 -265.30117798]
[55.85142899 -267.39215088]
[70.77646637 -268.87948608]
[85.74952698 -269.76074219]
[100.74599457 -270.03448486]
[115.74123383 -269.70028687]
[130.71061707 -268.75863647]
[145.62953186 -267.21115112]
[160.47349548 -265.06033325]
[175.21807861 -262.30969238]
[189.83909607 -258.96380615]
[204.31250000 -255.02813721]
[218.61453247 -250.50917053]
[232.72166443 -245.41430664]
[238.38444519 -259.30432129]
[244.04724121 -273.19436646]
[249.71002197 -287.08438110]
[255.37280273 -300.97439575]
[242.28393555 -308.34222412]
[230.22174072 -317.29244995]
[219.37644958 -327.68392944]
[209.91912842 -339.35278320]
[201.99890137 -352.11499023]
[195.74070740 -365.76922607]
[191.24324036 -380.10015869]
[188.57742310 -394.88180542]
[187.78532410 -409.88098145]
[188.87940979 -424.86117554]
[191.84242249 -439.58612061]
[196.62765503 -453.82357788]
[203.15962219 -467.34896851]
[211.33531189 -479.94903564]
[221.02577209 -491.42501831]
[232.07818604 -501.59591675]
[244.31822205 -510.30136108]
[257.55285645 -517.40405273]
[271.57333374 -522.79193115]
[286.15853882 -526.38000488]
[301.07849121 -528.11175537]
[316.09780884 -527.95983887]
[330.97964478 -525.92663574]
[345.48931885 -522.04425049]
[359.39794922 -516.37390137]
[372.48620605 -509.00497437]
[384.54763794 -500.05374146]
[395.39205933 -489.66131592]
[404.84841919 -477.99166870]
[412.76754761 -465.22882080]
[419.02459717 -451.57406616]
[423.52087402 -437.24273682]
[426.18542480 -422.46087646]
[426.97628784 -407.46160889]
[425.88092041 -392.48150635]
[422.91665649 -377.75683594]
[418.13024902 -363.51980591]
[411.59713745 -349.99493408]
[403.42037964 -337.39556885]
[393.72894287 -325.92041016]
[382.67568970 -315.75042725]
[370.43493652 -307.04598999]
[357.19970703 -299.94445801]
[343.17877197 -294.55776978]
[328.59323120 -290.97088623]
[313.67315674 -289.24038696]
[298.65383911 -289.39355469]
[283.77215576 -291.42800903]
[269.26284790 -295.31161499]
[263.60003662 -281.42160034]
[257.93725586 -267.53155518]
[252.27447510 -253.64154053]
[246.61169434 -239.75151062]
[260.25985718 -233.53088379]
[273.64474487 -226.76226807]
[286.74432373 -219.45678711]
[299.53707886 -211.62643433]
[312.00198364 -203.28408813]
[324.11859131 -194.44343567]
[335.86697388 -185.11901855]
[347.22781372 -175.32615662]
[358.18246460 -165.08093262]
[368.71292114 -154.40017700]
[378.80187988 -143.30145264]
[388.43276978 -131.80297852]
[397.58975220 -119.92365265]
[406.25781250 -107.68299103]
[414.42269897 -95.10111237]
[422.07098389 -82.19867706]
[429.19012451 -68.99689484]
[435.76837158 -55.51745224]
[441.79498291 -41.78249359]
[447.26000977 -27.81458473]
[452.15447998 -13.63667870]
[456.47039795 0.72793144]
[460.20059204 15.25564575]
[463.33901978 29.92259407]
[465.88046265 44.70468140]
[467.82077026 59.57761383]
[469.15673828 74.51696777]
[469.88619995 89.49818420]
[470.00793457 104.49665833]
[469.52172852 119.48773956]
[468.42840576 134.44680786]
[466.72976685 149.34927368]
[464.42858887 164.17066956]
[461.52868652 178.88662720]
[458.03475952 193.47297668]
[453.95257568 207.90574646]
[449.28887939 222.16122437]
[444.05126953 236.21598816]
[438.24841309 250.04696655]
[431.88980103 263.63140869]
[424.98590088 276.94699097]
[417.54806519 289.97189331]
[409.58847046 302.68463135]
[401.12023926 315.06436157]
[392.15725708 327.09075928]
[382.71426392 338.74404907]
[372.80679321 350.00506592]
[362.45108032 360.85534668]
[351.66418457 371.27703857]
[340.46377563 381.25299072]
[328.86828613 390.76687622]
[316.89678955 399.80303955]
[304.56893921 408.34661865]
[291.90496826 416.38357544]
[278.92568970 423.90072632]
[265.65243530 430.88571167]
[252.10702515 437.32705688]
[238.31170654 443.21414185]
[224.28913879 448.53735352]
[210.06236267 453.28793335]
[195.65475464 457.45803833]
[181.08998108 461.04086304]
[166.39198303 464.03048706]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[90 147]
[91 146]
[92 145]
[93 144]
[94 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
