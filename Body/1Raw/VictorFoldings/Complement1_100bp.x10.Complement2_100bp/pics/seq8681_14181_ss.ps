%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[127.38683319 790.71984863]
[113.51531982 784.99639893]
[100.06674194 778.33966064]
[87.10378265 770.78063965]
[74.68688965 762.35461426]
[62.87396240 753.10089111]
[51.72006989 743.06262207]
[41.27722168 732.28656006]
[31.59410667 720.82293701]
[22.71587181 708.72528076]
[14.68391228 696.04992676]
[7.53567648 682.85601807]
[1.30449390 669.20501709]
[-3.98058271 655.16064453]
[-8.29491234 640.78833008]
[-11.61837769 626.15509033]
[-13.93548489 611.32922363]
[-15.23542976 596.37969971]
[-15.51215172 581.37640381]
[-14.76435947 566.38916016]
[-12.99554157 551.48785400]
[-10.21394253 536.74200439]
[-6.43253326 522.22039795]
[-1.66894448 507.99069214]
[4.05461407 494.11920166]
[10.71145630 480.67068481]
[18.27054405 467.70776367]
[26.69663239 455.29092407]
[35.95043945 443.47805786]
[45.98881149 432.32424927]
[56.76494980 421.88146973]
[68.22860718 412.19842529]
[80.32633972 403.32028198]
[93.00173950 395.28839111]
[106.19570923 388.14025879]
[119.84672546 381.90914917]
[133.89114380 376.62417603]
[148.26348877 372.30993652]
[144.94122314 357.68249512]
[141.61895752 343.05502319]
[138.29670715 328.42755127]
[134.97444153 313.80010986]
[132.20185852 311.62176514]
[130.34660339 307.99230957]
[130.07925415 303.35745239]
[131.84591675 298.44561768]
[129.18011475 283.68441772]
[126.51432037 268.92318726]
[123.84852600 254.16198730]
[121.62518311 252.45468140]
[119.94416046 249.76380920]
[119.18347168 246.29151917]
[119.64103699 242.37295532]
[121.49090576 238.44461060]
[119.70844269 223.55088806]
[117.92597961 208.65716553]
[115.26017761 193.89595032]
[111.72050476 179.31958008]
[108.18083954 164.74320984]
[104.64116669 150.16682434]
[101.10149384 135.59045410]
[97.56182098 121.01407623]
[94.02214813 106.43770599]
[91.56304169 104.63706970]
[89.70475769 101.90186310]
[88.79471588 98.45291138]
[89.09387970 94.63626862]
[90.73319244 90.88852692]
[80.66650391 78.68310547]
[86.01874542 64.78336334]
[83.35295105 50.02214813]
[78.74822998 42.13327408]
[80.75906372 35.02142715]
[78.31333923 20.22215652]
[75.86760712 5.42288589]
[73.42188263 -9.37638474]
[70.86605072 -24.15703773]
[68.20025635 -38.91825485]
[65.53445435 -53.67947388]
[62.86866379 -68.44068909]
[60.20286560 -83.20190430]
[57.53707123 -97.96312714]
[54.87127686 -112.72434235]
[39.82777786 -112.81275177]
[25.05671501 -115.66413116]
[11.06118488 -121.18135834]
[-1.68213093 -129.17651367]
[-12.73919964 -139.37728882]
[-21.73342133 -151.43626404]
[-28.35845566 -164.94268799]
[-32.38865662 -179.43655396]
[-33.68675995 -194.42419434]
[-32.20854950 -209.39515686]
[-28.00437164 -223.83950806]
[-21.21742249 -237.26530457]
[-12.07885933 -249.21525574]
[-0.89994180 -259.28234863]
[11.93858242 -267.12371826]
[25.99943733 -272.47225952]
[40.80371475 -275.14584351]
[55.84719086 -275.05337524]
[70.61748505 -272.19802856]
[84.61152649 -266.67700195]
[97.35268402 -258.67843628]
[108.40700531 -248.47467041]
[117.39797211 -236.41328430]
[124.01937103 -222.90505981]
[128.04566956 -208.41011047]
[129.33972168 -193.42211914]
[127.85748291 -178.45155334]
[123.64940643 -164.00833130]
[116.85884094 -150.58436584]
[107.71705627 -138.63688660]
[96.53542328 -128.57279968]
[83.69478607 -120.73490143]
[69.63249207 -115.39013672]
[72.29828644 -100.62892151]
[74.96408081 -85.86770630]
[77.62988281 -71.10648346]
[80.29567719 -56.34526825]
[82.96147156 -41.58405304]
[85.62726593 -26.82283401]
[89.90946198 -20.79916382]
[88.22115326 -11.82211208]
[90.66687775 2.97715831]
[93.11260986 17.77643013]
[95.55833435 32.57569885]
[98.11416626 47.35635376]
[100.77996063 62.11757278]
[110.65598297 73.26716614]
[105.49441528 88.22273254]
[108.59851837 102.89803314]
[112.13819122 117.47440338]
[115.67786407 132.05078125]
[119.21753693 146.62715149]
[122.75720978 161.20353699]
[126.29688263 175.77990723]
[129.83656311 190.35627747]
[136.76831055 177.05400085]
[150.14329529 170.26356506]
[164.97296143 172.51766968]
[175.72621155 182.97555542]
[178.39236450 197.73670959]
[171.97698975 211.29557800]
[158.87287903 218.59504700]
[143.96752930 216.91258240]
[132.81968689 206.87471008]
[134.60215759 221.76841736]
[136.38462830 236.66213989]
[138.60974121 251.49618530]
[141.27554321 266.25741577]
[143.94132996 281.01861572]
[146.60713196 295.77984619]
[149.60189819 310.47784424]
[152.92416382 325.10531616]
[156.24642944 339.73275757]
[159.56867981 354.36022949]
[162.89094543 368.98767090]
[177.71681213 366.67028809]
[192.66625977 365.37002563]
[207.66960144 365.09301758]
[222.65686035 365.84048462]
[237.55816650 367.60900879]
[252.30404663 370.39031982]
[266.82574463 374.17144775]
[281.05557251 378.93475342]
[294.92715454 384.65802002]
[308.37582397 391.31457520]
[321.33889771 398.87341309]
[333.75588989 407.29925537]
[345.56893921 416.55282593]
[356.72296143 426.59097290]
[367.16595459 437.36691284]
[376.84924316 448.83035278]
[385.72763062 460.92791748]
[393.75976562 473.60314941]
[400.90817261 486.79696655]
[407.13952637 500.44787598]
[412.42480469 514.49218750]
[416.73931885 528.86444092]
[420.06298828 543.49761963]
[422.38027954 558.32348633]
[423.68045044 573.27294922]
[423.95736694 588.27630615]
[423.20977783 603.26354980]
[421.44116211 618.16485596]
[418.65975952 632.91070557]
[414.87854004 647.43237305]
[410.11514282 661.66217041]
[404.39175415 675.53375244]
[397.73510742 688.98236084]
[390.17617798 701.94537354]
[381.75027466 714.36230469]
[372.49661255 726.17529297]
[362.45840454 737.32928467]
[351.68240356 747.77215576]
[340.21887207 757.45538330]
[328.12124634 766.33367920]
[315.44595337 774.36572266]
[302.25210571 781.51403809]
[288.60116577 787.74536133]
[274.55682373 793.03051758]
[260.18453979 797.34490967]
[245.55133057 800.66851807]
[230.72543335 802.98571777]
[215.77595520 804.28576660]
[200.77262878 804.56256104]
[185.78536987 803.81488037]
[170.88407898 802.04614258]
[156.13822937 799.26464844]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 158]
[39 157]
[40 156]
[41 155]
[42 154]
[46 153]
[47 152]
[48 151]
[49 150]
[54 149]
[55 148]
[56 147]
[57 138]
[58 137]
[59 136]
[60 135]
[61 134]
[62 133]
[63 132]
[68 131]
[70 129]
[71 128]
[73 127]
[74 126]
[75 125]
[76 124]
[77 122]
[78 121]
[79 120]
[80 119]
[81 118]
[82 117]
[83 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
