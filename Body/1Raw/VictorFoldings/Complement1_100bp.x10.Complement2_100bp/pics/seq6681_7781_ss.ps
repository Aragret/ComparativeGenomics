%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[168.37951660 817.41979980]
[156.57478333 808.15075684]
[145.58706665 797.92645264]
[135.49343872 786.81854248]
[126.36470032 774.90502930]
[118.26489258 762.26934814]
[111.25082397 749.00024414]
[105.37168884 735.19073486]
[100.66873932 720.93768311]
[97.17494965 706.34112549]
[94.91484070 691.50341797]
[93.90425110 676.52856445]
[94.15027618 661.52172852]
[95.65119171 646.58807373]
[98.39646912 631.83239746]
[102.36685181 617.35815430]
[107.53449249 603.26696777]
[113.86313629 589.65759277]
[121.30839539 576.62554932]
[129.81803894 564.26220703]
[139.33239746 552.65429688]
[149.78471375 541.88323975]
[161.10168457 532.02459717]
[173.20390320 523.14752197]
[186.00651550 515.31427002]
[199.41969299 508.57977295]
[213.34936523 502.99133301]
[208.94836426 488.65145874]
[204.54736328 474.31161499]
[200.14636230 459.97177124]
[195.74537659 445.63192749]
[191.34437561 431.29208374]
[186.94337463 416.95223999]
[182.54237366 402.61239624]
[178.14137268 388.27255249]
[173.74038696 373.93270874]
[169.33938599 359.59283447]
[158.20841980 349.69583130]
[161.55622864 334.23287964]
[157.15524292 319.89303589]
[152.75424194 305.55319214]
[148.35324097 291.21334839]
[136.23706055 286.82839966]
[128.74690247 276.10552979]
[128.80101013 262.83123779]
[136.60368347 251.85247803]
[132.41667175 237.44869995]
[128.22966003 223.04490662]
[124.04264832 208.64112854]
[113.06027985 198.57948303]
[116.63793945 183.16809082]
[112.45092773 168.76431274]
[108.26391602 154.36053467]
[104.07690430 139.95674133]
[90.77292633 128.51249695]
[95.31128693 110.66635132]
[91.23866272 125.10289001]
[81.37060547 136.39985657]
[67.61248016 142.37597656]
[52.62076950 141.87736511]
[39.29013824 135.00028992]
[30.19451904 123.07259369]
[27.09013367 108.39735413]
[30.57639313 93.80811310]
[39.98015213 82.12182617]
[53.48569489 75.59493256]
[68.48531342 75.48767853]
[82.08280945 81.82076263]
[91.65330505 93.37251282]
[89.87084198 78.47879791]
[88.08837891 63.58507919]
[86.30590820 48.69136429]
[84.52344513 33.79764557]
[74.88484192 25.22675896]
[73.70683289 12.78505230]
[81.07796478 3.19375038]
[71.94694519 -9.72658825]
[78.31818390 -23.18974686]
[76.75765991 -38.10835266]
[67.62664795 -51.02869034]
[73.99787903 -64.49185181]
[63.48197174 -70.03732300]
[57.01490784 -79.86981964]
[56.10662460 -91.48312378]
[60.86745071 -101.98313904]
[70.00926971 -108.80906677]
[68.89362335 -123.76751709]
[67.77797699 -138.72596741]
[66.66233063 -153.68443298]
[57.92004776 -166.87089539]
[64.68930817 -180.13839722]
[49.84148407 -182.78282166]
[36.11811829 -189.03742981]
[24.38187218 -198.50903320]
[15.37049484 -210.60224915]
[9.65044785 -224.55688477]
[7.58130026 -239.49574280]
[9.29311848 -254.47975159]
[14.67829800 -268.56701660]
[23.39832115 -280.87194824]
[34.90504074 -290.62112427]
[48.47513199 -297.20166016]
[63.25556946 -300.19989014]
[78.31724548 -299.42736816]
[92.71336365 -294.93264771]
[105.53897858 -286.99826050]
[115.98785400 -276.12298584]
[123.40317535 -262.99044800]
[127.31880188 -248.42614746]
[127.48859406 -233.34562683]
[123.90187836 -218.69686890]
[116.78411865 -205.40068054]
[106.58274841 -194.29290771]
[93.93903351 -186.07176208]
[79.64775848 -181.25404358]
[88.31024170 -169.13749695]
[81.62078094 -154.80007935]
[82.73642731 -139.84162903]
[83.85208130 -124.88317108]
[84.96772766 -109.92471313]
[99.53293610 -98.83551788]
[101.39909363 -80.30364227]
[88.91648865 -66.05236816]
[97.93588257 -54.19911194]
[91.67626190 -39.66887283]
[93.23678589 -24.75026894]
[102.25617981 -12.89700985]
[95.99656677 1.63322735]
[107.05489349 15.25968456]
[99.41716003 32.01517868]
[101.19963074 46.90889740]
[102.98209381 61.80261230]
[104.76455688 76.69633484]
[106.54702759 91.59004974]
[109.65113831 106.26535034]
[120.65952301 112.98682404]
[124.02990723 125.02112579]
[118.48068237 135.76972961]
[122.66769409 150.17352295]
[126.85470581 164.57730103]
[131.04171753 178.98107910]
[142.32357788 190.07298279]
[138.44642639 204.45411682]
[142.63343811 218.85789490]
[146.82044983 233.26168823]
[151.00746155 247.66546631]
[166.49002075 255.80854797]
[171.20025635 272.30487061]
[162.69308472 286.81234741]
[167.09408569 301.15219116]
[171.49508667 315.49203491]
[175.89608765 329.83187866]
[187.34182739 340.75457764]
[183.67922974 355.19186401]
[188.08023071 369.53170776]
[192.48123169 383.87155151]
[196.88221741 398.21139526]
[201.28321838 412.55123901]
[205.68421936 426.89108276]
[210.08522034 441.23092651]
[214.48622131 455.57077026]
[218.88720703 469.91061401]
[223.28820801 484.25048828]
[227.68920898 498.59033203]
[242.35563660 495.40243530]
[257.23736572 493.45300293]
[272.23004150 492.75570679]
[287.22848511 493.31539917]
[302.12750244 495.12817383]
[316.82257080 498.18133545]
[331.21060181 502.45343018]
[345.19070435 507.91452026]
[358.66479492 514.52630615]
[371.53836060 522.24237061]
[383.72109985 531.00860596]
[395.12756348 540.76354980]
[405.67776489 551.43878174]
[415.29766846 562.95935059]
[423.91979980 575.24450684]
[431.48370361 588.20806885]
[437.93630981 601.75909424]
[443.23233032 615.80255127]
[447.33465576 630.23992920]
[450.21450806 644.96997070]
[451.85165405 659.88928223]
[452.23464966 674.89324951]
[451.36077881 689.87670898]
[449.23617554 704.73443604]
[445.87576294 719.36230469]
[441.30310059 733.65765381]
[435.55026245 747.52026367]
[428.65759277 760.85284424]
[420.67346191 773.56188965]
[411.65383911 785.55822754]
[401.66201782 796.75781250]
[390.76806641 807.08197021]
[379.04843140 816.45837402]
[366.58529663 824.82116699]
[353.46606445 832.11175537]
[339.78277588 838.27899170]
[325.63143921 843.27954102]
[311.11129761 847.07843018]
[296.32415771 849.64898682]
[281.37380981 850.97314453]
[266.36508179 851.04162598]
[251.40325928 849.85400391]
[236.59330750 847.41851807]
[222.03907776 843.75231934]
[207.84268188 838.88110352]
[194.10368347 832.83905029]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 164]
[28 163]
[29 162]
[30 161]
[31 160]
[32 159]
[33 158]
[34 157]
[35 156]
[36 155]
[37 154]
[39 152]
[40 151]
[41 150]
[42 149]
[46 146]
[47 145]
[48 144]
[49 143]
[51 141]
[52 140]
[53 139]
[54 138]
[56 135]
[69 134]
[70 133]
[71 132]
[72 131]
[73 130]
[76 128]
[78 126]
[79 125]
[81 123]
[86 120]
[87 119]
[88 118]
[89 117]
[91 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
