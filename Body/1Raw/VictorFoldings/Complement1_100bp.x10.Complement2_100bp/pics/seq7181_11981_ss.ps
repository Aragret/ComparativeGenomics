%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[122.24832153 595.17828369]
[118.00666046 580.74493408]
[116.48959351 565.77783203]
[117.74878693 550.78686523]
[121.74134827 536.28259277]
[128.33129883 522.75903320]
[137.29418945 510.67675781]
[148.32475281 500.44729614]
[161.04727173 492.41909790]
[175.02842712 486.86557007]
[172.14315796 472.14566040]
[169.25788879 457.42578125]
[166.37260437 442.70590210]
[163.48733521 427.98599243]
[160.60206604 413.26611328]
[157.71679688 398.54620361]
[154.72201538 383.84820557]
[151.61790466 369.17291260]
[139.03309631 361.28887939]
[135.67602539 346.45025635]
[144.03085327 333.30358887]
[140.92674255 318.62829590]
[128.34193420 310.74426270]
[124.98486328 295.90563965]
[133.33969116 282.75897217]
[130.23558044 268.08367920]
[127.13146973 253.40837097]
[123.59179688 238.83200073]
[119.61970520 224.36747742]
[115.64760590 209.90295410]
[111.67550659 195.43843079]
[102.10061646 206.98490906]
[87.10121918 206.85081482]
[77.73430634 195.13496399]
[80.90482330 180.47386169]
[94.27558899 173.67512512]
[107.98908234 179.74928284]
[105.10380554 165.02938843]
[102.21853638 150.30949402]
[99.33325958 135.58959961]
[96.44799042 120.86971283]
[82.54460907 111.97793579]
[79.24964142 95.80663300]
[88.56559753 82.18383026]
[85.46148682 67.50852203]
[82.35737610 52.83322144]
[73.28887177 64.78153992]
[58.44709015 66.95441437]
[46.33406448 58.10712051]
[43.88869095 43.30778885]
[52.51179123 31.03415298]
[67.26366425 28.31710625]
[79.69322968 36.71230698]
[70.37086487 23.92934799]
[76.54094696 10.37282372]
[74.75848389 -4.52089357]
[72.97601318 -19.41461182]
[71.19355011 -34.30832672]
[56.81634521 -39.31406021]
[46.08199692 -50.02203751]
[41.08177185 -64.27047729]
[42.75689316 -79.21553802]
[50.72188187 -91.89892578]
[63.35156631 -99.83344269]
[61.56909943 -114.72716522]
[59.78663254 -129.62088013]
[50.46426773 -142.40383911]
[56.63434982 -155.96035767]
[54.85188293 -170.85408020]
[53.06941986 -185.74780273]
[38.08026505 -187.12770081]
[23.71121025 -191.59234619]
[10.58961010 -198.94424438]
[-0.71216911 -208.85992432]
[-9.70172310 -220.90412903]
[-15.98806190 -234.54896545]
[-19.29861259 -249.19696045]
[-19.49104309 -264.20733643]
[-16.55937386 -278.92391968]
[-10.63413239 -292.70391846]
[-1.97655249 -304.94595337]
[9.03295231 -315.11636353]
[21.91149902 -322.77233887]
[36.09491730 -327.58132935]
[34.31245041 -342.47503662]
[24.99008369 -355.25799561]
[31.16016579 -368.81454468]
[29.37770081 -383.70825195]
[27.59523392 -398.60195923]
[25.81276894 -413.49569702]
[24.03030205 -428.38940430]
[9.13136768 -430.87905884]
[-4.46203566 -437.46664429]
[-15.64795017 -447.61807251]
[-23.51958466 -460.51049805]
[-27.43881989 -475.09872437]
[-27.08794403 -490.20016479]
[-22.49539757 -504.59060669]
[-14.03347778 -517.10351562]
[-2.38815713 -526.72448730]
[11.49653244 -532.67358398]
[26.49501991 -534.46862793]
[41.39144516 -531.96398926]
[54.97822571 -525.36273193]
[66.15393829 -515.20007324]
[74.01261139 -502.29977417]
[77.91719055 -487.70761108]
[77.55114746 -472.60653687]
[72.94414520 -458.22070312]
[64.46965790 -445.71630859]
[52.81467819 -436.10702515]
[38.92401886 -430.17187500]
[40.70648575 -415.27813721]
[42.48895264 -400.38442993]
[44.27141571 -385.49072266]
[46.05388260 -370.59698486]
[55.24875641 -358.87933350]
[49.20616913 -344.25750732]
[50.98863220 -329.36380005]
[65.90630341 -328.03759766]
[80.22778320 -323.63690186]
[93.32635498 -316.35171509]
[104.62828827 -306.49841309]
[113.63796997 -294.50579834]
[119.95963287 -280.89663696]
[123.31475830 -266.26480103]
[123.55431366 -251.24925232]
[120.66539001 -236.50634766]
[114.77188873 -222.68093872]
[106.12917328 -210.37832642]
[95.11302948 -200.13764954]
[82.20333862 -192.40830994]
[67.96313477 -187.53025818]
[69.74559784 -172.63655090]
[71.52806854 -157.74282837]
[80.72293854 -146.02516174]
[74.68035126 -131.40335083]
[76.46281433 -116.50962830]
[78.24528503 -101.61591339]
[92.39065552 -96.88581085]
[103.12370300 -86.44017792]
[108.27822876 -72.31248474]
[106.78153229 -57.28649902]
[98.87718964 -44.34786224]
[86.08726501 -36.09079361]
[87.86973572 -21.19707680]
[89.65219879 -6.30335951]
[91.43466187 8.59035778]
[100.62953949 20.30801964]
[94.58695221 34.92984009]
[97.03267670 49.72911072]
[100.13678741 64.40441132]
[103.24089813 79.07971954]
[114.61109161 84.68080902]
[120.74361420 95.77340698]
[119.44012451 108.38112640]
[111.16788483 117.98443604]
[114.05315399 132.70433044]
[116.93843079 147.42422485]
[119.82369995 162.14411926]
[122.70896912 176.86399841]
[126.14002991 191.46632385]
[130.11213684 205.93084717]
[134.08422852 220.39537048]
[138.05632019 234.85989380]
[141.25233459 237.79919434]
[143.15538025 241.25505066]
[143.76182556 244.75756836]
[143.22105408 247.88394165]
[141.80677795 250.30426025]
[144.91088867 264.97955322]
[148.01499939 279.65487671]
[160.97761536 288.29248047]
[163.91656494 303.21954346]
[155.60205078 315.52416992]
[158.70616150 330.19949341]
[171.66877747 338.83709717]
[174.60772705 353.76416016]
[166.29321289 366.06878662]
[169.39732361 380.74411011]
[174.23487854 388.49237061]
[172.43669128 395.66094971]
[175.32196045 410.38082886]
[178.20722961 425.10073853]
[181.09249878 439.82061768]
[183.97776794 454.54049683]
[186.86305237 469.26040649]
[189.74832153 483.98028564]
[204.79147339 483.84472656]
[219.60334778 486.47586060]
[233.67947388 491.78408813]
[246.54040527 499.58865356]
[257.74813843 509.62365723]
[266.92089844 521.54736328]
[273.74627686 534.95367432]
[277.99182129 549.38592529]
[279.51293945 564.35260010]
[278.25778198 579.34387207]
[274.26913452 593.84924316]
[267.68280029 607.37463379]
[258.72317505 619.45928955]
[247.69538879 629.69171143]
[234.97503662 637.72332764]
[220.99536133 643.28063965]
[206.23252869 646.17431641]
[191.18934631 646.30584717]
[176.37818909 643.67071533]
[162.30349731 638.35870361]
[149.44465637 630.55065918]
[138.23963928 620.51263428]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 188]
[11 187]
[12 186]
[13 185]
[14 184]
[15 183]
[16 182]
[17 180]
[18 179]
[21 176]
[22 175]
[25 172]
[26 171]
[27 170]
[28 165]
[29 164]
[30 163]
[31 162]
[37 161]
[38 160]
[39 159]
[40 158]
[41 157]
[44 153]
[45 152]
[46 151]
[53 150]
[55 148]
[56 147]
[57 146]
[58 145]
[64 139]
[65 138]
[66 137]
[68 135]
[69 134]
[70 133]
[84 119]
[85 118]
[87 116]
[88 115]
[89 114]
[90 113]
[91 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
