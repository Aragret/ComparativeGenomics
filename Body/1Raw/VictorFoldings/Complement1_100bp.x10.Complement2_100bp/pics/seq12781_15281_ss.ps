%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[105.57001495 650.96240234]
[90.91904449 654.33868408]
[75.91217804 655.25726318]
[60.95880890 653.69305420]
[46.46687698 649.68884277]
[32.83172989 643.35382080]
[20.42535019 634.86077881]
[9.58619022 624.44146729]
[0.60994941 612.38006592]
[-6.25849295 599.00567627]
[-10.83176136 584.68316650]
[-12.98509312 569.80316162]
[-12.65974331 554.77172852]
[-9.86458874 539.99890137]
[-4.67588282 525.88769531]
[2.76482248 512.82299805]
[12.25453949 501.16128540]
[23.53438187 491.22073364]
[36.29662704 483.27246094]
[50.19311142 477.53332520]
[64.84473419 474.15991211]
[79.85177612 473.24423218]
[81.41230011 458.32562256]
[82.97282410 443.40701294]
[84.53334808 428.48843384]
[76.53426361 412.86849976]
[87.47405243 398.05627441]
[88.81228638 383.11608887]
[90.15052032 368.17590332]
[91.48875427 353.23571777]
[83.25800323 337.73663330]
[93.97605133 322.76315308]
[95.09169769 307.80471802]
[83.58264160 295.54174805]
[84.52222443 278.41186523]
[97.81668854 267.04190063]
[98.70950317 252.06849670]
[91.74346161 238.90325928]
[100.28844452 225.58807373]
[101.18126678 210.61466980]
[102.07408142 195.64126587]
[102.85540009 180.66163635]
[103.52518463 165.67658997]
[102.40953827 150.71813965]
[99.52426910 135.99824524]
[96.63899231 121.27835846]
[93.75372314 106.55846405]
[90.89038849 103.97511292]
[89.17965698 100.14219666]
[89.15407562 95.60276794]
[91.08373260 91.11765289]
[81.38490295 78.61792755]
[87.14862061 64.88370514]
[84.92350769 50.04965973]
[82.69838715 35.21561813]
[72.99955750 22.71588707]
[78.76327515 8.98166656]
[76.53816223 -5.85237741]
[66.83933258 -18.35210800]
[72.60305023 -32.08633041]
[70.37792969 -46.92037201]
[67.93220520 -61.71964264]
[57.86551285 -73.92506409]
[63.21775436 -87.82479858]
[60.55195999 -102.58602142]
[57.66668701 -117.30590820]
[54.56257629 -131.98121643]
[51.45846558 -146.65650940]
[48.35435867 -161.33181763]
[33.42121124 -159.77655029]
[18.40730095 -159.79077148]
[3.47712660 -161.37432861]
[-11.20572662 -164.50985718]
[-25.48038673 -169.16300964]
[-39.19045258 -175.28279114]
[-52.18570709 -182.80216980]
[-64.32376862 -191.63874817]
[-75.47164917 -201.69570923]
[-85.50720215 -212.86286926]
[-94.32047272 -225.01786804]
[-101.81490326 -238.02752686]
[-107.90837097 -251.74931335]
[-112.53412628 -266.03286743]
[-115.64147186 -280.72171021]
[-117.19637299 -295.65490723]
[-117.18178558 -310.66879272]
[-115.59786987 -325.59893799]
[-112.46199036 -340.28170776]
[-107.80849457 -354.55627441]
[-101.68836975 -368.26617432]
[-94.16867828 -381.26126099]
[-85.33180237 -393.39910889]
[-75.27456665 -404.54675293]
[-64.10717010 -414.58203125]
[-51.95195770 -423.39498901]
[-38.94211578 -430.88909912]
[-25.22018623 -436.98223877]
[-10.93651199 -441.60763550]
[3.75240660 -444.71463013]
[18.68562889 -446.26916504]
[33.69953918 -446.25421143]
[48.62963486 -444.66995239]
[63.31233597 -441.53372192]
[77.58676910 -436.87988281]
[91.29653931 -430.75939941]
[104.29142761 -423.23941040]
[116.42906189 -414.40222168]
[127.57645416 -404.34472656]
[137.61146545 -393.17709351]
[146.42414856 -381.02166748]
[153.91793823 -368.01162720]
[160.01074219 -354.28955078]
[164.63580322 -340.00576782]
[167.74243164 -325.31677246]
[169.29661560 -310.38351440]
[169.28129578 -295.36959839]
[167.69665527 -280.43954468]
[164.56005859 -265.75692749]
[159.90586853 -251.48260498]
[153.78507996 -237.77297974]
[146.26475525 -224.77827454]
[137.42729187 -212.64085388]
[127.36952209 -201.49371338]
[116.20162964 -191.45896912]
[104.04598999 -182.64659119]
[91.03578949 -175.15310669]
[77.31356049 -169.06063843]
[63.02965927 -164.43592834]
[66.13376617 -149.76062012]
[69.23787689 -135.08532715]
[72.34198761 -120.41001892]
[75.78511047 -117.10034180]
[77.18566895 -111.59258270]
[75.31317902 -105.25181580]
[77.97897339 -90.49059296]
[87.85498810 -79.34099579]
[82.69342041 -64.38543701]
[86.03647614 -60.97471619]
[87.27242279 -55.42769241]
[85.21197510 -49.14548874]
[87.43709564 -34.31144714]
[96.97676849 -22.87274551]
[91.37220764 -8.07749462]
[93.59732056 6.75654936]
[103.13699341 18.19524956]
[97.53243256 32.99050140]
[99.75755310 47.82454300]
[101.98266602 62.65858841]
[111.52234650 74.09729004]
[105.91777802 88.89253998]
[108.47360992 103.67319489]
[111.35888672 118.39308167]
[114.24415588 133.11297607]
[117.12943268 147.83287048]
[121.72687531 133.55479431]
[130.87570190 121.66786957]
[143.50112915 113.56857300]
[158.11993408 110.20839691]
[173.01469421 111.98208618]
[186.43560791 118.68127441]
[196.80598450 129.51895142]
[202.90754700 143.22190857]
[204.02345276 158.18034363]
[200.02264404 172.63694763]
[191.37510681 184.89337158]
[179.09675598 193.50976562]
[164.63003540 197.47386169]
[149.67448425 196.31996155]
[135.98706055 190.18362427]
[125.17575836 179.78576660]
[118.51022339 166.34637451]
[117.84043884 181.33142090]
[120.58353424 190.04423523]
[117.04748535 196.53408813]
[116.15467072 211.50749207]
[115.26185608 226.48089600]
[122.16403198 240.71713257]
[113.68291473 252.96130371]
[112.79009247 267.93472290]
[122.83059692 276.91262817]
[125.82341003 289.84527588]
[120.89422607 301.96078491]
[110.05015564 308.92034912]
[108.93450165 323.87881470]
[116.74449921 334.14364624]
[115.50732422 346.57958984]
[106.42893982 354.57394409]
[105.09070587 369.51412964]
[103.75247192 384.45431519]
[102.41423798 399.39450073]
[110.07054138 409.77447510]
[108.64834595 422.19064331]
[99.45195007 430.04895020]
[97.89142609 444.96755981]
[96.33090210 459.88613892]
[94.77037811 474.80474854]
[109.26308441 478.80618286]
[122.89945221 485.13858032]
[135.30746460 493.62924194]
[146.14863586 504.04647827]
[155.12719727 516.10614014]
[161.99821472 529.47918701]
[166.57424927 543.80084229]
[168.73043823 558.68041992]
[168.40798950 573.71191406]
[165.61567688 588.48529053]
[160.42968750 602.59753418]
[152.99150085 615.66363525]
[143.50402832 627.32714844]
[132.22610474 637.26989746]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 196]
[23 195]
[24 194]
[25 193]
[27 190]
[28 189]
[29 188]
[30 187]
[32 184]
[33 183]
[36 179]
[37 178]
[39 176]
[40 175]
[41 174]
[42 172]
[43 171]
[44 154]
[45 153]
[46 152]
[47 151]
[51 150]
[53 148]
[54 147]
[55 146]
[57 144]
[58 143]
[60 141]
[61 140]
[62 137]
[64 135]
[65 134]
[66 131]
[67 130]
[68 129]
[69 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
