%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[64.61036682 824.64074707]
[49.60738754 824.57336426]
[34.62641144 823.75823975]
[19.70469284 822.19738770]
[4.87932444 819.89471436]
[-9.81283569 816.85589600]
[-24.33525848 813.08850098]
[-38.65184021 808.60192871]
[-52.72698593 803.40728760]
[-66.52570343 797.51751709]
[-80.01368713 790.94726562]
[-93.15740967 783.71282959]
[-105.92417908 775.83227539]
[-118.28226471 767.32513428]
[-130.20094299 758.21252441]
[-141.65057373 748.51721191]
[-152.60270691 738.26318359]
[-163.03010559 727.47601318]
[-172.90682983 716.18243408]
[-182.20835876 704.41064453]
[-190.91152954 692.18981934]
[-198.99473572 679.55035400]
[-206.43786621 666.52368164]
[-213.22241211 653.14221191]
[-219.33151245 639.43920898]
[-224.74996948 625.44866943]
[-229.46434021 611.20550537]
[-233.46287537 596.74499512]
[-236.73564148 582.10314941]
[-239.27450562 567.31640625]
[-241.07315063 552.42150879]
[-242.12710571 537.45544434]
[-242.43376160 522.45544434]
[-241.99234009 507.45880127]
[-240.80393982 492.50280762]
[-238.87153625 477.62463379]
[-236.19990540 462.86129761]
[-232.79571533 448.24945068]
[-228.66740417 433.82550049]
[-223.82525635 419.62521362]
[-218.28129578 405.68395996]
[-212.04930115 392.03640747]
[-205.14479065 378.71643066]
[-197.58491516 365.75717163]
[-189.38847351 353.19085693]
[-180.57583618 341.04873657]
[-171.16891479 329.36096191]
[-161.19110107 318.15661621]
[-150.66720581 307.46356201]
[-139.62338257 297.30838013]
[-128.08708191 287.71627808]
[-116.08701324 278.71118164]
[-103.65298462 270.31539917]
[-90.81591797 262.54986572]
[-77.60772705 255.43385315]
[-64.06124878 248.98506165]
[-50.21016312 243.21951294]
[-36.08890915 238.15156555]
[-21.73259163 233.79379272]
[-7.17690229 230.15705872]
[7.54196930 227.25038147]
[22.38743019 225.08097839]
[37.32257080 223.65428162]
[52.31026459 222.97380066]
[67.31324768 223.04124451]
[82.29421234 223.85644531]
[83.85473633 208.93783569]
[85.41526031 194.01924133]
[86.75349426 179.07905579]
[87.86914062 164.12059021]
[88.98479462 149.16213989]
[90.10044098 134.20368958]
[91.21608734 119.24523926]
[92.33174133 104.28678131]
[90.54573822 101.81702423]
[89.61890411 98.64282990]
[89.81388092 95.08116913]
[91.27254486 91.54160309]
[93.98518372 88.47981262]
[95.98919678 73.61428833]
[97.99320984 58.74875641]
[99.99723053 43.88322830]
[84.58933258 38.28000641]
[70.80349731 29.41795731]
[59.31801605 17.73654747]
[50.69726944 3.81387973]
[45.36395264 -11.66190910]
[43.57836533 -27.92667198]
[45.42570496 -44.17797089]
[50.81200409 -59.61467361]
[59.46891403 -73.47644043]
[70.96705627 -85.08119202]
[84.73734283 -93.85865021]
[100.09912872 -99.37835693]
[116.29383850 -101.37081146]
[117.63207245 -116.31099701]
[118.97030640 -131.25117493]
[120.30854034 -146.19136047]
[106.24732971 -151.71032715]
[94.31140900 -160.96833801]
[85.46838379 -173.21485901]
[80.43510437 -187.45715332]
[79.61959839 -202.54063416]
[83.08798218 -217.24258423]
[90.55908966 -230.37113953]
[101.42726135 -240.86206055]
[114.81147766 -247.86489868]
[129.62672424 -250.81193542]
[144.67201233 -249.46427917]
[158.72767639 -243.93119812]
[170.65428162 -234.66120911]
[179.48500061 -222.40580750]
[184.50396729 -208.15846252]
[185.30432129 -193.07415771]
[181.82116699 -178.37571716]
[174.33688354 -165.25466919]
[163.45817566 -154.77465820]
[150.06692505 -147.78529358]
[135.24871826 -144.85313416]
[133.91049194 -129.91294861]
[132.57225037 -114.97276306]
[131.23402405 -100.03257751]
[144.36453247 -96.21321869]
[156.56381226 -90.02474213]
[167.40850830 -81.68005371]
[176.52192688 -71.46692657]
[183.58717346 -59.73804474]
[188.35807800 -46.89886856]
[190.66781616 -33.39358521]
[190.43476868 -19.68975067]
[187.66535950 -6.26211071]
[182.45390320 6.42385530]
[174.97941589 17.92806625]
[165.49943542 27.85110855]
[154.34117126 35.84809875]
[141.89019775 41.64067841]
[128.57713318 45.02668762]
[114.86275482 45.88724136]
[112.85874176 60.75276947]
[110.85472870 75.61830139]
[108.85071564 90.48382568]
[107.29019165 105.40243530]
[106.17454529 120.36088562]
[105.05889130 135.31933594]
[103.94324493 150.27778625]
[102.82759857 165.23625183]
[101.71194458 180.19470215]
[104.23394012 186.30625916]
[103.41397858 191.92984009]
[100.33386230 195.57975769]
[98.77333832 210.49836731]
[97.21282196 225.41696167]
[112.03820038 227.71958923]
[126.73037720 230.75833130]
[141.25282288 234.52563477]
[155.56942749 239.01214600]
[169.64459229 244.20671082]
[183.44334412 250.09640503]
[196.93136597 256.66659546]
[210.07511902 263.90093994]
[222.84193420 271.78143311]
[235.20005798 280.28854370]
[247.11878967 289.40106201]
[258.56848145 299.09634399]
[269.52066040 309.35031128]
[279.94812012 320.13742065]
[289.82489014 331.43090820]
[299.12649536 343.20269775]
[307.82971191 355.42346191]
[315.91299438 368.06289673]
[323.35617065 381.08950806]
[330.14080811 394.47094727]
[336.24996948 408.17395020]
[341.66851807 422.16442871]
[346.38293457 436.40759277]
[350.38156128 450.86807251]
[353.65438843 465.50985718]
[356.19332886 480.29660034]
[357.99206543 495.19152832]
[359.04611206 510.15759277]
[359.35284424 525.15759277]
[358.91149902 540.15423584]
[357.72317505 555.11022949]
[355.79083252 569.98840332]
[353.11929321 584.75177002]
[349.71517944 599.36358643]
[345.58694458 613.78759766]
[340.74484253 627.98785400]
[335.20095825 641.92913818]
[328.96905518 655.57678223]
[322.06460571 668.89678955]
[314.50479126 681.85607910]
[306.30844116 694.42242432]
[297.49584961 706.56463623]
[288.08898926 718.25244141]
[278.11123657 729.45678711]
[267.58740234 740.14990234]
[256.54360962 750.30517578]
[245.00738525 759.89733887]
[233.00735474 768.90246582]
[220.57336426 777.29833984]
[207.73634338 785.06390381]
[194.52818298 792.17999268]
[180.98175049 798.62890625]
[167.13069153 804.39447021]
[153.00946045 809.46252441]
[138.65316772 813.82037354]
[124.09749603 817.45715332]
[109.37863922 820.36395264]
[94.53318787 822.53338623]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 152]
[67 151]
[68 150]
[69 147]
[70 146]
[71 145]
[72 144]
[73 143]
[74 142]
[79 141]
[80 140]
[81 139]
[82 138]
[95 122]
[96 121]
[97 120]
[98 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
