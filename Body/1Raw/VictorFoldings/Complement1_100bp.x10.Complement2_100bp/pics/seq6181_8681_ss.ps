%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxUUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[-22.02243805 266.74719238]
[-20.65542412 281.69259644]
[-20.46523476 296.69918823]
[-21.45304108 311.67443848]
[-23.61275864 326.52603149]
[-26.93106651 341.16238403]
[-31.38750648 355.49328613]
[-36.95460510 369.43032837]
[-43.59803772 382.88763428]
[-51.27684784 395.78219604]
[-59.94368362 408.03454590]
[-69.54512024 419.56912231]
[-80.02195740 430.31481934]
[-91.30960083 440.20538330]
[-103.33845520 449.17984009]
[-116.03436279 457.18283081]
[-129.31904602 464.16506958]
[-143.11059570 470.08343506]
[-157.32397461 474.90148926]
[-171.87156677 478.58953857]
[-186.66368103 481.12478638]
[-201.60911560 482.49163818]
[-216.61570740 482.68170166]
[-231.59095764 481.69372559]
[-246.44252014 479.53387451]
[-261.07885742 476.21539307]
[-275.40969849 471.75881958]
[-289.34667969 466.19158936]
[-302.80392456 459.54800415]
[-315.69839478 451.86907959]
[-327.95065308 443.20208740]
[-339.48513794 433.60055542]
[-350.23074341 423.12359619]
[-360.12118530 411.83584595]
[-369.09552002 399.80691528]
[-377.09838867 387.11093140]
[-384.08047485 373.82617188]
[-389.99871826 360.03457642]
[-394.81661987 345.82113647]
[-398.50448608 331.27349854]
[-401.03961182 316.48135376]
[-402.40631104 301.53591919]
[-402.59619141 286.52932739]
[-401.60809326 271.55407715]
[-399.44805908 256.70254517]
[-396.12945557 242.06623840]
[-391.67272949 227.73545837]
[-386.10534668 213.79850769]
[-379.46163940 200.34133911]
[-371.78256226 187.44692993]
[-363.11547852 175.19476318]
[-353.51379395 163.66038513]
[-343.03674316 152.91490173]
[-331.74890137 143.02456665]
[-319.71987915 134.05035400]
[-307.02380371 126.04761505]
[-293.73898315 119.06566620]
[-279.94729614 113.14756775]
[-265.73382568 108.32980347]
[-251.18614197 104.64206696]
[-236.39398193 102.10710907]
[-221.44853210 100.74055481]
[-206.44192505 100.55081940]
[-191.46670532 101.53909302]
[-176.61517334 103.69926453]
[-161.97892761 107.01802063]
[-147.64817810 111.47489929]
[-133.71128845 117.04241943]
[-120.25419617 123.68627167]
[-107.35986328 131.36546326]
[-95.10778046 140.03268433]
[-83.57349396 149.63447571]
[-72.82811737 160.11163330]
[-62.93790054 171.39958191]
[-53.96382141 183.42871094]
[-45.96120834 196.12486267]
[-32.68336105 189.14640808]
[-19.40551376 182.16796875]
[-6.12766790 175.18951416]
[7.15017843 168.21105957]
[20.42802429 161.23260498]
[33.38102341 153.66822815]
[45.98333359 145.53300476]
[58.58564758 137.39779663]
[69.61752319 127.23424530]
[78.75632477 115.33961487]
[87.89512634 103.44498444]
[96.76602173 91.34922791]
[105.36458588 79.05838776]
[113.87141418 66.70388031]
[122.28603363 54.28638458]
[123.62238312 38.52172089]
[137.16725159 32.32609177]
[145.58187866 19.90859604]
[153.99649048 7.49110079]
[162.41111755 -4.92639446]
[170.82572937 -17.34388924]
[179.24034119 -29.76138496]
[167.83035278 -39.52315140]
[157.58509827 -50.50107574]
[148.63342285 -62.55709457]
[141.08792114 -75.53958893]
[135.04345703 -89.28530121]
[130.57606506 -103.62135315]
[127.74192810 -118.36746216]
[126.57668304 -133.33818054]
[127.09497833 -148.34521484]
[129.29031372 -163.19985962]
[133.13505554 -177.71530151]
[138.58087158 -191.70898438]
[145.55926514 -205.00492859]
[153.98248291 -217.43591309]
[163.74459839 -228.84561157]
[174.72282410 -239.09053040]
[186.77911377 -248.04183960]
[199.76182556 -255.58697510]
[213.50772095 -261.63101196]
[227.84391785 -266.09799194]
[242.59010315 -268.93167114]
[257.56085205 -270.09646606]
[272.56787109 -269.57772827]
[287.42245483 -267.38195801]
[301.93777466 -263.53677368]
[315.93130493 -258.09054565]
[329.22702026 -251.11174011]
[341.65777588 -242.68815613]
[353.06716919 -232.92570496]
[363.31176758 -221.94717407]
[372.26272583 -209.89062500]
[379.80746460 -196.90766907]
[385.85110474 -183.16160583]
[390.31762695 -168.82527161]
[393.15087891 -154.07899475]
[394.31524658 -139.10821533]
[393.79605103 -124.10120392]
[391.59982300 -109.24668884]
[387.75421143 -94.73148346]
[382.30755615 -80.73812866]
[375.32836914 -67.44260406]
[366.90438843 -55.01212692]
[357.14160156 -43.60300827]
[346.16278076 -33.35873795]
[334.10595703 -24.40814972]
[321.12277222 -16.86380386]
[307.37652588 -10.82057762]
[293.04006958 -6.35447311]
[278.29370117 -3.52165532]
[263.32287598 -2.35775065]
[248.31588745 -2.87739587]
[233.46144104 -5.07405615]
[218.94635010 -8.92010593]
[204.95315552 -14.36717701]
[191.65783691 -21.34676743]
[183.24322510 -8.92927170]
[174.82861328 3.48822403]
[166.41398621 15.90571976]
[157.99937439 28.32321548]
[149.58474731 40.74071121]
[148.85026550 55.61719513]
[134.70352173 62.70100403]
[126.28890991 75.11849976]
[125.13895416 82.41914368]
[117.65542603 87.65695190]
[109.05686188 99.94779205]
[109.18312836 103.80220032]
[107.60982513 107.69354248]
[104.35853577 110.86153412]
[99.78976440 112.58378601]
[90.65096283 124.47841644]
[81.51215363 136.37304688]
[94.99301147 129.79531860]
[109.67578888 126.72674561]
[124.66262054 127.35498047]
[139.03707886 131.64160156]
[151.92013550 139.32449341]
[162.52400208 149.93382263]
[170.20024109 162.82084656]
[174.47944641 177.19750977]
[175.09996033 192.18467712]
[172.02381897 206.86585999]
[165.43913269 220.34332275]
[155.74855042 231.79289246]
[143.54467773 240.51445007]
[129.57376099 245.97463989]
[114.69015503 247.83958435]
[99.80397034 245.99523926]
[85.82552338 240.55438232]
[73.60958099 231.84974670]
[63.90317535 220.41358948]
[57.29983902 206.94525146]
[54.20337677 192.26834106]
[54.80313873 177.28033447]
[59.06244659 162.89776611]
[66.72086334 150.00010681]
[54.11854935 158.13531494]
[41.51623917 166.27053833]
[55.91352463 170.47982788]
[63.23817062 183.56988525]
[59.29428482 198.04212952]
[46.34110260 205.60620117]
[31.79879951 201.92904663]
[23.99786377 189.11712646]
[27.40647697 174.51045227]
[14.12863064 181.48890686]
[0.85078430 188.46736145]
[-12.42706203 195.44580078]
[-25.70490837 202.42425537]
[-38.98275375 209.40270996]
[-33.06423187 223.19419861]
[-28.24602890 237.40754700]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[76 208]
[77 207]
[78 206]
[79 205]
[80 204]
[81 203]
[82 196]
[83 195]
[84 194]
[85 170]
[86 169]
[87 168]
[88 164]
[89 163]
[90 161]
[91 160]
[93 158]
[94 157]
[95 156]
[96 155]
[97 154]
[98 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
