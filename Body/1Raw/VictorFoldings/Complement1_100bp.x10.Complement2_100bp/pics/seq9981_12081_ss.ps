%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[52.75781250 484.98495483]
[47.34162140 498.99450684]
[40.21222687 512.21478271]
[31.48207474 524.43719482]
[21.28884697 535.46899414]
[9.79330921 545.13629150]
[-2.82323885 553.28649902]
[-16.36181641 559.79113770]
[-30.60890007 564.54754639]
[-45.33979034 567.48083496]
[-60.32216644 568.54467773]
[-75.31972504 567.72222900]
[-90.09594727 565.02655029]
[-104.41777802 560.50012207]
[-118.05934143 554.21435547]
[-130.80549622 546.26837158]
[-142.45521545 536.78747559]
[-152.82476807 525.92126465]
[-161.75061035 513.84100342]
[-169.09196472 500.73724365]
[-174.73304749 486.81671143]
[-178.58489990 472.29891968]
[-180.58676147 457.41281128]
[-180.70707703 442.39321899]
[-178.94392395 427.47695923]
[-175.32513428 412.89932251]
[-169.90776062 398.89019775]
[-162.77725220 385.67056274]
[-154.04606628 373.44885254]
[-143.85191345 362.41787720]
[-132.35556030 352.75158691]
[-119.73832703 344.60244751]
[-106.19920349 338.09896851]
[-91.95171356 333.34371948]
[-77.22058105 330.41168213]
[-62.23811340 329.34912109]
[-47.24061966 330.17282104]
[-32.46463013 332.86972046]
[-18.14318275 337.39733887]
[-11.86582184 323.77401733]
[-5.58846092 310.15072632]
[0.58730745 296.48104858]
[6.66114140 282.76577759]
[12.73497581 269.05050659]
[18.80880928 255.33523560]
[17.88659096 251.93203735]
[18.56693459 247.91305542]
[21.12129402 244.03639221]
[25.47230530 241.15267944]
[32.15250015 227.72230530]
[38.83269501 214.29191589]
[45.31219101 200.76358032]
[51.58955002 187.14025879]
[57.86691284 173.51695251]
[64.14427185 159.89363098]
[70.42163086 146.27030945]
[76.69898987 132.64700317]
[82.97635651 119.02368164]
[89.25371552 105.40036774]
[95.32755280 91.68509674]
[101.19651031 77.88092041]
[107.06546783 64.07674408]
[95.08761597 53.74467468]
[86.89891052 40.23352051]
[83.29067993 24.87209892]
[84.60443115 9.16688728]
[90.69960022 -5.34574127]
[100.96846008 -17.24979973]
[114.39669800 -25.38784981]
[129.66360474 -28.97353363]
[145.27195740 -27.66753960]
[150.93473816 -41.55756760]
[156.59753418 -55.44759369]
[162.26031494 -69.33761597]
[167.92309570 -83.22764587]
[165.96817017 -98.92761230]
[177.93771362 -107.79210663]
[183.60050964 -121.68213654]
[183.08070374 -128.27313232]
[185.59072876 -133.37184143]
[189.64422607 -135.89735413]
[195.71806335 -149.61262512]
[201.79190063 -163.32789612]
[197.88226318 -175.61924744]
[203.22352600 -186.91769409]
[214.45922852 -191.39938354]
[220.73658752 -205.02268982]
[207.75106812 -212.55332947]
[195.52778625 -221.26687622]
[184.17416382 -231.08674622]
[173.79000854 -241.92666626]
[164.46653748 -253.69132996]
[156.28572083 -266.27737427]
[149.31944275 -279.57421875]
[143.62892151 -293.46493530]
[139.26417542 -307.82751465]
[136.26353455 -322.53570557]
[134.65341187 -337.46023560]
[134.44792175 -352.46997070]
[135.64889526 -367.43301392]
[138.24575806 -382.21780396]
[142.21571350 -396.69448853]
[147.52383423 -410.73577881]
[154.12350464 -424.21832275]
[161.95671082 -437.02362061]
[170.95462036 -449.03909302]
[181.03816223 -460.15921021]
[192.11869812 -470.28622437]
[204.09886169 -479.33111572]
[216.87336731 -487.21441650]
[230.32997131 -493.86682129]
[244.35037231 -499.22988892]
[258.81140137 -503.25650024]
[273.58590698 -505.91125488]
[288.54412842 -507.17080688]
[303.55456543 -507.02407837]
[318.48529053 -505.47241211]
[333.20510864 -502.52941895]
[347.58465576 -498.22094727]
[361.49755859 -492.58483887]
[374.82156372 -485.67068481]
[387.43957520 -477.53921509]
[399.24066162 -468.26190186]
[410.12115479 -457.92025757]
[419.98541260 -446.60519409]
[428.74673462 -434.41613770]
[436.32818604 -421.46020508]
[442.66308594 -407.85122681]
[447.69573975 -393.70886230]
[451.38198853 -379.15737915]
[453.68939209 -364.32461548]
[454.59765625 -349.34097290]
[454.09884644 -334.33813477]
[452.19732666 -319.44790649]
[448.90979004 -304.80117798]
[444.26516724 -290.52667236]
[438.30422974 -276.74981689]
[431.07937622 -263.59167480]
[422.65414429 -251.16793823]
[413.10250854 -239.58773804]
[402.50845337 -228.95285034]
[390.96508789 -219.35676575]
[378.57385254 -210.88378906]
[365.44360352 -203.60839844]
[351.68978882 -197.59451294]
[337.43322754 -192.89500427]
[322.79925537 -189.55117798]
[307.91647339 -187.59239197]
[292.91564941 -187.03587341]
[277.92861938 -187.88652039]
[263.08709717 -190.13685608]
[248.52153015 -193.76708984]
[234.35990906 -198.74533081]
[228.08255005 -185.12202454]
[230.63087463 -167.75904846]
[215.50715637 -157.25405884]
[209.43331909 -143.53878784]
[203.35949707 -129.82353210]
[197.49052429 -116.01934814]
[191.82774353 -102.12931824]
[194.18771362 -87.42286682]
[181.81312561 -77.56485748]
[176.15034485 -63.67483139]
[170.48754883 -49.78480530]
[164.82476807 -35.89477921]
[159.16198730 -22.00475311]
[170.27644348 -13.07981014]
[178.43388367 -1.37099946]
[182.96546936 12.17740250]
[183.49526978 26.46966934]
[179.97135925 40.34724808]
[172.67076111 52.68267059]
[162.17773438 62.47114563]
[149.33697510 68.91241455]
[135.18566895 71.47617340]
[120.86964417 69.94570160]
[115.00068665 83.74988556]
[109.13172913 97.55406189]
[109.94163513 102.73652649]
[107.79024506 108.00386810]
[102.87702942 111.67772675]
[96.59967041 125.30104065]
[90.32231140 138.92436218]
[84.04495239 152.54766846]
[77.76758575 166.17098999]
[71.49022675 179.79431152]
[65.21286774 193.41761780]
[58.93550491 207.04093933]
[59.16048050 213.64857483]
[56.42529297 218.63012695]
[52.26306915 220.97212219]
[45.58287430 234.40249634]
[38.90267944 247.83287048]
[32.52407455 261.40908813]
[26.45024300 275.12432861]
[20.37640762 288.83959961]
[14.30257416 302.55487061]
[13.68905354 311.66867065]
[8.03485489 316.42807007]
[1.75749445 330.05139160]
[-4.51986647 343.67471313]
[8.22695827 351.61962891]
[19.87747574 361.09951782]
[30.24794197 371.96490479]
[39.17480087 384.04443359]
[46.51725769 397.14755249]
[52.15951538 411.06759644]
[56.01258850 425.58508301]
[58.01570511 440.47100830]
[58.13727570 455.49060059]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 201]
[40 200]
[41 199]
[42 197]
[43 196]
[44 195]
[45 194]
[49 193]
[50 192]
[51 191]
[52 188]
[53 187]
[54 186]
[55 185]
[56 184]
[57 183]
[58 182]
[59 181]
[60 178]
[61 177]
[62 176]
[71 166]
[72 165]
[73 164]
[74 163]
[75 162]
[77 160]
[78 159]
[81 158]
[82 157]
[83 156]
[86 154]
[87 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
