%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[19.84237862 189.42683411]
[23.68603134 203.93547058]
[26.28540802 218.71778870]
[27.62178230 233.66729736]
[27.68552589 248.67628479]
[26.47617531 263.63662720]
[24.00244904 278.44049072]
[20.28216743 292.98123169]
[15.34213734 307.15408325]
[9.21795177 320.85693359]
[1.95373642 333.99105835]
[-6.39816952 346.46179199]
[-15.77758884 358.17932129]
[-26.11694145 369.05920410]
[-37.34173203 379.02304077]
[-49.37108231 387.99902344]
[-62.11832047 395.92251587]
[-75.49160004 402.73641968]
[-89.39456177 408.39163208]
[-103.72704315 412.84741211]
[-118.38576508 416.07162476]
[-133.26512146 418.04110718]
[-148.25788879 418.74160767]
[-163.25605774 418.16809082]
[-178.15155029 416.32467651]
[-192.83705139 413.22470093]
[-207.20674133 408.89044189]
[-221.15708923 403.35317993]
[-234.58760071 396.65277100]
[-247.40147400 388.83749390]
[-259.50640869 379.96368408]
[-270.81515503 370.09524536]
[-281.24627686 359.30334473]
[-290.72457886 347.66564941]
[-299.18179321 335.26608276]
[-306.55694580 322.19393921]
[-312.79696655 308.54342651]
[-317.85681152 294.41293335]
[-321.70010376 279.90420532]
[-324.29910278 265.12179565]
[-325.63510132 250.17225647]
[-325.69845581 235.16326904]
[-324.48870850 220.20297241]
[-322.01458740 205.39916992]
[-318.29394531 190.85852051]
[-313.35354614 176.68579102]
[-307.22900391 162.98309326]
[-299.96444702 149.84916687]
[-291.61221313 137.37863159]
[-282.23251343 125.66135406]
[-271.89285278 114.78174591]
[-260.66781616 104.81820679]
[-248.63824463 95.84251404]
[-235.89079285 87.91934967]
[-222.51733398 81.10579681]
[-208.61422729 75.45094299]
[-194.28163147 70.99554443]
[-179.62283325 67.77169037]
[-164.74342346 65.80261993]
[-149.75064087 65.10250854]
[-134.75248718 65.67640686]
[-119.85704041 67.52018738]
[-105.17162323 70.62055206]
[-90.80204010 74.95516968]
[-76.85182953 80.49280548]
[-63.42149734 87.19356537]
[-50.60782623 95.00916290]
[-38.50312805 103.88329315]
[-27.19462204 113.75200653]
[-16.76378822 124.54420471]
[-7.28578329 136.18212891]
[1.17110372 148.58192444]
[14.23528862 141.21122742]
[27.29947472 133.84054565]
[40.30842590 126.37280273]
[53.26142502 118.80842590]
[66.21442413 111.24404144]
[79.16741943 103.67966461]
[92.12042236 96.11528778]
[93.14171600 93.24362183]
[95.23046112 90.68009949]
[98.27454376 88.82079315]
[102.01709747 88.01482391]
[106.07728577 88.51264954]
[119.45755768 81.73265839]
[106.23188782 74.65580750]
[103.36864471 59.93161774]
[112.97849274 48.41420746]
[127.97741699 48.59378052]
[137.30876160 60.33796692]
[134.09483337 74.98808289]
[147.94232178 69.22204590]
[161.78981018 63.45601654]
[171.55541992 51.00838852]
[186.27902222 53.25880432]
[200.12651062 47.49277115]
[213.97399902 41.72673798]
[209.11453247 27.53010368]
[205.18420410 13.04868698]
[202.19949341 -1.65676916]
[200.17294312 -16.52458572]
[199.11302185 -31.49240112]
[199.02420044 -46.49743271]
[199.90682983 -61.47674942]
[201.75723267 -76.36751556]
[204.56762695 -91.10727692]
[208.32624817 -105.63420868]
[213.01730347 -119.88738251]
[218.62112427 -133.80700684]
[225.11421204 -147.33470154]
[232.46934509 -160.41374207]
[240.65565491 -172.98924255]
[249.63879395 -185.00846863]
[259.38110352 -196.42102051]
[269.84173584 -207.17900085]
[280.97677612 -217.23731995]
[292.73956299 -226.55377197]
[305.08071899 -235.08926392]
[317.94848633 -242.80802917]
[331.28890991 -249.67765808]
[345.04602051 -255.66937256]
[359.16213989 -260.75799561]
[373.57803345 -264.92224121]
[388.23324585 -268.14459229]
[403.06631470 -270.41156006]
[418.01501465 -271.71362305]
[433.01666260 -272.04534912]
[448.00830078 -271.40527344]
[462.92706299 -269.79617310]
[477.71038818 -267.22473145]
[492.29626465 -263.70178223]
[506.62350464 -259.24206543]
[520.63201904 -253.86428833]
[534.26306152 -247.59101868]
[547.45941162 -240.44857788]
[560.16577148 -232.46691895]
[572.32885742 -223.67950439]
[583.89758301 -214.12319946]
[594.82354736 -203.83808899]
[605.06079102 -192.86732483]
[614.56640625 -181.25689697]
[623.30053711 -169.05552673]
[631.22662354 -156.31439209]
[638.31127930 -143.08691406]
[644.52490234 -129.42858887]
[649.84136963 -115.39669037]
[654.23840332 -101.05008698]
[657.69757080 -86.44895935]
[660.20434570 -71.65453339]
[661.74822998 -56.72887039]
[662.32275391 -41.73457718]
[661.92541504 -26.73454285]
[660.55804443 -11.79168034]
[658.22625732 3.03133059]
[654.93988037 17.67231750]
[650.71264648 32.06987381]
[645.56231689 46.16360474]
[639.51055908 59.89439774]
[632.58264160 73.20466614]
[624.80767822 86.03857422]
[616.21832275 98.34230042]
[606.85052490 110.06422424]
[596.74365234 121.15519714]
[585.94006348 131.56867981]
[574.48498535 141.26101685]
[562.42663574 150.19152832]
[549.81542969 158.32278442]
[536.70440674 165.62065125]
[523.14843750 172.05455017]
[509.20443726 177.59747314]
[494.93090820 182.22616577]
[480.38766479 185.92123413]
[465.63577271 188.66716003]
[450.73706055 190.45245361]
[435.75402832 191.26959229]
[420.74951172 191.11517334]
[405.78646851 189.98982239]
[390.92767334 187.89828491]
[376.23541260 184.84931946]
[361.77130127 180.85572815]
[347.59603882 175.93423462]
[333.76910400 170.10549927]
[320.34841919 163.39398193]
[307.39035034 155.82780457]
[294.94918823 147.43872070]
[283.07714844 138.26191711]
[271.82403564 128.33587646]
[261.23703003 117.70223999]
[251.36053467 106.40560913]
[242.23599243 94.49336243]
[233.90167236 82.01546478]
[226.39251709 69.02425385]
[219.74003601 55.57422638]
[205.89254761 61.34025955]
[192.04505920 67.10629272]
[183.26991272 79.14149475]
[167.55583191 77.30349731]
[153.70834351 83.06953430]
[139.86087036 88.83557129]
[126.23754883 95.11293030]
[112.85727692 101.89292145]
[99.68479919 109.06828308]
[86.73180389 116.63266754]
[73.77880096 124.19704437]
[60.82580566 131.76142883]
[47.87280655 139.32580566]
[42.04040527 146.35580444]
[34.67016220 146.90472412]
[21.60597801 154.27542114]
[8.54179287 161.64610291]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[72 210]
[73 209]
[74 208]
[75 206]
[76 205]
[77 204]
[78 203]
[79 202]
[84 201]
[85 200]
[91 199]
[92 198]
[93 197]
[95 195]
[96 194]
[97 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
