%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[38.20676041 839.66809082]
[23.21459007 840.22967529]
[8.21247768 840.09826660]
[-6.76755762 839.27416992]
[-21.69355011 837.75909424]
[-36.53364563 835.55633545]
[-51.25617218 832.67053223]
[-65.82971191 829.10791016]
[-80.22317505 824.87597656]
[-94.40582275 819.98388672]
[-108.34741211 814.44195557]
[-122.01817322 808.26208496]
[-135.38894653 801.45745850]
[-148.43118286 794.04254150]
[-161.11706543 786.03320312]
[-173.41950989 777.44659424]
[-185.31225586 768.30090332]
[-196.76994324 758.61578369]
[-207.76811218 748.41180420]
[-218.28327942 737.71081543]
[-228.29302979 726.53558350]
[-237.77598572 714.90997314]
[-246.71191406 702.85888672]
[-255.08172607 690.40789795]
[-262.86758423 677.58367920]
[-270.05288696 664.41351318]
[-276.62225342 650.92559814]
[-282.56170654 637.14868164]
[-287.85855103 623.11218262]
[-292.50149536 608.84600830]
[-296.48062134 594.38061523]
[-299.78744507 579.74688721]
[-302.41488647 564.97607422]
[-304.35736084 550.09967041]
[-305.61071777 535.14941406]
[-306.17227173 520.15728760]
[-306.04086304 505.15515137]
[-305.21673584 490.17510986]
[-303.70166016 475.24911499]
[-301.49884033 460.40902710]
[-298.61303711 445.68652344]
[-295.05035400 431.11297607]
[-290.81842041 416.71954346]
[-285.92623901 402.53689575]
[-280.38430786 388.59530640]
[-274.20440674 374.92456055]
[-267.39974976 361.55380249]
[-259.98483276 348.51159668]
[-251.97547913 335.82571411]
[-243.38880920 323.52328491]
[-234.24311829 311.63055420]
[-224.55795288 300.17288208]
[-214.35395813 289.17474365]
[-203.65292358 278.65960693]
[-192.47769165 268.64987183]
[-180.85208130 259.16696167]
[-168.80091858 250.23104858]
[-156.34994507 241.86125183]
[-143.52569580 234.07540894]
[-130.35554504 226.89015198]
[-116.86762238 220.32080078]
[-103.09069061 214.38137817]
[-89.05415344 209.08456421]
[-74.78796387 204.44165039]
[-60.32257843 200.46255493]
[-45.68885803 197.15577698]
[-30.91803169 194.52835083]
[-16.04162407 192.58590698]
[-1.09138024 191.33258057]
[13.90079403 190.77104187]
[28.90290451 190.90249634]
[43.88293839 191.72666931]
[58.80892181 193.24177551]
[73.64900970 195.44461060]
[76.53427887 180.72471619]
[79.41955566 166.00483704]
[82.30482483 151.28494263]
[77.16011810 137.30705261]
[87.40741730 125.25286865]
[90.29269409 110.53297424]
[85.94354248 97.24476624]
[94.98741913 86.58174896]
[81.13071442 78.95204163]
[70.32325745 67.42793274]
[63.61422729 53.14572144]
[61.64949799 37.50860214]
[64.60947418 22.04878426]
[72.19261169 8.27736187]
[83.64608002 -2.46337628]
[97.84048462 -9.13078499]
[113.38124084 -11.08306408]
[116.04703522 -25.84428215]
[118.71282959 -40.60549927]
[121.37862396 -55.36671448]
[124.04441833 -70.12792969]
[126.37990570 -84.94499969]
[128.38392639 -99.81053162]
[130.38793945 -114.67605591]
[116.40876007 -120.33586121]
[104.27678680 -129.29499817]
[94.75464630 -140.99028015]
[88.44091797 -154.68653870]
[85.73246765 -169.52282715]
[86.79956818 -184.56649780]
[91.57513428 -198.87190247]
[99.75896454 -211.53981018]
[110.83663177 -221.77388000]
[124.11176300 -228.93080139]
[138.74989319 -232.56068420]
[153.83084106 -232.43534851]
[168.40661621 -228.56268311]
[181.56097412 -221.18611145]
[192.46701050 -210.76933289]
[200.43916321 -197.96716309]
[204.97631836 -183.58435059]
[205.79322815 -168.52502441]
[202.83857727 -153.73580933]
[196.29808044 -140.14637756]
[186.58287048 -128.61097717]
[174.30368042 -119.85471344]
[160.23236084 -114.42802429]
[145.25346375 -112.67204285]
[143.24945068 -97.80651855]
[141.24543762 -82.94098663]
[143.08094788 -79.93046570]
[143.54948425 -75.88133240]
[142.17875671 -71.44573975]
[138.80563354 -67.46213531]
[136.13984680 -52.70092010]
[133.47404480 -37.93970490]
[130.80825806 -23.17848587]
[128.14245605 -8.41726875]
[140.86326599 -1.98555541]
[151.26715088 7.78169632]
[158.50436401 20.09905052]
[161.98034668 33.97230530]
[161.40454102 48.27872467]
[156.81468201 61.85791397]
[148.57443237 73.60594177]
[137.34458923 82.56505585]
[124.03015137 88.00179291]
[109.70730591 89.46702576]
[114.05645752 102.75523376]
[105.01258087 113.41825104]
[102.12731171 128.13813782]
[107.06564331 143.16888428]
[97.02471924 154.17021179]
[94.13944244 168.89010620]
[91.25417328 183.61000061]
[88.36889648 198.32987976]
[102.94245911 201.89247131]
[117.33592987 206.12431335]
[131.51860046 211.01638794]
[145.46022034 216.55824280]
[159.13101196 222.73806763]
[172.50180054 229.54264832]
[185.54406738 236.95748901]
[198.22998047 244.96675110]
[210.53245544 253.55334473]
[222.42524719 262.69894409]
[233.88298035 272.38406372]
[244.88117981 282.58798218]
[255.39640808 293.28894043]
[265.40618896 304.46414185]
[274.88919067 316.08966064]
[283.82516479 328.14077759]
[292.19503784 340.59170532]
[299.98095703 353.41589355]
[307.16632080 366.58599854]
[313.73574829 380.07388306]
[319.67526245 393.85079956]
[324.97216797 407.88729858]
[329.61514282 422.15344238]
[333.59432983 436.61880493]
[336.90121460 451.25250244]
[339.52871704 466.02331543]
[341.47125244 480.89971924]
[342.72467041 495.84994507]
[343.28631592 510.84213257]
[343.15493774 525.84423828]
[342.33087158 540.82427979]
[340.81585693 555.75024414]
[338.61309814 570.59039307]
[335.72735596 585.31292725]
[332.16473389 599.88647461]
[327.93286133 614.27990723]
[323.04077148 628.46258545]
[317.49887085 642.40417480]
[311.31903076 656.07495117]
[304.51440430 669.44573975]
[297.09954834 682.48797607]
[289.09027100 695.17388916]
[280.50363159 707.47631836]
[271.35800171 719.36914062]
[261.67288208 730.82684326]
[251.46894836 741.82501221]
[240.76794434 752.34020996]
[229.59274292 762.34997559]
[217.96717834 771.83294678]
[205.91606140 780.76892090]
[193.46511841 789.13873291]
[180.64089966 796.92462158]
[167.47077942 804.10998535]
[153.98287964 810.67938232]
[140.20597839 816.61883545]
[126.16945648 821.91571045]
[111.90329742 826.55871582]
[97.43791962 830.53784180]
[82.80421448 833.84466553]
[68.03340149 836.47216797]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[74 150]
[75 149]
[76 148]
[77 147]
[79 145]
[80 144]
[82 142]
[91 132]
[92 131]
[93 130]
[94 129]
[95 128]
[96 124]
[97 123]
[98 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
