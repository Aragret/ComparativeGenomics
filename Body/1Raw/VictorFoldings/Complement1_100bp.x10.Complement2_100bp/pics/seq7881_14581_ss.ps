%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[124.24436188 804.44342041]
[109.81924438 800.31341553]
[95.67273712 795.31170654]
[81.85747528 789.45684814]
[68.42483521 782.77069092]
[55.42480850 775.27801514]
[42.90574265 767.00671387]
[30.91421509 757.98760986]
[19.49483299 748.25427246]
[8.69007778 737.84283447]
[-1.45985496 726.79205322]
[-10.91720676 715.14300537]
[-19.64679527 702.93914795]
[-27.61614609 690.22576904]
[-34.79561234 677.05017090]
[-41.15848541 663.46136475]
[-46.68109894 649.51000977]
[-51.34289932 635.24786377]
[-55.12655258 620.72802734]
[-58.01797867 606.00457764]
[-60.00642395 591.13220215]
[-61.08449173 576.16632080]
[-61.24816895 561.16247559]
[-60.49684525 546.17663574]
[-58.83331680 531.26440430]
[-56.26377869 516.48138428]
[-52.79777908 501.88250732]
[-48.44821930 487.52206421]
[-43.23127747 473.45349121]
[-37.16636276 459.72915649]
[-30.27603531 446.40008545]
[-22.58592796 433.51586914]
[-14.12465000 421.12442017]
[-4.92367554 409.27188110]
[4.98276472 398.00228882]
[15.55781841 387.35763550]
[26.76214600 377.37744141]
[38.55406570 368.09890747]
[50.88971329 359.55648804]
[63.72319412 351.78201294]
[77.00676727 344.80438232]
[90.69102478 338.64953613]
[104.72504425 333.34039307]
[119.05663300 328.89669800]
[133.63247681 325.33496094]
[130.96667480 310.57376099]
[128.30087280 295.81253052]
[125.63508606 281.05133057]
[122.96929169 266.29010010]
[113.09326935 255.14050293]
[118.25483704 240.18493652]
[105.91033936 231.92970276]
[102.99656677 216.99771118]
[111.73911285 204.10563660]
[109.07331848 189.34442139]
[106.40752411 174.58320618]
[103.74172974 159.82199097]
[101.07592773 145.06076050]
[98.30032349 130.31980896]
[95.41504669 115.59991455]
[86.15850830 108.53182983]
[84.00343323 97.08644867]
[90.05548859 87.13587189]
[87.38969421 72.37465668]
[84.72389221 57.61344147]
[74.65720367 45.40802002]
[80.00944519 31.50828362]
[75.19992828 45.71632767]
[65.87512970 57.46571732]
[53.13051987 65.37614441]
[38.46331787 68.51829529]
[23.59661102 66.52304077]
[10.27692699 59.62477875]
[0.06905099 48.63390732]
[-5.82780790 34.84162140]
[-6.72089195 19.86823273]
[-2.50528264 5.47279549]
[6.32377434 -6.65352964]
[18.72904968 -15.08615208]
[33.25318527 -18.83441734]
[48.18989944 -17.45798302]
[61.78444290 -11.11854839]
[72.43974304 -0.56086719]
[78.90444183 12.97626591]
[79.79725647 -1.99714005]
[80.69007111 -16.97054672]
[81.58288574 -31.94395065]
[82.47570801 -46.91735840]
[68.85547638 -53.60802841]
[58.86142349 -64.97296906]
[53.99309921 -79.25978851]
[54.96287918 -94.28134155]
[61.59190750 -107.75059509]
[72.84208679 -117.62879181]
[86.97852325 -122.43405914]
[87.87133789 -137.40745544]
[80.96915436 -151.64370728]
[89.45027924 -163.88787842]
[75.35984039 -169.39375305]
[63.66173172 -178.98591614]
[55.50201797 -191.72459412]
[51.68009949 -206.36181641]
[52.57041168 -221.46356201]
[58.08573151 -235.55030823]
[67.68572235 -247.24198914]
[80.42987823 -255.39315796]
[95.06965637 -259.20526123]
[110.17079163 -258.30484009]
[124.25384521 -252.78007507]
[135.93908691 -243.17225647]
[144.08172607 -230.42263794]
[147.88401794 -215.78031921]
[146.97346497 -200.67977905]
[141.43927002 -186.60043335]
[131.82362366 -174.92163086]
[119.06855774 -166.78755188]
[104.42368317 -162.99505615]
[111.38972473 -149.82981873]
[102.84474182 -136.51464844]
[101.95192719 -121.54124451]
[115.41718292 -115.09017944]
[125.41381073 -103.94509888]
[130.39530945 -89.78354645]
[129.57319641 -74.75318909]
[123.04164124 -61.14611435]
[111.76789093 -51.04930115]
[97.44911194 -46.02453995]
[96.55629730 -31.05113602]
[95.66348267 -16.07773018]
[94.77066040 -1.10432422]
[93.87784576 13.86908150]
[94.77066040 28.84248734]
[104.64668274 39.99208450]
[99.48511505 54.94764328]
[102.15090942 69.70886230]
[104.81670380 84.47007751]
[115.97894287 96.99128723]
[110.13494110 112.71463776]
[113.02021027 127.43453217]
[117.74187469 135.25398254]
[115.83715057 142.39497375]
[118.50294495 157.15618896]
[121.16873932 171.91740417]
[123.83453369 186.67861938]
[126.50032806 201.43983459]
[139.20002747 210.45956421]
[141.69325256 225.46751404]
[133.01605225 237.51914978]
[143.08274841 249.72456360]
[137.73049927 263.62429810]
[140.39630127 278.38552856]
[143.06210327 293.14672852]
[145.72789001 307.90795898]
[148.39369202 322.66918945]
[163.29461670 320.90756226]
[178.27522278 320.05761719]
[193.27976990 320.12255859]
[208.25245667 321.10211182]
[223.13757324 322.99264526]
[237.87974548 325.78710938]
[252.42414856 329.47512817]
[266.71664429 334.04296875]
[280.70410156 339.47366333]
[294.33444214 345.74694824]
[307.55700684 352.83956909]
[320.32254028 360.72506714]
[332.58364868 369.37417603]
[344.29461670 378.75466919]
[355.41195679 388.83163452]
[365.89428711 399.56765747]
[375.70260620 410.92272949]
[384.80041504 422.85464478]
[393.15390015 435.31900024]
[400.73193359 448.26943970]
[407.50637817 461.65777588]
[413.45202637 475.43423462]
[418.54675293 489.54751587]
[422.77157593 503.94512939]
[426.11080933 518.57354736]
[428.55203247 533.37829590]
[430.08612061 548.30438232]
[430.70742798 563.29620361]
[430.41360474 578.29803467]
[429.20578003 593.25402832]
[427.08840942 608.10858154]
[424.06936646 622.80639648]
[420.15991211 637.29284668]
[415.37457275 651.51403809]
[409.73114014 665.41699219]
[403.25064087 678.95007324]
[395.95715332 692.06286621]
[387.87780762 704.70666504]
[379.04269409 716.83435059]
[369.48464966 728.40087891]
[359.23925781 739.36322021]
[348.34460449 749.68054199]
[336.84121704 759.31451416]
[324.77191162 768.22924805]
[312.18154907 776.39160156]
[299.11703491 783.77124023]
[285.62689209 790.34063721]
[271.76135254 796.07543945]
[257.57199097 800.95428467]
[243.11160278 804.95898438]
[228.43395996 808.07464600]
[213.59365845 810.28973389]
[198.64593506 811.59600830]
[183.64637756 811.98852539]
[168.65078735 811.46588135]
[153.71495056 810.03002930]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 154]
[46 153]
[47 152]
[48 151]
[49 150]
[51 148]
[54 145]
[55 144]
[56 143]
[57 142]
[58 141]
[59 139]
[60 138]
[63 136]
[64 135]
[65 134]
[67 132]
[84 131]
[85 130]
[86 129]
[87 128]
[88 127]
[95 120]
[96 119]
[98 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
