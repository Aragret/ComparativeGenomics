%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[131.45448303 771.60900879]
[116.82274628 768.29272461]
[102.36537933 764.28393555]
[88.11512756 759.59185791]
[74.10428619 754.22698975]
[60.36457443 748.20153809]
[46.92713165 741.52911377]
[33.82239532 734.22491455]
[21.08005142 726.30541992]
[8.72896481 717.78863525]
[-3.20288563 708.69378662]
[-14.68846893 699.04144287]
[-25.70176888 688.85357666]
[-36.21783447 678.15319824]
[-46.21284103 666.96459961]
[-55.66415405 655.31304932]
[-64.55035400 643.22497559]
[-72.85131836 630.72778320]
[-80.54824066 617.84979248]
[-87.62368011 604.62017822]
[-94.06161499 591.06878662]
[-99.84745789 577.22650146]
[-104.96810150 563.12457275]
[-109.41194916 548.79498291]
[-113.16893005 534.27014160]
[-116.23053741 519.58300781]
[-118.58983612 504.76678467]
[-120.24147797 489.85513306]
[-121.18171692 474.88177490]
[-121.40843201 459.88064575]
[-120.92110443 444.88571167]
[-119.72084808 429.93093872]
[-117.81036377 415.05023193]
[-115.19399261 400.27725220]
[-111.87766266 385.64553833]
[-107.86887360 371.18817139]
[-103.17672729 356.93792725]
[-97.81182861 342.92709351]
[-91.78635406 329.18740845]
[-85.11393738 315.74996948]
[-77.80969238 302.64526367]
[-69.89018250 289.90292358]
[-61.37333298 277.55187988]
[-52.27844238 265.62002563]
[-42.62611389 254.13447571]
[-32.43820953 243.12120056]
[-21.73781395 232.60516357]
[-10.54916477 222.61016846]
[1.10239410 213.15888977]
[13.19046593 204.27272034]
[25.68766785 195.97178650]
[38.56568909 188.27488708]
[51.79536057 181.19947815]
[65.34670258 174.76156616]
[79.18903351 168.97576904]
[93.29097748 163.85514832]
[107.62060547 159.41133118]
[103.86430359 144.88926697]
[100.10800171 130.36721802]
[96.35169983 115.84515381]
[86.69087219 109.34056854]
[83.85837555 98.04374695]
[89.30743408 87.75058746]
[85.76776123 73.17421722]
[82.22808838 58.59783936]
[78.68841553 44.02146530]
[75.14874268 29.44508934]
[68.21698761 42.74737167]
[54.84200668 49.53779984]
[40.01233673 47.28371048]
[29.25908089 36.82582092]
[26.59293365 22.06466484]
[33.00830460 8.50579262]
[46.11241913 1.20632613]
[61.01776505 2.88878560]
[72.16560364 12.92666531]
[70.38314056 -1.96705198]
[68.60066986 -16.86076927]
[66.81820679 -31.75448608]
[65.03574371 -46.64820480]
[50.01391220 -47.00231934]
[35.19539261 -49.49074173]
[20.88186836 -54.06281281]
[7.36474752 -60.62545013]
[-5.08078098 -69.04504395]
[-16.20134163 -79.15018463]
[-25.77053452 -90.73514557]
[-33.59354401 -103.56407166]
[-39.51110077 -117.37577820]
[-43.40273285 -131.88908386]
[-45.18921280 -146.80850220]
[-44.83416748 -161.83030701]
[-42.34482956 -176.64868164]
[-37.77186966 -190.96191406]
[-31.20839882 -204.47863770]
[-22.78803444 -216.92364502]
[-12.68220425 -228.04357910]
[-1.09665155 -237.61206055]
[11.73275661 -245.43426514]
[25.54483032 -251.35096741]
[40.05837631 -255.24169922]
[54.97790909 -257.02725220]
[69.99969482 -256.67129517]
[84.81790924 -254.18103027]
[99.13086700 -249.60719299]
[112.64717102 -243.04287720]
[125.09165955 -234.62174988]
[136.21096802 -224.51522827]
[145.77873230 -212.92907715]
[153.60014343 -200.09918213]
[159.51599121 -186.28674316]
[163.40583801 -171.77296448]
[165.19046021 -156.85331726]
[164.83355713 -141.83155823]
[162.34239197 -127.01349640]
[157.76765442 -112.70082092]
[151.20251465 -99.18492126]
[142.78060913 -86.74095154]
[132.67340088 -75.62226868]
[121.08666229 -66.05522919]
[108.25628662 -58.23460007]
[94.44348145 -52.31960678]
[79.92945862 -48.43067169]
[81.71192169 -33.53695297]
[83.49439240 -18.64323616]
[85.27685547 -3.74951792]
[87.05931854 11.14419937]
[89.72512054 25.90541649]
[93.26478577 40.48179245]
[96.80445862 55.05816650]
[100.34413147 69.63454437]
[103.88380432 84.21091461]
[115.77153015 96.04553986]
[110.87375641 112.08885193]
[114.63005829 126.61091614]
[118.38636017 141.13298035]
[122.14266205 155.65502930]
[136.82978821 152.59332275]
[151.64595032 150.23393250]
[166.55760193 148.58218384]
[181.53096008 147.64184570]
[196.53208923 147.41502380]
[211.52703857 147.90225220]
[226.48181152 149.10241699]
[241.36253357 151.01278687]
[256.13549805 153.62905884]
[270.76727295 156.94529724]
[285.22463989 160.95397949]
[299.47491455 165.64604187]
[313.48577881 171.01083374]
[327.22552490 177.03622437]
[340.66299438 183.70854187]
[353.76776123 191.01269531]
[366.51013184 198.93212891]
[378.86126709 207.44888306]
[390.79315186 216.54370117]
[402.27877808 226.19595337]
[413.29214478 236.38377380]
[423.80825806 247.08410645]
[433.80331421 258.27267456]
[443.25466919 269.92419434]
[452.14093018 282.01220703]
[460.44195557 294.50933838]
[468.13891602 307.38729858]
[475.21441650 320.61694336]
[481.65243530 334.16824341]
[487.43832397 348.01052856]
[492.55905151 362.11242676]
[497.00296021 376.44201660]
[500.76000977 390.96682739]
[503.82168579 405.65396118]
[506.18103027 420.47012329]
[507.83273315 435.38180542]
[508.77304077 450.35516357]
[508.99984741 465.35629272]
[508.51257324 480.35122681]
[507.31237793 495.30599976]
[505.40197754 510.18670654]
[502.78567505 524.95965576]
[499.46939087 539.59143066]
[495.46069336 554.04882812]
[490.76858521 568.29907227]
[485.40377808 582.30993652]
[479.37835693 596.04962158]
[472.70599365 609.48712158]
[465.40182495 622.59185791]
[457.48236084 635.33422852]
[448.96557617 647.68530273]
[439.87072754 659.61718750]
[430.21844482 671.10278320]
[420.03060913 682.11614990]
[409.33026123 692.63220215]
[398.14163208 702.62725830]
[386.49011230 712.07861328]
[374.40209961 720.96484375]
[361.90493774 729.26580811]
[349.02694702 736.96276855]
[335.79730225 744.03820801]
[322.24600220 750.47619629]
[308.40368652 756.26208496]
[294.30175781 761.38275146]
[279.97216797 765.82659912]
[265.44732666 769.58361816]
[250.76020813 772.64526367]
[235.94403076 775.00463867]
[221.03236389 776.65631104]
[206.05900574 777.59655762]
[191.05787659 777.82330322]
[176.06292725 777.33599854]
[161.10816956 776.13580322]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 137]
[58 136]
[59 135]
[60 134]
[63 132]
[64 131]
[65 130]
[66 129]
[67 128]
[76 127]
[77 126]
[78 125]
[79 124]
[80 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
