%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[47.05771637 390.53417969]
[48.13262177 405.52294922]
[47.01360321 420.50845337]
[43.72450638 435.17132568]
[38.33544540 449.19900513]
[30.96128654 462.29251099]
[21.75920868 474.17272949]
[10.92535591 484.58642578]
[-1.30934703 493.31167603]
[-14.68411732 500.16247559]
[-28.91387177 504.99279785]
[-43.69530106 507.69967651]
[-58.71333694 508.22543335]
[-73.64787292 506.55883789]
[-88.18057251 502.73541260]
[-102.00167847 496.83670044]
[-114.81658936 488.98840332]
[-126.35214996 479.35778809]
[-136.36248779 468.15014648]
[-144.63421631 455.60437012]
[-150.99104309 441.98788452]
[-155.29745483 427.59094238]
[-157.46168518 412.72036743]
[-157.43757629 397.69314575]
[-155.22564697 382.82958984]
[-150.87304688 368.44650269]
[-144.47256470 354.85049438]
[-136.16061401 342.33132935]
[-126.11437225 331.15588379]
[-114.54796600 321.56234741]
[-101.70793915 313.75518799]
[-87.86797333 307.90084839]
[-73.32308197 304.12408447]
[-58.38327408 302.50543213]
[-43.36700058 303.07937622]
[-28.59433365 305.83367920]
[-14.38015270 310.70962524]
[-7.50074005 297.38018799]
[-0.62132734 284.05078125]
[-2.39182043 266.59130859]
[13.18588543 256.77212524]
[19.86607933 243.34175110]
[14.89781189 229.34703064]
[21.48115921 215.63156128]
[36.19378281 210.51527405]
[42.87397766 197.08489990]
[49.55417252 183.65452576]
[56.13420105 170.17478943]
[62.61369705 156.64643860]
[69.09319305 143.11810303]
[75.57268524 129.58975220]
[74.76949310 126.90404510]
[74.98174286 123.73836517]
[76.39759064 120.47787476]
[79.06239319 117.56869507]
[82.86175537 115.46659088]
[90.13497925 102.34790039]
[90.97853851 94.33160400]
[97.61540985 89.08920288]
[105.08315277 76.08024597]
[112.55089569 63.07129669]
[120.01863861 50.06234360]
[127.38932800 36.99815750]
[134.66255188 23.87946320]
[141.93579102 10.76076984]
[149.20901489 -2.35792422]
[149.13359070 -18.17895126]
[162.07170105 -25.55828667]
[161.97926331 -30.77734184]
[163.72358704 -35.07974243]
[166.64791870 -37.91934586]
[169.97392273 -39.08980942]
[177.82568359 -51.87065125]
[185.67742920 -64.65149689]
[193.52919006 -77.43233490]
[191.29673767 -90.13584137]
[198.09960938 -100.61939240]
[209.83334351 -103.55979919]
[217.87451172 -116.22232819]
[225.91569519 -128.88485718]
[233.95686340 -141.54737854]
[241.99803162 -154.20989990]
[250.03921509 -166.87242126]
[258.08038330 -179.53495789]
[266.02706909 -192.25698853]
[273.87881470 -205.03782654]
[261.77349854 -213.90992737]
[250.43162537 -223.73921204]
[239.92868042 -234.46025085]
[230.33454895 -246.00172424]
[221.71308899 -258.28680420]
[214.12165833 -271.23373413]
[207.61080933 -284.75634766]
[202.22384644 -298.76470947]
[197.99661255 -313.16549683]
[194.95727539 -327.86297607]
[193.12602234 -342.75924683]
[192.51506042 -357.75521851]
[193.12846375 -372.75112915]
[194.96212769 -387.64709473]
[198.00386047 -402.34405518]
[202.23342896 -416.74420166]
[207.62266541 -430.75164795]
[214.13571167 -444.27322388]
[221.72923279 -457.21893311]
[230.35269165 -469.50259399]
[239.94869995 -481.04251099]
[250.45339966 -491.76184082]
[261.79687500 -501.58929443]
[273.90362549 -510.45941162]
[286.69308472 -518.31323242]
[300.08016968 -525.09838867]
[313.97576904 -530.76983643]
[328.28741455 -535.28979492]
[342.91986084 -538.62811279]
[357.77569580 -540.76269531]
[372.75610352 -541.67926025]
[387.76138306 -541.37170410]
[402.69168091 -539.84210205]
[417.44757080 -537.10064697]
[431.93093872 -533.16552734]
[446.04537964 -528.06298828]
[459.69689941 -521.82696533]
[472.79473877 -514.49896240]
[485.25167847 -506.12771606]
[496.98480225 -496.76895142]
[507.91607666 -486.48498535]
[517.97271729 -475.34423828]
[527.08782959 -463.42083740]
[535.20074463 -450.79412842]
[542.25744629 -437.54815674]
[548.21099854 -423.77108765]
[553.02178955 -409.55456543]
[556.65777588 -394.99322510]
[559.09472656 -380.18395996]
[560.31652832 -365.22537231]
[560.31494141 -350.21694946]
[559.09008789 -335.25857544]
[556.65002441 -320.44982910]
[553.01098633 -305.88925171]
[548.19726562 -291.67373657]
[542.24084473 -277.89791870]
[535.18139648 -264.65341187]
[527.06585693 -252.02839661]
[517.94824219 -240.10688782]
[507.88928223 -228.96823120]
[496.95587158 -218.68653870]
[485.22076416 -209.33023071]
[472.76208496 -200.96159363]
[459.66275024 -193.63630676]
[446.00988770 -187.40310669]
[431.89440918 -182.30349731]
[417.41024780 -178.37141418]
[402.65374756 -175.63301086]
[387.72314453 -174.10652161]
[372.71780396 -173.80210876]
[357.73757935 -174.72178650]
[342.88217163 -176.85943604]
[328.25045776 -180.20085144]
[313.93975830 -184.72377014]
[300.04531860 -190.39808655]
[286.65966797 -197.18608093]
[278.80792236 -184.40522766]
[277.98507690 -177.06051636]
[270.74291992 -171.49377441]
[262.70172119 -158.83125305]
[254.66055298 -146.16873169]
[246.61938477 -133.50621033]
[238.57821655 -120.84368134]
[230.53704834 -108.18115234]
[222.49586487 -95.51863098]
[222.70164490 -77.97084808]
[206.31002808 -69.58058167]
[198.45828247 -56.79973984]
[190.60652161 -44.01889801]
[182.75476074 -31.23805428]
[175.19038391 -18.28505707]
[175.78604126 -3.40236640]
[162.32771301 4.91530514]
[155.05447388 18.03399849]
[147.78125000 31.15269279]
[140.50802612 44.27138901]
[140.01397705 51.64551163]
[133.02758789 57.53008270]
[125.55984497 70.53903961]
[118.09210968 83.54798889]
[110.62436676 96.55693817]
[103.25367737 109.62112427]
[95.98044586 122.73982239]
[89.10103607 136.06924438]
[82.62153625 149.59759521]
[76.14204407 163.12594604]
[69.66254425 176.65428162]
[68.77794647 185.74578857]
[62.98455048 190.33471680]
[56.30435562 203.76509094]
[49.62416077 217.19546509]
[54.42059326 232.01545715]
[47.45460510 245.54060364]
[33.29645538 250.02194214]
[26.61626053 263.45233154]
[29.97315788 275.90600586]
[24.13271523 286.95465088]
[12.70810223 290.93017578]
[5.82868910 304.25961304]
[-1.05072320 317.58905029]
[11.15824413 326.35025024]
[21.96139717 336.79580688]
[31.12846375 348.70306396]
[38.46405029 361.81820679]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 206]
[38 205]
[39 204]
[41 201]
[42 200]
[45 197]
[46 196]
[47 195]
[48 193]
[49 192]
[50 191]
[51 190]
[56 189]
[57 188]
[59 187]
[60 186]
[61 185]
[62 184]
[63 182]
[64 181]
[65 180]
[66 179]
[68 177]
[72 176]
[73 175]
[74 174]
[75 173]
[78 171]
[79 170]
[80 169]
[81 168]
[82 167]
[83 166]
[84 165]
[85 163]
[86 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
