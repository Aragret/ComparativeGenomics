%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUAxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[52.92381668 597.66326904]
[53.88277817 612.89624023]
[48.12948227 627.03350830]
[36.80625153 637.26812744]
[22.16132164 641.56793213]
[7.10245514 639.07934570]
[-5.38040113 630.29632568]
[-12.80876637 616.96282959]
[-13.70773220 601.72619629]
[-7.89880991 587.61169434]
[3.46463609 577.42175293]
[18.12638474 573.17962646]
[20.57211113 558.38037109]
[23.01783943 543.58105469]
[25.46356583 528.78179932]
[11.36466694 519.47155762]
[2.72547603 504.88735962]
[1.32573581 487.93878174]
[7.49528742 472.03167725]
[20.03800964 460.38388062]
[36.46338654 455.37420654]
[38.46739960 440.50866699]
[40.47141266 425.64315796]
[42.47542572 410.77761841]
[44.47943878 395.91207886]
[46.48345566 381.04656982]
[48.48746872 366.18103027]
[36.53235245 352.31774902]
[38.54158401 333.80084229]
[53.70315933 322.44122314]
[55.26368332 307.52261353]
[56.82420349 292.60400391]
[58.38472748 277.68539429]
[59.50037766 262.72695923]
[52.33909607 249.66688538]
[60.68488693 236.22596741]
[61.35467529 221.24092102]
[62.02445984 206.25588989]
[54.32222748 219.12739563]
[42.90053558 228.85081482]
[28.96474266 234.40002441]
[13.98552799 235.18939209]
[-0.45631886 231.13562012]
[-12.83671379 222.66650391]
[-21.84912491 210.67582703]
[-26.54244995 196.42898560]
[-26.42139244 181.42947388]
[-21.49872780 167.26022339]
[-12.29395580 155.41656494]
[0.22152156 147.14839172]
[14.72691631 143.32824707]
[29.69144058 144.35928345]
[43.53585052 150.13269043]
[54.79911423 160.03919983]
[62.29259109 173.03335571]
[65.22547913 187.74401855]
[69.62648010 173.40417480]
[74.02748108 159.06433105]
[70.36487579 144.62705994]
[81.81063080 133.70436096]
[86.21162415 119.36450958]
[90.61262512 105.02466583]
[93.82589722 90.37287903]
[95.82991028 75.50734711]
[97.83392334 60.64182281]
[99.83793640 45.77629471]
[94.01371765 31.06612587]
[103.38202667 19.48666191]
[92.57855988 29.89267349]
[77.88523865 32.91033554]
[63.85494995 27.60459328]
[54.83512497 15.61948490]
[53.62066269 0.66873014]
[60.58787155 -12.61501884]
[73.57788849 -20.11564636]
[88.56562042 -19.50900269]
[100.90694427 -10.98306274]
[106.77780914 2.82057476]
[110.74990082 -11.64394951]
[110.00468445 -20.74793053]
[114.89031219 -26.29341698]
[119.07732391 -40.69720078]
[123.26433563 -55.10098267]
[124.60256958 -70.04116821]
[123.04204559 -84.95977020]
[121.48152161 -99.87837219]
[119.92099762 -114.79698181]
[117.24700928 -118.21805573]
[115.93290710 -121.93795013]
[115.90564728 -125.49247742]
[116.94892883 -128.48883057]
[118.73891449 -130.64617920]
[118.06912994 -145.63121033]
[117.39934540 -160.61625671]
[116.72956085 -175.60128784]
[108.38376617 -189.04220581]
[115.54505157 -202.10227966]
[101.35466766 -207.62973022]
[90.64393616 -218.45564270]
[85.26856995 -232.70433044]
[86.15987396 -247.90715027]
[93.16342163 -261.43008423]
[105.06581116 -270.93023682]
[119.80488586 -274.76165771]
[134.82701111 -272.26049805]
[147.52949524 -263.86007690]
[155.71157837 -251.01589966]
[157.95565796 -235.95323181]
[153.87292480 -221.28178406]
[144.17074585 -209.54348755]
[130.53009033 -202.77206421]
[138.82797241 -190.40296936]
[131.71459961 -176.27107239]
[132.38438416 -161.28604126]
[133.05416870 -146.30099487]
[133.72395325 -131.31596375]
[134.83959961 -116.35750580]
[136.40013123 -101.43889618]
[137.96064758 -86.52029419]
[139.52117920 -71.60169220]
[144.71449280 -85.67398071]
[152.87052917 -98.26282501]
[163.59132385 -108.75399780]
[176.35379028 -116.63559723]
[190.53520203 -121.52306366]
[205.44363403 -123.17794037]
[220.35166931 -121.51946259]
[234.53190613 -116.62857056]
[247.29246521 -108.74388885]
[258.01074219 -98.25012970]
[266.16372681 -85.65931702]
[271.35363770 -71.58576965]
[273.32727051 -56.71617508]
[271.98831177 -41.77605820]
[267.40209961 -27.49437141]
[259.79238892 -14.56795502]
[249.53047180 -3.62751603]
[237.11706543 4.79313660]
[223.15783691 10.28314114]
[208.33390808 12.57462692]
[193.36854553 11.55578899]
[178.99195862 7.27633762]
[165.90560913 -0.05492302]
[154.74800110 -10.08028412]
[146.06355286 -22.31058693]
[140.27598572 -36.14908600]
[137.66812134 -50.91397095]
[133.48110962 -36.51018906]
[129.29409790 -22.10640526]
[125.21443176 -7.67185307]
[121.24233246 6.79267073]
[118.24755859 21.49067497]
[124.21511841 35.13756180]
[114.70346832 47.78030777]
[112.69945526 62.64583588]
[110.69544220 77.51136017]
[108.69142914 92.37689209]
[118.72856903 81.22988892]
[132.76399231 75.93773651]
[147.66215515 77.68272400]
[160.09475708 86.07500458]
[167.28431702 99.23973846]
[167.62469482 114.23587799]
[161.03982544 127.71324921]
[149.00079346 136.66096497]
[134.19715881 139.08010864]
[119.93607330 134.43020630]
[109.40351105 123.75007629]
[104.95246887 109.42565918]
[100.55147552 123.76551056]
[96.15047455 138.10536194]
[99.49828339 153.56829834]
[88.36732483 163.46531677]
[83.96633148 177.80517578]
[79.56533051 192.14501953]
[77.00949860 206.92567444]
[76.33971405 221.91070557]
[75.66992950 236.89575195]
[82.78330231 251.02764893]
[74.48541260 263.39672852]
[76.62233734 267.17660522]
[77.37008667 271.05029297]
[76.86976624 274.56954956]
[75.39353180 277.37799072]
[73.30332947 279.24591064]
[71.74280548 294.16452026]
[70.18228912 309.08312988]
[68.62176514 324.00173950]
[77.76245880 331.60333252]
[82.05478668 342.56130981]
[80.54013824 354.11117554]
[73.70949554 363.39868164]
[63.35299683 368.18505859]
[61.34898376 383.05056763]
[59.34496689 397.91610718]
[57.34095383 412.78164673]
[55.33694077 427.64715576]
[53.33292770 442.51269531]
[51.32891464 457.37820435]
[62.85392380 463.84164429]
[71.47570801 473.81277466]
[76.18447113 486.09060669]
[76.44001007 499.20599365]
[72.23361969 511.59744263]
[64.08650970 521.79705811]
[52.98535919 528.60430908]
[40.26283646 531.22753906]
[37.81711197 546.02679443]
[35.37138367 560.82604980]
[32.92565536 575.62536621]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 210]
[13 209]
[14 208]
[15 207]
[21 199]
[22 198]
[23 197]
[24 196]
[25 195]
[26 194]
[27 193]
[30 188]
[31 187]
[32 186]
[33 185]
[34 180]
[36 178]
[37 177]
[38 176]
[56 175]
[57 174]
[58 173]
[60 171]
[61 170]
[62 169]
[63 157]
[64 156]
[65 155]
[66 154]
[68 152]
[78 151]
[79 150]
[81 149]
[82 148]
[83 147]
[84 120]
[85 119]
[86 118]
[87 117]
[92 116]
[93 115]
[94 114]
[95 113]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
