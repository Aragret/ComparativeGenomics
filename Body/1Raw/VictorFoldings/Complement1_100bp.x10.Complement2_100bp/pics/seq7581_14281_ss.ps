%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[169.78718567 559.03955078]
[161.30886841 546.65850830]
[153.68572998 533.73327637]
[146.95257568 520.32293701]
[141.14010620 506.48861694]
[136.27484131 492.29348755]
[132.37901306 477.80227661]
[129.47035217 463.08108521]
[127.56217194 448.19714355]
[126.66315460 433.21835327]
[126.77740479 418.21301270]
[127.90440369 403.24963379]
[130.03901672 388.39648438]
[133.17149353 373.72131348]
[137.28753662 359.29110718]
[142.36839294 345.17169189]
[148.39083862 331.42749023]
[155.32742310 318.12121582]
[163.14649963 305.31359863]
[171.81237793 293.06304932]
[181.28550720 281.42550659]
[191.52268982 270.45404053]
[202.47718811 260.19869995]
[192.98828125 248.58143616]
[183.49938965 236.96417236]
[174.01049805 225.34690857]
[164.52159119 213.72966003]
[164.01605225 228.72113037]
[154.88653564 240.62289429]
[140.53811646 244.99586487]
[126.32241058 240.20904541]
[117.54151154 228.04780579]
[117.47049713 213.04797363]
[126.13583374 200.80412292]
[140.30557251 195.88290405]
[154.69572449 200.12046814]
[141.34133911 193.52430725]
[140.47494507 177.72683716]
[132.43377686 165.06431580]
[124.39260101 152.40179443]
[116.35142517 139.73927307]
[101.78332520 142.93481445]
[87.00040436 140.95838928]
[73.78343201 134.04806519]
[63.72453690 123.03626251]
[58.03542709 109.24949646]
[57.40141678 94.34851837]
[61.89888000 80.12833405]
[70.98605347 68.30190277]
[62.94487762 55.63937759]
[54.90370560 42.97685623]
[40.97414780 35.47498322]
[40.68291855 20.58322716]
[33.44073868 15.01648235]
[32.61791611 7.67177248]
[24.76616096 -5.10906982]
[16.91440582 -17.88991165]
[9.06265068 -30.67075539]
[1.21089554 -43.45159912]
[-6.64086008 -56.23244095]
[-14.49261570 -69.01328278]
[-28.12819862 -62.71985626]
[-42.41242981 -58.08336258]
[-57.14478302 -55.16889572]
[-72.11843872 -54.01736450]
[-87.12319183 -54.64493942]
[-101.94838715 -57.04280472]
[-116.38591766 -61.17730713]
[-130.23309326 -66.99039459]
[-143.29553223 -74.40046692]
[-155.38984680 -83.30349731]
[-166.34625244 -93.57450104]
[-176.01094055 -105.06928253]
[-184.24824524 -117.62648010]
[-190.94250488 -131.06980896]
[-195.99977112 -145.21055603]
[-199.34901428 -159.85018921]
[-200.94323730 -174.78320312]
[-200.76007080 -189.79995728]
[-198.80204773 -204.68963623]
[-195.09669495 -219.24320984]
[-189.69601440 -233.25637817]
[-182.67582703 -246.53242493]
[-174.13467407 -258.88494873]
[-164.19245911 -270.14056396]
[-152.98876953 -280.14126587]
[-140.68089294 -288.74661255]
[-127.44158936 -295.83587646]
[-113.45673370 -301.30944824]
[-98.92264557 -305.09054565]
[-84.04336548 -307.12606812]
[-69.02777100 -307.38745117]
[-54.08666229 -305.87100220]
[-39.42978668 -302.59805298]
[-25.26290131 -297.61450195]
[-11.78488922 -290.99032593]
[0.81503904 -282.81854248]
[12.35999966 -273.21383667]
[22.68792152 -262.31106567]
[31.65381432 -250.26329041]
[39.13181305 -237.23962402]
[45.01693344 -223.42291260]
[49.22656631 -209.00711060]
[51.70160675 -194.19459534]
[52.40731430 -179.19331360]
[51.33377838 -164.21386719]
[48.49607086 -149.46653748]
[43.93402863 -135.15835571]
[37.71170044 -121.49017334]
[29.91642952 -108.65389252]
[20.65765572 -96.82970428]
[10.06535435 -86.18360138]
[-1.71177292 -76.86503601]
[6.13998270 -64.08419800]
[13.99173832 -51.30335236]
[21.84349442 -38.52251053]
[29.69524956 -25.74166870]
[37.54700470 -12.96082592]
[45.39876175 -0.17998293]
[53.34544373 12.54205322]
[66.69984436 19.13821602]
[67.56623077 34.93568039]
[75.60739899 47.59820557]
[83.64857483 60.26073074]
[98.21667480 57.06518555]
[112.99959564 59.04161835]
[126.21656799 65.95194244]
[136.27546692 76.96373749]
[141.96456909 90.75050354]
[142.59858704 105.65148163]
[138.10112000 119.87166595]
[129.01394653 131.69808960]
[137.05513000 144.36062622]
[145.09629822 157.02314758]
[153.13746643 169.68566895]
[167.06703186 177.18754578]
[167.35826111 192.07929993]
[176.13885498 204.24075317]
[185.62776184 215.85801697]
[195.11665344 227.47528076]
[204.60554504 239.09254456]
[214.09445190 250.70980835]
[226.33039856 242.02334595]
[239.12484741 234.18273926]
[252.41941833 227.22378540]
[266.15347290 221.17822266]
[280.26431274 216.07363892]
[294.68759155 211.93333435]
[309.35748291 208.77616882]
[324.20703125 206.61659241]
[339.16848755 205.46441650]
[354.17361450 205.32493591]
[369.15390015 206.19876099]
[384.04104614 208.08190918]
[398.76705933 210.96578979]
[413.26483154 214.83724976]
[427.46813965 219.67863464]
[441.31219482 225.46781921]
[454.73385620 232.17842102]
[467.67184448 239.77980042]
[480.06716919 248.23728943]
[491.86325073 257.51229858]
[503.00625610 267.56250000]
[513.44531250 278.34201050]
[523.13287354 289.80169678]
[532.02471924 301.88925171]
[540.08020020 314.54949951]
[547.26257324 327.72470093]
[553.53918457 341.35473633]
[558.88128662 355.37738037]
[563.26452637 369.72869873]
[566.66888428 384.34317017]
[569.07885742 399.15414429]
[570.48345947 414.09402466]
[570.87628174 429.09466553]
[570.25549316 444.08758545]
[568.62390137 459.00439453]
[565.98907471 473.77700806]
[562.36291504 488.33804321]
[557.76202393 502.62106323]
[552.20739746 516.56091309]
[545.72436523 530.09393311]
[538.34246826 543.15844727]
[530.09545898 555.69476318]
[521.02093506 567.64575195]
[511.16030884 578.95684814]
[500.55856323 589.57641602]
[489.26406860 599.45611572]
[477.32836914 608.55072021]
[464.80593872 616.81878662]
[451.75387573 624.22259521]
[438.23175049 630.72839355]
[424.30126953 636.30651855]
[410.02603149 640.93139648]
[395.47109985 644.58203125]
[380.70291138 647.24169922]
[365.78887939 648.89831543]
[350.79702759 649.54437256]
[335.79577637 649.17675781]
[320.85354614 647.79730225]
[306.03854370 645.41223145]
[291.41833496 642.03247070]
[277.05969238 637.67333984]
[263.02804565 632.35485840]
[249.38749695 626.10119629]
[236.20024109 618.94097900]
[223.52645874 610.90679932]
[211.42398071 602.03533936]
[199.94801331 592.36706543]
[189.15093994 581.94610596]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 142]
[24 141]
[25 140]
[26 139]
[27 138]
[36 137]
[38 135]
[39 134]
[40 133]
[41 132]
[49 124]
[50 123]
[51 122]
[53 120]
[55 119]
[56 118]
[57 117]
[58 116]
[59 115]
[60 114]
[61 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
