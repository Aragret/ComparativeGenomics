%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[101.25753784 544.90972900]
[94.45230865 531.52362061]
[89.21736908 517.44909668]
[85.62096405 502.86953735]
[83.70997620 487.97503662]
[83.50933075 472.95977783]
[85.02162933 458.01956177]
[88.22716522 443.34909058]
[93.08414459 429.13967896]
[99.52925110 415.57653809]
[107.47845459 402.83654785]
[116.82811737 391.08572388]
[127.45635986 380.47732544]
[139.22460938 371.14962769]
[151.97944641 363.22421265]
[165.55458069 356.80444336]
[160.72859192 342.60198975]
[155.90258789 328.39953613]
[151.07658386 314.19708252]
[137.53483582 312.42568970]
[126.02213287 304.95666504]
[118.81626129 293.19976807]
[117.37205505 279.41961670]
[122.02806854 266.29949951]
[131.92939758 256.41885376]
[127.31538391 242.14613342]
[122.26680756 236.74856567]
[122.74063873 227.62643433]
[118.33964539 213.28659058]
[113.93864441 198.94674683]
[110.21397400 195.95744324]
[108.32762909 190.59658813]
[109.62695312 184.11405945]
[105.65486145 169.64953613]
[101.68276215 155.18501282]
[95.15013885 168.68777466]
[81.98326874 175.87341309]
[67.09305573 174.06185913]
[56.03319931 163.92877197]
[52.92874146 149.25354004]
[58.93756866 135.50967407]
[71.81854248 127.82328796]
[86.76737213 129.06120300]
[98.20913696 138.76272583]
[95.98401642 123.92868042]
[93.75889587 109.09464264]
[82.87976837 119.42152405]
[68.00258636 117.50597382]
[60.09424973 104.76006317]
[64.98449707 90.57959747]
[79.06842041 85.41790009]
[91.96295166 93.07859802]
[90.84729767 78.12014008]
[89.73165131 63.16168976]
[80.98937225 49.97521591]
[87.75862885 36.70772171]
[86.64298248 21.74926758]
[85.52733612 6.79081440]
[84.41168213 -8.16763878]
[83.29603577 -23.12609291]
[82.18038940 -38.08454514]
[81.06473541 -53.04299927]
[79.94908905 -68.00144958]
[78.83344269 -82.95990753]
[77.71779633 -97.91835785]
[76.60214233 -112.87681580]
[75.48649597 -127.83526611]
[66.74421692 -141.02174377]
[73.51347351 -154.28923035]
[70.94252777 -157.78840637]
[69.73976135 -161.54577637]
[69.81834412 -165.09954834]
[70.95038605 -168.06350708]
[72.80380249 -170.16659546]
[72.58047485 -185.16493225]
[72.35714722 -200.16326904]
[72.13381958 -215.16160583]
[64.47264099 -202.26562500]
[52.27577591 -193.53427124]
[37.59862518 -190.43893433]
[22.91453552 -193.50120544]
[10.69804192 -202.20507812]
[3.00783443 -215.08377075]
[1.13984871 -229.96699524]
[5.40887356 -244.34669495]
[15.09550285 -255.79960632]
[28.56736946 -262.39572144]
[43.55422592 -263.02349854]
[57.53052902 -257.57711792]
[68.14102173 -246.97439575]
[73.59791565 -233.00045776]
[76.26371002 -247.76168823]
[78.92951202 -262.52288818]
[81.59530640 -277.28411865]
[84.26110077 -292.04531860]
[70.19880676 -297.39010620]
[57.35816574 -305.22799683]
[46.17653656 -315.29208374]
[37.03475189 -327.23956299]
[30.24418449 -340.66354370]
[26.03611374 -355.10675049]
[24.55386734 -370.07730103]
[25.84792900 -385.06530762]
[29.87422371 -399.56027222]
[36.49561691 -413.06848145]
[45.48658752 -425.12985229]
[56.54090881 -435.33361816]
[69.28206635 -443.33221436]
[83.27610779 -448.85321045]
[98.04640198 -451.70855713]
[113.08987427 -451.80102539]
[127.89415741 -449.12747192]
[141.95501709 -443.77890015]
[154.79353333 -435.93756104]
[165.97245789 -425.87045288]
[175.11102295 -413.92050171]
[181.89796448 -400.49472046]
[186.10214233 -386.05035400]
[187.58035278 -371.07940674]
[186.28225708 -356.09173584]
[182.25204468 -341.59786987]
[175.62701416 -328.09146118]
[166.63279724 -316.03250122]
[155.57572937 -305.83169556]
[142.83241272 -297.83654785]
[128.83688354 -292.31933594]
[114.06581879 -289.46795654]
[99.02231598 -289.37954712]
[96.35652161 -274.61831665]
[93.69072723 -259.85711670]
[91.02493286 -245.09588623]
[88.35913849 -230.33467102]
[87.13215637 -215.38493347]
[87.35549164 -200.38659668]
[87.57881927 -185.38825989]
[87.80214691 -170.38992310]
[88.47193146 -155.40487671]
[97.13440704 -143.28834534]
[90.44494629 -128.95091248]
[91.56060028 -113.99246216]
[92.67624664 -99.03401184]
[93.79189301 -84.07555389]
[94.90754700 -69.11710358]
[96.02319336 -54.15864944]
[97.13883972 -39.20019531]
[98.25448608 -24.24174118]
[99.37014008 -9.28328800]
[100.48578644 5.67516565]
[101.60143280 20.63361931]
[102.71708679 35.59207153]
[111.37956238 47.70861816]
[104.69010162 62.04604340]
[105.80575562 77.00449371]
[106.92140198 91.96295166]
[108.59294128 106.86952209]
[110.81806183 121.70356750]
[113.04317474 136.53761292]
[116.14728546 151.21290588]
[120.11938477 165.67742920]
[124.09147644 180.14196777]
[128.27848816 194.54574585]
[132.67948914 208.88558960]
[137.08049011 223.22543335]
[141.58811951 237.53211975]
[146.20211792 251.80485535]
[162.40505981 255.09983826]
[174.66514587 266.05361938]
[179.69926453 281.60595703]
[176.22351074 297.48281860]
[165.27905273 309.37109375]
[170.10504150 323.57354736]
[174.93104553 337.77600098]
[179.75703430 351.97845459]
[194.43305969 348.79846191]
[209.37590027 347.31219482]
[224.39077759 347.53897095]
[239.28192139 349.47589111]
[253.85519409 353.09768677]
[267.92062378 358.35711670]
[281.29479980 365.18563843]
[293.80340576 373.49423218]
[305.28335571 383.17456055]
[315.58496094 394.10043335]
[324.57394409 406.12939453]
[332.13308716 419.10464478]
[338.16387939 432.85699463]
[342.58767700 447.20718384]
[345.34680176 461.96810913]
[346.40527344 476.94735718]
[345.74932861 491.94958496]
[343.38751221 506.77929688]
[339.35058594 521.24304199]
[333.69116211 535.15240479]
[326.48309326 548.32586670]
[317.82031250 560.59185791]
[307.81573486 571.79034424]
[296.59982300 581.77539062]
[284.31881714 590.41680908]
[271.13278198 597.60192871]
[257.21362305 603.23712158]
[242.74282837 607.24884033]
[227.90905762 609.58483887]
[212.90568542 610.21472168]
[197.92832947 609.13012695]
[183.17222595 606.34527588]
[168.82975769 601.89654541]
[155.08792114 595.84179688]
[142.12586975 588.26007080]
[130.11256409 579.25012207]
[119.20465851 568.92950439]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 173]
[17 172]
[18 171]
[19 170]
[25 165]
[26 164]
[28 163]
[29 162]
[30 161]
[33 160]
[34 159]
[35 158]
[44 157]
[45 156]
[46 155]
[52 154]
[53 153]
[54 152]
[56 150]
[57 149]
[58 148]
[59 147]
[60 146]
[61 145]
[62 144]
[63 143]
[64 142]
[65 141]
[66 140]
[67 139]
[69 137]
[74 136]
[75 135]
[76 134]
[77 133]
[91 132]
[92 131]
[93 130]
[94 129]
[95 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
