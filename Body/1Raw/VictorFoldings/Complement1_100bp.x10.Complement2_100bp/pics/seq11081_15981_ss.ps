%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[38.91853714 528.87780762]
[32.40271378 542.40582275]
[24.43821716 555.13494873]
[15.12173176 566.91058350]
[4.56635046 577.58990479]
[-7.09979534 587.04315186]
[-19.73508835 595.15563965]
[-33.18614960 601.82885742]
[-47.28969193 606.98187256]
[-61.87451172 610.55206299]
[-76.76356506 612.49609375]
[-91.77611542 612.79034424]
[-106.72991943 611.43133545]
[-121.44345093 608.43548584]
[-135.73809814 603.83911133]
[-149.44035339 597.69818115]
[-162.38386536 590.08709717]
[-174.41151428 581.09826660]
[-185.37730408 570.84082031]
[-195.14811707 559.43933105]
[-203.60534668 547.03216553]
[-210.64631653 533.76989746]
[-216.18557739 519.81353760]
[-220.15586853 505.33248901]
[-222.50900269 490.50259399]
[-223.21641541 475.50384521]
[-222.26951599 460.51828003]
[-219.67980957 445.72787476]
[-215.47871399 431.31210327]
[-209.71723938 417.44601440]
[-202.46531677 404.29791260]
[-193.81098938 392.02737427]
[-183.85931396 380.78338623]
[-172.73107910 370.70242310]
[-160.56138611 361.90689087]
[-147.49795532 354.50350952]
[-133.69935608 348.58218384]
[-119.33311462 344.21478271]
[-104.57360840 341.45431519]
[-89.60000610 340.33432007]
[-74.59407043 340.86834717]
[-59.73796844 343.04995728]
[-45.21203232 346.85266113]
[-31.19259834 352.23025513]
[-24.31318665 338.90081787]
[-17.43377304 325.57141113]
[-10.55436039 312.24197388]
[-11.59287071 297.38360596]
[1.61185467 288.66891479]
[0.57334518 273.81057739]
[13.77807045 265.09588623]
[20.65748215 251.76644897]
[27.53689575 238.43701172]
[34.41630936 225.10758972]
[41.29571915 211.77815247]
[48.17513275 198.44873047]
[55.05454636 185.11929321]
[61.43315125 171.54309082]
[59.29240417 156.80313110]
[71.81238556 147.13046265]
[77.68134308 133.32627869]
[83.55030823 119.52210236]
[89.41926575 105.71792603]
[95.08205414 91.82790375]
[100.53741455 77.85510254]
[105.99276733 63.88230515]
[105.37490082 57.29977036]
[107.80873108 52.16425705]
[111.82417297 49.57867432]
[117.69313812 35.77449799]
[123.56209564 21.97031975]
[122.88229370 17.68174934]
[123.53672028 13.79121590]
[125.23640442 10.66928196]
[127.60172272 8.55459976]
[130.21325684 7.53577042]
[136.89344788 -5.89460564]
[137.91331482 -14.97192287]
[143.77439880 -19.47409630]
[150.65380859 -32.80352783]
[157.53321838 -46.13295364]
[158.68811035 -55.19408417]
[164.61557007 -59.60849380]
[171.69267273 -72.83402252]
[178.76977539 -86.05954742]
[185.84689331 -99.28507996]
[179.24911499 -113.20540619]
[182.08009338 -128.16665649]
[193.04821777 -138.47026062]
[207.80374146 -140.31753540]
[214.88084412 -153.54306030]
[221.95794678 -166.76858521]
[209.51867676 -175.17501831]
[198.00968933 -184.81594849]
[187.55300903 -195.58915710]
[178.25949097 -207.38043213]
[170.22763062 -220.06480408]
[163.54257202 -233.50779724]
[158.27520752 -247.56692505]
[154.48133850 -262.09313965]
[152.20121765 -276.93243408]
[151.45898438 -291.92755127]
[152.26251221 -306.91949463]
[154.60330200 -321.74932861]
[158.45652771 -336.25991821]
[163.78134155 -350.29736328]
[170.52130127 -363.71292114]
[178.60494995 -376.36434937]
[187.94660950 -388.11755371]
[198.44725037 -398.84790039]
[209.99555969 -408.44168091]
[222.46911621 -416.79718018]
[235.73568726 -423.82583618]
[249.65464783 -429.45315552]
[264.07846069 -433.61944580]
[278.85418701 -436.28057861]
[293.82522583 -437.40829468]
[308.83288574 -436.99069214]
[323.71804810 -435.03219604]
[338.32293701 -431.55352783]
[352.49273682 -426.59161377]
[366.07723999 -420.19897461]
[378.93243408 -412.44348145]
[390.92205811 -403.40725708]
[401.91900635 -393.18612671]
[411.80667114 -381.88845825]
[420.48031616 -369.63397217]
[427.84793091 -356.55261230]
[433.83145142 -342.78302002]
[438.36740112 -328.47116089]
[441.40774536 -313.76876831]
[442.92025757 -298.83169556]
[442.88885498 -283.81826782]
[441.31393433 -268.88763428]
[438.21212769 -254.19808960]
[433.61636353 -239.90533447]
[427.57531738 -226.16087341]
[420.15307617 -213.11042786]
[411.42828369 -200.89231873]
[401.49343872 -189.63607788]
[390.45385742 -179.46102905]
[378.42657471 -170.47502136]
[365.53906250 -162.77331543]
[351.92794800 -156.43756104]
[337.73754883 -151.53492737]
[323.11822510 -148.11735535]
[308.22500610 -146.22109985]
[293.21572876 -145.86625671]
[278.24954224 -147.05657959]
[263.48504639 -149.77946472]
[249.07879639 -154.00602722]
[235.18348694 -159.69148254]
[228.10636902 -146.46595764]
[221.02926636 -133.24041748]
[227.67868042 -119.93917084]
[225.19129944 -105.09743500]
[214.31436157 -94.44166565]
[199.07241821 -92.20796967]
[191.99531555 -78.98244476]
[184.91819763 -65.75691986]
[177.84109497 -52.53138733]
[170.86264038 -39.25354385]
[163.98323059 -25.92411423]
[157.10382080 -12.59468460]
[150.32383728 0.78558916]
[143.64363098 14.21596527]
[137.36627197 27.83928108]
[131.49731445 41.64345932]
[125.62835693 55.44763565]
[119.96556854 69.33766174]
[114.51020813 83.31046295]
[109.05485535 97.28325653]
[110.01870728 102.43931580]
[108.02510071 107.76837921]
[103.22344208 111.58689117]
[97.35448456 125.39106750]
[91.48552704 139.19523621]
[85.61656189 152.99942017]
[87.33752441 168.72674561]
[75.23732758 177.41204834]
[89.91256714 174.30764771]
[101.58607483 183.72727966]
[101.65256500 198.72712708]
[90.06302643 208.24987793]
[75.36083984 205.27571106]
[68.38397217 191.99871826]
[61.50456238 205.32814026]
[54.62514877 218.65757751]
[47.74573517 231.98699951]
[40.86632538 245.31643677]
[33.98691177 258.64587402]
[27.10750008 271.97528076]
[27.65394783 287.78704834]
[14.94128418 295.54833984]
[15.48773193 311.36010742]
[2.77506828 319.12136841]
[-4.10434437 332.45080566]
[-10.98375702 345.78024292]
[-17.86316872 359.10968018]
[-5.35812664 367.42153931]
[6.15662622 377.05862427]
[16.54131126 387.90396118]
[25.66986656 399.82592773]
[33.43148041 412.67971802]
[39.73193741 426.30938721]
[44.49474716 440.54943848]
[47.66210175 455.22698975]
[49.19555283 470.16390991]
[49.07647705 485.17889404]
[47.30632782 500.08959961]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 199]
[45 198]
[46 197]
[47 196]
[49 194]
[51 192]
[52 191]
[53 190]
[54 189]
[55 188]
[56 187]
[57 186]
[58 180]
[60 178]
[61 177]
[62 176]
[63 175]
[64 172]
[65 171]
[66 170]
[69 169]
[70 168]
[71 167]
[76 166]
[77 165]
[79 164]
[80 163]
[81 162]
[83 161]
[84 160]
[85 159]
[86 158]
[90 154]
[91 153]
[92 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
