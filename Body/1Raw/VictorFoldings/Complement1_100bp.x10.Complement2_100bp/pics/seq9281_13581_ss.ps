%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[240.10336304 448.10015869]
[247.07226562 434.79550171]
[255.62338257 422.44808960]
[265.62707520 411.24517822]
[276.93167114 401.35650635]
[268.51705933 388.93899536]
[260.10244751 376.52151489]
[251.68782043 364.10403442]
[243.27319336 351.68652344]
[234.85858154 339.26904297]
[226.26000977 326.97817993]
[212.53668213 321.18859863]
[210.73155212 305.47070312]
[201.95094299 293.30923462]
[201.27928162 308.29418945]
[192.69985962 320.59841919]
[178.87113953 326.40930176]
[164.07807922 323.92626953]
[152.90447998 313.91876221]
[148.81259155 299.48767090]
[153.07034302 285.10461426]
[164.35841370 275.22640991]
[179.17907715 272.91384888]
[192.94018555 278.88369751]
[185.86308289 265.65817261]
[178.78598022 252.43266296]
[171.70887756 239.20712280]
[154.48893738 241.44468689]
[137.69610596 236.88836670]
[123.91290283 226.21078491]
[115.26972961 211.02809143]
[113.11569214 193.65533447]
[117.80801392 176.75354004]
[128.65318298 162.92207336]
[120.99257660 150.02575684]
[113.33197784 137.12942505]
[100.17989349 130.13858032]
[99.78424072 114.32231903]
[87.68491364 107.31533051]
[87.31942749 93.33827972]
[73.61940765 85.42499542]
[73.77169037 70.53117371]
[66.01529694 57.69223022]
[58.16354370 44.91138840]
[50.31179047 32.13054657]
[33.92017746 23.74028015]
[34.12595367 6.19249964]
[26.08478165 -6.47002506]
[18.04360962 -19.13254929]
[10.00243664 -31.79507446]
[1.96126342 -44.45759964]
[-11.96829224 -51.95946884]
[-12.25952148 -66.85122681]
[-20.30069351 -79.51375580]
[-28.34186745 -92.17627716]
[-42.27142334 -99.67814636]
[-42.56265259 -114.56990814]
[-54.95794678 -118.13634491]
[-61.39477158 -128.84854126]
[-58.88994980 -140.68290710]
[-66.74170685 -153.46376038]
[-74.59346008 -166.24459839]
[-82.44522095 -179.02543640]
[-96.14374542 -172.86276245]
[-110.51789856 -168.50247192]
[-125.33162689 -166.01614380]
[-140.34167480 -165.44462585]
[-155.30157471 -166.79730225]
[-169.96566772 -170.05195618]
[-184.09315491 -175.15513611]
[-197.45204163 -182.02305603]
[-209.82298279 -190.54293823]
[-221.00282288 -200.57485962]
[-230.80796814 -211.95411682]
[-239.07743835 -224.49382019]
[-245.67541504 -237.98808289]
[-250.49356079 -252.21530151]
[-253.45275879 -266.94186401]
[-254.50442505 -281.92593384]
[-253.63127136 -296.92144775]
[-250.84765625 -311.68222046]
[-246.19927979 -325.96578979]
[-239.76246643 -339.53765869]
[-231.64291382 -352.17495728]
[-221.97396851 -363.67016602]
[-210.91439819 -373.83453369]
[-198.64579773 -382.50112915]
[-185.36964417 -389.52764893]
[-171.30392456 -394.79870605]
[-156.67964172 -398.22775269]
[-141.73690796 -399.75848389]
[-126.72110748 -399.36575317]
[-111.87882233 -397.05603027]
[-97.45377350 -392.86721802]
[-83.68282318 -386.86810303]
[-70.79210663 -379.15719604]
[-58.99330902 -369.86114502]
[-48.48017120 -359.13256836]
[-39.42532730 -347.14767456]
[-31.97747040 -334.10321045]
[-26.25889778 -320.21343994]
[-22.36351395 -305.70639038]
[-20.35528374 -290.82031250]
[-20.26718712 -275.79962158]
[-22.10066795 -260.89102173]
[-25.82562065 -246.33927917]
[-31.38087654 -232.38337708]
[-38.67521667 -219.25245667]
[-47.58885574 -207.16215515]
[-57.97542953 -196.31100464]
[-69.66437531 -186.87719727]
[-61.81261826 -174.09635925]
[-53.96086502 -161.31550598]
[-46.10910797 -148.53466797]
[-30.24954605 -141.02192688]
[-29.90012741 -122.61107635]
[-16.54573059 -116.01491547]
[-15.67934227 -100.21745300]
[-7.63816929 -87.55492401]
[0.40300387 -74.89240265]
[13.75740051 -68.29624176]
[14.62378788 -52.49877167]
[22.66496086 -39.83624649]
[30.70613480 -27.17372322]
[38.74730682 -14.51119804]
[46.78847885 -1.84867322]
[58.52221680 1.09173882]
[65.32508087 11.57528782]
[63.09263229 24.27878952]
[70.94438934 37.05963135]
[78.79614258 49.84047699]
[84.97584534 53.89425278]
[86.66802216 62.87057495]
[99.82010651 69.86141968]
[100.21575928 85.67768097]
[112.31508636 92.68466949]
[112.68057251 106.66172028]
[126.38059235 114.57500458]
[126.22830963 129.46882629]
[133.88890076 142.36515808]
[141.54949951 155.26148987]
[153.98464966 152.46810913]
[166.68583679 153.28056335]
[178.63008118 157.62335205]
[188.85824585 165.13699341]
[196.55197144 175.20788574]
[201.09921265 187.01829529]
[202.14289856 199.61277771]
[199.60891724 211.97550964]
[193.71136475 223.11219788]
[184.93440247 232.13002014]
[192.01150513 245.35554504]
[199.08860779 258.58108521]
[206.16572571 271.80661011]
[214.11241150 284.52865601]
[222.89300537 296.69009399]
[237.24438477 303.34957886]
[238.42147827 318.19760132]
[244.28691101 321.24850464]
[247.28155518 326.07852173]
[247.27607727 330.85440063]
[255.69068909 343.27191162]
[264.10531616 355.68939209]
[272.51992798 368.10690308]
[280.93453979 380.52438354]
[289.34918213 392.94189453]
[302.72326660 386.10720825]
[316.83593750 380.96789551]
[331.47320557 377.60186768]
[346.41317749 376.06015015]
[361.42935181 376.36608887]
[376.29412842 378.51510620]
[390.78213501 382.47454834]
[404.67373657 388.18444824]
[417.75836182 395.55822754]
[429.83761597 404.48410034]
[440.72839355 414.82675171]
[450.26559448 426.42938232]
[458.30465698 439.11611938]
[464.72369385 452.69461060]
[469.42538452 466.95904541]
[472.33847046 481.69314575]
[473.41879272 496.67355347]
[472.64993286 511.67315674]
[470.04360962 526.46459961]
[465.63928223 540.82360840]
[459.50375366 554.53253174]
[451.73001099 567.38354492]
[442.43591309 579.18182373]
[431.76235962 589.74853516]
[419.87115479 598.92346191]
[406.94256592 606.56744385]
[393.17257690 612.56475830]
[378.76998901 616.82434082]
[363.95306396 619.28173828]
[348.94647217 619.89959717]
[333.97769165 618.66857910]
[319.27365112 615.60742188]
[305.05728149 610.76239014]
[291.54403687 604.20709229]
[278.93884277 596.04077148]
[267.43276978 586.38726807]
[257.20022583 575.39294434]
[248.39636230 563.22448730]
[241.15461731 550.06634521]
[235.58479309 536.11798096]
[231.77131653 521.59088135]
[229.77200317 506.70523071]
[229.61717224 491.68673706]
[231.30914307 476.76303101]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 166]
[6 165]
[7 164]
[8 163]
[9 162]
[10 161]
[11 158]
[13 156]
[14 155]
[24 154]
[25 153]
[26 152]
[27 151]
[34 141]
[35 140]
[36 139]
[38 137]
[40 135]
[42 133]
[43 131]
[44 130]
[45 129]
[47 126]
[48 125]
[49 124]
[50 123]
[51 122]
[53 120]
[54 119]
[55 118]
[57 116]
[60 114]
[61 113]
[62 112]
[63 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
