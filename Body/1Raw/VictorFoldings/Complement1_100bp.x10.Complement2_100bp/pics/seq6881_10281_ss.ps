%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[-45.00800323 597.95166016]
[-37.13891983 610.77990723]
[-31.92399025 624.89691162]
[-29.56366158 639.76013184]
[-30.14865875 654.79821777]
[-33.65649796 669.43316650]
[-39.95234299 683.10241699]
[-48.79420471 695.28057861]
[-59.84221649 705.49957275]
[-72.67173004 713.36657715]
[-86.78961182 718.57922363]
[-101.65320587 720.93713379]
[-116.69120026 720.34973145]
[-131.32556152 716.83947754]
[-144.99380493 710.54144287]
[-157.17053223 701.69763184]
[-167.38772583 690.64794922]
[-175.25265503 677.81713867]
[-180.46301270 663.69842529]
[-182.81854248 648.83447266]
[-182.22866821 633.79656982]
[-178.71609497 619.16278076]
[-172.41581726 605.49554443]
[-163.57002258 593.32025146]
[-152.51870728 583.10485840]
[-139.68664551 575.24200439]
[-125.56707001 570.03393555]
[-110.70271301 567.68078613]
[-95.66491699 568.27307129]
[-81.03168488 571.78802490]
[-74.75432587 558.16473389]
[-68.47696686 544.54138184]
[-62.19960403 530.91809082]
[-55.92224503 517.29479980]
[-49.64488220 503.67144775]
[-52.19321442 486.30847168]
[-37.06949997 475.80349731]
[-30.99566460 462.08822632]
[-24.92183113 448.37295532]
[-33.60852432 434.44390869]
[-32.26763535 417.91622925]
[-21.23017311 405.31958008]
[-4.69700289 401.74880981]
[1.17195809 387.94464111]
[7.04091883 374.14047241]
[11.86691666 359.93801880]
[15.62321758 345.41595459]
[19.37951851 330.89389038]
[23.13581848 316.37182617]
[26.89211845 301.84976196]
[30.64842033 287.32772827]
[34.40472031 272.80566406]
[23.55418968 267.89541626]
[13.57898617 261.38342285]
[4.71381950 253.42193604]
[-2.83256626 244.19728088]
[-8.88230419 233.92552185]
[-13.29260159 222.84744263]
[-15.95910454 211.22290039]
[-16.81837273 199.32467651]
[-15.84938526 187.43209839]
[-13.07405376 175.82450867]
[-8.55672741 164.77471924]
[-2.40270615 154.54248047]
[5.24422169 145.36856079]
[14.20513248 137.46888733]
[24.27015686 131.02963257]
[35.20339203 126.20271301]
[46.74843979 123.10224915]
[58.63440323 121.80187225]
[70.58226013 122.33294678]
[82.31140137 124.68386078]
[87.76675415 110.71105957]
[83.74172211 99.78218079]
[88.05809784 88.96505737]
[98.50133514 83.80947876]
[104.16412354 69.91944885]
[98.27870941 55.49725342]
[104.21945190 41.49145889]
[118.00508118 35.96950150]
[123.66786957 22.07947540]
[129.33065796 8.18944740]
[134.99343872 -5.70057917]
[139.50106812 -20.00726509]
[142.82333374 -34.63472748]
[146.14558411 -49.26218796]
[149.46784973 -63.88964462]
[152.79010010 -78.51710510]
[155.01522827 -93.35115051]
[156.13087463 -108.30960083]
[157.24652100 -123.26805878]
[158.36216736 -138.22651672]
[159.47781372 -153.18496704]
[151.66783142 -163.44979858]
[152.90499878 -175.88575745]
[161.98338318 -183.88011169]
[163.32160950 -198.82029724]
[164.65985107 -213.76048279]
[150.59863281 -219.27944946]
[138.66271973 -228.53744507]
[129.81968689 -240.78396606]
[124.78640747 -255.02626038]
[123.97090912 -270.10974121]
[127.43929291 -284.81167603]
[134.91040039 -297.94024658]
[145.77857971 -308.43118286]
[159.16278076 -315.43399048]
[173.97804260 -318.38104248]
[189.02331543 -317.03338623]
[203.07897949 -311.50030518]
[215.00558472 -302.23031616]
[223.83631897 -289.97491455]
[228.85528564 -275.72756958]
[229.65562439 -260.64328003]
[226.17247009 -245.94482422]
[218.68818665 -232.82377625]
[207.80947876 -222.34378052]
[194.41824341 -215.35440063]
[179.60003662 -212.42224121]
[178.26179504 -197.48205566]
[176.92356873 -182.54187012]
[185.15432739 -167.04278564]
[174.43627930 -152.06932068]
[173.32061768 -137.11085510]
[172.20497131 -122.15240479]
[171.08932495 -107.19395447]
[169.97367859 -92.23550415]
[179.69932556 -103.65528870]
[193.79846191 -108.77530670]
[208.58558655 -106.25718689]
[220.19538879 -96.75915527]
[225.59309387 -82.76398468]
[223.36775208 -67.92997742]
[214.10105896 -56.13470078]
[200.21531677 -50.46141815]
[185.34022522 -52.39310837]
[173.36407471 -61.42483521]
[167.41757202 -75.19484711]
[164.09530640 -60.56738663]
[160.77304077 -45.93992615]
[157.45079041 -31.31246567]
[154.12852478 -16.68500710]
[165.12013245 -26.89209175]
[179.57173157 -30.91095924]
[194.25480652 -27.84378242]
[205.88909912 -18.37578011]
[211.87550354 -4.62212610]
[210.87661743 10.34457874]
[203.11563110 23.18073273]
[190.32632446 31.01870918]
[175.36589050 32.10747910]
[161.57652283 26.20381355]
[152.03880310 14.62660503]
[148.88346863 -0.03779262]
[143.22067261 13.85223389]
[137.55789185 27.74226189]
[131.89511108 41.63228989]
[137.89048767 55.21871185]
[132.34548950 69.38584137]
[118.05414581 75.58223724]
[112.39135742 89.47225952]
[115.10182190 106.02610016]
[101.73955536 116.16641998]
[96.28419495 130.13922119]
[111.56364441 140.32475281]
[124.03590393 153.79284668]
[133.01312256 169.79586792]
[138.00132751 187.44650269]
[138.72764587 205.76698303]
[135.15519714 223.74324036]
[127.48490143 240.38101196]
[116.14431000 254.76086426]
[101.76365662 266.08901978]
[85.14087677 273.74105835]
[67.19734192 277.29656982]
[48.92678070 276.56195068]
[45.17047882 291.08401489]
[41.41417694 305.60607910]
[37.65787888 320.12814331]
[33.90157700 334.65020752]
[30.14527702 349.17224121]
[26.38897514 363.69430542]
[37.98933411 354.18475342]
[52.77394867 351.65194702]
[66.87815857 356.75793457]
[76.61515808 368.16806030]
[79.43972015 382.89971924]
[74.61350250 397.10211182]
[63.39808273 407.06274414]
[48.72512817 410.17794800]
[34.43012238 405.63339233]
[24.24974632 394.61706543]
[20.84509659 380.00942993]
[14.97613525 393.81359863]
[9.10717392 407.61776733]
[17.05921936 418.87637329]
[18.39917564 432.48602295]
[12.88347626 444.88146973]
[2.05054307 452.86843872]
[-11.20656395 454.44680786]
[-17.28039742 468.16207886]
[-23.35423088 481.87734985]
[-19.44459724 494.16870117]
[-24.78586388 505.46713257]
[-36.02156830 509.94882202]
[-42.29892731 523.57214355]
[-48.57629013 537.19543457]
[-54.85364914 550.81878662]
[-61.13101196 564.44207764]
[-67.40837097 578.06542969]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 210]
[31 209]
[32 208]
[33 207]
[34 206]
[35 205]
[37 202]
[38 201]
[39 200]
[43 195]
[44 194]
[45 193]
[46 182]
[47 181]
[48 180]
[49 179]
[50 178]
[51 177]
[52 176]
[72 164]
[73 163]
[76 161]
[77 160]
[80 157]
[81 156]
[82 155]
[83 154]
[84 142]
[85 141]
[86 140]
[87 139]
[88 138]
[89 127]
[90 126]
[91 125]
[92 124]
[93 123]
[96 121]
[97 120]
[98 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
