%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[63.58902359 707.07843018]
[48.61608505 706.06427002]
[33.76272964 703.92065430]
[19.11403275 700.65979004]
[4.75390625 696.30041504]
[-9.23539734 690.86749268]
[-22.77374840 684.39208984]
[-35.78359604 676.91137695]
[-48.19042587 668.46813965]
[-59.92316818 659.11077881]
[-70.91461945 648.89288330]
[-81.10181427 637.87298584]
[-90.42641449 626.11419678]
[-98.83499146 613.68383789]
[-106.27939606 600.65319824]
[-112.71698761 587.09686279]
[-118.11087799 573.09246826]
[-122.43017578 558.72021484]
[-125.65015411 544.06250000]
[-127.75234985 529.20318604]
[-128.72473145 514.22747803]
[-128.56172180 499.22113037]
[-127.26426697 484.27008057]
[-124.83979034 469.45996094]
[-121.30218506 454.87564087]
[-116.67170715 440.60061646]
[-110.97488403 426.71667480]
[-104.24434662 413.30337524]
[-96.51863861 400.43746948]
[-87.84203339 388.19274902]
[-78.26420593 376.63925171]
[-67.84003448 365.84323120]
[-56.62922668 355.86651611]
[-44.69599152 346.76623535]
[-32.10868835 338.59451294]
[-18.93941116 331.39813232]
[-5.26359653 325.21838379]
[8.84042168 320.09060669]
[23.29185486 316.04418945]
[38.00792694 313.10232544]
[52.90434265 311.28182983]
[67.89577484 310.59317017]
[68.34238434 295.59982300]
[68.78898621 280.60647583]
[69.23559570 265.61312866]
[69.68220520 250.61976624]
[62.32727051 237.66777039]
[70.47202301 224.10408020]
[63.11709213 211.15208435]
[71.26184082 197.58839417]
[71.70845032 182.59504700]
[72.15505219 167.60169983]
[64.92892456 180.74639893]
[54.33291245 191.36357117]
[41.20266342 198.61592102]
[26.57368660 201.93148804]
[11.59967995 201.04879761]
[-2.53844118 196.03746033]
[-14.72568607 187.29269409]
[-24.00091743 175.50413513]
[-29.63265228 161.60148621]
[-31.17675018 146.68116760]
[-28.51143456 131.91986084]
[-21.84690285 118.48171234]
[-11.70875072 107.42649078]
[1.10348713 99.62607574]
[15.57938290 95.69562531]
[30.57730865 95.94511414]
[44.91446304 100.35488129]
[57.46015930 108.57713318]
[67.22499084 119.96343994]
[73.43886566 133.61582947]
[75.61174774 148.46109009]
[72.38062286 133.92117310]
[84.14650726 123.34410095]
[88.97250366 109.14164734]
[86.43765259 95.39151001]
[96.82504272 86.03235626]
[93.93910217 70.47658539]
[105.35980225 60.91536713]
[110.18579865 46.71290970]
[114.90593719 32.47492218]
[119.51994324 18.20218849]
[124.13394928 3.92945576]
[115.16728973 -8.59672451]
[115.29428864 -23.82292747]
[124.25666809 -35.91175842]
[138.44900513 -40.35197449]
[143.06301880 -54.62470627]
[147.67701721 -68.89743805]
[142.50987244 -80.71536255]
[146.64672852 -92.50817108]
[157.35520935 -98.13444519]
[162.18121338 -112.33689880]
[167.00720215 -126.53936005]
[171.83320618 -140.74180603]
[176.65919495 -154.94427490]
[163.35755920 -161.94520569]
[151.31495667 -170.94087219]
[140.82794189 -181.70976257]
[132.15475464 -193.98666382]
[125.50900269 -207.46926880]
[121.05432892 -221.82553101]
[118.90043640 -236.70193481]
[119.10036469 -251.73211670]
[121.64920044 -266.54595947]
[126.48416138 -280.77865601]
[133.48619080 -294.07971191]
[142.48286438 -306.12158203]
[153.25260925 -316.60769653]
[165.53022766 -325.27987671]
[179.01338196 -331.92449951]
[193.37001038 -336.37799072]
[208.24658203 -338.53067017]
[223.27676392 -338.32949829]
[238.09039307 -335.77944946]
[252.32269287 -330.94329834]
[265.62316895 -323.94018555]
[277.66427612 -314.94253540]
[288.14953613 -304.17190552]
[296.82067871 -291.89355469]
[303.46420288 -278.40988159]
[307.91650391 -264.05288696]
[310.06796265 -249.17611694]
[309.86553955 -234.14596558]
[307.31427002 -219.33253479]
[302.47695923 -205.10064697]
[295.47274780 -191.80075073]
[286.47409058 -179.76036072]
[275.70260620 -169.27601624]
[263.42355347 -160.60586548]
[249.93930054 -153.96345520]
[235.58193970 -149.51232910]
[220.70500183 -147.36212158]
[205.67486572 -147.56576538]
[190.86164856 -150.11827087]
[186.03565979 -135.91581726]
[181.20965576 -121.71335602]
[176.38366699 -107.51090240]
[171.55766296 -93.30844879]
[175.89852905 -76.30480194]
[161.94975281 -64.28343201]
[157.33575439 -50.01069641]
[152.72174072 -35.73796463]
[161.62918091 -23.83017731]
[161.81907654 -8.78265572]
[153.00901794 3.63653779]
[138.40669250 8.54346466]
[133.79267883 22.81619835]
[129.17866516 37.08893204]
[130.11227417 44.42038345]
[124.38825226 51.53890991]
[119.56225586 65.74136353]
[122.79338074 80.28128052]
[111.02749634 90.85835266]
[113.56234741 104.60848999]
[103.17495728 113.96764374]
[98.34896088 128.17010498]
[101.23489380 143.72586060]
[89.81420135 153.28709412]
[87.14840698 168.04830933]
[86.70179749 183.04165649]
[86.25519562 198.03500366]
[93.57817841 212.05943298]
[85.46537018 224.55068970]
[92.78836060 238.57511902]
[84.67555237 251.06637573]
[84.22894287 266.05972290]
[83.78234100 281.05307007]
[83.33573151 296.04641724]
[82.88912964 311.03976440]
[97.81299591 312.61953735]
[112.57464600 315.32342529]
[127.08951569 319.13601685]
[141.27449036 324.03540039]
[155.04827881 329.99359131]
[168.33203125 336.97637939]
[181.04962158 344.94381714]
[193.12821960 353.85028076]
[204.49864197 363.64471436]
[215.09574890 374.27102661]
[224.85884094 385.66836548]
[233.73200989 397.77145386]
[241.66441345 410.51092529]
[248.61062622 423.81384277]
[254.53086853 437.60397339]
[259.39120483 451.80236816]
[263.16381836 466.32769775]
[265.82705688 481.09674072]
[267.36572266 496.02490234]
[267.77099609 511.02667236]
[267.04049683 526.01611328]
[265.17846680 540.90740967]
[262.19555664 555.61523438]
[258.10885620 570.05529785]
[252.94177246 584.14495850]
[246.72387695 597.80346680]
[239.49081421 610.95263672]
[231.28401184 623.51708984]
[222.15046692 635.42492676]
[212.14251709 646.60784912]
[201.31745911 657.00183105]
[189.73731995 666.54742432]
[177.46841431 675.18981934]
[164.58103943 682.87963867]
[151.14898682 689.57275391]
[137.24922180 695.23077393]
[122.96134949 699.82147217]
[108.36721039 703.31835938]
[93.55039215 705.70153809]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 171]
[43 170]
[44 169]
[45 168]
[46 167]
[48 165]
[50 163]
[51 162]
[52 161]
[73 160]
[75 158]
[76 157]
[78 155]
[80 153]
[81 152]
[82 150]
[83 149]
[84 148]
[88 144]
[89 143]
[90 142]
[93 140]
[94 139]
[95 138]
[96 137]
[97 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
