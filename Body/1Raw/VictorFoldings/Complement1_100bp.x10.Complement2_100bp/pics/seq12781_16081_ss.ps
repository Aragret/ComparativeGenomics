%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[-48.74047852 616.84674072]
[-41.64576340 630.15521240]
[-38.08442688 644.81018066]
[-38.28033829 659.89038086]
[-42.22118378 674.44787598]
[-49.65923691 687.56750488]
[-60.12693787 698.42468262]
[-72.96627808 706.33685303]
[-87.37015533 710.80664062]
[-102.43315125 711.55310059]
[-117.20837402 708.52923584]
[-130.76704407 701.92523193]
[-142.25686646 692.15612793]
[-150.95555115 679.83605957]
[-156.31632996 665.73950195]
[-158.00219727 650.75256348]
[-155.90716553 635.81732178]
[-150.16296387 621.87261963]
[-141.13064575 609.79504395]
[-129.37802124 600.34375000]
[-115.64383698 594.11291504]
[-100.79145813 591.49420166]
[-85.75450897 592.65222168]
[-80.92851257 578.44976807]
[-76.10251617 564.24731445]
[-71.27651978 550.04486084]
[-66.45052338 535.84240723]
[-61.62452316 521.63995361]
[-74.60545349 514.16534424]
[-85.88223267 504.29864502]
[-95.02024078 492.41763306]
[-101.66676331 478.97778320]
[-105.56468964 464.49484253]
[-106.56238556 449.52493286]
[-104.61964417 434.64328003]
[-99.80927277 420.42208862]
[-92.31438446 407.40853882]
[-82.42140198 396.10369873]
[-70.50914001 386.94332886]
[-57.03429794 380.28094482]
[-42.51392365 376.37429810]
[-27.50560760 375.37536621]
[-12.58604908 377.32437134]
[-7.76005125 363.12191772]
[-2.93405342 348.91946411]
[1.89194417 334.71701050]
[0.62197590 330.11306763]
[2.23069024 324.66247559]
[7.07884455 320.16726685]
[12.32556248 306.11477661]
[17.46752357 292.02365112]
[22.50443840 277.89462280]
[27.54135513 263.76559448]
[32.57826996 249.63655090]
[23.77139091 241.81845093]
[18.09991837 231.45820618]
[16.24863243 219.75813293]
[18.45742798 208.08503723]
[24.49051476 197.81053162]
[33.66135025 190.14991760]
[44.91070938 186.01838684]
[56.92898178 185.92178345]
[62.59177017 172.03176880]
[68.25455475 158.14173889]
[73.91734314 144.25170898]
[79.58013153 130.36167908]
[85.24291992 116.47165680]
[90.90570068 102.58162689]
[90.01872253 97.41178894]
[92.09144592 92.11300659]
[96.94942474 88.36640167]
[103.02325439 74.65113831]
[109.09709167 60.93587112]
[115.17092896 47.22060394]
[121.24475861 33.50533676]
[127.31859589 19.79006958]
[121.86519623 5.19903803]
[128.22030640 -8.62366867]
[142.16423035 -13.73272991]
[148.23806763 -27.44799614]
[154.31190491 -41.16326141]
[160.38574219 -54.87852859]
[166.45956421 -68.59379578]
[172.53340149 -82.30906677]
[177.98875427 -96.28186035]
[182.81475830 -110.48431396]
[187.42877197 -124.75704956]
[191.82977295 -139.09689331]
[196.23075867 -153.43673706]
[200.63175964 -167.77659607]
[202.52505493 -182.65663147]
[201.85527039 -197.64166260]
[201.18548584 -212.62670898]
[192.83969116 -226.06762695]
[200.00097656 -239.12768555]
[199.33119202 -254.11273193]
[198.66140747 -269.09777832]
[184.47100830 -274.62524414]
[173.76028442 -285.45114136]
[168.38491821 -299.69982910]
[169.27621460 -314.90264893]
[176.27976990 -328.42559814]
[188.18215942 -337.92575073]
[202.92123413 -341.75714111]
[217.94335938 -339.25598145]
[230.64584351 -330.85559082]
[238.82792664 -318.01138306]
[241.07200623 -302.94873047]
[236.98927307 -288.27728271]
[227.28710938 -276.53897095]
[213.64643860 -269.76754761]
[214.31622314 -254.78251648]
[214.98600769 -239.79747009]
[223.28388977 -227.42839050]
[216.17051697 -213.29649353]
[216.84030151 -198.31144714]
[217.51008606 -183.32641602]
[223.58625793 -197.04064941]
[232.84196472 -208.84454346]
[244.71121216 -218.01628113]
[258.46820068 -223.99502563]
[273.27166748 -226.41516113]
[288.21640015 -225.12869263]
[302.38851929 -220.21429443]
[314.92138672 -211.97247314]
[325.04858398 -200.90724182]
[332.15087891 -187.69522095]
[335.79394531 -173.14433289]
[335.75497437 -158.14439392]
[332.03640747 -143.61262512]
[324.86560059 -130.43766785]
[314.68106079 -119.42516327]
[302.10559082 -111.24854279]
[287.90814209 -106.40780640]
[272.95693970 -105.19896698]
[258.16622925 -107.69594574]
[244.44046021 -113.74604797]
[232.61900330 -122.97930908]
[223.42472839 -134.83111572]
[217.41986084 -148.57670593]
[214.97160339 -163.37559509]
[210.57061768 -149.03575134]
[206.16961670 -134.69589233]
[201.76861572 -120.35604858]
[203.17509460 -115.79196930]
[201.72938538 -110.29588318]
[197.01721191 -105.65831757]
[192.19122314 -91.45586395]
[206.08999634 -97.09715271]
[219.95999146 -91.38549042]
[225.85585022 -77.59278107]
[220.40016174 -63.62011719]
[206.71818542 -57.47166824]
[192.64756775 -62.66954803]
[186.24867249 -76.23522949]
[180.17483521 -62.51996231]
[174.10099792 -48.80469513]
[168.02717590 -35.08942795]
[161.95333862 -21.37416267]
[155.87950134 -7.65889549]
[161.46771240 6.10001135]
[155.50335693 20.09576607]
[141.03385925 25.86390495]
[134.96002197 39.57917023]
[128.88619995 53.29443741]
[122.81235504 67.00970459]
[116.73852539 80.72496796]
[110.66468811 94.44023895]
[104.79573059 108.24441528]
[99.13294220 122.13444519]
[93.47015381 136.02447510]
[87.80737305 149.91448975]
[82.14458466 163.80451965]
[76.48179626 177.69454956]
[70.81900787 191.58457947]
[82.62902069 205.77438354]
[85.58733368 223.91107178]
[78.96022797 240.95956421]
[64.66297150 252.23127747]
[46.70730209 254.67346191]
[41.67038345 268.80249023]
[36.63346863 282.93151855]
[31.59655190 297.06054688]
[31.66258430 306.19476318]
[26.37803459 311.36151123]
[21.13131523 325.41397095]
[16.09440041 339.54299927]
[11.26840210 353.74545288]
[6.44240427 367.94790649]
[1.61640680 382.15036011]
[14.63469219 389.69464111]
[25.92730713 399.63064575]
[35.06147385 411.57510376]
[41.68761826 425.06781006]
[45.55275345 439.58935547]
[46.51014328 454.58114624]
[44.52485657 469.46685791]
[39.67505264 483.67465210]
[32.14890289 496.65905762]
[22.23727989 507.92196655]
[10.32253361 517.03179932]
[-3.13627148 523.63983154]
[-17.62103844 527.49383545]
[-32.57458496 528.44744873]
[-47.42206573 526.46594238]
[-52.24806595 540.66839600]
[-57.07406235 554.87091064]
[-61.90005875 569.07336426]
[-66.72605896 583.27581787]
[-71.55205536 597.47827148]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 210]
[24 209]
[25 208]
[26 207]
[27 206]
[28 205]
[43 190]
[44 189]
[45 188]
[46 187]
[49 186]
[50 185]
[51 183]
[52 182]
[53 181]
[54 180]
[62 175]
[63 174]
[64 173]
[65 172]
[66 171]
[67 170]
[68 169]
[71 168]
[72 167]
[73 166]
[74 165]
[75 164]
[76 163]
[79 160]
[80 159]
[81 158]
[82 157]
[83 156]
[84 155]
[85 148]
[86 147]
[87 144]
[88 143]
[89 142]
[90 141]
[91 117]
[92 116]
[93 115]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
