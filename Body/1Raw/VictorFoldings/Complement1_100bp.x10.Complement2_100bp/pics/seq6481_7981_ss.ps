%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxGACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGG\
) } def
/len { sequence length } bind def

/coor [
[137.97415161 725.65295410]
[124.61734772 718.81298828]
[111.77629089 711.04797363]
[99.51496887 702.39642334]
[87.89446259 692.90155029]
[76.97265625 682.61059570]
[66.80397797 671.57489014]
[57.43908310 659.84936523]
[48.92462158 647.49249268]
[41.30301666 634.56579590]
[34.61223984 621.13366699]
[28.88562393 607.26300049]
[24.15169716 593.02294922]
[20.43404579 578.48443604]
[17.75119019 563.71990967]
[16.11649704 548.80291748]
[15.53810978 533.80780029]
[16.01890945 518.80920410]
[17.55650330 503.88186646]
[20.14322853 489.10021973]
[23.76619911 474.53781128]
[28.40736389 460.26727295]
[34.04360199 446.35964966]
[40.64683533 432.88427734]
[48.18416214 419.90823364]
[56.61803436 407.49618530]
[65.90643311 395.70999146]
[76.00308990 384.60833740]
[86.85769653 374.24655151]
[98.41617584 364.67626953]
[110.62094116 355.94515991]
[123.41119385 348.09667969]
[136.72322083 341.16998291]
[150.49067688 335.19958496]
[164.64498901 330.21517944]
[160.67289734 315.75064087]
[156.70080566 301.28613281]
[145.86944580 291.06207275]
[149.67616272 275.70565796]
[145.70407104 261.24114990]
[141.73196411 246.77662659]
[130.90061951 236.55258179]
[134.70733643 221.19616699]
[130.19970703 206.88948059]
[125.16278839 192.76045227]
[120.12586975 178.63142395]
[115.08895874 164.50238037]
[110.05204010 150.37335205]
[105.01512146 136.24432373]
[99.97821045 122.11530304]
[94.94129181 107.98626709]
[90.83415222 104.72354889]
[88.84741211 99.39192200]
[89.97158813 93.36090851]
[84.35418701 86.15794373]
[85.39684296 78.84120941]
[80.99584961 64.50136566]
[76.59484863 50.16151428]
[72.19385529 35.82166672]
[67.79285431 21.48182106]
[63.28522491 7.17513418]
[58.67121506 -7.09759951]
[54.05720901 -21.37033272]
[49.44319916 -35.64306641]
[37.83609390 -46.39414597]
[41.28334045 -60.88434219]
[36.66933060 -75.15707397]
[32.05532074 -89.42980957]
[29.87659454 -74.58888245]
[24.37825394 -60.63294220]
[15.84872913 -48.29409027]
[4.73546362 -38.21960449]
[-8.37856388 -30.93796349]
[-22.80541801 -26.83115196]
[-37.78829193 -26.11460495]
[-52.54121780 -28.82590866]
[-66.29028320 -34.82283783]
[-78.31424713 -43.79080200]
[-87.98234558 -55.25936127]
[-94.78741455 -68.62689972]
[-98.37248230 -83.19217682]
[-98.54946136 -98.19113159]
[-95.30908966 -112.83694458]
[-88.82134247 -126.36133575]
[-79.42655182 -138.05484009]
[-67.61755371 -147.30403137]
[-54.01382065 -153.62371826]
[-39.32897949 -156.68238831]
[-24.33336830 -156.31958008]
[-9.81362629 -152.55433655]
[3.46857166 -145.58416748]
[14.81646633 -135.77471924]
[23.63476944 -123.64057159]
[29.46135712 -109.81666565]
[30.35417175 -124.79007721]
[31.24698830 -139.76347351]
[32.13980484 -154.73689270]
[33.03261948 -169.71029663]
[18.94218063 -175.21617126]
[7.24407291 -184.80833435]
[-0.91564280 -197.54701233]
[-4.73756027 -212.18423462]
[-3.84724712 -227.28598022]
[1.66807294 -241.37272644]
[11.26806545 -253.06439209]
[24.01222038 -261.21557617]
[38.65199661 -265.02767944]
[53.75313568 -264.12725830]
[67.83618164 -258.60250854]
[79.52142334 -248.99467468]
[87.66406250 -236.24505615]
[91.46636200 -221.60273743]
[90.55580902 -206.50219727]
[85.02161407 -192.42285156]
[75.40596008 -180.74404907]
[62.65089798 -172.60995483]
[48.00602722 -168.81747437]
[47.11320877 -153.84407043]
[46.22039413 -138.87066650]
[45.32757950 -123.89726257]
[44.43476105 -108.92385101]
[46.32805634 -94.04381561]
[50.94206238 -79.77108765]
[55.55607224 -65.49835205]
[66.83315277 -55.76815414]
[63.71593094 -40.25707626]
[68.32994080 -25.98434258]
[72.94394684 -11.71160889]
[77.55796051 2.56112456]
[82.60652924 7.95869017]
[82.13269806 17.08082199]
[86.53369904 31.42066956]
[90.93470001 45.76051712]
[95.33569336 60.10036469]
[99.73669434 74.44020844]
[104.24432373 88.74689484]
[109.07032013 102.94935608]
[114.10723877 117.07838440]
[119.14414978 131.20741272]
[124.18106842 145.33644104]
[129.21798706 159.46546936]
[134.25489807 173.59449768]
[139.29182434 187.72352600]
[144.32873535 201.85255432]
[153.01831055 189.62590027]
[167.98614502 188.64402771]
[178.19850159 199.63075256]
[176.12719727 214.48704529]
[163.29914856 222.26142883]
[149.17185974 217.22406006]
[160.28732300 228.48271179]
[156.19648743 242.80451965]
[160.16859436 257.26904297]
[164.14068604 271.73358154]
[175.25614929 282.99221802]
[171.16532898 297.31402588]
[175.13742065 311.77856445]
[179.10951233 326.24307251]
[193.82432556 323.29974365]
[208.71011353 321.40170288]
[223.69268799 320.55844116]
[238.69743347 320.77410889]
[253.64959717 322.04769897]
[268.47467041 324.37280273]
[283.09878540 327.73788452]
[297.44912720 332.12615967]
[311.45416260 337.51574707]
[325.04412842 343.87985229]
[338.15133667 351.18670654]
[350.71047974 359.39993286]
[362.65896606 368.47860718]
[373.93728638 378.37750244]
[384.48925781 389.04730225]
[394.26229858 400.43487549]
[403.20773315 412.48345947]
[411.28100586 425.13302612]
[418.44183350 438.32055664]
[424.65460205 451.98037720]
[429.88833618 466.04440308]
[434.11697388 480.44256592]
[437.31945801 495.10317993]
[439.47979736 509.95315552]
[440.58724976 524.91851807]
[440.63629150 539.92474365]
[439.62667847 554.89703369]
[437.56344604 569.76080322]
[434.45690918 584.44201660]
[430.32247925 598.86755371]
[425.18075562 612.96551514]
[419.05743408 626.66558838]
[411.98294067 639.89965820]
[403.99255371 652.60174561]
[395.12606812 664.70855713]
[385.42767334 676.15972900]
[374.94564819 686.89831543]
[363.73226929 696.87072754]
[351.84338379 706.02728271]
[339.33819580 714.32244873]
[326.27905273 721.71484375]
[312.73095703 728.16760254]
[298.76144409 733.64862061]
[284.44012451 738.13061523]
[269.83828735 741.59118652]
[255.02873230 744.01318359]
[240.08522034 745.38446045]
[225.08221436 745.69824219]
[210.09443665 744.95294189]
[195.19656372 743.15222168]
[180.46282959 740.30511475]
[165.96662903 736.42584229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 158]
[36 157]
[37 156]
[39 154]
[40 153]
[41 152]
[43 150]
[44 144]
[45 143]
[46 142]
[47 141]
[48 140]
[49 139]
[50 138]
[51 137]
[54 136]
[56 135]
[57 134]
[58 133]
[59 132]
[60 131]
[61 129]
[62 128]
[63 127]
[64 126]
[66 124]
[67 123]
[68 122]
[94 121]
[95 120]
[96 119]
[97 118]
[98 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
