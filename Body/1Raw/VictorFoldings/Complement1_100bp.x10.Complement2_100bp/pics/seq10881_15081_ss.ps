%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGGxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[130.91658020 265.25595093]
[143.68632507 257.25405884]
[138.86032104 243.05162048]
[134.03433228 228.84915161]
[129.20832825 214.64669800]
[124.38233185 200.44424438]
[119.55633545 186.24179077]
[114.73033905 172.03933716]
[111.74617004 170.16128540]
[109.52339935 166.74450684]
[108.77531433 162.16262817]
[110.02138519 157.09365845]
[105.83437347 142.68988037]
[101.64736176 128.28610229]
[97.03335571 114.01336670]
[86.50777435 104.80989838]
[88.83761597 91.02355194]
[83.80070496 76.89452362]
[78.76378632 62.76549149]
[73.72686768 48.63646317]
[68.48014832 34.58399200]
[63.02479553 20.61119270]
[57.56943893 6.63839579]
[52.11407852 -7.33440208]
[46.65872192 -21.30719948]
[41.20336533 -35.27999878]
[25.05605888 -42.00932312]
[18.89288330 -58.01963425]
[26.07183266 -73.22823334]
[20.40904617 -87.11826324]
[14.74625874 -101.00828552]
[9.08347225 -114.89831543]
[3.42068577 -128.78834534]
[-2.24210095 -142.67835999]
[-7.90488768 -156.56838989]
[-20.27947044 -166.42640686]
[-17.91950417 -181.13285828]
[-32.10890961 -176.25640869]
[-46.54941940 -172.18322754]
[-61.19559860 -168.92616272]
[-76.00135803 -166.49542236]
[-90.92012024 -164.89868164]
[-105.90494537 -164.14096069]
[-120.90867615 -164.22463989]
[-135.88412476 -165.14944458]
[-150.78414917 -166.91249084]
[-165.56187439 -169.50820923]
[-180.17080688 -172.92843628]
[-194.56498718 -177.16241455]
[-208.69912720 -182.19682312]
[-222.52874756 -188.01582336]
[-236.01033020 -194.60110474]
[-249.10145569 -201.93194580]
[-261.76095581 -209.98527527]
[-273.94897461 -218.73576355]
[-285.62719727 -228.15588379]
[-296.75881958 -238.21598816]
[-307.30889893 -248.88441467]
[-317.24417114 -260.12759399]
[-326.53338623 -271.91018677]
[-335.14733887 -284.19509888]
[-343.05892944 -296.94363403]
[-350.24325562 -310.11575317]
[-356.67770386 -323.66998291]
[-362.34204102 -337.56365967]
[-367.21844482 -351.75308228]
[-371.29156494 -366.19360352]
[-374.54858398 -380.83981323]
[-376.97924805 -395.64556885]
[-378.57595825 -410.56433105]
[-379.33361816 -425.54916382]
[-379.24987793 -440.55288696]
[-378.32501221 -455.52832031]
[-376.56192017 -470.42834473]
[-373.96615601 -485.20608521]
[-370.54586792 -499.81500244]
[-366.31182861 -514.20916748]
[-361.27737427 -528.34326172]
[-355.45831299 -542.17285156]
[-348.87298584 -555.65441895]
[-341.54211426 -568.74554443]
[-333.48870850 -581.40502930]
[-324.73818970 -593.59301758]
[-315.31802368 -605.27117920]
[-305.25787354 -616.40277100]
[-294.58941650 -626.95281982]
[-283.34619141 -636.88800049]
[-271.56356812 -646.17718506]
[-259.27865601 -654.79113770]
[-246.53004456 -662.70263672]
[-233.35791016 -669.88696289]
[-219.80366516 -676.32135010]
[-205.90997314 -681.98559570]
[-191.72052002 -686.86193848]
[-177.27998352 -690.93505859]
[-162.63378906 -694.19201660]
[-147.82800293 -696.62261963]
[-132.90922546 -698.21923828]
[-117.92440033 -698.97686768]
[-102.92066956 -698.89306641]
[-87.94523621 -697.96813965]
[-73.04521942 -696.20501709]
[-58.26751328 -693.60919189]
[-43.65859985 -690.18884277]
[-29.26445007 -685.95477295]
[-15.13035393 -680.92022705]
[-1.30078030 -675.10113525]
[12.18075562 -668.51574707]
[25.27183723 -661.18481445]
[37.93127441 -653.13140869]
[50.11923218 -644.38079834]
[61.79737091 -634.96063232]
[72.92893982 -624.90045166]
[83.47891235 -614.23193359]
[93.41410065 -602.98864746]
[102.70324707 -591.20599365]
[111.31711578 -578.92102051]
[119.22860718 -566.17242432]
[126.41283417 -553.00024414]
[132.84718323 -539.44598389]
[138.51141357 -525.55224609]
[143.38771057 -511.36279297]
[147.46072388 -496.92224121]
[150.71763611 -482.27603149]
[153.14819336 -467.47024536]
[154.74476624 -452.55145264]
[155.50233459 -437.56661987]
[155.41848755 -422.56289673]
[154.49351501 -407.58746338]
[152.73030090 -392.68746948]
[150.13442993 -377.90975952]
[146.71403503 -363.30087280]
[142.47988892 -348.90673828]
[137.44532776 -334.77264404]
[131.62617493 -320.94311523]
[125.04074097 -307.46157837]
[117.70975494 -294.37054443]
[109.65628052 -281.71112061]
[100.90565491 -269.52319336]
[91.48541260 -257.84509277]
[81.42518616 -246.71357727]
[70.75663757 -236.16363525]
[59.51333618 -226.22848511]
[47.73065186 -216.93939209]
[35.44565582 -208.32556152]
[22.69700623 -200.41412354]
[9.52481365 -193.22994995]
[-4.02947760 -186.79563904]
[7.94006491 -177.93113708]
[5.98513937 -162.23118591]
[11.64792633 -148.34115601]
[17.31071281 -134.45112610]
[22.97349930 -120.56110382]
[28.63628578 -106.67107391]
[34.29907227 -92.78104401]
[39.96186066 -78.89102173]
[52.42092896 -75.60451508]
[60.83786011 -65.59265900]
[61.96824265 -52.36644363]
[55.17616272 -40.73535538]
[60.63151932 -26.76255608]
[66.08687592 -12.78975868]
[71.54223633 1.18303871]
[76.99758911 15.15583611]
[82.45294952 29.12863350]
[86.38963318 31.83262444]
[88.66947937 37.03832626]
[87.85589600 43.59954834]
[92.89281464 57.72857666]
[97.92973328 71.85760498]
[102.96664429 85.98663330]
[113.49222565 95.19010162]
[111.16238403 108.97644806]
[114.56815338 111.66989899]
[116.72296143 114.97464752]
[117.58824158 118.42235565]
[117.28149414 121.58028412]
[116.05113983 124.09909058]
[120.23815155 138.50286865]
[124.42516327 152.90664673]
[128.93280029 167.21333313]
[133.75878906 181.41578674]
[138.58479309 195.61825562]
[143.41078186 209.82070923]
[148.23678589 224.02316284]
[153.06278992 238.22561646]
[157.88877869 252.42807007]
[172.89006042 250.99334717]
[187.81776428 253.05743408]
[201.86685181 258.50900269]
[214.27969360 267.05407715]
[224.38685608 278.23181152]
[231.64329529 291.43942261]
[235.65766907 305.96463013]
[236.21348572 321.02410889]
[233.28077698 335.80572510]
[227.01770020 349.51229858]
[217.76200867 361.40469360]
[206.01286316 370.84155273]
[192.40385437 377.31393433]
[177.66893005 380.47280884]
[162.60270691 380.14782715]
[148.01768494 376.35653687]
[134.70043945 369.30334473]
[123.36911774 359.36865234]
[114.63483429 347.08822632]
[108.96860504 333.12432861]
[106.67600250 318.23001099]
[107.88066101 303.20849609]
[112.51762390 288.86990356]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 187]
[3 186]
[4 185]
[5 184]
[6 183]
[7 182]
[8 181]
[12 180]
[13 179]
[14 178]
[15 173]
[17 171]
[18 170]
[19 169]
[20 168]
[21 165]
[22 164]
[23 163]
[24 162]
[25 161]
[26 160]
[29 156]
[30 155]
[31 154]
[32 153]
[33 152]
[34 151]
[35 150]
[37 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
