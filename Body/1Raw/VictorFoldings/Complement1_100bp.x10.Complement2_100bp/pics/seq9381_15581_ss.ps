%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[240.78890991 403.84097290]
[250.22544861 392.15530396]
[261.05221558 381.74453735]
[252.09153748 369.71514893]
[243.13082886 357.68579102]
[234.08084106 345.72344971]
[224.94203186 333.82879639]
[215.80322266 321.93417358]
[206.66442871 310.03955078]
[197.52561951 298.14489746]
[188.38682556 286.25027466]
[174.49719238 280.87182617]
[172.22488403 265.21466064]
[163.08607483 253.32002258]
[164.32034302 268.26916504]
[159.02711487 282.30416870]
[148.22840881 292.71511841]
[134.00929260 297.49182129]
[119.11526489 295.71197510]
[106.42211914 287.71920776]
[98.38070679 275.05685425]
[96.54370117 260.16973877]
[101.26580048 245.93241882]
[111.63523102 235.09382629]
[125.64982605 229.74676514]
[140.60359192 230.92364502]
[153.61010742 238.39811707]
[146.73069763 225.06867981]
[139.85128784 211.73925781]
[132.97187805 198.40982056]
[126.09246063 185.08039856]
[121.61531067 199.39665222]
[109.05156708 207.59130859]
[94.14520264 205.91786194]
[83.71121216 195.14141846]
[82.51987457 180.18879700]
[91.11585236 167.89614868]
[105.56917572 163.88351440]
[119.27332306 169.98667908]
[113.81797028 156.01387024]
[108.36260986 142.04107666]
[102.90725708 128.06828308]
[97.45189667 114.09548187]
[86.65695953 105.20948029]
[88.57530212 91.35987854]
[83.11994934 77.38707733]
[77.66458893 63.41427994]
[62.57268143 64.24600983]
[47.98237228 60.37750244]
[35.31930923 52.19977570]
[25.81679916 40.52427292]
[20.39569283 26.50235558]
[19.57515907 11.51177025]
[23.42299080 -2.97872043]
[31.55019379 -15.55324650]
[43.15028000 -24.98717499]
[37.69491959 -38.95997238]
[32.23956299 -52.93276978]
[20.63057899 -55.49559784]
[11.79067135 -63.26457214]
[7.83953571 -74.22278595]
[9.64993382 -85.60865784]
[16.65785980 -94.61172485]
[11.62094402 -108.74075317]
[6.58402824 -122.86978149]
[-7.41637707 -129.69813538]
[-12.32325268 -144.09873962]
[-5.72718239 -157.40390015]
[-10.76409817 -171.53292847]
[-15.80101490 -185.66195679]
[-17.68208504 -170.78038025]
[-23.45745087 -156.93678284]
[-32.71018219 -145.13055420]
[-44.77231216 -136.21400452]
[-58.77307510 -130.83081055]
[-73.70173645 -129.36959839]
[-88.48057556 -131.93586731]
[-102.04271698 -138.34432983]
[-113.40908051 -148.13237000]
[-121.75912476 -160.59338379]
[-126.49004364 -174.82778931]
[-127.26032257 -189.80799866]
[-124.01435089 -204.45257568]
[-116.98645020 -217.70431519]
[-106.68398285 -228.60656738]
[-93.85067749 -236.37228394]
[-79.41299438 -240.44085693]
[-64.41319275 -240.51855469]
[-49.93412781 -236.59979248]
[-37.02105713 -228.96745300]
[-26.60618019 -218.17253113]
[-19.44094658 -204.99324036]
[-19.88755226 -219.98658752]
[-20.33415794 -234.97993469]
[-20.78076363 -249.97328186]
[-35.30622482 -254.20011902]
[-47.81345367 -262.71035767]
[-57.07712173 -274.67028809]
[-62.18966675 -288.90817261]
[-62.65021515 -304.02911377]
[-58.41364670 -318.55172729]
[-49.89501572 -331.05325317]
[-37.92889404 -340.30892944]
[-23.68759727 -345.41192627]
[-8.56634331 -345.86233521]
[5.95344067 -341.61602783]
[18.44925499 -333.08901978]
[27.69688606 -321.11669922]
[32.79034424 -306.87200928]
[33.23062897 -291.75045776]
[28.97460175 -277.23352051]
[20.43922424 -264.74340820]
[8.46070862 -255.50379944]
[-5.78741407 -250.41989136]
[-5.34080791 -235.42654419]
[-4.89420223 -220.43319702]
[-4.44759607 -205.43983459]
[-1.67198515 -190.69888306]
[3.36493111 -176.56985474]
[8.40184689 -162.44081116]
[21.92715836 -156.30880737]
[27.23657990 -142.05171204]
[20.71305847 -127.90670013]
[25.74997330 -113.77767181]
[30.78689003 -99.64864349]
[47.76863480 -92.81227112]
[54.47553635 -75.43612671]
[46.21236038 -58.38812637]
[51.66772079 -44.41532898]
[57.12307739 -30.44253159]
[72.04660034 -31.36413574]
[86.54393768 -27.62284088]
[99.19217682 -19.57286072]
[108.74588013 -7.99193859]
[114.25971222 5.99377775]
[115.18197632 21.01923943]
[111.40979767 35.61372375]
[103.30041504 48.34480667]
[91.63739014 57.95892334]
[97.09274292 71.93172455]
[102.54810333 85.90451813]
[113.34304047 94.79051971]
[111.42469788 108.64012146]
[116.88005066 122.61292267]
[122.33541107 136.58572388]
[127.79076385 150.55851746]
[133.24612427 164.53131104]
[139.42189026 178.20098877]
[146.30130005 191.53041077]
[153.18070984 204.85984802]
[160.06013489 218.18927002]
[166.93954468 231.51870728]
[174.98071289 244.18122864]
[184.11952209 256.07586670]
[198.66281128 262.30508423]
[200.28144836 277.11148071]
[209.42025757 289.00610352]
[218.55906677 300.90072632]
[227.69786072 312.79537964]
[236.83666992 324.69000244]
[245.97546387 336.58462524]
[253.68540955 341.48306274]
[255.16021729 348.72506714]
[264.12091064 360.75445557]
[273.08160400 372.78384399]
[286.15609741 365.39053345]
[300.05413818 359.69424438]
[314.55651855 355.78479004]
[329.43457031 353.72387695]
[344.45358276 353.54397583]
[359.37670898 355.24789429]
[373.96859741 358.80880737]
[387.99911499 364.17053223]
[401.24694824 371.24853516]
[413.50320435 379.93112183]
[424.57455444 390.08142090]
[434.28637695 401.53933716]
[442.48553467 414.12411499]
[449.04269409 427.63732910]
[453.85446167 441.86581421]
[456.84494019 456.58520508]
[457.96694946 471.56335449]
[457.20278931 486.56399536]
[454.56454468 501.35055542]
[450.09381104 515.68988037]
[443.86105347 529.35577393]
[435.96466064 542.13269043]
[426.52908325 553.81915283]
[415.70318604 564.23083496]
[403.65768433 573.20349121]
[390.58258057 580.59570312]
[376.68405151 586.29083252]
[362.18133545 590.19903564]
[347.30313110 592.25872803]
[332.28408813 592.43737793]
[317.36111450 590.73217773]
[302.76953125 587.17004395]
[288.73947144 581.80712891]
[275.49221802 574.72802734]
[263.23672485 566.04443359]
[252.16621399 555.89318848]
[242.45533752 544.43444824]
[234.25724792 531.84899902]
[227.70121765 518.33520508]
[222.89064026 504.10632324]
[219.90141296 489.38668823]
[218.78067017 474.40844727]
[219.54608154 459.40786743]
[222.18557739 444.62152100]
[226.65753174 430.28259277]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 165]
[4 164]
[5 163]
[6 161]
[7 160]
[8 159]
[9 158]
[10 157]
[11 156]
[13 154]
[14 153]
[27 152]
[28 151]
[29 150]
[30 149]
[31 148]
[39 147]
[40 146]
[41 145]
[42 144]
[43 143]
[45 141]
[46 140]
[47 139]
[56 130]
[57 129]
[58 128]
[63 125]
[64 124]
[65 123]
[68 120]
[69 119]
[70 118]
[92 117]
[93 116]
[94 115]
[95 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
