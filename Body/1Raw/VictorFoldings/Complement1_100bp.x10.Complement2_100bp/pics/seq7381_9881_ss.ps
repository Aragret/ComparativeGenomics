%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[86.56248474 751.64013672]
[72.58787537 746.15252686]
[59.25158310 739.25708008]
[46.69499207 731.02685547]
[35.05120087 721.54919434]
[24.44363976 710.92449951]
[14.98476028 699.26544189]
[6.77482843 686.69561768]
[-0.09912532 673.34820557]
[-5.56423330 659.36480713]
[-9.56256199 644.89355469]
[-12.05172825 630.08782959]
[-13.00534344 615.10467529]
[-12.41329956 600.10290527]
[-10.28187275 585.24151611]
[-6.63365746 570.67803955]
[-1.50732684 556.56689453]
[5.04277754 543.05761719]
[12.94722080 530.29345703]
[22.12221146 518.40972900]
[32.47048950 507.53234863]
[43.88235474 497.77667236]
[56.23683929 489.24609375]
[69.40297699 482.03106689]
[83.24120331 476.20803833]
[97.60481262 471.83874512]
[112.34156036 468.96951294]
[111.00332642 454.02932739]
[109.66509247 439.08914185]
[108.32685852 424.14898682]
[106.98862457 409.20880127]
[105.65039062 394.26861572]
[90.84921265 392.02951050]
[77.00573730 386.30950928]
[64.92633820 377.43710327]
[55.31572342 365.92449951]
[48.73589325 352.43814087]
[45.57321930 337.76007080]
[46.01578522 322.74258423]
[50.04220963 308.25875854]
[57.42262268 295.15167236]
[67.73179626 284.18533325]
[80.37364197 276.00021362]
[94.61566162 271.07574463]
[93.27742767 256.13555908]
[84.43550873 244.14932251]
[90.91075897 229.71389771]
[89.57252502 214.77371216]
[88.23429108 199.83352661]
[80.00390625 212.37388611]
[66.34387207 218.57093811]
[51.48690033 216.50445557]
[40.03658295 206.81475830]
[35.54092789 192.50430298]
[39.39296341 178.00733948]
[50.39909363 167.81591797]
[65.14894867 165.08795166]
[79.07212830 170.66874695]
[87.85446167 182.82925415]
[88.52424622 167.84420776]
[85.68255615 161.02171326]
[89.31720734 152.64154053]
[90.21002197 137.66813660]
[91.10283661 122.69473267]
[91.99565125 107.72132874]
[80.08689117 116.84171295]
[65.19954681 115.00681305]
[55.86175537 103.26774597]
[57.42263412 88.34918213]
[68.98804474 78.79714966]
[83.93278503 80.08348083]
[93.69553375 91.47042084]
[95.92065430 76.63637543]
[88.89575958 65.81909180]
[91.05445099 53.50959015]
[100.70227814 46.21260452]
[103.14800262 31.41333389]
[94.21447754 18.65285110]
[96.90561676 3.67912674]
[109.12583923 -4.75898409]
[111.57157135 -19.55825424]
[114.01729584 -34.35752487]
[116.46302032 -49.15679550]
[118.90875244 -63.95606613]
[113.52508545 -78.83312225]
[123.23400879 -90.12852478]
[125.67974091 -104.92779541]
[123.84014130 -109.81276703]
[124.03845978 -114.45108032]
[125.83946991 -118.10778046]
[128.57931519 -120.32714081]
[131.68342590 -135.00244141]
[134.78753662 -149.67774963]
[137.89164734 -164.35304260]
[140.99575806 -179.02835083]
[143.44148254 -193.82762146]
[145.22395325 -208.72134399]
[147.00642395 -223.61505127]
[132.99542236 -229.21453857]
[120.91166687 -238.25032043]
[111.57904816 -250.10632324]
[105.63388824 -263.97418213]
[103.48152924 -278.90835571]
[105.26872253 -293.89062500]
[110.87361908 -307.89947510]
[119.91407013 -319.97973633]
[131.77366638 -329.30776978]
[145.64382935 -335.24755859]
[160.57882690 -337.39416504]
[175.56040955 -335.60119629]
[189.56707764 -329.99087524]
[201.64385986 -320.94577026]
[210.96731567 -309.08255005]
[216.90176392 -295.21011353]
[219.04258728 -280.27429199]
[217.24382019 -265.29339600]
[211.62811279 -251.28889465]
[202.57833862 -239.21562195]
[190.71153259 -229.89674377]
[176.83679199 -223.96765137]
[161.90013123 -221.83259583]
[160.11767578 -206.93887329]
[158.33520508 -192.04515076]
[170.76570129 -200.44055176]
[185.51744080 -197.72279358]
[194.13995361 -185.44874573]
[191.69387817 -170.64953613]
[179.58042908 -161.80282593]
[164.73873901 -163.97640991]
[155.67106628 -175.92424011]
[152.56695557 -161.24893188]
[149.46284485 -146.57363892]
[146.35873413 -131.89833069]
[143.25462341 -117.22303009]
[140.47900391 -102.48206329]
[138.03327942 -87.68279266]
[143.59187317 -73.86428070]
[133.70802307 -61.51034164]
[131.26229858 -46.71107101]
[128.81657410 -31.91179848]
[126.37084198 -17.11252785]
[123.92510986 -2.31325674]
[132.78077698 9.60785484]
[130.51127625 24.65126038]
[117.94727325 33.85906219]
[115.50154877 48.65833282]
[122.55673218 64.72666168]
[110.75469971 78.86149597]
[108.52957916 93.69553375]
[106.96905518 108.61414337]
[106.07624054 123.58754730]
[105.18342590 138.56095886]
[104.29061127 153.53436279]
[103.50928497 168.51399231]
[102.83950043 183.49903870]
[103.17447662 198.49530029]
[104.51271057 213.43548584]
[105.85094452 228.37567139]
[114.78858185 241.43051147]
[108.21760559 254.79733276]
[109.55584717 269.73751831]
[124.44631958 272.05252075]
[138.34158325 277.86062622]
[150.43557739 286.82022095]
[160.02789307 298.40701294]
[166.56427002 311.94470215]
[169.66870117 326.64447021]
[169.16494751 341.65097046]
[165.08665466 356.09201050]
[157.67504883 369.12933350]
[147.36474609 380.00726318]
[134.75819397 388.09646606]
[120.59056854 392.93035889]
[121.92881012 407.87054443]
[123.26704407 422.81072998]
[124.60527802 437.75091553]
[125.94351196 452.69110107]
[127.28174591 467.63128662]
[142.29380798 467.83581543]
[157.20527649 469.58285522]
[171.85807800 472.85385132]
[186.09687805 477.61416626]
[199.77075195 483.81332397]
[212.73472595 491.38558960]
[224.85139465 500.25070190]
[235.99230957 510.31469727]
[246.03936768 521.47088623]
[254.88606262 533.60101318]
[262.43862915 546.57647705]
[268.61697388 560.25976562]
[273.35562134 574.50579834]
[276.60437012 589.16357422]
[278.32873535 604.07763672]
[278.51043701 619.09002686]
[277.14761353 634.04150391]
[274.25460815 648.77362061]
[269.86218262 663.13012695]
[264.01684570 676.95898438]
[256.78060913 690.11346436]
[248.23011780 702.45416260]
[238.45603943 713.85028076]
[227.56199646 724.18103027]
[215.66346741 733.33685303]
[202.88658142 741.22070312]
[189.36677551 747.74902344]
[175.24737549 752.85260010]
[160.67803955 756.47729492]
[145.81323242 758.58477783]
[130.81051636 759.15264893]
[115.82892609 758.17486572]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 178]
[28 177]
[29 176]
[30 175]
[31 174]
[32 173]
[44 161]
[45 160]
[47 158]
[48 157]
[49 156]
[59 155]
[60 154]
[62 153]
[63 152]
[64 151]
[65 150]
[72 149]
[73 148]
[76 146]
[77 145]
[80 142]
[81 141]
[82 140]
[83 139]
[84 138]
[86 136]
[87 135]
[91 134]
[92 133]
[93 132]
[94 131]
[95 130]
[96 123]
[97 122]
[98 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
