%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAUxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[131.98764038 754.31628418]
[118.15969086 748.49218750]
[104.70104218 741.85906982]
[91.65898895 734.44030762]
[79.07933044 726.26202393]
[67.00625610 717.35278320]
[55.48217010 707.74401855]
[44.54755783 697.46942139]
[34.24082565 686.56512451]
[24.59817314 675.06939697]
[15.65347481 663.02258301]
[7.43814707 650.46704102]
[-0.01895236 637.44689941]
[-6.69163036 624.00781250]
[-12.55644894 610.19708252]
[-17.59280777 596.06311035]
[-21.78301430 581.65563965]
[-25.11235428 567.02526855]
[-27.56912804 552.22332764]
[-29.14471054 537.30187988]
[-29.83356667 522.31323242]
[-29.63327408 507.31015015]
[-28.54453850 492.34527588]
[-26.57118416 477.47119141]
[-23.72014046 462.74011230]
[-20.00142479 448.20379639]
[-15.42809868 433.91333008]
[-10.01622486 419.91888428]
[-3.78481388 406.26962280]
[3.24424648 393.01345825]
[11.04626656 380.19702148]
[19.59383965 367.86526489]
[28.85694504 356.06155396]
[38.80304337 344.82730103]
[49.39719772 334.20202637]
[60.60219574 324.22299194]
[72.37868500 314.92529297]
[84.68528748 306.34155273]
[97.47879028 298.50195312]
[110.71424103 291.43402100]
[124.34516144 285.16256714]
[138.32366943 279.70965576]
[133.70965576 265.43692017]
[122.43257904 255.70672607]
[125.54979706 240.19564819]
[120.93579102 225.92291260]
[116.32178497 211.65017700]
[111.70777130 197.37745667]
[107.09376526 183.10472107]
[102.47975159 168.83198547]
[98.93941498 183.40820312]
[89.84111786 195.33384705]
[76.71808624 202.59922791]
[61.78177261 203.98002625]
[47.54921722 199.24354553]
[36.41884995 189.18795776]
[30.26633644 175.50779724]
[30.12848282 160.50843811]
[36.02851868 146.71751404]
[46.97218323 136.45904541]
[61.11528015 131.46176147]
[76.07444763 132.56779480]
[89.32880402 139.59075928]
[98.64549255 151.34864807]
[96.86302948 136.45494080]
[95.08056641 121.56121826]
[93.29809570 106.66750336]
[90.01560211 102.57614136]
[89.25907898 96.93690491]
[91.69110870 91.30466461]
[90.35287476 76.36447906]
[89.01464081 61.42429352]
[87.67640686 46.48410797]
[81.76286316 60.26924896]
[71.74262238 71.43144989]
[58.67314529 78.79274750]
[43.93367386 81.57627106]
[29.07970810 79.48828888]
[15.67882061 72.74913025]
[5.14523745 62.07001114]
[-1.40940547 48.57791519]
[-3.29338169 33.69669724]
[-0.30787072 18.99681091]
[7.23205948 6.02956438]
[18.53070259 -3.83657336]
[32.39568329 -9.56040668]
[47.36380005 -10.53788567]
[61.85543442 -6.66585445]
[74.34123993 1.64706182]
[83.50357056 13.52358150]
[88.37552643 27.71053696]
[90.82125854 12.91126633]
[93.26698303 -1.88800478]
[95.71271515 -16.68727493]
[97.93782806 -31.52132034]
[99.94184113 -46.38684845]
[101.94585419 -61.25237656]
[87.87538910 -66.64855194]
[75.42897797 -75.14464569]
[65.27784729 -86.28247070]
[57.96942520 -99.46138000]
[53.89785004 -113.97065735]
[53.28269577 -129.02781677]
[56.15713882 -143.82087708]
[62.36616135 -157.55203247]
[71.57492065 -169.48080444]
[83.28679657 -178.96386719]
[96.87019348 -185.48983765]
[111.59255981 -188.70675659]
[126.65995026 -188.44114685]
[141.25979614 -184.70732117]
[154.60473633 -177.70666504]
[165.97509766 -167.81669617]
[174.75770569 -155.57078552]
[180.47891235 -141.62931824]
[182.83018494 -126.74414825]
[181.68472290 -111.71801758]
[177.10429382 -97.36125946]
[169.33592224 -84.44812775]
[158.79853821 -73.67500305]
[146.06040955 -65.62286377]
[131.80850220 -60.72595596]
[116.81138611 -59.24836349]
[114.80737305 -44.38283539]
[112.80335999 -29.51730537]
[114.93518066 -25.24362373]
[114.40494537 -19.58536720]
[110.51198578 -14.24154854]
[108.06625366 0.55772257]
[105.62052917 15.35699368]
[103.17479706 30.15626335]
[102.61659241 45.14587402]
[103.95482635 60.08605957]
[105.29306030 75.02624512]
[106.63129425 89.96643066]
[108.19181824 104.88503265]
[109.97428131 119.77874756]
[111.75674438 134.67247009]
[113.53921509 149.56619263]
[116.75248718 164.21797180]
[121.36649323 178.49070740]
[125.98050690 192.76344299]
[130.59451294 207.03617859]
[135.20852661 221.30891418]
[139.82254028 235.58163452]
[151.42964172 246.33271790]
[147.98239136 260.82290649]
[152.59640503 275.09564209]
[167.12165833 271.33404541]
[181.84425354 268.43951416]
[196.71246338 266.42224121]
[211.67405701 265.28933716]
[226.67649841 265.04476929]
[241.66708374 265.68936157]
[256.59313965 267.22088623]
[271.40225220 269.63394165]
[286.04241943 272.92007446]
[300.46218872 277.06771851]
[314.61093140 282.06231689]
[328.43893433 287.88635254]
[341.89764404 294.51931763]
[354.93975830 301.93795776]
[367.51950073 310.11618042]
[379.59265137 319.02526855]
[391.11682129 328.63394165]
[402.05151367 338.90841675]
[412.35836792 349.81265259]
[422.00109863 361.30831909]
[430.94592285 373.35504150]
[439.16134644 385.91049194]
[446.61856079 398.93060303]
[453.29135132 412.36959839]
[459.15631104 426.18029785]
[464.19277954 440.31417847]
[468.38311768 454.72161865]
[471.71258545 469.35198975]
[474.16949463 484.15390015]
[475.74520874 499.07537842]
[476.43417358 514.06396484]
[476.23400879 529.06707764]
[475.14541626 544.03198242]
[473.17218018 558.90606689]
[470.32128906 573.63714600]
[466.60269165 588.17352295]
[462.02947998 602.46398926]
[456.61773682 616.45849609]
[450.38644409 630.10784912]
[443.35751343 643.36401367]
[435.55560303 656.18054199]
[427.00811768 668.51239014]
[417.74511719 680.31616211]
[407.79913330 691.55047607]
[397.20507812 702.17590332]
[386.00015259 712.15502930]
[374.22375488 721.45281982]
[361.91720581 730.03668213]
[349.12377930 737.87640381]
[335.88839722 744.94439697]
[322.25753784 751.21600342]
[308.27908325 756.66900635]
[294.00213623 761.28442383]
[279.47683716 765.04589844]
[264.75421143 767.94030762]
[249.88598633 769.95739746]
[234.92437744 771.09020996]
[219.92193604 771.33465576]
[204.93136597 770.68994141]
[190.00531006 769.15826416]
[175.19621277 766.74505615]
[160.55607605 763.45880127]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 148]
[43 147]
[45 145]
[46 144]
[47 143]
[48 142]
[49 141]
[50 140]
[64 139]
[65 138]
[66 137]
[67 136]
[70 135]
[71 134]
[72 133]
[73 132]
[91 131]
[92 130]
[93 129]
[94 128]
[95 125]
[96 124]
[97 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
