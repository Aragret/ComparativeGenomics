%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[81.88986969 472.56381226]
[67.22694397 467.76776123]
[57.50237274 455.79125977]
[55.81923294 440.45599365]
[62.71460724 426.65536499]
[75.98821259 418.79312134]
[76.43481445 403.79974365]
[73.86994171 399.77105713]
[73.80865479 394.08834839]
[77.12454224 388.36849976]
[78.01736450 373.39511108]
[78.91017914 358.42169189]
[79.80299377 343.44830322]
[72.83695221 330.28305054]
[81.38193512 316.96789551]
[82.27474976 301.99447632]
[83.16756439 287.02105713]
[84.06037903 272.04766846]
[84.95320129 257.07424927]
[70.84779358 249.56504822]
[61.39482880 236.60916138]
[58.52779770 220.77047729]
[62.87062836 205.21090698]
[73.60276031 193.05915833]
[88.61363983 186.78163147]
[89.28342438 171.79658508]
[89.95320892 156.81155396]
[90.62299347 141.82650757]
[91.29277802 126.84147644]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[93.72218323 72.48873901]
[94.39196777 57.50370407]
[95.06175232 42.51866531]
[80.55025482 38.49097061]
[67.30532074 31.33833122]
[55.98970413 21.42229843]
[47.16878510 9.24260712]
[41.28234863 -4.58801556]
[38.62265778 -19.37467003]
[39.31993866 -34.37519836]
[43.33600235 -48.83743668]
[50.46634293 -62.03692245]
[60.35052109 -73.31320190]
[72.49040222 -82.10286713]
[86.27526093 -87.96768188]
[101.01248169 -90.61648560]
[101.68226624 -105.60152435]
[102.24047852 -120.59113312]
[102.68708801 -135.58448792]
[103.13368988 -150.57783508]
[103.58029938 -165.57118225]
[104.02690125 -180.56452942]
[96.70391846 -194.58895874]
[104.81672668 -207.08021545]
[105.26332855 -222.07356262]
[90.32263184 -223.46104431]
[75.49854279 -225.78390503]
[60.84955215 -229.03302002]
[46.43348694 -233.19552612]
[32.30723572 -238.25502014]
[18.52654839 -244.19152832]
[5.14581203 -250.98162842]
[-7.78216553 -258.59851074]
[-20.20636368 -267.01211548]
[-32.07774734 -276.18923950]
[-43.34946823 -286.09368896]
[-53.97703934 -296.68630981]
[-63.91851807 -307.92538452]
[-73.13467407 -319.76651001]
[-81.58912659 -332.16293335]
[-89.24851990 -345.06576538]
[-96.08261871 -358.42407227]
[-102.06445312 -372.18515015]
[-107.17041779 -386.29467773]
[-111.38035583 -400.69696045]
[-114.67765808 -415.33517456]
[-117.04930878 -430.15155029]
[-118.48595428 -445.08758545]
[-118.98191833 -460.08438110]
[-118.53524017 -475.08270264]
[-117.14768982 -490.02340698]
[-114.82473755 -504.84747314]
[-111.57556152 -519.49645996]
[-107.41297150 -533.91247559]
[-102.35340118 -548.03869629]
[-96.41682434 -561.81939697]
[-89.62665558 -575.20007324]
[-82.00971222 -588.12799072]
[-73.59603882 -600.55218506]
[-64.41884613 -612.42352295]
[-54.51435471 -623.69519043]
[-43.92164993 -634.32269287]
[-32.68253708 -644.26409912]
[-20.84137726 -653.48022461]
[-8.44489479 -661.93457031]
[4.45798206 -669.59393311]
[17.81633186 -676.42791748]
[31.57743645 -682.40972900]
[45.68698502 -687.51562500]
[60.08929443 -691.72546387]
[74.72752380 -695.02270508]
[89.54390717 -697.39428711]
[104.47995758 -698.83081055]
[119.47674561 -699.32672119]
[134.47508240 -698.87994385]
[149.41575623 -697.49230957]
[164.23982239 -695.16931152]
[178.88877869 -691.92004395]
[193.30479431 -687.75738525]
[207.43099976 -682.69775391]
[221.21162415 -676.76110840]
[234.59228516 -669.97088623]
[247.52018738 -662.35382080]
[259.94430542 -653.94012451]
[271.81558228 -644.76287842]
[283.08718872 -634.85827637]
[293.71466064 -624.26556396]
[303.65603638 -613.02636719]
[312.87207031 -601.18518066]
[321.32638550 -588.78863525]
[328.98562622 -575.88574219]
[335.81961060 -562.52734375]
[341.80130005 -548.76617432]
[346.90710449 -534.65661621]
[351.11688232 -520.25427246]
[354.41403198 -505.61605835]
[356.78555298 -490.79965210]
[358.22201538 -475.86358643]
[358.71783447 -460.86679077]
[358.27099609 -445.86846924]
[356.88330078 -430.92779541]
[354.56018066 -416.10375977]
[351.31085205 -401.45480347]
[347.14813232 -387.03881836]
[342.08840942 -372.91262817]
[336.15167236 -359.13204956]
[329.36138916 -345.75140381]
[321.74429321 -332.82354736]
[313.33050537 -320.39947510]
[304.15316772 -308.52825928]
[294.24856567 -297.25668335]
[283.65576172 -286.62927246]
[272.41653442 -276.68798828]
[260.57528687 -267.47201538]
[248.17871094 -259.01773071]
[235.27575684 -251.35855103]
[221.91732788 -244.52465820]
[208.15615845 -238.54304504]
[194.04656982 -233.43730164]
[179.64421082 -229.22758484]
[165.00595093 -225.93051147]
[150.18954468 -223.55909729]
[135.25346375 -222.12268066]
[120.25667572 -221.62695312]
[119.81007385 -206.63360596]
[127.16500854 -193.68161011]
[119.02024841 -180.11791992]
[118.57364655 -165.12457275]
[118.12703705 -150.13122559]
[117.68043518 -135.13787842]
[117.23382568 -120.14452362]
[120.17678070 -113.36508942]
[116.66730499 -104.93173981]
[115.99752045 -89.94670105]
[130.43966675 -85.99366760]
[143.64631653 -78.92241669]
[154.95361328 -69.08473969]
[163.79235840 -56.97159958]
[169.71665955 -43.18861008]
[172.42645264 -28.42574692]
[171.78266907 -13.42282677]
[167.81439209 1.06757724]
[160.71751404 14.31788635]
[150.84515381 25.66204453]
[138.68998718 34.52900696]
[124.85975647 40.47146988]
[110.04679108 43.18844986]
[109.37700653 58.17348862]
[108.70722198 73.15852356]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.27781677 127.51126099]
[105.60803223 142.49629211]
[104.93824768 157.48133850]
[104.26846313 172.46636963]
[103.59867859 187.45141602]
[116.29226685 193.66587830]
[125.63022614 204.21702576]
[130.22746277 217.48997498]
[129.42106628 231.46997070]
[123.36577606 244.04823303]
[113.00554657 253.34002686]
[99.92660522 257.96707153]
[99.03379059 272.94049072]
[98.14096832 287.91387939]
[97.24815369 302.88729858]
[96.35533905 317.86068726]
[103.25752258 332.09692383]
[94.77639771 344.34109497]
[93.88358307 359.31451416]
[92.99076843 374.28793335]
[92.09795380 389.26132202]
[91.42816925 404.24636841]
[90.98155975 419.23971558]
[103.76365662 427.87808228]
[109.82537842 442.06466675]
[107.23245239 457.27258301]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 207]
[7 206]
[10 205]
[11 204]
[12 203]
[13 202]
[15 200]
[16 199]
[17 198]
[18 197]
[19 196]
[25 189]
[26 188]
[27 187]
[28 186]
[29 185]
[30 184]
[32 182]
[33 181]
[34 180]
[35 179]
[48 166]
[49 165]
[50 163]
[51 162]
[52 161]
[53 160]
[54 159]
[56 157]
[57 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
