%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[222.38098145 458.30682373]
[221.02236938 443.35906982]
[220.95378113 428.34982300]
[222.17572021 413.39028931]
[224.67915344 398.59115601]
[228.44552612 384.06201172]
[233.44696045 369.91043091]
[239.64643860 356.24121094]
[246.99803162 343.15551758]
[255.44734192 330.75024414]
[264.93179321 319.11724854]
[275.38116455 308.34265137]
[265.55059814 297.01306152]
[255.63594055 285.75695801]
[245.63777161 274.57498169]
[235.63960266 263.39300537]
[225.64143372 252.21102905]
[215.64324951 241.02905273]
[205.64508057 229.84707642]
[195.64691162 218.66511536]
[181.98844910 224.74845886]
[167.09825134 226.31440735]
[152.43324280 223.19703674]
[139.43225098 215.68937683]
[129.37478638 204.51574707]
[123.25514984 190.76202393]
[121.68416595 175.77000427]
[124.82820129 161.00662231]
[132.39164734 147.92030334]
[122.39347839 136.73832703]
[112.39530182 125.55635834]
[105.59354401 122.66536713]
[102.33303833 114.13266754]
[89.18103790 109.38751221]
[86.33737183 95.69791412]
[76.50679016 84.36831665]
[63.71958542 82.68006897]
[55.76491547 73.04124451]
[56.48649979 60.96623230]
[46.82568741 49.49153137]
[37.16487885 38.01683044]
[27.50406647 26.54213142]
[17.84325600 15.06743145]
[17.56097412 30.06477547]
[8.60966587 42.10113907]
[-5.67205429 46.68725586]
[-19.95745659 42.11262131]
[-28.91843796 30.08345604]
[-29.21277618 15.08634472]
[-20.73068810 2.71483755]
[-6.63578510 -2.41679883]
[7.81586075 1.60605133]
[-0.41294721 -10.93534946]
[-8.64175510 -23.47674942]
[-16.87056351 -36.01815033]
[-29.31758118 -39.39964676]
[-35.91318512 -50.01481628]
[-33.58483505 -61.88516998]
[-41.62601089 -74.54769897]
[-55.55556488 -82.04956818]
[-55.84679413 -96.94132233]
[-69.40254211 -90.47611237]
[-83.63877106 -85.69204712]
[-98.34786224 -82.65888977]
[-113.31531525 -81.42087555]
[-128.32286072 -81.99606323]
[-143.15165710 -84.37605286]
[-157.58543396 -88.52615356]
[-171.41372681 -94.38582611]
[-184.43486023 -101.86962891]
[-196.45895386 -110.86843109]
[-207.31066895 -121.25099945]
[-216.83175659 -132.86592102]
[-224.88336182 -145.54380798]
[-231.34805298 -159.09980774]
[-236.13159180 -173.33621216]
[-239.16419983 -188.04541016]
[-240.40165710 -203.01290894]
[-239.82591248 -218.02044678]
[-237.44535828 -232.84913635]
[-233.29472351 -247.28277588]
[-227.43452454 -261.11083984]
[-219.95024109 -274.13168335]
[-210.95098877 -286.15545654]
[-200.56802368 -297.00677490]
[-188.95274353 -306.52743530]
[-176.27453613 -314.57855225]
[-162.71830750 -321.04275513]
[-148.48171997 -325.82574463]
[-133.77241516 -328.85781860]
[-118.80486298 -330.09469604]
[-103.79735565 -329.51840210]
[-88.96875000 -327.13729858]
[-74.53527069 -322.98611450]
[-60.70742416 -317.12542725]
[-47.68684769 -309.64062500]
[-35.66342163 -300.64093018]
[-24.81248283 -290.25756836]
[-15.29227066 -278.64193726]
[-7.24161816 -265.96343994]
[-0.77792764 -252.40695190]
[4.00454187 -238.17018127]
[7.03604746 -223.46075439]
[8.27238178 -208.49316406]
[7.69551373 -193.48568726]
[5.31385708 -178.65716553]
[1.16214323 -164.22384644]
[-4.69908381 -150.39620972]
[-12.18435001 -137.37591553]
[-21.18449783 -125.35282135]
[-31.56828117 -114.50227356]
[-43.18426895 -104.98249817]
[-29.82987213 -98.38633728]
[-28.96348572 -82.58886719]
[-20.92231178 -69.92634583]
[-4.95265388 -62.65056610]
[-4.32916260 -44.24695587]
[3.89964533 -31.70555687]
[12.12845325 -19.16415596]
[20.35726166 -6.62275648]
[29.31795692 5.40662098]
[38.97876740 16.88132095]
[48.63957596 28.35602188]
[58.30038834 39.83072281]
[67.96119690 51.30541992]
[84.75974274 56.38241196]
[87.83638000 74.53773499]
[97.66696167 85.86733246]
[110.81896210 90.61248779]
[113.66262817 104.30208588]
[123.57727814 115.55818176]
[133.57545471 126.74015808]
[143.57362366 137.92213440]
[157.42127991 131.86407471]
[172.44306946 130.38479614]
[187.16664124 133.61665344]
[200.15275574 141.23083496]
[210.13601685 152.47079468]
[216.14814758 166.22744751]
[217.61187744 181.14848328]
[214.39639282 195.77143860]
[206.82888794 208.66693115]
[216.82705688 219.84890747]
[226.82522583 231.03088379]
[236.82339478 242.21286011]
[246.82157898 253.39483643]
[256.81973267 264.57681274]
[266.81793213 275.75878906]
[274.87081909 280.07022095]
[276.88018799 287.18246460]
[286.71075439 298.51205444]
[298.85086060 289.68597412]
[311.70474243 281.93621826]
[325.17727661 275.32012939]
[339.16867065 269.88668823]
[353.57534790 265.67614746]
[368.29067993 262.71969604]
[383.20568848 261.03918457]
[398.20993042 260.64706421]
[413.19235229 261.54623413]
[428.04202271 263.73007202]
[442.64898682 267.18237305]
[456.90505981 271.87756348]
[470.70477295 277.78094482]
[483.94589233 284.84875488]
[496.53042603 293.02868652]
[508.36517334 302.26016235]
[519.36248779 312.47485352]
[529.44104004 323.59710693]
[538.52612305 335.54461670]
[546.55047607 348.22888184]
[553.45477295 361.55603027]
[559.18780518 375.42736816]
[563.70715332 389.74017334]
[566.97937012 404.38851929]
[568.98016357 419.26394653]
[569.69482422 434.25631714]
[569.11804199 449.25460815]
[567.25402832 464.14776611]
[564.11663818 478.82559204]
[559.72900391 493.17935181]
[554.12377930 507.10281372]
[547.34228516 520.49285889]
[539.43487549 533.25036621]
[530.46002197 545.28088379]
[520.48413086 556.49530029]
[509.58117676 566.81066895]
[497.83178711 576.15057373]
[485.32299805 584.44580078]
[472.14739990 591.63507080]
[458.40255737 597.66503906]
[444.19021606 602.49108887]
[429.61563110 606.07751465]
[414.78665161 608.39776611]
[399.81314087 609.43463135]
[384.80590820 609.18048096]
[369.87609863 607.63714600]
[355.13421631 604.81610107]
[340.68942261 600.73815918]
[326.64868164 595.43359375]
[313.11590576 588.94158936]
[300.19131470 581.31030273]
[287.97058105 572.59625244]
[276.54421997 562.86383057]
[265.99682617 552.18518066]
[256.40643311 540.63934326]
[247.84411621 528.31182861]
[240.37322998 515.29382324]
[234.04910278 501.68185425]
[228.91854858 487.57656860]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 151]
[13 150]
[14 148]
[15 147]
[16 146]
[17 145]
[18 144]
[19 143]
[20 142]
[29 133]
[30 132]
[31 131]
[33 130]
[35 128]
[36 127]
[39 125]
[40 124]
[41 123]
[42 122]
[43 121]
[52 120]
[53 119]
[54 118]
[55 117]
[58 115]
[59 114]
[61 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
