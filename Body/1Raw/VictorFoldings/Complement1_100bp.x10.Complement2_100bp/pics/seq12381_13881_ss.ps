%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGAxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[124.49089050 795.09222412]
[109.86669159 791.74017334]
[95.43796539 787.62731934]
[81.24427032 782.76495361]
[67.32449341 777.16644287]
[53.71680832 770.84704590]
[40.45849991 763.82415771]
[27.58591080 756.11700439]
[15.13432693 747.74670410]
[3.13787389 738.73626709]
[-8.37056541 729.11029053]
[-19.35944557 718.89520264]
[-29.79865074 708.11895752]
[-39.65956116 696.81115723]
[-48.91515732 685.00280762]
[-57.54006195 672.72619629]
[-65.51063538 660.01507568]
[-72.80503845 646.90417480]
[-79.40327454 633.42950439]
[-85.28725433 619.62792969]
[-90.44084930 605.53741455]
[-94.84993744 591.19641113]
[-98.50243378 576.64434814]
[-101.38832855 561.92102051]
[-103.49970245 547.06689453]
[-104.83078003 532.12261963]
[-105.37791443 517.12915039]
[-105.13958740 502.12756348]
[-104.11647034 487.15902710]
[-102.31136322 472.26455688]
[-99.72920990 457.48498535]
[-96.37709045 442.86080933]
[-92.26419830 428.43209839]
[-87.40179443 414.23840332]
[-81.80321503 400.31863403]
[-75.48379517 386.71096802]
[-68.46087646 373.45269775]
[-60.75368881 360.58013916]
[-52.38336563 348.12857056]
[-43.37284851 336.13214111]
[-33.74683762 324.62371826]
[-23.53170967 313.63488770]
[-12.75546932 303.19570923]
[-1.44765282 293.33483887]
[10.36074638 284.07928467]
[22.63736153 275.45440674]
[35.34854507 267.48385620]
[48.45945358 260.18951416]
[61.93415070 253.59130859]
[75.73570251 247.70736694]
[89.82628632 242.55381775]
[104.16727448 238.14477539]
[118.71936798 234.49232483]
[115.83409119 219.77243042]
[105.79316711 208.77110291]
[110.73149872 193.74035645]
[100.69057465 182.73902893]
[105.62890625 167.70828247]
[102.74362946 152.98838806]
[99.85836029 138.26849365]
[96.97308350 123.54860687]
[94.08781433 108.82872009]
[90.22351074 94.33502197]
[85.39750671 80.13256836]
[80.57151031 65.93011475]
[75.74551392 51.72765732]
[66.87485504 63.82358551]
[51.89406967 64.58249664]
[41.84642792 53.44495010]
[44.13867950 38.62113190]
[57.08106613 31.03860855]
[71.13179016 36.28574753]
[67.37548828 21.76368713]
[63.61918640 7.24162865]
[58.44047165 -0.28291440]
[59.91678238 -7.52462006]
[56.37710953 -22.10099602]
[52.83743668 -36.67737198]
[49.29776382 -51.25374603]
[44.94263077 -36.89990234]
[35.48555756 -25.25671768]
[22.32944870 -18.05138588]
[7.42593527 -16.35277367]
[-7.01413631 -20.41286469]
[-18.84866714 -29.62936592]
[-26.32207489 -42.63506317]
[-28.32572365 -57.50064087]
[-24.56238365 -72.02087402]
[-15.59032631 -84.04178619]
[-2.74049997 -91.78012848]
[12.08089828 -94.08797455]
[26.67520332 -90.62296295]
[38.87743378 -81.89911652]
[46.87677765 -69.21234131]
[46.43017197 -84.20568848]
[45.98356628 -99.19904327]
[31.58354759 -103.93351746]
[19.67316437 -113.31001282]
[11.69065285 -126.19625854]
[8.59993935 -141.03617859]
[10.77424240 -156.03778076]
[17.95100594 -169.38955688]
[29.26359940 -179.47921753]
[43.34597015 -185.08836365]
[58.49760818 -185.53968811]
[72.88887787 -180.77867126]
[84.78195953 -171.38024902]
[92.74070740 -158.47930908]
[95.80406952 -143.63372803]
[93.60212708 -128.63615417]
[86.40077209 -115.29762268]
[75.06960297 -105.22883606]
[60.97691345 -99.64564514]
[61.42352295 -84.65229797]
[61.87012863 -69.65894318]
[63.87414169 -54.79341888]
[67.41381073 -40.21704483]
[70.95348358 -25.64066887]
[74.49315643 -11.06429291]
[78.14124298 3.48532796]
[81.89754486 18.00738716]
[85.65384674 32.52944565]
[89.94796753 46.90166092]
[94.77397156 61.10411453]
[99.59996796 75.30657196]
[104.42596436 89.50902557]
[109.46466064 75.38063049]
[121.27654266 66.13512421]
[136.20158386 64.63732910]
[149.61506653 71.35134888]
[157.36071777 84.19677734]
[157.03843689 99.19331360]
[148.74809265 111.69412231]
[135.05853271 117.82569122]
[120.21163177 115.68807983]
[108.80770111 105.94344330]
[111.69297791 120.66333771]
[114.57824707 135.38322449]
[117.46352386 150.10311890]
[120.34879303 164.82301331]
[130.59609985 176.87719727]
[125.45138550 190.85508728]
[135.69868469 202.90927124]
[130.55398560 216.88716125]
[133.43925476 231.60704041]
[148.29338074 229.49552917]
[163.23767090 228.16432190]
[178.23114014 227.61706543]
[193.23269653 227.85523987]
[208.20123291 228.87821960]
[223.09571838 230.68319702]
[237.87533569 233.26521301]
[252.49955750 236.61720276]
[266.92831421 240.72996521]
[281.12203979 245.59223938]
[295.04183960 251.19070435]
[308.64956665 257.50997925]
[321.90789795 264.53280640]
[334.78054810 272.23986816]
[347.23217773 280.61007690]
[359.22869873 289.62048340]
[370.73718262 299.24639893]
[381.72613525 309.46142578]
[392.16540527 320.23757935]
[402.02636719 331.54528809]
[411.28204346 343.35360718]
[419.90701294 355.63015747]
[427.87768555 368.34124756]
[435.17214966 381.45208740]
[441.77047729 394.92672729]
[447.65454102 408.72824097]
[452.80822754 422.81878662]
[457.21737671 437.15972900]
[460.86996460 451.71179199]
[463.75595093 466.43505859]
[465.86743164 481.28918457]
[467.19857788 496.23345947]
[467.74581909 511.22692871]
[467.50756836 526.22851562]
[466.48455811 541.19702148]
[464.67953491 556.09149170]
[462.09747314 570.87109375]
[458.74545288 585.49536133]
[454.63262939 599.92407227]
[449.77032471 614.11779785]
[444.17181396 628.03759766]
[437.85247803 641.64526367]
[430.82965088 654.90362549]
[423.12252808 667.77624512]
[414.75228882 680.22784424]
[405.74185181 692.22430420]
[396.11590576 703.73278809]
[385.90084839 714.72167969]
[375.12466431 725.16094971]
[363.81689453 735.02185059]
[352.00854492 744.27752686]
[339.73199463 752.90246582]
[327.02087402 760.87304688]
[313.91000366 768.16748047]
[300.43533325 774.76574707]
[286.63381958 780.64978027]
[272.54327393 785.80340576]
[258.20230103 790.21258545]
[243.65023804 793.86511230]
[228.92695618 796.75103760]
[214.07281494 798.86248779]
[199.12852478 800.19360352]
[184.13505554 800.74078369]
[169.13348389 800.50250244]
[154.16496277 799.47943115]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 145]
[54 144]
[56 142]
[58 140]
[59 139]
[60 138]
[61 137]
[62 136]
[63 126]
[64 125]
[65 124]
[66 123]
[72 122]
[73 121]
[74 120]
[76 119]
[77 118]
[78 117]
[79 116]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
