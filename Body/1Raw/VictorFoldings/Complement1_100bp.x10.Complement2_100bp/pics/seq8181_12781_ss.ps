%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[81.57595825 410.82812500]
[79.57171631 426.05569458]
[70.20948792 438.23123169]
[56.00765991 444.07962036]
[40.78645706 442.02767944]
[28.64030457 432.62731934]
[22.83645630 418.40722656]
[24.93611908 403.19253540]
[34.37449265 391.07589722]
[48.61270523 385.31665039]
[50.61671829 370.45114136]
[52.62073135 355.58560181]
[54.62474442 340.72009277]
[56.62876129 325.85455322]
[58.63277435 310.98901367]
[48.70690536 303.99957275]
[42.65884781 293.39044189]
[41.68967819 281.14453125]
[46.04449463 269.58102417]
[54.95429993 260.91592407]
[66.77104187 256.83764648]
[69.21677399 242.03837585]
[67.21313477 237.70310974]
[67.91160583 232.06315613]
[71.96194458 226.83761597]
[74.84722137 212.11772156]
[77.73249054 197.39782715]
[72.58779144 183.41993713]
[82.83508301 171.36575317]
[85.72035980 156.64585876]
[88.49597168 141.90490723]
[91.16176605 127.14368439]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[92.50000000 72.79650116]
[84.76270294 58.99632645]
[92.50000000 46.26905823]
[92.50000000 31.26905632]
[92.50000000 16.26905632]
[92.50000000 1.26905644]
[85.87250519 14.72551727]
[76.54198456 26.47036171]
[64.93290710 35.96927643]
[51.57341766 42.79012680]
[37.07127762 46.62260437]
[22.08623695 47.29236221]
[7.30001831 44.76893234]
[-6.61470652 39.16710663]
[-19.02490997 30.74173546]
[-29.36600876 19.87611771]
[-37.16755295 7.06456423]
[-42.07462692 -7.11008358]
[-43.86398697 -22.00297356]
[-42.45423126 -36.93658066]
[-37.90949631 -51.23152161]
[-30.43653488 -64.23748016]
[-20.37531662 -75.36275482]
[-8.18356037 -84.10124207]
[5.58408976 -90.05538177]
[20.30129814 -92.95430756]
[35.29853058 -92.66613770]
[49.89351273 -89.20398712]
[63.42226791 -82.72534943]
[75.26933289 -73.52496338]
[84.89573669 -62.02138519]
[91.86355591 -48.73795319]
[95.85578918 -34.27897263]
[96.69059753 -19.29790878]
[102.55955505 -33.10208511]
[108.42852020 -46.90626144]
[114.29747772 -60.71043777]
[119.96026611 -74.60046387]
[125.41562653 -88.57326508]
[130.87098694 -102.54605865]
[136.32633972 -116.51885986]
[141.78169250 -130.49165344]
[147.23704529 -144.46446228]
[133.93186951 -137.53825378]
[119.08003235 -139.64129639]
[108.22089386 -149.98919678]
[105.40464783 -164.72244263]
[111.68168640 -178.34591675]
[124.71082306 -185.77836609]
[139.63252258 -184.24771118]
[150.88134766 -174.32481384]
[154.26168823 -159.70951843]
[161.33879089 -172.93504333]
[168.41589355 -186.16056824]
[175.49299622 -199.38610840]
[182.57009888 -212.61163330]
[189.64721680 -225.83715820]
[196.72431946 -239.06268311]
[196.41334534 -254.88082886]
[209.24014282 -262.45199585]
[216.31726074 -275.67752075]
[223.39436340 -288.90304565]
[211.12232971 -297.56195068]
[200.00743103 -307.66339111]
[190.21817017 -319.05416870]
[181.90292358 -331.56161499]
[175.18775940 -344.99612427]
[170.17449951 -359.15405273]
[166.93911743 -373.82073975]
[165.53065491 -388.77386475]
[165.97048950 -403.78674316]
[168.25195312 -418.63174438]
[172.34043884 -433.08386230]
[178.17398071 -446.92401123]
[185.66412354 -459.94235229]
[194.69734192 -471.94155884]
[205.13668823 -482.73968506]
[216.82391357 -492.17306519]
[229.58181763 -500.09866333]
[243.21701050 -506.39636230]
[257.52279663 -510.97070312]
[272.28228760 -513.75225830]
[287.27172852 -514.69897461]
[302.26388550 -513.79644775]
[317.03149414 -511.05828857]
[331.35067749 -506.52612305]
[345.00436401 -500.26858521]
[357.78555298 -492.38058472]
[369.50048828 -482.98162842]
[379.97158813 -472.21429443]
[389.04010010 -460.24176025]
[396.56854248 -447.24551392]
[402.44281006 -433.42260742]
[406.57382202 -418.98260498]
[408.89895630 -404.14434814]
[409.38299561 -389.13284302]
[408.01858521 -374.17565918]
[404.82641602 -359.49948120]
[399.85482788 -345.32687378]
[393.17926025 -331.87265015]
[384.90087891 -319.34075928]
[375.14520264 -307.92120361]
[364.06008911 -297.78710938]
[351.81359863 -289.09210205]
[338.59140015 -281.96795654]
[324.59393311 -276.52273560]
[310.03341675 -272.83892822]
[295.13052368 -270.97244263]
[280.11123657 -270.95150757]
[265.20321655 -272.77648926]
[250.63247681 -276.41970825]
[236.61988831 -281.82592773]
[229.54278564 -268.60040283]
[222.46568298 -255.37487793]
[223.28285217 -240.50270081]
[209.94984436 -231.98558044]
[202.87274170 -218.76005554]
[195.79563904 -205.53453064]
[188.71852112 -192.30899048]
[181.64141846 -179.08346558]
[174.56431580 -165.85794067]
[167.48721313 -152.63241577]
[161.20985413 -139.00909424]
[155.75448608 -125.03630066]
[150.29913330 -111.06349945]
[144.84378052 -97.09070587]
[139.38842773 -83.11790466]
[133.93305969 -69.14511108]
[134.99618530 -64.48905945]
[133.14569092 -59.11572647]
[128.10165405 -54.84148026]
[122.23269653 -41.03730011]
[116.36373138 -27.23312378]
[110.49477386 -13.42894745]
[107.50000000 1.26905644]
[107.50000000 16.26905632]
[107.50000000 31.26905632]
[107.50000000 46.26905823]
[115.23729706 58.99632645]
[107.50000000 72.79650116]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[115.62906647 99.59722137]
[128.37736511 91.69272614]
[143.28337097 90.01624298]
[157.46900940 94.89147949]
[168.19522095 105.37710571]
[173.39096069 119.44850159]
[172.05300903 134.38871765]
[164.43969727 147.31301880]
[152.02104187 155.72592163]
[137.19488525 158.00303650]
[122.82394409 153.70469666]
[111.68299866 143.66081238]
[105.92298126 129.80947876]
[103.25718689 144.57069397]
[104.81165314 153.57188416]
[100.44025421 159.53114319]
[97.55497742 174.25102234]
[102.49330902 189.28178406]
[92.45238495 200.28309631]
[89.56710815 215.00299072]
[86.68183899 229.72288513]
[84.01604462 244.48410034]
[81.57031250 259.28338623]
[94.68432617 271.80456543]
[97.63108063 289.53579712]
[89.41690826 305.34649658]
[73.49829865 312.99304199]
[71.49428558 327.85855103]
[69.49027252 342.72409058]
[67.48625946 357.58963013]
[65.48224640 372.45513916]
[63.47823334 387.32067871]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 210]
[11 209]
[12 208]
[13 207]
[14 206]
[15 205]
[21 201]
[22 200]
[25 199]
[26 198]
[27 197]
[29 195]
[30 194]
[31 192]
[32 191]
[33 178]
[35 176]
[36 175]
[38 173]
[39 172]
[40 171]
[41 170]
[69 169]
[70 168]
[71 167]
[72 166]
[73 163]
[74 162]
[75 161]
[76 160]
[77 159]
[78 158]
[87 157]
[88 156]
[89 155]
[90 154]
[91 153]
[92 152]
[93 151]
[95 149]
[96 148]
[97 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
