%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[109.94625854 712.55261230]
[95.47365570 708.56787109]
[81.43778229 703.24542236]
[67.96200562 696.63195801]
[55.16474152 688.78564453]
[43.15845490 679.77545166]
[32.04866409 669.68054199]
[21.93300438 658.58966064]
[12.90037155 646.60021973]
[5.03014851 633.81768799]
[-1.60849977 620.35424805]
[-6.95723152 606.32836914]
[-10.96904087 591.86328125]
[-13.60867023 577.08599854]
[-14.85292339 562.12652588]
[-14.69086456 547.11627197]
[-13.12391853 532.18713379]
[-10.16585541 517.47033691]
[-5.84267187 503.09518433]
[-0.19236042 489.18804932]
[6.73542213 475.87112427]
[14.87979317 463.26147461]
[24.16917801 451.46984863]
[34.52193832 440.59994507]
[45.84709549 430.74728394]
[58.04511642 421.99841309]
[71.00880432 414.43023682]
[84.62422943 408.10925293]
[98.77174377 403.09106445]
[113.32700348 399.41970825]
[128.16210938 397.12747192]
[127.26928711 382.15408325]
[126.37647247 367.18066406]
[117.89534760 354.93649292]
[124.79753113 340.70025635]
[123.90471649 325.72683716]
[115.42359161 313.48266602]
[122.32577515 299.24642944]
[121.43295288 284.27304077]
[112.95183563 272.02886963]
[119.85401154 257.79263306]
[109.41516876 243.68597412]
[117.79345703 227.28823853]
[116.67780304 212.32978821]
[114.45269012 197.49574280]
[111.13043213 182.86827087]
[107.80817413 168.24081421]
[104.48590851 153.61335754]
[101.16365051 138.98590088]
[97.84139252 124.35843658]
[94.51913452 109.73097229]
[91.08807373 95.12865448]
[87.54840088 80.55227661]
[81.26932526 94.17480469]
[68.67969513 102.32963562]
[53.68055344 102.48991394]
[40.91954041 94.60597229]
[34.35079575 81.12073517]
[36.00971603 66.21275330]
[45.38227081 54.50142288]
[59.56426620 49.61563110]
[74.16126251 53.06929016]
[84.65033722 63.79247665]
[83.08981323 48.87387085]
[79.08459473 40.66436005]
[81.61881256 33.72177124]
[80.28057861 18.78158760]
[78.94234467 3.84140277]
[77.60411072 -11.09878254]
[76.26587677 -26.03896713]
[74.92764282 -40.97915268]
[73.58940887 -55.91933823]
[72.25117493 -70.85951996]
[70.91294098 -85.79970551]
[63.94096756 -72.51845551]
[51.94871521 -63.50813675]
[37.25170517 -60.50849152]
[22.68769646 -64.09870911]
[11.06877232 -73.58557129]
[4.63836479 -87.13732147]
[4.63808489 -102.13732147]
[11.06798649 -115.68930817]
[22.68655586 -125.17660522]
[37.25043106 -128.76736450]
[51.94755173 -125.76827240]
[63.94013977 -116.75839233]
[70.91294098 -103.47617340]
[72.25117493 -118.41635895]
[60.79042816 -131.63265991]
[62.40230942 -148.71237183]
[75.60313416 -159.13240051]
[76.71878815 -174.09085083]
[77.83443451 -189.04931641]
[78.83869171 -204.01565552]
[79.73150635 -218.98905945]
[80.62432861 -233.96246338]
[81.51714325 -248.93586731]
[82.40995789 -263.90927124]
[83.30277252 -278.88269043]
[69.38256836 -284.88299561]
[58.35620880 -295.28469849]
[51.55518341 -308.83169556]
[49.80074692 -323.88818359]
[53.30475616 -338.63598633]
[61.64408875 -351.29425049]
[73.81172180 -360.33441162]
[88.33836365 -364.66482544]
[103.46984863 -363.76257324]
[117.37897491 -357.73663330]
[128.38613892 -347.31463623]
[135.16218567 -333.75509644]
[136.88888550 -318.69540405]
[133.35769653 -303.95410156]
[124.99504852 -291.31121826]
[112.81077576 -282.29351807]
[98.27617645 -277.98986816]
[97.38336182 -263.01644897]
[96.49054718 -248.04306030]
[95.59773254 -233.06965637]
[94.70491791 -218.09625244]
[93.81209564 -203.12283325]
[96.55190277 -196.25878906]
[92.79288483 -187.93367004]
[91.67723846 -172.97520447]
[90.56159210 -158.01675415]
[100.25328827 -149.52555847]
[103.33071136 -136.81291199]
[98.45256805 -124.46729279]
[87.19136047 -117.07812500]
[85.85312653 -102.13793945]
[85.85312653 -87.13793945]
[87.19136047 -72.19775391]
[88.52959442 -57.25757217]
[89.86782837 -42.31738663]
[91.20606232 -27.37720108]
[92.54429626 -12.43701649]
[93.88253021 2.50316858]
[95.22076416 17.44335365]
[96.55899811 32.38353729]
[98.00841522 47.31334686]
[99.56893921 62.23195267]
[102.12477112 77.01260376]
[105.66444397 91.58898163]
[110.47563934 98.05619812]
[109.14659119 106.40871429]
[112.46884918 121.03617859]
[115.79111481 135.66363525]
[119.11337280 150.29109192]
[122.43563080 164.91856384]
[125.75788879 179.54602051]
[129.08015442 194.17347717]
[135.02720642 180.40277100]
[147.00363159 171.37139893]
[161.87878418 169.44017029]
[175.76435852 175.11386108]
[185.03068542 186.90942383]
[187.25558472 201.74349976]
[181.85745239 215.73851013]
[170.24736023 225.23617554]
[155.46015930 227.75386047]
[141.36119080 222.63342285]
[131.63626099 211.21412659]
[132.75190735 226.17259216]
[141.99818420 235.16531372]
[142.61946106 247.64720154]
[134.82742310 256.89981079]
[143.37240601 270.21496582]
[136.40635681 283.38021851]
[137.29917908 298.35363770]
[145.84416199 311.66879272]
[138.87811279 324.83404541]
[139.77093506 339.80743408]
[148.31591797 353.12261963]
[141.34986877 366.28784180]
[142.24269104 381.26126099]
[143.13551331 396.23464966]
[158.13787842 396.74777222]
[173.02627563 398.66348267]
[187.66987610 401.96499634]
[201.93995667 406.62322998]
[215.71112061 412.59729004]
[228.86235046 419.83465576]
[241.27806091 428.27175903]
[252.84915161 437.83441162]
[263.47393799 448.43859863]
[273.05902100 459.99111938]
[281.52017212 472.39044189]
[288.78305054 485.52758789]
[294.78381348 499.28717041]
[299.46972656 513.54815674]
[302.79962158 528.18530273]
[304.74420166 543.07000732]
[305.28643799 558.07135010]
[304.42150879 573.05755615]
[302.15701294 587.89691162]
[298.51290894 602.45898438]
[293.52114868 616.61590576]
[287.22564697 630.24310303]
[279.68173218 643.22094727]
[270.95568848 655.43530273]
[261.12420654 666.77886963]
[250.27369690 677.15191650]
[238.49948120 686.46331787]
[225.90507507 694.63128662]
[212.60113525 701.58392334]
[198.70458984 707.26025391]
[184.33757019 711.61035156]
[169.62631226 714.59588623]
[154.70013428 716.19079590]
[139.69020081 716.38092041]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 176]
[32 175]
[33 174]
[35 172]
[36 171]
[38 169]
[39 168]
[41 166]
[43 163]
[44 162]
[45 151]
[46 150]
[47 149]
[48 148]
[49 147]
[50 146]
[51 145]
[52 143]
[53 142]
[63 141]
[64 140]
[66 139]
[67 138]
[68 137]
[69 136]
[70 135]
[71 134]
[72 133]
[73 132]
[74 131]
[87 130]
[88 129]
[91 125]
[92 124]
[93 123]
[94 121]
[95 120]
[96 119]
[97 118]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
