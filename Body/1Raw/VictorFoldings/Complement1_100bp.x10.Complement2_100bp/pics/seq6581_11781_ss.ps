%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[97.68063354 506.67385864]
[84.80321503 514.37634277]
[71.45876312 521.23791504]
[57.70210266 527.23040771]
[43.58976364 532.32916260]
[29.17974091 536.51330566]
[14.53124523 539.76556396]
[-0.29552701 542.07263184]
[-15.23964977 543.42498779]
[-30.23971367 543.81707764]
[-45.23408127 543.24731445]
[-60.16113281 541.71801758]
[-74.95953369 539.23547363]
[-89.56847382 535.80987549]
[-103.92792511 531.45538330]
[-117.97886658 526.18975830]
[-131.66357422 520.03472900]
[-144.92581177 513.01556396]
[-157.71107483 505.16107178]
[-169.96682739 496.50360107]
[-181.64271545 487.07864380]
[-192.69075012 476.92498779]
[-203.06553650 466.08435059]
[-212.72444153 454.60128784]
[-221.62777710 442.52294922]
[-229.73895264 429.89898682]
[-237.02464294 416.78125000]
[-243.45489502 403.22369385]
[-249.00331116 389.28201294]
[-253.64706421 375.01345825]
[-257.36709595 360.47671509]
[-260.14810181 345.73150635]
[-261.97866821 330.83837891]
[-262.85125732 315.85858154]
[-262.76229858 300.85366821]
[-261.71212769 285.88528442]
[-259.70510864 271.01492310]
[-256.74945068 256.30371094]
[-252.85733032 241.81208801]
[-248.04470825 227.59960938]
[-242.33137512 213.72468567]
[-235.74079895 200.24433899]
[-228.30007935 187.21392822]
[-220.03979492 174.68702698]
[-210.99386597 162.71511841]
[-201.19947815 151.34736633]
[-190.69688416 140.63050842]
[-179.52922058 130.60856628]
[-167.74240112 121.32274628]
[-155.38485718 112.81118774]
[-142.50735474 105.10887146]
[-129.16282654 98.24744415]
[-115.40609741 92.25510406]
[-101.29370117 87.15647888]
[-86.88363647 82.97251129]
[-72.23510742 79.72040558]
[-57.40830612 77.41352081]
[-42.46416855 76.06133270]
[-27.46409988 75.66939545]
[-12.46973896 76.23933411]
[2.45729780 77.76879120]
[17.25567245 80.25148773]
[31.86457443 83.67722321]
[46.22397232 88.03191376]
[60.27486038 93.29767609]
[73.95949554 99.45286560]
[87.22164917 106.47219086]
[87.79519653 92.50212860]
[99.99750519 85.67605591]
[107.84925842 72.89521027]
[115.70101929 60.11436844]
[123.55277252 47.33352661]
[131.40452576 34.55268478]
[139.25628662 21.77184296]
[126.98422241 13.13800716]
[115.27266693 3.75792146]
[104.16693115 -6.33212471]
[93.70996857 -17.09309387]
[83.94224548 -28.48335648]
[74.90154266 -40.45884323]
[66.62284088 -52.97322083]
[59.13817978 -65.97808075]
[52.47650146 -79.42309570]
[46.66358185 -93.25626373]
[41.72191620 -107.42406464]
[37.67061996 -121.87167358]
[34.52536392 -136.54321289]
[32.29832077 -151.38189697]
[30.99810410 -166.33033752]
[30.62974548 -181.33070374]
[31.19466782 -196.32495117]
[32.69068909 -211.25506592]
[35.11201859 -226.06329346]
[38.44928741 -240.69235229]
[42.68959045 -255.08561707]
[47.81651688 -269.18743896]
[53.81023026 -282.94323730]
[60.64754868 -296.29977417]
[68.30201721 -309.20544434]
[76.74401093 -321.61022949]
[85.94088745 -333.46621704]
[95.85705566 -344.72747803]
[106.45415497 -355.35046387]
[117.69118500 -365.29409790]
[129.52467346 -374.51989746]
[141.90882874 -382.99212646]
[154.79574585 -390.67807007]
[168.13557434 -397.54797363]
[181.87669373 -403.57525635]
[195.96595764 -408.73660278]
[210.34883118 -413.01202393]
[224.96969604 -416.38497925]
[239.77197266 -418.84246826]
[254.69839478 -420.37490845]
[269.69122314 -420.97644043]
[284.69244385 -420.64468384]
[299.64401245 -419.38098145]
[314.48809814 -417.19015503]
[329.16726685 -414.08071899]
[343.62472534 -410.06469727]
[357.80453491 -405.15762329]
[371.65185547 -399.37850952]
[385.11309814 -392.74966431]
[398.13616943 -385.29675293]
[410.67071533 -377.04864502]
[422.66824341 -368.03720093]
[434.08230591 -358.29730225]
[444.86877441 -347.86663818]
[454.98590088 -336.78555298]
[464.39456177 -325.09695435]
[473.05831909 -312.84600830]
[480.94369507 -300.08010864]
[488.02014160 -286.84872437]
[494.26031494 -273.20294189]
[499.64007568 -259.19564819]
[504.13858032 -244.88096619]
[507.73846436 -230.31431580]
[510.42575073 -215.55203247]
[512.19006348 -200.65124512]
[513.02465820 -185.66958618]
[512.92614746 -170.66502380]
[511.89501953 -155.69560242]
[509.93524170 -140.81925964]
[507.05441284 -126.09352112]
[503.26364136 -111.57537842]
[498.57760620 -97.32098389]
[493.01446533 -83.38549805]
[486.59570312 -69.82282257]
[479.34619141 -56.68544006]
[471.29391479 -44.02417374]
[462.47009277 -31.88800621]
[452.90881348 -20.32389259]
[442.64712524 -9.37656879]
[431.72467041 0.91160905]
[420.18374634 10.50083828]
[408.06896973 19.35401917]
[395.42721558 27.43690300]
[382.30743408 34.71821594]
[368.76034546 41.16978455]
[354.83834839 46.76665497]
[340.59533691 51.48717499]
[326.08642578 55.31307220]
[311.36770630 58.22955322]
[296.49615479 60.22533417]
[281.52926636 61.29269028]
[266.52499390 61.42749405]
[251.54135132 60.62922287]
[236.63633728 58.90096664]
[221.86759949 56.24940872]
[207.29226685 52.68481064]
[192.96675110 48.22096252]
[178.94645691 42.87513351]
[165.28562927 36.66800690]
[152.03712463 29.62359810]
[144.18536377 42.40444183]
[136.33361816 55.18528366]
[128.48185730 67.96612549]
[120.63010406 80.74697113]
[112.77835083 93.52780914]
[112.20480347 107.49787140]
[100.00249481 114.32394409]
[112.25834656 122.98130035]
[123.93433380 132.40609741]
[134.98248291 142.55963135]
[145.35739136 153.40016174]
[155.01641846 164.88313293]
[163.91989136 176.96138000]
[172.03120422 189.58525085]
[179.31704712 202.70288086]
[185.74745178 216.26037598]
[191.29602051 230.20199585]
[195.93994141 244.47048950]
[199.66012573 259.00720215]
[202.44129944 273.75238037]
[204.27201843 288.64547729]
[205.14477539 303.62527466]
[205.05598450 318.63018799]
[204.00599670 333.59860229]
[201.99913025 348.46896362]
[199.04364014 363.18020630]
[195.15167236 377.67187500]
[190.33920288 391.88439941]
[184.62602234 405.75939941]
[178.03561401 419.23983765]
[170.59503174 432.27029419]
[162.33488464 444.79730225]
[153.28909302 456.76931763]
[143.49482727 468.13717651]
[132.99234009 478.85415649]
[121.82479858 488.87622070]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 181]
[69 179]
[70 178]
[71 177]
[72 176]
[73 175]
[74 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
