%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[218.66635132 569.34136963]
[231.65946960 561.61669922]
[228.11979675 547.04034424]
[224.58013916 532.46398926]
[221.04046631 517.88757324]
[210.51831055 507.34561157]
[214.78056335 492.10934448]
[211.24089050 477.53295898]
[198.46119690 465.50607300]
[203.79190063 447.88037109]
[200.03559875 433.35830688]
[196.27929688 418.83624268]
[192.52299500 404.31420898]
[187.80464172 398.62570190]
[188.82060242 389.54794312]
[185.28092957 374.97155762]
[181.74125671 360.39520264]
[171.21910095 349.85321045]
[175.48135376 334.61694336]
[171.94168091 320.04055786]
[168.40200806 305.46417236]
[164.10787964 291.09197998]
[159.07096863 276.96295166]
[154.03405762 262.83389282]
[137.57656860 263.04693604]
[122.01645660 257.60424805]
[109.24015808 247.14700317]
[100.80299377 232.92555237]
[97.73981476 216.64971924]
[100.43811798 200.28343201]
[108.58912659 185.80758667]
[121.22301483 174.98040771]
[115.76765442 161.00761414]
[110.31230164 147.03480530]
[104.85694122 133.06201172]
[99.40158844 119.08921814]
[86.17382050 113.17546844]
[80.90412140 99.67819214]
[86.62561798 86.36614227]
[81.17025757 72.39334106]
[75.71490479 58.42054367]
[70.25954437 44.44774628]
[64.80418396 30.47495079]
[59.34883118 16.50215149]
[53.58279800 2.65466642]
[47.50896454 -11.06060028]
[41.43512726 -24.77586746]
[36.32801056 -28.97454262]
[34.39772415 -34.31972885]
[35.39140701 -38.99109268]
[29.72862053 -52.88111877]
[24.06583405 -66.77114868]
[18.40304756 -80.66117096]
[12.74026203 -94.55120087]
[6.56449318 -108.22087097]
[-0.11570144 -121.65124512]
[-13.18921375 -130.56156921]
[-11.92960072 -145.40281677]
[-25.00311279 -154.31314087]
[-23.74349976 -169.15438843]
[-30.42369461 -182.58476257]
[-36.21114731 -168.74621582]
[-50.03590393 -162.92588806]
[-63.97851562 -168.45794678]
[-70.05201721 -182.17335510]
[-64.77723694 -196.21531677]
[-51.17580795 -202.53996277]
[-37.03995132 -197.52487183]
[-42.49530792 -211.49766541]
[-47.95066452 -225.47045898]
[-53.40602112 -239.44325256]
[-65.63246155 -249.48440552]
[-63.05379868 -264.15411377]
[-68.50915527 -278.12689209]
[-83.20801544 -274.97415161]
[-98.22226715 -274.22021484]
[-113.16300964 -275.88464355]
[-127.64324188 -279.92431641]
[-141.28790283 -286.23458862]
[-153.74354553 -294.65203857]
[-164.68754578 -304.95858765]
[-173.83642578 -316.88729858]
[-180.95320129 -330.12918091]
[-185.85356140 -344.34124756]
[-188.41053772 -359.15536499]
[-188.55790710 -374.18780518]
[-186.29187012 -389.04919434]
[-181.67111206 -403.35461426]
[-174.81530762 -416.73348999]
[-165.90206909 -428.83926392]
[-155.16224670 -439.35842896]
[-142.87402344 -448.01843262]
[-129.35571289 -454.59503174]
[-114.95746613 -458.91781616]
[-100.05222321 -460.87484741]
[-85.02607727 -460.41543579]
[-70.26823425 -457.55148315]
[-56.16096115 -452.35714722]
[-43.06966782 -444.96701050]
[-31.33345222 -435.57247925]
[-21.25631142 -424.41687012]
[-13.09926605 -411.78918457]
[-7.07360268 -398.01647949]
[-3.33540177 -383.45547485]
[-1.98149085 -368.48339844]
[-3.04693985 -353.48803711]
[-6.50415087 -338.85781860]
[-12.26357460 -324.97164917]
[-20.17602730 -312.18927002]
[-30.03655624 -300.84176636]
[-41.58975220 -291.22302246]
[-54.53635788 -283.58224487]
[-49.08100128 -269.60946655]
[-37.24476624 -260.56771851]
[-39.43322372 -244.89862061]
[-33.97786713 -230.92581177]
[-28.52251053 -216.95301819]
[-23.06715202 -202.98022461]
[-16.99331856 -189.26495361]
[-10.31312466 -175.83457947]
[2.28257632 -167.88488770]
[1.50077522 -152.08300781]
[14.09647560 -144.13331604]
[13.31467438 -128.33143616]
[19.99486923 -114.90106201]
[27.16997528 -128.07368469]
[41.91507339 -130.82723999]
[53.36062622 -121.13191223]
[53.06939697 -106.13474274]
[41.25607300 -96.89107513]
[26.63028908 -100.21398926]
[32.29307556 -86.32395935]
[37.95586014 -72.43392944]
[43.61864853 -58.54390335]
[49.28143311 -44.65387726]
[55.15039444 -30.84970093]
[61.22422791 -17.13443375]
[67.29806519 -3.41916752]
[70.43788147 -1.81483614]
[72.95661926 1.39000356]
[74.11050415 5.88687611]
[73.32162476 11.04679489]
[78.77698517 25.01959229]
[84.23234558 38.99238968]
[89.68769836 52.96518707]
[95.14305878 66.93798828]
[100.59841156 80.91078186]
[113.82617950 86.82453156]
[119.09587860 100.32180786]
[113.37438202 113.63385773]
[118.82974243 127.60665894]
[124.28509521 141.57945251]
[129.74044800 155.55224609]
[135.19581604 169.52505493]
[148.78399658 168.60025024]
[162.06617737 171.53617859]
[173.96914673 178.08589172]
[183.53381348 187.71084595]
[189.99258423 199.62516785]
[192.83088684 212.85980225]
[191.82821655 226.34130859]
[187.07518005 238.97898865]
[178.96543884 249.75306702]
[168.16308594 257.79699707]
[173.19999695 271.92602539]
[178.23690796 286.05505371]
[184.58659363 272.46530151]
[198.13252258 266.02264404]
[212.68168640 269.67257690]
[221.58238220 281.74639893]
[220.76536560 296.72412109]
[210.60414124 307.75814819]
[195.74429321 309.80383301]
[182.97837830 301.92449951]
[186.51805115 316.50088501]
[190.05772400 331.07727051]
[200.83305359 342.66186523]
[196.31762695 356.85552979]
[199.85729980 371.43188477]
[203.39697266 386.00827026]
[207.04505920 400.55789185]
[210.80136108 415.07995605]
[214.55766296 429.60202026]
[218.31396484 444.12408447]
[229.01123047 451.33038330]
[231.84089661 463.50317383]
[225.81726074 473.99328613]
[229.35693359 488.56967163]
[240.13226318 500.15426636]
[235.61683655 514.34790039]
[239.15650940 528.92431641]
[242.69618225 543.50067139]
[246.23585510 558.07702637]
[261.32464600 558.98236084]
[275.47564697 564.29656982]
[287.43057251 573.54699707]
[296.12640381 585.91125488]
[300.78988647 600.28979492]
[301.00634766 615.40423584]
[296.75656128 629.91046143]
[288.41839600 642.51861572]
[276.73330688 652.10766602]
[262.74029541 657.82495117]
[247.68360901 659.16198730]
[232.90208435 656.00000000]
[219.71009827 648.62011719]
[209.28065491 637.67852783]
[202.54115295 624.14819336]
[200.09083557 609.23217773]
[202.14761353 594.25683594]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 193]
[3 192]
[4 191]
[5 190]
[7 188]
[8 187]
[10 184]
[11 183]
[12 182]
[13 181]
[15 180]
[16 179]
[17 178]
[19 176]
[20 175]
[21 174]
[22 166]
[23 165]
[24 164]
[32 154]
[33 153]
[34 152]
[35 151]
[36 150]
[39 147]
[40 146]
[41 145]
[42 144]
[43 143]
[44 142]
[45 138]
[46 137]
[47 136]
[50 135]
[51 134]
[52 133]
[53 132]
[54 131]
[55 125]
[56 124]
[58 122]
[60 120]
[61 119]
[68 118]
[69 117]
[70 116]
[71 115]
[73 113]
[74 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
