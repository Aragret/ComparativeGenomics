%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUUxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[95.71722412 618.69458008]
[101.76355743 602.85546875]
[101.76355743 587.85546875]
[101.76355743 572.85546875]
[101.76355743 557.85546875]
[101.31695557 542.86212158]
[100.42414093 527.88873291]
[99.53132629 512.91528320]
[89.09248352 498.80865479]
[97.47076416 482.41091919]
[96.35511780 467.45248413]
[85.70740509 453.50280762]
[93.84062195 436.98214722]
[92.50238800 422.04196167]
[91.16415405 407.10177612]
[89.71473694 392.17196655]
[80.69533539 380.31869507]
[86.95495605 365.78848267]
[85.39443207 350.86987305]
[74.33610535 337.24340820]
[81.97383881 320.48791504]
[80.19136810 305.59420776]
[78.40890503 290.70046997]
[76.62644196 275.80676270]
[71.12595367 289.76187134]
[61.44249725 301.21743774]
[48.59798431 308.96459961]
[33.94792557 312.18576050]
[19.03837776 310.54095459]
[5.44278049 304.20376587]
[-5.40408945 293.84301758]
[-12.35753632 280.55206299]
[-14.68374729 265.73352051]
[-12.13722992 250.95126343]
[-4.98672581 237.76527405]
[6.01315594 227.56710815]
[19.70157242 221.43301392]
[34.63394928 220.01029968]
[49.23443985 223.44914246]
[61.96221924 231.38662720]
[71.47409821 242.98509216]
[76.76629639 257.02069092]
[78.77030945 242.15516663]
[80.77432251 227.28964233]
[82.77833557 212.42411804]
[84.78234863 197.55857849]
[86.78636169 182.69305420]
[88.79037476 167.82752991]
[90.12860870 152.88734436]
[90.79839325 137.90229797]
[91.46817780 122.91726685]
[92.13796234 107.93222809]
[92.69617462 92.94261932]
[93.14278412 77.94926453]
[85.81979370 63.92484283]
[93.93260193 51.43358231]
[94.37921143 36.44023514]
[94.82581329 21.44688416]
[95.27242279 6.45353365]
[95.71902466 -8.53981686]
[88.39604187 -22.56423950]
[96.50885010 -35.05550003]
[85.65152740 -24.70568848]
[70.69009399 -23.63074684]
[58.46471405 -32.32212448]
[54.56466293 -46.80624008]
[60.77299500 -60.46115112]
[74.25134277 -67.04401398]
[88.83759308 -63.54523849]
[97.86364746 -51.56264114]
[92.03942108 -66.27281189]
[101.40773773 -77.85227203]
[103.41175079 -92.71780396]
[105.41576385 -107.58332825]
[94.36569214 -118.31655884]
[91.78466797 -133.32293701]
[98.45595551 -146.81211853]
[111.63325500 -153.70391846]
[113.63726807 -168.56944275]
[115.64128113 -183.43496704]
[117.64529419 -198.30050659]
[119.64930725 -213.16603088]
[121.65332031 -228.03155518]
[123.65733337 -242.89707947]
[109.50924683 -250.22315979]
[98.74322510 -261.93121338]
[92.64743042 -276.59317017]
[91.94190979 -292.42932129]
[96.69361115 -307.52407837]
[106.31048584 -320.05795288]
[119.61521149 -328.52667236]
[134.98928833 -331.92181396]
[128.94670105 -346.54364014]
[138.14157104 -358.26132202]
[139.92402649 -373.15502930]
[141.15100098 -388.10476685]
[141.82078552 -403.08978271]
[134.70741272 -417.22167969]
[143.00531006 -429.59078979]
[129.09962463 -435.67324829]
[118.33295441 -446.37106323]
[112.16139984 -460.23742676]
[111.41962433 -475.39706421]
[116.20793152 -489.79971313]
[125.87875366 -501.49755859]
[139.12419128 -508.90856934]
[154.15289307 -511.03045654]
[168.93237305 -507.57623291]
[181.46380615 -499.01309204]
[190.05242920 -486.49908447]
[193.53671265 -471.72668457]
[191.44541931 -456.69369507]
[184.06137085 -443.43319702]
[172.38322449 -433.73861694]
[157.99034119 -428.92098999]
[165.15162659 -415.86093140]
[156.80583191 -402.42001343]
[156.13604736 -387.43496704]
[168.79841614 -395.47640991]
[183.02932739 -390.73495483]
[188.33828735 -376.70590210]
[180.81172180 -363.73089600]
[165.99794006 -361.37463379]
[154.81774902 -371.37255859]
[153.03527832 -356.47885132]
[159.20536804 -342.92233276]
[149.88299561 -330.13934326]
[162.70425415 -324.13696289]
[173.06066895 -314.45367432]
[179.93064880 -302.02655029]
[182.63092041 -288.06417847]
[180.88447571 -273.92910767]
[174.84892273 -261.00497437]
[165.10234070 -250.56091309]
[152.58795166 -243.62712097]
[138.52285767 -240.89306641]
[136.51884460 -226.02754211]
[134.51483154 -211.16201782]
[132.51081848 -196.29649353]
[130.50680542 -181.43095398]
[128.50279236 -166.56542969]
[126.49877930 -151.69990540]
[137.38067627 -141.56469727]
[140.24179077 -126.79046631]
[133.77911377 -113.00325012]
[120.28128815 -105.57931519]
[118.27727509 -90.71379089]
[116.27326202 -75.84825897]
[122.24082947 -62.20137405]
[112.72917175 -49.55862808]
[111.50219727 -34.60889435]
[118.85713196 -21.65689659]
[110.71237946 -8.09321022]
[110.26576996 6.90013933]
[109.81916809 21.89348984]
[109.37255859 36.88684082]
[108.92595673 51.88018799]
[116.28088379 64.83218384]
[108.13613129 78.39587402]
[107.68952942 93.38922119]
[110.61640930 100.89961243]
[107.12300110 108.60201263]
[106.45321655 123.58705139]
[105.78343201 138.57208252]
[105.11364746 153.55712891]
[116.88529968 144.26045227]
[131.79832458 145.87348938]
[141.30984497 157.47222900]
[139.97125244 172.41238403]
[128.54934692 182.13555908]
[113.58711243 181.07186890]
[103.65590668 169.83154297]
[101.65189362 184.69706726]
[99.64788055 199.56259155]
[97.64385986 214.42813110]
[95.63984680 229.29365540]
[93.63583374 244.15917969]
[91.63182068 259.02471924]
[91.52015686 274.02429199]
[93.30261993 288.91799927]
[95.08509064 303.81173706]
[96.86755371 318.70544434]
[106.50615692 327.27633667]
[107.68415833 339.71804810]
[100.31303406 349.30935669]
[101.87355804 364.22793579]
[111.00457001 377.14828491]
[104.63333893 390.61145020]
[108.63855743 398.82095337]
[106.10433960 405.76354980]
[107.44257355 420.70373535]
[108.78080750 435.64392090]
[118.15995026 444.49798584]
[118.96699524 456.96923828]
[111.31356812 466.33682251]
[112.42921448 481.29528809]
[121.67549896 490.28799438]
[122.29677582 502.76989746]
[114.50473022 512.02252197]
[115.39754486 526.99591064]
[116.29035950 541.96929932]
[118.80892944 545.50634766]
[119.95561981 549.28125000]
[119.82413483 552.83343506]
[118.64809418 555.78021240]
[116.76355743 557.85546875]
[116.76355743 572.85546875]
[116.76355743 587.85546875]
[116.76355743 602.85546875]
[122.80989838 618.69458008]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 209]
[3 208]
[4 207]
[5 206]
[6 201]
[7 200]
[8 199]
[10 196]
[11 195]
[13 192]
[14 191]
[15 190]
[16 188]
[18 186]
[19 185]
[21 182]
[22 181]
[23 180]
[24 179]
[42 178]
[43 177]
[44 176]
[45 175]
[46 174]
[47 173]
[48 172]
[49 165]
[50 164]
[51 163]
[52 162]
[53 160]
[54 159]
[56 157]
[57 156]
[58 155]
[59 154]
[60 153]
[62 151]
[70 150]
[72 148]
[73 147]
[74 146]
[78 142]
[79 141]
[80 140]
[81 139]
[82 138]
[83 137]
[84 136]
[92 127]
[94 125]
[95 124]
[96 118]
[97 117]
[99 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
