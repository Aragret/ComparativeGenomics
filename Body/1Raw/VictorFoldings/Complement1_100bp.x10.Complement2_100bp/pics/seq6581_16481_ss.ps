%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[87.87260437 569.89465332]
[74.66605377 562.76727295]
[62.02906418 554.67291260]
[50.03230667 545.65679932]
[38.74287033 535.76940918]
[28.22389412 525.06597900]
[18.53420448 513.60638428]
[9.72799110 501.45474243]
[1.85450113 488.67898560]
[-5.04223299 475.35052490]
[-10.92364120 461.54397583]
[-15.75683117 447.33648682]
[-19.51477432 432.80755615]
[-22.17645454 418.03839111]
[-23.72698784 403.11163330]
[-24.15769958 388.11074829]
[-23.46618271 373.11962891]
[-21.65630531 358.22207642]
[-18.73818779 343.50146484]
[-14.72815037 329.04006958]
[-9.64861870 314.91879272]
[-3.52800012 301.21658325]
[3.59947610 288.01010132]
[11.69394970 275.37319946]
[20.71015358 263.37652588]
[30.59766197 252.08715820]
[41.30118179 241.56828308]
[52.76085663 231.87869263]
[64.91259003 223.07258606]
[77.68843079 215.19920349]
[91.01692963 208.30259705]
[104.82354736 202.42131042]
[119.03107452 197.58824158]
[115.27477264 183.06617737]
[111.51847076 168.54412842]
[100.84053802 158.15995789]
[104.87546539 142.86190796]
[101.11916351 128.33985901]
[96.82504272 113.96764374]
[86.43765259 104.60848999]
[88.97250366 90.85835266]
[84.14650726 76.65589905]
[79.32050323 62.45344543]
[74.49450684 48.25098801]
[69.66851044 34.04853058]
[64.84251404 19.84607697]
[60.01651382 5.64362097]
[55.19051743 -8.55883503]
[50.36452103 -22.76128960]
[45.53852081 -36.96374512]
[29.70780182 -44.40737152]
[24.26566887 -60.67691803]
[32.11655807 -75.54978943]
[28.69262123 -60.94579697]
[19.33884048 -49.21946716]
[5.86128807 -42.63497162]
[-9.13773346 -42.46367264]
[-22.76214790 -48.73865128]
[-32.38129425 -60.24829865]
[-36.13786697 -74.77028656]
[-33.30653000 -89.50064850]
[-24.43396950 -101.59517670]
[-11.23333740 -108.71861267]
[3.74652910 -109.49552917]
[17.61325264 -103.77591705]
[27.69001579 -92.66304016]
[25.24428940 -107.46231079]
[22.79856110 -122.26158142]
[20.35283470 -137.06085205]
[17.90710640 -151.86012268]
[4.19422579 -158.87889099]
[-2.67607784 -172.46757507]
[-0.25612217 -187.32044983]
[10.31919098 -197.77514648]
[7.87346315 -212.57441711]
[5.42773581 -227.37368774]
[2.98200846 -242.17295837]
[0.53628093 -256.97222900]
[-14.48414707 -256.60769653]
[-29.40912056 -258.33724976]
[-43.94812012 -262.12716675]
[-57.81814194 -267.90374756]
[-70.74919891 -275.55447388]
[-82.48958588 -284.93048096]
[-92.81076813 -295.84924316]
[-101.51185608 -308.09820557]
[-108.42346191 -321.43896484]
[-113.41105652 -335.61184692]
[-116.37755585 -350.34091187]
[-117.26522064 -365.33953857]
[-116.05676270 -380.31570435]
[-112.77570343 -394.97793579]
[-107.48592377 -409.04080200]
[-100.29038239 -422.23059082]
[-91.32913971 -434.29052734]
[-80.77663422 -444.98587036]
[-68.83827209 -454.10845947]
[-55.74643707 -461.48071289]
[-41.75596619 -466.95910645]
[-27.13918304 -470.43701172]
[-12.18061161 -471.84674072]
[2.82857394 -471.16082764]
[17.59621620 -468.39263916]
[31.83486176 -463.59606934]
[45.26734543 -456.86447144]
[57.63220596 -448.32885742]
[68.68875122 -438.15542603]
[78.22177124 -426.54217529]
[86.04570007 -413.71514893]
[92.00823212 -399.92404175]
[95.99331665 -385.43731689]
[97.92337799 -370.53695679]
[97.76085663 -355.51300049]
[95.50889587 -340.65786743]
[91.21134949 -326.26074219]
[84.95186615 -312.60186768]
[76.85227966 -299.94711304]
[67.07025909 -288.54278564]
[55.79621506 -278.61093140]
[43.24959564 -270.34481812]
[29.67462921 -263.90536499]
[15.33555222 -259.41793823]
[17.78127861 -244.61868286]
[20.22700691 -229.81941223]
[22.67273331 -215.02014160]
[25.11846161 -200.22087097]
[38.49511337 -193.72447205]
[45.56506348 -180.43989563]
[43.43198013 -165.36331177]
[32.70637894 -154.30584717]
[35.15210342 -139.50657654]
[37.59783173 -124.70730591]
[40.04356003 -109.90803528]
[42.48928833 -95.10876465]
[46.24558640 -80.58670807]
[58.54548264 -76.74715424]
[66.50696564 -66.36944580]
[67.04563904 -53.10594940]
[59.74097824 -41.78974533]
[64.56697845 -27.58728790]
[69.39297485 -13.38483238]
[74.21897125 0.81762332]
[79.04496765 15.02007866]
[83.87096405 29.22253418]
[88.69696045 43.42499161]
[93.52296448 57.62744522]
[98.34896088 71.82990265]
[103.17495728 86.03235626]
[113.56234741 95.39151001]
[111.02749634 109.14164734]
[119.89815521 97.04571533]
[134.87895203 96.28680420]
[144.92658997 107.42435455]
[142.63433838 122.24816895]
[129.69194031 129.83068848]
[115.64122772 124.58355713]
[119.39752960 139.10562134]
[130.34413147 150.52850342]
[126.04052734 164.78782654]
[129.79682922 179.30987549]
[133.55313110 193.83193970]
[148.32220459 191.16987610]
[163.24891663 189.61894226]
[178.24980164 189.18783569]
[193.24095154 189.87895203]
[208.13853455 191.68843079]
[222.85923767 194.60617065]
[237.32073975 198.61581421]
[251.44215393 203.69497681]
[265.14450073 209.81523132]
[278.35119629 216.94236755]
[290.98831177 225.03649902]
[302.98522949 234.05238342]
[314.27484131 243.93959045]
[324.79400635 254.64283752]
[334.48388672 266.10226440]
[343.29031372 278.25375366]
[351.16403198 291.02938843]
[358.06100464 304.35769653]
[363.94265747 318.16418457]
[368.77609253 332.37155151]
[372.53430176 346.90045166]
[375.19625854 361.66952515]
[376.74703979 376.59625244]
[377.17800903 391.59713745]
[376.48675537 406.58828735]
[374.67715454 421.48587036]
[371.75927734 436.20654297]
[367.74951172 450.66799927]
[362.67022705 464.78936768]
[356.54983521 478.49166870]
[349.42260742 491.69827271]
[341.32836914 504.33535767]
[332.31237793 516.33221436]
[322.42504883 527.62170410]
[311.72171021 538.14080811]
[300.26220703 547.83056641]
[288.11062622 556.63690186]
[275.33493042 564.51049805]
[262.00656128 571.40734863]
[248.20004272 577.28887939]
[233.99259949 582.12219238]
[219.46369934 585.88024902]
[204.69458008 588.54205322]
[189.76783752 590.09271240]
[174.76695251 590.52355957]
[159.77580261 589.83221436]
[144.87825012 588.02246094]
[130.15760803 585.10443115]
[115.69618225 581.09454346]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 161]
[34 160]
[35 159]
[37 157]
[38 156]
[39 150]
[41 148]
[42 147]
[43 146]
[44 145]
[45 144]
[46 143]
[47 142]
[48 141]
[49 140]
[50 139]
[53 135]
[66 134]
[67 133]
[68 132]
[69 131]
[70 130]
[74 126]
[75 125]
[76 124]
[77 123]
[78 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
