%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[31.27819443 578.41601562]
[26.65381622 592.72637939]
[19.61455727 606.01617432]
[10.37433434 617.88165283]
[-0.78605378 627.96215820]
[-13.52745438 635.95141602]
[-27.46267128 641.60656738]
[-42.16822815 644.75579834]
[-57.19724274 645.30340576]
[-72.09299469 643.23278809]
[-86.40282440 638.60675049]
[-99.69187164 631.56597900]
[-111.55629730 622.32440186]
[-121.63555145 611.16290283]
[-129.62333679 598.42059326]
[-135.27691650 584.48474121]
[-138.42448425 569.77880859]
[-138.97038269 554.74975586]
[-136.89804077 539.85424805]
[-132.27041626 525.54492188]
[-125.22814178 512.25665283]
[-115.98522949 500.39331055]
[-104.82255554 490.31530762]
[-92.07934570 482.32897949]
[-78.14284515 476.67697144]
[-63.43657303 473.53106689]
[-48.40743637 472.98687744]
[-33.51214981 475.06091309]
[-28.89814186 460.78817749]
[-24.28413200 446.51544189]
[-25.21773911 439.18399048]
[-19.49372101 432.06546021]
[-14.66772366 417.86300659]
[-9.84172535 403.66055298]
[-5.01572800 389.45809937]
[-0.18973026 375.25564575]
[-12.81654549 367.21499634]
[-23.15818405 356.37939453]
[-30.61035919 343.37564087]
[-34.73612213 328.95755005]
[-35.29147339 313.96194458]
[-32.23979187 299.26040649]
[-25.75421524 285.70837402]
[-16.20782471 274.09542847]
[-4.15218353 265.09945679]
[9.71452713 259.24679565]
[24.58794594 256.88171387]
[39.60418320 258.14590454]
[44.43017960 243.94345093]
[40.08932114 226.93980408]
[54.03808975 214.91842651]
[58.65209961 200.64570618]
[63.26610565 186.37297058]
[59.81886292 171.88276672]
[71.42596436 161.13169861]
[70.49235535 153.80024719]
[76.21637726 146.68171692]
[81.04237366 132.47926331]
[68.76643372 120.94655609]
[62.75582886 105.21205139]
[64.21626282 88.43203735]
[72.85477448 73.97250366]
[86.93852234 64.73399353]
[103.64234161 62.56970215]
[100.29453278 47.10675812]
[111.42549133 37.20973587]
[115.82649231 22.86989021]
[108.67786407 9.03027630]
[113.34538269 -5.44967413]
[126.58338928 -12.17950630]
[130.98439026 -26.51935387]
[127.63658142 -41.98229980]
[138.76753235 -51.87931824]
[143.16853333 -66.21916962]
[147.56953430 -80.55901337]
[151.97053528 -94.89886475]
[156.37153625 -109.23870850]
[146.32420349 -118.97081757]
[141.47335815 -132.02017212]
[142.71223450 -145.82029724]
[149.74226379 -157.68316650]
[161.14248657 -165.32278442]
[174.65637207 -167.29560852]
[179.27038574 -181.56832886]
[183.88439941 -195.84106445]
[188.49839783 -210.11380005]
[193.11241150 -224.38653564]
[197.29942322 -238.79031372]
[193.26449585 -254.08834839]
[203.94242859 -264.47253418]
[207.69873047 -278.99459839]
[211.45503235 -293.51663208]
[197.57348633 -299.26544189]
[184.62713623 -306.89028931]
[172.86802673 -316.24279785]
[162.52500916 -327.14089966]
[153.79943848 -339.37243652]
[146.86116028 -352.69934082]
[141.84521484 -366.86218262]
[138.84925842 -381.58529663]
[137.93159485 -396.58212280]
[139.11007690 -411.56066895]
[142.36180115 -426.22943115]
[147.62342834 -440.30285645]
[154.79257202 -453.50701904]
[163.72966003 -465.58486938]
[174.26075745 -476.30130005]
[186.18084717 -485.44775391]
[199.25790405 -492.84619141]
[213.23738098 -498.35253906]
[227.84718323 -501.85968018]
[242.80290222 -503.29934692]
[257.81341553 -502.64346313]
[272.58657837 -499.90481567]
[286.83480835 -495.13674927]
[300.28073120 -488.43203735]
[312.66262817 -479.92117310]
[323.73950195 -469.76989746]
[333.29574585 -458.17572021]
[341.14532471 -445.36437988]
[347.13543701 -431.58523560]
[351.14947510 -417.10653687]
[353.10934448 -402.21005249]
[352.97689819 -387.18579102]
[350.75466919 -372.32617188]
[346.48593140 -357.92047119]
[340.25378418 -344.24911499]
[332.17953491 -331.57815552]
[322.42034912 -320.15432739]
[311.16619873 -310.19992065]
[298.63613892 -301.90872192]
[285.07406616 -295.44213867]
[270.74398804 -290.92602539]
[255.92485046 -288.44830322]
[240.90510559 -288.05722046]
[225.97708130 -289.76034546]
[222.22079468 -275.23828125]
[218.46449280 -260.71621704]
[222.76809692 -246.45690918]
[211.82148743 -235.03401184]
[213.12628174 -232.55296326]
[213.52691650 -229.40556335]
[212.76467896 -225.93362427]
[210.70921326 -222.56619263]
[207.38514709 -219.77252197]
[202.77113342 -205.49978638]
[198.15711975 -191.22706604]
[193.54312134 -176.95433044]
[188.92910767 -162.68159485]
[200.04936218 -150.95758057]
[203.76110840 -135.13421631]
[198.95910645 -119.50867462]
[186.86346436 -108.37355804]
[170.71138000 -104.83770752]
[166.31037903 -90.49786377]
[161.90937805 -76.15801239]
[157.50837708 -61.81816864]
[153.10739136 -47.47832108]
[156.76998901 -33.04105759]
[145.32423401 -22.11835480]
[140.92323303 -7.77850819]
[148.10684204 5.21885729]
[143.84786987 19.82419586]
[130.16633606 27.27088928]
[125.76534271 41.61073685]
[129.42794800 56.04800034]
[117.98219299 66.97070312]
[128.12365723 75.03295135]
[134.92739868 86.05830383]
[137.58592224 98.73825836]
[135.78373718 111.56796265]
[129.73471069 123.02478027]
[120.15676117 131.74899292]
[108.18659210 136.70523071]
[95.24482727 137.30525208]
[90.41883087 151.50770569]
[85.69869995 165.74569702]
[88.81591797 181.25677490]
[77.53884125 190.98696899]
[72.92483521 205.25970459]
[68.31082153 219.53244019]
[73.47797394 231.35037231]
[69.34111786 243.14317322]
[58.63263702 248.76945496]
[53.80664062 262.97189331]
[66.48436737 271.11810303]
[76.83767700 282.05526733]
[84.26789093 295.14462280]
[88.34688568 309.62316895]
[88.84172821 324.64810181]
[85.72799683 339.34588623]
[79.19094086 352.86309814]
[69.61444855 364.41589355]
[57.55853271 373.33544922]
[43.72657394 379.10684204]
[28.92427063 381.39852905]
[14.01272583 380.08163452]
[9.18672752 394.28408813]
[4.36073017 408.48654175]
[-0.46526757 422.68899536]
[-5.29126501 436.89144897]
[-10.01139927 451.12945557]
[-14.62540913 465.40219116]
[-19.23941803 479.67492676]
[-5.94877529 486.71267700]
[5.91774321 495.95153809]
[15.99952793 507.11077881]
[23.99020576 519.85125732]
[29.64694595 533.78588867]
[32.79785156 548.49108887]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 204]
[29 203]
[30 202]
[32 201]
[33 200]
[34 199]
[35 198]
[36 197]
[48 185]
[49 184]
[51 181]
[52 180]
[53 179]
[55 177]
[57 176]
[58 175]
[64 167]
[66 165]
[67 164]
[70 161]
[71 160]
[73 158]
[74 157]
[75 156]
[76 155]
[77 154]
[83 149]
[84 148]
[85 147]
[86 146]
[87 145]
[88 140]
[90 138]
[91 137]
[92 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
