%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[62.45980453 493.23016357]
[49.51765442 500.88992310]
[35.44195938 506.18572998]
[20.66045380 508.95672607]
[5.62233925 509.11862183]
[-9.21539688 506.66653442]
[-23.40185165 501.67498779]
[-36.50591278 494.29565430]
[-48.12936783 484.75277710]
[-57.91898727 473.33636475]
[-65.57727814 460.39334106]
[-70.87151337 446.31704712]
[-73.64080811 431.53521729]
[-73.80101013 416.49710083]
[-71.34724426 401.65963745]
[-66.35408020 387.47375488]
[-58.97325134 374.37051392]
[-49.42905807 362.74813843]
[-38.01153564 352.95980835]
[-25.06765175 345.30300903]
[-10.99075317 340.01034546]
[3.79137850 337.24273682]
[18.82953072 337.08422852]
[21.27525711 322.28497314]
[23.72098541 307.48568726]
[26.16671181 292.68643188]
[28.61244011 277.88714600]
[31.05816650 263.08789062]
[25.49956894 249.26937866]
[35.38342667 236.91543579]
[26.20623398 248.78047180]
[13.71002674 257.07775879]
[-0.78644121 260.93164062]
[-15.75332260 259.93542480]
[-29.61112785 254.19422913]
[-40.89740753 244.31394958]
[-48.42109680 231.33726501]
[-51.38819885 216.63365173]
[-49.48559189 201.75480652]
[-42.91405869 188.27093506]
[-32.36711502 177.60501099]
[-18.95779800 170.88262939]
[-4.10122967 168.81324768]
[10.63474274 171.61523438]
[23.69499779 178.99288940]
[33.70125198 190.16761780]
[39.59752655 203.96015930]
[40.76155472 218.91511536]
[46.83538818 205.19984436]
[52.90922165 191.48457336]
[58.98305511 177.76931763]
[65.05689240 164.05404663]
[71.13072205 150.33877563]
[77.20455933 136.62351990]
[83.27838898 122.90824890]
[88.83761597 108.97644806]
[86.50777435 95.19010162]
[97.03335571 85.98663330]
[102.07026672 71.85760498]
[107.10718536 57.72857666]
[111.82731628 43.49058533]
[116.22831726 29.15073967]
[120.62931824 14.81089306]
[125.03031158 0.47104552]
[129.43130493 -13.86880207]
[117.07572937 -5.36353064]
[102.08700562 -4.78197432]
[89.10956573 -12.30433464]
[82.16459656 -25.59972763]
[83.40408325 -40.54842758]
[92.44395447 -52.51842117]
[106.48310852 -57.80067444]
[121.17135620 -54.75842285]
[131.95739746 -44.33433914]
[135.49902344 -29.75818634]
[141.77638245 -43.38150406]
[148.05375671 -57.00481796]
[154.33111572 -70.62813568]
[160.50688171 -84.29780579]
[166.58071899 -98.01306915]
[172.65454102 -111.72834015]
[171.16793823 -127.47954559]
[183.39610291 -135.98373413]
[170.23715210 -143.20288086]
[157.73785400 -151.51199341]
[145.98825073 -160.85118103]
[135.07299805 -171.15318298]
[125.07073975 -182.34375000]
[116.05355072 -194.34225464]
[108.08641052 -207.06225586]
[101.22669983 -220.41209412]
[95.52386475 -234.29559326]
[91.01898956 -248.61271667]
[87.74452209 -263.26028442]
[85.72406769 -278.13281250]
[84.97217560 -293.12307739]
[85.49427032 -308.12313843]
[87.28659058 -323.02487183]
[90.33621216 -337.72088623]
[94.62117004 -352.10537720]
[100.11059570 -366.07461548]
[106.76492310 -379.52801514]
[114.53621674 -392.36862183]
[123.36848450 -404.50387573]
[133.19807434 -415.84640503]
[143.95419312 -426.31445312]
[155.55931091 -435.83261108]
[167.92980957 -444.33227539]
[180.97659302 -451.75219727]
[194.60562134 -458.03897095]
[208.71870422 -463.14724731]
[223.21417236 -467.04025269]
[237.98756409 -469.68991089]
[252.93244934 -471.07711792]
[267.94113159 -471.19192505]
[282.90548706 -470.03347778]
[297.71768188 -467.61013794]
[312.27099609 -463.93936157]
[326.46060181 -459.04757690]
[340.18420410 -452.97006226]
[353.34295654 -445.75054932]
[365.84204102 -437.44113159]
[377.59140015 -428.10162354]
[388.50640869 -417.79934692]
[398.50836182 -406.60852051]
[407.52523804 -394.60980225]
[415.49206543 -381.88958740]
[422.35140991 -368.53955078]
[428.05389404 -354.65591431]
[432.55841064 -340.33868408]
[435.83248901 -325.69100952]
[437.85256958 -310.81845093]
[438.60406494 -295.82815552]
[438.08157349 -280.82812500]
[436.28887939 -265.92645264]
[433.23889160 -251.23048401]
[428.95355225 -236.84613037]
[423.46377563 -222.87701416]
[416.80908203 -209.42379761]
[409.03747559 -196.58340454]
[400.20489502 -184.44834900]
[390.37500000 -173.10607910]
[379.61862183 -162.63830566]
[368.01324463 -153.12046814]
[355.64251709 -144.62112427]
[342.59555054 -137.20150757]
[328.96636963 -130.91510010]
[314.85314941 -125.80718994]
[300.35757446 -121.91457367]
[285.58410645 -119.26529694]
[270.63919067 -117.87845612]
[255.63050842 -117.76403809]
[240.66618347 -118.92286682]
[225.85404968 -121.34659576]
[211.30082703 -125.01775360]
[197.11135864 -129.90989685]
[199.03242493 -115.13970184]
[186.36981201 -105.65450287]
[180.29597473 -91.93923950]
[174.22215271 -78.22396851]
[174.38795471 -70.83517456]
[167.95442200 -64.35077667]
[161.67706299 -50.72745895]
[155.39970398 -37.10414124]
[149.12234497 -23.48082733]
[143.77116394 -9.46780396]
[139.37016296 4.87204361]
[134.96916199 19.21189117]
[130.56816101 33.55173874]
[126.16716766 47.89158630]
[127.48725891 51.16109467]
[127.28931427 55.23244476]
[125.21372223 59.38517761]
[121.23621368 62.76549149]
[116.19929504 76.89452362]
[111.16238403 91.02355194]
[113.49222565 104.80989838]
[102.96664429 114.01336670]
[117.43109131 110.04098511]
[129.64456177 118.74909210]
[130.60374451 133.71838379]
[119.60156250 143.91407776]
[104.74842072 141.82026672]
[96.99365997 128.98208618]
[90.91982269 142.69734192]
[84.84599304 156.41261292]
[78.77215576 170.12788391]
[72.69832611 183.84315491]
[66.62448883 197.55841064]
[60.55065536 211.27368164]
[54.47682190 224.98895264]
[50.18269730 239.36116028]
[55.56636047 254.23822021]
[45.85743713 265.53363037]
[43.41170883 280.33288574]
[40.96598434 295.13217163]
[38.52025604 309.93142700]
[36.07452774 324.73071289]
[33.62879944 339.52996826]
[47.81638718 344.51831055]
[60.92212296 351.89468384]
[72.54773712 361.43490601]
[82.33995056 372.84909058]
[90.00117493 385.79037476]
[95.29860687 399.86547852]
[98.07125854 414.64666748]
[98.23486328 429.68475342]
[95.78446198 444.52279663]
[90.79451752 458.70980835]
[83.41666412 471.81469727]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 199]
[24 198]
[25 197]
[26 196]
[27 195]
[28 194]
[30 192]
[48 191]
[49 190]
[50 189]
[51 188]
[52 187]
[53 186]
[54 185]
[55 184]
[56 178]
[58 176]
[59 175]
[60 174]
[61 170]
[62 169]
[63 168]
[64 167]
[65 166]
[75 165]
[76 164]
[77 163]
[78 162]
[79 160]
[80 159]
[81 158]
[83 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
