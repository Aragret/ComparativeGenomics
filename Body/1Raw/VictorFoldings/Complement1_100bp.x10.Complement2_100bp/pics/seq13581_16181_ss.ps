%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGUxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[58.41569138 388.14108276]
[56.26647568 403.00369263]
[52.40631485 417.51629639]
[46.88740921 431.48263550]
[39.78439713 444.71380615]
[31.19333458 457.03085327]
[21.23041344 468.26727295]
[10.03036404 478.27102661]
[-2.25534153 486.90689087]
[-15.46055508 494.05804443]
[-29.40669060 499.62774658]
[-43.90514374 503.54074097]
[-58.75983429 505.74404907]
[-73.76987457 506.20791626]
[-88.73227692 504.92605591]
[-103.44467926 501.91577148]
[-117.70811462 497.21780396]
[-131.32969666 490.89569092]
[-144.12519836 483.03494263]
[-155.92158508 473.74182129]
[-166.55931091 463.14205933]
[-175.89453125 451.37896729]
[-183.80097961 438.61163330]
[-190.17173767 425.01275635]
[-194.92065430 410.76620483]
[-197.98348999 396.06463623]
[-199.31884766 381.10693359]
[-198.90864563 366.09533691]
[-196.75843811 351.23284912]
[-192.89730835 336.72048950]
[-187.37747192 322.75454712]
[-180.27357483 309.52386475]
[-171.68168640 297.20736694]
[-161.71801758 285.97161865]
[-150.51730347 275.96859741]
[-138.23101807 267.33355713]
[-125.02532959 260.18331909]
[-111.07881927 254.61451721]
[-96.58010864 250.70249939]
[-81.72526550 248.50016785]
[-66.71519470 248.03730774]
[-51.75288391 249.32019043]
[-37.04067993 252.33143616]
[-22.77755547 257.03036499]
[-9.15639687 263.35336304]
[-1.30464137 250.57252502]
[6.54711390 237.79168701]
[14.39886951 225.01084900]
[22.25062561 212.22999573]
[30.10238075 199.44915771]
[37.95413589 186.66831970]
[45.80589294 173.88746643]
[53.65764618 161.10662842]
[61.50940323 148.32579041]
[61.57888412 133.43135071]
[75.39520264 125.72291565]
[83.24695587 112.94207001]
[79.04639435 96.98202515]
[87.58027649 82.85614014]
[103.66217041 79.14933777]
[104.05782318 63.33307648]
[117.20990753 56.34223175]
[124.87050629 43.44590378]
[132.53109741 30.54957581]
[140.19169617 17.65324974]
[127.71834564 9.31523132]
[115.70642853 0.32516992]
[104.19001770 -9.29145145]
[93.20174408 -19.50737190]
[82.77275848 -30.29363441]
[72.93262482 -41.61966324]
[63.70923233 -53.45335770]
[55.12873077 -65.76116943]
[47.21543884 -78.50820923]
[39.99179077 -91.65834045]
[33.47826004 -105.17430115]
[27.69331169 -119.01776886]
[22.65334320 -133.14950562]
[18.37264061 -147.52944946]
[14.86333752 -162.11683655]
[12.13538361 -176.87033081]
[10.19651031 -191.74809265]
[9.05221367 -206.70796204]
[8.70573711 -221.70753479]
[9.15806389 -236.70428467]
[10.40791035 -251.65571594]
[12.45173454 -266.51943970]
[15.28374290 -281.25329590]
[18.89590645 -295.81555176]
[23.27798843 -310.16494751]
[28.41756630 -324.26074219]
[34.30007172 -338.06304932]
[40.90882874 -351.53268433]
[48.22510147 -364.63153076]
[56.22815704 -377.32238770]
[64.89530945 -389.56933594]
[74.20198822 -401.33764648]
[84.12181091 -412.59396362]
[94.62665558 -423.30633545]
[105.68675232 -433.44445801]
[117.27075195 -442.97955322]
[129.34580994 -451.88464355]
[141.87770081 -460.13439941]
[154.83090210 -467.70553589]
[168.16870117 -474.57650757]
[181.85328674 -480.72787476]
[195.84585571 -486.14221191]
[210.10676575 -490.80416870]
[224.59558105 -494.70050049]
[239.27122498 -497.82019043]
[254.09211731 -500.15438843]
[269.01623535 -501.69647217]
[284.00128174 -502.44207764]
[299.00476074 -502.38906860]
[313.98413086 -501.53762817]
[328.89700317 -499.89016724]
[343.70101929 -497.45135498]
[358.35427856 -494.22805786]
[372.81521606 -490.22949219]
[387.04281616 -485.46691895]
[400.99679565 -479.95388794]
[414.63760376 -473.70599365]
[427.92651367 -466.74096680]
[440.82592773 -459.07855225]
[453.29922485 -450.74044800]
[465.31106567 -441.75030518]
[476.82742310 -432.13360596]
[487.81564331 -421.91763306]
[498.24456787 -411.13128662]
[508.08462524 -399.80520630]
[517.30792236 -387.97146606]
[525.88836670 -375.66357422]
[533.80157471 -362.91650391]
[541.02514648 -349.76632690]
[547.53857422 -336.25030518]
[553.32342529 -322.40679932]
[558.36334229 -308.27505493]
[562.64392090 -293.89508057]
[566.15313721 -279.30764771]
[568.88098145 -264.55416870]
[570.81976318 -249.67637634]
[571.96398926 -234.71649170]
[572.31036377 -219.71691895]
[571.85797119 -204.72016907]
[570.60797119 -189.76875305]
[568.56408691 -174.90505981]
[565.73199463 -160.17120361]
[562.11975098 -145.60896301]
[557.73754883 -131.25961304]
[552.59790039 -117.16383362]
[546.71527100 -103.36157990]
[540.10644531 -89.89196777]
[532.79010010 -76.79319000]
[524.78692627 -64.10236359]
[516.11975098 -51.85547256]
[506.81298828 -40.08722687]
[496.89309692 -28.83098793]
[486.38815308 -18.11866188]
[475.32800293 -7.98061466]
[463.74395752 1.55441689]
[451.66882324 10.45940399]
[439.13690186 18.70910645]
[426.18362427 26.28013611]
[412.84579468 33.15103531]
[399.16116333 39.30232239]
[385.16857910 44.71656799]
[370.90762329 49.37842178]
[356.41879272 53.27466583]
[341.74310303 56.39426041]
[326.92221069 58.72835922]
[311.99807739 60.27035141]
[297.01306152 61.01585770]
[282.00958252 60.96277237]
[267.03018188 60.11124039]
[252.11734009 58.46368027]
[237.31332397 56.02475739]
[222.66009521 52.80139160]
[208.19920349 48.80271149]
[193.97160339 44.04005814]
[180.01765442 38.52693176]
[166.37690735 32.27895737]
[153.08802795 25.31384659]
[145.42742920 38.21017456]
[137.76683044 51.10650253]
[130.10623169 64.00283051]
[130.25851440 78.89665222]
[116.55849457 86.80993652]
[121.12567139 98.63340759]
[118.11988068 110.94676208]
[108.61860657 119.33601379]
[96.02780151 120.79383087]
[88.17604828 133.57467651]
[87.54495239 149.38328552]
[74.29024506 156.17753601]
[66.43849182 168.95838928]
[58.58673477 181.73922729]
[50.73497772 194.52006531]
[42.88322449 207.30091858]
[35.03146744 220.08175659]
[27.17971230 232.86259460]
[19.32795715 245.64344788]
[11.47620106 258.42428589]
[3.62444568 271.20513916]
[15.42144966 280.49743652]
[26.05988884 291.09649658]
[35.39588928 302.85897827]
[43.30318832 315.62576294]
[49.67485809 329.22424316]
[54.42472076 343.47048950]
[57.48854446 358.17181396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 203]
[46 202]
[47 201]
[48 200]
[49 199]
[50 198]
[51 197]
[52 196]
[53 195]
[54 194]
[56 192]
[57 191]
[60 187]
[62 185]
[63 184]
[64 183]
[65 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
