%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[-19.45207405 333.33407593]
[-18.24372482 348.29650879]
[-18.44180298 363.30633545]
[-20.04457092 378.23168945]
[-23.03794289 392.94134521]
[-27.39561081 407.30606079]
[-33.07928085 421.19958496]
[-40.03899765 434.49984741]
[-48.21360779 447.08993530]
[-57.53126144 458.85922241]
[-67.91007996 469.70422363]
[-79.25884247 479.52972412]
[-91.47782898 488.24929810]
[-104.45964050 495.78634644]
[-118.09019470 502.07461548]
[-132.24971008 507.05883789]
[-146.81373596 510.69525146]
[-161.65429688 512.95190430]
[-176.64096069 513.80889893]
[-191.64201355 513.25872803]
[-206.52563477 511.30624390]
[-221.16102600 507.96859741]
[-235.41957092 503.27511597]
[-249.17593384 497.26708984]
[-262.30926514 489.99725342]
[-274.70410156 481.52951050]
[-286.25152588 471.93832397]
[-296.85009766 461.30792236]
[-306.40661621 449.73178101]
[-314.83712769 437.31161499]
[-322.06753540 424.15655518]
[-328.03430176 410.38220215]
[-332.68499756 396.10968018]
[-335.97872925 381.46432495]
[-337.88656616 366.57492065]
[-338.39172363 351.57226562]
[-337.48980713 336.58825684]
[-335.18869019 321.75451660]
[-331.50860596 307.20147705]
[-326.48193359 293.05697632]
[-320.15280151 279.44534302]
[-312.57687378 266.48617554]
[-303.82067871 254.29341125]
[-293.96121216 242.97415161]
[-283.08511353 232.62791443]
[-271.28793335 223.34559631]
[-258.67340088 215.20878601]
[-245.35234070 208.28897095]
[-231.44181824 202.64700317]
[-217.06408691 198.33242798]
[-202.34552002 195.38319397]
[-187.41543579 193.82519531]
[-172.40507507 193.67211914]
[-157.44633484 194.92533875]
[-142.67068481 197.57382202]
[-128.20796204 201.59429932]
[-114.18527985 206.95144653]
[-100.72587585 213.59815979]
[-87.94802094 221.47602844]
[-75.96402740 230.51585388]
[-64.87919617 240.63815308]
[-53.77196503 230.55702209]
[-42.66473007 220.47587585]
[-38.44046402 206.19285583]
[-23.02162743 202.64741516]
[-11.91439438 192.56628418]
[-0.80716074 182.48513794]
[10.30007267 172.40400696]
[21.40730667 162.32286072]
[32.51454163 152.24172974]
[43.62177277 142.16058350]
[48.07010651 125.18474579]
[66.09835815 121.43460083]
[77.05426788 111.18920898]
[88.01017761 100.94381714]
[98.81233978 90.53644562]
[109.45834351 79.96939850]
[120.10435486 69.40235138]
[130.75036621 58.83530426]
[135.09411621 43.62207413]
[149.57778931 40.14751816]
[153.99624634 22.27131081]
[171.12586975 18.45779800]
[181.61337280 7.73341894]
[192.10086060 -2.99096060]
[182.09703064 -14.17543316]
[172.86256409 -26.00311470]
[164.43873596 -38.42118073]
[156.86315918 -51.37416458]
[150.16966248 -64.80422211]
[144.38813782 -78.65135956]
[139.54443359 -92.85374451]
[135.66015625 -107.34793854]
[132.75265503 -122.06920624]
[130.83493042 -136.95179749]
[129.91552734 -151.92924500]
[129.99858093 -166.93466187]
[131.08369446 -181.90101624]
[133.16603088 -196.76147461]
[136.23629761 -211.44966125]
[140.28077698 -225.89996338]
[145.28138733 -240.04786682]
[151.21582031 -253.83016968]
[158.05755615 -267.18530273]
[165.77604675 -280.05364990]
[174.33682251 -292.37771606]
[183.70162964 -304.10244751]
[193.82864380 -315.17550659]
[204.67266846 -325.54742432]
[216.18522644 -335.17187500]
[228.31492615 -344.00588989]
[241.00759888 -352.00997925]
[254.20652771 -359.14843750]
[267.85278320 -365.38934326]
[281.88543701 -370.70483398]
[296.24176025 -375.07116699]
[310.85766602 -378.46887207]
[325.66787720 -380.88272095]
[340.60626221 -382.30200195]
[355.60607910 -382.72030640]
[370.60031128 -382.13580322]
[385.52206421 -380.55108643]
[400.30459595 -377.97326660]
[414.88198853 -374.41381836]
[429.18905640 -369.88864136]
[443.16189575 -364.41796875]
[456.73815918 -358.02624512]
[469.85720825 -350.74197388]
[482.46038818 -342.59771729]
[494.49145508 -333.62985229]
[505.89666748 -323.87841797]
[516.62506104 -313.38696289]
[526.62878418 -302.20236206]
[535.86309814 -290.37457275]
[544.28674316 -277.95642090]
[551.86218262 -265.00332642]
[558.55548096 -251.57318115]
[564.33685303 -237.72596741]
[569.18035889 -223.52352905]
[573.06445312 -209.02928162]
[575.97180176 -194.30798340]
[577.88934326 -179.42536926]
[578.80853271 -164.44790649]
[578.72528076 -149.44248962]
[577.64001465 -134.47615051]
[575.55749512 -119.61572266]
[572.48699951 -104.92757416]
[568.44238281 -90.47731781]
[563.44158936 -76.32947540]
[557.50695801 -62.54725266]
[550.66503906 -49.19219589]
[542.94641113 -36.32395172]
[534.38549805 -23.99999428]
[525.02050781 -12.27536869]
[514.89337158 -1.20243776]
[504.04922485 9.16934299]
[492.53652954 18.79364967]
[480.40670776 27.62750053]
[467.71395874 35.63143539]
[454.51492310 42.76971054]
[440.86859131 49.01044464]
[426.83590698 54.32576752]
[412.47952271 58.69192886]
[397.86355591 62.08943939]
[383.05331421 64.50312042]
[368.11489868 65.92219543]
[353.11511230 66.34031677]
[338.12084961 65.75562286]
[323.19915771 64.17073059]
[308.41662598 61.59270859]
[293.83929443 58.03308105]
[279.53228760 53.50773621]
[265.55947876 48.03689194]
[251.98330688 41.64498138]
[238.86437988 34.36055374]
[226.26129150 26.21614075]
[214.23033142 17.24811745]
[202.82524109 7.49654055]
[192.33773804 18.22092056]
[181.85025024 28.94529915]
[181.67173767 41.04053497]
[173.02218628 50.06102371]
[160.14483643 50.79352570]
[156.56256104 65.25093079]
[141.31741333 69.48131561]
[130.67140198 80.04836273]
[120.02539062 90.61540985]
[109.37938690 101.18245697]
[108.17288208 106.28718567]
[104.19216919 110.35256195]
[98.25556946 111.89972687]
[87.29965973 122.14511871]
[76.34375000 132.39051819]
[75.13253784 145.23168945]
[65.79640961 153.53955078]
[53.70291138 153.26782227]
[42.59568024 163.34896851]
[31.48844528 173.43009949]
[20.38121223 183.51124573]
[9.27397823 193.59237671]
[-1.83325565 203.67352295]
[-12.94048977 213.75465393]
[-17.95921898 228.75875854]
[-32.58359146 231.58311462]
[-43.69082642 241.66424561]
[-54.79805756 251.74539185]
[-45.79422379 263.75643921]
[-37.95469666 276.55786133]
[-31.34837723 290.03713989]
[-26.03331947 304.07583618]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 206]
[62 205]
[63 204]
[65 202]
[66 201]
[67 200]
[68 199]
[69 198]
[70 197]
[71 196]
[73 193]
[74 192]
[75 191]
[76 188]
[77 187]
[78 186]
[79 185]
[81 183]
[83 180]
[84 179]
[85 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
