%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[18.50500298 369.22827148]
[20.23799324 384.14581299]
[20.19443512 399.16363525]
[18.37493896 414.07086182]
[14.80504894 428.65826416]
[9.53488064 442.72103882]
[2.63841748 456.06176758]
[-5.78752375 468.49319458]
[-15.62465572 479.84075928]
[-26.73488235 489.94515991]
[-38.96223068 498.66458130]
[-52.13504791 505.87661743]
[-66.06841278 511.47998047]
[-80.56671906 515.39605713]
[-95.42642975 517.56982422]
[-110.43894196 517.97076416]
[-125.39350891 516.59332275]
[-140.08018494 513.45672607]
[-154.29278564 508.60513306]
[-167.83180237 502.10656738]
[-180.50715637 494.05224609]
[-192.14091492 484.55529785]
[-202.56974792 473.74902344]
[-211.64726257 461.78512573]
[-219.24601746 448.83154297]
[-225.25935364 435.07012939]
[-229.60281372 420.69409180]
[-232.21546936 405.90524292]
[-233.06060791 390.91116333]
[-232.12638855 375.92239380]
[-229.42590332 361.14929199]
[-224.99708557 346.79931641]
[-218.90209961 333.07388306]
[-211.22651672 320.16567993]
[-202.07806396 308.25592041]
[-191.58520508 297.51181030]
[-179.89521790 288.08416748]
[-167.17222595 280.10531616]
[-153.59483337 273.68731689]
[-139.35365295 268.92022705]
[-124.64859772 265.87100220]
[-109.68611908 264.58242798]
[-94.67624664 265.07260132]
[-79.82971954 267.33462524]
[-65.35493469 271.33676147]
[-51.45511627 277.02282715]
[-38.32538223 284.31298828]
[-29.54477882 272.15151978]
[-20.76417542 259.99008179]
[-11.98357201 247.82861328]
[-3.20296931 235.66716003]
[-2.36391973 218.13824463]
[14.49802876 210.73849487]
[23.09659195 198.44766235]
[31.69515610 186.15681458]
[23.60726166 172.37507629]
[22.33456612 156.38777161]
[28.18245697 141.39157104]
[40.02745438 130.40721130]
[55.53267288 125.67097473]
[71.60876465 128.17961121]
[80.02337646 115.76211548]
[88.43799591 103.34461975]
[75.06559753 110.14013672]
[60.18397522 112.02087402]
[45.54139709 108.76589203]
[32.85806274 100.75758362]
[23.62399864 88.93675232]
[18.92401314 74.69209290]
[19.31025505 59.69707108]
[24.73735046 45.71327209]
[34.56772995 34.38350296]
[47.64652634 27.03877258]
[62.43725967 24.54193306]
[77.20233154 27.18631363]
[90.20714569 34.66125107]
[99.92391968 46.08860016]
[105.21113586 60.12588501]
[105.44765472 75.12401581]
[100.60493469 89.32241058]
[111.71216583 79.24127197]
[122.81940460 69.16013336]
[133.92663574 59.07899857]
[132.38633728 43.75145340]
[140.07682800 30.60954666]
[153.86798096 24.58726120]
[168.38703918 27.80207062]
[179.49427795 17.72093201]
[190.60151672 7.63979387]
[201.70874023 -2.44134498]
[211.53932190 -13.77093792]
[219.95394897 -26.18843269]
[228.36856079 -38.60593033]
[236.78317261 -51.02342606]
[245.19779968 -63.44092178]
[253.61241150 -75.85841370]
[242.13142395 -85.53334808]
[231.72463989 -96.35539246]
[222.50608826 -108.20597076]
[214.57679749 -120.95523834]
[208.02362061 -134.46351624]
[202.91835022 -148.58279419]
[199.31695557 -163.15838623]
[197.25888062 -178.03056335]
[196.76666260 -193.03642273]
[197.84570312 -208.01150513]
[200.48417664 -222.79176331]
[204.65318298 -237.21525574]
[210.30703735 -251.12394714]
[217.38378906 -264.36544800]
[225.80592346 -276.79467773]
[235.48112488 -288.27542114]
[246.30342102 -298.68194580]
[258.15423584 -307.90020752]
[270.90368652 -315.82919312]
[284.41213989 -322.38204956]
[298.53152466 -327.48696899]
[313.10720825 -331.08801270]
[327.97943115 -333.14572144]
[342.98529053 -333.63757324]
[357.96035767 -332.55816650]
[372.74057007 -329.91934204]
[387.16394043 -325.74996948]
[401.07250977 -320.09579468]
[414.31384277 -313.01870728]
[426.74285889 -304.59628296]
[438.22338867 -294.92080688]
[448.62963867 -284.09823608]
[457.84759521 -272.24722290]
[465.77627563 -259.49755859]
[472.32879639 -245.98896790]
[477.43338013 -231.86944580]
[481.03405762 -217.29368591]
[483.09143066 -202.42138672]
[483.58291626 -187.41552734]
[482.50314331 -172.44049072]
[479.86395264 -157.66035461]
[475.69424438 -143.23706055]
[470.03970337 -129.32864380]
[462.96231079 -116.08749390]
[454.53958130 -103.65868378]
[444.86380005 -92.17839050]
[434.04101562 -81.77239227]
[422.18975830 -72.55471802]
[409.43991089 -64.62634277]
[395.93115234 -58.07415009]
[381.81149292 -52.96992111]
[367.23565674 -49.36958694]
[352.36331177 -47.31258774]
[337.35745239 -46.82146072]
[322.38241577 -47.90159607]
[307.60235596 -50.54114914]
[293.17916870 -54.71120453]
[279.27090454 -60.36607361]
[266.02990723 -67.44379425]
[257.61529541 -55.02630234]
[249.20066833 -42.60880661]
[240.78605652 -30.19131088]
[232.37144470 -17.77381516]
[223.95681763 -5.35631943]
[237.32922363 -12.15183163]
[252.21084595 -14.03257084]
[266.85342407 -10.77758884]
[279.53674316 -2.76927757]
[288.77081299 9.05155468]
[293.47079468 23.29620743]
[293.08456421 38.29123306]
[287.65747070 52.27503204]
[277.82708740 63.60480118]
[264.74829102 70.94953156]
[249.95756531 73.44636536]
[235.19248962 70.80198669]
[222.18766785 63.32705307]
[212.47090149 51.89970398]
[207.18368530 37.86241913]
[206.94715881 22.86428452]
[211.78988647 8.66588879]
[200.68264771 18.74702835]
[189.57540894 28.82816696]
[178.46818542 38.90930557]
[180.26499939 53.67106247]
[172.93827820 66.81576538]
[159.11476135 73.20040131]
[144.00778198 70.18623352]
[132.90054321 80.26737213]
[121.79330444 90.34851074]
[110.68607330 100.42964935]
[100.85549164 111.75923920]
[92.44087219 124.17673492]
[84.02625275 136.59423828]
[91.58893585 148.53376770]
[94.02240753 162.41189575]
[90.99177551 176.12760925]
[82.98685455 187.61724854]
[71.24330902 195.16499329]
[57.55201340 197.65905762]
[43.98599625 194.75538635]
[35.38743210 207.04621887]
[26.78886604 219.33706665]
[28.26123047 232.15092468]
[20.84643555 242.21096802]
[8.95848656 244.44776917]
[0.17788336 256.60922241]
[-8.60272026 268.77066040]
[-17.38332367 280.93212891]
[-26.16392708 293.09359741]
[-15.11250114 303.26226807]
[-5.34136009 314.66671753]
[3.01232719 327.14678955]
[9.83128643 340.52731323]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 206]
[48 205]
[49 204]
[50 203]
[51 202]
[53 199]
[54 198]
[55 197]
[61 190]
[62 189]
[63 188]
[80 187]
[81 186]
[82 185]
[83 184]
[87 180]
[88 179]
[89 178]
[90 177]
[91 160]
[92 159]
[93 158]
[94 157]
[95 156]
[96 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
