%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[76.79844666 616.03643799]
[62.56741333 620.90649414]
[47.69546509 623.15704346]
[32.66067123 622.71569824]
[17.94634247 619.59667969]
[4.02547836 613.90026855]
[-8.65441990 605.80950928]
[-19.68574715 595.58459473]
[-28.71389008 583.55407715]
[-35.44863129 570.10479736]
[-39.67348099 555.66906738]
[-41.25262451 540.71093750]
[-40.13529587 525.71124268]
[-36.35741806 511.15213013]
[-30.04043007 497.50164795]
[-21.38739967 485.19860840]
[-10.67648602 474.63848877]
[1.74800110 466.16076660]
[15.48666477 460.03793335]
[30.09786415 456.46685791]
[45.11191177 455.56231689]
[46.89437485 440.66860962]
[48.67684174 425.77487183]
[50.45930862 410.88116455]
[44.28922653 397.32464600]
[53.61159134 384.54168701]
[55.39405823 369.64794922]
[57.17652512 354.75424194]
[58.95898819 339.86053467]
[52.78890610 326.30401611]
[62.11127472 313.52105713]
[54.34563446 297.78378296]
[65.50474548 283.13604736]
[59.13351440 269.67288208]
[68.26452637 256.75256348]
[69.82505035 241.83395386]
[71.38557434 226.91534424]
[72.94609833 211.99673462]
[74.28433228 197.05654907]
[75.39997864 182.09809875]
[76.51562500 167.13964844]
[67.47146606 179.10639954]
[54.17057419 186.04083252]
[39.18114853 186.60400391]
[25.39741516 180.68719482]
[15.48079300 169.43283081]
[11.34602928 155.01396179]
[13.79148006 140.21464539]
[22.34496689 127.89240265]
[35.35494995 120.42645264]
[50.30939865 119.25835419]
[64.32084656 124.61366272]
[74.68390656 135.45834351]
[79.39775085 149.69972229]
[83.15405273 135.17765808]
[86.91034698 120.65560913]
[90.66664886 106.13354492]
[94.31473541 91.58392334]
[90.05249023 76.34765625]
[100.57463837 65.80566406]
[104.11431122 51.22928619]
[107.65398407 36.65290833]
[111.19365692 22.07653427]
[114.73332214 7.50015926]
[118.27299500 -7.07621622]
[121.04860687 -21.81717873]
[123.05261993 -36.68270874]
[125.05663300 -51.54823685]
[127.06065369 -66.41376495]
[128.84310913 -81.30747986]
[130.40364075 -96.22608185]
[124.14402008 -110.75632477]
[133.16342163 -122.60958099]
[134.72393799 -137.52818298]
[136.28446960 -152.44679260]
[133.94555664 -158.63072205]
[134.93258667 -164.22740173]
[138.12001038 -167.78399658]
[140.12402344 -182.64952087]
[142.12803650 -197.51506042]
[144.13204956 -212.38058472]
[146.13606262 -227.24610901]
[146.58267212 -242.23945618]
[142.82365417 -250.56459045]
[145.56346130 -257.42864990]
[144.67063904 -272.40203857]
[143.77781677 -287.37545776]
[142.88500977 -302.34884644]
[141.99218750 -317.32226562]
[141.09938049 -332.29565430]
[140.20655823 -347.26907349]
[139.31375122 -362.24249268]
[138.42092896 -377.21588135]
[137.52810669 -392.18930054]
[136.63529968 -407.16268921]
[122.10070038 -411.46633911]
[109.91641998 -420.48403931]
[101.55377960 -433.12692261]
[98.02259827 -447.86822510]
[99.74928284 -462.92791748]
[106.52532959 -476.48745728]
[117.53250122 -486.90945435]
[131.44161987 -492.93542480]
[146.57310486 -493.83764648]
[161.09974670 -489.50723267]
[173.26737976 -480.46707153]
[181.60671997 -467.80883789]
[185.11073303 -453.06103516]
[183.35629272 -438.00454712]
[176.55526733 -424.45751953]
[165.52890015 -414.05581665]
[151.60870361 -408.05551147]
[152.50151062 -393.08212280]
[153.39433289 -378.10870361]
[154.28715515 -363.13528442]
[155.17996216 -348.16189575]
[156.07278442 -333.18847656]
[156.96559143 -318.21508789]
[157.85841370 -303.24166870]
[158.75123596 -288.26828003]
[159.64404297 -273.29486084]
[160.53686523 -258.32144165]
[161.54112244 -243.35511780]
[168.17834473 -256.80676270]
[179.40727234 -266.75219727]
[193.56214905 -271.71600342]
[208.54318237 -270.96191406]
[222.12802124 -264.60171509]
[232.30143738 -253.57894897]
[237.55429077 -239.52876282]
[237.10731506 -224.53541565]
[231.02682495 -210.82310486]
[220.21484375 -200.42593384]
[206.27525330 -194.88629150]
[191.27589417 -195.02593994]
[177.44186401 -200.82415771]
[166.82533264 -211.42082214]
[161.00158691 -225.24209595]
[158.99757385 -210.37657166]
[156.99356079 -195.51104736]
[154.98954773 -180.64550781]
[152.98553467 -165.77998352]
[151.20306396 -150.88627625]
[149.64254761 -135.96766663]
[148.08201599 -121.04905701]
[154.45326233 -107.58589935]
[145.32225037 -94.66556549]
[143.76171875 -79.74695587]
[146.01985168 -75.53864288]
[145.65830994 -69.86711121]
[141.92617798 -64.40975189]
[139.92216492 -49.54421997]
[137.91815186 -34.67869186]
[135.91413879 -19.81316566]
[147.78927612 -28.97727585]
[162.78135681 -28.48987389]
[174.03619385 -18.57379341]
[176.40823364 -3.76253200]
[168.81300354 9.17240047]
[154.72294617 14.31732655]
[140.57984924 9.32005692]
[132.84938049 -3.53654361]
[129.30970764 11.03983212]
[125.77002716 25.61620712]
[122.23035431 40.19258118]
[118.69068146 54.76895905]
[115.15100861 69.34533691]
[119.66644287 83.53900146]
[108.89111328 95.12359619]
[110.20043182 103.07710266]
[105.18871307 109.88984680]
[101.43241119 124.41190338]
[97.67610931 138.93395996]
[93.91980743 153.45602417]
[91.47408295 168.25529480]
[90.35842896 183.21374512]
[89.24278259 198.17221069]
[91.76477814 204.28375244]
[90.94481659 209.90733337]
[87.86470032 213.55726624]
[86.30417633 228.47586060]
[84.74365234 243.39447021]
[83.18312836 258.31307983]
[89.44274902 272.84332275]
[80.42335510 284.69656372]
[87.92426300 295.18939209]
[86.31736755 307.58300781]
[77.00498962 315.30349731]
[83.04757690 329.92532349]
[73.85270691 341.64300537]
[72.07024384 356.53671265]
[70.28777313 371.43041992]
[68.50531006 386.32415771]
[74.54789734 400.94595337]
[65.35302734 412.66363525]
[63.57056046 427.55734253]
[61.78809357 442.45104980]
[60.00562668 457.34478760]
[74.38219452 461.76678467]
[87.73805237 468.68493652]
[99.64386749 477.87686157]
[109.71690369 489.04705811]
[117.63336945 501.83648682]
[123.13877869 515.83398438]
[126.05614471 530.58959961]
[126.29170227 545.62902832]
[123.83786774 560.46881104]
[118.77352905 574.63189697]
[111.26148224 587.66296387]
[101.54319763 599.14312744]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 198]
[22 197]
[23 196]
[24 195]
[26 193]
[27 192]
[28 191]
[29 190]
[31 188]
[33 185]
[35 183]
[36 182]
[37 181]
[38 180]
[39 177]
[40 176]
[41 175]
[54 174]
[55 173]
[56 172]
[57 171]
[58 169]
[60 167]
[61 166]
[62 165]
[63 164]
[64 163]
[65 162]
[66 154]
[67 153]
[68 152]
[69 151]
[70 148]
[71 147]
[73 145]
[74 144]
[75 143]
[78 142]
[79 141]
[80 140]
[81 139]
[82 138]
[83 123]
[85 122]
[86 121]
[87 120]
[88 119]
[89 118]
[90 117]
[91 116]
[92 115]
[93 114]
[94 113]
[95 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
