%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[54.69538498 728.83026123]
[39.70071411 728.16003418]
[24.82151604 726.18548584]
[10.17103386 722.92163086]
[-4.13923168 718.39331055]
[-18.00036812 712.63494873]
[-31.30688286 705.69049072]
[-43.95750427 697.61267090]
[-55.85594940 688.46301270]
[-66.91166687 678.31109619]
[-77.04050446 667.23431396]
[-86.16539001 655.31683350]
[-94.21686554 642.64941406]
[-101.13365173 629.32849121]
[-106.86310577 615.45538330]
[-111.36163330 601.13574219]
[-114.59499359 586.47851562]
[-116.53857422 571.59521484]
[-117.17758179 556.59918213]
[-116.50715637 541.60455322]
[-114.53239441 526.72534180]
[-111.26833344 512.07495117]
[-106.73981476 497.76473999]
[-100.98130035 483.90368652]
[-94.03662109 470.59725952]
[-85.95862579 457.94674683]
[-76.80879211 446.04843140]
[-66.65676880 434.99285889]
[-55.57980347 424.86416626]
[-43.66221619 415.73947144]
[-30.99469757 407.68817139]
[-17.67366028 400.77154541]
[-3.80048990 395.04229736]
[10.51923180 390.54397583]
[25.17651939 387.31082153]
[40.05982208 385.36746216]
[55.05586624 384.72863770]
[55.72565079 369.74362183]
[56.39543533 354.75857544]
[57.06521988 339.77352905]
[54.22352600 332.95101929]
[57.85817719 324.57086182]
[58.75099182 309.59747314]
[45.90402603 303.94992065]
[35.73480225 294.23571777]
[29.47893333 281.60705566]
[27.90615463 267.57177734]
[31.22565079 253.81359863]
[39.05850220 241.98991394]
[50.48081970 233.53225708]
[64.13267517 229.47296143]
[65.24832916 214.51451111]
[66.36397552 199.55606079]
[67.47962189 184.59759521]
[68.59526825 169.63914490]
[69.71092224 154.68069458]
[62.09068298 167.60090637]
[51.73057556 178.44841003]
[39.17406845 186.65414429]
[25.07985115 191.78767395]
[10.18728065 193.57968140]
[-4.72241116 191.93618774]
[-18.86709213 186.94338989]
[-31.50475693 178.86320496]
[-41.97246552 168.11950684]
[-49.72109604 155.27587891]
[-54.34417343 141.00607300]
[-55.59918213 126.05867004]
[-53.42028046 111.21776581]
[-47.92177963 97.26189423]
[-39.39211273 84.92314148]
[-28.27873039 74.84877777]
[-15.16461849 67.56729126]
[-0.73771727 63.46064758]
[14.24516678 62.74427414]
[28.99806023 65.45574951]
[42.74705887 71.45283508]
[54.77091599 80.42094421]
[64.43888092 91.88961029]
[71.24379730 105.25722504]
[74.82868958 119.82254791]
[75.00533295 134.82315063]
[81.48483276 121.29480743]
[87.96432495 107.76646423]
[87.08138275 93.81253815]
[98.50733185 85.75404358]
[102.15541840 71.20442200]
[102.82520294 56.21938324]
[103.49498749 41.23434448]
[93.10842133 29.62585640]
[94.00114441 14.43843651]
[105.13207245 4.60797215]
[105.80185699 -10.37706661]
[106.47164154 -25.36210632]
[107.14142609 -40.34714508]
[104.39833069 -49.05996323]
[107.93438721 -55.54981232]
[108.82720184 -70.52321625]
[109.72001648 -85.49662018]
[95.79981232 -91.49693298]
[84.77345276 -101.89862061]
[77.97242737 -115.44564819]
[76.21798706 -130.50213623]
[79.72200012 -145.24993896]
[88.06133270 -157.90818787]
[100.22896576 -166.94834900]
[114.75560760 -171.27876282]
[129.88708496 -170.37652588]
[143.79621887 -164.35057068]
[154.80339050 -153.92857361]
[161.57943726 -140.36904907]
[163.30612183 -125.30934906]
[159.77493286 -110.56802368]
[151.41229248 -97.92516327]
[139.22801208 -88.90744781]
[124.69342041 -84.60380554]
[123.80060577 -69.63040161]
[122.90779114 -54.65699768]
[122.12646484 -39.67736053]
[121.45668030 -24.69231987]
[120.78689575 -9.70728111]
[120.11711121 5.27775717]
[130.32662964 16.06207466]
[129.86083984 31.26857567]
[118.48002625 41.90412903]
[117.81024170 56.88916779]
[117.14045715 71.87420654]
[124.36219788 58.72710037]
[134.20785522 47.41059875]
[146.22949219 38.43953323]
[159.88023376 32.22201920]
[174.53903198 29.04091644]
[189.53903198 29.04094315]
[204.19783020 32.22209930]
[217.84854126 38.43965912]
[229.87014771 47.41077042]
[239.71575928 58.72730637]
[246.93745422 71.87443542]
[251.20671082 86.25405884]
[252.32928467 101.21199799]
[250.25410461 116.06775665]
[245.07560730 130.14550781]
[237.02935791 142.80480957]
[226.48139954 153.46974182]
[213.91160583 161.65510559]
[199.89183044 166.98855591]
[185.05984497 169.22743225]
[170.09043884 168.26989746]
[155.66461182 164.15948486]
[142.43864441 157.08322144]
[131.01420593 147.36300659]
[121.91106415 135.44107056]
[115.54333496 121.85975647]
[112.20071411 107.23693848]
[112.03567505 92.23353577]
[112.91861725 106.18746185]
[101.49266815 114.24595642]
[95.01317596 127.77430725]
[88.53367615 141.30264282]
[84.66937256 155.79634094]
[83.55372620 170.75479126]
[82.43807983 185.71325684]
[81.32242584 200.67170715]
[80.20677948 215.63015747]
[79.09113312 230.58860779]
[93.49295807 237.73672485]
[104.02377319 249.83517456]
[109.09333801 265.01196289]
[107.95344543 280.93380737]
[100.80814362 295.16473389]
[88.77797699 305.53894043]
[73.72439575 310.49026489]
[72.83158112 325.46368408]
[72.05026245 340.44332886]
[71.38047028 355.42834473]
[70.71068573 370.41339111]
[70.04090118 385.39843750]
[84.92015839 387.37255859]
[99.57073212 390.63601685]
[113.88111877 395.16394043]
[127.74242401 400.92184448]
[141.04913330 407.86596680]
[153.69998169 415.94345093]
[165.59867859 425.09277344]
[176.65467834 435.24432373]
[186.78382874 446.32086182]
[195.90904236 458.23806763]
[203.96087646 470.90524292]
[210.87803650 484.22601318]
[216.60789490 498.09893799]
[221.10681152 512.41845703]
[224.34057617 527.07562256]
[226.28457642 541.95886230]
[226.92401123 556.95483398]
[226.25399780 571.94952393]
[224.27966309 586.82873535]
[221.01602173 601.47930908]
[216.48789978 615.78961182]
[210.72976685 629.65081787]
[203.78546143 642.95745850]
[195.70782471 655.60815430]
[186.55831909 667.50677490]
[176.40660095 678.56262207]
[165.32992554 688.69158936]
[153.41259766 697.81665039]
[140.74530029 705.86828613]
[127.42446136 712.78527832]
[113.55145264 718.51495361]
[99.23185730 723.01367188]
[84.57465363 726.24725342]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 177]
[38 176]
[39 175]
[40 174]
[42 173]
[43 172]
[51 165]
[52 164]
[53 163]
[54 162]
[55 161]
[56 160]
[82 159]
[83 158]
[84 157]
[86 155]
[87 127]
[88 126]
[89 125]
[92 122]
[93 121]
[94 120]
[95 119]
[97 118]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
