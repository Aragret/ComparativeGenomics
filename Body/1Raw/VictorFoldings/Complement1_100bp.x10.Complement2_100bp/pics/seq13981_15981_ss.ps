%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCCxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[42.70244980 656.25250244]
[28.83993340 661.99615479]
[14.63469982 666.83044434]
[0.14633551 670.73510742]
[-14.56439209 673.69372559]
[-29.43577957 675.69390869]
[-44.40545273 676.72729492]
[-59.41061783 676.78948975]
[-74.38834381 675.88024902]
[-89.27580261 674.00347900]
[-104.01055908 671.16693115]
[-118.53079987 667.38256836]
[-132.77563477 662.66619873]
[-146.68530273 657.03771973]
[-160.20146179 650.52062988]
[-173.26742554 643.14233398]
[-185.82838440 634.93371582]
[-197.83166504 625.92926025]
[-209.22691345 616.16674805]
[-219.96632385 605.68707275]
[-230.00488281 594.53417969]
[-239.30044556 582.75488281]
[-247.81404114 570.39862061]
[-255.50996399 557.51721191]
[-262.35592651 544.16461182]
[-268.32321167 530.39685059]
[-273.38681030 516.27172852]
[-277.52548218 501.84848022]
[-280.72183228 487.18759155]
[-282.96249390 472.35052490]
[-284.23803711 457.39953613]
[-284.54312134 442.39733887]
[-283.87649536 427.40686035]
[-282.24093628 412.49096680]
[-279.64328003 397.71221924]
[-276.09445190 383.13262939]
[-271.60931396 368.81332397]
[-266.20672607 354.81436157]
[-259.90927124 341.19448853]
[-252.74343872 328.01080322]
[-244.73925781 315.31860352]
[-235.93028259 303.17114258]
[-226.35346985 291.61935425]
[-216.04901123 280.71170044]
[-205.06008911 270.49392700]
[-193.43283081 261.00891113]
[-181.21598816 252.29641724]
[-168.46080017 244.39297485]
[-155.22077942 237.33177185]
[-141.55145264 231.14239502]
[-127.51015472 225.85081482]
[-113.15578461 221.47921753]
[-98.54853821 218.04595947]
[-83.74968719 215.56542969]
[-68.82131195 214.04803467]
[-53.82602310 213.50012207]
[-38.82671738 213.92401123]
[-23.88630295 215.31791687]
[-9.06745148 217.67599487]
[5.56768417 220.98835754]
[19.95771790 225.24110413]
[34.04229355 230.41639709]
[40.11612701 216.70112610]
[46.18996048 202.98587036]
[52.26379395 189.27059937]
[58.33762741 175.55532837]
[64.41146088 161.84005737]
[70.48529816 148.12480164]
[76.55912781 134.40953064]
[74.63807678 119.63932800]
[87.30068207 110.15412903]
[85.08428955 93.52693176]
[98.74255371 83.78895569]
[104.61151123 69.98477936]
[105.08927155 60.86285400]
[110.67198944 56.01980591]
[116.74581909 42.30453873]
[122.81965637 28.58927155]
[128.89349365 14.87400436]
[127.40687561 -0.87720346]
[139.63504028 -9.38139343]
[126.44562531 -16.54278564]
[113.87522888 -24.74227142]
[102.00538635 -33.92667007]
[90.91307831 -44.03641891]
[80.67024231 -55.00595093]
[71.34330750 -66.76412201]
[62.99276733 -79.23468018]
[55.67277145 -92.33673859]
[49.43079758 -105.98532867]
[44.30733109 -120.09194183]
[40.33559418 -134.56507874]
[37.54134750 -149.31086731]
[35.94271469 -164.23370361]
[35.55006409 -179.23677063]
[36.36594009 -194.22277832]
[38.38505173 -209.09455872]
[41.59430695 -223.75563049]
[45.97288513 -238.11091614]
[51.49239731 -252.06732178]
[58.11704254 -265.53433228]
[65.80385590 -278.42462158]
[74.50299072 -290.65454102]
[84.15802002 -302.14483643]
[94.70632935 -312.82095337]
[106.07951355 -322.61364746]
[118.20381165 -331.45944214]
[131.00057983 -339.30093384]
[144.38684082 -346.08724976]
[158.27577209 -351.77444458]
[172.57728577 -356.32556152]
[187.19865417 -359.71115112]
[202.04502869 -361.90921021]
[217.02012634 -362.90548706]
[232.02684021 -362.69354248]
[246.96783447 -361.27474976]
[261.74621582 -358.65826416]
[276.26611328 -354.86111450]
[290.43341064 -349.90789795]
[304.15618896 -343.83074951]
[317.34545898 -336.66906738]
[329.91564941 -328.46929932]
[341.78530884 -319.28463745]
[352.87738037 -309.17462158]
[363.11996460 -298.20486450]
[372.44665527 -286.44650269]
[380.79690552 -273.97576904]
[388.11663818 -260.87353516]
[394.35830688 -247.22480774]
[399.48144531 -233.11808777]
[403.45288086 -218.64486694]
[406.24679565 -203.89900208]
[407.84509277 -188.97615051]
[408.23742676 -173.97306824]
[407.42120361 -158.98707581]
[405.40176392 -144.11534119]
[402.19219971 -129.45434570]
[397.81329346 -115.09915161]
[392.29348755 -101.14286804]
[385.66854858 -87.67600250]
[377.98144531 -74.78589630]
[369.28204346 -62.55614471]
[359.62673950 -51.06607056]
[349.07821655 -40.39019012]
[337.70480347 -30.59773827]
[325.58032227 -21.75222588]
[312.78335571 -13.91101933]
[299.39697266 -7.12497425]
[285.50790405 -1.43810034]
[271.20629883 3.11272049]
[256.58483887 6.49797392]
[241.73843384 8.69570446]
[226.76330566 9.69165897]
[211.75659180 9.47937965]
[196.81562805 8.06024075]
[182.03730774 5.44344807]
[167.51748657 1.64597166]
[153.35031128 -3.30755949]
[155.27136230 11.46264076]
[142.60874939 20.94783783]
[136.53492737 34.66310501]
[130.46109009 48.37837219]
[124.38725281 62.09363937]
[118.41568756 75.85374451]
[112.54673004 89.65792084]
[116.24458313 100.70178986]
[111.60806274 111.38560486]
[101.01595306 116.22796631]
[102.50256348 131.97917175]
[90.27439880 140.48336792]
[84.20056152 154.19863892]
[78.12673187 167.91389465]
[72.05289459 181.62916565]
[65.97906494 195.34443665]
[59.90522766 209.05969238]
[53.83139420 222.77496338]
[47.75756073 236.49023438]
[61.05567551 243.44142151]
[73.87595367 251.23881531]
[86.16461945 259.84973145]
[97.87012482 269.23800659]
[108.94338226 279.36431885]
[119.33793640 290.18612671]
[129.01019287 301.65811157]
[137.91958618 313.73211670]
[146.02874756 326.35751343]
[153.30366516 339.48132324]
[159.71380615 353.04852295]
[165.23229980 367.00219727]
[169.83601379 381.28384399]
[173.50559998 395.83349609]
[176.22570801 410.59020996]
[177.98489380 425.49200439]
[178.77581787 440.47644043]
[178.59512329 455.48065186]
[177.44358826 470.44171143]
[175.32603455 485.29684448]
[172.25134277 499.98373413]
[168.23242188 514.44079590]
[163.28613281 528.60742188]
[157.43319702 542.42419434]
[150.69818115 555.83306885]
[143.10932922 568.77789307]
[134.69848633 581.20434570]
[125.50090790 593.06030273]
[115.55518341 604.29602051]
[104.90302277 614.86437988]
[93.58911896 624.72106934]
[81.66091919 633.82476807]
[69.16844940 642.13720703]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 177]
[63 176]
[64 175]
[65 174]
[66 173]
[67 172]
[68 171]
[69 170]
[71 168]
[73 165]
[74 164]
[76 163]
[77 162]
[78 161]
[79 160]
[81 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
