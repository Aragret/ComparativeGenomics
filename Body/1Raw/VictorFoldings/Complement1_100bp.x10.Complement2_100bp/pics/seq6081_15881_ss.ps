%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[98.89169312 792.28527832]
[84.23695374 789.06359863]
[69.80587769 784.95446777]
[55.65215302 779.97320557]
[41.82843781 774.13830566]
[28.38615036 767.47155762]
[15.37530231 759.99768066]
[2.84429169 751.74450684]
[-9.16026306 742.74279785]
[-20.59370613 733.02593994]
[-31.41350174 722.63012695]
[-41.57939911 711.59399414]
[-51.05358124 699.95867920]
[-59.80080414 687.76745605]
[-67.78852844 675.06555176]
[-74.98703766 661.90039062]
[-81.36954498 648.32080078]
[-86.91232300 634.37744141]
[-91.59474182 620.12200928]
[-95.39938354 605.60772705]
[-98.31208801 590.88842773]
[-100.32203674 576.01898193]
[-101.42173767 561.05462646]
[-101.60710144 546.05108643]
[-100.87744904 531.06414795]
[-99.23548126 516.14953613]
[-96.68731689 501.36282349]
[-93.24243164 486.75894165]
[-88.91363525 472.39221191]
[-83.71704102 458.31613159]
[-77.67196655 444.58303833]
[-70.80091858 431.24401855]
[-63.12944794 418.34869385]
[-54.68609238 405.94503784]
[-45.50226212 394.07919312]
[-35.61212540 382.79531860]
[-25.05247307 372.13534546]
[-13.86258507 362.13900757]
[-2.08409190 352.84341431]
[10.23919106 344.28317261]
[23.06141853 336.49014282]
[36.33489227 329.49331665]
[50.01023483 323.31869507]
[64.03656769 317.98925781]
[78.36171722 313.52484131]
[92.93238831 309.94204712]
[107.69438171 307.25424194]
[105.91191864 292.36050415]
[104.12944794 277.46679688]
[102.01166534 275.63018799]
[100.49378967 272.84402466]
[99.94112396 269.33261108]
[100.63111877 265.44824219]
[102.71152496 261.63696289]
[101.81871033 246.66355896]
[100.92589569 231.69015503]
[92.08956146 223.42904663]
[91.22319794 210.96176147]
[99.33535004 200.93400574]
[98.66556549 185.94897461]
[97.77275085 170.97557068]
[96.65710449 156.01712036]
[95.54145050 141.05865479]
[94.42580414 126.10020447]
[93.31015778 111.14175415]
[91.74963379 96.22315216]
[89.74562073 81.35762024]
[87.74160767 66.49208832]
[85.73759460 51.62656403]
[83.73358154 36.76103592]
[81.72956848 21.89550781]
[70.13928223 7.58652925]
[77.43292236 -8.37497902]
[67.73409271 -20.87471008]
[73.49781036 -34.60892868]
[71.27268982 -49.44297409]
[69.04757690 -64.27701569]
[54.09803772 -66.37255859]
[40.35857391 -72.58942413]
[28.93914223 -82.41600037]
[20.75962639 -95.04943848]
[16.47573662 -109.46125031]
[16.42646027 -124.48102570]
[20.60724258 -138.89149475]
[28.67105293 -151.52719116]
[39.95717239 -161.36868286]
[53.54533005 -167.62481689]
[51.32021332 -182.45886230]
[49.09509659 -197.29290771]
[46.86997986 -212.12695312]
[31.90352440 -214.17190552]
[18.12001038 -220.35183716]
[6.63680887 -230.16574097]
[-1.61519074 -242.81805420]
[-5.96703482 -257.28311157]
[-6.06593943 -272.38830566]
[-1.90388632 -286.90911865]
[6.18172503 -299.66842651]
[17.53543091 -309.63186646]
[31.23683739 -315.99176025]
[46.17523193 -318.23251343]
[61.13962555 -316.17251587]
[74.91692352 -309.97875977]
[86.39025879 -300.15332031]
[94.62954712 -287.49270630]
[98.96685791 -273.02328491]
[99.05058289 -257.91799927]
[94.87394714 -243.40136719]
[86.77552032 -230.65020752]
[75.41181183 -220.69818115]
[61.70402527 -214.35206604]
[63.92914200 -199.51802063]
[66.15425873 -184.68397522]
[68.37937164 -169.84992981]
[83.20506287 -167.85589600]
[96.88197327 -161.75888062]
[108.29820251 -152.04521179]
[116.52301788 -139.49557495]
[120.88271332 -125.12236786]
[121.01578522 -110.08793640]
[116.90290070 -95.61062622]
[108.86915588 -82.86605835]
[97.55839539 -72.89163971]
[83.88162231 -66.50213623]
[86.10673523 -51.66809082]
[88.33185577 -36.83404541]
[97.87152863 -25.39534569]
[92.26696777 -10.60009575]
[101.80507660 -3.16027641]
[103.78026581 9.17999935]
[96.59509277 19.89149284]
[98.59910583 34.75702286]
[100.60311890 49.62255096]
[102.60713196 64.48807526]
[104.61114502 79.35360718]
[106.61515808 94.21913147]
[108.87359619 96.26583099]
[110.43723297 99.17951965]
[110.98352814 102.70442963]
[110.28892517 106.46923828]
[108.26860809 110.02610779]
[109.38425446 124.98455811]
[110.49990845 139.94300842]
[111.61555481 154.90145874]
[112.73120117 169.85992432]
[116.13188934 175.52973938]
[116.15521240 181.21273804]
[113.65060425 185.27919006]
[114.32038879 200.26422119]
[124.58787537 215.55018616]
[115.89929962 230.79733276]
[116.79211426 245.77073669]
[117.68492889 260.74414062]
[119.02316284 275.68432617]
[120.80563354 290.57803345]
[122.58809662 305.47177124]
[137.56745911 304.60018921]
[152.57208252 304.64343262]
[167.54617310 305.60131836]
[182.43400574 307.47033691]
[197.18022156 310.24349976]
[211.72991943 313.91049194]
[226.02902222 318.45764160]
[240.02429199 323.86810303]
[253.66369629 330.12170410]
[266.89648438 337.19519043]
[279.67343140 345.06222534]
[291.94702148 353.69357300]
[303.67156982 363.05712891]
[314.80343628 373.11804199]
[325.30126953 383.83886719]
[335.12600708 395.17977905]
[344.24105835 407.09851074]
[352.61254883 419.55078125]
[360.20932007 432.49026489]
[367.00311279 445.86880493]
[372.96865845 459.63662720]
[378.08377075 473.74252319]
[382.32940674 488.13403320]
[385.68978882 502.75759888]
[388.15240479 517.55883789]
[389.70809937 532.48266602]
[390.35107422 547.47357178]
[390.07894897 562.47576904]
[388.89273071 577.43353271]
[386.79681396 592.29113770]
[383.79904175 606.99328613]
[379.91052246 621.48535156]
[375.14575195 635.71343994]
[369.52243042 649.62457275]
[363.06149292 663.16699219]
[355.78698730 676.29034424]
[347.72595215 688.94580078]
[338.90835571 701.08624268]
[329.36706543 712.66656494]
[319.13751221 723.64373779]
[308.25778198 733.97680664]
[296.76834106 743.62738037]
[284.71191406 752.55950928]
[272.13339233 760.74011230]
[259.07952881 768.13861084]
[245.59892273 774.72753906]
[231.74169922 780.48236084]
[217.55940247 785.38165283]
[203.10481262 789.40728760]
[188.43168640 792.54418945]
[173.59460449 794.78076172]
[158.64878845 796.10858154]
[143.64981079 796.52282715]
[128.65347290 796.02185059]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 156]
[48 155]
[49 154]
[54 153]
[55 152]
[56 151]
[59 149]
[60 148]
[61 145]
[62 144]
[63 143]
[64 142]
[65 141]
[66 136]
[67 135]
[68 134]
[69 133]
[70 132]
[71 131]
[73 128]
[75 126]
[76 125]
[77 124]
[87 114]
[88 113]
[89 112]
[90 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
