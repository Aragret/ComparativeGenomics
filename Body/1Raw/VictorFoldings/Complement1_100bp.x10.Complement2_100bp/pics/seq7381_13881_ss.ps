%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[224.48280334 343.85726929]
[216.44163513 331.19476318]
[208.40046692 318.53222656]
[202.16108704 314.57089233]
[200.33546448 305.62075806]
[187.08074951 298.82650757]
[186.44966125 283.01791382]
[178.59790039 270.23706055]
[170.74615479 257.45620728]
[162.89439392 244.67536926]
[155.04263306 231.89453125]
[147.09594727 219.17248535]
[139.05477905 206.50996399]
[131.01361084 193.84744263]
[122.97243500 181.18492126]
[114.93126678 168.52239990]
[116.23577881 183.46556091]
[113.13648987 198.14187622]
[105.90150452 211.28170776]
[95.15673065 221.74830627]
[81.83168793 228.63623047]
[67.07913971 231.34957886]
[52.17532349 229.65364075]
[38.40956497 223.69512939]
[26.97274399 213.98950195]
[18.85425568 201.37641907]
[14.75643539 186.94700623]
[15.03378296 171.94956970]
[19.66230392 157.68153381]
[28.24158859 145.37722778]
[40.02943802 136.10110474]
[54.00609207 130.65562439]
[68.96242523 129.51188660]
[83.60456085 132.76884460]
[96.66581726 140.14471436]
[107.01423645 150.99856567]
[96.03186035 140.93692017]
[99.60951996 125.52552795]
[95.42251587 111.12174225]
[91.02151489 96.78189850]
[86.40750885 82.50916290]
[81.79349518 68.23642731]
[77.17948914 53.96369553]
[72.56547546 39.69096375]
[67.95146942 25.41823006]
[63.33745956 11.14549637]
[58.72344971 -3.12723708]
[53.89745331 -17.32969284]
[48.86053467 -31.45872307]
[43.82361984 -45.58775330]
[38.78670502 -59.71678162]
[33.74978638 -73.84580994]
[27.98375320 -87.69329834]
[21.50425720 -101.22164154]
[15.02476215 -114.74998474]
[8.54526615 -128.27833557]
[2.06577015 -141.80667114]
[-4.41372585 -155.33502197]
[-10.89322186 -168.86337280]
[-23.83262444 -177.96734619]
[-22.35218620 -192.78819275]
[-28.83168221 -206.31654358]
[-28.99621010 -191.31744385]
[-32.33793259 -176.69442749]
[-38.70482635 -163.11271667]
[-47.80723572 -151.19021606]
[-59.23106766 -141.46929932]
[-72.45660400 -134.39221191]
[-86.88218689 -130.28092957]
[-101.85153198 -129.32246399]
[-116.68363953 -131.56042480]
[-130.70375061 -136.89300537]
[-143.27404785 -145.07760620]
[-153.82266235 -155.74188232]
[-161.86968994 -168.40069580]
[-167.04907227 -182.47811890]
[-169.12515259 -197.33375549]
[-168.00349426 -212.29176331]
[-163.73513794 -226.67164612]
[-156.51425171 -239.81922913]
[-146.66934204 -251.13636780]
[-134.64826965 -260.10821533]
[-120.99794769 -266.32662964]
[-106.33934784 -269.50866699]
[-91.33934784 -269.50961304]
[-76.68034363 -266.32943726]
[-63.02923203 -260.11276245]
[-51.00703430 -251.14242554]
[-41.16068649 -239.82653809]
[-33.93646240 -226.67587280]
[-34.60624695 -241.66091919]
[-42.95204163 -255.10183716]
[-35.79076004 -268.16189575]
[-36.46054459 -283.14694214]
[-39.97002411 -291.58029175]
[-37.02706909 -298.35974121]
[-37.47367477 -313.35308838]
[-37.92028046 -328.34643555]
[-51.88383102 -334.50936890]
[-61.78402328 -346.12612915]
[-65.65515900 -360.89016724]
[-62.72862625 -375.87011719]
[-53.58548737 -388.09164429]
[-40.04111862 -395.12817383]
[-24.78476906 -395.58261108]
[-10.84559345 -389.36471558]
[-0.99122715 -377.70907593]
[2.82173896 -362.92990112]
[-0.16376255 -347.96160889]
[-9.35495853 -335.77618408]
[-22.92692947 -328.79302979]
[-22.48032379 -313.79968262]
[-22.03371811 -298.80633545]
[-21.47550583 -283.81671143]
[-20.80572128 -268.83169556]
[-12.50783634 -256.46258545]
[-19.62120819 -242.33070374]
[-18.95142365 -227.34565735]
[-15.30333614 -212.79603577]
[-8.82384014 -199.26770020]
[3.65210485 -191.13134766]
[2.63512397 -175.34286499]
[9.11462021 -161.81451416]
[15.59411526 -148.28617859]
[22.07361221 -134.75782776]
[28.55310822 -121.22948456]
[35.03260422 -107.70114136]
[41.51210022 -94.17279053]
[46.41351700 -108.34939575]
[59.21567535 -116.16634369]
[74.06560516 -114.04983521]
[84.17411804 -102.96750641]
[84.91973114 -87.98604584]
[75.96157074 -75.95478821]
[61.39517593 -72.37424469]
[47.87881470 -78.88272858]
[52.91573334 -64.75370026]
[57.95264816 -50.62466812]
[62.98956680 -36.49563980]
[68.02648163 -22.36660957]
[71.88091278 -19.54660797]
[74.00475311 -14.27533531]
[72.99618530 -7.74124622]
[77.61019135 6.53148699]
[82.22420502 20.80422020]
[86.83821106 35.07695389]
[91.45221710 49.34968567]
[96.06623077 63.62242126]
[100.68023682 77.89515686]
[105.29425049 92.16788483]
[109.30242157 95.55144501]
[111.12953186 100.93985748]
[109.82629395 106.93473053]
[114.01330566 121.33851624]
[125.29516602 132.43041992]
[121.41802216 146.81155396]
[127.59378815 160.48121643]
[135.63496399 173.14373779]
[143.67613220 185.80627441]
[151.71730042 198.46879578]
[159.75848389 211.13131714]
[167.00065613 216.69805908]
[167.82348633 224.04277039]
[175.67523193 236.82360840]
[183.52699280 249.60446167]
[191.37875366 262.38531494]
[199.23049927 275.16613770]
[213.04682922 282.87457275]
[213.11630249 297.76901245]
[221.06298828 310.49105835]
[229.10415649 323.15356445]
[237.14533997 335.81610107]
[250.91352844 329.78805542]
[265.44058228 325.93249512]
[280.38592529 324.33975220]
[295.39926147 325.04718018]
[310.12863159 328.03823853]
[324.22872925 333.24273682]
[337.36911011 340.53872681]
[349.24166870 349.75515747]
[359.56811523 360.67599487]
[368.10641479 373.04525757]
[374.65637207 386.57293701]
[379.06445312 400.94195557]
[381.22735596 415.81552124]
[381.09436035 430.84490967]
[378.66860962 445.67785645]
[374.00692749 459.96661377]
[367.21859741 473.37628174]
[358.46276855 485.59249878]
[347.94467163 496.32888794]
[335.91085815 505.33377075]
[322.64346313 512.39611816]
[308.45343018 517.35028076]
[293.67346191 520.08020020]
[278.64996338 520.52185059]
[263.73513794 518.66485596]
[249.27857971 514.55279541]
[235.61921692 508.28207397]
[223.07722473 499.99966431]
[211.94659424 489.89965820]
[202.48825073 478.21890259]
[194.92391968 465.23117065]
[189.43089294 451.24090576]
[186.13796997 436.57611084]
[185.12232971 421.58047485]
[186.40777588 406.60556030]
[189.96415710 392.00238037]
[195.70814514 378.11328125]
[203.50506592 365.26382446]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 172]
[2 171]
[3 170]
[5 169]
[7 167]
[8 166]
[9 165]
[10 164]
[11 163]
[12 161]
[13 160]
[14 159]
[15 158]
[16 157]
[36 156]
[38 154]
[39 153]
[40 150]
[41 149]
[42 148]
[43 147]
[44 146]
[45 145]
[46 144]
[47 143]
[48 140]
[49 139]
[50 138]
[51 137]
[52 136]
[53 128]
[54 127]
[55 126]
[56 125]
[57 124]
[58 123]
[59 122]
[61 120]
[62 119]
[90 118]
[91 117]
[93 115]
[94 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
