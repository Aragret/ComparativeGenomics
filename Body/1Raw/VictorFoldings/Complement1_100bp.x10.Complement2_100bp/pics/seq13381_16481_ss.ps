%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[242.60375977 232.42048645]
[250.32673645 219.54881287]
[238.23098755 210.67791748]
[226.13523865 201.80702209]
[211.29638672 200.51942444]
[204.74394226 186.11888123]
[192.64819336 177.24798584]
[178.01158142 179.75904846]
[165.61840820 170.93501282]
[163.08380127 155.56576538]
[148.24494934 154.27818298]
[141.69250488 139.87762451]
[129.59675598 131.00672913]
[117.50100708 122.13583374]
[105.40525055 113.26493835]
[91.52891541 111.55059052]
[85.72385406 98.83081055]
[73.62809753 89.95991516]
[61.53234863 81.08901978]
[49.43659592 72.21812439]
[36.59305573 73.40396881]
[26.70109940 65.76635742]
[24.73034096 53.83142471]
[12.76800442 44.78142548]
[0.80566812 35.73142624]
[-11.15666866 26.68142700]
[-4.45194006 40.09957123]
[-1.10517001 54.72144318]
[-1.30563414 69.72010040]
[-5.04199553 84.24730682]
[-12.10294437 97.48146820]
[-22.08914948 108.67412567]
[-34.43584442 117.19229126]
[-48.44476318 122.55422211]
[-63.32363129 124.45665741]
[-78.23097992 122.79202271]
[-92.32372284 117.65445709]
[-104.80484772 109.33451080]
[-114.96848297 98.30271912]
[-122.23983765 85.18298340]
[-126.20767212 70.71729279]
[-126.64759064 55.72374344]
[-123.53470612 41.05030060]
[-117.04507446 27.52681541]
[-107.54570770 15.91810608]
[-95.57385254 6.88070297]
[-81.80657196 0.92571414]
[-67.02246094 -1.61007643]
[-52.05765152 -0.58325756]
[-37.75846100 3.94809914]
[-24.93274117 11.72838497]
[-32.97391510 -0.93413973]
[-41.01508713 -13.59666443]
[-49.05625916 -26.25918961]
[-64.22132111 -29.81708908]
[-72.19583130 -42.77323914]
[-68.71046448 -57.20888138]
[-76.75163269 -69.87140656]
[-84.79280853 -82.53393555]
[-92.83398438 -95.19645691]
[-100.87515259 -107.85897827]
[-108.91632843 -120.52150726]
[-122.50449371 -114.12111664]
[-136.78770447 -109.47428894]
[-151.54071045 -106.65431976]
[-166.53080750 -105.70568085]
[-181.52162170 -106.64332581]
[-196.27667236 -109.45246887]
[-210.56329346 -114.08881378]
[-224.15615845 -120.47923279]
[-236.84086609 -128.52294922]
[-248.41738892 -138.09307861]
[-258.70312500 -149.03871155]
[-267.53585815 -161.18721008]
[-274.77630615 -174.34696960]
[-280.31024170 -188.31045532]
[-284.05041504 -202.85742188]
[-285.93780518 -217.75845337]
[-285.94268799 -232.77854919]
[-284.06497192 -247.68081665]
[-280.33425903 -262.23022461]
[-274.80938721 -276.19726562]
[-267.57748413 -289.36172485]
[-258.75262451 -301.51596069]
[-248.47401428 -312.46829224]
[-236.90371704 -322.04592896]
[-224.22422791 -330.09786987]
[-210.63551331 -336.49713135]
[-196.35191345 -341.14273071]
[-181.59867859 -343.96148682]
[-166.60848999 -344.90884399]
[-151.61776733 -343.96994019]
[-136.86294556 -341.15954590]
[-122.57670593 -336.52200317]
[-108.98439026 -330.13043213]
[-96.30035400 -322.08566284]
[-84.72463989 -312.51455688]
[-74.43982697 -301.56805420]
[-65.60810852 -289.41882324]
[-58.36877823 -276.25845337]
[-52.83601379 -262.29449463]
[-49.09707260 -247.74722290]
[-47.21091843 -232.84602356]
[-47.20730591 -217.82592773]
[-49.08628845 -202.92382812]
[-52.81823349 -188.37474060]
[-58.34428024 -174.40814209]
[-65.57727814 -161.24429321]
[-74.40314484 -149.09080505]
[-84.68270111 -138.13935852]
[-96.25379944 -128.56268311]
[-88.21263123 -115.90015411]
[-80.17145538 -103.23763275]
[-72.13027954 -90.57510376]
[-64.08911133 -77.91258240]
[-56.04793549 -65.25005341]
[-41.50039673 -62.26597595]
[-33.16512299 -49.53892517]
[-36.39373398 -34.30036163]
[-28.35256195 -21.63783836]
[-20.31138802 -8.97531223]
[-12.27021599 3.68721223]
[-2.10666871 14.71908951]
[9.85566807 23.76908875]
[21.81800461 32.81908798]
[33.78034210 41.86909103]
[51.28614807 43.09938049]
[58.30749130 60.12237167]
[70.40324402 68.99327087]
[82.49899292 77.86416626]
[94.59474945 86.73506165]
[108.47108459 88.44940948]
[114.27614594 101.16918945]
[126.37190247 110.04008484]
[138.46765137 118.91098022]
[150.56340027 127.78187561]
[166.26742554 129.70396423]
[171.95469666 143.47001648]
[187.37522888 141.26889038]
[199.51567078 150.43754578]
[201.51908875 165.15222168]
[213.61483765 174.02311707]
[229.31884766 175.94522095]
[235.00613403 189.71127319]
[247.10188293 198.58216858]
[259.19763184 207.45306396]
[269.15356445 196.21899414]
[280.10357666 185.95147705]
[291.95422363 176.73809814]
[304.60446167 168.65750122]
[317.94631958 161.77857971]
[331.86599731 156.16006470]
[346.24468994 151.84986877]
[360.95974731 148.88476562]
[375.88562012 147.29006958]
[390.89495850 147.07937622]
[405.85971069 148.25447083]
[420.65219116 150.80535889]
[435.14620972 154.71025085]
[449.21807861 159.93583679]
[462.74777222 166.43753052]
[475.61984253 174.15986633]
[487.72445679 183.03695679]
[498.95837402 192.99307251]
[509.22570801 203.94325256]
[518.43890381 215.79406738]
[526.51928711 228.44444275]
[533.39794922 241.78642273]
[539.01623535 255.70616150]
[543.32623291 270.08493042]
[546.29107666 284.80004883]
[547.88549805 299.72592163]
[548.09594727 314.73529053]
[546.92059326 329.70001221]
[544.36950684 344.49246216]
[540.46435547 358.98638916]
[535.23852539 373.05819702]
[528.73663330 386.58776855]
[521.01403809 399.45971680]
[512.13677979 411.56420898]
[502.18045044 422.79794312]
[491.23010254 433.06509399]
[479.37911987 442.27804565]
[466.72863770 450.35824585]
[453.38653564 457.23672485]
[439.46670532 462.85476685]
[425.08786011 467.16448975]
[410.37271118 470.12908936]
[395.44677734 471.72329712]
[380.43743896 471.93350220]
[365.47271729 470.75790405]
[350.68032837 468.20651245]
[336.18643188 464.30114746]
[322.11471558 459.07510376]
[308.58526611 452.57293701]
[295.71343994 444.85018921]
[283.60910034 435.97268677]
[272.37554932 426.01620483]
[262.10858154 415.06567383]
[252.89579773 403.21453857]
[244.81581116 390.56390381]
[237.93757629 377.22171021]
[232.31974792 363.30175781]
[228.01026917 348.92285156]
[225.04591370 334.20764160]
[223.45195007 319.28170776]
[223.24200439 304.27236938]
[224.41786194 289.30767822]
[226.96948242 274.51528931]
[230.87509155 260.02148438]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 146]
[3 145]
[4 144]
[6 142]
[7 141]
[10 138]
[12 136]
[13 135]
[14 134]
[15 133]
[17 131]
[18 130]
[19 129]
[20 128]
[23 126]
[24 125]
[25 124]
[26 123]
[51 122]
[52 121]
[53 120]
[54 119]
[57 116]
[58 115]
[59 114]
[60 113]
[61 112]
[62 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
