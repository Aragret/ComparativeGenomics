%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGGxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[203.84159851 363.48510742]
[203.88104248 348.47674561]
[205.14367676 333.52151489]
[207.62110901 318.71899414]
[211.29685974 304.16763306]
[216.14645386 289.96432495]
[222.13761902 276.20355225]
[229.23049927 262.97692871]
[237.37786865 250.37243652]
[246.52552795 238.47398376]
[235.41828918 228.39283752]
[224.31105042 218.31170654]
[206.98481750 215.52452087]
[201.51019287 197.94299316]
[190.25408936 188.02835083]
[178.99800110 178.11369324]
[167.74189758 168.19905090]
[156.48580933 158.28439331]
[139.11999512 155.75549316]
[133.38420105 138.25741577]
[121.98174286 128.51145935]
[110.57927704 118.76549530]
[99.17681885 109.01952362]
[95.32824707 108.77275848]
[91.60713959 106.83080292]
[88.76813507 103.28861237]
[87.49541473 98.57479858]
[76.53950500 88.32940674]
[78.76275635 103.16373444]
[72.71028900 116.88844299]
[60.25753403 125.25078583]
[45.26310349 125.65960693]
[32.37319183 117.98822021]
[25.58187866 104.61368561]
[26.99352264 89.68025970]
[36.17071152 77.81521606]
[50.26979446 72.69507599]
[64.92224121 75.90648651]
[55.43334579 64.28922272]
[45.94444656 52.67196274]
[31.12420082 56.15358734]
[16.32229233 52.86870193]
[4.46298456 43.52113724]
[-2.13465476 30.00698853]
[-2.21015191 15.03021622]
[4.19790649 1.56164980]
[-5.29099226 -10.05561352]
[-14.77989006 -21.67287636]
[-24.26878929 -33.29014206]
[-33.75768661 -44.90740204]
[-43.24658585 -56.52466583]
[-52.73548508 -68.14192963]
[-65.26364136 -59.86930466]
[-78.56445312 -52.90659332]
[-92.50144196 -47.32524490]
[-106.93157959 -43.18253708]
[-121.70680237 -40.52097702]
[-136.67547607 -39.36787796]
[-151.68402100 -39.73507309]
[-166.57839966 -41.61879349]
[-181.20578003 -44.99970627]
[-195.41607666 -49.84312439]
[-209.06344604 -56.09934235]
[-222.00785828 -63.70416260]
[-234.11647034 -72.57954407]
[-245.26504517 -82.63441467]
[-255.33915710 -93.76559448]
[-264.23544312 -105.85885620]
[-271.86260986 -118.79010773]
[-278.14242554 -132.42665100]
[-283.01037598 -146.62855530]
[-286.41656494 -161.25007629]
[-288.32601929 -176.14117432]
[-288.71914673 -191.14904785]
[-287.59191895 -206.11970520]
[-284.95587158 -220.89950562]
[-280.83810425 -235.33677673]
[-275.28085327 -249.28338623]
[-268.34112549 -262.59622192]
[-260.09017944 -275.13864136]
[-250.61262512 -286.78198242]
[-240.00575256 -297.40670776]
[-228.37840271 -306.90386963]
[-215.84988403 -315.17593384]
[-202.54875183 -322.13806152]
[-188.61152649 -327.71878052]
[-174.18119812 -331.86087036]
[-159.40586853 -334.52178955]
[-144.43713379 -335.67422485]
[-129.42861938 -335.30636597]
[-114.53431702 -333.42199707]
[-99.90708160 -330.04043579]
[-85.69700623 -325.19638062]
[-72.04990387 -318.93957520]
[-59.10583115 -311.33416748]
[-46.99760818 -302.45825195]
[-35.84947968 -292.40289307]
[-25.77585220 -281.27127075]
[-16.88009071 -269.17761230]
[-9.25348568 -256.24603271]
[-2.97429633 -242.60922241]
[1.89304268 -228.40710449]
[5.29858446 -213.78543091]
[7.20738220 -198.89424133]
[7.59984875 -183.88635254]
[6.47195625 -168.91575623]
[3.83527970 -154.13606262]
[-0.28312525 -139.69897461]
[-5.84099627 -125.75260925]
[-12.78130150 -112.44008636]
[-21.03282166 -99.89801788]
[-30.51088142 -88.25511169]
[-41.11822128 -77.63082886]
[-31.62932205 -66.01356506]
[-22.14042473 -54.39630127]
[-12.65152550 -42.77903748]
[-3.16262722 -31.16177559]
[6.32627106 -19.54451180]
[15.81516933 -7.92724848]
[30.29195213 -11.51727200]
[44.95212173 -8.45315742]
[56.87696075 0.70977229]
[63.66860199 14.19657326]
[63.93212509 29.35630798]
[57.56171036 43.18306351]
[67.05060577 54.80032730]
[76.53950500 66.41758728]
[86.78489685 77.37349701]
[97.74080658 87.61888885]
[108.92278290 97.61706543]
[120.32524872 107.36302948]
[131.72770691 117.10899353]
[143.13017273 126.85495758]
[156.02633667 126.62766266]
[165.32283020 134.97984314]
[166.40045166 147.02830505]
[177.65655518 156.94294739]
[188.91264343 166.85760498]
[200.16874695 176.77224731]
[211.42483521 186.68690491]
[224.32296753 186.65164185]
[233.49407959 195.14129639]
[234.39219666 207.20446777]
[245.49942017 217.28559875]
[256.60665894 227.36674500]
[267.56552124 217.11218262]
[279.32376099 207.78498840]
[291.80313110 199.44723511]
[304.92059326 192.15443420]
[318.58883667 185.95509338]
[332.71691895 180.89048767]
[347.21081543 176.99429321]
[361.97402954 174.29248047]
[376.90835571 172.80299377]
[391.91439819 172.53575134]
[406.89230347 173.49255371]
[421.74237061 175.66700745]
[436.36578369 179.04466248]
[450.66522217 183.60302734]
[464.54553223 189.31176758]
[477.91433716 196.13290405]
[490.68267822 204.02102661]
[502.76556396 212.92364502]
[514.08258057 222.78150940]
[524.55847168 233.52903748]
[534.12341309 245.09468079]
[542.71386719 257.40148926]
[550.27258301 270.36752319]
[556.74926758 283.90655518]
[562.10089111 297.92843628]
[566.29174805 312.33987427]
[569.29400635 327.04495239]
[571.08764648 341.94580078]
[571.66076660 356.94329834]
[571.00952148 371.93759155]
[569.13824463 386.82888794]
[566.05944824 401.51812744]
[561.79351807 415.90753174]
[556.36895752 429.90133667]
[549.82177734 443.40643311]
[542.19561768 456.33291626]
[533.54119873 468.59481812]
[523.91607666 480.11047363]
[513.38439941 490.80325317]
[502.01614380 500.60202026]
[489.88702393 509.44155884]
[477.07778931 517.26306152]
[463.67361450 524.01446533]
[449.76376343 529.65081787]
[435.44076538 534.13458252]
[420.79992676 537.43603516]
[405.93875122 539.53308105]
[390.95605469 540.41180420]
[375.95162964 540.06640625]
[361.02523804 538.49914551]
[346.27630615 535.72045898]
[331.80291748 531.74877930]
[317.70141602 526.61065674]
[304.06564331 520.34014893]
[290.98635864 512.97912598]
[278.55059814 504.57647705]
[266.84112549 495.18814087]
[255.93582153 484.87661743]
[245.90731812 473.71051025]
[236.82234192 461.76412964]
[228.74131775 449.11700439]
[221.71806335 435.85327148]
[215.79930115 422.06118774]
[211.02442932 407.83258057]
[207.42521667 393.26211548]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 145]
[11 144]
[12 143]
[14 140]
[15 139]
[16 138]
[17 137]
[18 136]
[20 133]
[21 132]
[22 131]
[23 130]
[27 129]
[28 128]
[38 127]
[39 126]
[40 125]
[46 119]
[47 118]
[48 117]
[49 116]
[50 115]
[51 114]
[52 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
