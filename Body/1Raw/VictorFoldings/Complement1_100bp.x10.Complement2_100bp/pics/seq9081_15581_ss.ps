%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[85.45864868 718.44140625]
[70.50366974 717.23413086]
[55.63504791 715.22583008]
[40.89566422 712.42230225]
[26.32800865 708.83172607]
[11.97408772 704.46435547]
[-2.12471318 699.33276367]
[-15.92774391 693.45184326]
[-29.39520454 686.83850098]
[-42.48826981 679.51177979]
[-55.16918182 671.49279785]
[-67.40138245 662.80474854]
[-79.14960480 653.47265625]
[-90.37997437 643.52337646]
[-101.06010437 632.98565674]
[-111.15921021 621.88983154]
[-120.64816284 610.26794434]
[-129.49961853 598.15344238]
[-137.68804932 585.58129883]
[-145.18983459 572.58776855]
[-151.98335266 559.21026611]
[-158.04902649 545.48742676]
[-163.36935425 531.45874023]
[-167.92900085 517.16473389]
[-171.71481323 502.64660645]
[-174.71588135 487.94616699]
[-176.92355347 473.10586548]
[-178.33146667 458.16842651]
[-178.93554688 443.17697144]
[-178.73408508 428.17468262]
[-177.72761536 413.20483398]
[-175.91908264 398.31060791]
[-173.31367493 383.53491211]
[-169.91891479 368.92037964]
[-165.74458313 354.50912476]
[-160.80271912 340.34271240]
[-155.10757446 326.46200562]
[-148.67558289 312.90698242]
[-141.52525330 299.71676636]
[-133.67724609 286.92938232]
[-125.15414429 274.58166504]
[-115.98056030 262.70922852]
[-106.18292236 251.34634399]
[-95.78948212 240.52574158]
[-84.83021545 230.27861023]
[-73.33672333 220.63452148]
[-61.34212494 211.62126160]
[-48.88102341 203.26483154]
[-35.98933792 195.58932495]
[-22.70423889 188.61686707]
[-9.06403542 182.36755371]
[4.89194632 176.85940552]
[19.12346840 172.10832214]
[33.58949661 168.12799072]
[48.24832153 164.92987061]
[63.05767822 162.52320862]
[77.97486877 160.91494751]
[92.95687866 160.10969543]
[92.95687866 145.10969543]
[83.37618256 130.40672302]
[92.71562195 114.53674316]
[83.74431610 100.36310577]
[92.07379150 85.80301666]
[91.62718201 70.80966949]
[91.18058014 55.81631851]
[90.73397064 40.82297134]
[90.28736877 25.82962036]
[81.32515717 37.85786819]
[67.32048035 43.23087311]
[52.61285019 40.28374863]
[41.75957489 29.92969322]
[38.12366867 15.37702560]
[42.83174896 1.13504589]
[54.42496872 -8.38321209]
[69.31104279 -10.22841358]
[82.87735748 -3.82880116]
[90.92031860 8.83288193]
[92.48084259 -6.08572340]
[94.04136658 -21.00432777]
[95.60189056 -35.92293167]
[93.38225555 -44.78357697]
[97.29831696 -51.05144882]
[99.08078766 -65.94516754]
[100.86325073 -80.83888245]
[102.64571381 -95.73260498]
[88.07305145 -99.37138367]
[74.07138062 -104.80795288]
[60.86151886 -111.95658112]
[48.65180969 -120.70451355]
[37.63482285 -130.91378784]
[27.98430634 -142.42337036]
[19.85246277 -155.05177307]
[13.36754608 -168.59980774]
[8.63183022 -182.85379028]
[5.72000599 -197.58892822]
[4.67799568 -212.57284546]
[5.52223396 -227.56919861]
[8.23940563 -242.34147644]
[12.78665733 -256.65670776]
[19.09227371 -270.28909302]
[27.05680275 -283.02368164]
[36.55463409 -294.65960693]
[47.43597412 -305.01330566]
[59.52920914 -313.92156982]
[72.64360809 -321.24383545]
[86.57234192 -326.86468506]
[101.09572601 -330.69540405]
[115.98471832 -332.67559814]
[131.00448608 -332.77404785]
[145.91816711 -330.98919678]
[160.49052429 -327.34918213]
[174.49172974 -321.91143799]
[187.70098877 -314.76168823]
[199.90995789 -306.01272583]
[210.92608643 -295.80252075]
[220.57563782 -284.29211426]
[228.70642090 -271.66305542]
[235.19020081 -258.11447144]
[239.92471313 -243.86009216]
[242.83529663 -229.12469482]
[243.87605286 -214.14070129]
[243.03054810 -199.14442444]
[240.31213379 -184.37237549]
[235.76367188 -170.05752563]
[229.45690918 -156.42565918]
[221.49130249 -143.69174194]
[211.99249268 -132.05664062]
[201.11029053 -121.70382690]
[189.01629639 -112.79659271]
[175.90129089 -105.47541809]
[161.97207642 -99.85576630]
[147.44836426 -96.02626801]
[132.55921936 -94.04731750]
[117.53943634 -93.95013428]
[115.75696564 -79.05641937]
[113.97450256 -64.16270447]
[112.19203949 -49.26898575]
[110.52049255 -34.36241150]
[108.95996857 -19.44380569]
[107.39945221 -4.52520037]
[105.83892822 10.39340496]
[105.28071594 25.38301468]
[105.72731781 40.37636566]
[106.17392731 55.36971283]
[106.62053680 70.36306763]
[107.06713867 85.35641479]
[115.04737091 93.83917236]
[115.30745697 105.48278046]
[107.71395874 114.31341553]
[116.40859222 123.84054565]
[116.28583527 136.33729553]
[107.95687866 145.10969543]
[107.95687866 160.10969543]
[122.93888855 160.91494751]
[137.85607910 162.52320862]
[152.66543579 164.92987061]
[167.32424927 168.12799072]
[181.79028320 172.10832214]
[196.02180481 176.85940552]
[209.97778320 182.36755371]
[223.61799622 188.61686707]
[236.90309143 195.58932495]
[249.79476929 203.26483154]
[262.25588989 211.62126160]
[274.25045776 220.63452148]
[285.74395752 230.27861023]
[296.70324707 240.52574158]
[307.09667969 251.34634399]
[316.89431763 262.70922852]
[326.06790161 274.58166504]
[334.59100342 286.92938232]
[342.43899536 299.71676636]
[349.58932495 312.90698242]
[356.02133179 326.46200562]
[361.71646118 340.34271240]
[366.65832520 354.50912476]
[370.83267212 368.92037964]
[374.22741699 383.53491211]
[376.83282471 398.31060791]
[378.64135742 413.20483398]
[379.64782715 428.17468262]
[379.84930420 443.17697144]
[379.24520874 458.16842651]
[377.83731079 473.10586548]
[375.62963867 487.94616699]
[372.62857056 502.64660645]
[368.84274292 517.16473389]
[364.28311157 531.45874023]
[358.96276855 545.48742676]
[352.89709473 559.21026611]
[346.10357666 572.58776855]
[338.60180664 585.58129883]
[330.41336060 598.15344238]
[321.56192017 610.26794434]
[312.07296753 621.88983154]
[301.97384644 632.98565674]
[291.29373169 643.52337646]
[280.06335449 653.47265625]
[268.31512451 662.80474854]
[256.08294678 671.49279785]
[243.40202332 679.51177979]
[230.30895996 686.83850098]
[216.84149170 693.45184326]
[203.03846741 699.33276367]
[188.93966675 704.46435547]
[174.58573914 708.83172607]
[160.01808167 712.42230225]
[145.27870178 715.22583008]
[130.41007996 717.23413086]
[115.45510101 718.44140625]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 153]
[59 152]
[61 149]
[63 146]
[64 145]
[65 144]
[66 143]
[67 142]
[77 141]
[78 140]
[79 139]
[80 138]
[82 137]
[83 136]
[84 135]
[85 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
