%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[135.45933533 566.80419922]
[132.03849792 552.16864014]
[130.89196777 537.18249512]
[132.04663086 522.19689941]
[135.47540283 507.56326294]
[141.09790039 493.62454224]
[148.78234863 480.70748901]
[158.34860229 469.11492920]
[169.57240295 459.11862183]
[182.19065857 450.95285034]
[195.90759277 444.80902100]
[191.93550110 430.34451294]
[187.96339417 415.87997437]
[183.88372803 401.44543457]
[179.69671631 387.04165649]
[175.50970459 372.63787842]
[164.52732849 362.57623291]
[168.10499573 347.16482544]
[163.91798401 332.76104736]
[159.73097229 318.35726929]
[155.54396057 303.95349121]
[151.35694885 289.54971313]
[147.16993713 275.14590454]
[142.98292542 260.74212646]
[128.48526001 257.32406616]
[117.57241058 247.03982544]
[113.24388123 232.57849121]
[116.75806427 217.79515076]
[127.26862335 206.68319702]
[123.08161163 192.27941895]
[118.57398987 177.97273254]
[113.74798584 163.77027893]
[108.92198944 149.56782532]
[97.50129700 140.00659180]
[100.38722992 124.45082855]
[95.56123352 110.24837494]
[90.62963867 96.08223724]
[85.59272766 81.95320892]
[80.55580902 67.82418060]
[75.51889038 53.69514847]
[70.48197937 39.56612015]
[59.18444061 33.34289932]
[55.28005600 21.47110176]
[60.34379196 10.48542309]
[55.51779556 -3.71703291]
[50.69179916 -17.91948891]
[45.76020432 -32.08562469]
[40.72328568 -46.21465302]
[35.68637085 -60.34368134]
[21.38586807 -71.94441986]
[25.21854019 -89.06977081]
[19.97182274 -103.12223816]
[5.87130451 -109.74139404]
[0.75056905 -124.06733704]
[7.14781475 -137.46923828]
[1.90109646 -151.52169800]
[-3.34562159 -165.57417297]
[-8.69680786 -179.58720398]
[-14.15216446 -193.55999756]
[-19.60752106 -207.53279114]
[-25.06287956 -221.50558472]
[-30.51823616 -235.47839355]
[-35.97359467 -249.45118713]
[-40.37639618 -235.11189270]
[-51.76366806 -225.34817505]
[-66.60693359 -223.18544006]
[-80.30684662 -229.29382324]
[-88.61834717 -241.78057861]
[-88.96601105 -256.77655029]
[-81.24212646 -269.63507080]
[-67.84001923 -276.37179565]
[-52.91247177 -274.89926147]
[-41.08480072 -265.67355347]
[-44.62446976 -280.24993896]
[-48.16414261 -294.82632446]
[-51.70381546 -309.40267944]
[-55.24348831 -323.97906494]
[-58.78316116 -338.55545044]
[-62.32283401 -353.13180542]
[-65.86250305 -367.70819092]
[-80.87079620 -366.74774170]
[-95.81782532 -368.40826416]
[-110.24938202 -372.63925171]
[-123.72690582 -379.31213379]
[-135.84082031 -388.22415161]
[-146.22302246 -399.10449219]
[-154.55796814 -411.62246704]
[-160.59240723 -425.39767456]
[-164.14292908 -440.01153564]
[-165.10166931 -455.01992798]
[-163.43946838 -469.96676636]
[-159.20683289 -484.39785767]
[-152.53240967 -497.87460327]
[-143.61901855 -509.98751831]
[-132.73753357 -520.36846924]
[-120.21861267 -528.70202637]
[-106.44270325 -534.73486328]
[-91.82844543 -538.28375244]
[-76.81993866 -539.24078369]
[-61.87328339 -537.57690430]
[-47.44268417 -533.34265137]
[-33.96667480 -526.66668701]
[-21.85477829 -517.75189209]
[-11.47505665 -506.86923218]
[-3.14294004 -494.34936523]
[2.88836813 -480.57278442]
[6.43558311 -465.95812988]
[7.39090919 -450.94952393]
[5.72531509 -436.00305176]
[1.48941624 -421.57293701]
[-5.18806314 -408.09768677]
[-14.10420227 -395.98678589]
[-24.98804855 -385.60830688]
[-37.50885773 -377.27761841]
[-51.28612900 -371.24786377]
[-47.74645996 -356.67147827]
[-44.20678711 -342.09512329]
[-40.66711426 -327.51873779]
[-37.12744141 -312.94235229]
[-33.58776855 -298.36599731]
[-30.04809570 -283.78961182]
[-26.50842285 -269.21322632]
[-22.00079536 -254.90653992]
[-16.54543877 -240.93374634]
[-11.09008121 -226.96095276]
[-5.63472366 -212.98814392]
[-0.17936680 -199.01535034]
[5.27599049 -185.04255676]
[10.63687992 -179.95506287]
[10.70684910 -170.82089233]
[15.95356750 -156.76841736]
[21.20028687 -142.71595764]
[34.81539536 -136.78599548]
[40.33649445 -122.60952759]
[34.02429199 -108.36895752]
[39.27101135 -94.31649017]
[50.14226151 -89.01153564]
[54.62839508 -77.34712982]
[49.81539917 -65.38059998]
[54.85231781 -51.25156784]
[59.88923264 -37.12253952]
[65.09627533 -31.87768173]
[64.89425659 -22.74548531]
[69.72025299 -8.54303074]
[74.54624939 5.65942526]
[88.34796906 16.49821472]
[84.61100769 34.52920532]
[89.64791870 48.65823364]
[94.68483734 62.78726196]
[99.72175598 76.91629028]
[104.75866699 91.04531860]
[110.21657562 96.97692108]
[109.76368713 105.42237854]
[114.58969116 119.62483215]
[126.35557556 130.20190430]
[123.12444305 144.74182129]
[127.95044708 158.94427490]
[132.77644348 173.14672852]
[136.70318604 176.58589172]
[138.71672058 180.76907349]
[138.85401917 184.84291077]
[137.48539734 188.09240723]
[141.67240906 202.49618530]
[156.50196838 206.24206543]
[167.39355469 216.83781433]
[171.49194336 231.36604309]
[167.79283142 245.89782715]
[157.38670349 256.55511475]
[161.57371521 270.95889282]
[165.76072693 285.36270142]
[169.94773865 299.76647949]
[174.13475037 314.17025757]
[178.32176208 328.57403564]
[182.50877380 342.97781372]
[193.79063416 354.06973267]
[189.91349792 368.45086670]
[194.10050964 382.85464478]
[198.28750610 397.25842285]
[203.68795776 404.62542725]
[202.42791748 411.90789795]
[206.40002441 426.37240601]
[210.37211609 440.83694458]
[225.30299377 439.11376953]
[240.32192993 439.69012451]
[255.07684326 442.55242920]
[269.22186279 447.63366699]
[282.42541504 454.81463623]
[294.37799072 463.92709351]
[304.79940796 474.75735474]
[313.44534302 487.05157471]
[320.11315918 500.52157593]
[324.64654541 514.85156250]
[326.93920898 529.70568848]
[326.93743896 544.73565674]
[324.64126587 559.58917236]
[320.10449219 573.91815186]
[313.43350220 587.38653564]
[304.78463745 599.67871094]
[294.36068726 610.50653076]
[282.40597534 619.61614990]
[269.20071411 626.79400635]
[255.05448914 631.87188721]
[240.29890442 634.73071289]
[225.27983093 635.30352783]
[210.34936523 633.57684326]
[195.85746765 629.59118652]
[182.14387512 623.43994141]
[169.53004456 615.26733398]
[158.31166077 605.26489258]
[148.75170898 593.66717529]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 182]
[12 181]
[13 180]
[14 178]
[15 177]
[16 176]
[18 174]
[19 173]
[20 172]
[21 171]
[22 170]
[23 169]
[24 168]
[29 163]
[30 162]
[31 158]
[32 157]
[33 156]
[35 154]
[36 153]
[37 151]
[38 150]
[39 149]
[40 148]
[41 147]
[44 145]
[45 144]
[46 143]
[47 141]
[48 140]
[49 139]
[51 136]
[52 135]
[55 132]
[56 131]
[57 130]
[58 128]
[59 127]
[60 126]
[61 125]
[62 124]
[63 123]
[73 122]
[74 121]
[75 120]
[76 119]
[77 118]
[78 117]
[79 116]
[80 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
