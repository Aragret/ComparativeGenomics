%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAGxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[68.93020630 632.49682617]
[54.57801056 636.88409424]
[39.92582703 640.13183594]
[25.06400108 642.21990967]
[10.08415604 643.13555908]
[-4.92134857 642.87304688]
[-19.85999870 641.43402100]
[-34.63969040 638.82733154]
[-49.16930389 635.06909180]
[-63.35925293 630.18243408]
[-77.12205505 624.19744873]
[-90.37285614 617.15118408]
[-103.02995300 609.08691406]
[-115.01531982 600.05450439]
[-126.25505829 590.10949707]
[-136.67987061 579.31335449]
[-146.22547913 567.73254395]
[-154.83303833 555.43847656]
[-162.44946289 542.50695801]
[-169.02781677 529.01770020]
[-174.52752686 515.05395508]
[-178.91470337 500.70169067]
[-182.16227722 486.04946899]
[-184.25022888 471.18762207]
[-185.16569519 456.20776367]
[-184.90301514 441.20227051]
[-183.46382141 426.26364136]
[-180.85699463 411.48397827]
[-177.09858704 396.95440674]
[-172.21179199 382.76449585]
[-166.22671509 369.00173950]
[-159.18028259 355.75103760]
[-151.11592102 343.09399414]
[-142.08334351 331.10873413]
[-132.13825989 319.86911011]
[-121.34197998 309.44439697]
[-109.76106262 299.89889526]
[-97.46690369 291.29147339]
[-84.53531647 283.67517090]
[-71.04602051 277.09695435]
[-57.08218002 271.59738159]
[-42.72989273 267.21035767]
[-28.07764626 263.96295166]
[-13.21577549 261.87515259]
[1.76408744 260.95983887]
[16.76958656 261.22265625]
[31.70820808 262.66198730]
[46.48784637 265.26898193]
[50.24414825 250.74691772]
[54.00044632 236.22486877]
[57.75674820 221.70280457]
[56.38842010 214.43992615]
[61.67858887 206.99331665]
[65.65068817 192.52879333]
[69.62277985 178.06427002]
[73.37908173 163.54220581]
[76.91875458 148.96583557]
[62.94606400 154.42146301]
[49.89292145 147.03125000]
[47.38161469 132.24296570]
[57.26338959 120.95799255]
[72.25376892 121.49519348]
[81.30206299 133.45693970]
[85.91607666 119.18421173]
[90.53008270 104.91147614]
[93.74335480 90.25968933]
[95.52582550 75.36597443]
[97.30828857 60.47225571]
[91.26570129 45.85043335]
[100.46057129 34.13277435]
[102.24304199 19.23905563]
[104.02550507 4.34533834]
[105.80796814 -10.54837894]
[106.92362213 -25.50683212]
[107.37022400 -40.50018311]
[107.81683350 -55.49353027]
[108.26343536 -70.48688507]
[94.78785706 -77.56996155]
[85.76070404 -89.75181580]
[82.92942810 -104.58435059]
[86.80298615 -119.11557770]
[96.56131744 -130.47711182]
[110.22828674 -136.45033264]
[110.67488861 -151.44367981]
[111.12149811 -166.43702698]
[111.56809998 -181.43038940]
[112.01470947 -196.42373657]
[112.01470947 -211.42373657]
[111.56809998 -226.41708374]
[111.12149811 -241.41043091]
[110.67488861 -256.40377808]
[110.22828674 -271.39712524]
[109.78167725 -286.39047241]
[109.33507538 -301.38381958]
[94.71766663 -305.19277954]
[81.76618195 -312.96682739]
[71.53054047 -324.07577515]
[64.84049988 -337.61901855]
[62.23839188 -352.49871826]
[63.93515396 -367.50866699]
[69.79324341 -381.43200684]
[79.33776093 -393.14007568]
[91.79499054 -401.68371582]
[106.15505981 -406.37039185]
[121.25388336 -406.82015991]
[135.86746216 -402.99652100]
[148.81112671 -395.20947266]
[159.03559875 -384.09024048]
[165.71203613 -370.54028320]
[168.29919434 -355.65795898]
[166.58735657 -340.64974976]
[160.71528625 -326.73229980]
[151.15899658 -315.03384399]
[138.69320679 -306.50268555]
[124.32842255 -301.83044434]
[124.77503204 -286.83709717]
[125.22163391 -271.84375000]
[125.66824341 -256.85040283]
[126.11484528 -241.85704041]
[126.56145477 -226.86369324]
[127.00805664 -211.87034607]
[128.95353699 -209.85211182]
[130.21679688 -206.94165039]
[130.45399475 -203.39494324]
[129.42019653 -199.58760071]
[127.00805664 -195.97712708]
[126.56145477 -180.98377991]
[126.11484528 -165.99043274]
[125.66824341 -150.99708557]
[125.22163391 -136.00372314]
[138.50883484 -129.22761536]
[147.57362366 -117.30540466]
[150.57539368 -102.56938171]
[146.86628723 -87.93166351]
[137.13006592 -76.30871582]
[123.25679016 -70.04027557]
[122.81018066 -55.04692459]
[122.36357117 -40.05357742]
[121.91696930 -25.06022644]
[133.54890442 -34.53113937]
[148.48428345 -33.14030838]
[158.16744995 -21.68446541]
[157.05143738 -6.72603846]
[145.77555847 3.16610694]
[130.79914856 2.32530069]
[120.70169067 -8.76591301]
[118.91921997 6.12780428]
[117.13675690 21.02152252]
[115.35428619 35.91523743]
[121.52436829 49.47176361]
[112.20200348 62.25472260]
[110.41954041 77.14843750]
[108.63707733 92.04216003]
[117.95249176 80.28533173]
[131.20652771 73.26176453]
[146.16564941 72.15504456]
[160.30897522 77.15168762]
[171.25309753 87.40965271]
[177.15376282 101.20030975]
[177.01658630 116.19968414]
[170.86470032 129.88011169]
[159.73478699 139.93621826]
[145.50244141 144.67335510]
[130.56607056 143.29322815]
[117.44270325 136.02842712]
[108.34386444 124.10319519]
[104.80281830 109.52548981]
[100.18880463 123.79821777]
[95.57479858 138.07095337]
[91.49513245 152.50550842]
[87.95545959 167.08187866]
[89.44721985 173.52285767]
[87.72132111 178.93750000]
[84.08730316 182.03636169]
[80.11521149 196.50088501]
[76.14311218 210.96540833]
[72.27880859 225.45910645]
[68.52250671 239.98117065]
[64.76620483 254.50321960]
[61.00990677 269.02529907]
[75.19995880 273.91165161]
[88.96288300 279.89630127]
[102.21382141 286.94232178]
[114.87108612 295.00631714]
[126.85663605 304.03851318]
[138.09657288 313.98324585]
[148.52160645 324.77920532]
[158.06745911 336.35983276]
[166.67526245 348.65374756]
[174.29196167 361.58508301]
[180.87059021 375.07418823]
[186.37059021 389.03787231]
[190.75804138 403.39001465]
[194.00592041 418.04214478]
[196.09417725 432.90396118]
[197.00994873 447.88378906]
[196.74757385 462.88931274]
[195.30870056 477.82797241]
[192.70216370 492.60769653]
[188.94406128 507.13732910]
[184.05754089 521.32733154]
[178.07275391 535.09020996]
[171.02659607 548.34106445]
[162.96247864 560.99822998]
[153.93016052 572.98370361]
[143.98530579 584.22357178]
[133.18923950 594.64849854]
[121.60851288 604.19421387]
[109.31452942 612.80187988]
[96.38309479 620.41845703]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 180]
[49 179]
[50 178]
[51 177]
[53 176]
[54 175]
[55 174]
[56 171]
[57 170]
[63 169]
[64 168]
[65 167]
[66 153]
[67 152]
[68 151]
[70 149]
[71 148]
[72 147]
[73 146]
[74 139]
[75 138]
[76 137]
[77 136]
[83 130]
[84 129]
[85 128]
[86 127]
[87 126]
[88 121]
[89 120]
[90 119]
[91 118]
[92 117]
[93 116]
[94 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
